

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 24 20:51:12 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3774	offset	0
   248 ;;_main$3770	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5808	offset	0
   315 ;;_vfpfcnvrt$5819	offset	2
   316 ;;_vfpfcnvrt$5807	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5793	offset	0
   327 ;;_xtoa$5792	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6599	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5765	offset	0
   367 ;;_efgtoa$5764	offset	2
   368 ;;_efgtoa$5763	offset	4
   369 ;;_efgtoa$5759	offset	6
   370 ;;_efgtoa$5755	offset	8
   371 ;;_efgtoa$5754	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6584	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5731	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6315	offset	0
   460 ;;_atoi$6313	offset	2
   461 ;;_atoi$6314	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6364	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5808	offset	0
   581 ;;_vfpfcnvrt$5819	offset	2
   582 ;;_vfpfcnvrt$5807	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5793	offset	0
   593 ;;_xtoa$5792	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6599	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5765	offset	0
   633 ;;_efgtoa$5764	offset	2
   634 ;;_efgtoa$5763	offset	4
   635 ;;_efgtoa$5759	offset	6
   636 ;;_efgtoa$5755	offset	8
   637 ;;_efgtoa$5754	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6584	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5731	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6315	offset	0
   726 ;;_atoi$6313	offset	2
   727 ;;_atoi$6314	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6364	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016B70                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016B70  FF                 	db	255
   750  016B71  00                 	db	0
   751  016B72  FF                 	db	255
   752  016B73  00                 	db	0
   753  016B74  FF                 	db	255
   754  016B75  00                 	db	0
   755  016B76  FF                 	db	255
   756  016B77  00                 	db	0
   757  016B78  FF                 	db	255
   758  016B79  00                 	db	0
   759  016B7A  FF                 	db	255
   760  016B7B  00                 	db	0
   761  016B7C  FF                 	db	255
   762  016B7D  00                 	db	0
   763  016B7E  FF                 	db	255
   764  016B7F  00                 	db	0
   765  016B80  00                 	db	0
   766  016B81  00                 	db	0
   767  016B82  00                 	db	0
   768  016B83  00                 	db	0
   769  016B84  00                 	db	0
   770  016B85  00                 	db	0
   771  016B86  00                 	db	0
   772  016B87  00                 	db	0
   773  016B88  00                 	db	0
   774  016B89  00                 	db	0
   775  016B8A  00                 	db	0
   776  016B8B  00                 	db	0
   777  016B8C  00                 	db	0
   778  016B8D  00                 	db	0
   779  016B8E  00                 	db	0
   780  016B8F  00                 	db	0
   781  016B90  00                 	db	0
   782  016B91  00                 	db	0
   783  016B92  00                 	db	0
   784  016B93  00                 	db	0
   785  016B94  00                 	db	0
   786  016B95  00                 	db	0
   787  016B96  00                 	db	0
   788  016B97  00                 	db	0
   789  016B98  00                 	db	0
   790  016B99  00                 	db	0
   791  016B9A  00                 	db	0
   792  016B9B  00                 	db	0
   793  016B9C  00                 	db	0
   794  016B9D  00                 	db	0
   795  016B9E  00                 	db	0
   796  016B9F  00                 	db	0
   797  016BA0  00                 	db	0
   798  016BA1  00                 	db	0
   799  016BA2  00                 	db	0
   800  016BA3  00                 	db	0
   801  016BA4  00                 	db	0
   802  016BA5  00                 	db	0
   803  016BA6  00                 	db	0
   804  016BA7  00                 	db	0
   805  016BA8  00                 	db	0
   806  016BA9  00                 	db	0
   807  016BAA  00                 	db	0
   808  016BAB  00                 	db	0
   809  016BAC  00                 	db	0
   810  016BAD  00                 	db	0
   811  016BAE  00                 	db	0
   812  016BAF  00                 	db	0
   813  016BB0  00                 	db	0
   814  016BB1  00                 	db	0
   815  016BB2  00                 	db	0
   816  016BB3  00                 	db	0
   817  016BB4  00                 	db	0
   818  016BB5  00                 	db	0
   819  016BB6  00                 	db	0
   820  016BB7  00                 	db	0
   821  016BB8  00                 	db	0
   822  016BB9  00                 	db	0
   823  016BBA  00                 	db	0
   824  016BBB  00                 	db	0
   825  016BBC  00                 	db	0
   826  016BBD  00                 	db	0
   827  016BBE  00                 	db	0
   828  016BBF  00                 	db	0
   829  016BC0  00                 	db	0
   830  016BC1  00                 	db	0
   831  016BC2  00                 	db	0
   832  016BC3  00                 	db	0
   833  016BC4  00                 	db	0
   834  016BC5  00                 	db	0
   835  016BC6  00                 	db	0
   836  016BC7  00                 	db	0
   837  016BC8  00                 	db	0
   838  016BC9  00                 	db	0
   839  016BCA  00                 	db	0
   840  016BCB  00                 	db	0
   841  016BCC  00                 	db	0
   842  016BCD  00                 	db	0
   843  016BCE  00                 	db	0
   844  016BCF  00                 	db	0
   845  016BD0  00                 	db	0
   846  016BD1  00                 	db	0
   847  016BD2  00                 	db	0
   848  016BD3  00                 	db	0
   849  016BD4  00                 	db	0
   850  016BD5  00                 	db	0
   851  016BD6  00                 	db	0
   852  016BD7  00                 	db	0
   853  016BD8  00                 	db	0
   854  016BD9  00                 	db	0
   855  016BDA  00                 	db	0
   856  016BDB  00                 	db	0
   857  016BDC  00                 	db	0
   858  016BDD  00                 	db	0
   859  016BDE  00                 	db	0
   860  016BDF  00                 	db	0
   861  016BE0  00                 	db	0
   862  016BE1  00                 	db	0
   863  016BE2  00                 	db	0
   864  016BE3  00                 	db	0
   865  016BE4  00                 	db	0
   866  016BE5  00                 	db	0
   867  016BE6  00                 	db	0
   868  016BE7  00                 	db	0
   869  016BE8  00                 	db	0
   870  016BE9  00                 	db	0
   871  016BEA  00                 	db	0
   872  016BEB  00                 	db	0
   873  016BEC  00                 	db	0
   874  016BED  00                 	db	0
   875  016BEE  00                 	db	0
   876  016BEF  00                 	db	0
   877  016BF0  00                 	db	0
   878  016BF1  00                 	db	0
   879  016BF2  00                 	db	0
   880  016BF3  00                 	db	0
   881  016BF4  00                 	db	0
   882  016BF5  00                 	db	0
   883  016BF6  00                 	db	0
   884  016BF7  00                 	db	0
   885  016BF8  00                 	db	0
   886  016BF9  00                 	db	0
   887  016BFA  00                 	db	0
   888  016BFB  00                 	db	0
   889  016BFC  00                 	db	0
   890  016BFD  00                 	db	0
   891  016BFE  00                 	db	0
   892  016BFF  00                 	db	0
   893  016C00  00                 	db	0
   894  016C01  00                 	db	0
   895  016C02  00                 	db	0
   896  016C03  00                 	db	0
   897  016C04  00                 	db	0
   898  016C05  00                 	db	0
   899  016C06  00                 	db	0
   900  016C07  00                 	db	0
   901  016C08  00                 	db	0
   902  016C09  00                 	db	0
   903  016C0A  00                 	db	0
   904  016C0B  00                 	db	0
   905  016C0C  00                 	db	0
   906  016C0D  00                 	db	0
   907  016C0E  00                 	db	0
   908  016C0F  00                 	db	0
   909  016C10  00                 	db	0
   910  016C11  00                 	db	0
   911  016C12  00                 	db	0
   912  016C13  00                 	db	0
   913  016C14  00                 	db	0
   914  016C15  00                 	db	0
   915  016C16  00                 	db	0
   916  016C17  00                 	db	0
   917  016C18  00                 	db	0
   918  016C19  00                 	db	0
   919  016C1A  00                 	db	0
   920  016C1B  00                 	db	0
   921  016C1C  00                 	db	0
   922  016C1D  00                 	db	0
   923  016C1E  00                 	db	0
   924  016C1F  00                 	db	0
   925  016C20  00                 	db	0
   926  016C21  00                 	db	0
   927  016C22  00                 	db	0
   928  016C23  00                 	db	0
   929  016C24  00                 	db	0
   930  016C25  00                 	db	0
   931  016C26  00                 	db	0
   932  016C27  00                 	db	0
   933  016C28  00                 	db	0
   934  016C29  00                 	db	0
   935  016C2A  00                 	db	0
   936  016C2B  00                 	db	0
   937  016C2C  00                 	db	0
   938  016C2D  00                 	db	0
   939  016C2E  00                 	db	0
   940  016C2F  00                 	db	0
   941  016C30  00                 	db	0
   942  016C31  00                 	db	0
   943  016C32  00                 	db	0
   944  016C33  00                 	db	0
   945  016C34  00                 	db	0
   946  016C35  00                 	db	0
   947  016C36  00                 	db	0
   948  016C37  00                 	db	0
   949  016C38  00                 	db	0
   950  016C39  00                 	db	0
   951  016C3A  00                 	db	0
   952  016C3B  00                 	db	0
   953  016C3C  00                 	db	0
   954  016C3D  00                 	db	0
   955  016C3E  00                 	db	0
   956  016C3F  00                 	db	0
   957  016C40  00                 	db	0
   958  016C41  00                 	db	0
   959  016C42  00                 	db	0
   960  016C43  00                 	db	0
   961  016C44  00                 	db	0
   962  016C45  00                 	db	0
   963  016C46  00                 	db	0
   964  016C47  00                 	db	0
   965  016C48  00                 	db	0
   966  016C49  00                 	db	0
   967  016C4A  00                 	db	0
   968  016C4B  00                 	db	0
   969  016C4C  00                 	db	0
   970  016C4D  00                 	db	0
   971  016C4E  00                 	db	0
   972  016C4F  00                 	db	0
   973  016C50  00                 	db	0
   974  016C51  00                 	db	0
   975  016C52  00                 	db	0
   976  016C53  00                 	db	0
   977  016C54  00                 	db	0
   978  016C55  00                 	db	0
   979  016C56  00                 	db	0
   980  016C57  00                 	db	0
   981  016C58  00                 	db	0
   982  016C59  00                 	db	0
   983  016C5A  00                 	db	0
   984  016C5B  00                 	db	0
   985  016C5C  00                 	db	0
   986  016C5D  00                 	db	0
   987  016C5E  00                 	db	0
   988  016C5F  00                 	db	0
   989  016C60  00                 	db	0
   990  016C61  00                 	db	0
   991  016C62  00                 	db	0
   992  016C63  00                 	db	0
   993  016C64  00                 	db	0
   994  016C65  00                 	db	0
   995  016C66  00                 	db	0
   996  016C67  00                 	db	0
   997  016C68  00                 	db	0
   998  016C69  00                 	db	0
   999  016C6A  00                 	db	0
  1000  016C6B  00                 	db	0
  1001  016C6C  00                 	db	0
  1002  016C6D  00                 	db	0
  1003  016C6E  00                 	db	0
  1004  016C6F  00                 	db	0
  1005  016C70  00                 	db	0
  1006  016C71  00                 	db	0
  1007  016C72  00                 	db	0
  1008  016C73  00                 	db	0
  1009  016C74  00                 	db	0
  1010  016C75  00                 	db	0
  1011  016C76  00                 	db	0
  1012  016C77  00                 	db	0
  1013  016C78  00                 	db	0
  1014  016C79  00                 	db	0
  1015  016C7A  00                 	db	0
  1016  016C7B  00                 	db	0
  1017  016C7C  00                 	db	0
  1018  016C7D  00                 	db	0
  1019  016C7E  00                 	db	0
  1020  016C7F  00                 	db	0
  1021  016C80  00                 	db	0
  1022  016C81  00                 	db	0
  1023  016C82  00                 	db	0
  1024  016C83  00                 	db	0
  1025  016C84  00                 	db	0
  1026  016C85  00                 	db	0
  1027  016C86  00                 	db	0
  1028  016C87  00                 	db	0
  1029  016C88  00                 	db	0
  1030  016C89  00                 	db	0
  1031  016C8A  00                 	db	0
  1032  016C8B  00                 	db	0
  1033  016C8C  00                 	db	0
  1034  016C8D  00                 	db	0
  1035  016C8E  00                 	db	0
  1036  016C8F  00                 	db	0
  1037  016C90  00                 	db	0
  1038  016C91  00                 	db	0
  1039  016C92  00                 	db	0
  1040  016C93  00                 	db	0
  1041  016C94  00                 	db	0
  1042  016C95  00                 	db	0
  1043  016C96  00                 	db	0
  1044  016C97  00                 	db	0
  1045  016C98  00                 	db	0
  1046  016C99  00                 	db	0
  1047  016C9A  00                 	db	0
  1048  016C9B  00                 	db	0
  1049  016C9C  00                 	db	0
  1050  016C9D  00                 	db	0
  1051  016C9E  00                 	db	0
  1052  016C9F  00                 	db	0
  1053  016CA0  00                 	db	0
  1054  016CA1  00                 	db	0
  1055  016CA2  00                 	db	0
  1056  016CA3  00                 	db	0
  1057  016CA4  00                 	db	0
  1058  016CA5  00                 	db	0
  1059  016CA6  00                 	db	0
  1060  016CA7  00                 	db	0
  1061  016CA8  00                 	db	0
  1062  016CA9  00                 	db	0
  1063  016CAA  00                 	db	0
  1064  016CAB  00                 	db	0
  1065  016CAC  00                 	db	0
  1066  016CAD  00                 	db	0
  1067  016CAE  00                 	db	0
  1068  016CAF  00                 	db	0
  1069  016CB0  00                 	db	0
  1070  016CB1  00                 	db	0
  1071  016CB2  00                 	db	0
  1072  016CB3  00                 	db	0
  1073  016CB4  00                 	db	0
  1074  016CB5  00                 	db	0
  1075  016CB6  00                 	db	0
  1076  016CB7  00                 	db	0
  1077  016CB8  00                 	db	0
  1078  016CB9  00                 	db	0
  1079  016CBA  00                 	db	0
  1080  016CBB  00                 	db	0
  1081  016CBC  00                 	db	0
  1082  016CBD  00                 	db	0
  1083  016CBE  00                 	db	0
  1084  016CBF  00                 	db	0
  1085  016CC0  00                 	db	0
  1086  016CC1  00                 	db	0
  1087  016CC2  00                 	db	0
  1088  016CC3  00                 	db	0
  1089  016CC4  00                 	db	0
  1090  016CC5  00                 	db	0
  1091  016CC6  00                 	db	0
  1092  016CC7  00                 	db	0
  1093  016CC8  00                 	db	0
  1094  016CC9  00                 	db	0
  1095  016CCA  00                 	db	0
  1096  016CCB  00                 	db	0
  1097  016CCC  00                 	db	0
  1098  016CCD  00                 	db	0
  1099  016CCE  00                 	db	0
  1100  016CCF  00                 	db	0
  1101  016CD0  00                 	db	0
  1102  016CD1  00                 	db	0
  1103  016CD2  00                 	db	0
  1104  016CD3  00                 	db	0
  1105  016CD4  00                 	db	0
  1106  016CD5  00                 	db	0
  1107  016CD6  00                 	db	0
  1108  016CD7  00                 	db	0
  1109  016CD8  00                 	db	0
  1110  016CD9  00                 	db	0
  1111  016CDA  00                 	db	0
  1112  016CDB  00                 	db	0
  1113  016CDC  00                 	db	0
  1114  016CDD  00                 	db	0
  1115  016CDE  00                 	db	0
  1116  016CDF  00                 	db	0
  1117  016CE0  00                 	db	0
  1118  016CE1  00                 	db	0
  1119  016CE2  00                 	db	0
  1120  016CE3  00                 	db	0
  1121  016CE4  00                 	db	0
  1122  016CE5  00                 	db	0
  1123  016CE6  00                 	db	0
  1124  016CE7  00                 	db	0
  1125  016CE8  00                 	db	0
  1126  016CE9  00                 	db	0
  1127  016CEA  00                 	db	0
  1128  016CEB  00                 	db	0
  1129  016CEC  00                 	db	0
  1130  016CED  00                 	db	0
  1131  016CEE  00                 	db	0
  1132  016CEF  00                 	db	0
  1133  016CF0  00                 	db	0
  1134  016CF1  00                 	db	0
  1135  016CF2  00                 	db	0
  1136  016CF3  00                 	db	0
  1137  016CF4  00                 	db	0
  1138  016CF5  00                 	db	0
  1139  016CF6  00                 	db	0
  1140  016CF7  00                 	db	0
  1141  016CF8  00                 	db	0
  1142  016CF9  00                 	db	0
  1143  016CFA  00                 	db	0
  1144  016CFB  00                 	db	0
  1145  016CFC  00                 	db	0
  1146  016CFD  00                 	db	0
  1147  016CFE  00                 	db	0
  1148  016CFF  00                 	db	0
  1149  016D00  00                 	db	0
  1150  016D01  00                 	db	0
  1151  016D02  00                 	db	0
  1152  016D03  00                 	db	0
  1153  016D04  00                 	db	0
  1154  016D05  00                 	db	0
  1155  016D06  00                 	db	0
  1156  016D07  00                 	db	0
  1157  016D08  00                 	db	0
  1158  016D09  00                 	db	0
  1159  016D0A  00                 	db	0
  1160  016D0B  00                 	db	0
  1161  016D0C  00                 	db	0
  1162  016D0D  00                 	db	0
  1163  016D0E  00                 	db	0
  1164  016D0F  00                 	db	0
  1165  016D10  00                 	db	0
  1166  016D11  00                 	db	0
  1167  016D12  00                 	db	0
  1168  016D13  00                 	db	0
  1169  016D14  00                 	db	0
  1170  016D15  00                 	db	0
  1171  016D16  00                 	db	0
  1172  016D17  00                 	db	0
  1173  016D18  00                 	db	0
  1174  016D19  00                 	db	0
  1175  016D1A  00                 	db	0
  1176  016D1B  00                 	db	0
  1177  016D1C  00                 	db	0
  1178  016D1D  00                 	db	0
  1179  016D1E  00                 	db	0
  1180  016D1F  00                 	db	0
  1181  016D20  00                 	db	0
  1182  016D21  00                 	db	0
  1183  016D22  00                 	db	0
  1184  016D23  00                 	db	0
  1185  016D24  00                 	db	0
  1186  016D25  00                 	db	0
  1187  016D26  00                 	db	0
  1188  016D27  00                 	db	0
  1189  016D28  00                 	db	0
  1190  016D29  00                 	db	0
  1191  016D2A  00                 	db	0
  1192  016D2B  00                 	db	0
  1193  016D2C  00                 	db	0
  1194  016D2D  00                 	db	0
  1195  016D2E  00                 	db	0
  1196  016D2F  00                 	db	0
  1197  016D30  00                 	db	0
  1198  016D31  00                 	db	0
  1199  016D32  00                 	db	0
  1200  016D33  00                 	db	0
  1201  016D34  00                 	db	0
  1202  016D35  00                 	db	0
  1203  016D36  00                 	db	0
  1204  016D37  00                 	db	0
  1205  016D38  00                 	db	0
  1206  016D39  00                 	db	0
  1207  016D3A  00                 	db	0
  1208  016D3B  00                 	db	0
  1209  016D3C  00                 	db	0
  1210  016D3D  00                 	db	0
  1211  016D3E  00                 	db	0
  1212  016D3F  00                 	db	0
  1213  016D40  00                 	db	0
  1214  016D41  00                 	db	0
  1215  016D42  00                 	db	0
  1216  016D43  00                 	db	0
  1217  016D44  00                 	db	0
  1218  016D45  00                 	db	0
  1219  016D46  00                 	db	0
  1220  016D47  00                 	db	0
  1221  016D48  00                 	db	0
  1222  016D49  00                 	db	0
  1223  016D4A  00                 	db	0
  1224  016D4B  00                 	db	0
  1225  016D4C  00                 	db	0
  1226  016D4D  00                 	db	0
  1227  016D4E  00                 	db	0
  1228  016D4F  00                 	db	0
  1229  016D50  00                 	db	0
  1230  016D51  00                 	db	0
  1231  016D52  00                 	db	0
  1232  016D53  00                 	db	0
  1233  016D54  00                 	db	0
  1234  016D55  00                 	db	0
  1235  016D56  00                 	db	0
  1236  016D57  00                 	db	0
  1237  016D58  00                 	db	0
  1238  016D59  00                 	db	0
  1239  016D5A  00                 	db	0
  1240  016D5B  00                 	db	0
  1241  016D5C  00                 	db	0
  1242  016D5D  00                 	db	0
  1243  016D5E  00                 	db	0
  1244  016D5F  00                 	db	0
  1245  016D60  00                 	db	0
  1246  016D61  00                 	db	0
  1247  016D62  00                 	db	0
  1248  016D63  00                 	db	0
  1249  016D64  00                 	db	0
  1250  016D65  00                 	db	0
  1251  016D66  00                 	db	0
  1252  016D67  00                 	db	0
  1253  016D68  00                 	db	0
  1254  016D69  00                 	db	0
  1255  016D6A  00                 	db	0
  1256  016D6B  00                 	db	0
  1257  016D6C  00                 	db	0
  1258  016D6D  00                 	db	0
  1259  016D6E  00                 	db	0
  1260  016D6F  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016D70  0000               	dw	0
  1264  016D72  0000               	dw	0
  1265  016D74  0000               	dw	0
  1266  016D76  0000               	dw	0
  1267  016D78  0000               	dw	0
  1268  016D7A  0000               	dw	0
  1269  016D7C  0000               	dw	0
  1270  016D7E  0000               	dw	0
  1271  016D80  0000               	dw	0
  1272  016D82  0000               	dw	0
  1273  016D84  0000               	dw	0
  1274  016D86  0000               	dw	0
  1275  016D88  0000               	dw	0
  1276  016D8A  0000               	dw	0
  1277  016D8C  0000               	dw	0
  1278  016D8E  0000               	dw	0
  1279  016D90  0000               	dw	0
  1280  016D92  0000               	dw	0
  1281  016D94  0000               	dw	0
  1282  016D96  0000               	dw	0
  1283  016D98  0000               	dw	0
  1284  016D9A  0000               	dw	0
  1285  016D9C  0000               	dw	0
  1286  016D9E  0000               	dw	0
  1287  016DA0  0000               	dw	0
  1288  016DA2  0000               	dw	0
  1289  016DA4  0000               	dw	0
  1290  016DA6  0000               	dw	0
  1291  016DA8  0000               	dw	0
  1292  016DAA  0000               	dw	0
  1293  016DAC  0000               	dw	0
  1294  016DAE  0000               	dw	0
  1295  016DB0  0000               	dw	0
  1296  016DB2  0000               	dw	0
  1297  016DB4  0000               	dw	0
  1298  016DB6  0000               	dw	0
  1299  016DB8  0000               	dw	0
  1300  016DBA  0000               	dw	0
  1301  016DBC  0000               	dw	0
  1302  016DBE  0000               	dw	0
  1303  016DC0  0000               	dw	0
  1304  016DC2  0000               	dw	0
  1305  016DC4  0000               	dw	0
  1306  016DC6  0000               	dw	0
  1307  016DC8  0000               	dw	0
  1308  016DCA  0000               	dw	0
  1309  016DCC  0000               	dw	0
  1310  016DCE  0000               	dw	0
  1311  016DD0  0000               	dw	0
  1312  016DD2  0000               	dw	0
  1313  016DD4  0000               	dw	0
  1314  016DD6  0000               	dw	0
  1315  016DD8  0000               	dw	0
  1316  016DDA  0000               	dw	0
  1317  016DDC  0000               	dw	0
  1318  016DDE  0000               	dw	0
  1319  016DE0  0000               	dw	0
  1320  016DE2  0000               	dw	0
  1321  016DE4  0000               	dw	0
  1322  016DE6  0000               	dw	0
  1323  016DE8  0000               	dw	0
  1324  016DEA  0000               	dw	0
  1325  016DEC  0000               	dw	0
  1326  016DEE  0000               	dw	0
  1327  016DF0  0000               	dw	0
  1328  016DF2  0000               	dw	0
  1329  016DF4  0000               	dw	0
  1330  016DF6  0000               	dw	0
  1331  016DF8  0000               	dw	0
  1332  016DFA  0000               	dw	0
  1333  016DFC  0000               	dw	0
  1334  016DFE  42FA               	dw	17146
  1335  016E00  0000               	dw	0
  1336  016E02  0000               	dw	0
  1337  016E04  0000               	dw	0
  1338  016E06  0000               	dw	0
  1339  016E08  0000               	dw	0
  1340  016E0A  0000               	dw	0
  1341  016E0C  0000               	dw	0
  1342  016E0E  0000               	dw	0
  1343  016E10  0000               	dw	0
  1344  016E12  0000               	dw	0
  1345  016E14  0000               	dw	0
  1346  016E16  0000               	dw	0
  1347  016E18  0000               	dw	0
  1348  016E1A  0000               	dw	0
  1349  016E1C  0000               	dw	0
  1350  016E1E  0000               	dw	0
  1351  016E20  0000               	dw	0
  1352  016E22  0000               	dw	0
  1353  016E24  0000               	dw	0
  1354  016E26  0000               	dw	0
  1355  016E28  00                 	db	0
  1356  016E29  01                 	db	1
  1357  016E2A  0000               	dw	0
  1358  016E2C  3F80               	dw	16256
  1359  016E2E  0000               	dw	0
  1360  016E30  3F80               	dw	16256
  1361  016E32  00                 	db	0
  1362  016E33  00                 	db	0
  1363  016E34  00                 	db	0
  1364  016E35  00                 	db	0
  1365  016E36  00                 	db	0
  1366  016E37  00                 	db	0
  1367  016E38  00                 	db	0
  1368  016E39  00                 	db	0
  1369  016E3A  00                 	db	0
  1370  016E3B  00                 	db	0
  1371  016E3C  00                 	db	0
  1372  016E3D  00                 	db	0
  1373  016E3E  00                 	db	0
  1374  016E3F  00                 	db	0
  1375  016E40  00                 	db	0
  1376  016E41  00                 	db	0
  1377  016E42  00                 	db	0
  1378  016E43  00                 	db	0
  1379  016E44  00                 	db	0
  1380  016E45  00                 	db	0
  1381  016E46  00                 	db	0
  1382  016E47  00                 	db	0
  1383  016E48  00                 	db	0
  1384  016E49  00                 	db	0
  1385  016E4A  00                 	db	0
  1386  016E4B  00                 	db	0
  1387  016E4C  00                 	db	0
  1388  016E4D  00                 	db	0
  1389  016E4E  00                 	db	0
  1390  016E4F  00                 	db	0
  1391  016E50  00                 	db	0
  1392  016E51  00                 	db	0
  1393  016E52  00                 	db	0
  1394  016E53  00                 	db	0
  1395  016E54  00                 	db	0
  1396  016E55  00                 	db	0
  1397  016E56  00                 	db	0
  1398  016E57  00                 	db	0
  1399  016E58  00                 	db	0
  1400  016E59  00                 	db	0
  1401  016E5A  00                 	db	0
  1402  016E5B  00                 	db	0
  1403  016E5C  00                 	db	0
  1404  016E5D  00                 	db	0
  1405  016E5E  00                 	db	0
  1406  016E5F  00                 	db	0
  1407  016E60  00                 	db	0
  1408  016E61  00                 	db	0
  1409  016E62  00                 	db	0
  1410  016E63  00                 	db	0
  1411  016E64  00                 	db	0
  1412  016E65  00                 	db	0
  1413  016E66  00                 	db	0
  1414  016E67  00                 	db	0
  1415  016E68  00                 	db	0
  1416  016E69  00                 	db	0
  1417  016E6A  00                 	db	0
  1418  016E6B  00                 	db	0
  1419  016E6C  00                 	db	0
  1420  016E6D  00                 	db	0
  1421  016E6E  00                 	db	0
  1422  016E6F  00                 	db	0
  1423  016E70  00                 	db	0
  1424  016E71  00                 	db	0
  1425  016E72  00                 	db	0
  1426  016E73  00                 	db	0
  1427  016E74  00                 	db	0
  1428  016E75  00                 	db	0
  1429  016E76  00                 	db	0
  1430  016E77  00                 	db	0
  1431  016E78  00                 	db	0
  1432  016E79  00                 	db	0
  1433  016E7A  00                 	db	0
  1434  016E7B  00                 	db	0
  1435  016E7C  00                 	db	0
  1436  016E7D  00                 	db	0
  1437  016E7E  0000               	dw	0
  1438  016E80  0000               	dw	0
  1439  016E82  0000               	dw	0
  1440  016E84  0000               	dw	0
  1441  016E86  0000               	dw	0
  1442  016E88  0000               	dw	0
  1443  016E8A  0000               	dw	0
  1444  016E8C  0000               	dw	0
  1445  016E8E  0000               	dw	0
  1446  016E90  0000               	dw	0
  1447  016E92  01                 	db	1
  1448  016E93  00                 	db	0
  1449  016E94  00                 	db	0
  1450  016E95  00                 	db	0
  1451  016E96  00                 	db	0
  1452  016E97  00                 	db	0
  1453  016E98  00                 	db	0
  1454  016E99  00                 	db	0
  1455  016E9A  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BCD4                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BCD4  0000               	dw	0
  1463  01BCD6  0000               	dw	0
  1464  01BCD8  0000               	dw	0
  1465  01BCDA  0000               	dw	0
  1466  01BCDC  0000               	dw	0
  1467  01BCDE  0000               	dw	0
  1468  01BCE0  0000               	dw	0
  1469  01BCE2  0000               	dw	0
  1470  01BCE4  0000               	dw	0
  1471  01BCE6  0000               	dw	0
  1472  01BCE8  0000               	dw	0
  1473  01BCEA  0000               	dw	0
  1474  01BCEC  0000               	dw	0
  1475  01BCEE  0000               	dw	0
  1476  01BCF0  0000               	dw	0
  1477  01BCF2  0000               	dw	0
  1478  01BCF4  0FFF               	dw	4095
  1479  01BCF6  0777               	dw	1911
  1480  01BCF8  0000               	dw	0
  1481  01BCFA  0F67               	dw	3943
  1482  01BCFC  0F8F               	dw	3983
  1483  01BCFE  0000               	dw	0
  1484  01BD00  0000               	dw	0
  1485  01BD02  0000               	dw	0
  1486  01BD04  0000               	dw	0
  1487  01BD06  00                 	db	0
  1488  01BD07  0000               	dw	0
  1489  01BD09  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A598                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A598  28                 	db	40
  1497  01A599  6E                 	db	110
  1498  01A59A  75                 	db	117
  1499  01A59B  6C                 	db	108
  1500  01A59C  6C                 	db	108
  1501  01A59D  29                 	db	41
  1502  01A59E  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A59F  00                 	db	0
  1506  01A5A0  00                 	db	0
  1507  01A5A1  00                 	db	0
  1508  01A5A2  00                 	db	0
  1509  01A5A3  00                 	db	0
  1510  01A5A4  00                 	db	0
  1511  01A5A5  00                 	db	0
  1512  01A5A6  00                 	db	0
  1513  01A5A7  00                 	db	0
  1514  01A5A8  00                 	db	0
  1515  01A5A9  00                 	db	0
  1516  01A5AA  00                 	db	0
  1517  01A5AB  00                 	db	0
  1518  01A5AC  00                 	db	0
  1519  01A5AD  00                 	db	0
  1520  01A5AE  00                 	db	0
  1521  01A5AF  00                 	db	0
  1522  01A5B0  00                 	db	0
  1523  01A5B1  00                 	db	0
  1524  01A5B2  00                 	db	0
  1525  01A5B3  00                 	db	0
  1526  01A5B4  00                 	db	0
  1527  01A5B5  00                 	db	0
  1528  01A5B6  00                 	db	0
  1529  01A5B7  00                 	db	0
  1530  01A5B8  00                 	db	0
  1531  01A5B9  00                 	db	0
  1532  01A5BA  00                 	db	0
  1533  01A5BB  00                 	db	0
  1534  01A5BC  00                 	db	0
  1535  01A5BD  00                 	db	0
  1536  01A5BE  00                 	db	0
  1537  01A5BF  00                 	db	0
  1538  01A5C0  00                 	db	0
  1539  01A5C1  00                 	db	0
  1540  01A5C2  00                 	db	0
  1541  01A5C3  00                 	db	0
  1542  01A5C4  00                 	db	0
  1543  01A5C5  00                 	db	0
  1544  01A5C6  00                 	db	0
  1545  01A5C7  00                 	db	0
  1546  01A5C8  00                 	db	0
  1547  01A5C9  00                 	db	0
  1548  01A5CA  00                 	db	0
  1549  01A5CB  00                 	db	0
  1550  01A5CC  00                 	db	0
  1551  01A5CD  00                 	db	0
  1552  01A5CE  00                 	db	0
  1553  01A5CF  00                 	db	0
  1554  01A5D0  00                 	db	0
  1555  01A5D1  00                 	db	0
  1556  01A5D2  00                 	db	0
  1557  01A5D3  00                 	db	0
  1558  01A5D4  00                 	db	0
  1559  01A5D5  00                 	db	0
  1560  01A5D6  00                 	db	0
  1561  01A5D7  00                 	db	0
  1562  01A5D8  00                 	db	0
  1563  01A5D9  00                 	db	0
  1564  01A5DA  00                 	db	0
  1565  01A5DB  00                 	db	0
  1566  01A5DC  00                 	db	0
  1567  01A5DD  00                 	db	0
  1568  01A5DE  00                 	db	0
  1569  01A5DF  00                 	db	0
  1570  01A5E0  00                 	db	0
  1571  01A5E1  00                 	db	0
  1572  01A5E2  00                 	db	0
  1573  01A5E3  00                 	db	0
  1574  01A5E4  00                 	db	0
  1575  01A5E5  00                 	db	0
  1576  01A5E6  00                 	db	0
  1577  01A5E7  00                 	db	0
  1578  01A5E8  00                 	db	0
  1579  01A5E9  00                 	db	0
  1580  01A5EA  00                 	db	0
  1581  01A5EB  00                 	db	0
  1582  01A5EC  00                 	db	0
  1583  01A5ED  00                 	db	0
  1584  01A5EE  00                 	db	0
  1585  01A5EF  00                 	db	0
  1586  01A5F0  00                 	db	0
  1587  01A5F1  00                 	db	0
  1588  01A5F2  00                 	db	0
  1589  01A5F3  00                 	db	0
  1590  01A5F4  00                 	db	0
  1591  01A5F5  00                 	db	0
  1592  01A5F6  00                 	db	0
  1593  01A5F7  00                 	db	0
  1594  01A5F8  00                 	db	0
  1595  01A5F9  00                 	db	0
  1596  01A5FA  00                 	db	0
  1597  01A5FB  00                 	db	0
  1598  01A5FC  00                 	db	0
  1599  01A5FD  00                 	db	0
  1600  01A5FE  00                 	db	0
  1601  01A5FF  00                 	db	0
  1602  01A600  00                 	db	0
  1603  01A601  00                 	db	0
  1604  01A602  00                 	db	0
  1605  01A603  00                 	db	0
  1606  01A604  00                 	db	0
  1607  01A605  00                 	db	0
  1608  01A606  00                 	db	0
  1609  01A607  00                 	db	0
  1610  01A608  00                 	db	0
  1611  01A609  00                 	db	0
  1612  01A60A  00                 	db	0
  1613  01A60B  00                 	db	0
  1614  01A60C  00                 	db	0
  1615  01A60D  00                 	db	0
  1616  01A60E  00                 	db	0
  1617  01A60F  00                 	db	0
  1618  01A610  00                 	db	0
  1619  01A611  00                 	db	0
  1620  01A612  00                 	db	0
  1621  01A613  00                 	db	0
  1622  01A614  00                 	db	0
  1623  01A615  00                 	db	0
  1624  01A616  00                 	db	0
  1625  01A617  00                 	db	0
  1626  01A618  00                 	db	0
  1627  01A619  00                 	db	0
  1628  01A61A  00                 	db	0
  1629  01A61B  00                 	db	0
  1630  01A61C  00                 	db	0
  1631  01A61D  00                 	db	0
  1632  01A61E  00                 	db	0
  1633  01A61F  00                 	db	0
  1634  01A620  0000               	dw	0
  1635  01A622  0000               	dw	0
  1636  01A624  0000               	dw	0
  1637  01A626  0000               	dw	0
  1638  01A628  00                 	db	0
  1639  01A629  00                 	db	0
  1640  01A62A  00                 	db	0
  1641  01A62B  00                 	db	0
  1642  01A62C  00                 	db	0
  1643  01A62D  00                 	db	0
  1644  01A62E  0000               	dw	0
  1645  01A630  0000               	dw	0
  1646  01A632  0000               	dw	0
  1647  01A634  0000               	dw	0
  1648  01A636  0000               	dw	0
  1649  01A638  0000               	dw	0
  1650  01A63A  00                 	db	0
  1651  01A63B  00                 	db	0
  1652  01A63C  00                 	db	0
  1653  01A63D  00                 	db	0
  1654  01A63E  00                 	db	0
  1655  01A63F  00                 	db	0
  1656  01A640  00                 	db	0
  1657  01A641  00                 	db	0
  1658  01A642  00                 	db	0
  1659  01A643  00                 	db	0
  1660  01A644  00                 	db	0
  1661  01A645  0000               	dw	0
  1662  01A647  0000               	dw	0
  1663  01A649  2D                 	db	45
  1664  01A64A  00                 	db	0
  1665  01A64B  00                 	db	0
  1666  01A64C  00                 	db	0
  1667  01A64D  00                 	db	0
  1668  01A64E  0000               	dw	0
  1669  01A650  0000               	dw	0
  1670  01A652  0000               	dw	0
  1671  01A654  0000               	dw	0
  1672  01A656  0000               	dw	0
  1673  01A658  0000               	dw	0
  1674  01A65A  0000               	dw	0
  1675  01A65C  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A65E  00                 	db	0
  1679  01A65F  00                 	db	0
  1680  01A660  01                 	db	1
  1681  01A661  00                 	db	0
  1682  01A662  01                 	db	1
  1683  01A663  00                 	db	0
  1684  01A664  00                 	db	0
  1685                           
  1686                           	psect	mediumconst
  1687  00F9E4                     __pmediumconst:
  1688                           	opt callstack 0
  1689  00F9E4  00                 	db	0
  1690  00F9E5                     _BVSOC_TABLE:
  1691                           	opt callstack 0
  1692  00F9E5  59D8               	dw	23000
  1693  00F9E7  0000               	dw	0
  1694  00F9E9  0005               	dw	5
  1695  00F9EB  0000               	dw	0
  1696  00F9ED  5B68               	dw	23400
  1697  00F9EF  0000               	dw	0
  1698  00F9F1  000A               	dw	10
  1699  00F9F3  0000               	dw	0
  1700  00F9F5  5C30               	dw	23600
  1701  00F9F7  0000               	dw	0
  1702  00F9F9  0014               	dw	20
  1703  00F9FB  0000               	dw	0
  1704  00F9FD  5E38               	dw	24120
  1705  00F9FF  0000               	dw	0
  1706  00FA01  0019               	dw	25
  1707  00FA03  0000               	dw	0
  1708  00FA05  5E88               	dw	24200
  1709  00FA07  0000               	dw	0
  1710  00FA09  001E               	dw	30
  1711  00FA0B  0000               	dw	0
  1712  00FA0D  5F78               	dw	24440
  1713  00FA0F  0000               	dw	0
  1714  00FA11  0028               	dw	40
  1715  00FA13  0000               	dw	0
  1716  00FA15  5FDC               	dw	24540
  1717  00FA17  0000               	dw	0
  1718  00FA19  002D               	dw	45
  1719  00FA1B  0000               	dw	0
  1720  00FA1D  6018               	dw	24600
  1721  00FA1F  0000               	dw	0
  1722  00FA21  0032               	dw	50
  1723  00FA23  0000               	dw	0
  1724  00FA25  6046               	dw	24646
  1725  00FA27  0000               	dw	0
  1726  00FA29  0035               	dw	53
  1727  00FA2B  0000               	dw	0
  1728  00FA2D  607C               	dw	24700
  1729  00FA2F  0000               	dw	0
  1730  00FA31  0037               	dw	55
  1731  00FA33  0000               	dw	0
  1732  00FA35  60AE               	dw	24750
  1733  00FA37  0000               	dw	0
  1734  00FA39  0039               	dw	57
  1735  00FA3B  0000               	dw	0
  1736  00FA3D  60E0               	dw	24800
  1737  00FA3F  0000               	dw	0
  1738  00FA41  003C               	dw	60
  1739  00FA43  0000               	dw	0
  1740  00FA45  6112               	dw	24850
  1741  00FA47  0000               	dw	0
  1742  00FA49  003F               	dw	63
  1743  00FA4B  0000               	dw	0
  1744  00FA4D  615D               	dw	24925
  1745  00FA4F  0000               	dw	0
  1746  00FA51  0043               	dw	67
  1747  00FA53  0000               	dw	0
  1748  00FA55  61A8               	dw	25000
  1749  00FA57  0000               	dw	0
  1750  00FA59  0046               	dw	70
  1751  00FA5B  0000               	dw	0
  1752  00FA5D  61BC               	dw	25020
  1753  00FA5F  0000               	dw	0
  1754  00FA61  0048               	dw	72
  1755  00FA63  0000               	dw	0
  1756  00FA65  61D0               	dw	25040
  1757  00FA67  0000               	dw	0
  1758  00FA69  004B               	dw	75
  1759  00FA6B  0000               	dw	0
  1760  00FA6D  61DA               	dw	25050
  1761  00FA6F  0000               	dw	0
  1762  00FA71  0050               	dw	80
  1763  00FA73  0000               	dw	0
  1764  00FA75  61E4               	dw	25060
  1765  00FA77  0000               	dw	0
  1766  00FA79  0055               	dw	85
  1767  00FA7B  0000               	dw	0
  1768  00FA7D  61F8               	dw	25080
  1769  00FA7F  0000               	dw	0
  1770  00FA81  005A               	dw	90
  1771  00FA83  0000               	dw	0
  1772  00FA85  6208               	dw	25096
  1773  00FA87  0000               	dw	0
  1774  00FA89  005C               	dw	92
  1775  00FA8B  0000               	dw	0
  1776  00FA8D  6222               	dw	25122
  1777  00FA8F  0000               	dw	0
  1778  00FA91  005D               	dw	93
  1779  00FA93  0000               	dw	0
  1780  00FA95  6234               	dw	25140
  1781  00FA97  0000               	dw	0
  1782  00FA99  005F               	dw	95
  1783  00FA9B  0000               	dw	0
  1784  00FA9D  6248               	dw	25160
  1785  00FA9F  0000               	dw	0
  1786  00FAA1  0061               	dw	97
  1787  00FAA3  0000               	dw	0
  1788  00FAA5  625C               	dw	25180
  1789  00FAA7  0000               	dw	0
  1790  00FAA9  0064               	dw	100
  1791  00FAAB  0000               	dw	0
  1792  00FAAD  6784               	dw	26500
  1793  00FAAF  0000               	dw	0
  1794  00FAB1  0062               	dw	98
  1795  00FAB3  0000               	dw	0
  1796  00FAB5                     __end_of_BVSOC_TABLE:
  1797                           	opt callstack 0
  1798  00FAB5                     _T:
  1799                           	opt callstack 0
  1800  00FAB5  63                 	db	99
  1801  00FAB6  6F                 	db	111
  1802  00FAB7  6D                 	db	109
  1803  00FAB8  6D                 	db	109
  1804  00FAB9  61                 	db	97
  1805  00FABA  6E                 	db	110
  1806  00FABB  64                 	db	100
  1807  00FABC  73                 	db	115
  1808  00FABD  20                 	db	32
  1809  00FABE  31                 	db	49
  1810  00FABF  00                 	db	0
  1811  00FAC0  00                 	db	0
  1812  00FAC1  00                 	db	0
  1813  00FAC2  00                 	db	0
  1814  00FAC3  00                 	db	0
  1815  00FAC4  00                 	db	0
  1816  00FAC5  00                 	db	0
  1817  00FAC6  00                 	db	0
  1818  00FAC7  64                 	db	100
  1819  00FAC8  69                 	db	105
  1820  00FAC9  73                 	db	115
  1821  00FACA  70                 	db	112
  1822  00FACB  6C                 	db	108
  1823  00FACC  61                 	db	97
  1824  00FACD  79                 	db	121
  1825  00FACE  73                 	db	115
  1826  00FACF  20                 	db	32
  1827  00FAD0  31                 	db	49
  1828  00FAD1  00                 	db	0
  1829  00FAD2  00                 	db	0
  1830  00FAD3  00                 	db	0
  1831  00FAD4  00                 	db	0
  1832  00FAD5  00                 	db	0
  1833  00FAD6  00                 	db	0
  1834  00FAD7  00                 	db	0
  1835  00FAD8  00                 	db	0
  1836  00FAD9  63                 	db	99
  1837  00FADA  6F                 	db	111
  1838  00FADB  6D                 	db	109
  1839  00FADC  6D                 	db	109
  1840  00FADD  61                 	db	97
  1841  00FADE  6E                 	db	110
  1842  00FADF  64                 	db	100
  1843  00FAE0  73                 	db	115
  1844  00FAE1  20                 	db	32
  1845  00FAE2  32                 	db	50
  1846  00FAE3  00                 	db	0
  1847  00FAE4  00                 	db	0
  1848  00FAE5  00                 	db	0
  1849  00FAE6  00                 	db	0
  1850  00FAE7  00                 	db	0
  1851  00FAE8  00                 	db	0
  1852  00FAE9  00                 	db	0
  1853  00FAEA  00                 	db	0
  1854  00FAEB  64                 	db	100
  1855  00FAEC  69                 	db	105
  1856  00FAED  73                 	db	115
  1857  00FAEE  70                 	db	112
  1858  00FAEF  6C                 	db	108
  1859  00FAF0  61                 	db	97
  1860  00FAF1  79                 	db	121
  1861  00FAF2  73                 	db	115
  1862  00FAF3  20                 	db	32
  1863  00FAF4  32                 	db	50
  1864  00FAF5  00                 	db	0
  1865  00FAF6  00                 	db	0
  1866  00FAF7  00                 	db	0
  1867  00FAF8  00                 	db	0
  1868  00FAF9  00                 	db	0
  1869  00FAFA  00                 	db	0
  1870  00FAFB  00                 	db	0
  1871  00FAFC  00                 	db	0
  1872  00FAFD  63                 	db	99
  1873  00FAFE  6F                 	db	111
  1874  00FAFF  6D                 	db	109
  1875  00FB00  6D                 	db	109
  1876  00FB01  61                 	db	97
  1877  00FB02  6E                 	db	110
  1878  00FB03  64                 	db	100
  1879  00FB04  73                 	db	115
  1880  00FB05  20                 	db	32
  1881  00FB06  33                 	db	51
  1882  00FB07  00                 	db	0
  1883  00FB08  00                 	db	0
  1884  00FB09  00                 	db	0
  1885  00FB0A  00                 	db	0
  1886  00FB0B  00                 	db	0
  1887  00FB0C  00                 	db	0
  1888  00FB0D  00                 	db	0
  1889  00FB0E  00                 	db	0
  1890  00FB0F  64                 	db	100
  1891  00FB10  69                 	db	105
  1892  00FB11  73                 	db	115
  1893  00FB12  70                 	db	112
  1894  00FB13  6C                 	db	108
  1895  00FB14  61                 	db	97
  1896  00FB15  79                 	db	121
  1897  00FB16  73                 	db	115
  1898  00FB17  20                 	db	32
  1899  00FB18  33                 	db	51
  1900  00FB19  00                 	db	0
  1901  00FB1A  00                 	db	0
  1902  00FB1B  00                 	db	0
  1903  00FB1C  00                 	db	0
  1904  00FB1D  00                 	db	0
  1905  00FB1E  00                 	db	0
  1906  00FB1F  00                 	db	0
  1907  00FB20  00                 	db	0
  1908  00FB21  63                 	db	99
  1909  00FB22  6F                 	db	111
  1910  00FB23  6D                 	db	109
  1911  00FB24  6D                 	db	109
  1912  00FB25  61                 	db	97
  1913  00FB26  6E                 	db	110
  1914  00FB27  64                 	db	100
  1915  00FB28  73                 	db	115
  1916  00FB29  20                 	db	32
  1917  00FB2A  34                 	db	52
  1918  00FB2B  00                 	db	0
  1919  00FB2C  00                 	db	0
  1920  00FB2D  00                 	db	0
  1921  00FB2E  00                 	db	0
  1922  00FB2F  00                 	db	0
  1923  00FB30  00                 	db	0
  1924  00FB31  00                 	db	0
  1925  00FB32  00                 	db	0
  1926  00FB33  64                 	db	100
  1927  00FB34  69                 	db	105
  1928  00FB35  73                 	db	115
  1929  00FB36  70                 	db	112
  1930  00FB37  6C                 	db	108
  1931  00FB38  61                 	db	97
  1932  00FB39  79                 	db	121
  1933  00FB3A  73                 	db	115
  1934  00FB3B  20                 	db	32
  1935  00FB3C  34                 	db	52
  1936  00FB3D  00                 	db	0
  1937  00FB3E  00                 	db	0
  1938  00FB3F  00                 	db	0
  1939  00FB40  00                 	db	0
  1940  00FB41  00                 	db	0
  1941  00FB42  00                 	db	0
  1942  00FB43  00                 	db	0
  1943  00FB44  00                 	db	0
  1944  00FB45                     __end_of_T:
  1945                           	opt callstack 0
  1946  00FB45                     _spin:
  1947                           	opt callstack 0
  1948  00FB45  7C                 	db	124
  1949  00FB46  7C                 	db	124
  1950  00FB47  2F                 	db	47
  1951  00FB48  2F                 	db	47
  1952  00FB49  2D                 	db	45
  1953  00FB4A  2D                 	db	45
  1954  00FB4B  00                 	db	0
  1955  00FB4C  00                 	db	0
  1956  00FB4D  00                 	db	0
  1957  00FB4E  00                 	db	0
  1958  00FB4F  00                 	db	0
  1959  00FB50  00                 	db	0
  1960  00FB51  00                 	db	0
  1961  00FB52  00                 	db	0
  1962  00FB53  00                 	db	0
  1963  00FB54  00                 	db	0
  1964  00FB55  00                 	db	0
  1965  00FB56  00                 	db	0
  1966  00FB57  00                 	db	0
  1967  00FB58  00                 	db	0
  1968  00FB59  7C                 	db	124
  1969  00FB5A  7C                 	db	124
  1970  00FB5B  2F                 	db	47
  1971  00FB5C  2F                 	db	47
  1972  00FB5D  2D                 	db	45
  1973  00FB5E  2D                 	db	45
  1974  00FB5F  5C                 	db	92
  1975  00FB60  5C                 	db	92
  1976  00FB61  00                 	db	0
  1977  00FB62  00                 	db	0
  1978  00FB63  00                 	db	0
  1979  00FB64  00                 	db	0
  1980  00FB65  00                 	db	0
  1981  00FB66  00                 	db	0
  1982  00FB67  00                 	db	0
  1983  00FB68  00                 	db	0
  1984  00FB69  00                 	db	0
  1985  00FB6A  00                 	db	0
  1986  00FB6B  00                 	db	0
  1987  00FB6C  00                 	db	0
  1988  00FB6D  4F                 	db	79
  1989  00FB6E  4F                 	db	79
  1990  00FB6F  4F                 	db	79
  1991  00FB70  4F                 	db	79
  1992  00FB71  4F                 	db	79
  1993  00FB72  4F                 	db	79
  1994  00FB73  2D                 	db	45
  1995  00FB74  2D                 	db	45
  1996  00FB75  5F                 	db	95
  1997  00FB76  5F                 	db	95
  1998  00FB77  2D                 	db	45
  1999  00FB78  00                 	db	0
  2000  00FB79  00                 	db	0
  2001  00FB7A  00                 	db	0
  2002  00FB7B  00                 	db	0
  2003  00FB7C  00                 	db	0
  2004  00FB7D  00                 	db	0
  2005  00FB7E  00                 	db	0
  2006  00FB7F  00                 	db	0
  2007  00FB80  00                 	db	0
  2008  00FB81  76                 	db	118
  2009  00FB82  76                 	db	118
  2010  00FB83  3C                 	db	60
  2011  00FB84  3C                 	db	60
  2012  00FB85  5E                 	db	94
  2013  00FB86  5E                 	db	94
  2014  00FB87  3E                 	db	62
  2015  00FB88  3E                 	db	62
  2016  00FB89  00                 	db	0
  2017  00FB8A  00                 	db	0
  2018  00FB8B  00                 	db	0
  2019  00FB8C  00                 	db	0
  2020  00FB8D  00                 	db	0
  2021  00FB8E  00                 	db	0
  2022  00FB8F  00                 	db	0
  2023  00FB90  00                 	db	0
  2024  00FB91  00                 	db	0
  2025  00FB92  00                 	db	0
  2026  00FB93  00                 	db	0
  2027  00FB94  00                 	db	0
  2028  00FB95  2E                 	db	46
  2029  00FB96  2E                 	db	46
  2030  00FB97  2A                 	db	42
  2031  00FB98  2A                 	db	42
  2032  00FB99  78                 	db	120
  2033  00FB9A  23                 	db	35
  2034  00FB9B  78                 	db	120
  2035  00FB9C  23                 	db	35
  2036  00FB9D  58                 	db	88
  2037  00FB9E  58                 	db	88
  2038  00FB9F  7C                 	db	124
  2039  00FBA0  7C                 	db	124
  2040  00FBA1  2D                 	db	45
  2041  00FBA2  2D                 	db	45
  2042  00FBA3  00                 	db	0
  2043  00FBA4  00                 	db	0
  2044  00FBA5  00                 	db	0
  2045  00FBA6  00                 	db	0
  2046  00FBA7  00                 	db	0
  2047  00FBA8  00                 	db	0
  2048  00FBA9  2E                 	db	46
  2049  00FBAA  2E                 	db	46
  2050  00FBAB  6F                 	db	111
  2051  00FBAC  6F                 	db	111
  2052  00FBAD  4F                 	db	79
  2053  00FBAE  4F                 	db	79
  2054  00FBAF  6F                 	db	111
  2055  00FBB0  6F                 	db	111
  2056  00FBB1  00                 	db	0
  2057  00FBB2  00                 	db	0
  2058  00FBB3  00                 	db	0
  2059  00FBB4  00                 	db	0
  2060  00FBB5  00                 	db	0
  2061  00FBB6  00                 	db	0
  2062  00FBB7  00                 	db	0
  2063  00FBB8  00                 	db	0
  2064  00FBB9  00                 	db	0
  2065  00FBBA  00                 	db	0
  2066  00FBBB  00                 	db	0
  2067  00FBBC  00                 	db	0
  2068  00FBBD                     __end_of_spin:
  2069                           	opt callstack 0
  2070  00FBBD  0000               	dw	0
  2071  00FBBF  3F80               	dw	16256
  2072  00FBC1  0000               	dw	0
  2073  00FBC3  3FC0               	dw	16320
  2074  00FBC5                     __end_of_bp:
  2075                           	opt callstack 0
  2076  00FBC5  AA00               	dw	43520
  2077  00FBC7  3FB8               	dw	16312
  2078  00FBC9                     __end_of_ivln2_h:
  2079                           	opt callstack 0
  2080  00FBC9  23C6               	dw	9158
  2081  00FBCB  B8F6               	dw	47350
  2082  00FBCD                     __end_of_cp_l:
  2083                           	opt callstack 0
  2084  00FBCD  4000               	dw	16384
  2085  00FBCF  3F76               	dw	16246
  2086  00FBD1                     __end_of_cp_h:
  2087                           	opt callstack 0
  2088  0000                     _IVTADL	set	14493
  2089  0000                     _IVTADH	set	14494
  2090  0000                     _IVTADU	set	14495
  2091  0000                     _PIR6bits	set	14758
  2092  0000                     _PIR4bits	set	14756
  2093  0000                     _PIE8bits	set	14744
  2094  0000                     _PIR8bits	set	14760
  2095  0000                     _SCANPR	set	14839
  2096  0000                     _DMA2PR	set	14836
  2097  0000                     _DMA1PR	set	14835
  2098  0000                     _MAINPR	set	14834
  2099  0000                     _ISRPR	set	14833
  2100  0000                     _PIE2bits	set	14738
  2101  0000                     _PIR2bits	set	14754
  2102  0000                     _PIE9bits	set	14745
  2103  0000                     _PIR9bits	set	14761
  2104  0000                     _PIE6bits	set	14742
  2105  0000                     _PIE3bits	set	14739
  2106  0000                     _PMD7	set	14791
  2107  0000                     _PMD6	set	14790
  2108  0000                     _PMD5	set	14789
  2109  0000                     _PMD4	set	14788
  2110  0000                     _PMD3	set	14787
  2111  0000                     _PMD2	set	14786
  2112  0000                     _PMD1	set	14785
  2113  0000                     _PMD0	set	14784
  2114  0000                     _OSCTUNE	set	14814
  2115  0000                     _OSCFRQ	set	14815
  2116  0000                     _OSCEN	set	14813
  2117  0000                     _OSCCON3	set	14811
  2118  0000                     _OSCCON1	set	14809
  2119  0000                     _IPR8bits	set	14728
  2120  0000                     _IPR9bits	set	14729
  2121  0000                     _IPR5bits	set	14725
  2122  0000                     _IPR1bits	set	14721
  2123  0000                     _IPR3bits	set	14723
  2124  0000                     _IPR6bits	set	14726
  2125  0000                     _IPR2bits	set	14722
  2126  0000                     _PIE5bits	set	14741
  2127  0000                     _PIE1bits	set	14737
  2128  0000                     _PIR5bits	set	14757
  2129  0000                     _PIR1bits	set	14753
  2130  0000                     _PLLR	set	118496
  2131  0000                     _SPI1SDIPPS	set	15071
  2132  0000                     _U1RXPPS	set	15077
  2133  0000                     _RC6PPS	set	14870
  2134  0000                     _RC5PPS	set	14869
  2135  0000                     _INT1PPS	set	15041
  2136  0000                     _RD1PPS	set	14873
  2137  0000                     _INT0PPS	set	15040
  2138  0000                     _RC3PPS	set	14867
  2139  0000                     _RB6PPS	set	14862
  2140  0000                     _SPI1SCKPPS	set	15070
  2141  0000                     _U2RXPPS	set	15080
  2142  0000                     _SLRCONF	set	14995
  2143  0000                     _SLRCONE	set	14979
  2144  0000                     _SLRCOND	set	14963
  2145  0000                     _SLRCONC	set	14947
  2146  0000                     _SLRCONB	set	14931
  2147  0000                     _SLRCONA	set	14915
  2148  0000                     _ODCOND	set	14962
  2149  0000                     _ODCONC	set	14946
  2150  0000                     _ODCONB	set	14930
  2151  0000                     _ODCONA	set	14914
  2152  0000                     _ODCONF	set	14994
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _WPUC	set	14945
  2155  0000                     _WPUA	set	14913
  2156  0000                     _WPUB	set	14929
  2157  0000                     _WPUE	set	14977
  2158  0000                     _WPUF	set	14993
  2159  0000                     _WPUD	set	14961
  2160  0000                     _ANSELA	set	14912
  2161  0000                     _ANSELF	set	14992
  2162  0000                     _ANSELE	set	14976
  2163  0000                     _ANSELB	set	14928
  2164  0000                     _ANSELC	set	14944
  2165  0000                     _ANSELD	set	14960
  2166  0000                     _DMA2SSA	set	15321
  2167  0000                     _DMA1SSA	set	15353
  2168  0000                     _DMA2DSZ	set	15310
  2169  0000                     _DMA2SSZ	set	15319
  2170  0000                     _DMA2DSA	set	15312
  2171  0000                     _DMA1DSZ	set	15342
  2172  0000                     _DMA1SSZ	set	15351
  2173  0000                     _DMA1DSA	set	15344
  2174  0000                     _DMA2CON0bits	set	15324
  2175  0000                     _DMA2CON1bits	set	15325
  2176  0000                     _DMA1CON0bits	set	15356
  2177  0000                     _DMA1CON1bits	set	15357
  2178  0000                     _DMA2CON0	set	15324
  2179  0000                     _DMA2AIRQ	set	15326
  2180  0000                     _DMA2SIRQ	set	15327
  2181  0000                     _DMA2CON1	set	15325
  2182  0000                     _DMA1CON0	set	15356
  2183  0000                     _DMA1AIRQ	set	15358
  2184  0000                     _DMA1SIRQ	set	15359
  2185  0000                     _DMA1CON1	set	15357
  2186  0000                     _CLKRCON	set	15589
  2187  0000                     _CLKRCLK	set	15590
  2188  0000                     _SPI1CON1bits	set	15637
  2189  0000                     _SPI1STATUSbits	set	15639
  2190  0000                     _SPI1INTFbits	set	15642
  2191  0000                     _SPI1CON0bits	set	15636
  2192  0000                     _SPI1RXB	set	15632
  2193  0000                     _SPI1TXB	set	15633
  2194  0000                     _SPI1TCNTL	set	15634
  2195  0000                     _SPI1CON0	set	15636
  2196  0000                     _SPI1CLK	set	15644
  2197  0000                     _SPI1BAUD	set	15641
  2198  0000                     _SPI1CON2	set	15638
  2199  0000                     _SPI1CON1	set	15637
  2200  0000                     _U2RXB	set	15824
  2201  0000                     _U2TXB	set	15826
  2202  0000                     _U2ERRIE	set	15842
  2203  0000                     _U2ERRIR	set	15841
  2204  0000                     _U2UIR	set	15840
  2205  0000                     _U2FIFO	set	15839
  2206  0000                     _U2BRGH	set	15838
  2207  0000                     _U2BRGL	set	15837
  2208  0000                     _U2CON2	set	15836
  2209  0000                     _U2CON1	set	15835
  2210  0000                     _U2CON0	set	15834
  2211  0000                     _U2P3L	set	15832
  2212  0000                     _U2P2L	set	15830
  2213  0000                     _U2P1L	set	15828
  2214  0000                     _U1RXB	set	15848
  2215  0000                     _U1ERRIE	set	15866
  2216  0000                     _U1ERRIR	set	15865
  2217  0000                     _U1UIR	set	15864
  2218  0000                     _U1FIFO	set	15863
  2219  0000                     _U1BRGH	set	15862
  2220  0000                     _U1BRGL	set	15861
  2221  0000                     _U1CON2	set	15860
  2222  0000                     _U1CON1	set	15859
  2223  0000                     _U1CON0	set	15858
  2224  0000                     _U1P3H	set	15857
  2225  0000                     _U1P3L	set	15856
  2226  0000                     _U1P2H	set	15855
  2227  0000                     _U1P2L	set	15854
  2228  0000                     _U1P1H	set	15853
  2229  0000                     _U1P1L	set	15852
  2230  0000                     _FVRCON	set	16065
  2231  0000                     _ADFLTRL	set	16102
  2232  0000                     _ADFLTRH	set	16103
  2233  0000                     _ADCON0bits	set	16120
  2234  0000                     _ADCON0	set	16120
  2235  0000                     _ADCLK	set	16127
  2236  0000                     _ADACT	set	16126
  2237  0000                     _ADREF	set	16125
  2238  0000                     _ADSTAT	set	16124
  2239  0000                     _ADCON3	set	16123
  2240  0000                     _ADCON2	set	16122
  2241  0000                     _ADCON1	set	16121
  2242  0000                     _ADPREH	set	16119
  2243  0000                     _ADPREL	set	16118
  2244  0000                     _ADCAP	set	16117
  2245  0000                     _ADACQH	set	16116
  2246  0000                     _ADACQL	set	16115
  2247  0000                     _ADPCH	set	16113
  2248  0000                     _ADRPT	set	16108
  2249  0000                     _ADACCU	set	16106
  2250  0000                     _ADSTPTH	set	16101
  2251  0000                     _ADSTPTL	set	16100
  2252  0000                     _ADUTHH	set	16097
  2253  0000                     _ADUTHL	set	16096
  2254  0000                     _ADLTHH	set	16095
  2255  0000                     _ADLTHL	set	16094
  2256  0000                     _CCPTMRS1bits	set	16223
  2257  0000                     _PORTFbits	set	16335
  2258  0000                     _LATFbits	set	16319
  2259  0000                     _LATCbits	set	16316
  2260  0000                     _LATDbits	set	16317
  2261  0000                     _PORTBbits	set	16331
  2262  0000                     _T3CONbits	set	16294
  2263  0000                     _T3CON	set	16294
  2264  0000                     _TMR3L	set	16292
  2265  0000                     _TMR3H	set	16293
  2266  0000                     _T3CLK	set	16297
  2267  0000                     _T3GATE	set	16296
  2268  0000                     _T3GCON	set	16295
  2269  0000                     _T2CON	set	16300
  2270  0000                     _T2TMR	set	16298
  2271  0000                     _T2PR	set	16299
  2272  0000                     _T2RST	set	16303
  2273  0000                     _T2HLT	set	16301
  2274  0000                     _T2CLKCON	set	16302
  2275  0000                     _PWM8DCL	set	16224
  2276  0000                     _PWM8DCH	set	16225
  2277  0000                     _PWM8CON	set	16226
  2278  0000                     _LATEbits	set	16318
  2279  0000                     _T5CONbits	set	16282
  2280  0000                     _T5CON	set	16282
  2281  0000                     _TMR5L	set	16280
  2282  0000                     _TMR5H	set	16281
  2283  0000                     _T5CLK	set	16285
  2284  0000                     _T5GATE	set	16284
  2285  0000                     _T5GCON	set	16283
  2286  0000                     _T6CON	set	16276
  2287  0000                     _T6TMR	set	16274
  2288  0000                     _T6PR	set	16275
  2289  0000                     _T6RST	set	16279
  2290  0000                     _T6HLT	set	16277
  2291  0000                     _T6CLKCON	set	16278
  2292  0000                     _TRISD	set	16325
  2293  0000                     _TRISC	set	16324
  2294  0000                     _TRISB	set	16323
  2295  0000                     _TRISA	set	16322
  2296  0000                     _TRISF	set	16327
  2297  0000                     _TRISE	set	16326
  2298  0000                     _LATC	set	16316
  2299  0000                     _LATB	set	16315
  2300  0000                     _LATF	set	16319
  2301  0000                     _LATA	set	16314
  2302  0000                     _LATD	set	16317
  2303  0000                     _LATE	set	16318
  2304  0000                     _IVTLOCKbits	set	16340
  2305  0000                     _IVTLOCK	set	16340
  2306  0000                     _INTCON0bits	set	16338
  2307  0000                     _GIE	set	130711
  2308  00FBD1                     STR_64:
  2309                           
  2310                           ; BSR set to: 57
  2311  00FBD1  20                 	db	32
  2312  00FBD2  25                 	db	37
  2313  00FBD3  63                 	db	99	;'c'
  2314  00FBD4  20                 	db	32
  2315  00FBD5  2C                 	db	44
  2316  00FBD6  25                 	db	37
  2317  00FBD7  6C                 	db	108	;'l'
  2318  00FBD8  75                 	db	117	;'u'
  2319  00FBD9  2C                 	db	44
  2320  00FBDA  25                 	db	37
  2321  00FBDB  34                 	db	52	;'4'
  2322  00FBDC  2E                 	db	46
  2323  00FBDD  34                 	db	52	;'4'
  2324  00FBDE  66                 	db	102	;'f'
  2325  00FBDF  2C                 	db	44
  2326  00FBE0  25                 	db	37
  2327  00FBE1  34                 	db	52	;'4'
  2328  00FBE2  2E                 	db	46
  2329  00FBE3  34                 	db	52	;'4'
  2330  00FBE4  66                 	db	102	;'f'
  2331  00FBE5  2C                 	db	44
  2332  00FBE6  25                 	db	37
  2333  00FBE7  34                 	db	52	;'4'
  2334  00FBE8  2E                 	db	46
  2335  00FBE9  34                 	db	52	;'4'
  2336  00FBEA  66                 	db	102	;'f'
  2337  00FBEB  2C                 	db	44
  2338  00FBEC  25                 	db	37
  2339  00FBED  34                 	db	52	;'4'
  2340  00FBEE  2E                 	db	46
  2341  00FBEF  34                 	db	52	;'4'
  2342  00FBF0  66                 	db	102	;'f'
  2343  00FBF1  2C                 	db	44
  2344  00FBF2  25                 	db	37
  2345  00FBF3  34                 	db	52	;'4'
  2346  00FBF4  2E                 	db	46
  2347  00FBF5  33                 	db	51	;'3'
  2348  00FBF6  66                 	db	102	;'f'
  2349  00FBF7  2C                 	db	44
  2350  00FBF8  25                 	db	37
  2351  00FBF9  34                 	db	52	;'4'
  2352  00FBFA  2E                 	db	46
  2353  00FBFB  33                 	db	51	;'3'
  2354  00FBFC  66                 	db	102	;'f'
  2355  00FBFD  2C                 	db	44
  2356  00FBFE  25                 	db	37
  2357  00FBFF  34                 	db	52	;'4'
  2358  00FC00  2E                 	db	46
  2359  00FC01  33                 	db	51	;'3'
  2360  00FC02  66                 	db	102	;'f'
  2361  00FC03  2C                 	db	44
  2362  00FC04  25                 	db	37
  2363  00FC05  34                 	db	52	;'4'
  2364  00FC06  2E                 	db	46
  2365  00FC07  33                 	db	51	;'3'
  2366  00FC08  66                 	db	102	;'f'
  2367  00FC09  2C                 	db	44
  2368  00FC0A  25                 	db	37
  2369  00FC0B  34                 	db	52	;'4'
  2370  00FC0C  2E                 	db	46
  2371  00FC0D  33                 	db	51	;'3'
  2372  00FC0E  66                 	db	102	;'f'
  2373  00FC0F  2C                 	db	44
  2374  00FC10  25                 	db	37
  2375  00FC11  34                 	db	52	;'4'
  2376  00FC12  2E                 	db	46
  2377  00FC13  33                 	db	51	;'3'
  2378  00FC14  66                 	db	102	;'f'
  2379  00FC15  2C                 	db	44
  2380  00FC16  25                 	db	37
  2381  00FC17  64                 	db	100	;'d'
  2382  00FC18  2C                 	db	44
  2383  00FC19  25                 	db	37
  2384  00FC1A  64                 	db	100	;'d'
  2385  00FC1B  2C                 	db	44
  2386  00FC1C  25                 	db	37
  2387  00FC1D  32                 	db	50	;'2'
  2388  00FC1E  2E                 	db	46
  2389  00FC1F  36                 	db	54	;'6'
  2390  00FC20  66                 	db	102	;'f'
  2391  00FC21  2C                 	db	44
  2392  00FC22  25                 	db	37
  2393  00FC23  34                 	db	52	;'4'
  2394  00FC24  2E                 	db	46
  2395  00FC25  33                 	db	51	;'3'
  2396  00FC26  66                 	db	102	;'f'
  2397  00FC27  2C                 	db	44
  2398  00FC28  25                 	db	37
  2399  00FC29  64                 	db	100	;'d'
  2400  00FC2A  2C                 	db	44
  2401  00FC2B  25                 	db	37
  2402  00FC2C  64                 	db	100	;'d'
  2403  00FC2D  2C                 	db	44
  2404  00FC2E  25                 	db	37
  2405  00FC2F  6C                 	db	108	;'l'
  2406  00FC30  75                 	db	117	;'u'
  2407  00FC31  2C                 	db	44
  2408  00FC32  25                 	db	37
  2409  00FC33  6C                 	db	108	;'l'
  2410  00FC34  75                 	db	117	;'u'
  2411  00FC35  2C                 	db	44
  2412  00FC36  25                 	db	37
  2413  00FC37  34                 	db	52	;'4'
  2414  00FC38  2E                 	db	46
  2415  00FC39  33                 	db	51	;'3'
  2416  00FC3A  66                 	db	102	;'f'
  2417  00FC3B  2C                 	db	44
  2418  00FC3C  25                 	db	37
  2419  00FC3D  34                 	db	52	;'4'
  2420  00FC3E  2E                 	db	46
  2421  00FC3F  33                 	db	51	;'3'
  2422  00FC40  66                 	db	102	;'f'
  2423  00FC41  2C                 	db	44
  2424  00FC42  25                 	db	37
  2425  00FC43  34                 	db	52	;'4'
  2426  00FC44  2E                 	db	46
  2427  00FC45  33                 	db	51	;'3'
  2428  00FC46  66                 	db	102	;'f'
  2429  00FC47  0D                 	db	13
  2430  00FC48  0A                 	db	10
  2431  00FC49  00                 	db	0
  2432  00FC4A                     STR_36:
  2433                           
  2434                           ; BSR set to: 57
  2435  00FC4A  53                 	db	83	;'S'
  2436  00FC4B  25                 	db	37
  2437  00FC4C  63                 	db	99	;'c'
  2438  00FC4D  43                 	db	67	;'C'
  2439  00FC4E  20                 	db	32
  2440  00FC4F  25                 	db	37
  2441  00FC50  64                 	db	100	;'d'
  2442  00FC51  20                 	db	32
  2443  00FC52  52                 	db	82	;'R'
  2444  00FC53  55                 	db	85	;'U'
  2445  00FC54  4E                 	db	78	;'N'
  2446  00FC55  20                 	db	32
  2447  00FC56  25                 	db	37
  2448  00FC57  64                 	db	100	;'d'
  2449  00FC58  20                 	db	32
  2450  00FC59  56                 	db	86	;'V'
  2451  00FC5A  25                 	db	37
  2452  00FC5B  32                 	db	50	;'2'
  2453  00FC5C  2E                 	db	46
  2454  00FC5D  32                 	db	50	;'2'
  2455  00FC5E  66                 	db	102	;'f'
  2456  00FC5F  20                 	db	32
  2457  00FC60  20                 	db	32
  2458  00FC61  20                 	db	32
  2459  00FC62  20                 	db	32
  2460  00FC63  20                 	db	32
  2461  00FC64  20                 	db	32
  2462  00FC65  20                 	db	32
  2463  00FC66  00                 	db	0
  2464  00FC67                     STR_17:
  2465                           
  2466                           ; BSR set to: 57
  2467  00FC67  52                 	db	82	;'R'
  2468  00FC68  31                 	db	49	;'1'
  2469  00FC69  20                 	db	32
  2470  00FC6A  25                 	db	37
  2471  00FC6B  32                 	db	50	;'2'
  2472  00FC6C  2E                 	db	46
  2473  00FC6D  33                 	db	51	;'3'
  2474  00FC6E  66                 	db	102	;'f'
  2475  00FC6F  20                 	db	32
  2476  00FC70  25                 	db	37
  2477  00FC71  33                 	db	51	;'3'
  2478  00FC72  2E                 	db	46
  2479  00FC73  34                 	db	52	;'4'
  2480  00FC74  66                 	db	102	;'f'
  2481  00FC75  20                 	db	32
  2482  00FC76  20                 	db	32
  2483  00FC77  20                 	db	32
  2484  00FC78  20                 	db	32
  2485  00FC79  20                 	db	32
  2486  00FC7A  20                 	db	32
  2487  00FC7B  20                 	db	32
  2488  00FC7C  20                 	db	32
  2489  00FC7D  20                 	db	32
  2490  00FC7E  20                 	db	32
  2491  00FC7F  20                 	db	32
  2492  00FC80  00                 	db	0
  2493  00FC81                     STR_18:
  2494                           
  2495                           ; BSR set to: 57
  2496  00FC81  52                 	db	82	;'R'
  2497  00FC82  32                 	db	50	;'2'
  2498  00FC83  20                 	db	32
  2499  00FC84  25                 	db	37
  2500  00FC85  32                 	db	50	;'2'
  2501  00FC86  2E                 	db	46
  2502  00FC87  33                 	db	51	;'3'
  2503  00FC88  66                 	db	102	;'f'
  2504  00FC89  20                 	db	32
  2505  00FC8A  25                 	db	37
  2506  00FC8B  33                 	db	51	;'3'
  2507  00FC8C  2E                 	db	46
  2508  00FC8D  34                 	db	52	;'4'
  2509  00FC8E  66                 	db	102	;'f'
  2510  00FC8F  20                 	db	32
  2511  00FC90  20                 	db	32
  2512  00FC91  20                 	db	32
  2513  00FC92  20                 	db	32
  2514  00FC93  20                 	db	32
  2515  00FC94  20                 	db	32
  2516  00FC95  20                 	db	32
  2517  00FC96  20                 	db	32
  2518  00FC97  20                 	db	32
  2519  00FC98  20                 	db	32
  2520  00FC99  20                 	db	32
  2521  00FC9A  00                 	db	0
  2522  00FC9B                     STR_9:
  2523                           
  2524                           ; BSR set to: 57
  2525  00FC9B  53                 	db	83	;'S'
  2526  00FC9C  20                 	db	32
  2527  00FC9D  53                 	db	83	;'S'
  2528  00FC9E  25                 	db	37
  2529  00FC9F  63                 	db	99	;'c'
  2530  00FCA0  43                 	db	67	;'C'
  2531  00FCA1  20                 	db	32
  2532  00FCA2  25                 	db	37
  2533  00FCA3  64                 	db	100	;'d'
  2534  00FCA4  20                 	db	32
  2535  00FCA5  25                 	db	37
  2536  00FCA6  32                 	db	50	;'2'
  2537  00FCA7  2E                 	db	46
  2538  00FCA8  34                 	db	52	;'4'
  2539  00FCA9  66                 	db	102	;'f'
  2540  00FCAA  20                 	db	32
  2541  00FCAB  20                 	db	32
  2542  00FCAC  20                 	db	32
  2543  00FCAD  20                 	db	32
  2544  00FCAE  20                 	db	32
  2545  00FCAF  20                 	db	32
  2546  00FCB0  20                 	db	32
  2547  00FCB1  20                 	db	32
  2548  00FCB2  20                 	db	32
  2549  00FCB3  20                 	db	32
  2550  00FCB4  00                 	db	0
  2551  00FCB5                     
  2552                           ; BSR set to: 57
  2553  00FCB5  20                 	db	32
  2554  00FCB6  4D                 	db	77	;'M'
  2555  00FCB7  65                 	db	101	;'e'
  2556  00FCB8  73                 	db	115	;'s'
  2557  00FCB9  67                 	db	103	;'g'
  2558  00FCBA  20                 	db	32
  2559  00FCBB  25                 	db	37
  2560  00FCBC  64                 	db	100	;'d'
  2561  00FCBD  20                 	db	32
  2562  00FCBE  53                 	db	83	;'S'
  2563  00FCBF  74                 	db	116	;'t'
  2564  00FCC0  61                 	db	97	;'a'
  2565  00FCC1  63                 	db	99	;'c'
  2566  00FCC2  6B                 	db	107	;'k'
  2567  00FCC3  20                 	db	32
  2568  00FCC4  25                 	db	37
  2569  00FCC5  64                 	db	100	;'d'
  2570  00FCC6  20                 	db	32
  2571  00FCC7  20                 	db	32
  2572  00FCC8  20                 	db	32
  2573  00FCC9  20                 	db	32
  2574  00FCCA  20                 	db	32
  2575  00FCCB  20                 	db	32
  2576  00FCCC  00                 	db	0
  2577  00FCCD                     STR_37:
  2578                           
  2579                           ; BSR set to: 57
  2580  00FCCD  45                 	db	69	;'E'
  2581  00FCCE  53                 	db	83	;'S'
  2582  00FCCF  52                 	db	82	;'R'
  2583  00FCD0  20                 	db	32
  2584  00FCD1  20                 	db	32
  2585  00FCD2  25                 	db	37
  2586  00FCD3  32                 	db	50	;'2'
  2587  00FCD4  2E                 	db	46
  2588  00FCD5  36                 	db	54	;'6'
  2589  00FCD6  66                 	db	102	;'f'
  2590  00FCD7  20                 	db	32
  2591  00FCD8  20                 	db	32
  2592  00FCD9  20                 	db	32
  2593  00FCDA  20                 	db	32
  2594  00FCDB  20                 	db	32
  2595  00FCDC  20                 	db	32
  2596  00FCDD  20                 	db	32
  2597  00FCDE  20                 	db	32
  2598  00FCDF  20                 	db	32
  2599  00FCE0  20                 	db	32
  2600  00FCE1  20                 	db	32
  2601  00FCE2  20                 	db	32
  2602  00FCE3  00                 	db	0
  2603  00FCE4                     STR_34:
  2604                           
  2605                           ; BSR set to: 57
  2606  00FCE4  42                 	db	66	;'B'
  2607  00FCE5  41                 	db	65	;'A'
  2608  00FCE6  54                 	db	84	;'T'
  2609  00FCE7  54                 	db	84	;'T'
  2610  00FCE8  20                 	db	32
  2611  00FCE9  50                 	db	80	;'P'
  2612  00FCEA  57                 	db	87	;'W'
  2613  00FCEB  52                 	db	82	;'R'
  2614  00FCEC  20                 	db	32
  2615  00FCED  25                 	db	37
  2616  00FCEE  33                 	db	51	;'3'
  2617  00FCEF  2E                 	db	46
  2618  00FCF0  32                 	db	50	;'2'
  2619  00FCF1  66                 	db	102	;'f'
  2620  00FCF2  20                 	db	32
  2621  00FCF3  20                 	db	32
  2622  00FCF4  20                 	db	32
  2623  00FCF5  20                 	db	32
  2624  00FCF6  20                 	db	32
  2625  00FCF7  20                 	db	32
  2626  00FCF8  20                 	db	32
  2627  00FCF9  20                 	db	32
  2628  00FCFA  00                 	db	0
  2629  00FCFB                     STR_38:
  2630                           
  2631                           ; BSR set to: 57
  2632  00FCFB  52                 	db	82	;'R'
  2633  00FCFC  31                 	db	49	;'1'
  2634  00FCFD  20                 	db	32
  2635  00FCFE  25                 	db	37
  2636  00FCFF  32                 	db	50	;'2'
  2637  00FD00  2E                 	db	46
  2638  00FD01  33                 	db	51	;'3'
  2639  00FD02  66                 	db	102	;'f'
  2640  00FD03  20                 	db	32
  2641  00FD04  25                 	db	37
  2642  00FD05  33                 	db	51	;'3'
  2643  00FD06  2E                 	db	46
  2644  00FD07  34                 	db	52	;'4'
  2645  00FD08  66                 	db	102	;'f'
  2646  00FD09  20                 	db	32
  2647  00FD0A  20                 	db	32
  2648  00FD0B  20                 	db	32
  2649  00FD0C  20                 	db	32
  2650  00FD0D  20                 	db	32
  2651  00FD0E  20                 	db	32
  2652  00FD0F  20                 	db	32
  2653  00FD10  20                 	db	32
  2654  00FD11  00                 	db	0
  2655  00FD12                     STR_39:
  2656                           
  2657                           ; BSR set to: 57
  2658  00FD12  52                 	db	82	;'R'
  2659  00FD13  32                 	db	50	;'2'
  2660  00FD14  20                 	db	32
  2661  00FD15  25                 	db	37
  2662  00FD16  32                 	db	50	;'2'
  2663  00FD17  2E                 	db	46
  2664  00FD18  33                 	db	51	;'3'
  2665  00FD19  66                 	db	102	;'f'
  2666  00FD1A  20                 	db	32
  2667  00FD1B  25                 	db	37
  2668  00FD1C  33                 	db	51	;'3'
  2669  00FD1D  2E                 	db	46
  2670  00FD1E  34                 	db	52	;'4'
  2671  00FD1F  66                 	db	102	;'f'
  2672  00FD20  20                 	db	32
  2673  00FD21  20                 	db	32
  2674  00FD22  20                 	db	32
  2675  00FD23  20                 	db	32
  2676  00FD24  20                 	db	32
  2677  00FD25  20                 	db	32
  2678  00FD26  20                 	db	32
  2679  00FD27  20                 	db	32
  2680  00FD28  00                 	db	0
  2681  00FD29                     STR_35:
  2682                           
  2683                           ; BSR set to: 57
  2684  00FD29  42                 	db	66	;'B'
  2685  00FD2A  41                 	db	65	;'A'
  2686  00FD2B  48                 	db	72	;'H'
  2687  00FD2C  20                 	db	32
  2688  00FD2D  25                 	db	37
  2689  00FD2E  33                 	db	51	;'3'
  2690  00FD2F  2E                 	db	46
  2691  00FD30  32                 	db	50	;'2'
  2692  00FD31  66                 	db	102	;'f'
  2693  00FD32  20                 	db	32
  2694  00FD33  50                 	db	80	;'P'
  2695  00FD34  25                 	db	37
  2696  00FD35  33                 	db	51	;'3'
  2697  00FD36  2E                 	db	46
  2698  00FD37  32                 	db	50	;'2'
  2699  00FD38  66                 	db	102	;'f'
  2700  00FD39  20                 	db	32
  2701  00FD3A  20                 	db	32
  2702  00FD3B  20                 	db	32
  2703  00FD3C  20                 	db	32
  2704  00FD3D  20                 	db	32
  2705  00FD3E  20                 	db	32
  2706  00FD3F  00                 	db	0
  2707  00FD40                     STR_16:
  2708                           
  2709                           ; BSR set to: 57
  2710  00FD40  45                 	db	69	;'E'
  2711  00FD41  53                 	db	83	;'S'
  2712  00FD42  52                 	db	82	;'R'
  2713  00FD43  20                 	db	32
  2714  00FD44  20                 	db	32
  2715  00FD45  25                 	db	37
  2716  00FD46  32                 	db	50	;'2'
  2717  00FD47  2E                 	db	46
  2718  00FD48  36                 	db	54	;'6'
  2719  00FD49  66                 	db	102	;'f'
  2720  00FD4A  20                 	db	32
  2721  00FD4B  20                 	db	32
  2722  00FD4C  20                 	db	32
  2723  00FD4D  20                 	db	32
  2724  00FD4E  20                 	db	32
  2725  00FD4F  20                 	db	32
  2726  00FD50  20                 	db	32
  2727  00FD51  20                 	db	32
  2728  00FD52  20                 	db	32
  2729  00FD53  20                 	db	32
  2730  00FD54  20                 	db	32
  2731  00FD55  00                 	db	0
  2732  00FD56                     STR_10:
  2733                           
  2734                           ; BSR set to: 57
  2735  00FD56  53                 	db	83	;'S'
  2736  00FD57  74                 	db	116	;'t'
  2737  00FD58  61                 	db	97	;'a'
  2738  00FD59  74                 	db	116	;'t'
  2739  00FD5A  69                 	db	105	;'i'
  2740  00FD5B  63                 	db	99	;'c'
  2741  00FD5C  20                 	db	32
  2742  00FD5D  53                 	db	83	;'S'
  2743  00FD5E  4F                 	db	79	;'O'
  2744  00FD5F  43                 	db	67	;'C'
  2745  00FD60  20                 	db	32
  2746  00FD61  25                 	db	37
  2747  00FD62  64                 	db	100	;'d'
  2748  00FD63  20                 	db	32
  2749  00FD64  20                 	db	32
  2750  00FD65  20                 	db	32
  2751  00FD66  20                 	db	32
  2752  00FD67  20                 	db	32
  2753  00FD68  20                 	db	32
  2754  00FD69  20                 	db	32
  2755  00FD6A  20                 	db	32
  2756  00FD6B  00                 	db	0
  2757  00FD6C                     STR_31:
  2758                           
  2759                           ; BSR set to: 57
  2760  00FD6C  42                 	db	66	;'B'
  2761  00FD6D  41                 	db	65	;'A'
  2762  00FD6E  54                 	db	84	;'T'
  2763  00FD6F  20                 	db	32
  2764  00FD70  49                 	db	73	;'I'
  2765  00FD71  57                 	db	87	;'W'
  2766  00FD72  48                 	db	72	;'H'
  2767  00FD73  20                 	db	32
  2768  00FD74  25                 	db	37
  2769  00FD75  34                 	db	52	;'4'
  2770  00FD76  2E                 	db	46
  2771  00FD77  31                 	db	49	;'1'
  2772  00FD78  66                 	db	102	;'f'
  2773  00FD79  20                 	db	32
  2774  00FD7A  20                 	db	32
  2775  00FD7B  20                 	db	32
  2776  00FD7C  20                 	db	32
  2777  00FD7D  20                 	db	32
  2778  00FD7E  20                 	db	32
  2779  00FD7F  20                 	db	32
  2780  00FD80  20                 	db	32
  2781  00FD81  00                 	db	0
  2782  00FD82                     STR_32:
  2783                           
  2784                           ; BSR set to: 57
  2785  00FD82  42                 	db	66	;'B'
  2786  00FD83  41                 	db	65	;'A'
  2787  00FD84  54                 	db	84	;'T'
  2788  00FD85  20                 	db	32
  2789  00FD86  4F                 	db	79	;'O'
  2790  00FD87  57                 	db	87	;'W'
  2791  00FD88  48                 	db	72	;'H'
  2792  00FD89  20                 	db	32
  2793  00FD8A  25                 	db	37
  2794  00FD8B  34                 	db	52	;'4'
  2795  00FD8C  2E                 	db	46
  2796  00FD8D  31                 	db	49	;'1'
  2797  00FD8E  66                 	db	102	;'f'
  2798  00FD8F  20                 	db	32
  2799  00FD90  20                 	db	32
  2800  00FD91  20                 	db	32
  2801  00FD92  20                 	db	32
  2802  00FD93  20                 	db	32
  2803  00FD94  20                 	db	32
  2804  00FD95  20                 	db	32
  2805  00FD96  20                 	db	32
  2806  00FD97  00                 	db	0
  2807  00FD98                     STR_33:
  2808                           
  2809                           ; BSR set to: 57
  2810  00FD98  42                 	db	66	;'B'
  2811  00FD99  41                 	db	65	;'A'
  2812  00FD9A  54                 	db	84	;'T'
  2813  00FD9B  20                 	db	32
  2814  00FD9C  54                 	db	84	;'T'
  2815  00FD9D  57                 	db	87	;'W'
  2816  00FD9E  48                 	db	72	;'H'
  2817  00FD9F  20                 	db	32
  2818  00FDA0  25                 	db	37
  2819  00FDA1  34                 	db	52	;'4'
  2820  00FDA2  2E                 	db	46
  2821  00FDA3  31                 	db	49	;'1'
  2822  00FDA4  66                 	db	102	;'f'
  2823  00FDA5  20                 	db	32
  2824  00FDA6  20                 	db	32
  2825  00FDA7  20                 	db	32
  2826  00FDA8  20                 	db	32
  2827  00FDA9  20                 	db	32
  2828  00FDAA  20                 	db	32
  2829  00FDAB  20                 	db	32
  2830  00FDAC  20                 	db	32
  2831  00FDAD  00                 	db	0
  2832  00FDAE                     STR_27:
  2833                           
  2834                           ; BSR set to: 57
  2835  00FDAE  49                 	db	73	;'I'
  2836  00FDAF  4E                 	db	78	;'N'
  2837  00FDB0  56                 	db	86	;'V'
  2838  00FDB1  20                 	db	32
  2839  00FDB2  20                 	db	32
  2840  00FDB3  57                 	db	87	;'W'
  2841  00FDB4  48                 	db	72	;'H'
  2842  00FDB5  20                 	db	32
  2843  00FDB6  25                 	db	37
  2844  00FDB7  33                 	db	51	;'3'
  2845  00FDB8  2E                 	db	46
  2846  00FDB9  32                 	db	50	;'2'
  2847  00FDBA  66                 	db	102	;'f'
  2848  00FDBB  20                 	db	32
  2849  00FDBC  20                 	db	32
  2850  00FDBD  20                 	db	32
  2851  00FDBE  20                 	db	32
  2852  00FDBF  20                 	db	32
  2853  00FDC0  20                 	db	32
  2854  00FDC1  20                 	db	32
  2855  00FDC2  20                 	db	32
  2856  00FDC3  00                 	db	0
  2857  00FDC4                     STR_26:
  2858                           
  2859                           ; BSR set to: 57
  2860  00FDC4  4C                 	db	76	;'L'
  2861  00FDC5  4F                 	db	79	;'O'
  2862  00FDC6  41                 	db	65	;'A'
  2863  00FDC7  44                 	db	68	;'D'
  2864  00FDC8  20                 	db	32
  2865  00FDC9  57                 	db	87	;'W'
  2866  00FDCA  48                 	db	72	;'H'
  2867  00FDCB  20                 	db	32
  2868  00FDCC  25                 	db	37
  2869  00FDCD  33                 	db	51	;'3'
  2870  00FDCE  2E                 	db	46
  2871  00FDCF  32                 	db	50	;'2'
  2872  00FDD0  66                 	db	102	;'f'
  2873  00FDD1  20                 	db	32
  2874  00FDD2  20                 	db	32
  2875  00FDD3  20                 	db	32
  2876  00FDD4  20                 	db	32
  2877  00FDD5  20                 	db	32
  2878  00FDD6  20                 	db	32
  2879  00FDD7  20                 	db	32
  2880  00FDD8  20                 	db	32
  2881  00FDD9  00                 	db	0
  2882  00FDDA                     STR_25:
  2883                           
  2884                           ; BSR set to: 57
  2885  00FDDA  50                 	db	80	;'P'
  2886  00FDDB  56                 	db	86	;'V'
  2887  00FDDC  20                 	db	32
  2888  00FDDD  25                 	db	37
  2889  00FDDE  63                 	db	99	;'c'
  2890  00FDDF  20                 	db	32
  2891  00FDE0  57                 	db	87	;'W'
  2892  00FDE1  48                 	db	72	;'H'
  2893  00FDE2  20                 	db	32
  2894  00FDE3  25                 	db	37
  2895  00FDE4  33                 	db	51	;'3'
  2896  00FDE5  2E                 	db	46
  2897  00FDE6  32                 	db	50	;'2'
  2898  00FDE7  66                 	db	102	;'f'
  2899  00FDE8  20                 	db	32
  2900  00FDE9  20                 	db	32
  2901  00FDEA  20                 	db	32
  2902  00FDEB  20                 	db	32
  2903  00FDEC  20                 	db	32
  2904  00FDED  20                 	db	32
  2905  00FDEE  20                 	db	32
  2906  00FDEF  00                 	db	0
  2907  00FDF0                     STR_24:
  2908                           
  2909                           ; BSR set to: 57
  2910  00FDF0  49                 	db	73	;'I'
  2911  00FDF1  4E                 	db	78	;'N'
  2912  00FDF2  56                 	db	86	;'V'
  2913  00FDF3  20                 	db	32
  2914  00FDF4  20                 	db	32
  2915  00FDF5  50                 	db	80	;'P'
  2916  00FDF6  57                 	db	87	;'W'
  2917  00FDF7  52                 	db	82	;'R'
  2918  00FDF8  20                 	db	32
  2919  00FDF9  25                 	db	37
  2920  00FDFA  33                 	db	51	;'3'
  2921  00FDFB  2E                 	db	46
  2922  00FDFC  32                 	db	50	;'2'
  2923  00FDFD  66                 	db	102	;'f'
  2924  00FDFE  20                 	db	32
  2925  00FDFF  20                 	db	32
  2926  00FE00  20                 	db	32
  2927  00FE01  20                 	db	32
  2928  00FE02  20                 	db	32
  2929  00FE03  20                 	db	32
  2930  00FE04  20                 	db	32
  2931  00FE05  00                 	db	0
  2932  00FE06                     STR_23:
  2933                           
  2934                           ; BSR set to: 57
  2935  00FE06  4C                 	db	76	;'L'
  2936  00FE07  4F                 	db	79	;'O'
  2937  00FE08  41                 	db	65	;'A'
  2938  00FE09  44                 	db	68	;'D'
  2939  00FE0A  20                 	db	32
  2940  00FE0B  50                 	db	80	;'P'
  2941  00FE0C  57                 	db	87	;'W'
  2942  00FE0D  52                 	db	82	;'R'
  2943  00FE0E  20                 	db	32
  2944  00FE0F  25                 	db	37
  2945  00FE10  33                 	db	51	;'3'
  2946  00FE11  2E                 	db	46
  2947  00FE12  32                 	db	50	;'2'
  2948  00FE13  66                 	db	102	;'f'
  2949  00FE14  20                 	db	32
  2950  00FE15  20                 	db	32
  2951  00FE16  20                 	db	32
  2952  00FE17  20                 	db	32
  2953  00FE18  20                 	db	32
  2954  00FE19  20                 	db	32
  2955  00FE1A  20                 	db	32
  2956  00FE1B  00                 	db	0
  2957  00FE1C                     STR_22:
  2958                           
  2959                           ; BSR set to: 57
  2960  00FE1C  50                 	db	80	;'P'
  2961  00FE1D  56                 	db	86	;'V'
  2962  00FE1E  20                 	db	32
  2963  00FE1F  25                 	db	37
  2964  00FE20  63                 	db	99	;'c'
  2965  00FE21  20                 	db	32
  2966  00FE22  50                 	db	80	;'P'
  2967  00FE23  57                 	db	87	;'W'
  2968  00FE24  52                 	db	82	;'R'
  2969  00FE25  20                 	db	32
  2970  00FE26  25                 	db	37
  2971  00FE27  33                 	db	51	;'3'
  2972  00FE28  2E                 	db	46
  2973  00FE29  32                 	db	50	;'2'
  2974  00FE2A  66                 	db	102	;'f'
  2975  00FE2B  20                 	db	32
  2976  00FE2C  20                 	db	32
  2977  00FE2D  20                 	db	32
  2978  00FE2E  20                 	db	32
  2979  00FE2F  20                 	db	32
  2980  00FE30  20                 	db	32
  2981  00FE31  00                 	db	0
  2982  00FE32                     STR_11:
  2983                           
  2984                           ; BSR set to: 57
  2985  00FE32  42                 	db	66	;'B'
  2986  00FE33  61                 	db	97	;'a'
  2987  00FE34  74                 	db	116	;'t'
  2988  00FE35  74                 	db	116	;'t'
  2989  00FE36  65                 	db	101	;'e'
  2990  00FE37  72                 	db	114	;'r'
  2991  00FE38  79                 	db	121	;'y'
  2992  00FE39  20                 	db	32
  2993  00FE3A  41                 	db	65	;'A'
  2994  00FE3B  68                 	db	104	;'h'
  2995  00FE3C  20                 	db	32
  2996  00FE3D  25                 	db	37
  2997  00FE3E  33                 	db	51	;'3'
  2998  00FE3F  2E                 	db	46
  2999  00FE40  32                 	db	50	;'2'
  3000  00FE41  66                 	db	102	;'f'
  3001  00FE42  20                 	db	32
  3002  00FE43  20                 	db	32
  3003  00FE44  20                 	db	32
  3004  00FE45  20                 	db	32
  3005  00FE46  20                 	db	32
  3006  00FE47  00                 	db	0
  3007  00FE48                     STR_29:
  3008                           
  3009                           ; BSR set to: 57
  3010  00FE48  42                 	db	66	;'B'
  3011  00FE49  56                 	db	86	;'V'
  3012  00FE4A  20                 	db	32
  3013  00FE4B  25                 	db	37
  3014  00FE4C  32                 	db	50	;'2'
  3015  00FE4D  2E                 	db	46
  3016  00FE4E  32                 	db	50	;'2'
  3017  00FE4F  66                 	db	102	;'f'
  3018  00FE50  20                 	db	32
  3019  00FE51  42                 	db	66	;'B'
  3020  00FE52  41                 	db	65	;'A'
  3021  00FE53  20                 	db	32
  3022  00FE54  25                 	db	37
  3023  00FE55  32                 	db	50	;'2'
  3024  00FE56  2E                 	db	46
  3025  00FE57  32                 	db	50	;'2'
  3026  00FE58  66                 	db	102	;'f'
  3027  00FE59  20                 	db	32
  3028  00FE5A  20                 	db	32
  3029  00FE5B  20                 	db	32
  3030  00FE5C  20                 	db	32
  3031  00FE5D  00                 	db	0
  3032  00FE5E                     STR_30:
  3033                           
  3034                           ; BSR set to: 57
  3035  00FE5E  43                 	db	67	;'C'
  3036  00FE5F  56                 	db	86	;'V'
  3037  00FE60  20                 	db	32
  3038  00FE61  25                 	db	37
  3039  00FE62  32                 	db	50	;'2'
  3040  00FE63  2E                 	db	46
  3041  00FE64  32                 	db	50	;'2'
  3042  00FE65  66                 	db	102	;'f'
  3043  00FE66  20                 	db	32
  3044  00FE67  4C                 	db	76	;'L'
  3045  00FE68  41                 	db	65	;'A'
  3046  00FE69  20                 	db	32
  3047  00FE6A  25                 	db	37
  3048  00FE6B  32                 	db	50	;'2'
  3049  00FE6C  2E                 	db	46
  3050  00FE6D  32                 	db	50	;'2'
  3051  00FE6E  66                 	db	102	;'f'
  3052  00FE6F  20                 	db	32
  3053  00FE70  20                 	db	32
  3054  00FE71  20                 	db	32
  3055  00FE72  20                 	db	32
  3056  00FE73  00                 	db	0
  3057  00FE74                     STR_28:
  3058                           
  3059                           ; BSR set to: 57
  3060  00FE74  50                 	db	80	;'P'
  3061  00FE75  56                 	db	86	;'V'
  3062  00FE76  20                 	db	32
  3063  00FE77  25                 	db	37
  3064  00FE78  32                 	db	50	;'2'
  3065  00FE79  2E                 	db	46
  3066  00FE7A  32                 	db	50	;'2'
  3067  00FE7B  66                 	db	102	;'f'
  3068  00FE7C  20                 	db	32
  3069  00FE7D  50                 	db	80	;'P'
  3070  00FE7E  41                 	db	65	;'A'
  3071  00FE7F  20                 	db	32
  3072  00FE80  25                 	db	37
  3073  00FE81  32                 	db	50	;'2'
  3074  00FE82  2E                 	db	46
  3075  00FE83  32                 	db	50	;'2'
  3076  00FE84  66                 	db	102	;'f'
  3077  00FE85  20                 	db	32
  3078  00FE86  20                 	db	32
  3079  00FE87  20                 	db	32
  3080  00FE88  20                 	db	32
  3081  00FE89  00                 	db	0
  3082  00FE8A                     STR_40:
  3083                           
  3084                           ; BSR set to: 57
  3085  00FE8A  25                 	db	37
  3086  00FE8B  64                 	db	100	;'d'
  3087  00FE8C  20                 	db	32
  3088  00FE8D  25                 	db	37
  3089  00FE8E  32                 	db	50	;'2'
  3090  00FE8F  2E                 	db	46
  3091  00FE90  34                 	db	52	;'4'
  3092  00FE91  66                 	db	102	;'f'
  3093  00FE92  2C                 	db	44
  3094  00FE93  20                 	db	32
  3095  00FE94  25                 	db	37
  3096  00FE95  64                 	db	100	;'d'
  3097  00FE96  20                 	db	32
  3098  00FE97  20                 	db	32
  3099  00FE98  54                 	db	84	;'T'
  3100  00FE99  52                 	db	82	;'R'
  3101  00FE9A  49                 	db	73	;'I'
  3102  00FE9B  4D                 	db	77	;'M'
  3103  00FE9C  20                 	db	32
  3104  00FE9D  20                 	db	32
  3105  00FE9E  20                 	db	32
  3106  00FE9F  00                 	db	0
  3107  00FEA0                     STR_5:
  3108                           
  3109                           ; BSR set to: 57
  3110  00FEA0  20                 	db	32
  3111  00FEA1  20                 	db	32
  3112  00FEA2  20                 	db	32
  3113  00FEA3  20                 	db	32
  3114  00FEA4  20                 	db	32
  3115  00FEA5  20                 	db	32
  3116  00FEA6  20                 	db	32
  3117  00FEA7  20                 	db	32
  3118  00FEA8  20                 	db	32
  3119  00FEA9  20                 	db	32
  3120  00FEAA  20                 	db	32
  3121  00FEAB  20                 	db	32
  3122  00FEAC  20                 	db	32
  3123  00FEAD  20                 	db	32
  3124  00FEAE  20                 	db	32
  3125  00FEAF  20                 	db	32
  3126  00FEB0  20                 	db	32
  3127  00FEB1  20                 	db	32
  3128  00FEB2  20                 	db	32
  3129  00FEB3  20                 	db	32
  3130  00FEB4  00                 	db	0
  3131  00FEB5                     STR_8:
  3132                           
  3133                           ; BSR set to: 57
  3134  00FEB5  42                 	db	66	;'B'
  3135  00FEB6  56                 	db	86	;'V'
  3136  00FEB7  20                 	db	32
  3137  00FEB8  25                 	db	37
  3138  00FEB9  32                 	db	50	;'2'
  3139  00FEBA  2E                 	db	46
  3140  00FEBB  34                 	db	52	;'4'
  3141  00FEBC  66                 	db	102	;'f'
  3142  00FEBD  20                 	db	32
  3143  00FEBE  20                 	db	32
  3144  00FEBF  20                 	db	32
  3145  00FEC0  20                 	db	32
  3146  00FEC1  20                 	db	32
  3147  00FEC2  20                 	db	32
  3148  00FEC3  20                 	db	32
  3149  00FEC4  20                 	db	32
  3150  00FEC5  20                 	db	32
  3151  00FEC6  20                 	db	32
  3152  00FEC7  20                 	db	32
  3153  00FEC8  20                 	db	32
  3154  00FEC9  00                 	db	0
  3155  00FECA                     STR_4:
  3156                           
  3157                           ; BSR set to: 57
  3158  00FECA  20                 	db	32
  3159  00FECB  4E                 	db	78	;'N'
  3160  00FECC  53                 	db	83	;'S'
  3161  00FECD  41                 	db	65	;'A'
  3162  00FECE  53                 	db	83	;'S'
  3163  00FECF  50                 	db	80	;'P'
  3164  00FED0  4F                 	db	79	;'O'
  3165  00FED1  4F                 	db	79	;'O'
  3166  00FED2  4B                 	db	75	;'K'
  3167  00FED3  20                 	db	32
  3168  00FED4  20                 	db	32
  3169  00FED5  20                 	db	32
  3170  00FED6  20                 	db	32
  3171  00FED7  20                 	db	32
  3172  00FED8  20                 	db	32
  3173  00FED9  20                 	db	32
  3174  00FEDA  20                 	db	32
  3175  00FEDB  20                 	db	32
  3176  00FEDC  20                 	db	32
  3177  00FEDD  20                 	db	32
  3178  00FEDE  00                 	db	0
  3179  00FEDF                     STR_12:
  3180                           
  3181                           ; BSR set to: 57
  3182  00FEDF  42                 	db	66	;'B'
  3183  00FEE0  61                 	db	97	;'a'
  3184  00FEE1  74                 	db	116	;'t'
  3185  00FEE2  74                 	db	116	;'t'
  3186  00FEE3  65                 	db	101	;'e'
  3187  00FEE4  72                 	db	114	;'r'
  3188  00FEE5  79                 	db	121	;'y'
  3189  00FEE6  20                 	db	32
  3190  00FEE7  45                 	db	69	;'E'
  3191  00FEE8  53                 	db	83	;'S'
  3192  00FEE9  52                 	db	82	;'R'
  3193  00FEEA  20                 	db	32
  3194  00FEEB  20                 	db	32
  3195  00FEEC  20                 	db	32
  3196  00FEED  20                 	db	32
  3197  00FEEE  20                 	db	32
  3198  00FEEF  20                 	db	32
  3199  00FEF0  20                 	db	32
  3200  00FEF1  20                 	db	32
  3201  00FEF2  20                 	db	32
  3202  00FEF3  00                 	db	0
  3203  00FEF4                     STR_13:
  3204                           
  3205                           ; BSR set to: 57
  3206  00FEF4  43                 	db	67	;'C'
  3207  00FEF5  61                 	db	97	;'a'
  3208  00FEF6  6C                 	db	108	;'l'
  3209  00FEF7  63                 	db	99	;'c'
  3210  00FEF8  75                 	db	117	;'u'
  3211  00FEF9  6C                 	db	108	;'l'
  3212  00FEFA  61                 	db	97	;'a'
  3213  00FEFB  74                 	db	116	;'t'
  3214  00FEFC  69                 	db	105	;'i'
  3215  00FEFD  6F                 	db	111	;'o'
  3216  00FEFE  6E                 	db	110	;'n'
  3217  00FEFF  20                 	db	32
  3218  00FF00  20                 	db	32
  3219  00FF01  20                 	db	32
  3220  00FF02  20                 	db	32
  3221  00FF03  20                 	db	32
  3222  00FF04  20                 	db	32
  3223  00FF05  20                 	db	32
  3224  00FF06  20                 	db	32
  3225  00FF07  20                 	db	32
  3226  00FF08  00                 	db	0
  3227  00FF09                     STR_2:
  3228                           
  3229                           ; BSR set to: 57
  3230  00FF09  20                 	db	32
  3231  00FF0A  56                 	db	86	;'V'
  3232  00FF0B  65                 	db	101	;'e'
  3233  00FF0C  72                 	db	114	;'r'
  3234  00FF0D  73                 	db	115	;'s'
  3235  00FF0E  69                 	db	105	;'i'
  3236  00FF0F  6F                 	db	111	;'o'
  3237  00FF10  6E                 	db	110	;'n'
  3238  00FF11  20                 	db	32
  3239  00FF12  25                 	db	37
  3240  00FF13  73                 	db	115	;'s'
  3241  00FF14  20                 	db	32
  3242  00FF15  20                 	db	32
  3243  00FF16  20                 	db	32
  3244  00FF17  20                 	db	32
  3245  00FF18  20                 	db	32
  3246  00FF19  20                 	db	32
  3247  00FF1A  20                 	db	32
  3248  00FF1B  20                 	db	32
  3249  00FF1C  20                 	db	32
  3250  00FF1D  00                 	db	0
  3251  00FF1E                     STR_1:
  3252                           
  3253                           ; BSR set to: 57
  3254  00FF1E  20                 	db	32
  3255  00FF1F  4D                 	db	77	;'M'
  3256  00FF20  42                 	db	66	;'B'
  3257  00FF21  4D                 	db	77	;'M'
  3258  00FF22  43                 	db	67	;'C'
  3259  00FF23  20                 	db	32
  3260  00FF24  53                 	db	83	;'S'
  3261  00FF25  4F                 	db	79	;'O'
  3262  00FF26  4C                 	db	76	;'L'
  3263  00FF27  41                 	db	65	;'A'
  3264  00FF28  52                 	db	82	;'R'
  3265  00FF29  4D                 	db	77	;'M'
  3266  00FF2A  4F                 	db	79	;'O'
  3267  00FF2B  4E                 	db	78	;'N'
  3268  00FF2C  20                 	db	32
  3269  00FF2D  20                 	db	32
  3270  00FF2E  20                 	db	32
  3271  00FF2F  20                 	db	32
  3272  00FF30  20                 	db	32
  3273  00FF31  20                 	db	32
  3274  00FF32  00                 	db	0
  3275  00FF33                     STR_15:
  3276                           
  3277                           ; BSR set to: 57
  3278  00FF33  43                 	db	67	;'C'
  3279  00FF34  68                 	db	104	;'h'
  3280  00FF35  65                 	db	101	;'e'
  3281  00FF36  63                 	db	99	;'c'
  3282  00FF37  6B                 	db	107	;'k'
  3283  00FF38  69                 	db	105	;'i'
  3284  00FF39  6E                 	db	110	;'n'
  3285  00FF3A  67                 	db	103	;'g'
  3286  00FF3B  20                 	db	32
  3287  00FF3C  25                 	db	37
  3288  00FF3D  63                 	db	99	;'c'
  3289  00FF3E  20                 	db	32
  3290  00FF3F  25                 	db	37
  3291  00FF40  63                 	db	99	;'c'
  3292  00FF41  20                 	db	32
  3293  00FF42  20                 	db	32
  3294  00FF43  20                 	db	32
  3295  00FF44  20                 	db	32
  3296  00FF45  20                 	db	32
  3297  00FF46  20                 	db	32
  3298  00FF47  00                 	db	0
  3299  00FF48                     STR_14:
  3300                           
  3301                           ; BSR set to: 57
  3302  00FF48  43                 	db	67	;'C'
  3303  00FF49  68                 	db	104	;'h'
  3304  00FF4A  65                 	db	101	;'e'
  3305  00FF4B  63                 	db	99	;'c'
  3306  00FF4C  6B                 	db	107	;'k'
  3307  00FF4D  20                 	db	32
  3308  00FF4E  33                 	db	51	;'3'
  3309  00FF4F  30                 	db	48	;'0'
  3310  00FF50  20                 	db	32
  3311  00FF51  73                 	db	115	;'s'
  3312  00FF52  65                 	db	101	;'e'
  3313  00FF53  63                 	db	99	;'c'
  3314  00FF54  6F                 	db	111	;'o'
  3315  00FF55  6E                 	db	110	;'n'
  3316  00FF56  64                 	db	100	;'d'
  3317  00FF57  73                 	db	115	;'s'
  3318  00FF58  20                 	db	32
  3319  00FF59  20                 	db	32
  3320  00FF5A  20                 	db	32
  3321  00FF5B  20                 	db	32
  3322  00FF5C  00                 	db	0
  3323  00FF5D                     STR_47:
  3324                           
  3325                           ; BSR set to: 57
  3326  00FF5D  48                 	db	72	;'H'
  3327  00FF5E  45                 	db	69	;'E'
  3328  00FF5F  4C                 	db	76	;'L'
  3329  00FF60  50                 	db	80	;'P'
  3330  00FF61  20                 	db	32
  3331  00FF62  25                 	db	37
  3332  00FF63  73                 	db	115	;'s'
  3333  00FF64  20                 	db	32
  3334  00FF65  20                 	db	32
  3335  00FF66  20                 	db	32
  3336  00FF67  20                 	db	32
  3337  00FF68  20                 	db	32
  3338  00FF69  20                 	db	32
  3339  00FF6A  20                 	db	32
  3340  00FF6B  20                 	db	32
  3341  00FF6C  20                 	db	32
  3342  00FF6D  20                 	db	32
  3343  00FF6E  20                 	db	32
  3344  00FF6F  00                 	db	0
  3345  00FF70                     
  3346                           ; BSR set to: 57
  3347  00FF70  44                 	db	68	;'D'
  3348  00FF71  49                 	db	73	;'I'
  3349  00FF72  53                 	db	83	;'S'
  3350  00FF73  50                 	db	80	;'P'
  3351  00FF74  4C                 	db	76	;'L'
  3352  00FF75  41                 	db	65	;'A'
  3353  00FF76  59                 	db	89	;'Y'
  3354  00FF77  20                 	db	32
  3355  00FF78  25                 	db	37
  3356  00FF79  73                 	db	115	;'s'
  3357  00FF7A  20                 	db	32
  3358  00FF7B  20                 	db	32
  3359  00FF7C  20                 	db	32
  3360  00FF7D  20                 	db	32
  3361  00FF7E  20                 	db	32
  3362  00FF7F  20                 	db	32
  3363  00FF80  20                 	db	32
  3364  00FF81  20                 	db	32
  3365  00FF82  00                 	db	0
  3366  00FF83                     
  3367                           ; BSR set to: 57
  3368  00FF83  25                 	db	37
  3369  00FF84  64                 	db	100	;'d'
  3370  00FF85  20                 	db	32
  3371  00FF86  25                 	db	37
  3372  00FF87  32                 	db	50	;'2'
  3373  00FF88  2E                 	db	46
  3374  00FF89  34                 	db	52	;'4'
  3375  00FF8A  66                 	db	102	;'f'
  3376  00FF8B  2C                 	db	44
  3377  00FF8C  20                 	db	32
  3378  00FF8D  25                 	db	37
  3379  00FF8E  64                 	db	100	;'d'
  3380  00FF8F  20                 	db	32
  3381  00FF90  20                 	db	32
  3382  00FF91  20                 	db	32
  3383  00FF92  23                 	db	35
  3384  00FF93  00                 	db	0
  3385  00FF94                     STR_19:
  3386                           
  3387                           ; BSR set to: 57
  3388  00FF94  25                 	db	37
  3389  00FF95  64                 	db	100	;'d'
  3390  00FF96  20                 	db	32
  3391  00FF97  25                 	db	37
  3392  00FF98  32                 	db	50	;'2'
  3393  00FF99  2E                 	db	46
  3394  00FF9A  34                 	db	52	;'4'
  3395  00FF9B  66                 	db	102	;'f'
  3396  00FF9C  20                 	db	32
  3397  00FF9D  20                 	db	32
  3398  00FF9E  20                 	db	32
  3399  00FF9F  25                 	db	37
  3400  00FFA0  64                 	db	100	;'d'
  3401  00FFA1  20                 	db	32
  3402  00FFA2  20                 	db	32
  3403  00FFA3  00                 	db	0
  3404  00FFA4                     STR_51:
  3405                           
  3406                           ; BSR set to: 57
  3407  00FFA4  76                 	db	118	;'v'
  3408  00FFA5  74                 	db	116	;'t'
  3409  00FFA6  65                 	db	101	;'e'
  3410  00FFA7  72                 	db	114	;'r'
  3411  00FFA8  6D                 	db	109	;'m'
  3412  00FFA9  20                 	db	32
  3413  00FFAA  25                 	db	37
  3414  00FFAB  78                 	db	120	;'x'
  3415  00FFAC  3A                 	db	58	;':'
  3416  00FFAD  25                 	db	37
  3417  00FFAE  78                 	db	120	;'x'
  3418  00FFAF  20                 	db	32
  3419  00FFB0  20                 	db	32
  3420  00FFB1  20                 	db	32
  3421  00FFB2  00                 	db	0
  3422  00FFB3                     STR_45:
  3423                           
  3424                           ; BSR set to: 57
  3425  00FFB3  4A                 	db	74	;'J'
  3426  00FFB4  61                 	db	97	;'a'
  3427  00FFB5  6E                 	db	110	;'n'
  3428  00FFB6  20                 	db	32
  3429  00FFB7  32                 	db	50	;'2'
  3430  00FFB8  33                 	db	51	;'3'
  3431  00FFB9  20                 	db	32
  3432  00FFBA  32                 	db	50	;'2'
  3433  00FFBB  30                 	db	48	;'0'
  3434  00FFBC  32                 	db	50	;'2'
  3435  00FFBD  30                 	db	48	;'0'
  3436  00FFBE  00                 	db	0
  3437  00FFBF                     STR_49:
  3438                           
  3439                           ; BSR set to: 57
  3440  00FFBF  25                 	db	37
  3441  00FFC0  73                 	db	115	;'s'
  3442  00FFC1  20                 	db	32
  3443  00FFC2  20                 	db	32
  3444  00FFC3  20                 	db	32
  3445  00FFC4  20                 	db	32
  3446  00FFC5  20                 	db	32
  3447  00FFC6  20                 	db	32
  3448  00FFC7  20                 	db	32
  3449  00FFC8  00                 	db	0
  3450  00FFC9                     STR_46:
  3451                           
  3452                           ; BSR set to: 57
  3453  00FFC9  31                 	db	49	;'1'
  3454  00FFCA  31                 	db	49	;'1'
  3455  00FFCB  3A                 	db	58	;':'
  3456  00FFCC  34                 	db	52	;'4'
  3457  00FFCD  36                 	db	54	;'6'
  3458  00FFCE  3A                 	db	58	;':'
  3459  00FFCF  34                 	db	52	;'4'
  3460  00FFD0  39                 	db	57	;'9'
  3461  00FFD1  00                 	db	0
  3462  00FFD2                     STR_3:
  3463                           
  3464                           ; BSR set to: 57
  3465  00FFD2  31                 	db	49	;'1'
  3466  00FFD3  2E                 	db	46
  3467  00FFD4  31                 	db	49	;'1'
  3468  00FFD5  35                 	db	53	;'5'
  3469  00FFD6  00                 	db	0
  3470  00FFD7                     STR_65:
  3471                           
  3472                           ; BSR set to: 57
  3473  00FFD7  49                 	db	73	;'I'
  3474  00FFD8  4E                 	db	78	;'N'
  3475  00FFD9  46                 	db	70	;'F'
  3476  00FFDA  00                 	db	0
  3477  00FFDB                     STR_69:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FFDB  4E                 	db	78	;'N'
  3481  00FFDC  41                 	db	65	;'A'
  3482  00FFDD  4E                 	db	78	;'N'
  3483  00FFDE  00                 	db	0
  3484  00FFDF                     STR_66:
  3485                           
  3486                           ; BSR set to: 57
  3487  00FFDF  69                 	db	105	;'i'
  3488  00FFE0  6E                 	db	110	;'n'
  3489  00FFE1  66                 	db	102	;'f'
  3490  00FFE2  00                 	db	0
  3491  00FFE3                     STR_70:
  3492                           
  3493                           ; BSR set to: 57
  3494  00FFE3  6E                 	db	110	;'n'
  3495  00FFE4  61                 	db	97	;'a'
  3496  00FFE5  6E                 	db	110	;'n'
  3497  00FFE6  00                 	db	0
  3498  00FFE7                     STR_96:
  3499                           
  3500                           ; BSR set to: 57
  3501  00FFE7  6C                 	db	108	;'l'
  3502  00FFE8  58                 	db	88	;'X'
  3503  00FFE9  00                 	db	0
  3504  00FFEA                     STR_73:
  3505                           
  3506                           ; BSR set to: 57
  3507  00FFEA  6C                 	db	108	;'l'
  3508  00FFEB  64                 	db	100	;'d'
  3509  00FFEC  00                 	db	0
  3510  00FFED                     STR_82:
  3511                           
  3512                           ; BSR set to: 57
  3513  00FFED  6C                 	db	108	;'l'
  3514  00FFEE  66                 	db	102	;'f'
  3515  00FFEF  00                 	db	0
  3516  00FFF0                     STR_77:
  3517                           
  3518                           ; BSR set to: 57
  3519  00FFF0  6C                 	db	108	;'l'
  3520  00FFF1  69                 	db	105	;'i'
  3521  00FFF2  00                 	db	0
  3522  00FFF3                     STR_87:
  3523                           
  3524                           ; BSR set to: 57
  3525  00FFF3  6C                 	db	108	;'l'
  3526  00FFF4  75                 	db	117	;'u'
  3527  00FFF5  00                 	db	0
  3528  00FFF6                     STR_92:
  3529                           
  3530                           ; BSR set to: 57
  3531  00FFF6  6C                 	db	108	;'l'
  3532  00FFF7  78                 	db	120	;'x'
  3533  00FFF8  00                 	db	0
  3534  00FFF9                     STR_44:
  3535                           
  3536                           ; BSR set to: 57
  3537  00FFF9  25                 	db	37
  3538  00FFFA  63                 	db	99	;'c'
  3539  00FFFB  00                 	db	0
  3540  00FFFC                     STR_43:
  3541                           
  3542                           ; BSR set to: 57
  3543  00FFFC  25                 	db	37
  3544  00FFFD  73                 	db	115	;'s'
  3545  00FFFE  00                 	db	0
  3546  0000                     
  3547                           ; #config settings
  3548  00FFFF  00                 	db	0	; dummy byte at the end
  3549  0000                     
  3550                           	psect	cinit
  3551  01A312                     __pcinit:
  3552                           	opt callstack 0
  3553  01A312                     start_initialization:
  3554                           	opt callstack 0
  3555  01A312                     __initialization:
  3556                           	opt callstack 0
  3557                           
  3558                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3559                           ; load TBLPTR registers with __pidataBIGRAM
  3560  01A312  0E70               	movlw	low __pidataBIGRAM
  3561  01A314  6EF6               	movwf	tblptrl,c
  3562  01A316  0E6B               	movlw	high __pidataBIGRAM
  3563  01A318  6EF7               	movwf	tblptrh,c
  3564  01A31A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3565  01A31C  6EF8               	movwf	tblptru,c
  3566  01A31E  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3567  01A322  EE20 F32B          	lfsr	2,811
  3568  01A326                     copy_data0:
  3569  01A326  0009               	tblrd		*+
  3570  01A328  006F FFD7 FFEE     	movff	tablat,postinc0
  3571  01A32E  50DD               	movf	postdec2,w,c
  3572  01A330  50D9               	movf	fsr2l,w,c
  3573  01A332  E1F9               	bnz	copy_data0
  3574  01A334  50DA               	movf	fsr2h,w,c
  3575  01A336  E1F7               	bnz	copy_data0
  3576                           
  3577                           ; Initialize objects allocated to BANK1 (205 bytes)
  3578                           ; load TBLPTR registers with __pidataBANK1
  3579  01A338  0E98               	movlw	low __pidataBANK1
  3580  01A33A  6EF6               	movwf	tblptrl,c
  3581  01A33C  0EA5               	movlw	high __pidataBANK1
  3582  01A33E  6EF7               	movwf	tblptrh,c
  3583  01A340  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3584  01A342  6EF8               	movwf	tblptru,c
  3585  01A344  EE00  F100         	lfsr	0,__pdataBANK1
  3586  01A348  EE20 F0CD          	lfsr	2,205
  3587  01A34C                     copy_data1:
  3588  01A34C  0009               	tblrd		*+
  3589  01A34E  006F FFD7 FFEE     	movff	tablat,postinc0
  3590  01A354  50DD               	movf	postdec2,w,c
  3591  01A356  50D9               	movf	fsr2l,w,c
  3592  01A358  E1F9               	bnz	copy_data1
  3593                           
  3594                           ; Initialize objects allocated to BANK0 (54 bytes)
  3595                           ; load TBLPTR registers with __pidataBANK0
  3596  01A35A  0ED4               	movlw	low __pidataBANK0
  3597  01A35C  6EF6               	movwf	tblptrl,c
  3598  01A35E  0EBC               	movlw	high __pidataBANK0
  3599  01A360  6EF7               	movwf	tblptrh,c
  3600  01A362  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3601  01A364  6EF8               	movwf	tblptru,c
  3602  01A366  EE00  F0AF         	lfsr	0,__pdataBANK0
  3603  01A36A  EE20 F036          	lfsr	2,54
  3604  01A36E                     copy_data2:
  3605  01A36E  0009               	tblrd		*+
  3606  01A370  006F FFD7 FFEE     	movff	tablat,postinc0
  3607  01A376  50DD               	movf	postdec2,w,c
  3608  01A378  50D9               	movf	fsr2l,w,c
  3609  01A37A  E1F9               	bnz	copy_data2
  3610                           
  3611                           ; Clear objects allocated to BIGRAM (482 bytes)
  3612  01A37C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3613  01A380  EE20 F1E2          	lfsr	2,482
  3614  01A384                     clear_0:
  3615  01A384  6AEE               	clrf	postinc0,c
  3616  01A386  50DD               	movf	postdec2,w,c
  3617  01A388  50D9               	movf	fsr2l,w,c
  3618  01A38A  E1FC               	bnz	clear_0
  3619  01A38C  50DA               	movf	fsr2h,w,c
  3620  01A38E  E1FA               	bnz	clear_0
  3621                           
  3622                           ; Clear objects allocated to BANK4 (255 bytes)
  3623  01A390  EE01  F000         	lfsr	0,__pbssBANK4
  3624  01A394  EE20 F0FF          	lfsr	2,255
  3625  01A398                     clear_1:
  3626  01A398  6AEE               	clrf	postinc0,c
  3627  01A39A  50DD               	movf	postdec2,w,c
  3628  01A39C  50D9               	movf	fsr2l,w,c
  3629  01A39E  E1FC               	bnz	clear_1
  3630  01A3A0  50DA               	movf	fsr2h,w,c
  3631  01A3A2  E1FA               	bnz	clear_1
  3632                           
  3633                           ; Clear objects allocated to BANK3 (198 bytes)
  3634  01A3A4  EE00  F300         	lfsr	0,__pbssBANK3
  3635  01A3A8  0EC6               	movlw	198
  3636  01A3AA                     clear_2:
  3637  01A3AA  6AEE               	clrf	postinc0,c
  3638  01A3AC  06E8               	decf	wreg,f,c
  3639  01A3AE  E1FD               	bnz	clear_2
  3640                           
  3641                           ; Clear objects allocated to BANK2 (231 bytes)
  3642  01A3B0  EE00  F200         	lfsr	0,__pbssBANK2
  3643  01A3B4  0EE7               	movlw	231
  3644  01A3B6                     clear_3:
  3645  01A3B6  6AEE               	clrf	postinc0,c
  3646  01A3B8  06E8               	decf	wreg,f,c
  3647  01A3BA  E1FD               	bnz	clear_3
  3648                           
  3649                           ; Clear objects allocated to BANK1 (46 bytes)
  3650  01A3BC  EE00  F1CD         	lfsr	0,__pbssBANK1
  3651  01A3C0  0E2E               	movlw	46
  3652  01A3C2                     clear_4:
  3653  01A3C2  6AEE               	clrf	postinc0,c
  3654  01A3C4  06E8               	decf	wreg,f,c
  3655  01A3C6  E1FD               	bnz	clear_4
  3656                           
  3657                           ; Clear objects allocated to BANK0 (79 bytes)
  3658  01A3C8  EE00  F060         	lfsr	0,__pbssBANK0
  3659  01A3CC  0E4F               	movlw	79
  3660  01A3CE                     clear_5:
  3661  01A3CE  6AEE               	clrf	postinc0,c
  3662  01A3D0  06E8               	decf	wreg,f,c
  3663  01A3D2  E1FD               	bnz	clear_5
  3664                           
  3665                           ; Clear objects allocated to COMRAM (14 bytes)
  3666  01A3D4  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3667  01A3D8  0E0E               	movlw	14
  3668  01A3DA                     clear_6:
  3669  01A3DA  6AEE               	clrf	postinc0,c
  3670  01A3DC  06E8               	decf	wreg,f,c
  3671  01A3DE  E1FD               	bnz	clear_6
  3672                           
  3673                           ;
  3674                           ; Setup IVTBASE
  3675                           ;
  3676  01A3E0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3677  01A3E2  6ED5               	movwf	213,c
  3678  01A3E4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3679  01A3E6  6ED6               	movwf	214,c
  3680  01A3E8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3681  01A3EA  6ED7               	movwf	215,c
  3682  01A3EC                     end_of_initialization:
  3683                           	opt callstack 0
  3684  01A3EC                     __end_of__initialization:
  3685                           	opt callstack 0
  3686  01A3EC  0100               	movlb	0
  3687  01A3EE  EF22  F089         	goto	_main	;jump to C main() function
  3688                           
  3689                           	psect	bssCOMRAM
  3690  00003A                     __pbssCOMRAM:
  3691                           	opt callstack 0
  3692  00003A                     _width:
  3693                           	opt callstack 0
  3694  00003A                     	ds	2
  3695  00003C                     _prec:
  3696                           	opt callstack 0
  3697  00003C                     	ds	2
  3698  00003E                     _flags:
  3699                           	opt callstack 0
  3700  00003E                     	ds	2
  3701  000040                     calc_bsoc@log_update_wait:
  3702                           	opt callstack 0
  3703  000040                     	ds	1
  3704  000041                     check_day_time@day_delay:
  3705                           	opt callstack 0
  3706  000041                     	ds	1
  3707  000042                     dac_spi_control@S0:
  3708                           	opt callstack 0
  3709  000042                     	ds	1
  3710  000043                     dac_spi_control@init:
  3711                           	opt callstack 0
  3712  000043                     	ds	1
  3713  000044                     _uart2RxHead:
  3714                           	opt callstack 0
  3715  000044                     	ds	1
  3716  000045                     _uart2TxBufferRemaining:
  3717                           	opt callstack 0
  3718  000045                     	ds	1
  3719  000046                     _uart2TxTail:
  3720                           	opt callstack 0
  3721  000046                     	ds	1
  3722  000047                     _uart1RxHead:
  3723                           	opt callstack 0
  3724  000047                     	ds	1
  3725                           
  3726                           	psect	bssBANK0
  3727  000060                     __pbssBANK0:
  3728                           	opt callstack 0
  3729  000060                     fabsf@F463:
  3730                           	opt callstack 0
  3731  000060                     	ds	4
  3732  000064                     ___fpclassifyf@F463:
  3733                           	opt callstack 0
  3734  000064                     	ds	4
  3735  000068                     calc_ror_data@bcror:
  3736                           	opt callstack 0
  3737  000068                     	ds	4
  3738  00006C                     calc_ror_data@bvror:
  3739                           	opt callstack 0
  3740  00006C                     	ds	4
  3741  000070                     calc_model_data@bcror:
  3742                           	opt callstack 0
  3743  000070                     	ds	4
  3744  000074                     calc_model_data@bvror:
  3745                           	opt callstack 0
  3746  000074                     	ds	4
  3747  000078                     wdtdelay@dcount:
  3748                           	opt callstack 0
  3749  000078                     	ds	4
  3750  00007C                     _TMR3_InterruptHandler:
  3751                           	opt callstack 0
  3752  00007C                     	ds	3
  3753  00007F                     _TMR5_InterruptHandler:
  3754                           	opt callstack 0
  3755  00007F                     	ds	3
  3756  000082                     _TMR6_InterruptHandler:
  3757                           	opt callstack 0
  3758  000082                     	ds	3
  3759  000085                     _ADCC_ADTI_InterruptHandler:
  3760                           	opt callstack 0
  3761  000085                     	ds	3
  3762  000088                     _ADCC_ADI_InterruptHandler:
  3763                           	opt callstack 0
  3764  000088                     	ds	3
  3765  00008B                     _UART1_RxInterruptHandler:
  3766                           	opt callstack 0
  3767  00008B                     	ds	3
  3768  00008E                     _UART2_TxInterruptHandler:
  3769                           	opt callstack 0
  3770  00008E                     	ds	3
  3771  000091                     _UART2_RxInterruptHandler:
  3772                           	opt callstack 0
  3773  000091                     	ds	3
  3774  000094                     _INT1_InterruptHandler:
  3775                           	opt callstack 0
  3776  000094                     	ds	3
  3777  000097                     _INT0_InterruptHandler:
  3778                           	opt callstack 0
  3779  000097                     	ds	3
  3780  00009A                     _nout:
  3781                           	opt callstack 0
  3782  00009A                     	ds	2
  3783  00009C                     TMR3_ISR@CountCallBack:
  3784                           	opt callstack 0
  3785  00009C                     	ds	2
  3786  00009E                     _timer3ReloadVal:
  3787                           	opt callstack 0
  3788  00009E                     	ds	2
  3789  0000A0                     TMR5_ISR@CountCallBack:
  3790                           	opt callstack 0
  3791  0000A0                     	ds	2
  3792  0000A2                     _timer5ReloadVal:
  3793                           	opt callstack 0
  3794  0000A2                     	ds	2
  3795  0000A4                     esr_check@esr_state:
  3796                           	opt callstack 0
  3797  0000A4                     	ds	1
  3798  0000A5                     dac_spi_control@SB:
  3799                           	opt callstack 0
  3800  0000A5                     	ds	1
  3801  0000A6                     dac_spi_control@SC:
  3802                           	opt callstack 0
  3803  0000A6                     	ds	1
  3804  0000A7                     dac_spi_control@S2:
  3805                           	opt callstack 0
  3806  0000A7                     	ds	1
  3807  0000A8                     dac_spi_control@S1:
  3808                           	opt callstack 0
  3809  0000A8                     	ds	1
  3810  0000A9                     _mode_sw:
  3811                           	opt callstack 0
  3812  0000A9                     	ds	1
  3813  0000AA                     _uart2RxCount:
  3814                           	opt callstack 0
  3815  0000AA                     	ds	1
  3816  0000AB                     _uart2RxTail:
  3817                           	opt callstack 0
  3818  0000AB                     	ds	1
  3819  0000AC                     _uart2TxHead:
  3820                           	opt callstack 0
  3821  0000AC                     	ds	1
  3822  0000AD                     _uart1RxCount:
  3823                           	opt callstack 0
  3824  0000AD                     	ds	1
  3825  0000AE                     _uart1RxTail:
  3826                           	opt callstack 0
  3827  0000AE                     	ds	1
  3828                           
  3829                           	psect	dataBANK0
  3830  0000AF                     __pdataBANK0:
  3831                           	opt callstack 0
  3832  0000AF                     _R:
  3833                           	opt callstack 0
  3834  0000AF                     	ds	54
  3835                           
  3836                           	psect	bssBANK1
  3837  0001CD                     __pbssBANK1:
  3838                           	opt callstack 0
  3839  0001CD                     _spi_link:
  3840                           	opt callstack 0
  3841  0001CD                     	ds	12
  3842  0001D9                     _uart1RxBuffer:
  3843                           	opt callstack 0
  3844  0001D9                     	ds	8
  3845  0001E1                     spinners@s:
  3846                           	opt callstack 0
  3847  0001E1                     	ds	6
  3848  0001E7                     floorf@F524:
  3849                           	opt callstack 0
  3850  0001E7                     	ds	4
  3851  0001EB                     _utctime:
  3852                           	opt callstack 0
  3853  0001EB                     	ds	4
  3854  0001EF                     _P:
  3855                           	opt callstack 0
  3856  0001EF                     	ds	4
  3857  0001F3                     _seed:
  3858                           	opt callstack 0
  3859  0001F3                     	ds	8
  3860                           
  3861                           	psect	dataBANK1
  3862  000100                     __pdataBANK1:
  3863                           	opt callstack 0
  3864  000100                     stoa@F1166:
  3865                           	opt callstack 0
  3866  000100                     	ds	7
  3867  000107                     _V:
  3868                           	opt callstack 0
  3869  000107                     	ds	191
  3870  0001C6                     _H:
  3871                           	opt callstack 0
  3872  0001C6                     	ds	7
  3873                           
  3874                           	psect	bssBANK2
  3875  000200                     __pbssBANK2:
  3876                           	opt callstack 0
  3877  000200                     lp_filter@smooth:
  3878                           	opt callstack 0
  3879  000200                     	ds	84
  3880  000254                     _S:
  3881                           	opt callstack 0
  3882  000254                     	ds	41
  3883  00027D                     _tickCount:
  3884                           	opt callstack 0
  3885  00027D                     	ds	26
  3886  000297                     _dbuf:
  3887                           	opt callstack 0
  3888  000297                     	ds	80
  3889                           
  3890                           	psect	bssBANK3
  3891  000300                     __pbssBANK3:
  3892                           	opt callstack 0
  3893  000300                     _uart2TxBuffer:
  3894                           	opt callstack 0
  3895  000300                     	ds	64
  3896  000340                     _ring_buf2:
  3897                           	opt callstack 0
  3898  000340                     	ds	67
  3899  000383                     _ring_buf1:
  3900                           	opt callstack 0
  3901  000383                     	ds	67
  3902                           
  3903                           	psect	bssBANK4
  3904  000400                     __pbssBANK4:
  3905                           	opt callstack 0
  3906  000400                     _uart2RxBuffer:
  3907                           	opt callstack 0
  3908  000400                     	ds	255
  3909                           
  3910                           	psect	bssBIGRAM
  3911  00082A                     __pbssBIGRAM:
  3912                           	opt callstack 0
  3913  00082A                     _D:
  3914                           	opt callstack 0
  3915  00082A                     	ds	482
  3916                           
  3917                           	psect	dataBIGRAM
  3918  0004FF                     __pdataBIGRAM:
  3919                           	opt callstack 0
  3920  0004FF                     _port_data:
  3921                           	opt callstack 0
  3922  0004FF                     	ds	512
  3923  0006FF                     _C:
  3924                           	opt callstack 0
  3925  0006FF                     	ds	299
  3926                           
  3927                           	psect	cstackBANK0
  3928  0000E5                     __pcstackBANK0:
  3929                           	opt callstack 0
  3930  0000E5                     ??_TMR3_ISR:
  3931                           
  3932                           ; 1 bytes @ 0x0
  3933  0000E5                     	ds	25
  3934                           
  3935                           	psect	cstackCOMRAM
  3936  000021                     __pcstackCOMRAM:
  3937                           	opt callstack 0
  3938  000021                     ??_ADCC_ThresholdISR:
  3939  000021                     
  3940                           ; 1 bytes @ 0x0
  3941  000021                     	ds	5
  3942  000026                     ??_TMR6_ISR:
  3943                           
  3944                           ; 1 bytes @ 0x5
  3945  000026                     	ds	1
  3946  000027                     ??_INT1_ISR:
  3947  000027                     
  3948                           ; 1 bytes @ 0x6
  3949  000027                     	ds	4
  3950  00002B                     ??_TMR5_ISR:
  3951                           
  3952                           ; 1 bytes @ 0xA
  3953  00002B                     	ds	15
  3954                           
  3955 ;;
  3956 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3957 ;;
  3958 ;; *************** function _main *****************
  3959 ;; Defined at:
  3960 ;;		line 187 in file "main.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  esr_temp        4  [STACK] float 
  3965 ;;  i_esr           2  [STACK] unsigned short 
  3966 ;;  shape           1  [STACK] unsigned char 
  3967 ;;  inp_index       1  [STACK] unsigned char 
  3968 ;;  k               1  [STACK] unsigned char 
  3969 ;;  j               1  [STACK] unsigned char 
  3970 ;;  i               1  [STACK] unsigned char 
  3971 ;;  mode            1  [STACK] enum E17013
  3972 ;;  i_ror           1  [STACK] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1  [STACK] void 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels required when called:   29
  3988 ;; This function calls:
  3989 ;;		_SYSTEM_Initialize
  3990 ;;		_StartTimer
  3991 ;;		_TimerDone
  3992 ;;		_WaitMs
  3993 ;;		___fladd
  3994 ;;		___flge
  3995 ;;		___fltol
  3996 ;;		_calc_model_data
  3997 ;;		_calc_ror_data
  3998 ;;		_check_adc_scan
  3999 ;;		_check_enter_button
  4000 ;;		_check_help
  4001 ;;		_clear_adc_scan
  4002 ;;		_clear_hid_pflags
  4003 ;;		_conv_raw_result
  4004 ;;		_convert_adc_data
  4005 ;;		_eaDogM_WriteCommand
  4006 ;;		_esr_check
  4007 ;;		_fabsf
  4008 ;;		_get_raw_result
  4009 ;;		_get_switch
  4010 ;;		_get_vterm_ptr
  4011 ;;		_hid_display
  4012 ;;		_init_bsoc
  4013 ;;		_init_display
  4014 ;;		_init_port_dma
  4015 ;;		_lp_filter
  4016 ;;		_mode_lamp_dim
  4017 ;;		_set_dac
  4018 ;;		_set_dac_a
  4019 ;;		_set_dac_b
  4020 ;;		_set_display_info
  4021 ;;		_set_load_relay_one
  4022 ;;		_set_load_relay_two
  4023 ;;		_set_vterm
  4024 ;;		_spinners
  4025 ;;		_sprintf
  4026 ;;		_srand
  4027 ;;		_start_adc_scan
  4028 ;;		_start_switch_handler
  4029 ;;		_static_soc
  4030 ;;		_update_lcd
  4031 ;;		_wait_lcd_done
  4032 ;; This function is called by:
  4033 ;;		Startup code after reset
  4034 ;; This function uses a reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text0
  4038  011244                     __ptext0:
  4039                           	opt callstack 0
  4040  011244                     _main:
  4041                           	opt callstack 0
  4042                           
  4043                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4044  011244  0E11               	movlw	17
  4045  011246  26E1               	addwf	fsr1l,f,c
  4046  011248  0E00               	movlw	0
  4047  01124A  22E2               	addwfc	fsr1h,f,c
  4048                           
  4049                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4050                           ;stkvar	_inp_index @ sp[(-17)+11]
  4051                           
  4052                           ;incstack = 0
  4053  01124C  0EFA               	movlw	-6
  4054  01124E  6AE3               	clrf	plusw1,c
  4055                           
  4056                           ;stkvar	_i @ sp[(-17)+14]
  4057  011250  0EFD               	movlw	-3
  4058  011252  6AE3               	clrf	plusw1,c
  4059                           
  4060                           ;stkvar	_j @ sp[(-17)+13]
  4061  011254  0EFC               	movlw	-4
  4062  011256  6AE3               	clrf	plusw1,c
  4063  011258  2AE3               	incf	plusw1,f,c
  4064                           
  4065                           ;stkvar	_k @ sp[(-17)+12]
  4066  01125A  0EFB               	movlw	-5
  4067  01125C  6AE3               	clrf	plusw1,c
  4068  01125E  82E3               	bsf	plusw1,1,c
  4069                           
  4070                           ;main.c: 193:  SYSTEM_Initialize();
  4071  011260  ECF5  F0DB         	call	_SYSTEM_Initialize	;wreg free
  4072                           
  4073                           ; BSR set to: 60
  4074                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4075  011264  8ED2               	bsf	210,7,c	;volatile
  4076                           
  4077                           ; BSR set to: 60
  4078                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4079  011266  8CD2               	bsf	210,6,c	;volatile
  4080                           
  4081                           ; BSR set to: 60
  4082                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4083  011268  0101               	movlb	1	; () banked
  4084  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;main.c: 206:  WaitMs(300);
  4088  01126C  0E2C               	movlw	44
  4089  01126E  6EE6               	movwf	postinc1,c
  4090  011270  0E01               	movlw	1
  4091  011272  6EE6               	movwf	postinc1,c
  4092  011274  EC85  F0DE         	call	_WaitMs	;wreg free
  4093                           
  4094                           ;main.c: 207:  if (PORTBbits.RB0) {
  4095  011278  A0CB               	btfss	203,0,c	;volatile
  4096  01127A  D004               	goto	l13386
  4097                           
  4098                           ;main.c: 208:   mode = UI_STATE_HOST;
  4099                           ;stkvar	_mode @ sp[(-17)+15]
  4100  01127C  0EFE               	movlw	-2
  4101  01127E  6AE3               	clrf	plusw1,c
  4102  011280  2AE3               	incf	plusw1,f,c
  4103                           
  4104                           ;main.c: 209:  } else {
  4105  011282  D004               	goto	l13388
  4106  011284                     l13386:
  4107                           
  4108                           ;main.c: 210:   mode = UI_STATE_LOG;
  4109                           ;stkvar	_mode @ sp[(-17)+15]
  4110  011284  0EFE               	movlw	-2
  4111  011286  6AE3               	clrf	plusw1,c
  4112  011288  80E3               	bsf	plusw1,0,c
  4113  01128A  82E3               	bsf	plusw1,1,c	;indir
  4114  01128C                     l13388:
  4115                           
  4116                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4117                           ;stkvar	_mode @ sp[(-17)+15]
  4118  01128C  0EFE               	movlw	-2
  4119  01128E  04E3               	decf	plusw1,w,c
  4120  011290  A4D8               	btfss	status,2,c
  4121  011292  D007               	goto	l1332
  4122                           
  4123                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4124  011294  80BD               	bsf	189,0,c	;volatile
  4125                           
  4126                           ;main.c: 215:   V.mode_pwm = 70;
  4127  011296  0E00               	movlw	0
  4128  011298  0101               	movlb	1	; () banked
  4129  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4130  01129C  0E46               	movlw	70
  4131  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4132                           
  4133                           ;main.c: 216:  } else {
  4134  0112A0  D004               	goto	l13392
  4135  0112A2                     l1332:
  4136  0112A2  90BD               	bcf	189,0,c	;volatile
  4137                           
  4138                           ;main.c: 218:   V.mode_pwm = 0;
  4139  0112A4  0101               	movlb	1	; () banked
  4140  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4141  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4142  0112AA                     l13392:
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4146  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4147  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4148  0112B6  EC29  F0E2         	call	_mode_lamp_dim	;wreg free
  4149  0112BA  D325               	goto	l13512
  4150  0112BC                     l13394:
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;main.c: 228:    init_port_dma();
  4154  0112BC  EC08  F0DF         	call	_init_port_dma	;wreg free
  4155                           
  4156                           ; BSR set to: 59
  4157                           ;main.c: 230:    init_display();
  4158  0112C0  ECA2  F0D0         	call	_init_display	;wreg free
  4159                           
  4160                           ; BSR set to: 61
  4161                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4162  0112C4  0E0C               	movlw	12
  4163  0112C6  6EE6               	movwf	postinc1,c
  4164  0112C8  EC95  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;main.c: 235:    set_load_relay_one(1);
  4168  0112CC  0E01               	movlw	1
  4169  0112CE  6EE6               	movwf	postinc1,c
  4170  0112D0  EC7D  F0E2         	call	_set_load_relay_one	;wreg free
  4171                           
  4172                           ;main.c: 236:    set_load_relay_two(1);
  4173  0112D4  0E01               	movlw	1
  4174  0112D6  6EE6               	movwf	postinc1,c
  4175  0112D8  EC75  F0E2         	call	_set_load_relay_two	;wreg free
  4176                           
  4177                           ;main.c: 238:    V.ui_state = mode;
  4178                           ;stkvar	_mode @ sp[(-17)+15]
  4179  0112DC  0EFE               	movlw	-2
  4180  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4181                           
  4182                           ;main.c: 239:    srand(1957);
  4183  0112E4  0EA5               	movlw	165
  4184  0112E6  6EE6               	movwf	postinc1,c
  4185  0112E8  0E07               	movlw	7
  4186  0112EA  6EE6               	movwf	postinc1,c
  4187  0112EC  ECA0  F0DE         	call	_srand	;wreg free
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;main.c: 240:    set_vterm(0);
  4191  0112F0  0E00               	movlw	0
  4192  0112F2  6EE6               	movwf	postinc1,c
  4193  0112F4  ECE1  F0E1         	call	_set_vterm	;wreg free
  4194                           
  4195                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4196  0112F8  0E1E               	movlw	low STR_1
  4197  0112FA  6EE6               	movwf	postinc1,c
  4198  0112FC  0EFF               	movlw	high STR_1
  4199  0112FE  6EE6               	movwf	postinc1,c
  4200  011300  0E00               	movlw	0
  4201  011302  6EE6               	movwf	postinc1,c
  4202  011304  0E00               	movlw	0
  4203  011306  6EE6               	movwf	postinc1,c
  4204  011308  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4205  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4206  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4207  011318  0E04               	movlw	4
  4208  01131A  6EE6               	movwf	postinc1,c
  4209  01131C  ECA2  F0CF         	call	_sprintf	;wreg free
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.15");
  4213  011320  0ED2               	movlw	low STR_3
  4214  011322  6EE6               	movwf	postinc1,c
  4215  011324  0EFF               	movlw	high STR_3
  4216  011326  6EE6               	movwf	postinc1,c
  4217  011328  0E09               	movlw	low STR_2
  4218  01132A  6EE6               	movwf	postinc1,c
  4219  01132C  0EFF               	movlw	high STR_2
  4220  01132E  6EE6               	movwf	postinc1,c
  4221  011330  0E00               	movlw	0
  4222  011332  6EE6               	movwf	postinc1,c
  4223  011334  0E01               	movlw	1
  4224  011336  6EE6               	movwf	postinc1,c
  4225  011338  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4226  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4227  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4228  011348  0E06               	movlw	6
  4229  01134A  6EE6               	movwf	postinc1,c
  4230  01134C  ECA2  F0CF         	call	_sprintf	;wreg free
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4234  011350  0ECA               	movlw	low STR_4
  4235  011352  6EE6               	movwf	postinc1,c
  4236  011354  0EFE               	movlw	high STR_4
  4237  011356  6EE6               	movwf	postinc1,c
  4238  011358  0E00               	movlw	0
  4239  01135A  6EE6               	movwf	postinc1,c
  4240  01135C  0E02               	movlw	2
  4241  01135E  6EE6               	movwf	postinc1,c
  4242  011360  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4243  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4244  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4245  011370  0E04               	movlw	4
  4246  011372  6EE6               	movwf	postinc1,c
  4247  011374  ECA2  F0CF         	call	_sprintf	;wreg free
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4251  011378  0EA0               	movlw	low STR_5
  4252  01137A  6EE6               	movwf	postinc1,c
  4253  01137C  0EFE               	movlw	high STR_5
  4254  01137E  6EE6               	movwf	postinc1,c
  4255  011380  0E02               	movlw	2
  4256  011382  6EE6               	movwf	postinc1,c
  4257  011384  0E00               	movlw	0
  4258  011386  6EE6               	movwf	postinc1,c
  4259  011388  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4260  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4261  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4262  011398  0E04               	movlw	4
  4263  01139A  6EE6               	movwf	postinc1,c
  4264  01139C  ECA2  F0CF         	call	_sprintf	;wreg free
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4268  0113A0  0EA0               	movlw	low STR_5
  4269  0113A2  6EE6               	movwf	postinc1,c
  4270  0113A4  0EFE               	movlw	high STR_5
  4271  0113A6  6EE6               	movwf	postinc1,c
  4272  0113A8  0E02               	movlw	2
  4273  0113AA  6EE6               	movwf	postinc1,c
  4274  0113AC  0E01               	movlw	1
  4275  0113AE  6EE6               	movwf	postinc1,c
  4276  0113B0  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4277  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4278  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4279  0113C0  0E04               	movlw	4
  4280  0113C2  6EE6               	movwf	postinc1,c
  4281  0113C4  ECA2  F0CF         	call	_sprintf	;wreg free
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4285  0113C8  0EA0               	movlw	low STR_5
  4286  0113CA  6EE6               	movwf	postinc1,c
  4287  0113CC  0EFE               	movlw	high STR_5
  4288  0113CE  6EE6               	movwf	postinc1,c
  4289  0113D0  0E02               	movlw	2
  4290  0113D2  6EE6               	movwf	postinc1,c
  4291  0113D4  0E02               	movlw	2
  4292  0113D6  6EE6               	movwf	postinc1,c
  4293  0113D8  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4294  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4295  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4296  0113E8  0E04               	movlw	4
  4297  0113EA  6EE6               	movwf	postinc1,c
  4298  0113EC  ECA2  F0CF         	call	_sprintf	;wreg free
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;main.c: 247:    update_lcd(0);
  4302  0113F0  0E00               	movlw	0
  4303  0113F2  6EE6               	movwf	postinc1,c
  4304  0113F4  EC1A  F0CF         	call	_update_lcd	;wreg free
  4305                           
  4306                           ;main.c: 248:    WaitMs(1000);
  4307  0113F8  0EE8               	movlw	232
  4308  0113FA  6EE6               	movwf	postinc1,c
  4309  0113FC  0E03               	movlw	3
  4310  0113FE  6EE6               	movwf	postinc1,c
  4311  011400  EC85  F0DE         	call	_WaitMs	;wreg free
  4312                           
  4313                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4314  011404  0EFA               	movlw	250
  4315  011406  6EE6               	movwf	postinc1,c
  4316  011408  0E00               	movlw	0
  4317  01140A  6EE6               	movwf	postinc1,c
  4318  01140C  0E0A               	movlw	10
  4319  01140E  6EE6               	movwf	postinc1,c
  4320  011410  EC96  F0DD         	call	_StartTimer	;wreg free
  4321                           
  4322                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4323  011414  0EC8               	movlw	200
  4324  011416  6EE6               	movwf	postinc1,c
  4325  011418  0E00               	movlw	0
  4326  01141A  6EE6               	movwf	postinc1,c
  4327  01141C  0E01               	movlw	1
  4328  01141E  6EE6               	movwf	postinc1,c
  4329  011420  EC96  F0DD         	call	_StartTimer	;wreg free
  4330                           
  4331                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4332  011424  0EB8               	movlw	184
  4333  011426  6EE6               	movwf	postinc1,c
  4334  011428  0E0B               	movlw	11
  4335  01142A  6EE6               	movwf	postinc1,c
  4336  01142C  0E07               	movlw	7
  4337  01142E  6EE6               	movwf	postinc1,c
  4338  011430  EC96  F0DD         	call	_StartTimer	;wreg free
  4339                           
  4340                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4341  011434  0EDC               	movlw	220
  4342  011436  6EE6               	movwf	postinc1,c
  4343  011438  0E05               	movlw	5
  4344  01143A  6EE6               	movwf	postinc1,c
  4345  01143C  0E0B               	movlw	11
  4346  01143E  6EE6               	movwf	postinc1,c
  4347  011440  EC96  F0DD         	call	_StartTimer	;wreg free
  4348                           
  4349                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4350  011444  0EB8               	movlw	184
  4351  011446  6EE6               	movwf	postinc1,c
  4352  011448  0E0B               	movlw	11
  4353  01144A  6EE6               	movwf	postinc1,c
  4354  01144C  0E09               	movlw	9
  4355  01144E  6EE6               	movwf	postinc1,c
  4356  011450  EC96  F0DD         	call	_StartTimer	;wreg free
  4357                           
  4358                           ;main.c: 255:    start_adc_scan();
  4359  011454  EC0C  F0DA         	call	_start_adc_scan	;wreg free
  4360                           
  4361                           ;main.c: 256:    start_switch_handler();
  4362  011458  ECA3  F0E1         	call	_start_switch_handler	;wreg free
  4363                           
  4364                           ; BSR set to: 57
  4365                           ;main.c: 257:    WaitMs(1000);
  4366  01145C  0EE8               	movlw	232
  4367  01145E  6EE6               	movwf	postinc1,c
  4368  011460  0E03               	movlw	3
  4369  011462  6EE6               	movwf	postinc1,c
  4370  011464  EC85  F0DE         	call	_WaitMs	;wreg free
  4371                           
  4372                           ;main.c: 262:    i_ror = 1;
  4373                           ;stkvar	_i_ror @ sp[(-17)+16]
  4374  011468  0EFF               	movlw	-1
  4375  01146A  6AE3               	clrf	plusw1,c
  4376  01146C  2AE3               	incf	plusw1,f,c
  4377  01146E                     l13444:
  4378                           
  4379                           ;main.c: 264:     calc_ror_data();
  4380  01146E  ECCE  F0C6         	call	_calc_ror_data	;wreg free
  4381                           
  4382                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4383  011472  0E00               	movlw	0
  4384  011474  6EE6               	movwf	postinc1,c
  4385  011476  0E04               	movlw	4
  4386  011478  6EE6               	movwf	postinc1,c
  4387  01147A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  4388  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4389  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4390  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4391  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4392  011496  0EB5               	movlw	low STR_8
  4393  011498  6EE6               	movwf	postinc1,c
  4394  01149A  0EFE               	movlw	high STR_8
  4395  01149C  6EE6               	movwf	postinc1,c
  4396  01149E  0E00               	movlw	0
  4397  0114A0  6EE6               	movwf	postinc1,c
  4398  0114A2  0E01               	movlw	1
  4399  0114A4  6EE6               	movwf	postinc1,c
  4400  0114A6  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4401  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4402  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4403  0114B6  0E08               	movlw	8
  4404  0114B8  6EE6               	movwf	postinc1,c
  4405  0114BA  ECA2  F0CF         	call	_sprintf	;wreg free
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4409  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4410  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4411  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4412  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4413  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4414                           
  4415                           ;stkvar	_i_ror @ sp[(-21)+16]
  4416  0114DA  0EFB               	movlw	-5
  4417  0114DC  50E3               	movf	plusw1,w,c
  4418  0114DE  6EE6               	movwf	postinc1,c
  4419  0114E0  0E00               	movlw	0
  4420  0114E2  6EE6               	movwf	postinc1,c
  4421  0114E4  0E00               	movlw	0
  4422  0114E6  6EE6               	movwf	postinc1,c
  4423  0114E8  0E05               	movlw	5
  4424  0114EA  6EE6               	movwf	postinc1,c
  4425  0114EC  EC27  F0D0         	call	_spinners	;wreg free
  4426  0114F0  5001               	movf	btemp^0,w,c
  4427  0114F2  6EE6               	movwf	postinc1,c
  4428  0114F4  0E00               	movlw	0
  4429  0114F6  6EE6               	movwf	postinc1,c
  4430  0114F8  0E9B               	movlw	low STR_9
  4431  0114FA  6EE6               	movwf	postinc1,c
  4432  0114FC  0EFC               	movlw	high STR_9
  4433  0114FE  6EE6               	movwf	postinc1,c
  4434  011500  0E00               	movlw	0
  4435  011502  6EE6               	movwf	postinc1,c
  4436  011504  0E02               	movlw	2
  4437  011506  6EE6               	movwf	postinc1,c
  4438  011508  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4439  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4440  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4441  011518  0E0C               	movlw	12
  4442  01151A  6EE6               	movwf	postinc1,c
  4443  01151C  ECA2  F0CF         	call	_sprintf	;wreg free
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;main.c: 267:     update_lcd(0);
  4447  011520  0E00               	movlw	0
  4448  011522  6EE6               	movwf	postinc1,c
  4449  011524  EC1A  F0CF         	call	_update_lcd	;wreg free
  4450                           
  4451                           ;main.c: 268:     clear_adc_scan();
  4452  011528  ECE9  F0E2         	call	_clear_adc_scan	;wreg free
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;main.c: 269:     start_adc_scan();
  4456  01152C  EC0C  F0DA         	call	_start_adc_scan	;wreg free
  4457                           
  4458                           ;main.c: 270:     WaitMs(2000);
  4459  011530  0ED0               	movlw	208
  4460  011532  6EE6               	movwf	postinc1,c
  4461  011534  0E07               	movlw	7
  4462  011536  6EE6               	movwf	postinc1,c
  4463  011538  EC85  F0DE         	call	_WaitMs	;wreg free
  4464                           
  4465                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4466                           ;stkvar	_i_ror @ sp[(-17)+16]
  4467  01153C  0EFF               	movlw	-1
  4468  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4469  011544  2A0C               	incf	(btemp+11)^0,f,c
  4470  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4471  01154C  060C               	decf	(btemp+11)^0,f,c
  4472  01154E  0E1E               	movlw	30
  4473  011550  600C               	cpfslt	(btemp+11)^0,c
  4474  011552  D01A               	goto	u12820
  4475  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4476  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4477  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4478  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4480  011570  0E42               	movlw	66
  4481  011572  6EE6               	movwf	postinc1,c
  4482  011574  0E60               	movlw	96
  4483  011576  6EE6               	movwf	postinc1,c
  4484  011578  0E65               	movlw	101
  4485  01157A  6EE6               	movwf	postinc1,c
  4486  01157C  0E3C               	movlw	60
  4487  01157E  6EE6               	movwf	postinc1,c
  4488  011580  EC0A  F0C9         	call	___flge	;wreg free
  4489  011584  A001               	btfss	btemp& (0+255),0,c
  4490  011586  D773               	goto	l13444
  4491  011588                     u12820:
  4492                           
  4493                           ;main.c: 275:    static_soc();
  4494  011588  ECD0  F0DA         	call	_static_soc	;wreg free
  4495                           
  4496                           ;main.c: 276:    init_bsoc();
  4497  01158C  EC09  F0BE         	call	_init_bsoc	;wreg free
  4498                           
  4499                           ;main.c: 277:    set_load_relay_one(0);
  4500  011590  0E00               	movlw	0
  4501  011592  6EE6               	movwf	postinc1,c
  4502  011594  EC7D  F0E2         	call	_set_load_relay_one	;wreg free
  4503                           
  4504                           ;main.c: 278:    set_load_relay_two(0);
  4505  011598  0E00               	movlw	0
  4506  01159A  6EE6               	movwf	postinc1,c
  4507  01159C  EC75  F0E2         	call	_set_load_relay_two	;wreg free
  4508                           
  4509                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4510  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4511  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4512  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4513  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4514  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4515  0115BC  0E56               	movlw	low STR_10
  4516  0115BE  6EE6               	movwf	postinc1,c
  4517  0115C0  0EFD               	movlw	high STR_10
  4518  0115C2  6EE6               	movwf	postinc1,c
  4519  0115C4  0E00               	movlw	0
  4520  0115C6  6EE6               	movwf	postinc1,c
  4521  0115C8  0E00               	movlw	0
  4522  0115CA  6EE6               	movwf	postinc1,c
  4523  0115CC  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4524  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4525  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4526  0115DC  0E06               	movlw	6
  4527  0115DE  6EE6               	movwf	postinc1,c
  4528  0115E0  ECA2  F0CF         	call	_sprintf	;wreg free
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4532  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4533  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4534  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4535  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4536  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4537  011600  0E32               	movlw	low STR_11
  4538  011602  6EE6               	movwf	postinc1,c
  4539  011604  0EFE               	movlw	high STR_11
  4540  011606  6EE6               	movwf	postinc1,c
  4541  011608  0E00               	movlw	0
  4542  01160A  6EE6               	movwf	postinc1,c
  4543  01160C  0E01               	movlw	1
  4544  01160E  6EE6               	movwf	postinc1,c
  4545  011610  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4546  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4547  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4548  011620  0E08               	movlw	8
  4549  011622  6EE6               	movwf	postinc1,c
  4550  011624  ECA2  F0CF         	call	_sprintf	;wreg free
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;main.c: 281:    update_lcd(0);
  4554  011628  0E00               	movlw	0
  4555  01162A  6EE6               	movwf	postinc1,c
  4556  01162C  EC1A  F0CF         	call	_update_lcd	;wreg free
  4557                           
  4558                           ;main.c: 282:    WaitMs(2000);
  4559  011630  0ED0               	movlw	208
  4560  011632  6EE6               	movwf	postinc1,c
  4561  011634  0E07               	movlw	7
  4562  011636  6EE6               	movwf	postinc1,c
  4563  011638  EC85  F0DE         	call	_WaitMs	;wreg free
  4564                           
  4565                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4566  01163C  0EDF               	movlw	low STR_12
  4567  01163E  6EE6               	movwf	postinc1,c
  4568  011640  0EFE               	movlw	high STR_12
  4569  011642  6EE6               	movwf	postinc1,c
  4570  011644  0E00               	movlw	0
  4571  011646  6EE6               	movwf	postinc1,c
  4572  011648  0E00               	movlw	0
  4573  01164A  6EE6               	movwf	postinc1,c
  4574  01164C  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4575  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4576  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4577  01165C  0E04               	movlw	4
  4578  01165E  6EE6               	movwf	postinc1,c
  4579  011660  ECA2  F0CF         	call	_sprintf	;wreg free
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4583  011664  0EF4               	movlw	low STR_13
  4584  011666  6EE6               	movwf	postinc1,c
  4585  011668  0EFE               	movlw	high STR_13
  4586  01166A  6EE6               	movwf	postinc1,c
  4587  01166C  0E00               	movlw	0
  4588  01166E  6EE6               	movwf	postinc1,c
  4589  011670  0E01               	movlw	1
  4590  011672  6EE6               	movwf	postinc1,c
  4591  011674  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4592  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4593  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4594  011684  0E04               	movlw	4
  4595  011686  6EE6               	movwf	postinc1,c
  4596  011688  ECA2  F0CF         	call	_sprintf	;wreg free
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4600  01168C  0E48               	movlw	low STR_14
  4601  01168E  6EE6               	movwf	postinc1,c
  4602  011690  0EFF               	movlw	high STR_14
  4603  011692  6EE6               	movwf	postinc1,c
  4604  011694  0E00               	movlw	0
  4605  011696  6EE6               	movwf	postinc1,c
  4606  011698  0E02               	movlw	2
  4607  01169A  6EE6               	movwf	postinc1,c
  4608  01169C  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4609  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4610  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4611  0116AC  0E04               	movlw	4
  4612  0116AE  6EE6               	movwf	postinc1,c
  4613  0116B0  ECA2  F0CF         	call	_sprintf	;wreg free
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;main.c: 286:    update_lcd(0);
  4617  0116B4  0E00               	movlw	0
  4618  0116B6  6EE6               	movwf	postinc1,c
  4619  0116B8  EC1A  F0CF         	call	_update_lcd	;wreg free
  4620                           
  4621                           ;main.c: 287:    uint16_t i_esr = 1;
  4622  0116BC  0E01               	movlw	1
  4623  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4624  0116C0  0E00               	movlw	0
  4625  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4626                           
  4627                           ;stkvar	_i_esr @ sp[(-17)+8]
  4628  0116C4  0EF7               	movlw	-9
  4629  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4630  0116CC  0EF8               	movlw	-8
  4631  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4632                           
  4633                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4634  0116D4  D06D               	goto	l13502
  4635  0116D6                     l13490:
  4636                           
  4637                           ;main.c: 291:     WaitMs(110);
  4638  0116D6  0E6E               	movlw	110
  4639  0116D8  6EE6               	movwf	postinc1,c
  4640  0116DA  0E00               	movlw	0
  4641  0116DC  6EE6               	movwf	postinc1,c
  4642  0116DE  EC85  F0DE         	call	_WaitMs	;wreg free
  4643                           
  4644                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4645                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4646  0116E2  0EF3               	movlw	-13
  4647  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4648  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4649  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4650  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4651  0116FC  ECA9  F0D4         	call	_fabsf	;wreg free
  4652  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4653  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4654  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4655  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4656  011718  EC51  F0C8         	call	___fltol	;wreg free
  4657  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4658                           
  4659                           ;stkvar	_shape @ sp[(-17)+10]
  4660  011722  0EF9               	movlw	-7
  4661  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4662                           
  4663                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4664  01172A  0E00               	movlw	0
  4665  01172C  6EE6               	movwf	postinc1,c
  4666                           
  4667                           ;stkvar	_shape @ sp[(-18)+10]
  4668  01172E  0EF8               	movlw	-8
  4669  011730  50E3               	movf	plusw1,w,c
  4670  011732  6EE6               	movwf	postinc1,c
  4671  011734  EC27  F0D0         	call	_spinners	;wreg free
  4672  011738  5001               	movf	btemp^0,w,c
  4673  01173A  6EE6               	movwf	postinc1,c
  4674  01173C  0E00               	movlw	0
  4675  01173E  6EE6               	movwf	postinc1,c
  4676  011740  0E00               	movlw	0
  4677  011742  6EE6               	movwf	postinc1,c
  4678  011744  0E00               	movlw	0
  4679  011746  6EE6               	movwf	postinc1,c
  4680  011748  EC27  F0D0         	call	_spinners	;wreg free
  4681  01174C  5001               	movf	btemp^0,w,c
  4682  01174E  6EE6               	movwf	postinc1,c
  4683  011750  0E00               	movlw	0
  4684  011752  6EE6               	movwf	postinc1,c
  4685  011754  0E33               	movlw	low STR_15
  4686  011756  6EE6               	movwf	postinc1,c
  4687  011758  0EFF               	movlw	high STR_15
  4688  01175A  6EE6               	movwf	postinc1,c
  4689  01175C  0E00               	movlw	0
  4690  01175E  6EE6               	movwf	postinc1,c
  4691  011760  0E02               	movlw	2
  4692  011762  6EE6               	movwf	postinc1,c
  4693  011764  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4694  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4695  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4696  011774  0E08               	movlw	8
  4697  011776  6EE6               	movwf	postinc1,c
  4698  011778  ECA2  F0CF         	call	_sprintf	;wreg free
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;main.c: 294:     update_lcd(0);
  4702  01177C  0E00               	movlw	0
  4703  01177E  6EE6               	movwf	postinc1,c
  4704  011780  EC1A  F0CF         	call	_update_lcd	;wreg free
  4705                           
  4706                           ;main.c: 296:     if (i_esr++ > 512)
  4707                           ;stkvar	_i_esr @ sp[(-17)+8]
  4708  011784  50E1               	movf	fsr1l,w,c
  4709  011786  0FF7               	addlw	-9
  4710  011788  6ED9               	movwf	fsr2l,c
  4711  01178A  50E2               	movf	fsr1h,w,c
  4712  01178C  6EDA               	movwf	fsr2h,c
  4713  01178E  0EFF               	movlw	255
  4714  011790  22DA               	addwfc	fsr2h,f,c
  4715  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4716  011798  0E01               	movlw	1
  4717  01179A  26DE               	addwf	postinc2,f,c
  4718  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4719  0117A2  0E00               	movlw	0
  4720  0117A4  22DD               	addwfc	postdec2,f,c
  4721  0117A6  040B               	decf	(btemp+10)^0,w,c
  4722  0117A8  0E02               	movlw	2
  4723  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4724  0117AC  B0D8               	btfsc	status,0,c
  4725  0117AE  D017               	goto	u12840
  4726  0117B0                     l13502:
  4727                           
  4728                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4729  0117B0  0E00               	movlw	0
  4730  0117B2  6EE6               	movwf	postinc1,c
  4731  0117B4  ECC4  F0B8         	call	_esr_check	;wreg free
  4732                           
  4733                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4734  0117B8  0EF3               	movlw	-13
  4735  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4736  0117C0  0EF4               	movlw	-12
  4737  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4738  0117C8  0EF5               	movlw	-11
  4739  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4740  0117D0  0EF6               	movlw	-10
  4741  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4742  0117D8  0EF6               	movlw	-10
  4743  0117DA  BEE3               	btfsc	plusw1,7,c
  4744  0117DC  D77C               	goto	l13490
  4745  0117DE                     u12840:
  4746                           
  4747                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4748  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4749  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4751  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4752  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4753  0117FA  0E40               	movlw	low STR_16
  4754  0117FC  6EE6               	movwf	postinc1,c
  4755  0117FE  0EFD               	movlw	high STR_16
  4756  011800  6EE6               	movwf	postinc1,c
  4757  011802  0E00               	movlw	0
  4758  011804  6EE6               	movwf	postinc1,c
  4759  011806  0E00               	movlw	0
  4760  011808  6EE6               	movwf	postinc1,c
  4761  01180A  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4762  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4763  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4764  01181A  0E08               	movlw	8
  4765  01181C  6EE6               	movwf	postinc1,c
  4766  01181E  ECA2  F0CF         	call	_sprintf	;wreg free
  4767                           
  4768                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4769  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4770  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4771  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4772  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4773  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4774  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4775  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4776  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4778  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4779  01185A  0E67               	movlw	low STR_17
  4780  01185C  6EE6               	movwf	postinc1,c
  4781  01185E  0EFC               	movlw	high STR_17
  4782  011860  6EE6               	movwf	postinc1,c
  4783  011862  0E00               	movlw	0
  4784  011864  6EE6               	movwf	postinc1,c
  4785  011866  0E01               	movlw	1
  4786  011868  6EE6               	movwf	postinc1,c
  4787  01186A  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4788  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4789  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4790  01187A  0E0C               	movlw	12
  4791  01187C  6EE6               	movwf	postinc1,c
  4792  01187E  ECA2  F0CF         	call	_sprintf	;wreg free
  4793                           
  4794                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4795  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4796  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4798  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4799  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4800  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4801  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4802  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4803  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4804  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4805  0118BA  0E81               	movlw	low STR_18
  4806  0118BC  6EE6               	movwf	postinc1,c
  4807  0118BE  0EFC               	movlw	high STR_18
  4808  0118C0  6EE6               	movwf	postinc1,c
  4809  0118C2  0E00               	movlw	0
  4810  0118C4  6EE6               	movwf	postinc1,c
  4811  0118C6  0E02               	movlw	2
  4812  0118C8  6EE6               	movwf	postinc1,c
  4813  0118CA  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  4814  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4815  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4816  0118DA  0E0C               	movlw	12
  4817  0118DC  6EE6               	movwf	postinc1,c
  4818  0118DE  ECA2  F0CF         	call	_sprintf	;wreg free
  4819                           
  4820                           ;main.c: 302:    update_lcd(0);
  4821  0118E2  0E00               	movlw	0
  4822  0118E4  6EE6               	movwf	postinc1,c
  4823  0118E6  EC1A  F0CF         	call	_update_lcd	;wreg free
  4824                           
  4825                           ;main.c: 303:    WaitMs(5000);
  4826  0118EA  0E88               	movlw	136
  4827  0118EC  6EE6               	movwf	postinc1,c
  4828  0118EE  0E13               	movlw	19
  4829  0118F0  6EE6               	movwf	postinc1,c
  4830  0118F2  EC85  F0DE         	call	_WaitMs	;wreg free
  4831                           
  4832                           ;main.c: 304:    V.system_stable = 1;
  4833  0118F6  0E01               	movlw	1
  4834  0118F8  0101               	movlb	1	; () banked
  4835  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4836                           
  4837                           ;main.c: 305:    break;
  4838  0118FC  D01B               	goto	l13514
  4839  0118FE                     l1348:
  4840                           
  4841                           ; BSR set to: 1
  4842                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4843  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4844                           
  4845                           ;main.c: 312:    break;
  4846  011900  D019               	goto	l13514
  4847  011902                     l1350:
  4848                           
  4849                           ; BSR set to: 1
  4850                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4851  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4852                           
  4853                           ;main.c: 316:    break;
  4854  011904  D017               	goto	l13514
  4855  011906                     l13512:
  4856  011906  0101               	movlb	1	; () banked
  4857  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4858  01190A  6E0B               	movwf	(btemp+10)^0,c
  4859  01190C  6A0C               	clrf	(btemp+11)^0,c
  4860                           
  4861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4862                           ; Switch size 1, requested type "simple"
  4863                           ; Number of cases is 1, Range of values is 0 to 0
  4864                           ; switch strategies available:
  4865                           ; Name         Instructions Cycles
  4866                           ; simple_byte            4     3 (average)
  4867                           ;	Chosen strategy is simple_byte
  4868  01190E  500C               	movf	(btemp+11)^0,w,c
  4869  011910  0A00               	xorlw	0	; case 0
  4870  011912  A4D8               	btfss	status,2,c
  4871  011914  D7F6               	goto	l1350
  4872                           
  4873                           ; BSR set to: 1
  4874                           ; Switch size 1, requested type "simple"
  4875                           ; Number of cases is 5, Range of values is 0 to 5
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte           16     9 (average)
  4879                           ;	Chosen strategy is simple_byte
  4880  011916  500B               	movf	(btemp+10)^0,w,c
  4881  011918  0A00               	xorlw	0	; case 0
  4882  01191A  B4D8               	btfsc	status,2,c
  4883  01191C  D4CF               	goto	l13394
  4884  01191E  0A01               	xorlw	1	; case 1
  4885  011920  B4D8               	btfsc	status,2,c
  4886  011922  D008               	goto	l13514
  4887  011924  0A02               	xorlw	2	; case 3
  4888  011926  B4D8               	btfsc	status,2,c
  4889  011928  D005               	goto	l13514
  4890  01192A  0A07               	xorlw	7	; case 4
  4891  01192C  B4D8               	btfsc	status,2,c
  4892  01192E  D7E7               	goto	l1348
  4893  011930  0A01               	xorlw	1	; case 5
  4894  011932  D7E7               	goto	l1350
  4895  011934                     l13514:
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4899  011934  0E01               	movlw	1
  4900  011936  6EE6               	movwf	postinc1,c
  4901  011938  ECEB  F0DF         	call	_TimerDone	;wreg free
  4902  01193C  5001               	movf	btemp^0,w,c
  4903  01193E  B4D8               	btfsc	status,2,c
  4904  011940  D013               	goto	l13526
  4905  011942  ECD9  F0E2         	call	_check_adc_scan	;wreg free
  4906  011946  5001               	movf	btemp^0,w,c
  4907  011948  B4D8               	btfsc	status,2,c
  4908  01194A  D00E               	goto	l13526
  4909                           
  4910                           ;main.c: 323:    convert_adc_data();
  4911  01194C  ECF2  F0D3         	call	_convert_adc_data	;wreg free
  4912                           
  4913                           ;main.c: 327:    clear_adc_scan();
  4914  011950  ECE9  F0E2         	call	_clear_adc_scan	;wreg free
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;main.c: 328:    start_adc_scan();
  4918  011954  EC0C  F0DA         	call	_start_adc_scan	;wreg free
  4919                           
  4920                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4921  011958  0EC8               	movlw	200
  4922  01195A  6EE6               	movwf	postinc1,c
  4923  01195C  0E00               	movlw	0
  4924  01195E  6EE6               	movwf	postinc1,c
  4925  011960  0E01               	movlw	1
  4926  011962  6EE6               	movwf	postinc1,c
  4927  011964  EC96  F0DD         	call	_StartTimer	;wreg free
  4928  011968                     l13526:
  4929                           
  4930                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4931                           
  4932                           ;main.c: 332:   if (V.ticks) {
  4933  011968  0E0A               	movlw	10
  4934  01196A  6EE6               	movwf	postinc1,c
  4935  01196C  ECEB  F0DF         	call	_TimerDone	;wreg free
  4936  011970  5001               	movf	btemp^0,w,c
  4937  011972  B4D8               	btfsc	status,2,c
  4938  011974  EF69  F091         	goto	l13610
  4939                           
  4940                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4941  011978  0E09               	movlw	9
  4942  01197A  6EE6               	movwf	postinc1,c
  4943  01197C  ECEB  F0DF         	call	_TimerDone	;wreg free
  4944  011980  5001               	movf	btemp^0,w,c
  4945  011982  B4D8               	btfsc	status,2,c
  4946  011984  D004               	goto	l13534
  4947                           
  4948                           ;main.c: 338:     set_display_info(DIS_STR);
  4949  011986  0E00               	movlw	0
  4950  011988  6EE6               	movwf	postinc1,c
  4951  01198A  ECF0  F0E1         	call	_set_display_info	;wreg free
  4952  01198E                     l13534:
  4953                           
  4954                           ;main.c: 340:    calc_model_data();
  4955  01198E  EC5F  F0AE         	call	_calc_model_data	;wreg free
  4956                           
  4957                           ; BSR set to: 57
  4958                           ;main.c: 347:     hid_display(&H);
  4959                           
  4960                           ;main.c: 342:    if (0) {
  4961  011992  0EC6               	movlw	low _H
  4962  011994  6EE6               	movwf	postinc1,c
  4963  011996  0E01               	movlw	high _H
  4964  011998  6EE6               	movwf	postinc1,c
  4965  01199A  EC67  F0C3         	call	_hid_display	;wreg free
  4966                           
  4967                           ;main.c: 348:     switch (H.hid_display) {
  4968  01199E  EFFF  F090         	goto	l13582
  4969  0119A2                     l1358:
  4970                           
  4971                           ; BSR set to: 1
  4972                           ;main.c: 350:      V.calib = 0;
  4973  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4974                           
  4975                           ; BSR set to: 1
  4976                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4977  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4978  0119A8  50DF               	movf	indf2,w,c
  4979  0119AA  A4D8               	btfss	status,2,c
  4980  0119AC  D002               	goto	l13544
  4981                           
  4982                           ; BSR set to: 1
  4983  0119AE  0E20               	movlw	32
  4984  0119B0  D001               	goto	L1
  4985  0119B2                     l13544:
  4986                           
  4987                           ; BSR set to: 1
  4988  0119B2  0E44               	movlw	68
  4989  0119B4                     L1:
  4990  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4991  0119B6  0E00               	movlw	0
  4992  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4993                           
  4994                           ;stkvar	_main$3770 @ sp[(-17)+2]
  4995  0119BA  0EF1               	movlw	-15
  4996  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4997  0119C2  0EF2               	movlw	-14
  4998  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4999                           
  5000                           ; BSR set to: 1
  5001  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  5002  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5005  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  5006                           
  5007                           ;stkvar	_main$3770 @ sp[(-21)+2]
  5008  0119E6  0EED               	movlw	-19
  5009  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  5010  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5011  0119F4  0E1C               	movlw	low STR_22
  5012  0119F6  6EE6               	movwf	postinc1,c
  5013  0119F8  0EFE               	movlw	high STR_22
  5014  0119FA  6EE6               	movwf	postinc1,c
  5015  0119FC  0E00               	movlw	0
  5016  0119FE  6EE6               	movwf	postinc1,c
  5017  011A00  0E00               	movlw	0
  5018  011A02  6EE6               	movwf	postinc1,c
  5019  011A04  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5020  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5021  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5022  011A14  0E0A               	movlw	10
  5023  011A16  6EE6               	movwf	postinc1,c
  5024  011A18  ECA2  F0CF         	call	_sprintf	;wreg free
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5028  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5029  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5030  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5031  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5032  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5033  011A38  0E06               	movlw	low STR_23
  5034  011A3A  6EE6               	movwf	postinc1,c
  5035  011A3C  0EFE               	movlw	high STR_23
  5036  011A3E  6EE6               	movwf	postinc1,c
  5037  011A40  0E00               	movlw	0
  5038  011A42  6EE6               	movwf	postinc1,c
  5039  011A44  0E01               	movlw	1
  5040  011A46  6EE6               	movwf	postinc1,c
  5041  011A48  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5042  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5043  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5044  011A58  0E08               	movlw	8
  5045  011A5A  6EE6               	movwf	postinc1,c
  5046  011A5C  ECA2  F0CF         	call	_sprintf	;wreg free
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5050  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5051  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5053  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5055  011A7C  0EF0               	movlw	low STR_24
  5056  011A7E  6EE6               	movwf	postinc1,c
  5057  011A80  0EFD               	movlw	high STR_24
  5058  011A82  6EE6               	movwf	postinc1,c
  5059  011A84  0E00               	movlw	0
  5060  011A86  6EE6               	movwf	postinc1,c
  5061  011A88  0E02               	movlw	2
  5062  011A8A  6EE6               	movwf	postinc1,c
  5063  011A8C  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5064  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5065  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5066  011A9C  0E08               	movlw	8
  5067  011A9E  6EE6               	movwf	postinc1,c
  5068  011AA0  ECA2  F0CF         	call	_sprintf	;wreg free
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5072  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5073  011AA8  50DF               	movf	indf2,w,c
  5074  011AAA  A4D8               	btfss	status,2,c
  5075  011AAC  D002               	goto	l13556
  5076                           
  5077                           ; BSR set to: 0
  5078  011AAE  0E20               	movlw	32
  5079  011AB0  D001               	goto	L2
  5080  011AB2                     l13556:
  5081                           
  5082                           ; BSR set to: 0
  5083  011AB2  0E44               	movlw	68
  5084  011AB4                     L2:
  5085  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5086  011AB6  0E00               	movlw	0
  5087  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5088                           
  5089                           ;stkvar	_main$3774 @ sp[(-17)+0]
  5090  011ABA  0EEF               	movlw	-17
  5091  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5092  011AC2  0EF0               	movlw	-16
  5093  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5094                           
  5095                           ; BSR set to: 0
  5096  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5097  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5100  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5101                           
  5102                           ;stkvar	_main$3774 @ sp[(-21)+0]
  5103  011AE6  0EEB               	movlw	-21
  5104  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5105  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5106  011AF4  0EDA               	movlw	low STR_25
  5107  011AF6  6EE6               	movwf	postinc1,c
  5108  011AF8  0EFD               	movlw	high STR_25
  5109  011AFA  6EE6               	movwf	postinc1,c
  5110  011AFC  0E01               	movlw	1
  5111  011AFE  6EE6               	movwf	postinc1,c
  5112  011B00  0E00               	movlw	0
  5113  011B02  6EE6               	movwf	postinc1,c
  5114  011B04  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5115  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5116  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5117  011B14  0E0A               	movlw	10
  5118  011B16  6EE6               	movwf	postinc1,c
  5119  011B18  ECA2  F0CF         	call	_sprintf	;wreg free
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5123  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5124  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5128  011B38  0EC4               	movlw	low STR_26
  5129  011B3A  6EE6               	movwf	postinc1,c
  5130  011B3C  0EFD               	movlw	high STR_26
  5131  011B3E  6EE6               	movwf	postinc1,c
  5132  011B40  0E01               	movlw	1
  5133  011B42  6EE6               	movwf	postinc1,c
  5134  011B44  0E01               	movlw	1
  5135  011B46  6EE6               	movwf	postinc1,c
  5136  011B48  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5137  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5138  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5139  011B58  0E08               	movlw	8
  5140  011B5A  6EE6               	movwf	postinc1,c
  5141  011B5C  ECA2  F0CF         	call	_sprintf	;wreg free
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5145  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5146  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5147  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5150  011B7C  0EAE               	movlw	low STR_27
  5151  011B7E  6EE6               	movwf	postinc1,c
  5152  011B80  0EFD               	movlw	high STR_27
  5153  011B82  6EE6               	movwf	postinc1,c
  5154  011B84  0E01               	movlw	1
  5155  011B86  6EE6               	movwf	postinc1,c
  5156  011B88  0E02               	movlw	2
  5157  011B8A  6EE6               	movwf	postinc1,c
  5158  011B8C  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5159  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5160  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5161  011B9C  0E08               	movlw	8
  5162  011B9E  6EE6               	movwf	postinc1,c
  5163  011BA0  ECA2  F0CF         	call	_sprintf	;wreg free
  5164                           
  5165                           ;main.c: 358:      break;
  5166  011BA4  D342               	goto	l13584
  5167  011BA6                     l1368:
  5168                           
  5169                           ; BSR set to: 1
  5170                           ;main.c: 360:      V.calib = 0;
  5171  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5172                           
  5173                           ; BSR set to: 1
  5174                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5175  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5176  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5178  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5181  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5185  011BE0  0E74               	movlw	low STR_28
  5186  011BE2  6EE6               	movwf	postinc1,c
  5187  011BE4  0EFE               	movlw	high STR_28
  5188  011BE6  6EE6               	movwf	postinc1,c
  5189  011BE8  0E00               	movlw	0
  5190  011BEA  6EE6               	movwf	postinc1,c
  5191  011BEC  0E00               	movlw	0
  5192  011BEE  6EE6               	movwf	postinc1,c
  5193  011BF0  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5194  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5195  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5196  011C00  0E0C               	movlw	12
  5197  011C02  6EE6               	movwf	postinc1,c
  5198  011C04  ECA2  F0CF         	call	_sprintf	;wreg free
  5199                           
  5200                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5201  011C08  EE21  F2FF         	lfsr	2,_C
  5202  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5206  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5207  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5208  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5209  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5210  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5211  011C40  0E48               	movlw	low STR_29
  5212  011C42  6EE6               	movwf	postinc1,c
  5213  011C44  0EFE               	movlw	high STR_29
  5214  011C46  6EE6               	movwf	postinc1,c
  5215  011C48  0E00               	movlw	0
  5216  011C4A  6EE6               	movwf	postinc1,c
  5217  011C4C  0E01               	movlw	1
  5218  011C4E  6EE6               	movwf	postinc1,c
  5219  011C50  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5220  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5221  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5222  011C60  0E0C               	movlw	12
  5223  011C62  6EE6               	movwf	postinc1,c
  5224  011C64  ECA2  F0CF         	call	_sprintf	;wreg free
  5225                           
  5226                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5227  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5228  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5229  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5230  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5231  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5232  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5233  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5234  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5235  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5237  011CA0  0E5E               	movlw	low STR_30
  5238  011CA2  6EE6               	movwf	postinc1,c
  5239  011CA4  0EFE               	movlw	high STR_30
  5240  011CA6  6EE6               	movwf	postinc1,c
  5241  011CA8  0E00               	movlw	0
  5242  011CAA  6EE6               	movwf	postinc1,c
  5243  011CAC  0E02               	movlw	2
  5244  011CAE  6EE6               	movwf	postinc1,c
  5245  011CB0  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5246  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5247  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5248  011CC0  0E0C               	movlw	12
  5249  011CC2  6EE6               	movwf	postinc1,c
  5250  011CC4  ECA2  F0CF         	call	_sprintf	;wreg free
  5251                           
  5252                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5253  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5254  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5255  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5256  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5257  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5258  011CE4  0E6C               	movlw	low STR_31
  5259  011CE6  6EE6               	movwf	postinc1,c
  5260  011CE8  0EFD               	movlw	high STR_31
  5261  011CEA  6EE6               	movwf	postinc1,c
  5262  011CEC  0E01               	movlw	1
  5263  011CEE  6EE6               	movwf	postinc1,c
  5264  011CF0  0E00               	movlw	0
  5265  011CF2  6EE6               	movwf	postinc1,c
  5266  011CF4  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5267  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5268  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5269  011D04  0E08               	movlw	8
  5270  011D06  6EE6               	movwf	postinc1,c
  5271  011D08  ECA2  F0CF         	call	_sprintf	;wreg free
  5272                           
  5273                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5274  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5275  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5278  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5279  011D28  0E82               	movlw	low STR_32
  5280  011D2A  6EE6               	movwf	postinc1,c
  5281  011D2C  0EFD               	movlw	high STR_32
  5282  011D2E  6EE6               	movwf	postinc1,c
  5283  011D30  0E01               	movlw	1
  5284  011D32  6EE6               	movwf	postinc1,c
  5285  011D34  0E01               	movlw	1
  5286  011D36  6EE6               	movwf	postinc1,c
  5287  011D38  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5288  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5289  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5290  011D48  0E08               	movlw	8
  5291  011D4A  6EE6               	movwf	postinc1,c
  5292  011D4C  ECA2  F0CF         	call	_sprintf	;wreg free
  5293                           
  5294                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5295  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5296  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5301  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011D88  ECFA  F0A2         	call	___fladd	;wreg free
  5306  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5307  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5308  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5309  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5310  011DA4  0E98               	movlw	low STR_33
  5311  011DA6  6EE6               	movwf	postinc1,c
  5312  011DA8  0EFD               	movlw	high STR_33
  5313  011DAA  6EE6               	movwf	postinc1,c
  5314  011DAC  0E01               	movlw	1
  5315  011DAE  6EE6               	movwf	postinc1,c
  5316  011DB0  0E02               	movlw	2
  5317  011DB2  6EE6               	movwf	postinc1,c
  5318  011DB4  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5319  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5320  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5321  011DC4  0E08               	movlw	8
  5322  011DC6  6EE6               	movwf	postinc1,c
  5323  011DC8  ECA2  F0CF         	call	_sprintf	;wreg free
  5324                           
  5325                           ;main.c: 368:      break;
  5326  011DCC  D22E               	goto	l13584
  5327  011DCE                     l1369:
  5328                           
  5329                           ; BSR set to: 1
  5330                           ;main.c: 370:      V.calib = 0;
  5331  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5332                           
  5333                           ; BSR set to: 1
  5334                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5335  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5336  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5337  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5338  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5339  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5340  011DEC  0EE4               	movlw	low STR_34
  5341  011DEE  6EE6               	movwf	postinc1,c
  5342  011DF0  0EFC               	movlw	high STR_34
  5343  011DF2  6EE6               	movwf	postinc1,c
  5344  011DF4  0E00               	movlw	0
  5345  011DF6  6EE6               	movwf	postinc1,c
  5346  011DF8  0E00               	movlw	0
  5347  011DFA  6EE6               	movwf	postinc1,c
  5348  011DFC  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5349  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5350  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5351  011E0C  0E08               	movlw	8
  5352  011E0E  6EE6               	movwf	postinc1,c
  5353  011E10  ECA2  F0CF         	call	_sprintf	;wreg free
  5354                           
  5355                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5356  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5357  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5358  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5359  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5360  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5361  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5362  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5363  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5364  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011E4C  0E29               	movlw	low STR_35
  5367  011E4E  6EE6               	movwf	postinc1,c
  5368  011E50  0EFD               	movlw	high STR_35
  5369  011E52  6EE6               	movwf	postinc1,c
  5370  011E54  0E00               	movlw	0
  5371  011E56  6EE6               	movwf	postinc1,c
  5372  011E58  0E01               	movlw	1
  5373  011E5A  6EE6               	movwf	postinc1,c
  5374  011E5C  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5375  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5376  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5377  011E6C  0E0C               	movlw	12
  5378  011E6E  6EE6               	movwf	postinc1,c
  5379  011E70  ECA2  F0CF         	call	_sprintf	;wreg free
  5380                           
  5381                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5382  011E74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5383  011E78  006F FF7B FFE6     	movff	postinc2,postinc1
  5384  011E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5385  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5387  011E90  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5388  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5389  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5390  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5391  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5392  011EAC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5393  011EB0  006F FF78  F00B    	movff	postinc2,btemp+10
  5394  011EB6  006F FF74  F00C    	movff	postdec2,btemp+11
  5395  011EBC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5396  011EC2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5397  011EC8  0E00               	movlw	0
  5398  011ECA  6EE6               	movwf	postinc1,c
  5399  011ECC  0E05               	movlw	5
  5400  011ECE  6EE6               	movwf	postinc1,c
  5401  011ED0  EC27  F0D0         	call	_spinners	;wreg free
  5402  011ED4  5001               	movf	btemp^0,w,c
  5403  011ED6  6EE6               	movwf	postinc1,c
  5404  011ED8  0E00               	movlw	0
  5405  011EDA  6EE6               	movwf	postinc1,c
  5406  011EDC  0E4A               	movlw	low STR_36
  5407  011EDE  6EE6               	movwf	postinc1,c
  5408  011EE0  0EFC               	movlw	high STR_36
  5409  011EE2  6EE6               	movwf	postinc1,c
  5410  011EE4  0E00               	movlw	0
  5411  011EE6  6EE6               	movwf	postinc1,c
  5412  011EE8  0E02               	movlw	2
  5413  011EEA  6EE6               	movwf	postinc1,c
  5414  011EEC  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5415  011EF0  0060  F007  FFE6   	movff	btemp,postinc1
  5416  011EF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5417  011EFC  0E0E               	movlw	14
  5418  011EFE  6EE6               	movwf	postinc1,c
  5419  011F00  ECA2  F0CF         	call	_sprintf	;wreg free
  5420                           
  5421                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5422  011F04  EE21  F387         	lfsr	2,_C+136	;volatile
  5423  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5424  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5425  011F14  006F FF7B FFE6     	movff	postinc2,postinc1
  5426  011F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5427  011F20  0ECD               	movlw	low STR_37
  5428  011F22  6EE6               	movwf	postinc1,c
  5429  011F24  0EFC               	movlw	high STR_37
  5430  011F26  6EE6               	movwf	postinc1,c
  5431  011F28  0E01               	movlw	1
  5432  011F2A  6EE6               	movwf	postinc1,c
  5433  011F2C  0E00               	movlw	0
  5434  011F2E  6EE6               	movwf	postinc1,c
  5435  011F30  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5436  011F34  0060  F007  FFE6   	movff	btemp,postinc1
  5437  011F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5438  011F40  0E08               	movlw	8
  5439  011F42  6EE6               	movwf	postinc1,c
  5440  011F44  ECA2  F0CF         	call	_sprintf	;wreg free
  5441                           
  5442                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5443  011F48  EE22  F00D         	lfsr	2,_C+270	;volatile
  5444  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5445  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5446  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5447  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5448  011F64  EE22  F019         	lfsr	2,_C+282	;volatile
  5449  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  011F80  0EFB               	movlw	low STR_38
  5454  011F82  6EE6               	movwf	postinc1,c
  5455  011F84  0EFC               	movlw	high STR_38
  5456  011F86  6EE6               	movwf	postinc1,c
  5457  011F88  0E01               	movlw	1
  5458  011F8A  6EE6               	movwf	postinc1,c
  5459  011F8C  0E01               	movlw	1
  5460  011F8E  6EE6               	movwf	postinc1,c
  5461  011F90  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5462  011F94  0060  F007  FFE6   	movff	btemp,postinc1
  5463  011F9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5464  011FA0  0E0C               	movlw	12
  5465  011FA2  6EE6               	movwf	postinc1,c
  5466  011FA4  ECA2  F0CF         	call	_sprintf	;wreg free
  5467                           
  5468                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5469  011FA8  EE22  F011         	lfsr	2,_C+274	;volatile
  5470  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5474  011FC4  EE22  F01D         	lfsr	2,_C+286	;volatile
  5475  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  011FE0  0E12               	movlw	low STR_39
  5480  011FE2  6EE6               	movwf	postinc1,c
  5481  011FE4  0EFD               	movlw	high STR_39
  5482  011FE6  6EE6               	movwf	postinc1,c
  5483  011FE8  0E01               	movlw	1
  5484  011FEA  6EE6               	movwf	postinc1,c
  5485  011FEC  0E02               	movlw	2
  5486  011FEE  6EE6               	movwf	postinc1,c
  5487  011FF0  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5488  011FF4  0060  F007  FFE6   	movff	btemp,postinc1
  5489  011FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5490  012000  0E0C               	movlw	12
  5491  012002  6EE6               	movwf	postinc1,c
  5492  012004  ECA2  F0CF         	call	_sprintf	;wreg free
  5493                           
  5494                           ;main.c: 378:      break;
  5495  012008  D110               	goto	l13584
  5496  01200A                     l13568:
  5497                           
  5498                           ; BSR set to: 1
  5499                           ;main.c: 380:      if (!V.calib) {
  5500  01200A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5501  01200C  A4D8               	btfss	status,2,c
  5502  01200E  D02D               	goto	l13572
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5506  012010  0EFF               	movlw	255
  5507  012012  6EE6               	movwf	postinc1,c
  5508                           
  5509                           ;stkvar	_i @ sp[(-18)+14]
  5510  012014  0EFC               	movlw	-4
  5511  012016  50E3               	movf	plusw1,w,c
  5512  012018  6EE6               	movwf	postinc1,c
  5513  01201A  0E00               	movlw	0
  5514  01201C  6EE6               	movwf	postinc1,c
  5515  01201E  0E00               	movlw	0
  5516  012020  6EE6               	movwf	postinc1,c
  5517  012022  0E00               	movlw	0
  5518  012024  6EE6               	movwf	postinc1,c
  5519  012026  0E00               	movlw	0
  5520  012028  6EE6               	movwf	postinc1,c
  5521  01202A  EC55  F0C4         	call	_lp_filter	;wreg free
  5522                           
  5523                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5524  01202E  0EFF               	movlw	255
  5525  012030  6EE6               	movwf	postinc1,c
  5526                           
  5527                           ;stkvar	_j @ sp[(-18)+13]
  5528  012032  0EFB               	movlw	-5
  5529  012034  50E3               	movf	plusw1,w,c
  5530  012036  6EE6               	movwf	postinc1,c
  5531  012038  0E00               	movlw	0
  5532  01203A  6EE6               	movwf	postinc1,c
  5533  01203C  0E00               	movlw	0
  5534  01203E  6EE6               	movwf	postinc1,c
  5535  012040  0E00               	movlw	0
  5536  012042  6EE6               	movwf	postinc1,c
  5537  012044  0E00               	movlw	0
  5538  012046  6EE6               	movwf	postinc1,c
  5539  012048  EC55  F0C4         	call	_lp_filter	;wreg free
  5540                           
  5541                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5542  01204C  0EFF               	movlw	255
  5543  01204E  6EE6               	movwf	postinc1,c
  5544                           
  5545                           ;stkvar	_k @ sp[(-18)+12]
  5546  012050  0EFA               	movlw	-6
  5547  012052  50E3               	movf	plusw1,w,c
  5548  012054  6EE6               	movwf	postinc1,c
  5549  012056  0E00               	movlw	0
  5550  012058  6EE6               	movwf	postinc1,c
  5551  01205A  0E00               	movlw	0
  5552  01205C  6EE6               	movwf	postinc1,c
  5553  01205E  0E00               	movlw	0
  5554  012060  6EE6               	movwf	postinc1,c
  5555  012062  0E00               	movlw	0
  5556  012064  6EE6               	movwf	postinc1,c
  5557  012066  EC55  F0C4         	call	_lp_filter	;wreg free
  5558  01206A                     l13572:
  5559                           
  5560                           ;main.c: 385:      V.calib = 1;
  5561  01206A  0E01               	movlw	1
  5562  01206C  0101               	movlb	1	; () banked
  5563  01206E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5567                           ;stkvar	_inp_index @ sp[(-17)+11]
  5568  012070  0EFA               	movlw	-6
  5569  012072  50E3               	movf	plusw1,w,c
  5570  012074  6E0B               	movwf	(btemp+10)^0,c
  5571  012076  6A0C               	clrf	(btemp+11)^0,c
  5572  012078  0E01               	movlw	1
  5573  01207A  260B               	addwf	(btemp+10)^0,f,c
  5574  01207C  0E00               	movlw	0
  5575  01207E  220C               	addwfc	(btemp+11)^0,f,c
  5576  012080  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5577  012086  0060  F033  FFE6   	movff	btemp+11,postinc1
  5578                           
  5579                           ;stkvar	_i @ sp[(-19)+14]
  5580  01208C  0EFB               	movlw	-5
  5581  01208E  50E3               	movf	plusw1,w,c
  5582  012090  0D04               	mullw	4
  5583  012092  0EFF               	movlw	low _C
  5584  012094  24F3               	addwf	243,w,c
  5585  012096  6ED9               	movwf	fsr2l,c
  5586  012098  0E06               	movlw	high _C
  5587  01209A  20F4               	addwfc	prodh,w,c
  5588  01209C  6EDA               	movwf	fsr2h,c
  5589  01209E  006F FF7B FFE6     	movff	postinc2,postinc1
  5590  0120A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  0120AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5592  0120B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5593                           
  5594                           ;stkvar	_i @ sp[(-23)+14]
  5595  0120B6  0EF7               	movlw	-9
  5596  0120B8  50E3               	movf	plusw1,w,c
  5597  0120BA  6EE6               	movwf	postinc1,c
  5598  0120BC  ECFF  F0E1         	call	_get_raw_result	;wreg free
  5599  0120C0  0060  F007  FFE6   	movff	btemp,postinc1
  5600  0120C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5601  0120CC  0E8A               	movlw	low STR_40
  5602  0120CE  6EE6               	movwf	postinc1,c
  5603  0120D0  0EFE               	movlw	high STR_40
  5604  0120D2  6EE6               	movwf	postinc1,c
  5605  0120D4  0E00               	movlw	0
  5606  0120D6  6EE6               	movwf	postinc1,c
  5607  0120D8  0E00               	movlw	0
  5608  0120DA  6EE6               	movwf	postinc1,c
  5609  0120DC  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5610  0120E0  0060  F007  FFE6   	movff	btemp,postinc1
  5611  0120E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5612  0120EC  0E0C               	movlw	12
  5613  0120EE  6EE6               	movwf	postinc1,c
  5614  0120F0  ECA2  F0CF         	call	_sprintf	;wreg free
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5618                           ;stkvar	_inp_index @ sp[(-17)+11]
  5619  0120F4  0EFA               	movlw	-6
  5620  0120F6  50E3               	movf	plusw1,w,c
  5621  0120F8  6E0B               	movwf	(btemp+10)^0,c
  5622  0120FA  6A0C               	clrf	(btemp+11)^0,c
  5623  0120FC  0E02               	movlw	2
  5624  0120FE  260B               	addwf	(btemp+10)^0,f,c
  5625  012100  0E00               	movlw	0
  5626  012102  220C               	addwfc	(btemp+11)^0,f,c
  5627  012104  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5628  01210A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5629                           
  5630                           ;stkvar	_j @ sp[(-19)+13]
  5631  012110  0EFA               	movlw	-6
  5632  012112  50E3               	movf	plusw1,w,c
  5633  012114  0D04               	mullw	4
  5634  012116  0EFF               	movlw	low _C
  5635  012118  24F3               	addwf	243,w,c
  5636  01211A  6ED9               	movwf	fsr2l,c
  5637  01211C  0E06               	movlw	high _C
  5638  01211E  20F4               	addwfc	prodh,w,c
  5639  012120  6EDA               	movwf	fsr2h,c
  5640  012122  006F FF7B FFE6     	movff	postinc2,postinc1
  5641  012128  006F FF7B FFE6     	movff	postinc2,postinc1
  5642  01212E  006F FF7B FFE6     	movff	postinc2,postinc1
  5643  012134  006F FF7B FFE6     	movff	postinc2,postinc1
  5644                           
  5645                           ;stkvar	_j @ sp[(-23)+13]
  5646  01213A  0EF6               	movlw	-10
  5647  01213C  50E3               	movf	plusw1,w,c
  5648  01213E  6EE6               	movwf	postinc1,c
  5649  012140  ECFF  F0E1         	call	_get_raw_result	;wreg free
  5650  012144  0060  F007  FFE6   	movff	btemp,postinc1
  5651  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5652  012150  0E8A               	movlw	low STR_40
  5653  012152  6EE6               	movwf	postinc1,c
  5654  012154  0EFE               	movlw	high STR_40
  5655  012156  6EE6               	movwf	postinc1,c
  5656  012158  0E00               	movlw	0
  5657  01215A  6EE6               	movwf	postinc1,c
  5658  01215C  0E01               	movlw	1
  5659  01215E  6EE6               	movwf	postinc1,c
  5660  012160  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5661  012164  0060  F007  FFE6   	movff	btemp,postinc1
  5662  01216A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5663  012170  0E0C               	movlw	12
  5664  012172  6EE6               	movwf	postinc1,c
  5665  012174  ECA2  F0CF         	call	_sprintf	;wreg free
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5669                           ;stkvar	_inp_index @ sp[(-17)+11]
  5670  012178  0EFA               	movlw	-6
  5671  01217A  50E3               	movf	plusw1,w,c
  5672  01217C  6E0B               	movwf	(btemp+10)^0,c
  5673  01217E  6A0C               	clrf	(btemp+11)^0,c
  5674  012180  0E03               	movlw	3
  5675  012182  260B               	addwf	(btemp+10)^0,f,c
  5676  012184  0E00               	movlw	0
  5677  012186  220C               	addwfc	(btemp+11)^0,f,c
  5678  012188  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5679  01218E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5680                           
  5681                           ;stkvar	_k @ sp[(-19)+12]
  5682  012194  0EF9               	movlw	-7
  5683  012196  50E3               	movf	plusw1,w,c
  5684  012198  0D04               	mullw	4
  5685  01219A  0EFF               	movlw	low _C
  5686  01219C  24F3               	addwf	243,w,c
  5687  01219E  6ED9               	movwf	fsr2l,c
  5688  0121A0  0E06               	movlw	high _C
  5689  0121A2  20F4               	addwfc	prodh,w,c
  5690  0121A4  6EDA               	movwf	fsr2h,c
  5691  0121A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0121AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  0121B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5694  0121B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5695                           
  5696                           ;stkvar	_k @ sp[(-23)+12]
  5697  0121BE  0EF5               	movlw	-11
  5698  0121C0  50E3               	movf	plusw1,w,c
  5699  0121C2  6EE6               	movwf	postinc1,c
  5700  0121C4  ECFF  F0E1         	call	_get_raw_result	;wreg free
  5701  0121C8  0060  F007  FFE6   	movff	btemp,postinc1
  5702  0121CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5703  0121D4  0E8A               	movlw	low STR_40
  5704  0121D6  6EE6               	movwf	postinc1,c
  5705  0121D8  0EFE               	movlw	high STR_40
  5706  0121DA  6EE6               	movwf	postinc1,c
  5707  0121DC  0E00               	movlw	0
  5708  0121DE  6EE6               	movwf	postinc1,c
  5709  0121E0  0E02               	movlw	2
  5710  0121E2  6EE6               	movwf	postinc1,c
  5711  0121E4  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  5712  0121E8  0060  F007  FFE6   	movff	btemp,postinc1
  5713  0121EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5714  0121F4  0E0C               	movlw	12
  5715  0121F6  6EE6               	movwf	postinc1,c
  5716  0121F8  ECA2  F0CF         	call	_sprintf	;wreg free
  5717                           
  5718                           ;main.c: 389:      break;
  5719  0121FC  D016               	goto	l13584
  5720  0121FE                     l13582:
  5721  0121FE  0101               	movlb	1	; () banked
  5722  012200  51C6               	movf	_H& (0+255),w,b
  5723  012202  6E0B               	movwf	(btemp+10)^0,c
  5724  012204  6A0C               	clrf	(btemp+11)^0,c
  5725                           
  5726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5727                           ; Switch size 1, requested type "simple"
  5728                           ; Number of cases is 1, Range of values is 0 to 0
  5729                           ; switch strategies available:
  5730                           ; Name         Instructions Cycles
  5731                           ; simple_byte            4     3 (average)
  5732                           ;	Chosen strategy is simple_byte
  5733  012206  500C               	movf	(btemp+11)^0,w,c
  5734  012208  0A00               	xorlw	0	; case 0
  5735  01220A  A4D8               	btfss	status,2,c
  5736  01220C  D00E               	goto	l13584
  5737                           
  5738                           ; BSR set to: 1
  5739                           ; Switch size 1, requested type "simple"
  5740                           ; Number of cases is 4, Range of values is 0 to 3
  5741                           ; switch strategies available:
  5742                           ; Name         Instructions Cycles
  5743                           ; simple_byte           13     7 (average)
  5744                           ;	Chosen strategy is simple_byte
  5745  01220E  500B               	movf	(btemp+10)^0,w,c
  5746  012210  0A00               	xorlw	0	; case 0
  5747  012212  B4D8               	btfsc	status,2,c
  5748  012214  D4C8               	goto	l1368
  5749  012216  0A01               	xorlw	1	; case 1
  5750  012218  B4D8               	btfsc	status,2,c
  5751  01221A  EFD1  F08C         	goto	l1358
  5752  01221E  0A03               	xorlw	3	; case 2
  5753  012220  B4D8               	btfsc	status,2,c
  5754  012222  D5D5               	goto	l1369
  5755  012224  0A01               	xorlw	1	; case 3
  5756  012226  B4D8               	btfsc	status,2,c
  5757  012228  D6F0               	goto	l13568
  5758  01222A                     l13584:
  5759                           
  5760                           ;main.c: 393:     clear_hid_pflags(&H);
  5761  01222A  0EC6               	movlw	low _H
  5762  01222C  6EE6               	movwf	postinc1,c
  5763  01222E  0E01               	movlw	high _H
  5764  012230  6EE6               	movwf	postinc1,c
  5765  012232  ECAA  F0DC         	call	_clear_hid_pflags	;wreg free
  5766                           
  5767                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5768  012236  0EFA               	movlw	250
  5769  012238  6EE6               	movwf	postinc1,c
  5770  01223A  0E00               	movlw	0
  5771  01223C  6EE6               	movwf	postinc1,c
  5772  01223E  0E0A               	movlw	10
  5773  012240  6EE6               	movwf	postinc1,c
  5774  012242  EC96  F0DD         	call	_StartTimer	;wreg free
  5775                           
  5776                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5777  012246  0EC6               	movlw	low _H
  5778  012248  6EE6               	movwf	postinc1,c
  5779  01224A  0E01               	movlw	high _H
  5780  01224C  6EE6               	movwf	postinc1,c
  5781  01224E  EC01  F0D9         	call	_check_enter_button	;wreg free
  5782  012252  5001               	movf	btemp^0,w,c
  5783  012254  0101               	movlb	1	; () banked
  5784  012256  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5788  012258  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5789  01225A  B4D8               	btfsc	status,2,c
  5790  01225C  D011               	goto	l13598
  5791                           
  5792                           ; BSR set to: 1
  5793  01225E  0E03               	movlw	3
  5794  012260  19C6               	xorwf	_H& (0+255),w,b
  5795  012262  B4D8               	btfsc	status,2,c
  5796  012264  D00D               	goto	l13598
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 398:     V.enter = 0;
  5800  012266  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5801                           
  5802                           ; BSR set to: 1
  5803                           ;main.c: 399:     V.screen = ~V.screen;
  5804  012268  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5805  01226A  D002               	goto	u12940
  5806  01226C  0E01               	movlw	1
  5807  01226E  D001               	goto	u12946
  5808  012270                     u12940:
  5809  012270  0E00               	movlw	0
  5810  012272                     u12946:
  5811  012272  0AFF               	xorlw	255
  5812  012274  6E0C               	movwf	(btemp+11)^0,c
  5813  012276  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5814  012278  180C               	xorwf	(btemp+11)^0,w,c
  5815  01227A  0BFE               	andlw	-2
  5816  01227C  180C               	xorwf	(btemp+11)^0,w,c
  5817  01227E  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5818  012280                     l13598:
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;main.c: 401:    set_vterm(V.screen);
  5822  012280  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5823  012282  D002               	goto	u12950
  5824  012284  0E01               	movlw	1
  5825  012286  D001               	goto	u12956
  5826  012288                     u12950:
  5827  012288  0E00               	movlw	0
  5828  01228A                     u12956:
  5829  01228A  6EE6               	movwf	postinc1,c
  5830  01228C  ECE1  F0E1         	call	_set_vterm	;wreg free
  5831                           
  5832                           ;main.c: 402:    update_lcd(V.screen);
  5833  012290  0101               	movlb	1	; () banked
  5834  012292  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5835  012294  D002               	goto	u12960
  5836  012296  0E01               	movlw	1
  5837  012298  D001               	goto	u12966
  5838  01229A                     u12960:
  5839  01229A  0E00               	movlw	0
  5840  01229C                     u12966:
  5841  01229C  6EE6               	movwf	postinc1,c
  5842  01229E  EC1A  F0CF         	call	_update_lcd	;wreg free
  5843                           
  5844                           ;main.c: 404:    wait_lcd_done();
  5845  0122A2  EC70  F0E1         	call	_wait_lcd_done	;wreg free
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;main.c: 405:    set_dac_a(3.33);
  5849  0122A6  0EB8               	movlw	184
  5850  0122A8  6EE6               	movwf	postinc1,c
  5851  0122AA  0E1E               	movlw	30
  5852  0122AC  6EE6               	movwf	postinc1,c
  5853  0122AE  0E55               	movlw	85
  5854  0122B0  6EE6               	movwf	postinc1,c
  5855  0122B2  0E40               	movlw	64
  5856  0122B4  6EE6               	movwf	postinc1,c
  5857  0122B6  ECD4  F0DE         	call	_set_dac_a	;wreg free
  5858                           
  5859                           ;main.c: 406:    set_dac_b(6.66);
  5860  0122BA  0EB8               	movlw	184
  5861  0122BC  6EE6               	movwf	postinc1,c
  5862  0122BE  0E1E               	movlw	30
  5863  0122C0  6EE6               	movwf	postinc1,c
  5864  0122C2  0ED5               	movlw	213
  5865  0122C4  6EE6               	movwf	postinc1,c
  5866  0122C6  0E40               	movlw	64
  5867  0122C8  6EE6               	movwf	postinc1,c
  5868  0122CA  ECBA  F0DE         	call	_set_dac_b	;wreg free
  5869                           
  5870                           ;main.c: 407:    set_dac();
  5871  0122CE  EC4E  F0D4         	call	_set_dac	;wreg free
  5872  0122D2                     l13610:
  5873                           
  5874                           ;main.c: 413:   check_help(V.flipper);
  5875  0122D2  0101               	movlb	1	; () banked
  5876  0122D4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5877  0122D6  6EE6               	movwf	postinc1,c
  5878  0122D8  EC5C  F0C1         	call	_check_help	;wreg free
  5879                           
  5880                           ;main.c: 415:   if (V.enter) {
  5881  0122DC  0101               	movlb	1	; () banked
  5882  0122DE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5883  0122E0  B4D8               	btfsc	status,2,c
  5884  0122E2  D062               	goto	l1374
  5885                           
  5886                           ; BSR set to: 1
  5887                           ;main.c: 416:    V.enter = 0;
  5888  0122E4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5889                           
  5890                           ;main.c: 417:    V.calib = 0;
  5891  0122E6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5892                           
  5893                           ; BSR set to: 1
  5894                           ;main.c: 418:    inp_index += 3;
  5895                           ;stkvar	_inp_index @ sp[(-17)+11]
  5896  0122E8  0EFA               	movlw	-6
  5897  0122EA  006F FF8C  F001    	movff	plusw1,btemp
  5898  0122F0  0E03               	movlw	3
  5899  0122F2  2601               	addwf	btemp^0,f,c
  5900  0122F4  0EFA               	movlw	-6
  5901  0122F6  0060  F007  FFE3   	movff	btemp,plusw1
  5902                           
  5903                           ;main.c: 419:    if (inp_index > 9)
  5904                           ;stkvar	_inp_index @ sp[(-17)+11]
  5905  0122FC  0EFA               	movlw	-6
  5906  0122FE  006F FF8C  F001    	movff	plusw1,btemp
  5907  012304  0E09               	movlw	9
  5908  012306  6401               	cpfsgt	btemp^0,c
  5909  012308  D03A               	goto	l13638
  5910                           
  5911                           ; BSR set to: 1
  5912                           ;main.c: 420:     inp_index = 0;
  5913                           ;stkvar	_inp_index @ sp[(-17)+11]
  5914  01230A  0EFA               	movlw	-6
  5915  01230C  6AE3               	clrf	plusw1,c
  5916  01230E  D037               	goto	l13638
  5917  012310                     l13620:
  5918                           
  5919                           ; BSR set to: 1
  5920                           ;main.c: 423:     i = C_BATT;
  5921                           ;stkvar	_i @ sp[(-17)+14]
  5922  012310  0EFD               	movlw	-3
  5923  012312  6AE3               	clrf	plusw1,c
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;main.c: 424:     j = C_PV;
  5927                           ;stkvar	_j @ sp[(-17)+13]
  5928  012314  0EFC               	movlw	-4
  5929  012316  6AE3               	clrf	plusw1,c
  5930  012318  2AE3               	incf	plusw1,f,c
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;main.c: 425:     k = V_CC;
  5934                           ;stkvar	_k @ sp[(-17)+12]
  5935  01231A  0EFB               	movlw	-5
  5936  01231C  6AE3               	clrf	plusw1,c
  5937  01231E  82E3               	bsf	plusw1,1,c
  5938                           
  5939                           ;main.c: 426:     break;
  5940  012320  D043               	goto	l1374
  5941  012322                     l13626:
  5942                           
  5943                           ; BSR set to: 1
  5944                           ;main.c: 428:     i = V_BAT;
  5945                           ;stkvar	_i @ sp[(-17)+14]
  5946  012322  0EFD               	movlw	-3
  5947  012324  6AE3               	clrf	plusw1,c
  5948  012326  84E3               	bsf	plusw1,2,c
  5949                           
  5950                           ;main.c: 429:     j = V_PV;
  5951                           ;stkvar	_j @ sp[(-17)+13]
  5952  012328  0EFC               	movlw	-4
  5953  01232A  6AE3               	clrf	plusw1,c
  5954  01232C  80E3               	bsf	plusw1,0,c
  5955  01232E  84E3               	bsf	plusw1,2,c	;indir
  5956                           
  5957                           ;main.c: 430:     k = V_CBUS;
  5958                           ;stkvar	_k @ sp[(-17)+12]
  5959  012330  0EFB               	movlw	-5
  5960  012332  6AE3               	clrf	plusw1,c
  5961  012334  82E3               	bsf	plusw1,1,c
  5962  012336  84E3               	bsf	plusw1,2,c	;indir
  5963                           
  5964                           ;main.c: 431:     break;
  5965  012338  D037               	goto	l1374
  5966  01233A                     l13628:
  5967                           
  5968                           ; BSR set to: 1
  5969                           ;main.c: 433:     i = V_BBAT;
  5970                           ;stkvar	_i @ sp[(-17)+14]
  5971  01233A  0EFD               	movlw	-3
  5972  01233C  6AE3               	clrf	plusw1,c
  5973  01233E  82E3               	bsf	plusw1,1,c
  5974  012340  86E3               	bsf	plusw1,3,c	;indir
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;main.c: 434:     j = V_TEMP;
  5978  012342  0E0B               	movlw	11
  5979  012344  6E0C               	movwf	(btemp+11)^0,c
  5980                           
  5981                           ;stkvar	_j @ sp[(-17)+13]
  5982  012346  0EFC               	movlw	-4
  5983  012348  0060  F033  FFE3   	movff	btemp+11,plusw1
  5984                           
  5985                           ; BSR set to: 1
  5986                           ;main.c: 435:     k = V_INVERTER;
  5987                           ;stkvar	_k @ sp[(-17)+12]
  5988  01234E  0EFB               	movlw	-5
  5989  012350  6AE3               	clrf	plusw1,c
  5990  012352  84E3               	bsf	plusw1,2,c
  5991  012354  86E3               	bsf	plusw1,3,c	;indir
  5992                           
  5993                           ;main.c: 436:     break;
  5994  012356  D028               	goto	l1374
  5995  012358                     l13634:
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  5999  012358  0E0D               	movlw	13
  6000  01235A  6E0C               	movwf	(btemp+11)^0,c
  6001                           
  6002                           ;stkvar	_i @ sp[(-17)+14]
  6003  01235C  0EFD               	movlw	-3
  6004  01235E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6005                           
  6006                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  6007  012364  0E0D               	movlw	13
  6008  012366  6E0C               	movwf	(btemp+11)^0,c
  6009                           
  6010                           ;stkvar	_j @ sp[(-17)+13]
  6011  012368  0EFC               	movlw	-4
  6012  01236A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6013                           
  6014                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6015  012370  0E0D               	movlw	13
  6016  012372  6E0C               	movwf	(btemp+11)^0,c
  6017                           
  6018                           ;stkvar	_k @ sp[(-17)+12]
  6019  012374  0EFB               	movlw	-5
  6020  012376  0060  F033  FFE3   	movff	btemp+11,plusw1
  6021                           
  6022                           ;main.c: 441:     break;
  6023  01237C  D015               	goto	l1374
  6024  01237E                     l13638:
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;stkvar	_inp_index @ sp[(-17)+11]
  6028  01237E  0EFA               	movlw	-6
  6029  012380  50E3               	movf	plusw1,w,c
  6030  012382  6E0B               	movwf	(btemp+10)^0,c
  6031  012384  6A0C               	clrf	(btemp+11)^0,c
  6032                           
  6033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6034                           ; Switch size 1, requested type "simple"
  6035                           ; Number of cases is 1, Range of values is 0 to 0
  6036                           ; switch strategies available:
  6037                           ; Name         Instructions Cycles
  6038                           ; simple_byte            4     3 (average)
  6039                           ;	Chosen strategy is simple_byte
  6040  012386  500C               	movf	(btemp+11)^0,w,c
  6041  012388  0A00               	xorlw	0	; case 0
  6042  01238A  A4D8               	btfss	status,2,c
  6043  01238C  D00D               	goto	l1374
  6044                           
  6045                           ; BSR set to: 1
  6046                           ; Switch size 1, requested type "simple"
  6047                           ; Number of cases is 4, Range of values is 0 to 9
  6048                           ; switch strategies available:
  6049                           ; Name         Instructions Cycles
  6050                           ; simple_byte           13     7 (average)
  6051                           ;	Chosen strategy is simple_byte
  6052  01238E  500B               	movf	(btemp+10)^0,w,c
  6053  012390  0A00               	xorlw	0	; case 0
  6054  012392  B4D8               	btfsc	status,2,c
  6055  012394  D7BD               	goto	l13620
  6056  012396  0A03               	xorlw	3	; case 3
  6057  012398  B4D8               	btfsc	status,2,c
  6058  01239A  D7C3               	goto	l13626
  6059  01239C  0A05               	xorlw	5	; case 6
  6060  01239E  B4D8               	btfsc	status,2,c
  6061  0123A0  D7CC               	goto	l13628
  6062  0123A2  0A0F               	xorlw	15	; case 9
  6063  0123A4  B4D8               	btfsc	status,2,c
  6064  0123A6  D7D8               	goto	l13634
  6065  0123A8                     l1374:
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;main.c: 450:   if (V.set_sequ) {
  6069  0123A8  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6070  0123AA  EF83  F08C         	goto	l13512
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6074  0123AE  0E07               	movlw	7
  6075  0123B0  6EE6               	movwf	postinc1,c
  6076  0123B2  ECEB  F0DF         	call	_TimerDone	;wreg free
  6077  0123B6  5001               	movf	btemp^0,w,c
  6078  0123B8  B4D8               	btfsc	status,2,c
  6079  0123BA  D00C               	goto	l13648
  6080                           
  6081                           ;main.c: 452:     V.set_sequ = 0;
  6082  0123BC  0101               	movlb	1	; () banked
  6083  0123BE  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;main.c: 453:     set_vterm(0);
  6087  0123C0  0E00               	movlw	0
  6088  0123C2  6EE6               	movwf	postinc1,c
  6089  0123C4  ECE1  F0E1         	call	_set_vterm	;wreg free
  6090                           
  6091                           ;main.c: 454:     update_lcd(0);
  6092  0123C8  0E00               	movlw	0
  6093  0123CA  6EE6               	movwf	postinc1,c
  6094  0123CC  EC1A  F0CF         	call	_update_lcd	;wreg free
  6095                           
  6096                           ;main.c: 455:    } else {
  6097  0123D0  EF83  F08C         	goto	l13512
  6098  0123D4                     l13648:
  6099                           
  6100                           ;main.c: 456:     set_vterm(2);
  6101  0123D4  0E02               	movlw	2
  6102  0123D6  6EE6               	movwf	postinc1,c
  6103  0123D8  ECE1  F0E1         	call	_set_vterm	;wreg free
  6104                           
  6105                           ;main.c: 457:     update_lcd(2);
  6106  0123DC  0E02               	movlw	2
  6107  0123DE  6EE6               	movwf	postinc1,c
  6108  0123E0  EC1A  F0CF         	call	_update_lcd	;wreg free
  6109  0123E4  EF83  F08C         	goto	l13512
  6110  0123E8                     __end_of_main:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _static_soc *****************
  6114 ;; Defined at:
  6115 ;;		line 117 in file "mbmc.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1  [STACK] void 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr2l, fsr2h
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:   15
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text1
  6144  01B5A0                     __ptext1:
  6145                           	opt callstack 0
  6146  01B5A0                     _static_soc:
  6147                           	opt callstack 15
  6148                           
  6149                           ;mbmc.c: 119:  C.runtime = 120;
  6150                           
  6151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6152                           ;incstack = 0
  6153  01B5A0  0E78               	movlw	120
  6154  01B5A2  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6155  01B5A8  0E00               	movlw	0
  6156  01B5AA  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6157                           
  6158                           ;mbmc.c: 120:  C.soc = 100;
  6159  01B5B0  0E64               	movlw	100
  6160  01B5B2  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6161  01B5B8  0E00               	movlw	0
  6162  01B5BA  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6163                           
  6164                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6165  01B5C0  EE21  F38B         	lfsr	2,_C+140	;volatile
  6166  01B5C4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6167  01B5CA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6168  01B5D0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6169  01B5D6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6170                           
  6171                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6172  01B5DC  EE21  F38F         	lfsr	2,_C+144	;volatile
  6173  01B5E0  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6174  01B5E6  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6175  01B5EC  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6176  01B5F2  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6177                           
  6178                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6179  01B5F8  0012               	return		;funcret
  6180  01B5FA                     __end_of_static_soc:
  6181                           	opt callstack 0
  6182                           
  6183 ;; *************** function _start_switch_handler *****************
  6184 ;; Defined at:
  6185 ;;		line 122 in file "dio.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1  [STACK] void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6194 ;; Tracked objects:
  6195 ;;		On entry : 1/0
  6196 ;;		On exit  : 3F/39
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:   16
  6206 ;; This function calls:
  6207 ;;		_INT1_SetInterruptHandler
  6208 ;; This function is called by:
  6209 ;;		_main
  6210 ;; This function uses a reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text2
  6214  01C346                     __ptext2:
  6215                           	opt callstack 0
  6216  01C346                     _start_switch_handler:
  6217                           	opt callstack 14
  6218                           
  6219                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6220                           
  6221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6222                           ;incstack = 0
  6223  01C346  0139               	movlb	57	; () banked
  6224  01C348  9195               	bcf	149,0,b	;volatile
  6225                           
  6226                           ; BSR set to: 57
  6227                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6228  01C34A  0E68               	movlw	low _switch_handler
  6229  01C34C  6EE6               	movwf	postinc1,c
  6230  01C34E  0E97               	movlw	high _switch_handler
  6231  01C350  6EE6               	movwf	postinc1,c
  6232  01C352  0E01               	movlw	low (_switch_handler shr (0+16))
  6233  01C354  6EE6               	movwf	postinc1,c
  6234  01C356  EC77  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6235                           
  6236                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6237  01C35A  0E02               	movlw	2
  6238  01C35C  0102               	movlb	2	; () banked
  6239  01C35E  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6240                           
  6241                           ; BSR set to: 2
  6242                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6243  01C360  0139               	movlb	57	; () banked
  6244  01C362  8195               	bsf	149,0,b	;volatile
  6245                           
  6246                           ; BSR set to: 57
  6247                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6248  01C364  0012               	return		;funcret
  6249  01C366                     __end_of_start_switch_handler:
  6250                           	opt callstack 0
  6251                           
  6252 ;; *************** function _srand *****************
  6253 ;; Defined at:
  6254 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  s               2  [STACK] unsigned int 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1  [STACK] void 
  6261 ;; Registers used:
  6262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 3F/1
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6272 ;;Total ram usage:        0 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:   15
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text3
  6283  01BD40                     __ptext3:
  6284                           	opt callstack 0
  6285  01BD40                     _srand:
  6286                           	opt callstack 15
  6287                           
  6288                           ;stkvar	_s @ sp[(0)+-2]
  6289                           
  6290                           ; BSR set to: 57
  6291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6292                           ;incstack = 0
  6293  01BD40  0EFE               	movlw	-2
  6294  01BD42  50E3               	movf	plusw1,w,c
  6295  01BD44  0FFF               	addlw	255
  6296  01BD46  6E0B               	movwf	(btemp+10)^0,c
  6297  01BD48  0EFF               	movlw	-1
  6298  01BD4A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6299  01BD50  0EFF               	movlw	255
  6300  01BD52  220C               	addwfc	(btemp+11)^0,f,c
  6301  01BD54  0060  F02C  F1F3   	movff	btemp+10,_seed
  6302  01BD5A  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6303  01BD60  0101               	movlb	1	; () banked
  6304  01BD62  6BF5               	clrf	(_seed+2)& (0+255),b
  6305  01BD64  6BF6               	clrf	(_seed+3)& (0+255),b
  6306  01BD66  6BF7               	clrf	(_seed+4)& (0+255),b
  6307  01BD68  6BF8               	clrf	(_seed+5)& (0+255),b
  6308  01BD6A  6BF9               	clrf	(_seed+6)& (0+255),b
  6309  01BD6C  6BFA               	clrf	(_seed+7)& (0+255),b
  6310                           
  6311                           ; BSR set to: 1
  6312                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6313  01BD6E  52E5               	movf	postdec1,f,c
  6314  01BD70  52E5               	movf	postdec1,f,c
  6315  01BD72  0012               	return		;funcret
  6316  01BD74                     __end_of_srand:
  6317                           	opt callstack 0
  6318                           
  6319 ;; *************** function _spinners *****************
  6320 ;; Defined at:
  6321 ;;		line 146 in file "mbmc.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  shape           1  [STACK] unsigned char 
  6324 ;;  reset           1  [STACK] const unsigned char 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  c               1  [STACK] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1  [STACK] unsigned char 
  6329 ;; Registers used:
  6330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;Total ram usage:        0 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:   16
  6343 ;; This function calls:
  6344 ;;		_strlen
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text4
  6351  01A04E                     __ptext4:
  6352                           	opt callstack 0
  6353  01A04E                     _spinners:
  6354                           	opt callstack 0
  6355                           
  6356                           ; BSR set to: 1
  6357                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6358  01A04E  52E6               	movf	postinc1,f,c
  6359                           
  6360                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6361                           ;stkvar	_shape @ sp[(-1)+-1]
  6362                           
  6363                           ;incstack = 0
  6364  01A050  0EFE               	movlw	-2
  6365  01A052  006F FF8C  F001    	movff	plusw1,btemp
  6366  01A058  0E05               	movlw	5
  6367  01A05A  6401               	cpfsgt	btemp^0,c
  6368  01A05C  D002               	goto	l1965
  6369                           
  6370                           ;mbmc.c: 152:   shape = 0;
  6371                           ;stkvar	_shape @ sp[(-1)+-1]
  6372  01A05E  0EFE               	movlw	-2
  6373  01A060  6AE3               	clrf	plusw1,c
  6374  01A062                     l1965:
  6375                           
  6376                           ;mbmc.c: 153:  if (reset)
  6377                           ;stkvar	_reset @ sp[(-1)+-2]
  6378  01A062  0EFD               	movlw	-3
  6379  01A064  50E3               	movf	plusw1,w,c
  6380  01A066  B4D8               	btfsc	status,2,c
  6381  01A068  D00C               	goto	l11120
  6382                           
  6383                           ;mbmc.c: 154:   s[shape] = 0;
  6384                           ;stkvar	_shape @ sp[(-1)+-1]
  6385  01A06A  0EFE               	movlw	-2
  6386  01A06C  50E3               	movf	plusw1,w,c
  6387  01A06E  6E0B               	movwf	(btemp+10)^0,c
  6388  01A070  6A0C               	clrf	(btemp+11)^0,c
  6389  01A072  0EE1               	movlw	low spinners@s
  6390  01A074  240B               	addwf	(btemp+10)^0,w,c
  6391  01A076  6ED9               	movwf	fsr2l,c
  6392  01A078  0E01               	movlw	high spinners@s
  6393  01A07A  200C               	addwfc	(btemp+11)^0,w,c
  6394  01A07C  6EDA               	movwf	fsr2h,c
  6395  01A07E  0E00               	movlw	0
  6396  01A080  6EDF               	movwf	indf2,c
  6397  01A082                     l11120:
  6398                           
  6399                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6400                           ;stkvar	_shape @ sp[(-1)+-1]
  6401  01A082  0EFE               	movlw	-2
  6402  01A084  50E3               	movf	plusw1,w,c
  6403  01A086  0D14               	mullw	20
  6404  01A088  0E45               	movlw	low _spin
  6405  01A08A  6E0B               	movwf	(btemp+10)^0,c
  6406  01A08C  0EFB               	movlw	high _spin
  6407  01A08E  6E0C               	movwf	(btemp+11)^0,c
  6408  01A090  50F3               	movf	243,w,c
  6409  01A092  260B               	addwf	(btemp+10)^0,f,c
  6410  01A094  50F4               	movf	244,w,c
  6411  01A096  220C               	addwfc	(btemp+11)^0,f,c
  6412                           
  6413                           ;stkvar	_shape @ sp[(-1)+-1]
  6414  01A098  0EFE               	movlw	-2
  6415  01A09A  50E3               	movf	plusw1,w,c
  6416  01A09C  6E09               	movwf	(btemp+8)^0,c
  6417  01A09E  6A0A               	clrf	(btemp+9)^0,c
  6418  01A0A0  0EE1               	movlw	low spinners@s
  6419  01A0A2  2409               	addwf	(btemp+8)^0,w,c
  6420  01A0A4  6ED9               	movwf	fsr2l,c
  6421  01A0A6  0E01               	movlw	high spinners@s
  6422  01A0A8  200A               	addwfc	(btemp+9)^0,w,c
  6423  01A0AA  6EDA               	movwf	fsr2h,c
  6424  01A0AC  50DF               	movf	indf2,w,c
  6425  01A0AE  260B               	addwf	(btemp+10)^0,f,c
  6426  01A0B0  0E00               	movlw	0
  6427  01A0B2  220C               	addwfc	(btemp+11)^0,f,c
  6428  01A0B4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6429  01A0BA  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6430  01A0C0                     	if	0	;tblptru may be non-zero
  6431  01A0C0                     	endif
  6432  01A0C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6433  01A0C0  0E00               	movlw	low (__mediumconst shr (0+16))
  6434  01A0C2  6EF8               	movwf	tblptru,c
  6435  01A0C4                     	endif
  6436                           
  6437                           ;stkvar	_c @ sp[(-1)+0]
  6438  01A0C4  0008               	tblrd		*
  6439  01A0C6  0EFF               	movlw	-1
  6440  01A0C8  006F FFD7 FFE3     	movff	tablat,plusw1
  6441                           
  6442                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6443                           ;stkvar	_shape @ sp[(-1)+-1]
  6444  01A0CE  0EFE               	movlw	-2
  6445  01A0D0  50E3               	movf	plusw1,w,c
  6446  01A0D2  0D14               	mullw	20
  6447  01A0D4  0E45               	movlw	low _spin
  6448  01A0D6  6E0B               	movwf	(btemp+10)^0,c
  6449  01A0D8  0EFB               	movlw	high _spin
  6450  01A0DA  6E0C               	movwf	(btemp+11)^0,c
  6451  01A0DC  50F3               	movf	243,w,c
  6452  01A0DE  260B               	addwf	(btemp+10)^0,f,c
  6453  01A0E0  50F4               	movf	244,w,c
  6454  01A0E2  220C               	addwfc	(btemp+11)^0,f,c
  6455  01A0E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6456  01A0EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  6457  01A0F0  EC52  F0D6         	call	_strlen	;wreg free
  6458                           
  6459                           ;stkvar	_shape @ sp[(-1)+-1]
  6460  01A0F4  0EFE               	movlw	-2
  6461  01A0F6  50E3               	movf	plusw1,w,c
  6462  01A0F8  6E0B               	movwf	(btemp+10)^0,c
  6463  01A0FA  6A0C               	clrf	(btemp+11)^0,c
  6464  01A0FC  0EE1               	movlw	low spinners@s
  6465  01A0FE  240B               	addwf	(btemp+10)^0,w,c
  6466  01A100  6ED9               	movwf	fsr2l,c
  6467  01A102  0E01               	movlw	high spinners@s
  6468  01A104  200C               	addwfc	(btemp+11)^0,w,c
  6469  01A106  6EDA               	movwf	fsr2h,c
  6470  01A108  2ADF               	incf	indf2,f,c
  6471  01A10A  50DF               	movf	indf2,w,c
  6472  01A10C  6E0B               	movwf	(btemp+10)^0,c
  6473  01A10E  6A0C               	clrf	(btemp+11)^0,c
  6474  01A110  5001               	movf	btemp^0,w,c
  6475  01A112  5C0B               	subwf	(btemp+10)^0,w,c
  6476  01A114  5002               	movf	(btemp+1)^0,w,c
  6477  01A116  580C               	subwfb	(btemp+11)^0,w,c
  6478  01A118  A0D8               	btfss	status,0,c
  6479  01A11A  D00C               	goto	l11126
  6480                           
  6481                           ;mbmc.c: 157:   s[shape] = 0;
  6482                           ;stkvar	_shape @ sp[(-1)+-1]
  6483  01A11C  0EFE               	movlw	-2
  6484  01A11E  50E3               	movf	plusw1,w,c
  6485  01A120  6E0B               	movwf	(btemp+10)^0,c
  6486  01A122  6A0C               	clrf	(btemp+11)^0,c
  6487  01A124  0EE1               	movlw	low spinners@s
  6488  01A126  240B               	addwf	(btemp+10)^0,w,c
  6489  01A128  6ED9               	movwf	fsr2l,c
  6490  01A12A  0E01               	movlw	high spinners@s
  6491  01A12C  200C               	addwfc	(btemp+11)^0,w,c
  6492  01A12E  6EDA               	movwf	fsr2h,c
  6493  01A130  0E00               	movlw	0
  6494  01A132  6EDF               	movwf	indf2,c
  6495  01A134                     l11126:
  6496                           
  6497                           ;mbmc.c: 158:  return c;
  6498                           ;stkvar	_c @ sp[(-1)+0]
  6499  01A134  0EFF               	movlw	-1
  6500  01A136  006F FF8C  F001    	movff	plusw1,btemp
  6501                           
  6502                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6503  01A13C  52E5               	movf	postdec1,f,c
  6504  01A13E  52E5               	movf	postdec1,f,c
  6505  01A140  52E5               	movf	postdec1,f,c
  6506  01A142  0012               	return		;funcret
  6507  01A144                     __end_of_spinners:
  6508                           	opt callstack 0
  6509                           
  6510 ;; *************** function _set_dac_b *****************
  6511 ;; Defined at:
  6512 ;;		line 295 in file "daq.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  voltage         4  [STACK] const float 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  2  [STACK] unsigned short 
  6519 ;; Registers used:
  6520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:   17
  6533 ;; This function calls:
  6534 ;;		_convert_dac_raw
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text5
  6541  01BD74                     __ptext5:
  6542                           	opt callstack 0
  6543  01BD74                     _set_dac_b:
  6544                           	opt callstack 13
  6545                           
  6546                           ;daq.c: 295: uint16_t set_dac_b(const float voltage);daq.c: 296: {;daq.c: 297:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6547                           ;stkvar	_voltage @ sp[(0)+-4]
  6548                           
  6549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6550                           ;incstack = 0
  6551  01BD74  0EFC               	movlw	-4
  6552  01BD76  006F FF8F FFE6     	movff	plusw1,postinc1
  6553  01BD7C  006F FF8F FFE6     	movff	plusw1,postinc1
  6554  01BD82  006F FF8F FFE6     	movff	plusw1,postinc1
  6555  01BD88  006F FF8F FFE6     	movff	plusw1,postinc1
  6556  01BD8E  EC78  F0CD         	call	_convert_dac_raw	;wreg free
  6557  01BD92  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6558  01BD98  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6559                           
  6560                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6561                           
  6562                           ;daq.c: 298:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6563  01BD9E  52E5               	movf	postdec1,f,c
  6564  01BDA0  52E5               	movf	postdec1,f,c
  6565  01BDA2  52E5               	movf	postdec1,f,c
  6566  01BDA4  52E5               	movf	postdec1,f,c
  6567  01BDA6  0012               	return		;funcret
  6568  01BDA8                     __end_of_set_dac_b:
  6569                           	opt callstack 0
  6570                           
  6571 ;; *************** function _set_dac_a *****************
  6572 ;; Defined at:
  6573 ;;		line 286 in file "daq.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  voltage         4  [STACK] const float 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  2  [STACK] unsigned short 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6582 ;; Tracked objects:
  6583 ;;		On entry : 3F/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:   17
  6594 ;; This function calls:
  6595 ;;		_convert_dac_raw
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text6
  6602  01BDA8                     __ptext6:
  6603                           	opt callstack 0
  6604  01BDA8                     _set_dac_a:
  6605                           	opt callstack 13
  6606                           
  6607                           ;daq.c: 286: uint16_t set_dac_a(const float voltage);daq.c: 287: {;daq.c: 288:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6608                           ;stkvar	_voltage @ sp[(0)+-4]
  6609                           
  6610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6611                           ;incstack = 0
  6612  01BDA8  0EFC               	movlw	-4
  6613  01BDAA  006F FF8F FFE6     	movff	plusw1,postinc1
  6614  01BDB0  006F FF8F FFE6     	movff	plusw1,postinc1
  6615  01BDB6  006F FF8F FFE6     	movff	plusw1,postinc1
  6616  01BDBC  006F FF8F FFE6     	movff	plusw1,postinc1
  6617  01BDC2  EC78  F0CD         	call	_convert_dac_raw	;wreg free
  6618  01BDC6  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6619  01BDCC  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6620                           
  6621                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6622                           
  6623                           ;daq.c: 289:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6624  01BDD2  52E5               	movf	postdec1,f,c
  6625  01BDD4  52E5               	movf	postdec1,f,c
  6626  01BDD6  52E5               	movf	postdec1,f,c
  6627  01BDD8  52E5               	movf	postdec1,f,c
  6628  01BDDA  0012               	return		;funcret
  6629  01BDDC                     __end_of_set_dac_a:
  6630                           	opt callstack 0
  6631                           
  6632 ;; *************** function _convert_dac_raw *****************
  6633 ;; Defined at:
  6634 ;;		line 268 in file "daq.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  voltage         4  [STACK] float 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  2  [STACK] unsigned short 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;Total ram usage:        0 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:   16
  6655 ;; This function calls:
  6656 ;;		___fldiv
  6657 ;;		___flge
  6658 ;;		___fltol
  6659 ;; This function is called by:
  6660 ;;		_set_dac_a
  6661 ;;		_set_dac_b
  6662 ;; This function uses a reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text7
  6666  019AF0                     __ptext7:
  6667                           	opt callstack 0
  6668  019AF0                     _convert_dac_raw:
  6669                           	opt callstack 13
  6670                           
  6671                           ;daq.c: 268: static uint16_t convert_dac_raw(float voltage);daq.c: 269: {;daq.c: 273:  i
      +                          f (voltage < 0.001)
  6672                           
  6673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6674                           ;incstack = 0
  6675  019AF0  0E6F               	movlw	111
  6676  019AF2  6EE6               	movwf	postinc1,c
  6677  019AF4  0E12               	movlw	18
  6678  019AF6  6EE6               	movwf	postinc1,c
  6679  019AF8  0E83               	movlw	131
  6680  019AFA  6EE6               	movwf	postinc1,c
  6681  019AFC  0E3A               	movlw	58
  6682  019AFE  6EE6               	movwf	postinc1,c
  6683                           
  6684                           ;stkvar	_voltage @ sp[(-4)+-4]
  6685  019B00  0EF8               	movlw	-8
  6686  019B02  006F FF8F FFE6     	movff	plusw1,postinc1
  6687  019B08  006F FF8F FFE6     	movff	plusw1,postinc1
  6688  019B0E  006F FF8F FFE6     	movff	plusw1,postinc1
  6689  019B14  006F FF8F FFE6     	movff	plusw1,postinc1
  6690  019B1A  EC0A  F0C9         	call	___flge	;wreg free
  6691  019B1E  B001               	btfsc	btemp& (0+255),0,c
  6692  019B20  D018               	goto	l10732
  6693                           
  6694                           ;daq.c: 274:   voltage = 0.001;
  6695  019B22  0E6F               	movlw	111
  6696  019B24  6E09               	movwf	(btemp+8)^0,c
  6697  019B26  0E12               	movlw	18
  6698  019B28  6E0A               	movwf	(btemp+9)^0,c
  6699  019B2A  0E83               	movlw	131
  6700  019B2C  6E0B               	movwf	(btemp+10)^0,c
  6701  019B2E  0E3A               	movlw	58
  6702  019B30  6E0C               	movwf	(btemp+11)^0,c
  6703                           
  6704                           ;stkvar	_voltage @ sp[(0)+-4]
  6705  019B32  0EFC               	movlw	-4
  6706  019B34  0060  F027  FFE3   	movff	btemp+8,plusw1
  6707  019B3A  0EFD               	movlw	-3
  6708  019B3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6709  019B42  0EFE               	movlw	-2
  6710  019B44  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6711  019B4A  0EFF               	movlw	-1
  6712  019B4C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6713  019B52                     l10732:
  6714                           
  6715                           ;daq.c: 275:  if (voltage > 10.0)
  6716                           ;stkvar	_voltage @ sp[(0)+-4]
  6717  019B52  0EFC               	movlw	-4
  6718  019B54  006F FF8F FFE6     	movff	plusw1,postinc1
  6719  019B5A  006F FF8F FFE6     	movff	plusw1,postinc1
  6720  019B60  006F FF8F FFE6     	movff	plusw1,postinc1
  6721  019B66  006F FF8F FFE6     	movff	plusw1,postinc1
  6722  019B6C  0E00               	movlw	0
  6723  019B6E  6EE6               	movwf	postinc1,c
  6724  019B70  0E00               	movlw	0
  6725  019B72  6EE6               	movwf	postinc1,c
  6726  019B74  0E20               	movlw	32
  6727  019B76  6EE6               	movwf	postinc1,c
  6728  019B78  0E41               	movlw	65
  6729  019B7A  6EE6               	movwf	postinc1,c
  6730  019B7C  EC0A  F0C9         	call	___flge	;wreg free
  6731  019B80  B001               	btfsc	btemp& (0+255),0,c
  6732  019B82  D018               	goto	l10736
  6733                           
  6734                           ;daq.c: 276:   voltage = 10.0;
  6735  019B84  0E00               	movlw	0
  6736  019B86  6E09               	movwf	(btemp+8)^0,c
  6737  019B88  0E00               	movlw	0
  6738  019B8A  6E0A               	movwf	(btemp+9)^0,c
  6739  019B8C  0E20               	movlw	32
  6740  019B8E  6E0B               	movwf	(btemp+10)^0,c
  6741  019B90  0E41               	movlw	65
  6742  019B92  6E0C               	movwf	(btemp+11)^0,c
  6743                           
  6744                           ;stkvar	_voltage @ sp[(0)+-4]
  6745  019B94  0EFC               	movlw	-4
  6746  019B96  0060  F027  FFE3   	movff	btemp+8,plusw1
  6747  019B9C  0EFD               	movlw	-3
  6748  019B9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6749  019BA4  0EFE               	movlw	-2
  6750  019BA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6751  019BAC  0EFF               	movlw	-1
  6752  019BAE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6753  019BB4                     l10736:
  6754                           
  6755                           ;daq.c: 280:  return(uint16_t) (voltage / 0.002442);
  6756  019BB4  0EF6               	movlw	246
  6757  019BB6  6EE6               	movwf	postinc1,c
  6758  019BB8  0E09               	movlw	9
  6759  019BBA  6EE6               	movwf	postinc1,c
  6760  019BBC  0E20               	movlw	32
  6761  019BBE  6EE6               	movwf	postinc1,c
  6762  019BC0  0E3B               	movlw	59
  6763  019BC2  6EE6               	movwf	postinc1,c
  6764                           
  6765                           ;stkvar	_voltage @ sp[(-4)+-4]
  6766  019BC4  0EF8               	movlw	-8
  6767  019BC6  006F FF8F FFE6     	movff	plusw1,postinc1
  6768  019BCC  006F FF8F FFE6     	movff	plusw1,postinc1
  6769  019BD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6770  019BD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6771  019BDE  ECD8  F0A6         	call	___fldiv	;wreg free
  6772  019BE2  0060  F007  FFE6   	movff	btemp,postinc1
  6773  019BE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6774  019BEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6775  019BF4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6776  019BFA  EC51  F0C8         	call	___fltol	;wreg free
  6777                           
  6778                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6779  019BFE  52E5               	movf	postdec1,f,c
  6780  019C00  52E5               	movf	postdec1,f,c
  6781  019C02  52E5               	movf	postdec1,f,c
  6782  019C04  52E5               	movf	postdec1,f,c
  6783  019C06  0012               	return		;funcret
  6784  019C08                     __end_of_convert_dac_raw:
  6785                           	opt callstack 0
  6786                           
  6787 ;; *************** function _set_dac *****************
  6788 ;; Defined at:
  6789 ;;		line 244 in file "daq.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1  [STACK] void 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:   16
  6810 ;; This function calls:
  6811 ;;		_SPI1_Exchange8bit
  6812 ;;		_dac_spi_control
  6813 ;; This function is called by:
  6814 ;;		_main
  6815 ;; This function uses a reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text8
  6819  01A89C                     __ptext8:
  6820                           	opt callstack 0
  6821  01A89C                     _set_dac:
  6822                           	opt callstack 14
  6823                           
  6824                           ;daq.c: 246:  while (!SPI1STATUSbits.TXBE);
  6825                           
  6826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6827                           ;incstack = 0
  6828  01A89C  013D               	movlb	61	; () banked
  6829  01A89E  AB17               	btfss	23,5,b	;volatile
  6830  01A8A0  D7FD               	goto	_set_dac
  6831                           
  6832                           ; BSR set to: 61
  6833                           
  6834                           ;daq.c: 247:  do { LATCbits.LATC2 = 1; } while(0);
  6835  01A8A2  84BC               	bsf	188,2,c	;volatile
  6836                           
  6837                           ; BSR set to: 61
  6838                           
  6839                           ;daq.c: 248:  do { LATCbits.LATC0 = 1; } while(0);
  6840  01A8A4  80BC               	bsf	188,0,c	;volatile
  6841                           
  6842                           ; BSR set to: 61
  6843                           ;daq.c: 249:  dac_spi_control(1);
  6844  01A8A6  0E01               	movlw	1
  6845  01A8A8  6EE6               	movwf	postinc1,c
  6846  01A8AA  EC88  F0D8         	call	_dac_spi_control	;wreg free
  6847                           
  6848                           ;daq.c: 250:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6849  01A8AE  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6850                           
  6851                           ;daq.c: 251:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6852  01A8B2  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6853  01A8B6  006F FF78  F00B    	movff	postinc2,btemp+10
  6854  01A8BC  006F FF74  F00C    	movff	postdec2,btemp+11
  6855  01A8C2  0060  F030  F00B   	movff	btemp+11,btemp+10
  6856  01A8C8  6A0C               	clrf	(btemp+11)^0,c
  6857  01A8CA  0E0F               	movlw	15
  6858  01A8CC  160B               	andwf	(btemp+10)^0,f,c
  6859  01A8CE  0100               	movlb	0	; () banked
  6860  01A8D0  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6861  01A8D2  180B               	xorwf	(btemp+10)^0,w,c
  6862  01A8D4  0BF0               	andlw	-16
  6863  01A8D6  180B               	xorwf	(btemp+10)^0,w,c
  6864  01A8D8  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;daq.c: 252:  R.max5322_cmd.map.cont = 0b0100;
  6868  01A8DA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6869  01A8DC  0B0F               	andlw	-241
  6870  01A8DE  0940               	iorlw	64
  6871  01A8E0  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6872                           
  6873                           ; BSR set to: 0
  6874  01A8E2  90BF               	bcf	191,0,c	;volatile
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;daq.c: 254:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6878  01A8E4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6879  01A8E6  6EE6               	movwf	postinc1,c
  6880  01A8E8  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6881                           
  6882                           ; BSR set to: 57
  6883                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6884  01A8EC  0100               	movlb	0	; () banked
  6885  01A8EE  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6886  01A8F0  6EE6               	movwf	postinc1,c
  6887  01A8F2  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6888                           
  6889                           ; BSR set to: 57
  6890  01A8F6  80BF               	bsf	191,0,c	;volatile
  6891                           
  6892                           ; BSR set to: 57
  6893                           ;daq.c: 257:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6894  01A8F8  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6895                           
  6896                           ; BSR set to: 57
  6897                           ;daq.c: 258:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  6898  01A8FC  EE20  F0D1         	lfsr	2,_R+34	;volatile
  6899  01A900  006F FF78  F00B    	movff	postinc2,btemp+10
  6900  01A906  006F FF74  F00C    	movff	postdec2,btemp+11
  6901  01A90C  0060  F030  F00B   	movff	btemp+11,btemp+10
  6902  01A912  6A0C               	clrf	(btemp+11)^0,c
  6903  01A914  0E0F               	movlw	15
  6904  01A916  160B               	andwf	(btemp+10)^0,f,c
  6905  01A918  0100               	movlb	0	; () banked
  6906  01A91A  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6907  01A91C  180B               	xorwf	(btemp+10)^0,w,c
  6908  01A91E  0BF0               	andlw	-16
  6909  01A920  180B               	xorwf	(btemp+10)^0,w,c
  6910  01A922  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;daq.c: 259:  R.max5322_cmd.map.cont = 0b0101;
  6914  01A924  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6915  01A926  0B0F               	andlw	-241
  6916  01A928  0950               	iorlw	80
  6917  01A92A  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6918                           
  6919                           ; BSR set to: 0
  6920  01A92C  90BF               	bcf	191,0,c	;volatile
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6924  01A92E  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6925  01A930  6EE6               	movwf	postinc1,c
  6926  01A932  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6927                           
  6928                           ; BSR set to: 57
  6929                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6930  01A936  0100               	movlb	0	; () banked
  6931  01A938  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6932  01A93A  6EE6               	movwf	postinc1,c
  6933  01A93C  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6934  01A940                     l1872:
  6935  01A940  013D               	movlb	61	; () banked
  6936  01A942  AB17               	btfss	23,5,b	;volatile
  6937  01A944  D7FD               	goto	l1872
  6938                           
  6939                           ; BSR set to: 61
  6940                           
  6941                           ;daq.c: 264:  do { LATFbits.LATF0 = 1; } while(0);
  6942  01A946  80BF               	bsf	191,0,c	;volatile
  6943                           
  6944                           ; BSR set to: 61
  6945                           ;daq.c: 265:  dac_spi_control(0);
  6946  01A948  0E00               	movlw	0
  6947  01A94A  6EE6               	movwf	postinc1,c
  6948  01A94C  EC88  F0D8         	call	_dac_spi_control	;wreg free
  6949                           
  6950                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6951  01A950  0012               	return		;funcret
  6952  01A952                     __end_of_set_dac:
  6953                           	opt callstack 0
  6954                           
  6955 ;; *************** function _dac_spi_control *****************
  6956 ;; Defined at:
  6957 ;;		line 196 in file "daq.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  set             1  [STACK] _Bool 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1  [STACK] void 
  6964 ;; Registers used:
  6965 ;;		wreg, fsr1l, fsr1h, status,2
  6966 ;; Tracked objects:
  6967 ;;		On entry : 3F/3D
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:   15
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_set_dac
  6982 ;; This function uses a reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text9
  6986  01B110                     __ptext9:
  6987                           	opt callstack 0
  6988  01B110                     _dac_spi_control:
  6989                           	opt callstack 14
  6990                           
  6991                           ;daq.c: 196: void dac_spi_control(_Bool set);daq.c: 197: {;daq.c: 198:  static _Bool ini
      +                          t = 0;;daq.c: 199:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 201:  if (set) {
  6992                           ;stkvar	_set @ sp[(0)+-1]
  6993                           
  6994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6995                           ;incstack = 0
  6996  01B110  0EFF               	movlw	-1
  6997  01B112  50E3               	movf	plusw1,w,c
  6998  01B114  B4D8               	btfsc	status,2,c
  6999  01B116  D022               	goto	l10724
  7000                           
  7001                           ;daq.c: 202:   SPI1CON0bits.EN = 0;
  7002  01B118  013D               	movlb	61	; () banked
  7003  01B11A  9F14               	bcf	20,7,b	;volatile
  7004                           
  7005                           ; BSR set to: 61
  7006                           ;daq.c: 203:   if (!init) {
  7007  01B11C  5043               	movf	dac_spi_control@init^0,w,c
  7008  01B11E  A4D8               	btfss	status,2,c
  7009  01B120  D011               	goto	l10712
  7010                           
  7011                           ; BSR set to: 61
  7012                           ;daq.c: 204:    init = 1;
  7013  01B122  0E01               	movlw	1
  7014  01B124  6E43               	movwf	dac_spi_control@init^0,c
  7015                           
  7016                           ; BSR set to: 61
  7017                           ;daq.c: 205:    S0 = SPI1CON0;
  7018  01B126  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7019                           
  7020                           ; BSR set to: 61
  7021                           ;daq.c: 206:    S1 = SPI1CON1;
  7022  01B12C  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7023                           
  7024                           ; BSR set to: 61
  7025                           ;daq.c: 207:    S2 = SPI1CON2;
  7026  01B132  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7027                           
  7028                           ; BSR set to: 61
  7029                           ;daq.c: 208:    SC = SPI1CLK;
  7030  01B138  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7031                           
  7032                           ; BSR set to: 61
  7033                           ;daq.c: 209:    SB = SPI1BAUD;
  7034  01B13E  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7035  01B144                     l10712:
  7036                           
  7037                           ; BSR set to: 61
  7038                           ;daq.c: 215:   SPI1CON1 = 0x00;
  7039  01B144  6B15               	clrf	21,b	;volatile
  7040                           
  7041                           ; BSR set to: 61
  7042                           ;daq.c: 216:   SPI1CON1bits.CKE=1;
  7043  01B146  8D15               	bsf	21,6,b	;volatile
  7044                           
  7045                           ; BSR set to: 61
  7046                           ;daq.c: 217:   SPI1CON1bits.CKP=0;
  7047  01B148  9B15               	bcf	21,5,b	;volatile
  7048                           
  7049                           ; BSR set to: 61
  7050                           ;daq.c: 218:   SPI1CON1bits.SMP=0;
  7051  01B14A  9F15               	bcf	21,7,b	;volatile
  7052                           
  7053                           ;daq.c: 220:   SPI1CON2 = 0x03;
  7054  01B14C  0E03               	movlw	3
  7055  01B14E  6F16               	movwf	22,b	;volatile
  7056                           
  7057                           ;daq.c: 222:   SPI1BAUD = 0x0f;
  7058  01B150  0E0F               	movlw	15
  7059  01B152  6F19               	movwf	25,b	;volatile
  7060                           
  7061                           ; BSR set to: 61
  7062                           ;daq.c: 224:   SPI1CLK = 0x00;
  7063  01B154  6B1C               	clrf	28,b	;volatile
  7064                           
  7065                           ;daq.c: 226:   SPI1CON0 = 0x83;
  7066  01B156  0E83               	movlw	131
  7067  01B158  6F14               	movwf	20,b	;volatile
  7068  01B15A  D014               	goto	L3
  7069  01B15C                     l10724:
  7070                           
  7071                           ;daq.c: 229:   if (init) {
  7072  01B15C  5043               	movf	dac_spi_control@init^0,w,c
  7073  01B15E  B4D8               	btfsc	status,2,c
  7074  01B160  D012               	goto	l1856
  7075                           
  7076                           ;daq.c: 233:    SPI1CON0bits.EN = 0;
  7077  01B162  013D               	movlb	61	; () banked
  7078  01B164  9F14               	bcf	20,7,b	;volatile
  7079                           
  7080                           ;daq.c: 234:    SPI1CON1 = S1;
  7081  01B166  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7082                           
  7083                           ;daq.c: 235:    SPI1CON2 = S2;
  7084  01B16C  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7085                           
  7086                           ;daq.c: 236:    SPI1CLK = SC;
  7087  01B172  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7088                           
  7089                           ;daq.c: 237:    SPI1BAUD = SB;
  7090  01B178  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7091                           
  7092                           ;daq.c: 238:    SPI1CON0 = S0;
  7093  01B17E  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7094  01B184                     L3:
  7095                           
  7096                           ;daq.c: 239:    SPI1CON0bits.EN = 1;
  7097  01B184  8F14               	bsf	20,7,b	;volatile
  7098  01B186                     l1856:
  7099                           
  7100                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7101  01B186  52E5               	movf	postdec1,f,c
  7102  01B188  0012               	return		;funcret
  7103  01B18A                     __end_of_dac_spi_control:
  7104                           	opt callstack 0
  7105                           
  7106 ;; *************** function _init_port_dma *****************
  7107 ;; Defined at:
  7108 ;;		line 104 in file "eadog.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1  [STACK] void 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/1
  7119 ;;		On exit  : 3F/3B
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:   15
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_main
  7133 ;; This function uses a reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text10
  7137  01BE10                     __ptext10:
  7138                           	opt callstack 0
  7139  01BE10                     _init_port_dma:
  7140                           	opt callstack 15
  7141                           
  7142                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7143                           
  7144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7145                           ;incstack = 0
  7146  01BE10  0E3F               	movlw	-193
  7147  01BE12  013B               	movlb	59	; () banked
  7148  01BE14  17DD               	andwf	221,f,b	;volatile
  7149                           
  7150                           ; BSR set to: 59
  7151                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7152  01BE16  9BDD               	bcf	221,5,b	;volatile
  7153                           
  7154                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7155  01BE18  51DD               	movf	221,w,b	;volatile
  7156  01BE1A  0BF9               	andlw	-7
  7157  01BE1C  0902               	iorlw	2
  7158  01BE1E  6FDD               	movwf	221,b	;volatile
  7159                           
  7160                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7161  01BE20  0EE7               	movlw	-25
  7162  01BE22  17DD               	andwf	221,f,b	;volatile
  7163                           
  7164                           ; BSR set to: 59
  7165                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7166  01BE24  81DD               	bsf	221,0,b	;volatile
  7167                           
  7168                           ; BSR set to: 59
  7169                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7170  01BE26  9DDC               	bcf	220,6,b	;volatile
  7171                           
  7172                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7173  01BE28  0E3D               	movlw	61
  7174  01BE2A  6FD1               	movwf	209,b	;volatile
  7175  01BE2C  0EEA               	movlw	234
  7176  01BE2E  6FD0               	movwf	208,b	;volatile
  7177                           
  7178                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7179  01BE30  0EFF               	movlw	low _port_data
  7180  01BE32  6FD9               	movwf	217,b	;volatile
  7181  01BE34  0E04               	movlw	high _port_data
  7182  01BE36  6FDA               	movwf	218,b	;volatile
  7183  01BE38  0E00               	movlw	low (_port_data shr (0+16))
  7184  01BE3A  6FDB               	movwf	219,b	;volatile
  7185                           
  7186                           ; BSR set to: 59
  7187                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7188  01BE3C  9BDC               	bcf	220,5,b	;volatile
  7189                           
  7190                           ; BSR set to: 59
  7191                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7192  01BE3E  0012               	return		;funcret
  7193  01BE40                     __end_of_init_port_dma:
  7194                           	opt callstack 0
  7195                           
  7196 ;; *************** function _init_display *****************
  7197 ;; Defined at:
  7198 ;;		line 38 in file "eadog.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1  [STACK] void 
  7205 ;; Registers used:
  7206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7207 ;; Tracked objects:
  7208 ;;		On entry : 3F/3B
  7209 ;;		On exit  : 3F/3D
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7216 ;;Total ram usage:        0 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:   17
  7219 ;; This function calls:
  7220 ;;		_ringBufS_init
  7221 ;;		_send_lcd_cmd
  7222 ;;		_send_lcd_cmd_long
  7223 ;;		_send_lcd_data
  7224 ;;		_wdtdelay
  7225 ;; This function is called by:
  7226 ;;		_main
  7227 ;; This function uses a reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text11
  7231  01A144                     __ptext11:
  7232                           	opt callstack 0
  7233  01A144                     _init_display:
  7234                           	opt callstack 13
  7235                           
  7236                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7237                           
  7238                           ; BSR set to: 59
  7239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7240                           ;incstack = 0
  7241  01A144  0E83               	movlw	low _ring_buf1
  7242  01A146  0101               	movlb	1	; () banked
  7243  01A148  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7244  01A14A  0E03               	movlw	high _ring_buf1
  7245  01A14C  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7246                           
  7247                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7248  01A14E  0E40               	movlw	low _ring_buf2
  7249  01A150  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7250  01A152  0E03               	movlw	high _ring_buf2
  7251  01A154  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7255  01A156  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  7256  01A15C  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  7257  01A162  ECD7  F0DF         	call	_ringBufS_init	;wreg free
  7258                           
  7259                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7260  01A166  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  7261  01A16C  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  7262  01A172  ECD7  F0DF         	call	_ringBufS_init	;wreg free
  7263                           
  7264                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7265  01A176  84BE               	bsf	190,2,c	;volatile
  7266                           
  7267                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7268  01A178  013D               	movlb	61	; () banked
  7269  01A17A  9F14               	bcf	20,7,b	;volatile
  7270                           
  7271                           ; BSR set to: 61
  7272                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7273  01A17C  0E20               	movlw	32
  7274  01A17E  6F15               	movwf	21,b	;volatile
  7275                           
  7276                           ; BSR set to: 61
  7277                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7278  01A180  0E03               	movlw	3
  7279  01A182  6F16               	movwf	22,b	;volatile
  7280                           
  7281                           ; BSR set to: 61
  7282                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7283  01A184  0E04               	movlw	4
  7284  01A186  6F19               	movwf	25,b	;volatile
  7285                           
  7286                           ; BSR set to: 61
  7287                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7288  01A188  0E02               	movlw	2
  7289  01A18A  6F1C               	movwf	28,b	;volatile
  7290                           
  7291                           ; BSR set to: 61
  7292                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7293  01A18C  0E83               	movlw	131
  7294  01A18E  6F14               	movwf	20,b	;volatile
  7295                           
  7296                           ; BSR set to: 61
  7297                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7298  01A190  8F14               	bsf	20,7,b	;volatile
  7299                           
  7300                           ; BSR set to: 61
  7301                           ;eadog.c: 60:  wdtdelay(350000);
  7302  01A192  0E30               	movlw	48
  7303  01A194  6EE6               	movwf	postinc1,c
  7304  01A196  0E57               	movlw	87
  7305  01A198  6EE6               	movwf	postinc1,c
  7306  01A19A  0E05               	movlw	5
  7307  01A19C  6EE6               	movwf	postinc1,c
  7308  01A19E  0E00               	movlw	0
  7309  01A1A0  6EE6               	movwf	postinc1,c
  7310  01A1A2  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7314  01A1A6  0E46               	movlw	70
  7315  01A1A8  6EE6               	movwf	postinc1,c
  7316  01A1AA  EC56  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7320  01A1AE  0E41               	movlw	65
  7321  01A1B0  6EE6               	movwf	postinc1,c
  7322  01A1B2  EC76  F0DD         	call	_send_lcd_cmd	;wreg free
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;eadog.c: 63:  wdtdelay(80);
  7326  01A1B6  0E50               	movlw	80
  7327  01A1B8  6EE6               	movwf	postinc1,c
  7328  01A1BA  0E00               	movlw	0
  7329  01A1BC  6EE6               	movwf	postinc1,c
  7330  01A1BE  0E00               	movlw	0
  7331  01A1C0  6EE6               	movwf	postinc1,c
  7332  01A1C2  0E00               	movlw	0
  7333  01A1C4  6EE6               	movwf	postinc1,c
  7334  01A1C6  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7338  01A1CA  0E53               	movlw	83
  7339  01A1CC  6EE6               	movwf	postinc1,c
  7340  01A1CE  EC76  F0DD         	call	_send_lcd_cmd	;wreg free
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;eadog.c: 65:  send_lcd_data(2);
  7344  01A1D2  0E02               	movlw	2
  7345  01A1D4  6EE6               	movwf	postinc1,c
  7346  01A1D6  EC04  F0E1         	call	_send_lcd_data	;wreg free
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;eadog.c: 66:  wdtdelay(80);
  7350  01A1DA  0E50               	movlw	80
  7351  01A1DC  6EE6               	movwf	postinc1,c
  7352  01A1DE  0E00               	movlw	0
  7353  01A1E0  6EE6               	movwf	postinc1,c
  7354  01A1E2  0E00               	movlw	0
  7355  01A1E4  6EE6               	movwf	postinc1,c
  7356  01A1E6  0E00               	movlw	0
  7357  01A1E8  6EE6               	movwf	postinc1,c
  7358  01A1EA  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7362  01A1EE  0E51               	movlw	81
  7363  01A1F0  6EE6               	movwf	postinc1,c
  7364  01A1F2  EC56  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7368  01A1F6  013D               	movlb	61	; () banked
  7369  01A1F8  9F14               	bcf	20,7,b	;volatile
  7370                           
  7371                           ; BSR set to: 61
  7372                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7373  01A1FA  0E02               	movlw	2
  7374  01A1FC  6F16               	movwf	22,b	;volatile
  7375                           
  7376                           ; BSR set to: 61
  7377                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7378  01A1FE  8F14               	bsf	20,7,b	;volatile
  7379                           
  7380                           ; BSR set to: 61
  7381                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7382  01A200  931A               	bcf	26,1,b	;volatile
  7383                           
  7384                           ; BSR set to: 61
  7385                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7386  01A202  0E3F               	movlw	-193
  7387  01A204  013B               	movlb	59	; () banked
  7388  01A206  17FD               	andwf	253,f,b	;volatile
  7389                           
  7390                           ; BSR set to: 59
  7391                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7392  01A208  9BFD               	bcf	253,5,b	;volatile
  7393                           
  7394                           ; BSR set to: 59
  7395                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7396  01A20A  51FD               	movf	253,w,b	;volatile
  7397  01A20C  0BF9               	andlw	-7
  7398  01A20E  0902               	iorlw	2
  7399  01A210  6FFD               	movwf	253,b	;volatile
  7400                           
  7401                           ; BSR set to: 59
  7402                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7403  01A212  0EE7               	movlw	-25
  7404  01A214  17FD               	andwf	253,f,b	;volatile
  7405                           
  7406                           ; BSR set to: 59
  7407                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7408  01A216  81FD               	bsf	253,0,b	;volatile
  7409                           
  7410                           ; BSR set to: 59
  7411                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7412  01A218  0E83               	movlw	low _ring_buf1
  7413  01A21A  6FF9               	movwf	249,b	;volatile
  7414  01A21C  0E03               	movlw	high _ring_buf1
  7415  01A21E  6FFA               	movwf	250,b	;volatile
  7416  01A220  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7417  01A222  6FFB               	movwf	251,b	;volatile
  7418                           
  7419                           ; BSR set to: 59
  7420                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7421  01A224  9BFC               	bcf	252,5,b	;volatile
  7422                           
  7423                           ; BSR set to: 59
  7424                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7425  01A226  013D               	movlb	61	; () banked
  7426  01A228  831A               	bsf	26,1,b	;volatile
  7427                           
  7428                           ; BSR set to: 61
  7429                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7430  01A22A  94BE               	bcf	190,2,c	;volatile
  7431                           
  7432                           ; BSR set to: 61
  7433                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7434  01A22C  0012               	return		;funcret
  7435  01A22E                     __end_of_init_display:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function _send_lcd_data *****************
  7439 ;; Defined at:
  7440 ;;		line 123 in file "eadog.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  data            1  [STACK] const unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1  [STACK] void 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7449 ;; Tracked objects:
  7450 ;;		On entry : 3F/0
  7451 ;;		On exit  : 3F/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:   16
  7461 ;; This function calls:
  7462 ;;		_SPI1_Exchange8bit
  7463 ;;		_wdtdelay
  7464 ;; This function is called by:
  7465 ;;		_init_display
  7466 ;; This function uses a reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text12
  7470  01C208                     __ptext12:
  7471                           	opt callstack 0
  7472  01C208                     _send_lcd_data:
  7473                           	opt callstack 13
  7474                           
  7475                           ; BSR set to: 61
  7476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7477                           ;incstack = 0
  7478                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7479  01C208  94BC               	bcf	188,2,c	;volatile
  7480                           
  7481                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7482                           ;stkvar	_data @ sp[(0)+-1]
  7483  01C20A  0EFF               	movlw	-1
  7484  01C20C  50E3               	movf	plusw1,w,c
  7485  01C20E  6EE6               	movwf	postinc1,c
  7486  01C210  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7487                           
  7488                           ; BSR set to: 57
  7489                           ;eadog.c: 127:  wdtdelay(8);
  7490  01C214  0E08               	movlw	8
  7491  01C216  6EE6               	movwf	postinc1,c
  7492  01C218  0E00               	movlw	0
  7493  01C21A  6EE6               	movwf	postinc1,c
  7494  01C21C  0E00               	movlw	0
  7495  01C21E  6EE6               	movwf	postinc1,c
  7496  01C220  0E00               	movlw	0
  7497  01C222  6EE6               	movwf	postinc1,c
  7498  01C224  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7499                           
  7500                           ; BSR set to: 0
  7501                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7502  01C228  52E5               	movf	postdec1,f,c
  7503  01C22A  0012               	return		;funcret
  7504  01C22C                     __end_of_send_lcd_data:
  7505                           	opt callstack 0
  7506                           
  7507 ;; *************** function _send_lcd_cmd_long *****************
  7508 ;; Defined at:
  7509 ;;		line 139 in file "eadog.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  cmd             1  [STACK] const unsigned char 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;		None
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1  [STACK] void 
  7516 ;; Registers used:
  7517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7518 ;; Tracked objects:
  7519 ;;		On entry : 3F/0
  7520 ;;		On exit  : 3F/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7527 ;;Total ram usage:        0 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:   16
  7530 ;; This function calls:
  7531 ;;		_SPI1_Exchange8bit
  7532 ;;		_wdtdelay
  7533 ;; This function is called by:
  7534 ;;		_init_display
  7535 ;; This function uses a reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text13
  7539  01BAAC                     __ptext13:
  7540                           	opt callstack 0
  7541  01BAAC                     _send_lcd_cmd_long:
  7542                           	opt callstack 13
  7543                           
  7544                           ; BSR set to: 0
  7545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7546                           ;incstack = 0
  7547                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7548  01BAAC  94BC               	bcf	188,2,c	;volatile
  7549                           
  7550                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7551  01BAAE  0EFE               	movlw	254
  7552  01BAB0  6EE6               	movwf	postinc1,c
  7553  01BAB2  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7554                           
  7555                           ; BSR set to: 57
  7556                           ;eadog.c: 143:  wdtdelay(8);
  7557  01BAB6  0E08               	movlw	8
  7558  01BAB8  6EE6               	movwf	postinc1,c
  7559  01BABA  0E00               	movlw	0
  7560  01BABC  6EE6               	movwf	postinc1,c
  7561  01BABE  0E00               	movlw	0
  7562  01BAC0  6EE6               	movwf	postinc1,c
  7563  01BAC2  0E00               	movlw	0
  7564  01BAC4  6EE6               	movwf	postinc1,c
  7565  01BAC6  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7569                           ;stkvar	_cmd @ sp[(0)+-1]
  7570  01BACA  0EFF               	movlw	-1
  7571  01BACC  50E3               	movf	plusw1,w,c
  7572  01BACE  6EE6               	movwf	postinc1,c
  7573  01BAD0  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7574                           
  7575                           ;eadog.c: 145:  wdtdelay(800);
  7576  01BAD4  0E20               	movlw	32
  7577  01BAD6  6EE6               	movwf	postinc1,c
  7578  01BAD8  0E03               	movlw	3
  7579  01BADA  6EE6               	movwf	postinc1,c
  7580  01BADC  0E00               	movlw	0
  7581  01BADE  6EE6               	movwf	postinc1,c
  7582  01BAE0  0E00               	movlw	0
  7583  01BAE2  6EE6               	movwf	postinc1,c
  7584  01BAE4  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7585                           
  7586                           ; BSR set to: 0
  7587                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7588  01BAE8  52E5               	movf	postdec1,f,c
  7589  01BAEA  0012               	return		;funcret
  7590  01BAEC                     __end_of_send_lcd_cmd_long:
  7591                           	opt callstack 0
  7592                           
  7593 ;; *************** function _send_lcd_cmd *****************
  7594 ;; Defined at:
  7595 ;;		line 130 in file "eadog.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  cmd             1  [STACK] const unsigned char 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1  [STACK] void 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7604 ;; Tracked objects:
  7605 ;;		On entry : 3F/0
  7606 ;;		On exit  : 3F/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:   16
  7616 ;; This function calls:
  7617 ;;		_SPI1_Exchange8bit
  7618 ;;		_wdtdelay
  7619 ;; This function is called by:
  7620 ;;		_init_display
  7621 ;; This function uses a reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text14
  7625  01BAEC                     __ptext14:
  7626                           	opt callstack 0
  7627  01BAEC                     _send_lcd_cmd:
  7628                           	opt callstack 13
  7629                           
  7630                           ; BSR set to: 0
  7631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7632                           ;incstack = 0
  7633                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7634  01BAEC  94BC               	bcf	188,2,c	;volatile
  7635                           
  7636                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7637  01BAEE  0EFE               	movlw	254
  7638  01BAF0  6EE6               	movwf	postinc1,c
  7639  01BAF2  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7640                           
  7641                           ; BSR set to: 57
  7642                           ;eadog.c: 134:  wdtdelay(8);
  7643  01BAF6  0E08               	movlw	8
  7644  01BAF8  6EE6               	movwf	postinc1,c
  7645  01BAFA  0E00               	movlw	0
  7646  01BAFC  6EE6               	movwf	postinc1,c
  7647  01BAFE  0E00               	movlw	0
  7648  01BB00  6EE6               	movwf	postinc1,c
  7649  01BB02  0E00               	movlw	0
  7650  01BB04  6EE6               	movwf	postinc1,c
  7651  01BB06  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7655                           ;stkvar	_cmd @ sp[(0)+-1]
  7656  01BB0A  0EFF               	movlw	-1
  7657  01BB0C  50E3               	movf	plusw1,w,c
  7658  01BB0E  6EE6               	movwf	postinc1,c
  7659  01BB10  ECC3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7660                           
  7661                           ;eadog.c: 136:  wdtdelay(8);
  7662  01BB14  0E08               	movlw	8
  7663  01BB16  6EE6               	movwf	postinc1,c
  7664  01BB18  0E00               	movlw	0
  7665  01BB1A  6EE6               	movwf	postinc1,c
  7666  01BB1C  0E00               	movlw	0
  7667  01BB1E  6EE6               	movwf	postinc1,c
  7668  01BB20  0E00               	movlw	0
  7669  01BB22  6EE6               	movwf	postinc1,c
  7670  01BB24  ECFD  F0DA         	call	_wdtdelay	;wreg free
  7671                           
  7672                           ; BSR set to: 0
  7673                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7674  01BB28  52E5               	movf	postdec1,f,c
  7675  01BB2A  0012               	return		;funcret
  7676  01BB2C                     __end_of_send_lcd_cmd:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function _SPI1_Exchange8bit *****************
  7680 ;; Defined at:
  7681 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  data            1  [STACK] unsigned char 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;		None
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1  [STACK] unsigned char 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 3F/39
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7699 ;;Total ram usage:        0 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:   15
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_send_lcd_data
  7706 ;;		_send_lcd_cmd
  7707 ;;		_send_lcd_cmd_long
  7708 ;;		_set_dac
  7709 ;; This function uses a reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text15
  7713  01C386                     __ptext15:
  7714                           	opt callstack 0
  7715  01C386                     _SPI1_Exchange8bit:
  7716                           	opt callstack 14
  7717                           
  7718                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7719                           
  7720                           ; BSR set to: 0
  7721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7722                           ;incstack = 0
  7723  01C386  0E01               	movlw	1
  7724  01C388  013D               	movlb	61	; () banked
  7725  01C38A  6F12               	movwf	18,b	;volatile
  7726                           
  7727                           ; BSR set to: 61
  7728                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7729                           ;stkvar	_data @ sp[(0)+-1]
  7730  01C38C  0EFF               	movlw	-1
  7731  01C38E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7732  01C394                     l807:
  7733                           
  7734                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7735  01C394  0139               	movlb	57	; () banked
  7736  01C396  A9A2               	btfss	162,4,b	;volatile
  7737  01C398  D7FD               	goto	l807
  7738                           
  7739                           ; BSR set to: 57
  7740                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7741  01C39A  006F F440  F001    	movff	15632,btemp	;volatile
  7742                           
  7743                           ; BSR set to: 57
  7744                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7745  01C3A0  52E5               	movf	postdec1,f,c
  7746  01C3A2  0012               	return		;funcret
  7747  01C3A4                     __end_of_SPI1_Exchange8bit:
  7748                           	opt callstack 0
  7749                           
  7750 ;; *************** function _ringBufS_init *****************
  7751 ;; Defined at:
  7752 ;;		line 22 in file "ringbufs.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  _this           2  [STACK] PTR volatile struct ring
  7755 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1  [STACK] void 
  7760 ;; Registers used:
  7761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/1
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7771 ;;Total ram usage:        0 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:   16
  7774 ;; This function calls:
  7775 ;;		_memset
  7776 ;; This function is called by:
  7777 ;;		_init_display
  7778 ;; This function uses a reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text16
  7782  01BFAE                     __ptext16:
  7783                           	opt callstack 0
  7784  01BFAE                     _ringBufS_init:
  7785                           	opt callstack 13
  7786                           
  7787                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7788                           
  7789                           ; BSR set to: 57
  7790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7791                           ;incstack = 0
  7792  01BFAE  0E43               	movlw	67
  7793  01BFB0  6EE6               	movwf	postinc1,c
  7794  01BFB2  0E00               	movlw	0
  7795  01BFB4  6EE6               	movwf	postinc1,c
  7796  01BFB6  0E00               	movlw	0
  7797  01BFB8  6EE6               	movwf	postinc1,c
  7798  01BFBA  0E00               	movlw	0
  7799  01BFBC  6EE6               	movwf	postinc1,c
  7800                           
  7801                           ;stkvar	__this @ sp[(-4)+-2]
  7802  01BFBE  0EFA               	movlw	-6
  7803  01BFC0  006F FF8F FFE6     	movff	plusw1,postinc1
  7804  01BFC6  006F FF8F FFE6     	movff	plusw1,postinc1
  7805  01BFCC  EC4E  F0B7         	call	_memset	;wreg free
  7806                           
  7807                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7808  01BFD0  52E5               	movf	postdec1,f,c
  7809  01BFD2  52E5               	movf	postdec1,f,c
  7810  01BFD4  0012               	return		;funcret
  7811  01BFD6                     __end_of_ringBufS_init:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function _init_bsoc *****************
  7815 ;; Defined at:
  7816 ;;		line 109 in file "bsoc.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1  [STACK] void 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:   18
  7837 ;; This function calls:
  7838 ;;		_TMR3_SetInterruptHandler
  7839 ;;		_Volts_to_SOC
  7840 ;;		___fldiv
  7841 ;;		___flmul
  7842 ;;		___fltol
  7843 ;;		___xxtofl
  7844 ;;		_conv_raw_result
  7845 ;; This function is called by:
  7846 ;;		_main
  7847 ;; This function uses a reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text17
  7851  017C12                     __ptext17:
  7852                           	opt callstack 0
  7853  017C12                     _init_bsoc:
  7854                           	opt callstack 12
  7855                           
  7856                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7857                           
  7858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7859                           ;incstack = 0
  7860  017C12  0E00               	movlw	0
  7861  017C14  6EE6               	movwf	postinc1,c
  7862  017C16  0E00               	movlw	0
  7863  017C18  6EE6               	movwf	postinc1,c
  7864  017C1A  0E7A               	movlw	122
  7865  017C1C  6EE6               	movwf	postinc1,c
  7866  017C1E  0E44               	movlw	68
  7867  017C20  6EE6               	movwf	postinc1,c
  7868  017C22  0E00               	movlw	0
  7869  017C24  6EE6               	movwf	postinc1,c
  7870  017C26  0E04               	movlw	4
  7871  017C28  6EE6               	movwf	postinc1,c
  7872  017C2A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7873  017C2E  0060  F007  FFE6   	movff	btemp,postinc1
  7874  017C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7875  017C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7876  017C40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7877  017C46  EC51  F0C8         	call	___fltol	;wreg free
  7878  017C4A  0060  F007  FFE6   	movff	btemp,postinc1
  7879  017C50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7880  017C56  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7881  017C5C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7882  017C62  0E00               	movlw	0
  7883  017C64  6EE6               	movwf	postinc1,c
  7884  017C66  EC65  F0C2         	call	___xxtofl	;wreg free
  7885  017C6A  0060  F007  FFE6   	movff	btemp,postinc1
  7886  017C70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7887  017C76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7888  017C7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7889  017C82  ECE5  F09E         	call	___flmul	;wreg free
  7890  017C86  0060  F007  FFE6   	movff	btemp,postinc1
  7891  017C8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7892  017C92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7893  017C98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7894  017C9E  EC51  F0C8         	call	___fltol	;wreg free
  7895  017CA2  0060  F007  FFE6   	movff	btemp,postinc1
  7896  017CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7897  017CAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7898  017CB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7899  017CBA  EC95  F0D3         	call	_Volts_to_SOC	;wreg free
  7900  017CBE  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7901  017CC4  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7902                           
  7903                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7904  017CCA  EE21  F38B         	lfsr	2,_C+140	;volatile
  7905  017CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  7906  017CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  7907  017CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  7908  017CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  7909  017CE6  0E00               	movlw	0
  7910  017CE8  6EE6               	movwf	postinc1,c
  7911  017CEA  0E00               	movlw	0
  7912  017CEC  6EE6               	movwf	postinc1,c
  7913  017CEE  0EC8               	movlw	200
  7914  017CF0  6EE6               	movwf	postinc1,c
  7915  017CF2  0E42               	movlw	66
  7916  017CF4  6EE6               	movwf	postinc1,c
  7917  017CF6  0E00               	movlw	0
  7918  017CF8  6EE6               	movwf	postinc1,c
  7919  017CFA  0E00               	movlw	0
  7920  017CFC  6EE6               	movwf	postinc1,c
  7921  017CFE  0E7A               	movlw	122
  7922  017D00  6EE6               	movwf	postinc1,c
  7923  017D02  0E44               	movlw	68
  7924  017D04  6EE6               	movwf	postinc1,c
  7925  017D06  0E00               	movlw	0
  7926  017D08  6EE6               	movwf	postinc1,c
  7927  017D0A  0E04               	movlw	4
  7928  017D0C  6EE6               	movwf	postinc1,c
  7929  017D0E  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7930  017D12  0060  F007  FFE6   	movff	btemp,postinc1
  7931  017D18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7932  017D1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7933  017D24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7934  017D2A  EC51  F0C8         	call	___fltol	;wreg free
  7935  017D2E  0060  F007  FFE6   	movff	btemp,postinc1
  7936  017D34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7937  017D3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7938  017D40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7939  017D46  0E00               	movlw	0
  7940  017D48  6EE6               	movwf	postinc1,c
  7941  017D4A  EC65  F0C2         	call	___xxtofl	;wreg free
  7942  017D4E  0060  F007  FFE6   	movff	btemp,postinc1
  7943  017D54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7944  017D5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7945  017D60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7946  017D66  ECE5  F09E         	call	___flmul	;wreg free
  7947  017D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7948  017D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7949  017D76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7950  017D7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7951  017D82  EC51  F0C8         	call	___fltol	;wreg free
  7952  017D86  0060  F007  FFE6   	movff	btemp,postinc1
  7953  017D8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7954  017D92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7955  017D98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7956  017D9E  EC95  F0D3         	call	_Volts_to_SOC	;wreg free
  7957  017DA2  0060  F004  F00B   	movff	btemp,btemp+10
  7958  017DA8  0060  F008  F00C   	movff	btemp+1,btemp+11
  7959  017DAE  500B               	movf	(btemp+10)^0,w,c
  7960  017DB0  6E05               	movwf	(btemp+4)^0,c
  7961  017DB2  500C               	movf	(btemp+11)^0,w,c
  7962  017DB4  6E06               	movwf	(btemp+5)^0,c
  7963  017DB6  6A07               	clrf	(btemp+6)^0,c
  7964  017DB8  6A08               	clrf	(btemp+7)^0,c
  7965  017DBA  0060  F017  FFE6   	movff	btemp+4,postinc1
  7966  017DC0  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7967  017DC6  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7968  017DCC  0060  F023  FFE6   	movff	btemp+7,postinc1
  7969  017DD2  0E00               	movlw	0
  7970  017DD4  6EE6               	movwf	postinc1,c
  7971  017DD6  EC65  F0C2         	call	___xxtofl	;wreg free
  7972  017DDA  0060  F007  FFE6   	movff	btemp,postinc1
  7973  017DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7974  017DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7975  017DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7976  017DF2  ECD8  F0A6         	call	___fldiv	;wreg free
  7977  017DF6  0060  F007  FFE6   	movff	btemp,postinc1
  7978  017DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7979  017E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7980  017E08  0060  F013  FFE6   	movff	btemp+3,postinc1
  7981  017E0E  ECE5  F09E         	call	___flmul	;wreg free
  7982  017E12  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7983  017E18  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7984  017E1E  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7985  017E24  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7986                           
  7987                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7988  017E2A  EE21  F38F         	lfsr	2,_C+144	;volatile
  7989  017E2E  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7990  017E34  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7991  017E3A  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7992  017E40  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7993                           
  7994                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7995  017E46  0E94               	movlw	low _calc_bsoc
  7996  017E48  6EE6               	movwf	postinc1,c
  7997  017E4A  0E33               	movlw	high _calc_bsoc
  7998  017E4C  6EE6               	movwf	postinc1,c
  7999  017E4E  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8000  017E50  6EE6               	movwf	postinc1,c
  8001  017E52  EC63  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  8002                           
  8003                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8004  017E56  0012               	return		;funcret
  8005  017E58                     __end_of_init_bsoc:
  8006                           	opt callstack 0
  8007                           
  8008 ;; *************** function _Volts_to_SOC *****************
  8009 ;; Defined at:
  8010 ;;		line 174 in file "bsoc.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;  cvoltage        4  [STACK] const unsigned long 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  soc             2  [STACK] unsigned short 
  8015 ;;  slot            1  [STACK] unsigned char 
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  2  [STACK] unsigned short 
  8018 ;; Registers used:
  8019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8029 ;;Total ram usage:        0 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:   15
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_init_bsoc
  8036 ;; This function uses a reentrant model
  8037 ;;
  8038                           
  8039                           	psect	text18
  8040  01A72A                     __ptext18:
  8041                           	opt callstack 0
  8042  01A72A                     _Volts_to_SOC:
  8043                           	opt callstack 0
  8044                           
  8045                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8046  01A72A  52E6               	movf	postinc1,f,c
  8047  01A72C  52E6               	movf	postinc1,f,c
  8048  01A72E  52E6               	movf	postinc1,f,c
  8049                           
  8050                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  8051                           ;stkvar	_soc @ sp[(-3)+0]
  8052                           
  8053                           ;incstack = 0
  8054  01A730  0EFD               	movlw	-3
  8055  01A732  6AE3               	clrf	plusw1,c
  8056  01A734  0EFE               	movlw	-2
  8057  01A736  6AE3               	clrf	plusw1,c
  8058                           
  8059                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  8060                           ;stkvar	_slot @ sp[(-3)+2]
  8061  01A738  0EFF               	movlw	-1
  8062  01A73A  6AE3               	clrf	plusw1,c
  8063  01A73C                     l10892:
  8064                           
  8065                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8066                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8067                           ;stkvar	_slot @ sp[(-3)+2]
  8068  01A73C  0EFF               	movlw	-1
  8069  01A73E  50E3               	movf	plusw1,w,c
  8070  01A740  0D08               	mullw	8
  8071  01A742  0EE5               	movlw	low _BVSOC_TABLE
  8072  01A744  24F3               	addwf	243,w,c
  8073  01A746  6EF6               	movwf	tblptrl,c
  8074  01A748  0EF9               	movlw	high _BVSOC_TABLE
  8075  01A74A  20F4               	addwfc	244,w,c
  8076  01A74C  6EF7               	movwf	tblptrh,c
  8077  01A74E                     	if	1	;There are 3 active tblptr bytes
  8078  01A74E  6AF8               	clrf	tblptru,c
  8079  01A750  0E00               	movlw	low (__mediumconst shr (0+16))
  8080  01A752  22F8               	addwfc	tblptru,f,c
  8081  01A754                     	endif
  8082  01A754  0EF9               	movlw	-7
  8083  01A756  50E3               	movf	plusw1,w,c
  8084  01A758  0009               	tblrd		*+
  8085  01A75A  5CF5               	subwf	tablat,w,c
  8086  01A75C  0EFA               	movlw	-6
  8087  01A75E  50E3               	movf	plusw1,w,c
  8088  01A760  0009               	tblrd		*+
  8089  01A762  58F5               	subwfb	tablat,w,c
  8090  01A764  0EFB               	movlw	-5
  8091  01A766  50E3               	movf	plusw1,w,c
  8092  01A768  0009               	tblrd		*+
  8093  01A76A  58F5               	subwfb	tablat,w,c
  8094  01A76C  0EFC               	movlw	-4
  8095  01A76E  50E3               	movf	plusw1,w,c
  8096  01A770  0009               	tblrd		*+
  8097  01A772  58F5               	subwfb	tablat,w,c
  8098  01A774  B0D8               	btfsc	status,0,c
  8099  01A776  D020               	goto	l10896
  8100                           
  8101                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  8102                           ;stkvar	_slot @ sp[(-3)+2]
  8103  01A778  0EFF               	movlw	-1
  8104  01A77A  50E3               	movf	plusw1,w,c
  8105  01A77C  0D08               	mullw	8
  8106  01A77E  0E04               	movlw	4
  8107  01A780  26F3               	addwf	243,f,c
  8108  01A782  0E00               	movlw	0
  8109  01A784  22F4               	addwfc	244,f,c
  8110  01A786  0EE5               	movlw	low _BVSOC_TABLE
  8111  01A788  24F3               	addwf	243,w,c
  8112  01A78A  6EF6               	movwf	tblptrl,c
  8113  01A78C  0EF9               	movlw	high _BVSOC_TABLE
  8114  01A78E  20F4               	addwfc	244,w,c
  8115  01A790  6EF7               	movwf	tblptrh,c
  8116  01A792                     	if	1	;There are 3 active tblptr bytes
  8117  01A792  6AF8               	clrf	tblptru,c
  8118  01A794  0E00               	movlw	low (__mediumconst shr (0+16))
  8119  01A796  22F8               	addwfc	tblptru,f,c
  8120  01A798                     	endif
  8121  01A798  0009               	tblrd		*+
  8122  01A79A  006F FFD4  F00B    	movff	tablat,btemp+10
  8123  01A7A0  0009               	tblrd		*+
  8124  01A7A2  006F FFD4  F00C    	movff	tablat,btemp+11
  8125                           
  8126                           ;stkvar	_soc @ sp[(-3)+0]
  8127  01A7A8  0EFD               	movlw	-3
  8128  01A7AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8129  01A7B0  0EFE               	movlw	-2
  8130  01A7B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  8131  01A7B8                     l10896:
  8132                           
  8133                           ;bsoc.c: 186:  }
  8134                           ;stkvar	_slot @ sp[(-3)+2]
  8135  01A7B8  0EFF               	movlw	-1
  8136  01A7BA  2AE3               	incf	plusw1,f,c
  8137                           
  8138                           ;stkvar	_slot @ sp[(-3)+2]
  8139  01A7BC  0EFF               	movlw	-1
  8140  01A7BE  006F FF8C  F001    	movff	plusw1,btemp
  8141  01A7C4  0E19               	movlw	25
  8142  01A7C6  6401               	cpfsgt	btemp^0,c
  8143  01A7C8  D7B9               	goto	l10892
  8144                           
  8145                           ;bsoc.c: 187:  return soc;
  8146                           ;stkvar	_soc @ sp[(-3)+0]
  8147  01A7CA  0EFD               	movlw	-3
  8148  01A7CC  006F FF8C  F001    	movff	plusw1,btemp
  8149  01A7D2  0EFE               	movlw	-2
  8150  01A7D4  006F FF8C  F002    	movff	plusw1,btemp+1
  8151                           
  8152                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8153  01A7DA  0EF9               	movlw	249
  8154  01A7DC  26E1               	addwf	fsr1l,f,c
  8155  01A7DE  0EFF               	movlw	255
  8156  01A7E0  22E2               	addwfc	fsr1h,f,c
  8157  01A7E2  0012               	return		;funcret
  8158  01A7E4                     __end_of_Volts_to_SOC:
  8159                           	opt callstack 0
  8160                           
  8161 ;; *************** function _hid_display *****************
  8162 ;; Defined at:
  8163 ;;		line 17 in file "hid.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  h               2  [STACK] PTR struct H_data
  8166 ;;		 -> H(7), 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  2  [STACK] PTR struct H_data
  8171 ;; Registers used:
  8172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8173 ;; Tracked objects:
  8174 ;;		On entry : 3F/39
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8182 ;;Total ram usage:        0 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:   17
  8185 ;; This function calls:
  8186 ;;		_hid_input
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text19
  8193  0186CE                     __ptext19:
  8194                           	opt callstack 0
  8195  0186CE                     _hid_display:
  8196                           	opt callstack 13
  8197                           
  8198                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  8199                           ;stkvar	_h @ sp[(0)+-2]
  8200                           
  8201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8202                           ;incstack = 0
  8203  0186CE  0EFE               	movlw	-2
  8204  0186D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8205  0186D6  006F FF8F FFE6     	movff	plusw1,postinc1
  8206  0186DC  EC63  F0D2         	call	_hid_input	;wreg free
  8207                           
  8208                           ;hid.c: 21:  switch (h->h_state) {
  8209  0186E0  D0C6               	goto	l13280
  8210  0186E2                     l13258:
  8211                           
  8212                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  8213                           ;stkvar	_h @ sp[(0)+-2]
  8214  0186E2  0EFE               	movlw	-2
  8215  0186E4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8216  0186EA  0EFF               	movlw	-1
  8217  0186EC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8218  0186F2  0E01               	movlw	1
  8219  0186F4  240B               	addwf	(btemp+10)^0,w,c
  8220  0186F6  6ED9               	movwf	fsr2l,c
  8221  0186F8  0E00               	movlw	0
  8222  0186FA  200C               	addwfc	(btemp+11)^0,w,c
  8223  0186FC  6EDA               	movwf	fsr2h,c
  8224  0186FE  0E01               	movlw	1
  8225  018700  6EDF               	movwf	indf2,c
  8226                           
  8227                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  8228                           ;stkvar	_h @ sp[(0)+-2]
  8229  018702  0EFE               	movlw	-2
  8230  018704  006F FF8F FFD9     	movff	plusw1,fsr2l
  8231  01870A  0EFF               	movlw	-1
  8232  01870C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8233  018712  0E00               	movlw	0
  8234  018714  6EDF               	movwf	indf2,c
  8235                           
  8236                           ;hid.c: 25:   h->wait_enter = 1;
  8237                           ;stkvar	_h @ sp[(0)+-2]
  8238  018716  0EFE               	movlw	-2
  8239  018718  006F FF8C  F00B    	movff	plusw1,btemp+10
  8240  01871E  0EFF               	movlw	-1
  8241  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
  8242  018726  0E04               	movlw	4
  8243  018728  240B               	addwf	(btemp+10)^0,w,c
  8244  01872A  6ED9               	movwf	fsr2l,c
  8245  01872C  0E00               	movlw	0
  8246  01872E  200C               	addwfc	(btemp+11)^0,w,c
  8247  018730  6EDA               	movwf	fsr2h,c
  8248  018732  0E01               	movlw	1
  8249  018734  6EDF               	movwf	indf2,c
  8250                           
  8251                           ;hid.c: 26:   h->wait_select = 1;
  8252                           ;stkvar	_h @ sp[(0)+-2]
  8253  018736  0EFE               	movlw	-2
  8254  018738  006F FF8C  F00B    	movff	plusw1,btemp+10
  8255  01873E  0EFF               	movlw	-1
  8256  018740  006F FF8C  F00C    	movff	plusw1,btemp+11
  8257  018746  0E02               	movlw	2
  8258  018748  240B               	addwf	(btemp+10)^0,w,c
  8259  01874A  6ED9               	movwf	fsr2l,c
  8260  01874C  0E00               	movlw	0
  8261  01874E  200C               	addwfc	(btemp+11)^0,w,c
  8262  018750  6EDA               	movwf	fsr2h,c
  8263  018752  0E01               	movlw	1
  8264  018754  6EDF               	movwf	indf2,c
  8265                           
  8266                           ;hid.c: 27:   h->select_p = SW_OFF;
  8267                           ;stkvar	_h @ sp[(0)+-2]
  8268  018756  0EFE               	movlw	-2
  8269  018758  006F FF8C  F00B    	movff	plusw1,btemp+10
  8270  01875E  0EFF               	movlw	-1
  8271  018760  006F FF8C  F00C    	movff	plusw1,btemp+11
  8272  018766  0E03               	movlw	3
  8273  018768  240B               	addwf	(btemp+10)^0,w,c
  8274  01876A  6ED9               	movwf	fsr2l,c
  8275  01876C  0E00               	movlw	0
  8276  01876E  200C               	addwfc	(btemp+11)^0,w,c
  8277  018770  6EDA               	movwf	fsr2h,c
  8278  018772  0E00               	movlw	0
  8279  018774  6EDF               	movwf	indf2,c
  8280                           
  8281                           ;hid.c: 28:   h->enter_p = SW_OFF;
  8282                           ;stkvar	_h @ sp[(0)+-2]
  8283  018776  0EFE               	movlw	-2
  8284  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
  8285  01877E  0EFF               	movlw	-1
  8286  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
  8287  018786  0E05               	movlw	5
  8288  018788  240B               	addwf	(btemp+10)^0,w,c
  8289  01878A  6ED9               	movwf	fsr2l,c
  8290  01878C  0E00               	movlw	0
  8291  01878E  200C               	addwfc	(btemp+11)^0,w,c
  8292  018790  6EDA               	movwf	fsr2h,c
  8293  018792  0E00               	movlw	0
  8294  018794  D06A               	goto	L4
  8295  018796                     l13270:
  8296                           
  8297                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8298                           ;stkvar	_h @ sp[(0)+-2]
  8299  018796  0EFE               	movlw	-2
  8300  018798  006F FF8C  F00B    	movff	plusw1,btemp+10
  8301  01879E  0EFF               	movlw	-1
  8302  0187A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8303  0187A6  0E02               	movlw	2
  8304  0187A8  240B               	addwf	(btemp+10)^0,w,c
  8305  0187AA  6ED9               	movwf	fsr2l,c
  8306  0187AC  0E00               	movlw	0
  8307  0187AE  200C               	addwfc	(btemp+11)^0,w,c
  8308  0187B0  6EDA               	movwf	fsr2h,c
  8309  0187B2  50DF               	movf	indf2,w,c
  8310  0187B4  A4D8               	btfss	status,2,c
  8311  0187B6  D076               	goto	l2053
  8312                           
  8313                           ;stkvar	_h @ sp[(0)+-2]
  8314  0187B8  0EFE               	movlw	-2
  8315  0187BA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8316  0187C0  0EFF               	movlw	-1
  8317  0187C2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8318  0187C8  0E03               	movlw	3
  8319  0187CA  240B               	addwf	(btemp+10)^0,w,c
  8320  0187CC  6ED9               	movwf	fsr2l,c
  8321  0187CE  0E00               	movlw	0
  8322  0187D0  200C               	addwfc	(btemp+11)^0,w,c
  8323  0187D2  6EDA               	movwf	fsr2h,c
  8324  0187D4  50DF               	movf	indf2,w,c
  8325  0187D6  A4D8               	btfss	status,2,c
  8326  0187D8  D065               	goto	l2053
  8327                           
  8328                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  8329                           ;stkvar	_h @ sp[(0)+-2]
  8330  0187DA  0EFE               	movlw	-2
  8331  0187DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8332  0187E2  0EFF               	movlw	-1
  8333  0187E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8334  0187EA  0E06               	movlw	6
  8335  0187EC  240B               	addwf	(btemp+10)^0,w,c
  8336  0187EE  6ED9               	movwf	fsr2l,c
  8337  0187F0  0E00               	movlw	0
  8338  0187F2  200C               	addwfc	(btemp+11)^0,w,c
  8339  0187F4  6EDA               	movwf	fsr2h,c
  8340                           
  8341                           ;stkvar	_h @ sp[(0)+-2]
  8342  0187F6  0EFE               	movlw	-2
  8343  0187F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8344  0187FE  0EFF               	movlw	-1
  8345  018800  006F FF8C  F00C    	movff	plusw1,btemp+11
  8346  018806  0E06               	movlw	6
  8347  018808  240B               	addwf	(btemp+10)^0,w,c
  8348  01880A  6EE9               	movwf	fsr0l,c
  8349  01880C  0E00               	movlw	0
  8350  01880E  200C               	addwfc	(btemp+11)^0,w,c
  8351  018810  6EEA               	movwf	fsr0h,c
  8352  018812  2AEF               	incf	indf0,f,c
  8353  018814  50EF               	movf	indf0,w,c
  8354  018816  0B03               	andlw	3
  8355  018818  6EDF               	movwf	indf2,c
  8356                           
  8357                           ;hid.c: 34:    h->hid_display = h->sequence;
  8358                           ;stkvar	_h @ sp[(0)+-2]
  8359  01881A  0EFE               	movlw	-2
  8360  01881C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8361  018822  0EFF               	movlw	-1
  8362  018824  006F FF8C  F00C    	movff	plusw1,btemp+11
  8363  01882A  0E06               	movlw	6
  8364  01882C  240B               	addwf	(btemp+10)^0,w,c
  8365  01882E  6ED9               	movwf	fsr2l,c
  8366  018830  0E00               	movlw	0
  8367  018832  200C               	addwfc	(btemp+11)^0,w,c
  8368  018834  6EDA               	movwf	fsr2h,c
  8369                           
  8370                           ;stkvar	_h @ sp[(0)+-2]
  8371  018836  0EFE               	movlw	-2
  8372  018838  006F FF8F FFE9     	movff	plusw1,fsr0l
  8373  01883E  0EFF               	movlw	-1
  8374  018840  006F FF8F FFEA     	movff	plusw1,fsr0h
  8375  018846  006F FF7F FFEF     	movff	indf2,indf0
  8376                           
  8377                           ;hid.c: 35:    h->wait_select = 1;
  8378                           ;stkvar	_h @ sp[(0)+-2]
  8379  01884C  0EFE               	movlw	-2
  8380  01884E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8381  018854  0EFF               	movlw	-1
  8382  018856  006F FF8C  F00C    	movff	plusw1,btemp+11
  8383  01885C  0E02               	movlw	2
  8384  01885E  240B               	addwf	(btemp+10)^0,w,c
  8385  018860  6ED9               	movwf	fsr2l,c
  8386  018862  0E00               	movlw	0
  8387  018864  200C               	addwfc	(btemp+11)^0,w,c
  8388  018866  6EDA               	movwf	fsr2h,c
  8389  018868  0E01               	movlw	1
  8390  01886A                     L4:
  8391  01886A  6EDF               	movwf	indf2,c
  8392  01886C  D01B               	goto	l2053
  8393  01886E                     l13280:
  8394                           
  8395                           ;stkvar	_h @ sp[(0)+-2]
  8396  01886E  0EFE               	movlw	-2
  8397  018870  006F FF8C  F00B    	movff	plusw1,btemp+10
  8398  018876  0EFF               	movlw	-1
  8399  018878  006F FF8C  F00C    	movff	plusw1,btemp+11
  8400  01887E  0E01               	movlw	1
  8401  018880  240B               	addwf	(btemp+10)^0,w,c
  8402  018882  6ED9               	movwf	fsr2l,c
  8403  018884  0E00               	movlw	0
  8404  018886  200C               	addwfc	(btemp+11)^0,w,c
  8405  018888  6EDA               	movwf	fsr2h,c
  8406  01888A  50DF               	movf	indf2,w,c
  8407  01888C  6E0B               	movwf	(btemp+10)^0,c
  8408  01888E  6A0C               	clrf	(btemp+11)^0,c
  8409                           
  8410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8411                           ; Switch size 1, requested type "simple"
  8412                           ; Number of cases is 1, Range of values is 0 to 0
  8413                           ; switch strategies available:
  8414                           ; Name         Instructions Cycles
  8415                           ; simple_byte            4     3 (average)
  8416                           ;	Chosen strategy is simple_byte
  8417  018890  500C               	movf	(btemp+11)^0,w,c
  8418  018892  0A00               	xorlw	0	; case 0
  8419  018894  A4D8               	btfss	status,2,c
  8420  018896  D77F               	goto	l13270
  8421                           
  8422                           ; Switch size 1, requested type "simple"
  8423                           ; Number of cases is 2, Range of values is 0 to 1
  8424                           ; switch strategies available:
  8425                           ; Name         Instructions Cycles
  8426                           ; simple_byte            7     4 (average)
  8427                           ;	Chosen strategy is simple_byte
  8428  018898  500B               	movf	(btemp+10)^0,w,c
  8429  01889A  0A00               	xorlw	0	; case 0
  8430  01889C  B4D8               	btfsc	status,2,c
  8431  01889E  D721               	goto	l13258
  8432  0188A0  0A01               	xorlw	1	; case 1
  8433  0188A2  D779               	goto	l13270
  8434  0188A4                     l2053:
  8435                           
  8436                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8437  0188A4  52E5               	movf	postdec1,f,c
  8438  0188A6  52E5               	movf	postdec1,f,c
  8439  0188A8  0012               	return		;funcret
  8440  0188AA                     __end_of_hid_display:
  8441                           	opt callstack 0
  8442                           
  8443 ;; *************** function _hid_input *****************
  8444 ;; Defined at:
  8445 ;;		line 3 in file "hid.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  h               2  [STACK] PTR struct H_data
  8448 ;;		 -> H(7), 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  2  [STACK] PTR struct H_data
  8453 ;; Registers used:
  8454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/39
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:   16
  8467 ;; This function calls:
  8468 ;;		_get_switch
  8469 ;; This function is called by:
  8470 ;;		_hid_display
  8471 ;; This function uses a reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text20
  8475  01A4C6                     __ptext20:
  8476                           	opt callstack 0
  8477  01A4C6                     _hid_input:
  8478                           	opt callstack 13
  8479                           
  8480                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8481                           
  8482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8483                           ;incstack = 0
  8484  01A4C6  0E02               	movlw	2
  8485  01A4C8  6EE6               	movwf	postinc1,c
  8486  01A4CA  EC7F  F0DF         	call	_get_switch	;wreg free
  8487  01A4CE  5001               	movf	btemp^0,w,c
  8488  01A4D0  B4D8               	btfsc	status,2,c
  8489  01A4D2  D02C               	goto	l13098
  8490                           
  8491                           ;hid.c: 6:   h->wait_select = 0;
  8492                           ;stkvar	_h @ sp[(0)+-2]
  8493  01A4D4  0EFE               	movlw	-2
  8494  01A4D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8495  01A4DC  0EFF               	movlw	-1
  8496  01A4DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8497  01A4E4  0E02               	movlw	2
  8498  01A4E6  240B               	addwf	(btemp+10)^0,w,c
  8499  01A4E8  6ED9               	movwf	fsr2l,c
  8500  01A4EA  0E00               	movlw	0
  8501  01A4EC  200C               	addwfc	(btemp+11)^0,w,c
  8502  01A4EE  6EDA               	movwf	fsr2h,c
  8503  01A4F0  0E00               	movlw	0
  8504  01A4F2  6EDF               	movwf	indf2,c
  8505                           
  8506                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8507  01A4F4  0E02               	movlw	2
  8508  01A4F6  6EE6               	movwf	postinc1,c
  8509  01A4F8  EC7F  F0DF         	call	_get_switch	;wreg free
  8510  01A4FC  5001               	movf	btemp^0,w,c
  8511  01A4FE  B4D8               	btfsc	status,2,c
  8512  01A500  D003               	goto	u12450
  8513  01A502  6A0C               	clrf	(btemp+11)^0,c
  8514  01A504  2A0C               	incf	(btemp+11)^0,f,c
  8515  01A506  D001               	goto	u12468
  8516  01A508                     u12450:
  8517  01A508  6A0C               	clrf	(btemp+11)^0,c
  8518  01A50A                     u12468:
  8519                           
  8520                           ;stkvar	_h @ sp[(0)+-2]
  8521  01A50A  0EFE               	movlw	-2
  8522  01A50C  006F FF8C  F009    	movff	plusw1,btemp+8
  8523  01A512  0EFF               	movlw	-1
  8524  01A514  006F FF8C  F00A    	movff	plusw1,btemp+9
  8525  01A51A  0E03               	movlw	3
  8526  01A51C  2409               	addwf	(btemp+8)^0,w,c
  8527  01A51E  6ED9               	movwf	fsr2l,c
  8528  01A520  0E00               	movlw	0
  8529  01A522  200A               	addwfc	(btemp+9)^0,w,c
  8530  01A524  6EDA               	movwf	fsr2h,c
  8531  01A526  0060  F033  FFDF   	movff	btemp+11,indf2
  8532  01A52C                     l13098:
  8533                           
  8534                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8535  01A52C  0E03               	movlw	3
  8536  01A52E  6EE6               	movwf	postinc1,c
  8537  01A530  EC7F  F0DF         	call	_get_switch	;wreg free
  8538  01A534  5001               	movf	btemp^0,w,c
  8539  01A536  B4D8               	btfsc	status,2,c
  8540  01A538  D02C               	goto	l2044
  8541                           
  8542                           ;hid.c: 11:   h->wait_enter = 0;
  8543                           ;stkvar	_h @ sp[(0)+-2]
  8544  01A53A  0EFE               	movlw	-2
  8545  01A53C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8546  01A542  0EFF               	movlw	-1
  8547  01A544  006F FF8C  F00C    	movff	plusw1,btemp+11
  8548  01A54A  0E04               	movlw	4
  8549  01A54C  240B               	addwf	(btemp+10)^0,w,c
  8550  01A54E  6ED9               	movwf	fsr2l,c
  8551  01A550  0E00               	movlw	0
  8552  01A552  200C               	addwfc	(btemp+11)^0,w,c
  8553  01A554  6EDA               	movwf	fsr2h,c
  8554  01A556  0E00               	movlw	0
  8555  01A558  6EDF               	movwf	indf2,c
  8556                           
  8557                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8558  01A55A  0E03               	movlw	3
  8559  01A55C  6EE6               	movwf	postinc1,c
  8560  01A55E  EC7F  F0DF         	call	_get_switch	;wreg free
  8561  01A562  5001               	movf	btemp^0,w,c
  8562  01A564  B4D8               	btfsc	status,2,c
  8563  01A566  D003               	goto	u12480
  8564  01A568  6A0C               	clrf	(btemp+11)^0,c
  8565  01A56A  2A0C               	incf	(btemp+11)^0,f,c
  8566  01A56C  D001               	goto	u12498
  8567  01A56E                     u12480:
  8568  01A56E  6A0C               	clrf	(btemp+11)^0,c
  8569  01A570                     u12498:
  8570                           
  8571                           ;stkvar	_h @ sp[(0)+-2]
  8572  01A570  0EFE               	movlw	-2
  8573  01A572  006F FF8C  F009    	movff	plusw1,btemp+8
  8574  01A578  0EFF               	movlw	-1
  8575  01A57A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8576  01A580  0E05               	movlw	5
  8577  01A582  2409               	addwf	(btemp+8)^0,w,c
  8578  01A584  6ED9               	movwf	fsr2l,c
  8579  01A586  0E00               	movlw	0
  8580  01A588  200A               	addwfc	(btemp+9)^0,w,c
  8581  01A58A  6EDA               	movwf	fsr2h,c
  8582  01A58C  0060  F033  FFDF   	movff	btemp+11,indf2
  8583  01A592                     l2044:
  8584                           
  8585                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8586  01A592  52E5               	movf	postdec1,f,c
  8587  01A594  52E5               	movf	postdec1,f,c
  8588  01A596  0012               	return		;funcret
  8589  01A598                     __end_of_hid_input:
  8590                           	opt callstack 0
  8591                           
  8592 ;; *************** function _get_switch *****************
  8593 ;; Defined at:
  8594 ;;		line 18 in file "dio.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  i               1  [STACK] const unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;		None
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1  [STACK] enum E17021
  8601 ;; Registers used:
  8602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/39
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;Total ram usage:        0 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:   15
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		_main
  8619 ;;		_hid_input
  8620 ;; This function uses a reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text21
  8624  01BEFE                     __ptext21:
  8625                           	opt callstack 0
  8626  01BEFE                     _get_switch:
  8627                           	opt callstack 13
  8628                           
  8629                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8630                           ;stkvar	_i @ sp[(0)+-1]
  8631                           
  8632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8633                           ;incstack = 0
  8634  01BEFE  0EFF               	movlw	-1
  8635  01BF00  006F FF8C  F001    	movff	plusw1,btemp
  8636  01BF06  0E03               	movlw	3
  8637  01BF08  6401               	cpfsgt	btemp^0,c
  8638  01BF0A  D002               	goto	l10108
  8639                           
  8640                           ;dio.c: 21:   return SW_OFF;
  8641  01BF0C  0E00               	movlw	0
  8642  01BF0E  D00A               	goto	L5
  8643  01BF10                     l10108:
  8644                           
  8645                           ;dio.c: 23:  return S.button[i].sw;
  8646                           ;stkvar	_i @ sp[(0)+-1]
  8647  01BF10  0EFF               	movlw	-1
  8648  01BF12  50E3               	movf	plusw1,w,c
  8649  01BF14  0D05               	mullw	5
  8650  01BF16  0E54               	movlw	low _S
  8651  01BF18  24F3               	addwf	243,w,c
  8652  01BF1A  6ED9               	movwf	fsr2l,c
  8653  01BF1C  0E02               	movlw	high _S
  8654  01BF1E  20F4               	addwfc	prodh,w,c
  8655  01BF20  6EDA               	movwf	fsr2h,c
  8656  01BF22  50DF               	movf	indf2,w,c
  8657  01BF24                     L5:
  8658  01BF24  6E01               	movwf	btemp^0,c
  8659                           
  8660                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8661  01BF26  52E5               	movf	postdec1,f,c
  8662  01BF28  0012               	return		;funcret
  8663  01BF2A                     __end_of_get_switch:
  8664                           	opt callstack 0
  8665                           
  8666 ;; *************** function _esr_check *****************
  8667 ;; Defined at:
  8668 ;;		line 196 in file "bsoc.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  fsm             1  [STACK] const unsigned char 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  4  [STACK] float 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;Total ram usage:        0 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:   18
  8689 ;; This function calls:
  8690 ;;		_StartTimer
  8691 ;;		_TimerDone
  8692 ;;		___fldiv
  8693 ;;		___flsub
  8694 ;;		_conv_raw_result
  8695 ;;		_fabsf
  8696 ;;		_set_load_relay_one
  8697 ;;		_set_load_relay_two
  8698 ;;		_update_adc_result
  8699 ;; This function is called by:
  8700 ;;		_main
  8701 ;; This function uses a reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text22
  8705  017188                     __ptext22:
  8706                           	opt callstack 0
  8707  017188                     _esr_check:
  8708                           	opt callstack 12
  8709                           
  8710                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  8711                           ;stkvar	_fsm @ sp[(0)+-1]
  8712                           
  8713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8714                           ;incstack = 0
  8715  017188  0EFF               	movlw	-1
  8716  01718A  50E3               	movf	plusw1,w,c
  8717  01718C  B4D8               	btfsc	status,2,c
  8718  01718E  D149               	goto	l11216
  8719                           
  8720                           ;bsoc.c: 201:   esr_state = 0;
  8721  017190  0100               	movlb	0	; () banked
  8722  017192  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;bsoc.c: 202:   return -10.0;
  8726  017194  0E00               	movlw	0
  8727  017196  6E01               	movwf	btemp^0,c
  8728  017198  0E00               	movlw	0
  8729  01719A  6E02               	movwf	(btemp+1)^0,c
  8730  01719C  0E20               	movlw	32
  8731  01719E  6E03               	movwf	(btemp+2)^0,c
  8732  0171A0  0EC1               	movlw	193
  8733  0171A2  D15B               	goto	L6
  8734  0171A4                     l11148:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  8738  0171A4  0E10               	movlw	16
  8739  0171A6  6EE6               	movwf	postinc1,c
  8740  0171A8  0E27               	movlw	39
  8741  0171AA  6EE6               	movwf	postinc1,c
  8742  0171AC  0E0C               	movlw	12
  8743  0171AE  6EE6               	movwf	postinc1,c
  8744  0171B0  EC96  F0DD         	call	_StartTimer	;wreg free
  8745  0171B4                     l11150:
  8746                           
  8747                           ;bsoc.c: 208:   esr_state++;
  8748  0171B4  0100               	movlb	0	; () banked
  8749  0171B6  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8750                           
  8751                           ;bsoc.c: 209:   break;
  8752  0171B8  D149               	goto	l11218
  8753  0171BA                     l11152:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;bsoc.c: 214:   set_load_relay_one(0);
  8757  0171BA  0E00               	movlw	0
  8758  0171BC  6EE6               	movwf	postinc1,c
  8759  0171BE  EC7D  F0E2         	call	_set_load_relay_one	;wreg free
  8760                           
  8761                           ;bsoc.c: 215:   set_load_relay_two(0);
  8762  0171C2  0E00               	movlw	0
  8763  0171C4  6EE6               	movwf	postinc1,c
  8764  0171C6  EC75  F0E2         	call	_set_load_relay_two	;wreg free
  8765                           
  8766                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  8767  0171CA  0E0C               	movlw	12
  8768  0171CC  6EE6               	movwf	postinc1,c
  8769  0171CE  ECEB  F0DF         	call	_TimerDone	;wreg free
  8770  0171D2  5001               	movf	btemp^0,w,c
  8771  0171D4  B4D8               	btfsc	status,2,c
  8772  0171D6  D009               	goto	l11158
  8773                           
  8774                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8775  0171D8  0E10               	movlw	16
  8776  0171DA  6EE6               	movwf	postinc1,c
  8777  0171DC  0E27               	movlw	39
  8778  0171DE  6EE6               	movwf	postinc1,c
  8779  0171E0  0E0C               	movlw	12
  8780  0171E2  6EE6               	movwf	postinc1,c
  8781  0171E4  EC96  F0DD         	call	_StartTimer	;wreg free
  8782                           
  8783                           ;bsoc.c: 218:   } else {
  8784  0171E8  D006               	goto	l11162
  8785  0171EA                     l11158:
  8786                           
  8787                           ;bsoc.c: 219:    return -2.0;
  8788  0171EA  0E00               	movlw	0
  8789  0171EC  6E01               	movwf	btemp^0,c
  8790  0171EE  0E00               	movlw	0
  8791  0171F0  6E02               	movwf	(btemp+1)^0,c
  8792  0171F2  0E00               	movlw	0
  8793  0171F4  D066               	goto	L8
  8794  0171F6                     l11162:
  8795                           
  8796                           ;bsoc.c: 224:   update_adc_result();
  8797  0171F6  EC15  F0DE         	call	_update_adc_result	;wreg free
  8798                           
  8799                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8800  0171FA  0E00               	movlw	0
  8801  0171FC  6EE6               	movwf	postinc1,c
  8802  0171FE  0E04               	movlw	4
  8803  017200  6EE6               	movwf	postinc1,c
  8804  017202  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8805  017206  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8806  01720C  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8807  017212  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8808  017218  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8809  01721E  D7CA               	goto	l11150
  8810  017220                     l11168:
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;bsoc.c: 229:   set_load_relay_one(1);
  8814  017220  0E01               	movlw	1
  8815  017222  6EE6               	movwf	postinc1,c
  8816  017224  EC7D  F0E2         	call	_set_load_relay_one	;wreg free
  8817                           
  8818                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8819  017228  0E0C               	movlw	12
  8820  01722A  6EE6               	movwf	postinc1,c
  8821  01722C  ECEB  F0DF         	call	_TimerDone	;wreg free
  8822  017230  5001               	movf	btemp^0,w,c
  8823  017232  B4D8               	btfsc	status,2,c
  8824  017234  D009               	goto	l11174
  8825                           
  8826                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8827  017236  0E10               	movlw	16
  8828  017238  6EE6               	movwf	postinc1,c
  8829  01723A  0E27               	movlw	39
  8830  01723C  6EE6               	movwf	postinc1,c
  8831  01723E  0E0C               	movlw	12
  8832  017240  6EE6               	movwf	postinc1,c
  8833  017242  EC96  F0DD         	call	_StartTimer	;wreg free
  8834                           
  8835                           ;bsoc.c: 232:   } else {
  8836  017246  D006               	goto	l11178
  8837  017248                     l11174:
  8838                           
  8839                           ;bsoc.c: 233:    return -3.0;
  8840  017248  0E00               	movlw	0
  8841  01724A  6E01               	movwf	btemp^0,c
  8842  01724C  0E00               	movlw	0
  8843  01724E  6E02               	movwf	(btemp+1)^0,c
  8844  017250  0E40               	movlw	64
  8845  017252  D037               	goto	L8
  8846  017254                     l11178:
  8847                           
  8848                           ;bsoc.c: 236:   update_adc_result();
  8849  017254  EC15  F0DE         	call	_update_adc_result	;wreg free
  8850                           
  8851                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8852  017258  0E00               	movlw	0
  8853  01725A  6EE6               	movwf	postinc1,c
  8854  01725C  0E04               	movlw	4
  8855  01725E  6EE6               	movwf	postinc1,c
  8856  017260  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8857  017264  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8858  01726A  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8859  017270  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8860  017276  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8861                           
  8862                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8863  01727C  0E00               	movlw	0
  8864  01727E  6EE6               	movwf	postinc1,c
  8865  017280  0E00               	movlw	0
  8866  017282  6EE6               	movwf	postinc1,c
  8867  017284  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8868  017288  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8869  01728E  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8870  017294  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8871  01729A  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8872  0172A0  D789               	goto	l11150
  8873  0172A2                     l11186:
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;bsoc.c: 242:   set_load_relay_two(1);
  8877  0172A2  0E01               	movlw	1
  8878  0172A4  6EE6               	movwf	postinc1,c
  8879  0172A6  EC75  F0E2         	call	_set_load_relay_two	;wreg free
  8880                           
  8881                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8882  0172AA  0E0C               	movlw	12
  8883  0172AC  6EE6               	movwf	postinc1,c
  8884  0172AE  ECEB  F0DF         	call	_TimerDone	;wreg free
  8885  0172B2  5001               	movf	btemp^0,w,c
  8886  0172B4  A4D8               	btfss	status,2,c
  8887  0172B6  D008               	goto	l11194
  8888                           
  8889                           ;bsoc.c: 244:    return -4.0;
  8890  0172B8  0E00               	movlw	0
  8891  0172BA  6E01               	movwf	btemp^0,c
  8892  0172BC  0E00               	movlw	0
  8893  0172BE  6E02               	movwf	(btemp+1)^0,c
  8894  0172C0  0E80               	movlw	128
  8895  0172C2                     L8:
  8896  0172C2  6E03               	movwf	(btemp+2)^0,c
  8897  0172C4  0EC0               	movlw	192
  8898  0172C6  D0C9               	goto	L6
  8899  0172C8                     l11194:
  8900                           
  8901                           ;bsoc.c: 246:   update_adc_result();
  8902  0172C8  EC15  F0DE         	call	_update_adc_result	;wreg free
  8903                           
  8904                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8905  0172CC  0E00               	movlw	0
  8906  0172CE  6EE6               	movwf	postinc1,c
  8907  0172D0  0E04               	movlw	4
  8908  0172D2  6EE6               	movwf	postinc1,c
  8909  0172D4  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8910  0172D8  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8911  0172DE  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8912  0172E4  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8913  0172EA  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8914                           
  8915                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8916  0172F0  0E00               	movlw	0
  8917  0172F2  6EE6               	movwf	postinc1,c
  8918  0172F4  0E00               	movlw	0
  8919  0172F6  6EE6               	movwf	postinc1,c
  8920  0172F8  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8921  0172FC  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8922  017302  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8923  017308  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8924  01730E  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8925                           
  8926                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8927  017314  EE22  F011         	lfsr	2,_C+274	;volatile
  8928  017318  006F FF7B FFE6     	movff	postinc2,postinc1
  8929  01731E  006F FF7B FFE6     	movff	postinc2,postinc1
  8930  017324  006F FF7B FFE6     	movff	postinc2,postinc1
  8931  01732A  006F FF7B FFE6     	movff	postinc2,postinc1
  8932  017330  EE22  F00D         	lfsr	2,_C+270	;volatile
  8933  017334  006F FF7B FFE6     	movff	postinc2,postinc1
  8934  01733A  006F FF7B FFE6     	movff	postinc2,postinc1
  8935  017340  006F FF7B FFE6     	movff	postinc2,postinc1
  8936  017346  006F FF7B FFE6     	movff	postinc2,postinc1
  8937  01734C  ECF0  F0DC         	call	___flsub	;wreg free
  8938  017350  0060  F007  FFE6   	movff	btemp,postinc1
  8939  017356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8940  01735C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8941  017362  0060  F013  FFE6   	movff	btemp+3,postinc1
  8942  017368  EE22  F01D         	lfsr	2,_C+286	;volatile
  8943  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  8944  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  8945  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  8946  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  8947  017384  EE22  F019         	lfsr	2,_C+282	;volatile
  8948  017388  006F FF7B FFE6     	movff	postinc2,postinc1
  8949  01738E  006F FF7B FFE6     	movff	postinc2,postinc1
  8950  017394  006F FF7B FFE6     	movff	postinc2,postinc1
  8951  01739A  006F FF7B FFE6     	movff	postinc2,postinc1
  8952  0173A0  ECF0  F0DC         	call	___flsub	;wreg free
  8953  0173A4  0060  F007  FFE6   	movff	btemp,postinc1
  8954  0173AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8955  0173B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8956  0173B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8957  0173BC  ECD8  F0A6         	call	___fldiv	;wreg free
  8958  0173C0  0060  F007  FFE6   	movff	btemp,postinc1
  8959  0173C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8960  0173CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8961  0173D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8962  0173D8  ECA9  F0D4         	call	_fabsf	;wreg free
  8963  0173DC  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8964  0173E2  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8965  0173E8  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8966  0173EE  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8967                           
  8968                           ;bsoc.c: 251:   set_load_relay_one(0);
  8969  0173F4  0E00               	movlw	0
  8970  0173F6  6EE6               	movwf	postinc1,c
  8971  0173F8  EC7D  F0E2         	call	_set_load_relay_one	;wreg free
  8972                           
  8973                           ;bsoc.c: 252:   set_load_relay_two(0);
  8974  0173FC  0E00               	movlw	0
  8975  0173FE  6EE6               	movwf	postinc1,c
  8976  017400  EC75  F0E2         	call	_set_load_relay_two	;wreg free
  8977                           
  8978                           ;bsoc.c: 253:   esr_state = 0;
  8979  017404  0100               	movlb	0	; () banked
  8980  017406  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;bsoc.c: 254:   return C.esr;
  8984  017408  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8985  01740E  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8986  017414  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8987  01741A  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8988  017420  D01D               	goto	l2165
  8989  017422                     l11216:
  8990  017422  0100               	movlb	0	; () banked
  8991  017424  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8992  017426  6E0B               	movwf	(btemp+10)^0,c
  8993  017428  6A0C               	clrf	(btemp+11)^0,c
  8994                           
  8995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8996                           ; Switch size 1, requested type "simple"
  8997                           ; Number of cases is 1, Range of values is 0 to 0
  8998                           ; switch strategies available:
  8999                           ; Name         Instructions Cycles
  9000                           ; simple_byte            4     3 (average)
  9001                           ;	Chosen strategy is simple_byte
  9002  01742A  500C               	movf	(btemp+11)^0,w,c
  9003  01742C  0A00               	xorlw	0	; case 0
  9004  01742E  A4D8               	btfss	status,2,c
  9005  017430  D00D               	goto	l11218
  9006                           
  9007                           ; BSR set to: 0
  9008                           ; Switch size 1, requested type "simple"
  9009                           ; Number of cases is 4, Range of values is 0 to 3
  9010                           ; switch strategies available:
  9011                           ; Name         Instructions Cycles
  9012                           ; simple_byte           13     7 (average)
  9013                           ;	Chosen strategy is simple_byte
  9014  017432  500B               	movf	(btemp+10)^0,w,c
  9015  017434  0A00               	xorlw	0	; case 0
  9016  017436  B4D8               	btfsc	status,2,c
  9017  017438  D6B5               	goto	l11148
  9018  01743A  0A01               	xorlw	1	; case 1
  9019  01743C  B4D8               	btfsc	status,2,c
  9020  01743E  D6BD               	goto	l11152
  9021  017440  0A03               	xorlw	3	; case 2
  9022  017442  B4D8               	btfsc	status,2,c
  9023  017444  D6ED               	goto	l11168
  9024  017446  0A01               	xorlw	1	; case 3
  9025  017448  B4D8               	btfsc	status,2,c
  9026  01744A  D72B               	goto	l11186
  9027  01744C                     l11218:
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;bsoc.c: 259:  return -1.0;
  9031  01744C  0E00               	movlw	0
  9032  01744E  6E01               	movwf	btemp^0,c
  9033  017450  0E00               	movlw	0
  9034  017452  6E02               	movwf	(btemp+1)^0,c
  9035  017454  0E80               	movlw	128
  9036  017456  6E03               	movwf	(btemp+2)^0,c
  9037  017458  0EBF               	movlw	191
  9038  01745A                     L6:
  9039  01745A  6E04               	movwf	(btemp+3)^0,c
  9040  01745C                     l2165:
  9041                           
  9042                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9043  01745C  52E5               	movf	postdec1,f,c
  9044  01745E  0012               	return		;funcret
  9045  017460                     __end_of_esr_check:
  9046                           	opt callstack 0
  9047                           
  9048 ;; *************** function _update_adc_result *****************
  9049 ;; Defined at:
  9050 ;;		line 98 in file "daq.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1  [STACK] _Bool 
  9057 ;; Registers used:
  9058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;Total ram usage:        0 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:   17
  9071 ;; This function calls:
  9072 ;;		_StartTimer
  9073 ;;		_TimerDone
  9074 ;;		_check_adc_scan
  9075 ;;		_clear_adc_scan
  9076 ;;		_start_adc_scan
  9077 ;; This function is called by:
  9078 ;;		_esr_check
  9079 ;; This function uses a reentrant model
  9080 ;;
  9081                           
  9082                           	psect	text23
  9083  01BC2A                     __ptext23:
  9084                           	opt callstack 0
  9085  01BC2A                     _update_adc_result:
  9086                           	opt callstack 12
  9087                           
  9088                           ;daq.c: 100:  if (R.done) {
  9089                           
  9090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9091                           ;incstack = 0
  9092  01BC2A  0100               	movlb	0	; () banked
  9093  01BC2C  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9094  01BC2E  B4D8               	btfsc	status,2,c
  9095  01BC30  0012               	return	
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;daq.c: 101:   clear_adc_scan();
  9099  01BC32  ECE9  F0E2         	call	_clear_adc_scan	;wreg free
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;daq.c: 102:   start_adc_scan();
  9103  01BC36  EC0C  F0DA         	call	_start_adc_scan	;wreg free
  9104                           
  9105                           ;daq.c: 103:   StartTimer(TMR_ADC, 200);
  9106  01BC3A  0EC8               	movlw	200
  9107  01BC3C  6EE6               	movwf	postinc1,c
  9108  01BC3E  0E00               	movlw	0
  9109  01BC40  6EE6               	movwf	postinc1,c
  9110  01BC42  0E01               	movlw	1
  9111  01BC44  6EE6               	movwf	postinc1,c
  9112  01BC46  EC96  F0DD         	call	_StartTimer	;wreg free
  9113  01BC4A                     l10688:
  9114  01BC4A  0E01               	movlw	1
  9115  01BC4C  6EE6               	movwf	postinc1,c
  9116  01BC4E  ECEB  F0DF         	call	_TimerDone	;wreg free
  9117  01BC52  5001               	movf	btemp^0,w,c
  9118  01BC54  A4D8               	btfss	status,2,c
  9119  01BC56  0012               	return	
  9120  01BC58  ECD9  F0E2         	call	_check_adc_scan	;wreg free
  9121  01BC5C  5001               	movf	btemp^0,w,c
  9122  01BC5E  A4D8               	btfss	status,2,c
  9123  01BC60  0012               	return	
  9124  01BC62  D7F3               	goto	l10688
  9125  01BC64                     __end_of_update_adc_result:
  9126                           	opt callstack 0
  9127                           
  9128 ;; *************** function _start_adc_scan *****************
  9129 ;; Defined at:
  9130 ;;		line 59 in file "daq.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1  [STACK] _Bool 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 1/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:   16
  9151 ;; This function calls:
  9152 ;;		_ADCC_DischargeSampleCapacitor
  9153 ;;		_ADCC_SetADIInterruptHandler
  9154 ;;		_ADCC_SetADTIInterruptHandler
  9155 ;;		_ADCC_StartConversion
  9156 ;; This function is called by:
  9157 ;;		_main
  9158 ;;		_update_adc_result
  9159 ;; This function uses a reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text24
  9163  01B418                     __ptext24:
  9164                           	opt callstack 0
  9165  01B418                     _start_adc_scan:
  9166                           	opt callstack 14
  9167                           
  9168                           ;daq.c: 61:  if (R.done)
  9169                           
  9170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9171                           ;incstack = 0
  9172  01B418  0100               	movlb	0	; () banked
  9173  01B41A  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9174  01B41C  A4D8               	btfss	status,2,c
  9175  01B41E  0012               	return	
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;daq.c: 64:  R.scan_index = 0;
  9179  01B420  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;daq.c: 65:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9183  01B422  013A               	movlb	58	; () banked
  9184  01B424  5140               	movf	64,w,b	;volatile
  9185  01B426  006E F940  F001    	movff	14928,btemp	;volatile
  9186  01B42C  6A02               	clrf	(btemp+1)^0,c
  9187  01B42E  0060  F004  F002   	movff	btemp,btemp+1
  9188  01B434  6A01               	clrf	btemp^0,c
  9189  01B436  2601               	addwf	btemp^0,f,c
  9190  01B438  0E00               	movlw	0
  9191  01B43A  2202               	addwfc	(btemp+1)^0,f,c
  9192  01B43C  0E77               	movlw	119
  9193  01B43E  1401               	andwf	btemp^0,w,c
  9194  01B440  0100               	movlb	0	; () banked
  9195  01B442  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9196  01B444  0E3C               	movlw	60
  9197  01B446  1402               	andwf	(btemp+1)^0,w,c
  9198  01B448  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;daq.c: 66:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9202  01B44A  0EFA               	movlw	low _adc_int_handler
  9203  01B44C  6EE6               	movwf	postinc1,c
  9204  01B44E  0EC5               	movlw	high _adc_int_handler
  9205  01B450  6EE6               	movwf	postinc1,c
  9206  01B452  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9207  01B454  6EE6               	movwf	postinc1,c
  9208  01B456  ECB3  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9209                           
  9210                           ;daq.c: 67:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9211  01B45A  0E92               	movlw	low _adc_int_t_handler
  9212  01B45C  6EE6               	movwf	postinc1,c
  9213  01B45E  0EB0               	movlw	high _adc_int_t_handler
  9214  01B460  6EE6               	movwf	postinc1,c
  9215  01B462  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9216  01B464  6EE6               	movwf	postinc1,c
  9217  01B466  EC9F  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9218                           
  9219                           ;daq.c: 68:  ADCC_DischargeSampleCapacitor();
  9220  01B46A  ECD5  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9221                           
  9222                           ; BSR set to: 62
  9223                           ;daq.c: 69:  ADCC_StartConversion(R.scan_index & 0xf);
  9224  01B46E  0100               	movlb	0	; () banked
  9225  01B470  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9226  01B472  0B0F               	andlw	15
  9227  01B474  6EE6               	movwf	postinc1,c
  9228  01B476  EC6C  F0E2         	call	_ADCC_StartConversion	;wreg free
  9229                           
  9230                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9231  01B47A  0012               	return		;funcret
  9232  01B47C                     __end_of_start_adc_scan:
  9233                           	opt callstack 0
  9234                           
  9235 ;; *************** function _ADCC_StartConversion *****************
  9236 ;; Defined at:
  9237 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  channel         1  [STACK] enum E16136
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1  [STACK] void 
  9244 ;; Registers used:
  9245 ;;		fsr1l, fsr1h
  9246 ;; Tracked objects:
  9247 ;;		On entry : 3F/0
  9248 ;;		On exit  : 3F/3E
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9255 ;;Total ram usage:        0 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; Hardware stack levels required when called:   15
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_start_adc_scan
  9262 ;;		_adc_int_t_handler
  9263 ;; This function uses a reentrant model
  9264 ;;
  9265                           
  9266                           	psect	text25
  9267  01C4D8                     __ptext25:
  9268                           	opt callstack 0
  9269  01C4D8                     _ADCC_StartConversion:
  9270                           	opt callstack 0
  9271                           
  9272                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9273                           ;stkvar	_channel @ sp[(0)+-1]
  9274                           
  9275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9276                           ;incstack = 0
  9277 ;; hardware stack exceeded
  9278  01C4D8  0EFF               	movlw	-1
  9279  01C4DA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9280                           
  9281                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9282  01C4E0  013E               	movlb	62	; () banked
  9283  01C4E2  8FF8               	bsf	248,7,b	;volatile
  9284                           
  9285                           ; BSR set to: 62
  9286                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9287  01C4E4  81F8               	bsf	248,0,b	;volatile
  9288                           
  9289                           ; BSR set to: 62
  9290                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9291  01C4E6  52E5               	movf	postdec1,f,c
  9292  01C4E8  0012               	return		;funcret
  9293  01C4EA                     __end_of_ADCC_StartConversion:
  9294                           	opt callstack 0
  9295                           
  9296 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9297 ;; Defined at:
  9298 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;		None
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;		None
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1  [STACK] void 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 3F/3E
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9316 ;;Total ram usage:        0 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:   15
  9319 ;; This function calls:
  9320 ;;		Nothing
  9321 ;; This function is called by:
  9322 ;;		_start_adc_scan
  9323 ;;		_adc_int_t_handler
  9324 ;; This function uses a reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text26
  9328  01C5AA                     __ptext26:
  9329                           	opt callstack 0
  9330  01C5AA                     _ADCC_DischargeSampleCapacitor:
  9331                           	opt callstack 0
  9332                           
  9333                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9334                           
  9335                           ; BSR set to: 62
  9336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9337                           ;incstack = 0
  9338 ;; hardware stack exceeded
  9339  01C5AA  0E3B               	movlw	59
  9340  01C5AC  013E               	movlb	62	; () banked
  9341  01C5AE  6FF1               	movwf	241,b	;volatile
  9342                           
  9343                           ; BSR set to: 62
  9344                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9345  01C5B0  0012               	return		;funcret
  9346  01C5B2                     __end_of_ADCC_DischargeSampleCapacitor:
  9347                           	opt callstack 0
  9348                           
  9349 ;; *************** function _clear_adc_scan *****************
  9350 ;; Defined at:
  9351 ;;		line 90 in file "daq.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1  [STACK] void 
  9358 ;; Registers used:
  9359 ;;		None
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 3F/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used:    1
  9371 ;; Hardware stack levels required when called:   15
  9372 ;; This function calls:
  9373 ;;		Nothing
  9374 ;; This function is called by:
  9375 ;;		_main
  9376 ;;		_update_adc_result
  9377 ;; This function uses a reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text27
  9381  01C5D2                     __ptext27:
  9382                           	opt callstack 0
  9383  01C5D2                     _clear_adc_scan:
  9384                           	opt callstack 13
  9385                           
  9386                           ;daq.c: 92:  R.done = 0;
  9387                           
  9388                           ; BSR set to: 62
  9389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9390                           ;incstack = 0
  9391  01C5D2  0100               	movlb	0	; () banked
  9392  01C5D4  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9393                           
  9394                           ; BSR set to: 0
  9395                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9396  01C5D6  0012               	return		;funcret
  9397  01C5D8                     __end_of_clear_adc_scan:
  9398                           	opt callstack 0
  9399                           
  9400 ;; *************** function _check_adc_scan *****************
  9401 ;; Defined at:
  9402 ;;		line 82 in file "daq.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1  [STACK] _Bool 
  9409 ;; Registers used:
  9410 ;;		btemp
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/1
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;Total ram usage:        0 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:   15
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;;		_update_adc_result
  9428 ;; This function uses a reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text28
  9432  01C5B2                     __ptext28:
  9433                           	opt callstack 0
  9434  01C5B2                     _check_adc_scan:
  9435                           	opt callstack 13
  9436                           
  9437                           ;daq.c: 84:  return R.done;
  9438                           
  9439                           ; BSR set to: 0
  9440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9441                           ;incstack = 0
  9442  01C5B2  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9443                           
  9444                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9445  01C5B8  0012               	return		;funcret
  9446  01C5BA                     __end_of_check_adc_scan:
  9447                           	opt callstack 0
  9448                           
  9449 ;; *************** function _set_load_relay_two *****************
  9450 ;; Defined at:
  9451 ;;		line 130 in file "mbmc.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  mode            1  [STACK] const _Bool 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1  [STACK] void 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr1l, fsr1h
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;Total ram usage:        0 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:   15
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_main
  9476 ;;		_esr_check
  9477 ;; This function uses a reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text29
  9481  01C4EA                     __ptext29:
  9482                           	opt callstack 0
  9483  01C4EA                     _set_load_relay_two:
  9484                           	opt callstack 15
  9485                           
  9486                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9487                           ;stkvar	_mode @ sp[(0)+-1]
  9488                           
  9489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9490                           ;incstack = 0
  9491  01C4EA  0EFF               	movlw	-1
  9492  01C4EC  B0E3               	btfsc	plusw1,0,c
  9493  01C4EE  D002               	bra	u9585
  9494  01C4F0  9ABD               	bcf	189,5,c	;volatile
  9495  01C4F2  D001               	bra	u9586
  9496  01C4F4                     u9585:
  9497  01C4F4  8ABD               	bsf	189,5,c	;volatile
  9498  01C4F6                     u9586:
  9499                           
  9500                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9501  01C4F6  52E5               	movf	postdec1,f,c
  9502  01C4F8  0012               	return		;funcret
  9503  01C4FA                     __end_of_set_load_relay_two:
  9504                           	opt callstack 0
  9505                           
  9506 ;; *************** function _set_load_relay_one *****************
  9507 ;; Defined at:
  9508 ;;		line 125 in file "mbmc.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  mode            1  [STACK] const _Bool 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1  [STACK] void 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr1l, fsr1h
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9526 ;;Total ram usage:        0 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:   15
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_main
  9533 ;;		_esr_check
  9534 ;; This function uses a reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text30
  9538  01C4FA                     __ptext30:
  9539                           	opt callstack 0
  9540  01C4FA                     _set_load_relay_one:
  9541                           	opt callstack 15
  9542                           
  9543                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9544                           ;stkvar	_mode @ sp[(0)+-1]
  9545                           
  9546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9547                           ;incstack = 0
  9548  01C4FA  0EFF               	movlw	-1
  9549  01C4FC  B0E3               	btfsc	plusw1,0,c
  9550  01C4FE  D002               	bra	u9575
  9551  01C500  98BD               	bcf	189,4,c	;volatile
  9552  01C502  D001               	bra	u9576
  9553  01C504                     u9575:
  9554  01C504  88BD               	bsf	189,4,c	;volatile
  9555  01C506                     u9576:
  9556                           
  9557                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9558  01C506  52E5               	movf	postdec1,f,c
  9559  01C508  0012               	return		;funcret
  9560  01C50A                     __end_of_set_load_relay_one:
  9561                           	opt callstack 0
  9562                           
  9563 ;; *************** function _eaDogM_WriteCommand *****************
  9564 ;; Defined at:
  9565 ;;		line 385 in file "eadog.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  cmd             1  [STACK] const unsigned char 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1  [STACK] void 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9574 ;; Tracked objects:
  9575 ;;		On entry : 3F/3D
  9576 ;;		On exit  : 3F/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9583 ;;Total ram usage:        0 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:   26
  9586 ;; This function calls:
  9587 ;;		_send_lcd_cmd_dma
  9588 ;; This function is called by:
  9589 ;;		_main
  9590 ;; This function uses a reentrant model
  9591 ;;
  9592                           
  9593                           	psect	text31
  9594  01C52A                     __ptext31:
  9595                           	opt callstack 0
  9596  01C52A                     _eaDogM_WriteCommand:
  9597                           	opt callstack 4
  9598                           
  9599                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9600                           ;stkvar	_cmd @ sp[(0)+-1]
  9601                           
  9602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9603                           ;incstack = 0
  9604  01C52A  0EFF               	movlw	-1
  9605  01C52C  50E3               	movf	plusw1,w,c
  9606  01C52E  6EE6               	movwf	postinc1,c
  9607  01C530  ECD2  F0E1         	call	_send_lcd_cmd_dma	;wreg free
  9608                           
  9609                           ; BSR set to: 0
  9610                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9611  01C534  52E5               	movf	postdec1,f,c
  9612  01C536  0012               	return		;funcret
  9613  01C538                     __end_of_eaDogM_WriteCommand:
  9614                           	opt callstack 0
  9615                           
  9616 ;; *************** function _convert_adc_data *****************
  9617 ;; Defined at:
  9618 ;;		line 51 in file "mbmc.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;		None
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  i               1  [STACK] unsigned char 
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1  [STACK] void 
  9625 ;; Registers used:
  9626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/1
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9636 ;;Total ram usage:        0 bytes
  9637 ;; Hardware stack levels used:    1
  9638 ;; Hardware stack levels required when called:   18
  9639 ;; This function calls:
  9640 ;;		_conv_raw_result
  9641 ;;		_lp_filter
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;; This function uses a reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text32
  9648  01A7E4                     __ptext32:
  9649                           	opt callstack 0
  9650  01A7E4                     _convert_adc_data:
  9651                           	opt callstack 0
  9652                           
  9653                           ; BSR set to: 0
  9654                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9655  01A7E4  52E6               	movf	postinc1,f,c
  9656                           
  9657                           ;mbmc.c: 53:  uint8_t i = 0;
  9658                           ;stkvar	_i @ sp[(-1)+0]
  9659                           
  9660                           ;incstack = 0
  9661  01A7E6  0EFF               	movlw	-1
  9662  01A7E8  6AE3               	clrf	plusw1,c
  9663  01A7EA                     l11230:
  9664                           
  9665                           ;mbmc.c: 56:   if (V.calib) {
  9666  01A7EA  0101               	movlb	1	; () banked
  9667  01A7EC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9668  01A7EE  B4D8               	btfsc	status,2,c
  9669  01A7F0  D01B               	goto	l11234
  9670                           
  9671                           ; BSR set to: 1
  9672                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9673  01A7F2  0E01               	movlw	1
  9674  01A7F4  6EE6               	movwf	postinc1,c
  9675                           
  9676                           ;stkvar	_i @ sp[(-2)+0]
  9677  01A7F6  0EFE               	movlw	-2
  9678  01A7F8  50E3               	movf	plusw1,w,c
  9679  01A7FA  6EE6               	movwf	postinc1,c
  9680  01A7FC  0E01               	movlw	1
  9681  01A7FE  6EE6               	movwf	postinc1,c
  9682                           
  9683                           ;stkvar	_i @ sp[(-4)+0]
  9684  01A800  0EFC               	movlw	-4
  9685  01A802  50E3               	movf	plusw1,w,c
  9686  01A804  6EE6               	movwf	postinc1,c
  9687  01A806  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9688  01A80A  0060  F007  FFE6   	movff	btemp,postinc1
  9689  01A810  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9690  01A816  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9691  01A81C  0060  F013  FFE6   	movff	btemp+3,postinc1
  9692  01A822  EC55  F0C4         	call	_lp_filter	;wreg free
  9693  01A826  D01A               	goto	L9
  9694  01A828                     l11234:
  9695                           
  9696                           ; BSR set to: 1
  9697                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9698  01A828  0E00               	movlw	0
  9699  01A82A  6EE6               	movwf	postinc1,c
  9700                           
  9701                           ;stkvar	_i @ sp[(-2)+0]
  9702  01A82C  0EFE               	movlw	-2
  9703  01A82E  50E3               	movf	plusw1,w,c
  9704  01A830  6EE6               	movwf	postinc1,c
  9705  01A832  0E00               	movlw	0
  9706  01A834  6EE6               	movwf	postinc1,c
  9707                           
  9708                           ;stkvar	_i @ sp[(-4)+0]
  9709  01A836  0EFC               	movlw	-4
  9710  01A838  50E3               	movf	plusw1,w,c
  9711  01A83A  6EE6               	movwf	postinc1,c
  9712  01A83C  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9713  01A840  0060  F007  FFE6   	movff	btemp,postinc1
  9714  01A846  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9715  01A84C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9716  01A852  0060  F013  FFE6   	movff	btemp+3,postinc1
  9717  01A858  EC55  F0C4         	call	_lp_filter	;wreg free
  9718  01A85C                     L9:
  9719                           
  9720                           ;stkvar	_i @ sp[(-1)+0]
  9721  01A85C  0EFF               	movlw	-1
  9722  01A85E  50E3               	movf	plusw1,w,c
  9723  01A860  0D04               	mullw	4
  9724  01A862  0EFF               	movlw	low _C
  9725  01A864  24F3               	addwf	243,w,c
  9726  01A866  6ED9               	movwf	fsr2l,c
  9727  01A868  0E06               	movlw	high _C
  9728  01A86A  20F4               	addwfc	prodh,w,c
  9729  01A86C  6EDA               	movwf	fsr2h,c
  9730  01A86E  0060  F007  FFDE   	movff	btemp,postinc2
  9731  01A874  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9732  01A87A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9733  01A880  0060  F013  FFDE   	movff	btemp+3,postinc2
  9734                           
  9735                           ;mbmc.c: 61:  } while (++i < 16);
  9736                           ;stkvar	_i @ sp[(-1)+0]
  9737  01A886  0EFF               	movlw	-1
  9738  01A888  2AE3               	incf	plusw1,f,c
  9739  01A88A  0EFF               	movlw	-1
  9740  01A88C  006F FF8C  F001    	movff	plusw1,btemp
  9741  01A892  0E0F               	movlw	15
  9742  01A894  6401               	cpfsgt	btemp^0,c
  9743  01A896  D7A9               	goto	l11230
  9744                           
  9745                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9746  01A898  52E5               	movf	postdec1,f,c
  9747  01A89A  0012               	return		;funcret
  9748  01A89C                     __end_of_convert_adc_data:
  9749                           	opt callstack 0
  9750                           
  9751 ;; *************** function _clear_hid_pflags *****************
  9752 ;; Defined at:
  9753 ;;		line 51 in file "hid.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  h               2  [STACK] PTR struct H_data
  9756 ;;		 -> H(7), 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1  [STACK] void 
  9761 ;; Registers used:
  9762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9763 ;; Tracked objects:
  9764 ;;		On entry : 3E/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9772 ;;Total ram usage:        0 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:   15
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;; This function uses a reentrant model
  9780 ;;
  9781                           
  9782                           	psect	text33
  9783  01B954                     __ptext33:
  9784                           	opt callstack 0
  9785  01B954                     _clear_hid_pflags:
  9786                           	opt callstack 15
  9787                           
  9788                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9789                           ;stkvar	_h @ sp[(0)+-2]
  9790                           
  9791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9792                           ;incstack = 0
  9793  01B954  0EFE               	movlw	-2
  9794  01B956  006F FF8C  F00B    	movff	plusw1,btemp+10
  9795  01B95C  0EFF               	movlw	-1
  9796  01B95E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9797  01B964  0E03               	movlw	3
  9798  01B966  240B               	addwf	(btemp+10)^0,w,c
  9799  01B968  6ED9               	movwf	fsr2l,c
  9800  01B96A  0E00               	movlw	0
  9801  01B96C  200C               	addwfc	(btemp+11)^0,w,c
  9802  01B96E  6EDA               	movwf	fsr2h,c
  9803  01B970  0E00               	movlw	0
  9804  01B972  6EDF               	movwf	indf2,c
  9805                           
  9806                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9807                           ;stkvar	_h @ sp[(0)+-2]
  9808  01B974  0EFE               	movlw	-2
  9809  01B976  006F FF8C  F00B    	movff	plusw1,btemp+10
  9810  01B97C  0EFF               	movlw	-1
  9811  01B97E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9812  01B984  0E05               	movlw	5
  9813  01B986  240B               	addwf	(btemp+10)^0,w,c
  9814  01B988  6ED9               	movwf	fsr2l,c
  9815  01B98A  0E00               	movlw	0
  9816  01B98C  200C               	addwfc	(btemp+11)^0,w,c
  9817  01B98E  6EDA               	movwf	fsr2h,c
  9818  01B990  0E00               	movlw	0
  9819  01B992  6EDF               	movwf	indf2,c
  9820                           
  9821                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9822  01B994  52E5               	movf	postdec1,f,c
  9823  01B996  52E5               	movf	postdec1,f,c
  9824  01B998  0012               	return		;funcret
  9825  01B99A                     __end_of_clear_hid_pflags:
  9826                           	opt callstack 0
  9827                           
  9828 ;; *************** function _check_help *****************
  9829 ;; Defined at:
  9830 ;;		line 40 in file "mconfig.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  flipper         1  [STACK] const _Bool 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  estatus         1    0        _Bool 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1  [STACK] _Bool 
  9837 ;; Registers used:
  9838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9839 ;; Tracked objects:
  9840 ;;		On entry : 3F/1
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:   28
  9851 ;; This function calls:
  9852 ;;		_StartTimer
  9853 ;;		_TimerDone
  9854 ;;		_display_help
  9855 ;;		_display_info
  9856 ;;		_get_vterm_ptr
  9857 ;;		_help_button
  9858 ;;		_mode_lamp_bright
  9859 ;;		_mode_lamp_dim
  9860 ;;		_set_display_info
  9861 ;;		_set_temp_display_help
  9862 ;;		_set_vterm
  9863 ;;		_sprintf
  9864 ;;		_update_lcd
  9865 ;;		_vterm_dump
  9866 ;; This function is called by:
  9867 ;;		_main
  9868 ;; This function uses a reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text34
  9872  0182B8                     __ptext34:
  9873                           	opt callstack 0
  9874  0182B8                     _check_help:
  9875                           	opt callstack 2
  9876                           
  9877                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9878                           
  9879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9880                           ;incstack = 0
  9881  0182B8  EC32  F0DE         	call	_help_button	;wreg free
  9882  0182BC  5001               	movf	btemp^0,w,c
  9883  0182BE  B4D8               	btfsc	status,2,c
  9884  0182C0  D0D0               	goto	l13338
  9885  0182C2  ECDD  F0E2         	call	_display_info	;wreg free
  9886  0182C6  0401               	decf	btemp^0,w,c
  9887  0182C8  B4D8               	btfsc	status,2,c
  9888  0182CA  D0CB               	goto	l13338
  9889                           
  9890                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9891  0182CC  0EDC               	movlw	220
  9892  0182CE  6EE6               	movwf	postinc1,c
  9893  0182D0  0E05               	movlw	5
  9894  0182D2  6EE6               	movwf	postinc1,c
  9895  0182D4  0E0B               	movlw	11
  9896  0182D6  6EE6               	movwf	postinc1,c
  9897  0182D8  EC96  F0DD         	call	_StartTimer	;wreg free
  9898                           
  9899                           ;mconfig.c: 48:   if (V.debug)
  9900  0182DC  0101               	movlb	1	; () banked
  9901  0182DE  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9902                           
  9903                           ; BSR set to: 1
  9904                           ;mconfig.c: 49:    vterm_dump();
  9905  0182E0  EC4F  F0CC         	call	_vterm_dump	;wreg free
  9906                           
  9907                           ;mconfig.c: 51:   set_vterm(1);
  9908  0182E4  0E01               	movlw	1
  9909  0182E6  6EE6               	movwf	postinc1,c
  9910  0182E8  ECE1  F0E1         	call	_set_vterm	;wreg free
  9911                           
  9912                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9913  0182EC  ECDD  F0E2         	call	_display_info	;wreg free
  9914  0182F0  5001               	movf	btemp^0,w,c
  9915  0182F2  6EE6               	movwf	postinc1,c
  9916  0182F4  EC85  F0E2         	call	_set_temp_display_help	;wreg free
  9917                           
  9918                           ; BSR set to: 1
  9919                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9920  0182F8  0E01               	movlw	1
  9921  0182FA  6EE6               	movwf	postinc1,c
  9922  0182FC  ECF0  F0E1         	call	_set_display_info	;wreg free
  9923                           
  9924                           ;mconfig.c: 54:   if (flipper) {
  9925                           ;stkvar	_flipper @ sp[(0)+-1]
  9926  018300  0EFF               	movlw	-1
  9927  018302  50E3               	movf	plusw1,w,c
  9928  018304  B4D8               	btfsc	status,2,c
  9929  018306  D019               	goto	l13324
  9930                           
  9931                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9932  018308  0EB3               	movlw	low STR_45
  9933  01830A  6EE6               	movwf	postinc1,c
  9934  01830C  0EFF               	movlw	high STR_45
  9935  01830E  6EE6               	movwf	postinc1,c
  9936  018310  0E5D               	movlw	low STR_47
  9937  018312  6EE6               	movwf	postinc1,c
  9938  018314  0EFF               	movlw	high STR_47
  9939  018316  6EE6               	movwf	postinc1,c
  9940  018318  0E01               	movlw	1
  9941  01831A  6EE6               	movwf	postinc1,c
  9942  01831C  0E00               	movlw	0
  9943  01831E  6EE6               	movwf	postinc1,c
  9944  018320  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  9945  018324  0060  F007  FFE6   	movff	btemp,postinc1
  9946  01832A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9947  018330  0E06               	movlw	6
  9948  018332  6EE6               	movwf	postinc1,c
  9949  018334  ECA2  F0CF         	call	_sprintf	;wreg free
  9950                           
  9951                           ;mconfig.c: 56:   } else {
  9952  018338  D018               	goto	l1684
  9953  01833A                     l13324:
  9954                           
  9955                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9956  01833A  0EC9               	movlw	low STR_46
  9957  01833C  6EE6               	movwf	postinc1,c
  9958  01833E  0EFF               	movlw	high STR_46
  9959  018340  6EE6               	movwf	postinc1,c
  9960  018342  0E5D               	movlw	low STR_47
  9961  018344  6EE6               	movwf	postinc1,c
  9962  018346  0EFF               	movlw	high STR_47
  9963  018348  6EE6               	movwf	postinc1,c
  9964  01834A  0E01               	movlw	1
  9965  01834C  6EE6               	movwf	postinc1,c
  9966  01834E  0E00               	movlw	0
  9967  018350  6EE6               	movwf	postinc1,c
  9968  018352  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
  9969  018356  0060  F007  FFE6   	movff	btemp,postinc1
  9970  01835C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9971  018362  0E06               	movlw	6
  9972  018364  6EE6               	movwf	postinc1,c
  9973  018366  ECA2  F0CF         	call	_sprintf	;wreg free
  9974  01836A                     l1684:
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9978  01836A  0101               	movlb	1	; () banked
  9979  01836C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9980  01836E  32E8               	rrcf	wreg,f,c
  9981  018370  32E8               	rrcf	wreg,f,c
  9982  018372  0B03               	andlw	3
  9983  018374  0D24               	mullw	36
  9984  018376  0E12               	movlw	18
  9985  018378  26F3               	addwf	243,f,c
  9986  01837A  0E00               	movlw	0
  9987  01837C  22F4               	addwfc	244,f,c
  9988  01837E  0EB5               	movlw	low _T
  9989  018380  6E0B               	movwf	(btemp+10)^0,c
  9990  018382  0EFA               	movlw	high _T
  9991  018384  6E0C               	movwf	(btemp+11)^0,c
  9992  018386  50F3               	movf	243,w,c
  9993  018388  260B               	addwf	(btemp+10)^0,f,c
  9994  01838A  50F4               	movf	244,w,c
  9995  01838C  220C               	addwfc	(btemp+11)^0,f,c
  9996  01838E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9997  018394  0060  F033  FFE6   	movff	btemp+11,postinc1
  9998  01839A  0EBF               	movlw	low STR_49
  9999  01839C  6EE6               	movwf	postinc1,c
 10000  01839E  0EFF               	movlw	high STR_49
 10001  0183A0  6EE6               	movwf	postinc1,c
 10002  0183A2  0E01               	movlw	1
 10003  0183A4  6EE6               	movwf	postinc1,c
 10004  0183A6  0E01               	movlw	1
 10005  0183A8  6EE6               	movwf	postinc1,c
 10006  0183AA  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10007  0183AE  0060  F007  FFE6   	movff	btemp,postinc1
 10008  0183B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10009  0183BA  0E06               	movlw	6
 10010  0183BC  6EE6               	movwf	postinc1,c
 10011  0183BE  ECA2  F0CF         	call	_sprintf	;wreg free
 10012                           
 10013                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10014  0183C2  0101               	movlb	1	; () banked
 10015  0183C4  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10016  0183C6  32E8               	rrcf	wreg,f,c
 10017  0183C8  32E8               	rrcf	wreg,f,c
 10018  0183CA  0B03               	andlw	3
 10019  0183CC  0D24               	mullw	36
 10020  0183CE  0EB5               	movlw	low _T
 10021  0183D0  6E0B               	movwf	(btemp+10)^0,c
 10022  0183D2  0EFA               	movlw	high _T
 10023  0183D4  6E0C               	movwf	(btemp+11)^0,c
 10024  0183D6  50F3               	movf	243,w,c
 10025  0183D8  260B               	addwf	(btemp+10)^0,f,c
 10026  0183DA  50F4               	movf	244,w,c
 10027  0183DC  220C               	addwfc	(btemp+11)^0,f,c
 10028  0183DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10029  0183E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10030  0183EA  0EBF               	movlw	low STR_49
 10031  0183EC  6EE6               	movwf	postinc1,c
 10032  0183EE  0EFF               	movlw	high STR_49
 10033  0183F0  6EE6               	movwf	postinc1,c
 10034  0183F2  0E01               	movlw	1
 10035  0183F4  6EE6               	movwf	postinc1,c
 10036  0183F6  0E02               	movlw	2
 10037  0183F8  6EE6               	movwf	postinc1,c
 10038  0183FA  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10039  0183FE  0060  F007  FFE6   	movff	btemp,postinc1
 10040  018404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10041  01840A  0E06               	movlw	6
 10042  01840C  6EE6               	movwf	postinc1,c
 10043  01840E  ECA2  F0CF         	call	_sprintf	;wreg free
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;mconfig.c: 61:   V.help_id++;
 10047  018412  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10048  018416  38DF               	swapf	223,w,c
 10049  018418  6E0C               	movwf	(btemp+11)^0,c
 10050  01841A  320C               	rrcf	(btemp+11)^0,f,c
 10051  01841C  300C               	rrcf	(btemp+11)^0,w,c
 10052  01841E  0B03               	andlw	3
 10053  018420  6E0C               	movwf	(btemp+11)^0,c
 10054  018422  2A0C               	incf	(btemp+11)^0,f,c
 10055  018424  3A0C               	swapf	(btemp+11)^0,f,c
 10056  018426  360C               	rlcf	(btemp+11)^0,f,c
 10057  018428  360C               	rlcf	(btemp+11)^0,f,c
 10058  01842A  50DF               	movf	223,w,c
 10059  01842C  180C               	xorwf	(btemp+11)^0,w,c
 10060  01842E  0B3F               	andlw	-193
 10061  018430  180C               	xorwf	(btemp+11)^0,w,c
 10062  018432  6EDF               	movwf	223,c
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10066  018434  0EB8               	movlw	184
 10067  018436  6EE6               	movwf	postinc1,c
 10068  018438  0E0B               	movlw	11
 10069  01843A  6EE6               	movwf	postinc1,c
 10070  01843C  0E09               	movlw	9
 10071  01843E  6EE6               	movwf	postinc1,c
 10072  018440  EC96  F0DD         	call	_StartTimer	;wreg free
 10073                           
 10074                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10075  018444  0EB8               	movlw	184
 10076  018446  6EE6               	movwf	postinc1,c
 10077  018448  0E0B               	movlw	11
 10078  01844A  6EE6               	movwf	postinc1,c
 10079  01844C  0E07               	movlw	7
 10080  01844E  6EE6               	movwf	postinc1,c
 10081  018450  EC96  F0DD         	call	_StartTimer	;wreg free
 10082                           
 10083                           ;mconfig.c: 64:   mode_lamp_bright();
 10084  018454  EC9C  F0E2         	call	_mode_lamp_bright	;wreg free
 10085                           
 10086                           ;mconfig.c: 65:   update_lcd(1);
 10087  018458  0E01               	movlw	1
 10088  01845A  6EE6               	movwf	postinc1,c
 10089  01845C  EC1A  F0CF         	call	_update_lcd	;wreg free
 10090                           
 10091                           ;mconfig.c: 67:  } else {
 10092  018460  D032               	goto	l1685
 10093  018462                     l13338:
 10094                           
 10095                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10096  018462  0E09               	movlw	9
 10097  018464  6EE6               	movwf	postinc1,c
 10098  018466  ECEB  F0DF         	call	_TimerDone	;wreg free
 10099  01846A  5001               	movf	btemp^0,w,c
 10100  01846C  B4D8               	btfsc	status,2,c
 10101  01846E  D02B               	goto	l1685
 10102                           
 10103                           ;mconfig.c: 69:    set_vterm(0);
 10104  018470  0E00               	movlw	0
 10105  018472  6EE6               	movwf	postinc1,c
 10106  018474  ECE1  F0E1         	call	_set_vterm	;wreg free
 10107                           
 10108                           ;mconfig.c: 70:    V.help = 0;
 10109  018478  0101               	movlb	1	; () banked
 10110  01847A  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10111                           
 10112                           ; BSR set to: 1
 10113                           ;mconfig.c: 71:    set_display_info(display_help());
 10114  01847C  ECE1  F0E2         	call	_display_help	;wreg free
 10115  018480  5001               	movf	btemp^0,w,c
 10116  018482  6EE6               	movwf	postinc1,c
 10117  018484  ECF0  F0E1         	call	_set_display_info	;wreg free
 10118                           
 10119                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10120  018488  0060  F673  FFE6   	movff	_V+149,postinc1
 10121  01848E  0060  F677  FFE6   	movff	_V+150,postinc1
 10122  018494  EC29  F0E2         	call	_mode_lamp_dim	;wreg free
 10123                           
 10124                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10125  018498  0E0B               	movlw	11
 10126  01849A  6EE6               	movwf	postinc1,c
 10127  01849C  ECEB  F0DF         	call	_TimerDone	;wreg free
 10128  0184A0  5001               	movf	btemp^0,w,c
 10129  0184A2  B4D8               	btfsc	status,2,c
 10130  0184A4  D010               	goto	l1685
 10131                           
 10132                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10133  0184A6  0101               	movlb	1	; () banked
 10134  0184A8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10135  0184AA  A4D8               	btfss	status,2,c
 10136  0184AC  D002               	goto	u12760
 10137  0184AE  0E01               	movlw	1
 10138  0184B0  D001               	goto	u12770
 10139  0184B2                     u12760:
 10140  0184B2  0E00               	movlw	0
 10141  0184B4                     u12770:
 10142  0184B4  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10143                           
 10144                           ; BSR set to: 1
 10145                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10146  0184B6  0EDC               	movlw	220
 10147  0184B8  6EE6               	movwf	postinc1,c
 10148  0184BA  0E05               	movlw	5
 10149  0184BC  6EE6               	movwf	postinc1,c
 10150  0184BE  0E0B               	movlw	11
 10151  0184C0  6EE6               	movwf	postinc1,c
 10152  0184C2  EC96  F0DD         	call	_StartTimer	;wreg free
 10153  0184C6                     l1685:
 10154                           
 10155                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10156  0184C6  52E5               	movf	postdec1,f,c
 10157  0184C8  0012               	return		;funcret
 10158  0184CA                     __end_of_check_help:
 10159                           	opt callstack 0
 10160                           
 10161 ;; *************** function _vterm_dump *****************
 10162 ;; Defined at:
 10163 ;;		line 121 in file "mconfig.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;		None
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1  [STACK] void 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10172 ;; Tracked objects:
 10173 ;;		On entry : 3F/1
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10181 ;;Total ram usage:        0 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:   27
 10184 ;; This function calls:
 10185 ;;		_WaitMs
 10186 ;;		_eaDogM_WriteStringAtPos
 10187 ;;		_get_vterm_ptr
 10188 ;;		_sprintf
 10189 ;;		_wait_lcd_done
 10190 ;; This function is called by:
 10191 ;;		_check_help
 10192 ;; This function uses a reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text35
 10196  01989E                     __ptext35:
 10197                           	opt callstack 0
 10198  01989E                     _vterm_dump:
 10199                           	opt callstack 2
 10200                           
 10201                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10202                           
 10203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10204                           ;incstack = 0
 10205  01989E  0E01               	movlw	1
 10206  0198A0  6EE6               	movwf	postinc1,c
 10207  0198A2  0E00               	movlw	0
 10208  0198A4  6EE6               	movwf	postinc1,c
 10209  0198A6  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10210  0198AA  0060  F007  FFE6   	movff	btemp,postinc1
 10211  0198B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10212  0198B6  0E00               	movlw	0
 10213  0198B8  6EE6               	movwf	postinc1,c
 10214  0198BA  0E00               	movlw	0
 10215  0198BC  6EE6               	movwf	postinc1,c
 10216  0198BE  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10217  0198C2  0060  F007  FFE6   	movff	btemp,postinc1
 10218  0198C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10219  0198CE  0EA4               	movlw	low STR_51
 10220  0198D0  6EE6               	movwf	postinc1,c
 10221  0198D2  0EFF               	movlw	high STR_51
 10222  0198D4  6EE6               	movwf	postinc1,c
 10223  0198D6  0E08               	movlw	low (_V+1)
 10224  0198D8  6EE6               	movwf	postinc1,c
 10225  0198DA  0E01               	movlw	high (_V+1)
 10226  0198DC  6EE6               	movwf	postinc1,c
 10227  0198DE  0E08               	movlw	8
 10228  0198E0  6EE6               	movwf	postinc1,c
 10229  0198E2  ECA2  F0CF         	call	_sprintf	;wreg free
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;mconfig.c: 124:  wait_lcd_done();
 10233  0198E6  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10237  0198EA  0E08               	movlw	low (_V+1)
 10238  0198EC  6EE6               	movwf	postinc1,c
 10239  0198EE  0E01               	movlw	high (_V+1)
 10240  0198F0  6EE6               	movwf	postinc1,c
 10241  0198F2  0E00               	movlw	0
 10242  0198F4  6EE6               	movwf	postinc1,c
 10243  0198F6  0E00               	movlw	0
 10244  0198F8  6EE6               	movwf	postinc1,c
 10245  0198FA  ECAB  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10246                           
 10247                           ; BSR set to: 59
 10248                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10249  0198FE  0E01               	movlw	1
 10250  019900  6EE6               	movwf	postinc1,c
 10251  019902  0E01               	movlw	1
 10252  019904  6EE6               	movwf	postinc1,c
 10253  019906  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10254  01990A  0060  F007  FFE6   	movff	btemp,postinc1
 10255  019910  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10256  019916  0E00               	movlw	0
 10257  019918  6EE6               	movwf	postinc1,c
 10258  01991A  0E01               	movlw	1
 10259  01991C  6EE6               	movwf	postinc1,c
 10260  01991E  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10261  019922  0060  F007  FFE6   	movff	btemp,postinc1
 10262  019928  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10263  01992E  0EA4               	movlw	low STR_51
 10264  019930  6EE6               	movwf	postinc1,c
 10265  019932  0EFF               	movlw	high STR_51
 10266  019934  6EE6               	movwf	postinc1,c
 10267  019936  0E08               	movlw	low (_V+1)
 10268  019938  6EE6               	movwf	postinc1,c
 10269  01993A  0E01               	movlw	high (_V+1)
 10270  01993C  6EE6               	movwf	postinc1,c
 10271  01993E  0E08               	movlw	8
 10272  019940  6EE6               	movwf	postinc1,c
 10273  019942  ECA2  F0CF         	call	_sprintf	;wreg free
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;mconfig.c: 127:  wait_lcd_done();
 10277  019946  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 10278                           
 10279                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10280  01994A  0E08               	movlw	low (_V+1)
 10281  01994C  6EE6               	movwf	postinc1,c
 10282  01994E  0E01               	movlw	high (_V+1)
 10283  019950  6EE6               	movwf	postinc1,c
 10284  019952  0E00               	movlw	0
 10285  019954  6EE6               	movwf	postinc1,c
 10286  019956  0E01               	movlw	1
 10287  019958  6EE6               	movwf	postinc1,c
 10288  01995A  ECAB  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10289                           
 10290                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10291  01995E  0E01               	movlw	1
 10292  019960  6EE6               	movwf	postinc1,c
 10293  019962  0E02               	movlw	2
 10294  019964  6EE6               	movwf	postinc1,c
 10295  019966  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10296  01996A  0060  F007  FFE6   	movff	btemp,postinc1
 10297  019970  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10298  019976  0E00               	movlw	0
 10299  019978  6EE6               	movwf	postinc1,c
 10300  01997A  0E02               	movlw	2
 10301  01997C  6EE6               	movwf	postinc1,c
 10302  01997E  EC68  F0DF         	call	_get_vterm_ptr	;wreg free
 10303  019982  0060  F007  FFE6   	movff	btemp,postinc1
 10304  019988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10305  01998E  0EA4               	movlw	low STR_51
 10306  019990  6EE6               	movwf	postinc1,c
 10307  019992  0EFF               	movlw	high STR_51
 10308  019994  6EE6               	movwf	postinc1,c
 10309  019996  0E08               	movlw	low (_V+1)
 10310  019998  6EE6               	movwf	postinc1,c
 10311  01999A  0E01               	movlw	high (_V+1)
 10312  01999C  6EE6               	movwf	postinc1,c
 10313  01999E  0E08               	movlw	8
 10314  0199A0  6EE6               	movwf	postinc1,c
 10315  0199A2  ECA2  F0CF         	call	_sprintf	;wreg free
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;mconfig.c: 130:  wait_lcd_done();
 10319  0199A6  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10323  0199AA  0E08               	movlw	low (_V+1)
 10324  0199AC  6EE6               	movwf	postinc1,c
 10325  0199AE  0E01               	movlw	high (_V+1)
 10326  0199B0  6EE6               	movwf	postinc1,c
 10327  0199B2  0E00               	movlw	0
 10328  0199B4  6EE6               	movwf	postinc1,c
 10329  0199B6  0E02               	movlw	2
 10330  0199B8  6EE6               	movwf	postinc1,c
 10331  0199BA  ECAB  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10332                           
 10333                           ; BSR set to: 59
 10334                           ;mconfig.c: 132:  WaitMs(3000);
 10335  0199BE  0EB8               	movlw	184
 10336  0199C0  6EE6               	movwf	postinc1,c
 10337  0199C2  0E0B               	movlw	11
 10338  0199C4  6EE6               	movwf	postinc1,c
 10339  0199C6  EC85  F0DE         	call	_WaitMs	;wreg free
 10340                           
 10341                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10342  0199CA  0012               	return		;funcret
 10343  0199CC                     __end_of_vterm_dump:
 10344                           	opt callstack 0
 10345                           
 10346 ;; *************** function _sprintf *****************
 10347 ;; Defined at:
 10348 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  s               2  [STACK] PTR unsigned char 
 10351 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10352 ;;  fmt             2  [STACK] PTR const unsigned char 
 10353 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 10354 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10355 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10356 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10357 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10358 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 10359 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10360 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10361 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10362 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10363 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10364 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10365 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10366 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10367 ;;		 -> STR_2(21), STR_1(21), 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;  f               6  [STACK] struct _IO_FILE
 10370 ;;  ap              2  [STACK] PTR void [1]
 10371 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10372 ;;  ret             2    0        int 
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  2  [STACK] int 
 10375 ;; Registers used:
 10376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/1
 10379 ;;		On exit  : 3F/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10386 ;;Total ram usage:        0 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:   23
 10389 ;; This function calls:
 10390 ;;		_vfprintf
 10391 ;; This function is called by:
 10392 ;;		_main
 10393 ;;		_check_help
 10394 ;;		_vterm_dump
 10395 ;;		_calc_bsoc
 10396 ;; This function uses a reentrant model
 10397 ;;
 10398                           
 10399                           	psect	text36
 10400  019F44                     __ptext36:
 10401                           	opt callstack 0
 10402  019F44                     _sprintf:
 10403                           	opt callstack 0
 10404                           
 10405                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10406  019F44  0E08               	movlw	8
 10407  019F46  26E1               	addwf	fsr1l,f,c
 10408  019F48  0E00               	movlw	0
 10409  019F4A  22E2               	addwfc	fsr1h,f,c
 10410                           
 10411                           ;incstack = 0
 10412 ;; hardware stack exceeded
 10413  019F4C  0EFE               	movlw	254
 10414  019F4E  6E0B               	movwf	(btemp+10)^0,c
 10415  019F50  0EFF               	movlw	255
 10416  019F52  6E0C               	movwf	(btemp+11)^0,c
 10417                           
 10418                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10419  019F54  0EF5               	movlw	245
 10420  019F56  24E1               	addwf	fsr1l,w,c
 10421  019F58  6E09               	movwf	(btemp+8)^0,c
 10422  019F5A  0EFF               	movlw	255
 10423  019F5C  20E2               	addwfc	fsr1h,w,c
 10424  019F5E  6E0A               	movwf	(btemp+9)^0,c
 10425  019F60  500B               	movf	(btemp+10)^0,w,c
 10426  019F62  2609               	addwf	(btemp+8)^0,f,c
 10427  019F64  500C               	movf	(btemp+11)^0,w,c
 10428  019F66  220A               	addwfc	(btemp+9)^0,f,c
 10429                           
 10430                           ;stkvar	_ap @ sp[(-8)+6]
 10431  019F68  0EFF               	movlw	-1
 10432  019F6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10433  019F70  0EFE               	movlw	-2
 10434  019F72  0060  F027  FFE3   	movff	btemp+8,plusw1
 10435                           
 10436                           ;stkvar	_s @ sp[(-8)+-3]
 10437  019F78  0EF5               	movlw	-11
 10438  019F7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10439  019F80  0EF6               	movlw	-10
 10440  019F82  006F FF8C  F00C    	movff	plusw1,btemp+11
 10441                           
 10442                           ;stkvar	_f @ sp[(-8)+0]
 10443  019F88  0EF9               	movlw	-7
 10444  019F8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10445  019F90  0EF8               	movlw	-8
 10446  019F92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10447                           
 10448                           ;stkvar	_f @ sp[(-8)+0]
 10449  019F98  0EFA               	movlw	250
 10450  019F9A  24E1               	addwf	fsr1l,w,c
 10451  019F9C  6ED9               	movwf	fsr2l,c
 10452  019F9E  0EFF               	movlw	255
 10453  019FA0  20E2               	addwfc	fsr1h,w,c
 10454  019FA2  6EDA               	movwf	fsr2h,c
 10455  019FA4  0E00               	movlw	0
 10456  019FA6  6EDE               	movwf	postinc2,c
 10457  019FA8  0E00               	movlw	0
 10458  019FAA  6EDD               	movwf	postdec2,c
 10459                           
 10460                           ;stkvar	_f @ sp[(-8)+0]
 10461  019FAC  0EFC               	movlw	252
 10462  019FAE  24E1               	addwf	fsr1l,w,c
 10463  019FB0  6ED9               	movwf	fsr2l,c
 10464  019FB2  0EFF               	movlw	255
 10465  019FB4  20E2               	addwfc	fsr1h,w,c
 10466  019FB6  6EDA               	movwf	fsr2h,c
 10467  019FB8  0E00               	movlw	0
 10468  019FBA  6EDE               	movwf	postinc2,c
 10469  019FBC  0E00               	movlw	0
 10470  019FBE  6EDD               	movwf	postdec2,c
 10471                           
 10472                           ;stkvar	_ap @ sp[(-8)+6]
 10473  019FC0  0EFE               	movlw	254
 10474  019FC2  24E1               	addwf	fsr1l,w,c
 10475  019FC4  6E01               	movwf	btemp^0,c
 10476  019FC6  0EFF               	movlw	255
 10477  019FC8  20E2               	addwfc	fsr1h,w,c
 10478  019FCA  6E02               	movwf	(btemp+1)^0,c
 10479  019FCC  0060  F007  FFE6   	movff	btemp,postinc1
 10480  019FD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10481                           
 10482                           ;stkvar	_fmt @ sp[(-10)+-5]
 10483  019FD8  0EF1               	movlw	-15
 10484  019FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 10485  019FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10486                           
 10487                           ;stkvar	_f @ sp[(-12)+0]
 10488  019FE6  0EF4               	movlw	244
 10489  019FE8  24E1               	addwf	fsr1l,w,c
 10490  019FEA  6E01               	movwf	btemp^0,c
 10491  019FEC  0EFF               	movlw	255
 10492  019FEE  20E2               	addwfc	fsr1h,w,c
 10493  019FF0  6E02               	movwf	(btemp+1)^0,c
 10494  019FF2  0060  F007  FFE6   	movff	btemp,postinc1
 10495  019FF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10496  019FFE  EC00  F0D5         	call	_vfprintf	;wreg free
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;stkvar	_f @ sp[(-8)+0]
 10500  01A002  0EFA               	movlw	250
 10501  01A004  24E1               	addwf	fsr1l,w,c
 10502  01A006  6ED9               	movwf	fsr2l,c
 10503  01A008  0EFF               	movlw	255
 10504  01A00A  20E2               	addwfc	fsr1h,w,c
 10505  01A00C  6EDA               	movwf	fsr2h,c
 10506  01A00E  006F FF78  F00B    	movff	postinc2,btemp+10
 10507  01A014  006F FF74  F00C    	movff	postdec2,btemp+11
 10508                           
 10509                           ;stkvar	_s @ sp[(-8)+-3]
 10510  01A01A  0EF5               	movlw	-11
 10511  01A01C  006F FF8C  F009    	movff	plusw1,btemp+8
 10512  01A022  0EF6               	movlw	-10
 10513  01A024  006F FF8C  F00A    	movff	plusw1,btemp+9
 10514  01A02A  500B               	movf	(btemp+10)^0,w,c
 10515  01A02C  2409               	addwf	(btemp+8)^0,w,c
 10516  01A02E  6ED9               	movwf	fsr2l,c
 10517  01A030  500C               	movf	(btemp+11)^0,w,c
 10518  01A032  200A               	addwfc	(btemp+9)^0,w,c
 10519  01A034  6EDA               	movwf	fsr2h,c
 10520  01A036  0E00               	movlw	0
 10521  01A038  6EDF               	movwf	indf2,c
 10522                           
 10523                           ; BSR set to: 0
 10524                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
 10525  01A03A  0EF8               	movlw	248
 10526  01A03C  26E1               	addwf	fsr1l,f,c
 10527  01A03E  0EFF               	movlw	255
 10528  01A040  22E2               	addwfc	fsr1h,f,c
 10529  01A042  52E5               	movf	postdec1,f,c
 10530  01A044  50E7               	movf	indf1,w,c
 10531  01A046  5EE1               	subwf	fsr1l,f,c
 10532  01A048  0E00               	movlw	0
 10533  01A04A  5AE2               	subwfb	fsr1h,f,c
 10534  01A04C  0012               	return		;funcret
 10535  01A04E                     __end_of_sprintf:
 10536                           	opt callstack 0
 10537                           
 10538 ;; *************** function _get_vterm_ptr *****************
 10539 ;; Defined at:
 10540 ;;		line 116 in file "mconfig.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  line            1  [STACK] const unsigned char 
 10543 ;;  vterm           1  [STACK] const unsigned char 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  2  [STACK] PTR unsigned char 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/1
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10559 ;;Total ram usage:        0 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:   15
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_main
 10566 ;;		_check_help
 10567 ;;		_vterm_dump
 10568 ;; This function uses a reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text37
 10572  01BED0                     __ptext37:
 10573                           	opt callstack 0
 10574  01BED0                     _get_vterm_ptr:
 10575                           	opt callstack 15
 10576                           
 10577                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10578                           ;stkvar	_vterm @ sp[(0)+-2]
 10579                           
 10580                           ; BSR set to: 0
 10581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10582                           ;incstack = 0
 10583  01BED0  0EFE               	movlw	-2
 10584  01BED2  50E3               	movf	plusw1,w,c
 10585  01BED4  0B03               	andlw	3
 10586  01BED6  0D78               	mullw	120
 10587  01BED8  0E2A               	movlw	low _D
 10588  01BEDA  6E01               	movwf	btemp^0,c
 10589  01BEDC  0E08               	movlw	high _D
 10590  01BEDE  6E02               	movwf	(btemp+1)^0,c
 10591  01BEE0  50F3               	movf	243,w,c
 10592  01BEE2  2601               	addwf	btemp^0,f,c
 10593  01BEE4  50F4               	movf	244,w,c
 10594  01BEE6  2202               	addwfc	(btemp+1)^0,f,c
 10595                           
 10596                           ;stkvar	_line @ sp[(0)+-1]
 10597  01BEE8  0EFF               	movlw	-1
 10598  01BEEA  50E3               	movf	plusw1,w,c
 10599  01BEEC  0B03               	andlw	3
 10600  01BEEE  0D28               	mullw	40
 10601  01BEF0  50F3               	movf	243,w,c
 10602  01BEF2  2601               	addwf	btemp^0,f,c
 10603  01BEF4  50F4               	movf	244,w,c
 10604  01BEF6  2202               	addwfc	(btemp+1)^0,f,c
 10605                           
 10606                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10607  01BEF8  52E5               	movf	postdec1,f,c
 10608  01BEFA  52E5               	movf	postdec1,f,c
 10609  01BEFC  0012               	return		;funcret
 10610  01BEFE                     __end_of_get_vterm_ptr:
 10611                           	opt callstack 0
 10612                           
 10613 ;; *************** function _WaitMs *****************
 10614 ;; Defined at:
 10615 ;;		line 32 in file "timers.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  numMilliseco    2  [STACK] const unsigned short 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1  [STACK] void 
 10622 ;; Registers used:
 10623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/1
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10633 ;;Total ram usage:        0 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:   16
 10636 ;; This function calls:
 10637 ;;		_StartTimer
 10638 ;;		_TimerDone
 10639 ;; This function is called by:
 10640 ;;		_main
 10641 ;;		_vterm_dump
 10642 ;; This function uses a reentrant model
 10643 ;;
 10644                           
 10645                           	psect	text38
 10646  01BD0A                     __ptext38:
 10647                           	opt callstack 0
 10648  01BD0A                     _WaitMs:
 10649                           	opt callstack 12
 10650                           
 10651                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10652                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10653                           
 10654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10655                           ;incstack = 0
 10656  01BD0A  0EFE               	movlw	-2
 10657  01BD0C  006F FF8F FFE6     	movff	plusw1,postinc1
 10658  01BD12  006F FF8F FFE6     	movff	plusw1,postinc1
 10659  01BD18  0E00               	movlw	0
 10660  01BD1A  6EE6               	movwf	postinc1,c
 10661  01BD1C  EC96  F0DD         	call	_StartTimer	;wreg free
 10662                           
 10663                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10664  01BD20  D005               	goto	l10050
 10665  01BD22                     l1616:
 10666                           
 10667                           ;timers.c: 36:   __nop();
 10668  01BD22  F000               	nop	
 10669                           
 10670                           ;timers.c: 37:   __nop();
 10671  01BD24  F000               	nop	
 10672                           
 10673                           ;timers.c: 38:   __nop();
 10674  01BD26  F000               	nop	
 10675                           
 10676                           ;timers.c: 39:   __nop();
 10677  01BD28  F000               	nop	
 10678  01BD2A  0004               	clrwdt		;# 
 10679  01BD2C                     l10050:
 10680                           
 10681                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10682  01BD2C  0E00               	movlw	0
 10683  01BD2E  6EE6               	movwf	postinc1,c
 10684  01BD30  ECEB  F0DF         	call	_TimerDone	;wreg free
 10685  01BD34  5001               	movf	btemp^0,w,c
 10686  01BD36  B4D8               	btfsc	status,2,c
 10687  01BD38  D7F4               	goto	l1616
 10688                           
 10689                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10690  01BD3A  52E5               	movf	postdec1,f,c
 10691  01BD3C  52E5               	movf	postdec1,f,c
 10692  01BD3E  0012               	return		;funcret
 10693  01BD40                     __end_of_WaitMs:
 10694                           	opt callstack 0
 10695                           
 10696 ;; *************** function _update_lcd *****************
 10697 ;; Defined at:
 10698 ;;		line 85 in file "mconfig.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;  vterm           1  [STACK] unsigned char 
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;		None
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1  [STACK] unsigned char 
 10705 ;; Registers used:
 10706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10716 ;;Total ram usage:        0 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:   27
 10719 ;; This function calls:
 10720 ;;		_eaDogM_WriteStringAtPos
 10721 ;;		_wait_lcd_done
 10722 ;; This function is called by:
 10723 ;;		_main
 10724 ;;		_check_help
 10725 ;; This function uses a reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text39
 10729  019E34                     __ptext39:
 10730                           	opt callstack 0
 10731  019E34                     _update_lcd:
 10732                           	opt callstack 3
 10733                           
 10734                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10735                           ;stkvar	_vterm @ sp[(0)+-1]
 10736                           
 10737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10738                           ;incstack = 0
 10739  019E34  0EFF               	movlw	-1
 10740  019E36  006F FF8C  F001    	movff	plusw1,btemp
 10741  019E3C  0E03               	movlw	3
 10742  019E3E  1601               	andwf	btemp^0,f,c
 10743  019E40  0EFF               	movlw	-1
 10744  019E42  0060  F007  FFE3   	movff	btemp,plusw1
 10745                           
 10746                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10747  019E48  EE22  F20A         	lfsr	2,_D+480
 10748  019E4C  A0DF               	btfss	indf2,0,c
 10749  019E4E  D004               	goto	l13058
 10750                           
 10751                           ;stkvar	_vterm @ sp[(0)+-1]
 10752  019E50  0EFF               	movlw	-1
 10753  019E52  50E3               	movf	plusw1,w,c
 10754  019E54  B4D8               	btfsc	status,2,c
 10755  019E56  D074               	goto	l1692
 10756  019E58                     l13058:
 10757                           
 10758                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10759                           ;stkvar	_vterm @ sp[(0)+-1]
 10760  019E58  0EFF               	movlw	-1
 10761  019E5A  50E3               	movf	plusw1,w,c
 10762  019E5C  0D78               	mullw	120
 10763  019E5E  0E3E               	movlw	low (_D+20)
 10764  019E60  24F3               	addwf	243,w,c
 10765  019E62  6ED9               	movwf	fsr2l,c
 10766  019E64  0E08               	movlw	high (_D+20)
 10767  019E66  20F4               	addwfc	prodh,w,c
 10768  019E68  6EDA               	movwf	fsr2h,c
 10769  019E6A  0E00               	movlw	0
 10770  019E6C  6EDF               	movwf	indf2,c
 10771                           
 10772                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10773                           ;stkvar	_vterm @ sp[(0)+-1]
 10774  019E6E  0EFF               	movlw	-1
 10775  019E70  50E3               	movf	plusw1,w,c
 10776  019E72  0D78               	mullw	120
 10777  019E74  0E66               	movlw	low (_D+60)
 10778  019E76  24F3               	addwf	243,w,c
 10779  019E78  6ED9               	movwf	fsr2l,c
 10780  019E7A  0E08               	movlw	high (_D+60)
 10781  019E7C  20F4               	addwfc	prodh,w,c
 10782  019E7E  6EDA               	movwf	fsr2h,c
 10783  019E80  0E00               	movlw	0
 10784  019E82  6EDF               	movwf	indf2,c
 10785                           
 10786                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10787                           ;stkvar	_vterm @ sp[(0)+-1]
 10788  019E84  0EFF               	movlw	-1
 10789  019E86  50E3               	movf	plusw1,w,c
 10790  019E88  0D78               	mullw	120
 10791  019E8A  0E8E               	movlw	low (_D+100)
 10792  019E8C  24F3               	addwf	243,w,c
 10793  019E8E  6ED9               	movwf	fsr2l,c
 10794  019E90  0E08               	movlw	high (_D+100)
 10795  019E92  20F4               	addwfc	prodh,w,c
 10796  019E94  6EDA               	movwf	fsr2h,c
 10797  019E96  0E00               	movlw	0
 10798  019E98  6EDF               	movwf	indf2,c
 10799                           
 10800                           ;mconfig.c: 95:  wait_lcd_done();
 10801  019E9A  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 10802                           
 10803                           ; BSR set to: 0
 10804                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10805                           ;stkvar	_vterm @ sp[(0)+-1]
 10806  019E9E  0EFF               	movlw	-1
 10807  019EA0  50E3               	movf	plusw1,w,c
 10808  019EA2  0D78               	mullw	120
 10809  019EA4  0E2A               	movlw	low _D
 10810  019EA6  6E0B               	movwf	(btemp+10)^0,c
 10811  019EA8  0E08               	movlw	high _D
 10812  019EAA  6E0C               	movwf	(btemp+11)^0,c
 10813  019EAC  50F3               	movf	243,w,c
 10814  019EAE  260B               	addwf	(btemp+10)^0,f,c
 10815  019EB0  50F4               	movf	244,w,c
 10816  019EB2  220C               	addwfc	(btemp+11)^0,f,c
 10817  019EB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10818  019EBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10819  019EC0  0E00               	movlw	0
 10820  019EC2  6EE6               	movwf	postinc1,c
 10821  019EC4  0E00               	movlw	0
 10822  019EC6  6EE6               	movwf	postinc1,c
 10823  019EC8  ECAB  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10824                           
 10825                           ; BSR set to: 59
 10826                           ;mconfig.c: 97:  wait_lcd_done();
 10827  019ECC  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10831                           ;stkvar	_vterm @ sp[(0)+-1]
 10832  019ED0  0EFF               	movlw	-1
 10833  019ED2  50E3               	movf	plusw1,w,c
 10834  019ED4  0D78               	mullw	120
 10835  019ED6  0E2A               	movlw	low _D
 10836  019ED8  6E0B               	movwf	(btemp+10)^0,c
 10837  019EDA  0E08               	movlw	high _D
 10838  019EDC  6E0C               	movwf	(btemp+11)^0,c
 10839  019EDE  0E28               	movlw	40
 10840  019EE0  260B               	addwf	(btemp+10)^0,f,c
 10841  019EE2  0E00               	movlw	0
 10842  019EE4  220C               	addwfc	(btemp+11)^0,f,c
 10843  019EE6  50F3               	movf	243,w,c
 10844  019EE8  260B               	addwf	(btemp+10)^0,f,c
 10845  019EEA  50F4               	movf	244,w,c
 10846  019EEC  220C               	addwfc	(btemp+11)^0,f,c
 10847  019EEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10848  019EF4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10849  019EFA  0E00               	movlw	0
 10850  019EFC  6EE6               	movwf	postinc1,c
 10851  019EFE  0E01               	movlw	1
 10852  019F00  6EE6               	movwf	postinc1,c
 10853  019F02  ECAB  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10854                           
 10855                           ; BSR set to: 59
 10856                           ;mconfig.c: 99:  wait_lcd_done();
 10857  019F06  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10861                           ;stkvar	_vterm @ sp[(0)+-1]
 10862  019F0A  0EFF               	movlw	-1
 10863  019F0C  50E3               	movf	plusw1,w,c
 10864  019F0E  0D78               	mullw	120
 10865  019F10  0E2A               	movlw	low _D
 10866  019F12  6E0B               	movwf	(btemp+10)^0,c
 10867  019F14  0E08               	movlw	high _D
 10868  019F16  6E0C               	movwf	(btemp+11)^0,c
 10869  019F18  0E50               	movlw	80
 10870  019F1A  260B               	addwf	(btemp+10)^0,f,c
 10871  019F1C  0E00               	movlw	0
 10872  019F1E  220C               	addwfc	(btemp+11)^0,f,c
 10873  019F20  50F3               	movf	243,w,c
 10874  019F22  260B               	addwf	(btemp+10)^0,f,c
 10875  019F24  50F4               	movf	244,w,c
 10876  019F26  220C               	addwfc	(btemp+11)^0,f,c
 10877  019F28  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10878  019F2E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10879  019F34  0E00               	movlw	0
 10880  019F36  6EE6               	movwf	postinc1,c
 10881  019F38  0E02               	movlw	2
 10882  019F3A  6EE6               	movwf	postinc1,c
 10883  019F3C  ECAB  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10884  019F40                     l1692:
 10885                           
 10886                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10887  019F40  52E5               	movf	postdec1,f,c
 10888  019F42  0012               	return		;funcret
 10889  019F44                     __end_of_update_lcd:
 10890                           	opt callstack 0
 10891                           
 10892 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10893 ;; Defined at:
 10894 ;;		line 195 in file "eadog.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;  r               1  [STACK] const unsigned char 
 10897 ;;  c               1  [STACK] const unsigned char 
 10898 ;;  strPtr          2  [STACK] PTR unsigned char 
 10899 ;;		 -> D.lcd(480), D(482), V(191), 
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;  row             1  [STACK] unsigned char 
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  1  [STACK] void 
 10904 ;; Registers used:
 10905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10906 ;; Tracked objects:
 10907 ;;		On entry : 3F/0
 10908 ;;		On exit  : 3F/3B
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10915 ;;Total ram usage:        0 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; Hardware stack levels required when called:   26
 10918 ;; This function calls:
 10919 ;;		_eaDogM_WriteString
 10920 ;;		_send_lcd_cmd_dma
 10921 ;;		_send_lcd_data_dma
 10922 ;;		_wait_lcd_done
 10923 ;;		_wdtdelay
 10924 ;; This function is called by:
 10925 ;;		_update_lcd
 10926 ;;		_vterm_dump
 10927 ;; This function uses a reentrant model
 10928 ;;
 10929                           
 10930                           	psect	text40
 10931  01AB56                     __ptext40:
 10932                           	opt callstack 0
 10933  01AB56                     _eaDogM_WriteStringAtPos:
 10934                           	opt callstack 0
 10935                           
 10936                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10937  01AB56  52E6               	movf	postinc1,f,c
 10938                           
 10939                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10940                           
 10941                           ;incstack = 0
 10942  01AB58  D014               	goto	l13034
 10943  01AB5A                     l13022:
 10944                           
 10945                           ;eadog.c: 201:   row = 0x40;
 10946                           ;stkvar	_row @ sp[(-1)+0]
 10947  01AB5A  0EFF               	movlw	-1
 10948  01AB5C  6AE3               	clrf	plusw1,c
 10949  01AB5E  8CE3               	bsf	plusw1,6,c
 10950                           
 10951                           ;eadog.c: 202:   break;
 10952  01AB60  D026               	goto	l13036
 10953  01AB62                     l13024:
 10954                           
 10955                           ;eadog.c: 204:   row = 0x14;
 10956                           ;stkvar	_row @ sp[(-1)+0]
 10957  01AB62  0EFF               	movlw	-1
 10958  01AB64  6AE3               	clrf	plusw1,c
 10959  01AB66  84E3               	bsf	plusw1,2,c
 10960  01AB68  88E3               	bsf	plusw1,4,c	;indir
 10961                           
 10962                           ;eadog.c: 205:   break;
 10963  01AB6A  D021               	goto	l13036
 10964  01AB6C                     l13026:
 10965                           
 10966                           ;eadog.c: 207:   row = 0x54;
 10967  01AB6C  0E54               	movlw	84
 10968  01AB6E  6E0C               	movwf	(btemp+11)^0,c
 10969                           
 10970                           ;stkvar	_row @ sp[(-1)+0]
 10971  01AB70  0EFF               	movlw	-1
 10972  01AB72  0060  F033  FFE3   	movff	btemp+11,plusw1
 10973                           
 10974                           ;eadog.c: 208:   break;
 10975  01AB78  D01A               	goto	l13036
 10976  01AB7A                     l13028:
 10977                           
 10978                           ;eadog.c: 210:   row = 0x1;
 10979                           ;stkvar	_row @ sp[(-1)+0]
 10980  01AB7A  0EFF               	movlw	-1
 10981  01AB7C  6AE3               	clrf	plusw1,c
 10982  01AB7E  2AE3               	incf	plusw1,f,c
 10983                           
 10984                           ;eadog.c: 211:   break;
 10985  01AB80  D016               	goto	l13036
 10986  01AB82                     l13034:
 10987                           
 10988                           ;stkvar	_r @ sp[(-1)+-1]
 10989  01AB82  0EFE               	movlw	-2
 10990  01AB84  50E3               	movf	plusw1,w,c
 10991  01AB86  6E0B               	movwf	(btemp+10)^0,c
 10992  01AB88  6A0C               	clrf	(btemp+11)^0,c
 10993                           
 10994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10995                           ; Switch size 1, requested type "simple"
 10996                           ; Number of cases is 1, Range of values is 0 to 0
 10997                           ; switch strategies available:
 10998                           ; Name         Instructions Cycles
 10999                           ; simple_byte            4     3 (average)
 11000                           ;	Chosen strategy is simple_byte
 11001  01AB8A  500C               	movf	(btemp+11)^0,w,c
 11002  01AB8C  0A00               	xorlw	0	; case 0
 11003  01AB8E  A4D8               	btfss	status,2,c
 11004  01AB90  D7E4               	goto	l13022
 11005                           
 11006                           ; Switch size 1, requested type "simple"
 11007                           ; Number of cases is 4, Range of values is 0 to 3
 11008                           ; switch strategies available:
 11009                           ; Name         Instructions Cycles
 11010                           ; simple_byte           13     7 (average)
 11011                           ;	Chosen strategy is simple_byte
 11012  01AB92  500B               	movf	(btemp+10)^0,w,c
 11013  01AB94  0A00               	xorlw	0	; case 0
 11014  01AB96  B4D8               	btfsc	status,2,c
 11015  01AB98  D7E0               	goto	l13022
 11016  01AB9A  0A01               	xorlw	1	; case 1
 11017  01AB9C  B4D8               	btfsc	status,2,c
 11018  01AB9E  D7E1               	goto	l13024
 11019  01ABA0  0A03               	xorlw	3	; case 2
 11020  01ABA2  B4D8               	btfsc	status,2,c
 11021  01ABA4  D7E3               	goto	l13026
 11022  01ABA6  0A01               	xorlw	1	; case 3
 11023  01ABA8  B4D8               	btfsc	status,2,c
 11024  01ABAA  D7E7               	goto	l13028
 11025  01ABAC  D7D6               	goto	l13022
 11026  01ABAE                     l13036:
 11027                           
 11028                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11029  01ABAE  0E45               	movlw	69
 11030  01ABB0  6EE6               	movwf	postinc1,c
 11031  01ABB2  ECD2  F0E1         	call	_send_lcd_cmd_dma	;wreg free
 11032                           
 11033                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11034                           ;stkvar	_c @ sp[(-1)+-2]
 11035  01ABB6  0EFD               	movlw	-3
 11036  01ABB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11037                           
 11038                           ;stkvar	_row @ sp[(-1)+0]
 11039  01ABBE  0EFF               	movlw	-1
 11040  01ABC0  50E3               	movf	plusw1,w,c
 11041  01ABC2  240C               	addwf	(btemp+11)^0,w,c
 11042  01ABC4  6EE6               	movwf	postinc1,c
 11043  01ABC6  ECD0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11044                           
 11045                           ; BSR set to: 59
 11046                           ;eadog.c: 218:  wait_lcd_done();
 11047  01ABCA  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;eadog.c: 219:  wdtdelay(8);
 11051  01ABCE  0E08               	movlw	8
 11052  01ABD0  6EE6               	movwf	postinc1,c
 11053  01ABD2  0E00               	movlw	0
 11054  01ABD4  6EE6               	movwf	postinc1,c
 11055  01ABD6  0E00               	movlw	0
 11056  01ABD8  6EE6               	movwf	postinc1,c
 11057  01ABDA  0E00               	movlw	0
 11058  01ABDC  6EE6               	movwf	postinc1,c
 11059  01ABDE  ECFD  F0DA         	call	_wdtdelay	;wreg free
 11060                           
 11061                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11062                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11063  01ABE2  0EFB               	movlw	-5
 11064  01ABE4  006F FF8F FFE6     	movff	plusw1,postinc1
 11065  01ABEA  006F FF8F FFE6     	movff	plusw1,postinc1
 11066  01ABF0  ECFF  F0D5         	call	_eaDogM_WriteString	;wreg free
 11067                           
 11068                           ; BSR set to: 59
 11069                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11070  01ABF4  0EFB               	movlw	251
 11071  01ABF6  26E1               	addwf	fsr1l,f,c
 11072  01ABF8  0EFF               	movlw	255
 11073  01ABFA  22E2               	addwfc	fsr1h,f,c
 11074  01ABFC  0012               	return		;funcret
 11075  01ABFE                     __end_of_eaDogM_WriteStringAtPos:
 11076                           	opt callstack 0
 11077                           
 11078 ;; *************** function _send_lcd_cmd_dma *****************
 11079 ;; Defined at:
 11080 ;;		line 171 in file "eadog.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  strPtr          1  [STACK] const unsigned char 
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;		None
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  1  [STACK] void 
 11087 ;; Registers used:
 11088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/3D
 11091 ;;		On exit  : 3F/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11098 ;;Total ram usage:        0 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:   25
 11101 ;; This function calls:
 11102 ;;		_send_lcd_data_dma
 11103 ;;		_wait_lcd_done
 11104 ;; This function is called by:
 11105 ;;		_eaDogM_WriteStringAtPos
 11106 ;;		_eaDogM_WriteCommand
 11107 ;; This function uses a reentrant model
 11108 ;;
 11109                           
 11110                           	psect	text41
 11111  01C3A4                     __ptext41:
 11112                           	opt callstack 0
 11113  01C3A4                     _send_lcd_cmd_dma:
 11114                           	opt callstack 3
 11115                           
 11116                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11117                           
 11118                           ; BSR set to: 59
 11119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11120                           ;incstack = 0
 11121  01C3A4  0EFE               	movlw	254
 11122  01C3A6  6EE6               	movwf	postinc1,c
 11123  01C3A8  ECD0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11124                           
 11125                           ; BSR set to: 59
 11126                           ;eadog.c: 174:  wait_lcd_done();
 11127  01C3AC  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11131                           ;stkvar	_strPtr @ sp[(0)+-1]
 11132  01C3B0  0EFF               	movlw	-1
 11133  01C3B2  50E3               	movf	plusw1,w,c
 11134  01C3B4  6EE6               	movwf	postinc1,c
 11135  01C3B6  ECD0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11136                           
 11137                           ;eadog.c: 176:  wait_lcd_done();
 11138  01C3BA  EC70  F0E1         	call	_wait_lcd_done	;wreg free
 11139                           
 11140                           ; BSR set to: 0
 11141                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11142  01C3BE  52E5               	movf	postdec1,f,c
 11143  01C3C0  0012               	return		;funcret
 11144  01C3C2                     __end_of_send_lcd_cmd_dma:
 11145                           	opt callstack 0
 11146                           
 11147 ;; *************** function _wait_lcd_done *****************
 11148 ;; Defined at:
 11149 ;;		line 444 in file "eadog.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1  [STACK] void 
 11156 ;; Registers used:
 11157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/1
 11160 ;;		On exit  : 3F/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:   16
 11170 ;; This function calls:
 11171 ;;		_wdtdelay
 11172 ;; This function is called by:
 11173 ;;		_main
 11174 ;;		_send_lcd_cmd_dma
 11175 ;;		_eaDogM_WriteStringAtPos
 11176 ;;		_update_lcd
 11177 ;;		_vterm_dump
 11178 ;; This function uses a reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text42
 11182  01C2E0                     __ptext42:
 11183                           	opt callstack 0
 11184  01C2E0                     _wait_lcd_done:
 11185                           	opt callstack 14
 11186                           
 11187                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11188                           
 11189                           ; BSR set to: 0
 11190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11191                           ;incstack = 0
 11192  01C2E0  0101               	movlb	1	; () banked
 11193  01C2E2  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 11194  01C2E4  D7FD               	goto	_wait_lcd_done
 11195  01C2E6                     u8730:
 11196  01C2E6  013D               	movlb	61	; () banked
 11197  01C2E8  AB17               	btfss	23,5,b	;volatile
 11198  01C2EA  D7FD               	goto	u8730
 11199                           
 11200                           ; BSR set to: 61
 11201                           ;eadog.c: 448:  wdtdelay(50);
 11202  01C2EC  0E32               	movlw	50
 11203  01C2EE  6EE6               	movwf	postinc1,c
 11204  01C2F0  0E00               	movlw	0
 11205  01C2F2  6EE6               	movwf	postinc1,c
 11206  01C2F4  0E00               	movlw	0
 11207  01C2F6  6EE6               	movwf	postinc1,c
 11208  01C2F8  0E00               	movlw	0
 11209  01C2FA  6EE6               	movwf	postinc1,c
 11210  01C2FC  ECFD  F0DA         	call	_wdtdelay	;wreg free
 11211                           
 11212                           ; BSR set to: 0
 11213                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11214  01C300  0012               	return		;funcret
 11215  01C302                     __end_of_wait_lcd_done:
 11216                           	opt callstack 0
 11217                           
 11218 ;; *************** function _wdtdelay *****************
 11219 ;; Defined at:
 11220 ;;		line 23 in file "eadog.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;  delay           4  [STACK] const unsigned long 
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1  [STACK] void 
 11227 ;; Registers used:
 11228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11229 ;; Tracked objects:
 11230 ;;		On entry : 2/3D
 11231 ;;		On exit  : 3F/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used:    1
 11240 ;; Hardware stack levels required when called:   15
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_init_display
 11245 ;;		_send_lcd_data
 11246 ;;		_send_lcd_cmd
 11247 ;;		_send_lcd_cmd_long
 11248 ;;		_eaDogM_WriteStringAtPos
 11249 ;;		_wait_lcd_done
 11250 ;; This function uses a reentrant model
 11251 ;;
 11252                           
 11253                           	psect	text43
 11254  01B5FA                     __ptext43:
 11255                           	opt callstack 0
 11256  01B5FA                     _wdtdelay:
 11257                           	opt callstack 14
 11258                           
 11259                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11260                           
 11261                           ; BSR set to: 0
 11262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11263                           ;incstack = 0
 11264  01B5FA  0100               	movlb	0	; () banked
 11265  01B5FC  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11266  01B5FE  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11267  01B600  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11268  01B602  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11269  01B604                     l1469:
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;eadog.c: 28:   __nop();
 11273  01B604  F000               	nop	
 11274  01B606  0004               	clrwdt		;# 
 11275                           
 11276                           ;eadog.c: 30:  };
 11277  01B608  0E01               	movlw	1
 11278  01B60A  0100               	movlb	0	; () banked
 11279  01B60C  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11280  01B60E  0E00               	movlw	0
 11281  01B610  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11282  01B612  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11283  01B614  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;stkvar	_delay @ sp[(0)+-4]
 11287  01B616  0EFC               	movlw	-4
 11288  01B618  006F FF8C  F001    	movff	plusw1,btemp
 11289  01B61E  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11290  01B620  5C01               	subwf	btemp^0,w,c
 11291  01B622  0EFD               	movlw	-3
 11292  01B624  006F FF8C  F001    	movff	plusw1,btemp
 11293  01B62A  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11294  01B62C  5801               	subwfb	btemp^0,w,c
 11295  01B62E  0EFE               	movlw	-2
 11296  01B630  006F FF8C  F001    	movff	plusw1,btemp
 11297  01B636  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11298  01B638  5801               	subwfb	btemp^0,w,c
 11299  01B63A  0EFF               	movlw	-1
 11300  01B63C  006F FF8C  F001    	movff	plusw1,btemp
 11301  01B642  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11302  01B644  5801               	subwfb	btemp^0,w,c
 11303  01B646  B0D8               	btfsc	status,0,c
 11304  01B648  D7DD               	goto	l1469
 11305                           
 11306                           ; BSR set to: 0
 11307                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11308  01B64A  52E5               	movf	postdec1,f,c
 11309  01B64C  52E5               	movf	postdec1,f,c
 11310  01B64E  52E5               	movf	postdec1,f,c
 11311  01B650  52E5               	movf	postdec1,f,c
 11312  01B652  0012               	return		;funcret
 11313  01B654                     __end_of_wdtdelay:
 11314                           	opt callstack 0
 11315                           
 11316 ;; *************** function _send_lcd_data_dma *****************
 11317 ;; Defined at:
 11318 ;;		line 182 in file "eadog.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  strPtr          1  [STACK] const unsigned char 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1  [STACK] void 
 11325 ;; Registers used:
 11326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 3F/3B
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11336 ;;Total ram usage:        0 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:   24
 11339 ;; This function calls:
 11340 ;;		_printf
 11341 ;;		_ringBufS_flush
 11342 ;;		_start_lcd
 11343 ;;		_wait_lcd_set
 11344 ;; This function is called by:
 11345 ;;		_send_lcd_cmd_dma
 11346 ;;		_eaDogM_WriteStringAtPos
 11347 ;; This function uses a reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text44
 11351  01B7A0                     __ptext44:
 11352                           	opt callstack 0
 11353  01B7A0                     _send_lcd_data_dma:
 11354                           	opt callstack 4
 11355                           
 11356                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11357                           
 11358                           ; BSR set to: 0
 11359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11360                           ;incstack = 0
 11361  01B7A0  ECEC  F0E2         	call	_wait_lcd_set	;wreg free
 11362                           
 11363                           ; BSR set to: 1
 11364                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11365  01B7A4  0E00               	movlw	0
 11366  01B7A6  6EE6               	movwf	postinc1,c
 11367  01B7A8  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11368  01B7AE  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11369  01B7B4  ECEF  F0D6         	call	_ringBufS_flush	;wreg free
 11370  01B7B8  94BC               	bcf	188,2,c	;volatile
 11371                           
 11372                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11373  01B7BA  013B               	movlb	59	; () banked
 11374  01B7BC  9FFC               	bcf	252,7,b	;volatile
 11375                           
 11376                           ; BSR set to: 59
 11377                           ;eadog.c: 189:  DMA1SSZ = 1;
 11378  01B7BE  0E00               	movlw	0
 11379  01B7C0  6FF8               	movwf	248,b	;volatile
 11380  01B7C2  0E01               	movlw	1
 11381  01B7C4  6FF7               	movwf	247,b	;volatile
 11382                           
 11383                           ; BSR set to: 59
 11384                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11385  01B7C6  8FFC               	bsf	252,7,b	;volatile
 11386                           
 11387                           ; BSR set to: 59
 11388                           ;eadog.c: 191:  printf("%c", strPtr);
 11389                           ;stkvar	_strPtr @ sp[(0)+-1]
 11390  01B7C8  0EFF               	movlw	-1
 11391  01B7CA  50E3               	movf	plusw1,w,c
 11392  01B7CC  6EE6               	movwf	postinc1,c
 11393  01B7CE  0E00               	movlw	0
 11394  01B7D0  6EE6               	movwf	postinc1,c
 11395  01B7D2  0EF9               	movlw	low STR_44
 11396  01B7D4  6EE6               	movwf	postinc1,c
 11397  01B7D6  0EFF               	movlw	high STR_44
 11398  01B7D8  6EE6               	movwf	postinc1,c
 11399  01B7DA  0E04               	movlw	4
 11400  01B7DC  6EE6               	movwf	postinc1,c
 11401  01B7DE  EC3E  F0DA         	call	_printf	;wreg free
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;eadog.c: 192:  start_lcd();
 11405  01B7E2  ECEF  F0E2         	call	_start_lcd	;wreg free
 11406                           
 11407                           ; BSR set to: 59
 11408                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11409  01B7E6  52E5               	movf	postdec1,f,c
 11410  01B7E8  0012               	return		;funcret
 11411  01B7EA                     __end_of_send_lcd_data_dma:
 11412                           	opt callstack 0
 11413                           
 11414 ;; *************** function _eaDogM_WriteString *****************
 11415 ;; Defined at:
 11416 ;;		line 151 in file "eadog.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;  strPtr          2  [STACK] PTR unsigned char 
 11419 ;;		 -> D.lcd(480), D(482), V(191), 
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;		None
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1  [STACK] void 
 11424 ;; Registers used:
 11425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11426 ;; Tracked objects:
 11427 ;;		On entry : 3F/0
 11428 ;;		On exit  : 3F/3B
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11435 ;;Total ram usage:        0 bytes
 11436 ;; Hardware stack levels used:    1
 11437 ;; Hardware stack levels required when called:   24
 11438 ;; This function calls:
 11439 ;;		_printf
 11440 ;;		_ringBufS_flush
 11441 ;;		_start_lcd
 11442 ;;		_strlen
 11443 ;;		_wait_lcd_set
 11444 ;; This function is called by:
 11445 ;;		_eaDogM_WriteStringAtPos
 11446 ;; This function uses a reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text45
 11450  01ABFE                     __ptext45:
 11451                           	opt callstack 0
 11452  01ABFE                     _eaDogM_WriteString:
 11453                           	opt callstack 4
 11454                           
 11455                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11456                           
 11457                           ; BSR set to: 59
 11458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11459                           ;incstack = 0
 11460  01ABFE  ECEC  F0E2         	call	_wait_lcd_set	;wreg free
 11461                           
 11462                           ; BSR set to: 1
 11463                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11464  01AC02  0E00               	movlw	0
 11465  01AC04  6EE6               	movwf	postinc1,c
 11466  01AC06  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11467  01AC0C  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11468  01AC12  ECEF  F0D6         	call	_ringBufS_flush	;wreg free
 11469  01AC16  94BC               	bcf	188,2,c	;volatile
 11470                           
 11471                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11472                           ;stkvar	_strPtr @ sp[(0)+-2]
 11473  01AC18  0EFE               	movlw	-2
 11474  01AC1A  006F FF8F FFE6     	movff	plusw1,postinc1
 11475  01AC20  006F FF8F FFE6     	movff	plusw1,postinc1
 11476  01AC26  EC52  F0D6         	call	_strlen	;wreg free
 11477  01AC2A  5002               	movf	(btemp+1)^0,w,c
 11478  01AC2C  E104               	bnz	u12400
 11479  01AC2E  0E41               	movlw	65
 11480  01AC30  5C01               	subwf	btemp^0,w,c
 11481  01AC32  A0D8               	btfss	status,0,c
 11482  01AC34  D010               	goto	l12978
 11483  01AC36                     u12400:
 11484                           
 11485                           ;stkvar	_strPtr @ sp[(0)+-2]
 11486  01AC36  0EFE               	movlw	-2
 11487  01AC38  006F FF8C  F00B    	movff	plusw1,btemp+10
 11488  01AC3E  0EFF               	movlw	-1
 11489  01AC40  006F FF8C  F00C    	movff	plusw1,btemp+11
 11490  01AC46  0E40               	movlw	64
 11491  01AC48  240B               	addwf	(btemp+10)^0,w,c
 11492  01AC4A  6ED9               	movwf	fsr2l,c
 11493  01AC4C  0E00               	movlw	0
 11494  01AC4E  200C               	addwfc	(btemp+11)^0,w,c
 11495  01AC50  6EDA               	movwf	fsr2h,c
 11496  01AC52  0E00               	movlw	0
 11497  01AC54  6EDF               	movwf	indf2,c
 11498  01AC56                     l12978:
 11499                           
 11500                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11501  01AC56  013B               	movlb	59	; () banked
 11502  01AC58  9FFC               	bcf	252,7,b	;volatile
 11503                           
 11504                           ; BSR set to: 59
 11505                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11506                           ;stkvar	_strPtr @ sp[(0)+-2]
 11507  01AC5A  0EFE               	movlw	-2
 11508  01AC5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11509  01AC62  006F FF8F FFE6     	movff	plusw1,postinc1
 11510  01AC68  EC52  F0D6         	call	_strlen	;wreg free
 11511  01AC6C  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11512  01AC72  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11513                           
 11514                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11515  01AC78  013B               	movlb	59	; () banked
 11516  01AC7A  8FFC               	bsf	252,7,b	;volatile
 11517                           
 11518                           ; BSR set to: 59
 11519                           ;eadog.c: 161:  printf("%s", strPtr);
 11520                           ;stkvar	_strPtr @ sp[(0)+-2]
 11521  01AC7C  0EFE               	movlw	-2
 11522  01AC7E  006F FF8F FFE6     	movff	plusw1,postinc1
 11523  01AC84  006F FF8F FFE6     	movff	plusw1,postinc1
 11524  01AC8A  0EFC               	movlw	low STR_43
 11525  01AC8C  6EE6               	movwf	postinc1,c
 11526  01AC8E  0EFF               	movlw	high STR_43
 11527  01AC90  6EE6               	movwf	postinc1,c
 11528  01AC92  0E04               	movlw	4
 11529  01AC94  6EE6               	movwf	postinc1,c
 11530  01AC96  EC3E  F0DA         	call	_printf	;wreg free
 11531                           
 11532                           ; BSR set to: 0
 11533                           ;eadog.c: 162:  start_lcd();
 11534  01AC9A  ECEF  F0E2         	call	_start_lcd	;wreg free
 11535                           
 11536                           ; BSR set to: 59
 11537                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11538  01AC9E  52E5               	movf	postdec1,f,c
 11539  01ACA0  52E5               	movf	postdec1,f,c
 11540  01ACA2  0012               	return		;funcret
 11541  01ACA4                     __end_of_eaDogM_WriteString:
 11542                           	opt callstack 0
 11543                           
 11544 ;; *************** function _wait_lcd_set *****************
 11545 ;; Defined at:
 11546 ;;		line 434 in file "eadog.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;		None
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;		None
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1  [STACK] void 
 11553 ;; Registers used:
 11554 ;;		None
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 3F/1
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11564 ;;Total ram usage:        0 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:   15
 11567 ;; This function calls:
 11568 ;;		Nothing
 11569 ;; This function is called by:
 11570 ;;		_eaDogM_WriteString
 11571 ;;		_send_lcd_data_dma
 11572 ;; This function uses a reentrant model
 11573 ;;
 11574                           
 11575                           	psect	text46
 11576  01C5D8                     __ptext46:
 11577                           	opt callstack 0
 11578  01C5D8                     _wait_lcd_set:
 11579                           	opt callstack 12
 11580                           
 11581                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11582                           
 11583                           ; BSR set to: 59
 11584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11585                           ;incstack = 0
 11586  01C5D8  0101               	movlb	1	; () banked
 11587  01C5DA  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11588                           
 11589                           ; BSR set to: 1
 11590                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11591  01C5DC  0012               	return		;funcret
 11592  01C5DE                     __end_of_wait_lcd_set:
 11593                           	opt callstack 0
 11594                           
 11595 ;; *************** function _start_lcd *****************
 11596 ;; Defined at:
 11597 ;;		line 429 in file "eadog.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;		None
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;		None
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1  [STACK] void 
 11604 ;; Registers used:
 11605 ;;		None
 11606 ;; Tracked objects:
 11607 ;;		On entry : 3F/0
 11608 ;;		On exit  : 3F/3B
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;Total ram usage:        0 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:   15
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_eaDogM_WriteString
 11622 ;;		_send_lcd_data_dma
 11623 ;; This function uses a reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text47
 11627  01C5DE                     __ptext47:
 11628                           	opt callstack 0
 11629  01C5DE                     _start_lcd:
 11630                           	opt callstack 12
 11631                           
 11632                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11633                           
 11634                           ; BSR set to: 1
 11635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11636                           ;incstack = 0
 11637  01C5DE  013B               	movlb	59	; () banked
 11638  01C5E0  8DFC               	bsf	252,6,b	;volatile
 11639                           
 11640                           ; BSR set to: 59
 11641                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11642  01C5E2  0012               	return		;funcret
 11643  01C5E4                     __end_of_start_lcd:
 11644                           	opt callstack 0
 11645                           
 11646 ;; *************** function _ringBufS_flush *****************
 11647 ;; Defined at:
 11648 ;;		line 76 in file "ringbufs.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11651 ;;		 -> ring_buf1(67), 
 11652 ;;  clearBuffer     1  [STACK] const char 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;		None
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1  [STACK] void 
 11657 ;; Registers used:
 11658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11659 ;; Tracked objects:
 11660 ;;		On entry : 3F/1
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11668 ;;Total ram usage:        0 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:   16
 11671 ;; This function calls:
 11672 ;;		_memset
 11673 ;; This function is called by:
 11674 ;;		_eaDogM_WriteString
 11675 ;;		_send_lcd_data_dma
 11676 ;; This function uses a reentrant model
 11677 ;;
 11678                           
 11679                           	psect	text48
 11680  01ADDE                     __ptext48:
 11681                           	opt callstack 0
 11682  01ADDE                     _ringBufS_flush:
 11683                           	opt callstack 11
 11684                           
 11685                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11686                           ;stkvar	__this @ sp[(0)+-2]
 11687                           
 11688                           ; BSR set to: 59
 11689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11690                           ;incstack = 0
 11691  01ADDE  0EFE               	movlw	-2
 11692  01ADE0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11693  01ADE6  0EFF               	movlw	-1
 11694  01ADE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11695  01ADEE  0E42               	movlw	66
 11696  01ADF0  240B               	addwf	(btemp+10)^0,w,c
 11697  01ADF2  6ED9               	movwf	fsr2l,c
 11698  01ADF4  0E00               	movlw	0
 11699  01ADF6  200C               	addwfc	(btemp+11)^0,w,c
 11700  01ADF8  6EDA               	movwf	fsr2h,c
 11701  01ADFA  0E00               	movlw	0
 11702  01ADFC  6EDF               	movwf	indf2,c
 11703                           
 11704                           ;ringbufs.c: 79:  _this->head = 0;
 11705                           ;stkvar	__this @ sp[(0)+-2]
 11706  01ADFE  0EFE               	movlw	-2
 11707  01AE00  006F FF8C  F00B    	movff	plusw1,btemp+10
 11708  01AE06  0EFF               	movlw	-1
 11709  01AE08  006F FF8C  F00C    	movff	plusw1,btemp+11
 11710  01AE0E  0E40               	movlw	64
 11711  01AE10  240B               	addwf	(btemp+10)^0,w,c
 11712  01AE12  6ED9               	movwf	fsr2l,c
 11713  01AE14  0E00               	movlw	0
 11714  01AE16  200C               	addwfc	(btemp+11)^0,w,c
 11715  01AE18  6EDA               	movwf	fsr2h,c
 11716  01AE1A  0E00               	movlw	0
 11717  01AE1C  6EDF               	movwf	indf2,c
 11718                           
 11719                           ;ringbufs.c: 80:  _this->tail = 0;
 11720                           ;stkvar	__this @ sp[(0)+-2]
 11721  01AE1E  0EFE               	movlw	-2
 11722  01AE20  006F FF8C  F00B    	movff	plusw1,btemp+10
 11723  01AE26  0EFF               	movlw	-1
 11724  01AE28  006F FF8C  F00C    	movff	plusw1,btemp+11
 11725  01AE2E  0E41               	movlw	65
 11726  01AE30  240B               	addwf	(btemp+10)^0,w,c
 11727  01AE32  6ED9               	movwf	fsr2l,c
 11728  01AE34  0E00               	movlw	0
 11729  01AE36  200C               	addwfc	(btemp+11)^0,w,c
 11730  01AE38  6EDA               	movwf	fsr2h,c
 11731  01AE3A  0E00               	movlw	0
 11732  01AE3C  6EDF               	movwf	indf2,c
 11733                           
 11734                           ;ringbufs.c: 81:  if (clearBuffer) {
 11735                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11736  01AE3E  0EFD               	movlw	-3
 11737  01AE40  50E3               	movf	plusw1,w,c
 11738  01AE42  B4D8               	btfsc	status,2,c
 11739  01AE44  D011               	goto	l1601
 11740                           
 11741                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11742  01AE46  0E40               	movlw	64
 11743  01AE48  6EE6               	movwf	postinc1,c
 11744  01AE4A  0E00               	movlw	0
 11745  01AE4C  6EE6               	movwf	postinc1,c
 11746  01AE4E  0E00               	movlw	0
 11747  01AE50  6EE6               	movwf	postinc1,c
 11748  01AE52  0E00               	movlw	0
 11749  01AE54  6EE6               	movwf	postinc1,c
 11750                           
 11751                           ;stkvar	__this @ sp[(-4)+-2]
 11752  01AE56  0EFA               	movlw	-6
 11753  01AE58  006F FF8F FFE6     	movff	plusw1,postinc1
 11754  01AE5E  006F FF8F FFE6     	movff	plusw1,postinc1
 11755  01AE64  EC4E  F0B7         	call	_memset	;wreg free
 11756  01AE68                     l1601:
 11757                           
 11758                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11759  01AE68  52E5               	movf	postdec1,f,c
 11760  01AE6A  52E5               	movf	postdec1,f,c
 11761  01AE6C  52E5               	movf	postdec1,f,c
 11762  01AE6E  0012               	return		;funcret
 11763  01AE70                     __end_of_ringBufS_flush:
 11764                           	opt callstack 0
 11765                           
 11766 ;; *************** function _memset *****************
 11767 ;; Defined at:
 11768 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;  dest            2  [STACK] PTR void 
 11771 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11772 ;;  c               2  [STACK] int 
 11773 ;;  n               2  [STACK] unsigned int 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  s               2  [STACK] PTR unsigned char 
 11776 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11777 ;;  k               2  [STACK] unsigned int 
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  2  [STACK] PTR void 
 11780 ;; Registers used:
 11781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/1
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11791 ;;Total ram usage:        0 bytes
 11792 ;; Hardware stack levels used:    1
 11793 ;; Hardware stack levels required when called:   15
 11794 ;; This function calls:
 11795 ;;		Nothing
 11796 ;; This function is called by:
 11797 ;;		_ringBufS_init
 11798 ;;		_ringBufS_flush
 11799 ;; This function uses a reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text49
 11803  016E9C                     __ptext49:
 11804                           	opt callstack 0
 11805  016E9C                     _memset:
 11806                           	opt callstack 0
 11807                           
 11808                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11809  016E9C  52E6               	movf	postinc1,f,c
 11810  016E9E  52E6               	movf	postinc1,f,c
 11811  016EA0  52E6               	movf	postinc1,f,c
 11812  016EA2  52E6               	movf	postinc1,f,c
 11813                           
 11814                           ;stkvar	_dest @ sp[(-4)+-2]
 11815                           
 11816                           ;incstack = 0
 11817  016EA4  0EFA               	movlw	-6
 11818  016EA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11819  016EAC  0EFB               	movlw	-5
 11820  016EAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11821                           
 11822                           ;stkvar	_s @ sp[(-4)+0]
 11823  016EB4  0EFD               	movlw	-3
 11824  016EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11825  016EBC  0EFC               	movlw	-4
 11826  016EBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11827                           
 11828                           ;stkvar	_n @ sp[(-4)+-6]
 11829  016EC4  0EF6               	movlw	-10
 11830  016EC6  006F FF8C  F001    	movff	plusw1,btemp
 11831  016ECC  0EF7               	movlw	-9
 11832  016ECE  50E3               	movf	plusw1,w,c
 11833  016ED0  1001               	iorwf	btemp^0,w,c
 11834  016ED2  B4D8               	btfsc	status,2,c
 11835  016ED4  D154               	goto	u10950
 11836                           
 11837                           ;stkvar	_c @ sp[(-4)+-4]
 11838                           ;stkvar	_s @ sp[(-4)+0]
 11839  016ED6  0EFC               	movlw	-4
 11840  016ED8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11841  016EDE  0EFD               	movlw	-3
 11842  016EE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11843  016EE6  0EF8               	movlw	-8
 11844  016EE8  006F FF8F FFDF     	movff	plusw1,indf2
 11845                           
 11846                           ;stkvar	_c @ sp[(-4)+-4]
 11847                           ;stkvar	_n @ sp[(-4)+-6]
 11848                           ;stkvar	_s @ sp[(-4)+0]
 11849  016EEE  0EFC               	movlw	-4
 11850  016EF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11851  016EF6  0EFD               	movlw	-3
 11852  016EF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11853  016EFE  0EF6               	movlw	-10
 11854  016F00  50E3               	movf	plusw1,w,c
 11855  016F02  260B               	addwf	(btemp+10)^0,f,c
 11856  016F04  0EF7               	movlw	-9
 11857  016F06  50E3               	movf	plusw1,w,c
 11858  016F08  220C               	addwfc	(btemp+11)^0,f,c
 11859  016F0A  0EFF               	movlw	255
 11860  016F0C  240B               	addwf	(btemp+10)^0,w,c
 11861  016F0E  6ED9               	movwf	fsr2l,c
 11862  016F10  0EFF               	movlw	255
 11863  016F12  200C               	addwfc	(btemp+11)^0,w,c
 11864  016F14  6EDA               	movwf	fsr2h,c
 11865  016F16  0EF8               	movlw	-8
 11866  016F18  006F FF8F FFDF     	movff	plusw1,indf2
 11867                           
 11868                           ;stkvar	_n @ sp[(-4)+-6]
 11869  016F1E  0EF7               	movlw	-9
 11870  016F20  50E3               	movf	plusw1,w,c
 11871  016F22  E108               	bnz	l12130
 11872  016F24  0EF6               	movlw	-10
 11873  016F26  006F FF8C  F001    	movff	plusw1,btemp
 11874  016F2C  0E03               	movlw	3
 11875  016F2E  5E01               	subwf	btemp^0,f,c
 11876  016F30  A0D8               	btfss	status,0,c
 11877  016F32  D125               	goto	u10950
 11878  016F34                     l12130:
 11879                           
 11880                           ;stkvar	_c @ sp[(-4)+-4]
 11881                           ;stkvar	_s @ sp[(-4)+0]
 11882  016F34  0EFC               	movlw	-4
 11883  016F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11884  016F3C  0EFD               	movlw	-3
 11885  016F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11886  016F44  0E01               	movlw	1
 11887  016F46  240B               	addwf	(btemp+10)^0,w,c
 11888  016F48  6ED9               	movwf	fsr2l,c
 11889  016F4A  0E00               	movlw	0
 11890  016F4C  200C               	addwfc	(btemp+11)^0,w,c
 11891  016F4E  6EDA               	movwf	fsr2h,c
 11892  016F50  0EF8               	movlw	-8
 11893  016F52  006F FF8F FFDF     	movff	plusw1,indf2
 11894                           
 11895                           ;stkvar	_c @ sp[(-4)+-4]
 11896                           ;stkvar	_s @ sp[(-4)+0]
 11897  016F58  0EFC               	movlw	-4
 11898  016F5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11899  016F60  0EFD               	movlw	-3
 11900  016F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 11901  016F68  0E02               	movlw	2
 11902  016F6A  240B               	addwf	(btemp+10)^0,w,c
 11903  016F6C  6ED9               	movwf	fsr2l,c
 11904  016F6E  0E00               	movlw	0
 11905  016F70  200C               	addwfc	(btemp+11)^0,w,c
 11906  016F72  6EDA               	movwf	fsr2h,c
 11907  016F74  0EF8               	movlw	-8
 11908  016F76  006F FF8F FFDF     	movff	plusw1,indf2
 11909                           
 11910                           ;stkvar	_c @ sp[(-4)+-4]
 11911                           ;stkvar	_n @ sp[(-4)+-6]
 11912                           ;stkvar	_s @ sp[(-4)+0]
 11913  016F7C  0EFC               	movlw	-4
 11914  016F7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11915  016F84  0EFD               	movlw	-3
 11916  016F86  006F FF8C  F00C    	movff	plusw1,btemp+11
 11917  016F8C  0EF6               	movlw	-10
 11918  016F8E  50E3               	movf	plusw1,w,c
 11919  016F90  260B               	addwf	(btemp+10)^0,f,c
 11920  016F92  0EF7               	movlw	-9
 11921  016F94  50E3               	movf	plusw1,w,c
 11922  016F96  220C               	addwfc	(btemp+11)^0,f,c
 11923  016F98  0EFE               	movlw	254
 11924  016F9A  240B               	addwf	(btemp+10)^0,w,c
 11925  016F9C  6ED9               	movwf	fsr2l,c
 11926  016F9E  0EFF               	movlw	255
 11927  016FA0  200C               	addwfc	(btemp+11)^0,w,c
 11928  016FA2  6EDA               	movwf	fsr2h,c
 11929  016FA4  0EF8               	movlw	-8
 11930  016FA6  006F FF8F FFDF     	movff	plusw1,indf2
 11931                           
 11932                           ;stkvar	_c @ sp[(-4)+-4]
 11933                           ;stkvar	_n @ sp[(-4)+-6]
 11934                           ;stkvar	_s @ sp[(-4)+0]
 11935  016FAC  0EFC               	movlw	-4
 11936  016FAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11937  016FB4  0EFD               	movlw	-3
 11938  016FB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11939  016FBC  0EF6               	movlw	-10
 11940  016FBE  50E3               	movf	plusw1,w,c
 11941  016FC0  260B               	addwf	(btemp+10)^0,f,c
 11942  016FC2  0EF7               	movlw	-9
 11943  016FC4  50E3               	movf	plusw1,w,c
 11944  016FC6  220C               	addwfc	(btemp+11)^0,f,c
 11945  016FC8  0EFD               	movlw	253
 11946  016FCA  240B               	addwf	(btemp+10)^0,w,c
 11947  016FCC  6ED9               	movwf	fsr2l,c
 11948  016FCE  0EFF               	movlw	255
 11949  016FD0  200C               	addwfc	(btemp+11)^0,w,c
 11950  016FD2  6EDA               	movwf	fsr2h,c
 11951  016FD4  0EF8               	movlw	-8
 11952  016FD6  006F FF8F FFDF     	movff	plusw1,indf2
 11953                           
 11954                           ;stkvar	_n @ sp[(-4)+-6]
 11955  016FDC  0EF7               	movlw	-9
 11956  016FDE  50E3               	movf	plusw1,w,c
 11957  016FE0  E108               	bnz	l12136
 11958  016FE2  0EF6               	movlw	-10
 11959  016FE4  006F FF8C  F001    	movff	plusw1,btemp
 11960  016FEA  0E07               	movlw	7
 11961  016FEC  5E01               	subwf	btemp^0,f,c
 11962  016FEE  A0D8               	btfss	status,0,c
 11963  016FF0  D0C6               	goto	u10950
 11964  016FF2                     l12136:
 11965                           
 11966                           ;stkvar	_c @ sp[(-4)+-4]
 11967                           ;stkvar	_s @ sp[(-4)+0]
 11968  016FF2  0EFC               	movlw	-4
 11969  016FF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11970  016FFA  0EFD               	movlw	-3
 11971  016FFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11972  017002  0E03               	movlw	3
 11973  017004  240B               	addwf	(btemp+10)^0,w,c
 11974  017006  6ED9               	movwf	fsr2l,c
 11975  017008  0E00               	movlw	0
 11976  01700A  200C               	addwfc	(btemp+11)^0,w,c
 11977  01700C  6EDA               	movwf	fsr2h,c
 11978  01700E  0EF8               	movlw	-8
 11979  017010  006F FF8F FFDF     	movff	plusw1,indf2
 11980                           
 11981                           ;stkvar	_c @ sp[(-4)+-4]
 11982                           ;stkvar	_n @ sp[(-4)+-6]
 11983                           ;stkvar	_s @ sp[(-4)+0]
 11984  017016  0EFC               	movlw	-4
 11985  017018  006F FF8C  F00B    	movff	plusw1,btemp+10
 11986  01701E  0EFD               	movlw	-3
 11987  017020  006F FF8C  F00C    	movff	plusw1,btemp+11
 11988  017026  0EF6               	movlw	-10
 11989  017028  50E3               	movf	plusw1,w,c
 11990  01702A  260B               	addwf	(btemp+10)^0,f,c
 11991  01702C  0EF7               	movlw	-9
 11992  01702E  50E3               	movf	plusw1,w,c
 11993  017030  220C               	addwfc	(btemp+11)^0,f,c
 11994  017032  0EFC               	movlw	252
 11995  017034  240B               	addwf	(btemp+10)^0,w,c
 11996  017036  6ED9               	movwf	fsr2l,c
 11997  017038  0EFF               	movlw	255
 11998  01703A  200C               	addwfc	(btemp+11)^0,w,c
 11999  01703C  6EDA               	movwf	fsr2h,c
 12000  01703E  0EF8               	movlw	-8
 12001  017040  006F FF8F FFDF     	movff	plusw1,indf2
 12002                           
 12003                           ;stkvar	_n @ sp[(-4)+-6]
 12004  017046  0EF7               	movlw	-9
 12005  017048  50E3               	movf	plusw1,w,c
 12006  01704A  E108               	bnz	l12142
 12007  01704C  0EF6               	movlw	-10
 12008  01704E  006F FF8C  F001    	movff	plusw1,btemp
 12009  017054  0E09               	movlw	9
 12010  017056  5E01               	subwf	btemp^0,f,c
 12011  017058  A0D8               	btfss	status,0,c
 12012  01705A  D091               	goto	u10950
 12013  01705C                     l12142:
 12014                           
 12015                           ;stkvar	_s @ sp[(-4)+0]
 12016  01705C  0EFC               	movlw	-4
 12017  01705E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12018  017064  1E0B               	comf	(btemp+10)^0,f,c
 12019  017066  0EFD               	movlw	-3
 12020  017068  006F FF8C  F00C    	movff	plusw1,btemp+11
 12021  01706E  1E0C               	comf	(btemp+11)^0,f,c
 12022  017070  2A0B               	incf	(btemp+10)^0,f,c
 12023  017072  B4D8               	btfsc	status,2,c
 12024  017074  2A0C               	incf	(btemp+11)^0,f,c
 12025  017076  0E03               	movlw	3
 12026  017078  160B               	andwf	(btemp+10)^0,f,c
 12027  01707A  0E00               	movlw	0
 12028  01707C  160C               	andwf	(btemp+11)^0,f,c
 12029                           
 12030                           ;stkvar	_k @ sp[(-4)+2]
 12031  01707E  0EFE               	movlw	-2
 12032  017080  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12033  017086  0EFF               	movlw	-1
 12034  017088  0060  F033  FFE3   	movff	btemp+11,plusw1
 12035                           
 12036                           ;stkvar	_k @ sp[(-4)+2]
 12037                           ;stkvar	_s @ sp[(-4)+0]
 12038  01708E  0EFC               	movlw	-4
 12039  017090  50E3               	movf	plusw1,w,c
 12040  017092  6E01               	movwf	btemp^0,c
 12041  017094  0EFE               	movlw	-2
 12042  017096  50E3               	movf	plusw1,w,c
 12043  017098  2601               	addwf	btemp^0,f,c
 12044  01709A  0EFC               	movlw	-4
 12045  01709C  0060  F007  FFE3   	movff	btemp,plusw1
 12046  0170A2  0EFD               	movlw	-3
 12047  0170A4  50E3               	movf	plusw1,w,c
 12048  0170A6  6E01               	movwf	btemp^0,c
 12049  0170A8  0EFF               	movlw	-1
 12050  0170AA  50E3               	movf	plusw1,w,c
 12051  0170AC  2201               	addwfc	btemp^0,f,c
 12052  0170AE  0EFD               	movlw	-3
 12053  0170B0  0060  F007  FFE3   	movff	btemp,plusw1
 12054                           
 12055                           ;stkvar	_k @ sp[(-4)+2]
 12056                           ;stkvar	_n @ sp[(-4)+-6]
 12057  0170B6  0EF6               	movlw	-10
 12058  0170B8  50E3               	movf	plusw1,w,c
 12059  0170BA  6E01               	movwf	btemp^0,c
 12060  0170BC  0EFE               	movlw	-2
 12061  0170BE  50E3               	movf	plusw1,w,c
 12062  0170C0  5E01               	subwf	btemp^0,f,c
 12063  0170C2  0EF6               	movlw	-10
 12064  0170C4  0060  F007  FFE3   	movff	btemp,plusw1
 12065  0170CA  0EF7               	movlw	-9
 12066  0170CC  50E3               	movf	plusw1,w,c
 12067  0170CE  6E01               	movwf	btemp^0,c
 12068  0170D0  0EFF               	movlw	-1
 12069  0170D2  50E3               	movf	plusw1,w,c
 12070  0170D4  5A01               	subwfb	btemp^0,f,c
 12071  0170D6  0EF7               	movlw	-9
 12072  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 12073  0170DE  0EFC               	movlw	252
 12074  0170E0  6E0B               	movwf	(btemp+10)^0,c
 12075  0170E2  0EFF               	movlw	255
 12076  0170E4  6E0C               	movwf	(btemp+11)^0,c
 12077                           
 12078                           ;stkvar	_n @ sp[(-4)+-6]
 12079  0170E6  0EF6               	movlw	-10
 12080  0170E8  006F FF8C  F001    	movff	plusw1,btemp
 12081  0170EE  500B               	movf	(btemp+10)^0,w,c
 12082  0170F0  1601               	andwf	btemp^0,f,c
 12083  0170F2  0EF6               	movlw	-10
 12084  0170F4  0060  F007  FFE3   	movff	btemp,plusw1
 12085  0170FA  0EF7               	movlw	-9
 12086  0170FC  006F FF8C  F001    	movff	plusw1,btemp
 12087  017102  500C               	movf	(btemp+11)^0,w,c
 12088  017104  1601               	andwf	btemp^0,f,c
 12089  017106  0EF7               	movlw	-9
 12090  017108  D02E               	goto	L10
 12091  01710A                     l12150:
 12092                           
 12093                           ;stkvar	_c @ sp[(-4)+-4]
 12094                           ;stkvar	_s @ sp[(-4)+0]
 12095  01710A  0EFC               	movlw	-4
 12096  01710C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12097  017112  0EFD               	movlw	-3
 12098  017114  006F FF8F FFDA     	movff	plusw1,fsr2h
 12099  01711A  0EF8               	movlw	-8
 12100  01711C  006F FF8F FFDF     	movff	plusw1,indf2
 12101                           
 12102                           ;stkvar	_n @ sp[(-4)+-6]
 12103  017122  0EF6               	movlw	-10
 12104  017124  006F FF8C  F001    	movff	plusw1,btemp
 12105  01712A  0E01               	movlw	1
 12106  01712C  5E01               	subwf	btemp^0,f,c
 12107  01712E  0EF6               	movlw	-10
 12108  017130  0060  F007  FFE3   	movff	btemp,plusw1
 12109  017136  0EF7               	movlw	-9
 12110  017138  006F FF8C  F001    	movff	plusw1,btemp
 12111  01713E  0E00               	movlw	0
 12112  017140  5A01               	subwfb	btemp^0,f,c
 12113  017142  0EF7               	movlw	-9
 12114  017144  0060  F007  FFE3   	movff	btemp,plusw1
 12115                           
 12116                           ;stkvar	_s @ sp[(-4)+0]
 12117  01714A  0EFC               	movlw	-4
 12118  01714C  50E3               	movf	plusw1,w,c
 12119  01714E  0F01               	addlw	1
 12120  017150  6E01               	movwf	btemp^0,c
 12121  017152  0EFC               	movlw	-4
 12122  017154  0060  F007  FFE3   	movff	btemp,plusw1
 12123  01715A  6A01               	clrf	btemp^0,c
 12124  01715C  0EFD               	movlw	-3
 12125  01715E  50E3               	movf	plusw1,w,c
 12126  017160  2001               	addwfc	btemp^0,w,c
 12127  017162  6E01               	movwf	btemp^0,c
 12128  017164  0EFD               	movlw	-3
 12129  017166                     L10:
 12130  017166  0060  F007  FFE3   	movff	btemp,plusw1
 12131                           
 12132                           ;stkvar	_n @ sp[(-4)+-6]
 12133  01716C  0EF6               	movlw	-10
 12134  01716E  006F FF8C  F001    	movff	plusw1,btemp
 12135  017174  0EF7               	movlw	-9
 12136  017176  50E3               	movf	plusw1,w,c
 12137  017178  1001               	iorwf	btemp^0,w,c
 12138  01717A  A4D8               	btfss	status,2,c
 12139  01717C  D7C6               	goto	l12150
 12140  01717E                     u10950:
 12141                           
 12142                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12143  01717E  0EF6               	movlw	246
 12144  017180  26E1               	addwf	fsr1l,f,c
 12145  017182  0EFF               	movlw	255
 12146  017184  22E2               	addwfc	fsr1h,f,c
 12147  017186  0012               	return		;funcret
 12148  017188                     __end_of_memset:
 12149                           	opt callstack 0
 12150                           
 12151 ;; *************** function _printf *****************
 12152 ;; Defined at:
 12153 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  fmt             2  [STACK] PTR const unsigned char 
 12156 ;;		 -> STR_44(3), STR_43(3), 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  ap              2  [STACK] PTR void [1]
 12159 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12160 ;;  ret             2    0        int 
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  2  [STACK] int 
 12163 ;; Registers used:
 12164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12165 ;; Tracked objects:
 12166 ;;		On entry : 3F/3B
 12167 ;;		On exit  : 3F/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12174 ;;Total ram usage:        0 bytes
 12175 ;; Hardware stack levels used:    1
 12176 ;; Hardware stack levels required when called:   23
 12177 ;; This function calls:
 12178 ;;		_vfprintf
 12179 ;; This function is called by:
 12180 ;;		_eaDogM_WriteString
 12181 ;;		_send_lcd_data_dma
 12182 ;; This function uses a reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text50
 12186  01B47C                     __ptext50:
 12187                           	opt callstack 0
 12188  01B47C                     _printf:
 12189                           	opt callstack 0
 12190                           
 12191                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12192  01B47C  52E6               	movf	postinc1,f,c
 12193  01B47E  52E6               	movf	postinc1,f,c
 12194                           
 12195                           ;stkvar	?_printf @ sp[(-2)+-3]
 12196                           
 12197                           ;incstack = 0
 12198  01B480  0EFB               	movlw	251
 12199  01B482  24E1               	addwf	fsr1l,w,c
 12200  01B484  6E0B               	movwf	(btemp+10)^0,c
 12201  01B486  0EFF               	movlw	255
 12202  01B488  20E2               	addwfc	fsr1h,w,c
 12203  01B48A  6E0C               	movwf	(btemp+11)^0,c
 12204                           
 12205                           ;stkvar	_ap @ sp[(-2)+0]
 12206  01B48C  0EFF               	movlw	-1
 12207  01B48E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12208  01B494  0EFE               	movlw	-2
 12209  01B496  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12210                           
 12211                           ;stkvar	_ap @ sp[(-2)+0]
 12212  01B49C  0EFE               	movlw	254
 12213  01B49E  24E1               	addwf	fsr1l,w,c
 12214  01B4A0  6E01               	movwf	btemp^0,c
 12215  01B4A2  0EFF               	movlw	255
 12216  01B4A4  20E2               	addwfc	fsr1h,w,c
 12217  01B4A6  6E02               	movwf	(btemp+1)^0,c
 12218  01B4A8  0060  F007  FFE6   	movff	btemp,postinc1
 12219  01B4AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12220                           
 12221                           ;stkvar	_fmt @ sp[(-4)+-3]
 12222  01B4B4  0EF9               	movlw	-7
 12223  01B4B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12224  01B4BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12225  01B4C2  0E00               	movlw	0
 12226  01B4C4  6EE6               	movwf	postinc1,c
 12227  01B4C6  0E00               	movlw	0
 12228  01B4C8  6EE6               	movwf	postinc1,c
 12229  01B4CA  EC00  F0D5         	call	_vfprintf	;wreg free
 12230                           
 12231                           ; BSR set to: 0
 12232                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12233  01B4CE  52E5               	movf	postdec1,f,c
 12234  01B4D0  52E5               	movf	postdec1,f,c
 12235  01B4D2  52E5               	movf	postdec1,f,c
 12236  01B4D4  50E7               	movf	indf1,w,c
 12237  01B4D6  5EE1               	subwf	fsr1l,f,c
 12238  01B4D8  0E00               	movlw	0
 12239  01B4DA  5AE2               	subwfb	fsr1h,f,c
 12240  01B4DC  0012               	return		;funcret
 12241  01B4DE                     __end_of_printf:
 12242                           	opt callstack 0
 12243                           
 12244 ;; *************** function _vfprintf *****************
 12245 ;; Defined at:
 12246 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12249 ;;		 -> f(6), NULL(0), 
 12250 ;;  fmt             2  [STACK] PTR const unsigned char 
 12251 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12252 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12253 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12254 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12255 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12256 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12257 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12258 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12259 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12260 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12261 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12262 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12263 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12264 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12265 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12266 ;;  ap              2  [STACK] PTR PTR void 
 12267 ;;		 -> ap(2), ap(2), 
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;  cfmt            2  [STACK] PTR unsigned char 
 12270 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12271 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12272 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12273 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12274 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12275 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12276 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12277 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12278 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12279 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12280 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12281 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12282 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12283 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12284 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  2  [STACK] int 
 12287 ;; Registers used:
 12288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/1
 12291 ;;		On exit  : 3F/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12298 ;;Total ram usage:        0 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:   22
 12301 ;; This function calls:
 12302 ;;		_vfpfcnvrt
 12303 ;; This function is called by:
 12304 ;;		_sprintf
 12305 ;;		_printf
 12306 ;; This function uses a reentrant model
 12307 ;;
 12308                           
 12309                           	psect	text51
 12310  01AA00                     __ptext51:
 12311                           	opt callstack 0
 12312  01AA00                     _vfprintf:
 12313                           	opt callstack 0
 12314                           
 12315                           ; BSR set to: 0
 12316                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12317  01AA00  52E6               	movf	postinc1,f,c
 12318  01AA02  52E6               	movf	postinc1,f,c
 12319                           
 12320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12321                           ;stkvar	_fmt @ sp[(-2)+-4]
 12322                           
 12323                           ;incstack = 0
 12324 ;; hardware stack exceeded
 12325  01AA04  0EFA               	movlw	-6
 12326  01AA06  006F FF8C  F00B    	movff	plusw1,btemp+10
 12327  01AA0C  0EFB               	movlw	-5
 12328  01AA0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12329                           
 12330                           ;stkvar	_cfmt @ sp[(-2)+0]
 12331  01AA14  0EFF               	movlw	-1
 12332  01AA16  0060  F033  FFE3   	movff	btemp+11,plusw1
 12333  01AA1C  0EFE               	movlw	-2
 12334  01AA1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12337  01AA24  0100               	movlb	0	; () banked
 12338  01AA26  6B9A               	clrf	_nout& (0+255),b
 12339  01AA28  6B9B               	clrf	(_nout+1)& (0+255),b
 12340                           
 12341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12342  01AA2A  D021               	goto	l13000
 12343  01AA2C                     l12998:
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12347                           ;stkvar	_ap @ sp[(-2)+-6]
 12348  01AA2C  0EF8               	movlw	-8
 12349  01AA2E  006F FF8F FFE6     	movff	plusw1,postinc1
 12350  01AA34  006F FF8F FFE6     	movff	plusw1,postinc1
 12351                           
 12352                           ;stkvar	_cfmt @ sp[(-4)+0]
 12353  01AA3A  0EFC               	movlw	252
 12354  01AA3C  24E1               	addwf	fsr1l,w,c
 12355  01AA3E  6E01               	movwf	btemp^0,c
 12356  01AA40  0EFF               	movlw	255
 12357  01AA42  20E2               	addwfc	fsr1h,w,c
 12358  01AA44  6E02               	movwf	(btemp+1)^0,c
 12359  01AA46  0060  F007  FFE6   	movff	btemp,postinc1
 12360  01AA4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12361                           
 12362                           ;stkvar	_fp @ sp[(-6)+-2]
 12363  01AA52  0EF8               	movlw	-8
 12364  01AA54  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  01AA5A  006F FF8F FFE6     	movff	plusw1,postinc1
 12366  01AA60  ECF4  F091         	call	_vfpfcnvrt	;wreg free
 12367  01AA64  5001               	movf	btemp^0,w,c
 12368  01AA66  0100               	movlb	0	; () banked
 12369  01AA68  279A               	addwf	_nout& (0+255),f,b
 12370  01AA6A  5002               	movf	(btemp+1)^0,w,c
 12371  01AA6C  239B               	addwfc	(_nout+1)& (0+255),f,b
 12372  01AA6E                     l13000:
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12376                           ;stkvar	_cfmt @ sp[(-2)+0]
 12377  01AA6E  50E1               	movf	fsr1l,w,c
 12378  01AA70  0FFE               	addlw	-2
 12379  01AA72  6ED9               	movwf	fsr2l,c
 12380  01AA74  50E2               	movf	fsr1h,w,c
 12381  01AA76  6EDA               	movwf	fsr2h,c
 12382  01AA78  0EFF               	movlw	255
 12383  01AA7A  22DA               	addwfc	fsr2h,f,c
 12384  01AA7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12385  01AA82  006F FF77 FFF7     	movff	postdec2,tblptrh
 12386  01AA88                     	if	0	;tblptru may be non-zero
 12387  01AA88                     	endif
 12388  01AA88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12389  01AA88  0E00               	movlw	low (__mediumconst shr (0+16))
 12390  01AA8A  6EF8               	movwf	tblptru,c
 12391  01AA8C                     	endif
 12392  01AA8C  0008               	tblrd		*
 12393  01AA8E  50F5               	movf	tablat,w,c
 12394  01AA90  0900               	iorlw	0
 12395  01AA92  A4D8               	btfss	status,2,c
 12396  01AA94  D7CB               	goto	l12998
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12400  01AA96  0060  F268  F001   	movff	_nout,btemp
 12401  01AA9C  0060  F26C  F002   	movff	_nout+1,btemp+1
 12402                           
 12403                           ; BSR set to: 0
 12404                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12405  01AAA2  0EF8               	movlw	248
 12406  01AAA4  26E1               	addwf	fsr1l,f,c
 12407  01AAA6  0EFF               	movlw	255
 12408  01AAA8  22E2               	addwfc	fsr1h,f,c
 12409  01AAAA  0012               	return		;funcret
 12410  01AAAC                     __end_of_vfprintf:
 12411                           	opt callstack 0
 12412                           
 12413 ;; *************** function _vfpfcnvrt *****************
 12414 ;; Defined at:
 12415 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12418 ;;		 -> f(6), NULL(0), 
 12419 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12420 ;;		 -> cfmt(2), 
 12421 ;;  ap              2  [STACK] PTR PTR void 
 12422 ;;		 -> ap(2), ap(2), 
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;  llu             8  [STACK] unsigned long long 
 12425 ;;  ll              8  [STACK] long long 
 12426 ;;  f               4  [STACK] long long 
 12427 ;;  ct              3  [STACK] unsigned char [3]
 12428 ;;  vp              3    0        PTR void 
 12429 ;;  cp              2  [STACK] PTR unsigned char 
 12430 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12431 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12432 ;;		 -> V(191), 
 12433 ;;  i               2    0        int 
 12434 ;;  done            2    0        int 
 12435 ;;  c               1  [STACK] unsigned char 
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  2  [STACK] int 
 12438 ;; Registers used:
 12439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12449 ;;Total ram usage:        0 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:   21
 12452 ;; This function calls:
 12453 ;;		_atoi
 12454 ;;		_ctoa
 12455 ;;		_dtoa
 12456 ;;		_efgtoa
 12457 ;;		_fputc
 12458 ;;		_isdigit
 12459 ;;		_isupper
 12460 ;;		_stoa
 12461 ;;		_strncmp
 12462 ;;		_tolower
 12463 ;;		_utoa
 12464 ;;		_xtoa
 12465 ;; This function is called by:
 12466 ;;		_vfprintf
 12467 ;; This function uses a reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text52
 12471  0123E8                     __ptext52:
 12472                           	opt callstack 0
 12473  0123E8                     _vfpfcnvrt:
 12474                           	opt callstack 0
 12475                           
 12476                           ; BSR set to: 0
 12477                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12478  0123E8  0E20               	movlw	32
 12479  0123EA  26E1               	addwf	fsr1l,f,c
 12480  0123EC  0E00               	movlw	0
 12481  0123EE  22E2               	addwfc	fsr1h,f,c
 12482                           
 12483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12484                           ;stkvar	_fmt @ sp[(-32)+-4]
 12485                           
 12486                           ;incstack = 0
 12487 ;; hardware stack exceeded
 12488  0123F0  0EDC               	movlw	-36
 12489  0123F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12490  0123F8  0EDD               	movlw	-35
 12491  0123FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12492  012400  006F FF7B FFF6     	movff	postinc2,tblptrl
 12493  012406  006F FF77 FFF7     	movff	postdec2,tblptrh
 12494  01240C                     	if	0	;tblptru may be non-zero
 12495  01240C                     	endif
 12496  01240C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12497  01240C  0E00               	movlw	low (__mediumconst shr (0+16))
 12498  01240E  6EF8               	movwf	tblptru,c
 12499  012410                     	endif
 12500  012410  0008               	tblrd		*
 12501  012412  50F5               	movf	tablat,w,c
 12502  012414  0A25               	xorlw	37
 12503  012416  A4D8               	btfss	status,2,c
 12504  012418  EF9B  F099         	goto	l12960
 12505                           
 12506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12507                           ;stkvar	_fmt @ sp[(-32)+-4]
 12508  01241C  0EDC               	movlw	-36
 12509  01241E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12510  012424  0EDD               	movlw	-35
 12511  012426  006F FF8F FFDA     	movff	plusw1,fsr2h
 12512  01242C  2ADE               	incf	postinc2,f,c
 12513  01242E  0E00               	movlw	0
 12514  012430  22DD               	addwfc	postdec2,f,c
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12517  012432  6A3A               	clrf	_width^0,c
 12518  012434  6A3B               	clrf	(_width+1)^0,c
 12519  012436  6A3E               	clrf	_flags^0,c
 12520  012438  6A3F               	clrf	(_flags+1)^0,c
 12521                           
 12522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12523  01243A  683C               	setf	_prec^0,c
 12524  01243C  683D               	setf	(_prec+1)^0,c
 12525                           
 12526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12527                           ;stkvar	_fmt @ sp[(-32)+-4]
 12528  01243E  0EDC               	movlw	-36
 12529  012440  006F FF8F FFD9     	movff	plusw1,fsr2l
 12530  012446  0EDD               	movlw	-35
 12531  012448  006F FF8F FFDA     	movff	plusw1,fsr2h
 12532  01244E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12533  012454  006F FF77 FFF7     	movff	postdec2,tblptrh
 12534  01245A                     	if	0	;tblptru may be non-zero
 12535  01245A                     	endif
 12536  01245A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12537  01245A  0E00               	movlw	low (__mediumconst shr (0+16))
 12538  01245C  6EF8               	movwf	tblptru,c
 12539  01245E                     	endif
 12540  01245E  0008               	tblrd		*
 12541  012460  50F5               	movf	tablat,w,c
 12542  012462  0A2A               	xorlw	42
 12543  012464  A4D8               	btfss	status,2,c
 12544  012466  D031               	goto	l12778
 12545                           
 12546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12547                           ;stkvar	_fmt @ sp[(-32)+-4]
 12548  012468  0EDC               	movlw	-36
 12549  01246A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12550  012470  0EDD               	movlw	-35
 12551  012472  006F FF8F FFDA     	movff	plusw1,fsr2h
 12552  012478  2ADE               	incf	postinc2,f,c
 12553  01247A  0E00               	movlw	0
 12554  01247C  22DD               	addwfc	postdec2,f,c
 12555                           
 12556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12557                           ;stkvar	_ap @ sp[(-32)+-6]
 12558  01247E  0EDA               	movlw	-38
 12559  012480  006F FF8F FFD9     	movff	plusw1,fsr2l
 12560  012486  0EDB               	movlw	-37
 12561  012488  006F FF8F FFDA     	movff	plusw1,fsr2h
 12562  01248E  0E02               	movlw	2
 12563  012490  5EDE               	subwf	postinc2,f,c
 12564  012492  0E00               	movlw	0
 12565  012494  5ADD               	subwfb	postdec2,f,c
 12566  012496  006F FF78  F00B    	movff	postinc2,btemp+10
 12567  01249C  006F FF74  F00C    	movff	postdec2,btemp+11
 12568  0124A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12569  0124A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12570  0124AE  006F FF78  F03A    	movff	postinc2,_width
 12571  0124B4  006F FF74  F03B    	movff	postdec2,_width+1
 12572                           
 12573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12574  0124BA  AE3B               	btfss	(_width+1)^0,7,c
 12575  0124BC  D066               	goto	u12140
 12576                           
 12577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12578  0124BE  803E               	bsf	_flags^0,0,c
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12581  0124C0  6C3A               	negf	_width^0,c
 12582  0124C2  1E3B               	comf	(_width+1)^0,f,c
 12583  0124C4  B0D8               	btfsc	status,0,c
 12584  0124C6  2A3B               	incf	(_width+1)^0,f,c
 12585  0124C8  D060               	goto	u12140
 12586  0124CA                     l12778:
 12587                           
 12588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12589                           ;stkvar	_fmt @ sp[(-32)+-4]
 12590  0124CA  0EDC               	movlw	-36
 12591  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12592  0124D2  0EDD               	movlw	-35
 12593  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12594  0124DA  006F FF78  F00B    	movff	postinc2,btemp+10
 12595  0124E0  006F FF74  F00C    	movff	postdec2,btemp+11
 12596  0124E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12597  0124EC  0060  F033  FFE6   	movff	btemp+11,postinc1
 12598  0124F2  ECCF  F0BC         	call	_atoi	;wreg free
 12599  0124F6  0060  F004  F03A   	movff	btemp,_width
 12600  0124FC  0060  F008  F03B   	movff	btemp+1,_width+1
 12601                           
 12602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12603  012502  D00B               	goto	l12782
 12604  012504                     l12780:
 12605                           
 12606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12607                           ;stkvar	_fmt @ sp[(-32)+-4]
 12608  012504  0EDC               	movlw	-36
 12609  012506  006F FF8F FFD9     	movff	plusw1,fsr2l
 12610  01250C  0EDD               	movlw	-35
 12611  01250E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12612  012514  2ADE               	incf	postinc2,f,c
 12613  012516  0E00               	movlw	0
 12614  012518  22DD               	addwfc	postdec2,f,c
 12615  01251A                     l12782:
 12616  01251A  0ED0               	movlw	208
 12617  01251C  6E0B               	movwf	(btemp+10)^0,c
 12618  01251E  0EFF               	movlw	255
 12619  012520  6E0C               	movwf	(btemp+11)^0,c
 12620                           
 12621                           ;stkvar	_fmt @ sp[(-32)+-4]
 12622  012522  0EDC               	movlw	-36
 12623  012524  006F FF8F FFD9     	movff	plusw1,fsr2l
 12624  01252A  0EDD               	movlw	-35
 12625  01252C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12626  012532  006F FF7B FFF6     	movff	postinc2,tblptrl
 12627  012538  006F FF77 FFF7     	movff	postdec2,tblptrh
 12628  01253E                     	if	0	;tblptru may be non-zero
 12629  01253E                     	endif
 12630  01253E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12631  01253E  0E00               	movlw	low (__mediumconst shr (0+16))
 12632  012540  6EF8               	movwf	tblptru,c
 12633  012542                     	endif
 12634  012542  0008               	tblrd		*
 12635  012544  50F5               	movf	tablat,w,c
 12636  012546  6E09               	movwf	(btemp+8)^0,c
 12637  012548  6A0A               	clrf	(btemp+9)^0,c
 12638  01254A  500B               	movf	(btemp+10)^0,w,c
 12639  01254C  2609               	addwf	(btemp+8)^0,f,c
 12640  01254E  500C               	movf	(btemp+11)^0,w,c
 12641  012550  220A               	addwfc	(btemp+9)^0,f,c
 12642  012552  500A               	movf	(btemp+9)^0,w,c
 12643  012554  E106               	bnz	u12120
 12644  012556  0E0A               	movlw	10
 12645  012558  5C09               	subwf	(btemp+8)^0,w,c
 12646  01255A  B0D8               	btfsc	status,0,c
 12647  01255C  D002               	goto	u12120
 12648  01255E  0E01               	movlw	1
 12649  012560  D001               	goto	u12130
 12650  012562                     u12120:
 12651  012562  0E00               	movlw	0
 12652  012564                     u12130:
 12653  012564  6E0B               	movwf	(btemp+10)^0,c
 12654  012566  6A0C               	clrf	(btemp+11)^0,c
 12655                           
 12656                           ;stkvar	_vfpfcnvrt$5807 @ sp[(-32)+4]
 12657  012568  0EE4               	movlw	-28
 12658  01256A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12659  012570  0EE5               	movlw	-27
 12660  012572  0060  F033  FFE3   	movff	btemp+11,plusw1
 12661                           
 12662                           ;stkvar	_vfpfcnvrt$5807 @ sp[(-32)+4]
 12663  012578  0EE4               	movlw	-28
 12664  01257A  006F FF8C  F001    	movff	plusw1,btemp
 12665  012580  0EE5               	movlw	-27
 12666  012582  50E3               	movf	plusw1,w,c
 12667  012584  1001               	iorwf	btemp^0,w,c
 12668  012586  A4D8               	btfss	status,2,c
 12669  012588  D7BD               	goto	l12780
 12670  01258A                     u12140:
 12671                           
 12672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12673                           ;stkvar	_fmt @ sp[(-32)+-4]
 12674  01258A  0EDC               	movlw	-36
 12675  01258C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12676  012592  0EDD               	movlw	-35
 12677  012594  006F FF8F FFDA     	movff	plusw1,fsr2h
 12678  01259A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12679  0125A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12680  0125A6                     	if	0	;tblptru may be non-zero
 12681  0125A6                     	endif
 12682  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12683  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12684  0125A8  6EF8               	movwf	tblptru,c
 12685  0125AA                     	endif
 12686  0125AA  0008               	tblrd		*
 12687  0125AC  50F5               	movf	tablat,w,c
 12688  0125AE  0A2E               	xorlw	46
 12689  0125B0  A4D8               	btfss	status,2,c
 12690  0125B2  D0AC               	goto	u12190
 12691                           
 12692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12693  0125B4  6A3C               	clrf	_prec^0,c
 12694  0125B6  6A3D               	clrf	(_prec+1)^0,c
 12695                           
 12696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12697                           ;stkvar	_fmt @ sp[(-32)+-4]
 12698  0125B8  0EDC               	movlw	-36
 12699  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12700  0125C0  0EDD               	movlw	-35
 12701  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12702  0125C8  2ADE               	incf	postinc2,f,c
 12703  0125CA  0E00               	movlw	0
 12704  0125CC  22DD               	addwfc	postdec2,f,c
 12705                           
 12706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12707                           ;stkvar	_fmt @ sp[(-32)+-4]
 12708  0125CE  0EDC               	movlw	-36
 12709  0125D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12710  0125D6  0EDD               	movlw	-35
 12711  0125D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12712  0125DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12713  0125E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12714  0125EA                     	if	0	;tblptru may be non-zero
 12715  0125EA                     	endif
 12716  0125EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12717  0125EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12718  0125EC  6EF8               	movwf	tblptru,c
 12719  0125EE                     	endif
 12720  0125EE  0008               	tblrd		*
 12721  0125F0  50F5               	movf	tablat,w,c
 12722  0125F2  0A2A               	xorlw	42
 12723  0125F4  A4D8               	btfss	status,2,c
 12724  0125F6  D02A               	goto	l12800
 12725                           
 12726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12727                           ;stkvar	_fmt @ sp[(-32)+-4]
 12728  0125F8  0EDC               	movlw	-36
 12729  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12730  012600  0EDD               	movlw	-35
 12731  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 12732  012608  2ADE               	incf	postinc2,f,c
 12733  01260A  0E00               	movlw	0
 12734  01260C  22DD               	addwfc	postdec2,f,c
 12735                           
 12736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12737                           ;stkvar	_ap @ sp[(-32)+-6]
 12738  01260E  0EDA               	movlw	-38
 12739  012610  006F FF8F FFD9     	movff	plusw1,fsr2l
 12740  012616  0EDB               	movlw	-37
 12741  012618  006F FF8F FFDA     	movff	plusw1,fsr2h
 12742  01261E  0E02               	movlw	2
 12743  012620  5EDE               	subwf	postinc2,f,c
 12744  012622  0E00               	movlw	0
 12745  012624  5ADD               	subwfb	postdec2,f,c
 12746  012626  006F FF78  F00B    	movff	postinc2,btemp+10
 12747  01262C  006F FF74  F00C    	movff	postdec2,btemp+11
 12748  012632  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12749  012638  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12750  01263E  006F FF78  F03C    	movff	postinc2,_prec
 12751  012644  006F FF74  F03D    	movff	postdec2,_prec+1
 12752                           
 12753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12754  01264A  D060               	goto	u12190
 12755  01264C                     l12800:
 12756                           
 12757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12758                           ;stkvar	_fmt @ sp[(-32)+-4]
 12759  01264C  0EDC               	movlw	-36
 12760  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12761  012654  0EDD               	movlw	-35
 12762  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 12763  01265C  006F FF78  F00B    	movff	postinc2,btemp+10
 12764  012662  006F FF74  F00C    	movff	postdec2,btemp+11
 12765  012668  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12766  01266E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12767  012674  ECCF  F0BC         	call	_atoi	;wreg free
 12768  012678  0060  F004  F03C   	movff	btemp,_prec
 12769  01267E  0060  F008  F03D   	movff	btemp+1,_prec+1
 12770                           
 12771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12772  012684  D00B               	goto	l12804
 12773  012686                     l12802:
 12774                           
 12775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12776                           ;stkvar	_fmt @ sp[(-32)+-4]
 12777  012686  0EDC               	movlw	-36
 12778  012688  006F FF8F FFD9     	movff	plusw1,fsr2l
 12779  01268E  0EDD               	movlw	-35
 12780  012690  006F FF8F FFDA     	movff	plusw1,fsr2h
 12781  012696  2ADE               	incf	postinc2,f,c
 12782  012698  0E00               	movlw	0
 12783  01269A  22DD               	addwfc	postdec2,f,c
 12784  01269C                     l12804:
 12785  01269C  0ED0               	movlw	208
 12786  01269E  6E0B               	movwf	(btemp+10)^0,c
 12787  0126A0  0EFF               	movlw	255
 12788  0126A2  6E0C               	movwf	(btemp+11)^0,c
 12789                           
 12790                           ;stkvar	_fmt @ sp[(-32)+-4]
 12791  0126A4  0EDC               	movlw	-36
 12792  0126A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12793  0126AC  0EDD               	movlw	-35
 12794  0126AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12795  0126B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12796  0126BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12797  0126C0                     	if	0	;tblptru may be non-zero
 12798  0126C0                     	endif
 12799  0126C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12800  0126C0  0E00               	movlw	low (__mediumconst shr (0+16))
 12801  0126C2  6EF8               	movwf	tblptru,c
 12802  0126C4                     	endif
 12803  0126C4  0008               	tblrd		*
 12804  0126C6  50F5               	movf	tablat,w,c
 12805  0126C8  6E09               	movwf	(btemp+8)^0,c
 12806  0126CA  6A0A               	clrf	(btemp+9)^0,c
 12807  0126CC  500B               	movf	(btemp+10)^0,w,c
 12808  0126CE  2609               	addwf	(btemp+8)^0,f,c
 12809  0126D0  500C               	movf	(btemp+11)^0,w,c
 12810  0126D2  220A               	addwfc	(btemp+9)^0,f,c
 12811  0126D4  500A               	movf	(btemp+9)^0,w,c
 12812  0126D6  E106               	bnz	u12170
 12813  0126D8  0E0A               	movlw	10
 12814  0126DA  5C09               	subwf	(btemp+8)^0,w,c
 12815  0126DC  B0D8               	btfsc	status,0,c
 12816  0126DE  D002               	goto	u12170
 12817  0126E0  0E01               	movlw	1
 12818  0126E2  D001               	goto	u12180
 12819  0126E4                     u12170:
 12820  0126E4  0E00               	movlw	0
 12821  0126E6                     u12180:
 12822  0126E6  6E0B               	movwf	(btemp+10)^0,c
 12823  0126E8  6A0C               	clrf	(btemp+11)^0,c
 12824                           
 12825                           ;stkvar	_vfpfcnvrt$5808 @ sp[(-32)+0]
 12826  0126EA  0EE0               	movlw	-32
 12827  0126EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12828  0126F2  0EE1               	movlw	-31
 12829  0126F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12830                           
 12831                           ;stkvar	_vfpfcnvrt$5808 @ sp[(-32)+0]
 12832  0126FA  0EE0               	movlw	-32
 12833  0126FC  006F FF8C  F001    	movff	plusw1,btemp
 12834  012702  0EE1               	movlw	-31
 12835  012704  50E3               	movf	plusw1,w,c
 12836  012706  1001               	iorwf	btemp^0,w,c
 12837  012708  A4D8               	btfss	status,2,c
 12838  01270A  D7BD               	goto	l12802
 12839  01270C                     u12190:
 12840                           
 12841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12842                           ;stkvar	_fmt @ sp[(-32)+-4]
 12843  01270C  0EDC               	movlw	-36
 12844  01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12845  012714  0EDD               	movlw	-35
 12846  012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 12847  01271C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12848  012722  006F FF77 FFF7     	movff	postdec2,tblptrh
 12849  012728                     	if	0	;tblptru may be non-zero
 12850  012728                     	endif
 12851  012728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12852  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 12853  01272A  6EF8               	movwf	tblptru,c
 12854  01272C                     	endif
 12855  01272C  0008               	tblrd		*
 12856  01272E  50F5               	movf	tablat,w,c
 12857  012730  6EE6               	movwf	postinc1,c
 12858  012732  0E00               	movlw	0
 12859  012734  6EE6               	movwf	postinc1,c
 12860  012736  EC07  F0D8         	call	_tolower	;wreg free
 12861                           
 12862                           ;stkvar	_ct @ sp[(-32)+26]
 12863  01273A  0EFA               	movlw	-6
 12864  01273C  0060  F007  FFE3   	movff	btemp,plusw1
 12865                           
 12866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12867                           ;stkvar	_ct @ sp[(-32)+26]
 12868  012742  0EFA               	movlw	-6
 12869  012744  50E3               	movf	plusw1,w,c
 12870  012746  B4D8               	btfsc	status,2,c
 12871  012748  D05B               	goto	l12820
 12872                           
 12873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12874                           ;stkvar	_ct @ sp[(-32)+26]
 12875  01274A  0EFB               	movlw	251
 12876  01274C  24E1               	addwf	fsr1l,w,c
 12877  01274E  6ED9               	movwf	fsr2l,c
 12878  012750  0EFF               	movlw	255
 12879  012752  20E2               	addwfc	fsr1h,w,c
 12880  012754  6EDA               	movwf	fsr2h,c
 12881                           
 12882                           ;stkvar	_fmt @ sp[(-32)+-4]
 12883  012756  0EDC               	movlw	-36
 12884  012758  006F FF8F FFE9     	movff	plusw1,fsr0l
 12885  01275E  0EDD               	movlw	-35
 12886  012760  006F FF8F FFEA     	movff	plusw1,fsr0h
 12887  012766  006F FFB8  F00B    	movff	postinc0,btemp+10
 12888  01276C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12889  012772  0E01               	movlw	1
 12890  012774  260B               	addwf	(btemp+10)^0,f,c
 12891  012776  0E00               	movlw	0
 12892  012778  220C               	addwfc	(btemp+11)^0,f,c
 12893  01277A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12894  012780  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12895  012786                     	if	0	;tblptru may be non-zero
 12896  012786                     	endif
 12897  012786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12898  012786  0E00               	movlw	low (__mediumconst shr (0+16))
 12899  012788  6EF8               	movwf	tblptru,c
 12900  01278A                     	endif
 12901  01278A  0008               	tblrd		*
 12902  01278C  50F5               	movf	tablat,w,c
 12903  01278E  6EE6               	movwf	postinc1,c
 12904  012790  0E00               	movlw	0
 12905  012792  6EE6               	movwf	postinc1,c
 12906  012794  EC07  F0D8         	call	_tolower	;wreg free
 12907  012798  5001               	movf	btemp^0,w,c
 12908  01279A  6EDF               	movwf	indf2,c
 12909                           
 12910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12911                           ;stkvar	_ct @ sp[(-32)+26]
 12912  01279C  0EFB               	movlw	251
 12913  01279E  24E1               	addwf	fsr1l,w,c
 12914  0127A0  6ED9               	movwf	fsr2l,c
 12915  0127A2  0EFF               	movlw	255
 12916  0127A4  20E2               	addwfc	fsr1h,w,c
 12917  0127A6  6EDA               	movwf	fsr2h,c
 12918  0127A8  50DF               	movf	indf2,w,c
 12919  0127AA  B4D8               	btfsc	status,2,c
 12920  0127AC  D029               	goto	l12820
 12921                           
 12922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12923                           ;stkvar	_ct @ sp[(-32)+26]
 12924  0127AE  0EFC               	movlw	252
 12925  0127B0  24E1               	addwf	fsr1l,w,c
 12926  0127B2  6ED9               	movwf	fsr2l,c
 12927  0127B4  0EFF               	movlw	255
 12928  0127B6  20E2               	addwfc	fsr1h,w,c
 12929  0127B8  6EDA               	movwf	fsr2h,c
 12930                           
 12931                           ;stkvar	_fmt @ sp[(-32)+-4]
 12932  0127BA  0EDC               	movlw	-36
 12933  0127BC  006F FF8F FFE9     	movff	plusw1,fsr0l
 12934  0127C2  0EDD               	movlw	-35
 12935  0127C4  006F FF8F FFEA     	movff	plusw1,fsr0h
 12936  0127CA  006F FFB8  F00B    	movff	postinc0,btemp+10
 12937  0127D0  006F FFB4  F00C    	movff	postdec0,btemp+11
 12938  0127D6  0E02               	movlw	2
 12939  0127D8  260B               	addwf	(btemp+10)^0,f,c
 12940  0127DA  0E00               	movlw	0
 12941  0127DC  220C               	addwfc	(btemp+11)^0,f,c
 12942  0127DE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12943  0127E4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12944  0127EA                     	if	0	;tblptru may be non-zero
 12945  0127EA                     	endif
 12946  0127EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12947  0127EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12948  0127EC  6EF8               	movwf	tblptru,c
 12949  0127EE                     	endif
 12950  0127EE  0008               	tblrd		*
 12951  0127F0  50F5               	movf	tablat,w,c
 12952  0127F2  6EE6               	movwf	postinc1,c
 12953  0127F4  0E00               	movlw	0
 12954  0127F6  6EE6               	movwf	postinc1,c
 12955  0127F8  EC07  F0D8         	call	_tolower	;wreg free
 12956  0127FC  5001               	movf	btemp^0,w,c
 12957  0127FE  6EDF               	movwf	indf2,c
 12958  012800                     l12820:
 12959                           
 12960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12961                           ;stkvar	_fmt @ sp[(-32)+-4]
 12962  012800  0EDC               	movlw	-36
 12963  012802  006F FF8F FFD9     	movff	plusw1,fsr2l
 12964  012808  0EDD               	movlw	-35
 12965  01280A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12966  012810  006F FF7B FFF6     	movff	postinc2,tblptrl
 12967  012816  006F FF77 FFF7     	movff	postdec2,tblptrh
 12968  01281C                     	if	0	;tblptru may be non-zero
 12969  01281C                     	endif
 12970  01281C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12971  01281C  0E00               	movlw	low (__mediumconst shr (0+16))
 12972  01281E  6EF8               	movwf	tblptru,c
 12973  012820                     	endif
 12974  012820  0008               	tblrd		*
 12975  012822  50F5               	movf	tablat,w,c
 12976  012824  0A63               	xorlw	99
 12977  012826  A4D8               	btfss	status,2,c
 12978  012828  D037               	goto	l12830
 12979                           
 12980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12981                           ;stkvar	_fmt @ sp[(-32)+-4]
 12982  01282A  0EDC               	movlw	-36
 12983  01282C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12984  012832  0EDD               	movlw	-35
 12985  012834  006F FF8F FFDA     	movff	plusw1,fsr2h
 12986  01283A  2ADE               	incf	postinc2,f,c
 12987  01283C  0E00               	movlw	0
 12988  01283E  22DD               	addwfc	postdec2,f,c
 12989                           
 12990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12991                           ;stkvar	_ap @ sp[(-32)+-6]
 12992  012840  0EDA               	movlw	-38
 12993  012842  006F FF8F FFD9     	movff	plusw1,fsr2l
 12994  012848  0EDB               	movlw	-37
 12995  01284A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12996  012850  0E02               	movlw	2
 12997  012852  5EDE               	subwf	postinc2,f,c
 12998  012854  0E00               	movlw	0
 12999  012856  5ADD               	subwfb	postdec2,f,c
 13000  012858  006F FF78  F00B    	movff	postinc2,btemp+10
 13001  01285E  006F FF74  F00C    	movff	postdec2,btemp+11
 13002  012864  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13003  01286A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13004  012870  50DF               	movf	indf2,w,c
 13005  012872  6E0C               	movwf	(btemp+11)^0,c
 13006                           
 13007                           ;stkvar	_c @ sp[(-32)+31]
 13008  012874  0EFF               	movlw	-1
 13009  012876  0060  F033  FFE3   	movff	btemp+11,plusw1
 13010                           
 13011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13012                           ;stkvar	_c @ sp[(-32)+31]
 13013  01287C  0EFF               	movlw	-1
 13014  01287E  50E3               	movf	plusw1,w,c
 13015  012880  6EE6               	movwf	postinc1,c
 13016                           
 13017                           ;stkvar	_fp @ sp[(-33)+-2]
 13018  012882  0EDD               	movlw	-35
 13019  012884  006F FF8F FFE6     	movff	plusw1,postinc1
 13020  01288A  006F FF8F FFE6     	movff	plusw1,postinc1
 13021  012890  EC81  F0D7         	call	_ctoa	;wreg free
 13022  012894  EFC5  F099         	goto	l2448
 13023  012898                     l12830:
 13024                           
 13025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13026                           ;stkvar	_fmt @ sp[(-32)+-4]
 13027  012898  0EDC               	movlw	-36
 13028  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13029  0128A0  0EDD               	movlw	-35
 13030  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13031  0128A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13032  0128AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13033  0128B4                     	if	0	;tblptru may be non-zero
 13034  0128B4                     	endif
 13035  0128B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13036  0128B4  0E00               	movlw	low (__mediumconst shr (0+16))
 13037  0128B6  6EF8               	movwf	tblptru,c
 13038  0128B8                     	endif
 13039  0128B8  0008               	tblrd		*
 13040  0128BA  50F5               	movf	tablat,w,c
 13041  0128BC  0A64               	xorlw	100
 13042  0128BE  B4D8               	btfsc	status,2,c
 13043  0128C0  D015               	goto	u12240
 13044                           
 13045                           ;stkvar	_fmt @ sp[(-32)+-4]
 13046  0128C2  0EDC               	movlw	-36
 13047  0128C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13048  0128CA  0EDD               	movlw	-35
 13049  0128CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13050  0128D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13051  0128D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13052  0128DE                     	if	0	;tblptru may be non-zero
 13053  0128DE                     	endif
 13054  0128DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13055  0128DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13056  0128E0  6EF8               	movwf	tblptru,c
 13057  0128E2                     	endif
 13058  0128E2  0008               	tblrd		*
 13059  0128E4  50F5               	movf	tablat,w,c
 13060  0128E6  0A69               	xorlw	105
 13061  0128E8  A4D8               	btfss	status,2,c
 13062  0128EA  D076               	goto	l12842
 13063  0128EC                     u12240:
 13064                           
 13065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13066                           ;stkvar	_fmt @ sp[(-32)+-4]
 13067  0128EC  0EDC               	movlw	-36
 13068  0128EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13069  0128F4  0EDD               	movlw	-35
 13070  0128F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13071  0128FC  2ADE               	incf	postinc2,f,c
 13072  0128FE  0E00               	movlw	0
 13073  012900  22DD               	addwfc	postdec2,f,c
 13074                           
 13075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13076                           ;stkvar	_ap @ sp[(-32)+-6]
 13077  012902  0EDA               	movlw	-38
 13078  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 13079  01290A  0EDB               	movlw	-37
 13080  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13081  012912  0E02               	movlw	2
 13082  012914  5EDE               	subwf	postinc2,f,c
 13083  012916  0E00               	movlw	0
 13084  012918  5ADD               	subwfb	postdec2,f,c
 13085  01291A  006F FF78  F00B    	movff	postinc2,btemp+10
 13086  012920  006F FF74  F00C    	movff	postdec2,btemp+11
 13087  012926  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13088  01292C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13089  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 13090  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 13091                           
 13092                           ;stkvar	_ll @ sp[(-32)+14]
 13093  01293E  0EEE               	movlw	-18
 13094  012940  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13095  012946  0EEF               	movlw	-17
 13096  012948  0060  F033  FFE3   	movff	btemp+11,plusw1
 13097  01294E  6A01               	clrf	btemp^0,c
 13098  012950  BEE3               	btfsc	plusw1,7,c
 13099  012952  6801               	setf	btemp^0,c
 13100  012954  0EF0               	movlw	-16
 13101  012956  0060  F007  FFE3   	movff	btemp,plusw1
 13102  01295C  0EF1               	movlw	-15
 13103  01295E  0060  F007  FFE3   	movff	btemp,plusw1
 13104  012964  0EF2               	movlw	-14
 13105  012966  0060  F007  FFE3   	movff	btemp,plusw1
 13106  01296C  0EF3               	movlw	-13
 13107  01296E  0060  F007  FFE3   	movff	btemp,plusw1
 13108  012974  0EF4               	movlw	-12
 13109  012976  0060  F007  FFE3   	movff	btemp,plusw1
 13110  01297C  0EF5               	movlw	-11
 13111  01297E  0060  F007  FFE3   	movff	btemp,plusw1
 13112  012984                     l12838:
 13113                           
 13114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13115                           ;stkvar	_ll @ sp[(-32)+14]
 13116  012984  50E1               	movf	fsr1l,w,c
 13117  012986  0FEE               	addlw	-18
 13118  012988  6ED9               	movwf	fsr2l,c
 13119  01298A  50E2               	movf	fsr1h,w,c
 13120  01298C  6EDA               	movwf	fsr2h,c
 13121  01298E  0EFF               	movlw	255
 13122  012990  22DA               	addwfc	fsr2h,f,c
 13123  012992  006F FF7B FFE6     	movff	postinc2,postinc1
 13124  012998  006F FF7B FFE6     	movff	postinc2,postinc1
 13125  01299E  006F FF7B FFE6     	movff	postinc2,postinc1
 13126  0129A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13127  0129AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13128  0129B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13129  0129B6  006F FF7B FFE6     	movff	postinc2,postinc1
 13130  0129BC  006F FF7B FFE6     	movff	postinc2,postinc1
 13131                           
 13132                           ;stkvar	_fp @ sp[(-40)+-2]
 13133  0129C2  0ED6               	movlw	-42
 13134  0129C4  006F FF8F FFE6     	movff	plusw1,postinc1
 13135  0129CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13136  0129D0  EC1F  F0AC         	call	_dtoa	;wreg free
 13137  0129D4  EFC5  F099         	goto	l2448
 13138  0129D8                     l12842:
 13139                           
 13140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13141  0129D8  0E02               	movlw	2
 13142  0129DA  6EE6               	movwf	postinc1,c
 13143  0129DC  0E00               	movlw	0
 13144  0129DE  6EE6               	movwf	postinc1,c
 13145  0129E0  0EEA               	movlw	low STR_73
 13146  0129E2  6EE6               	movwf	postinc1,c
 13147  0129E4  0EFF               	movlw	high STR_73
 13148  0129E6  6EE6               	movwf	postinc1,c
 13149                           
 13150                           ;stkvar	_fmt @ sp[(-36)+-4]
 13151  0129E8  0ED8               	movlw	-40
 13152  0129EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13153  0129F0  0ED9               	movlw	-39
 13154  0129F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13155  0129F8  006F FF78  F00B    	movff	postinc2,btemp+10
 13156  0129FE  006F FF74  F00C    	movff	postdec2,btemp+11
 13157  012A04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13158  012A0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13159  012A10  EC4C  F0C0         	call	_strncmp	;wreg free
 13160  012A14  5001               	movf	btemp^0,w,c
 13161  012A16  1002               	iorwf	(btemp+1)^0,w,c
 13162  012A18  B4D8               	btfsc	status,2,c
 13163  012A1A  D022               	goto	u12260
 13164  012A1C  0E02               	movlw	2
 13165  012A1E  6EE6               	movwf	postinc1,c
 13166  012A20  0E00               	movlw	0
 13167  012A22  6EE6               	movwf	postinc1,c
 13168  012A24  0EF0               	movlw	low STR_77
 13169  012A26  6EE6               	movwf	postinc1,c
 13170  012A28  0EFF               	movlw	high STR_77
 13171  012A2A  6EE6               	movwf	postinc1,c
 13172                           
 13173                           ;stkvar	_fmt @ sp[(-36)+-4]
 13174  012A2C  0ED8               	movlw	-40
 13175  012A2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13176  012A34  0ED9               	movlw	-39
 13177  012A36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13178  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 13179  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 13180  012A48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13181  012A4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13182  012A54  EC4C  F0C0         	call	_strncmp	;wreg free
 13183  012A58  5001               	movf	btemp^0,w,c
 13184  012A5A  1002               	iorwf	(btemp+1)^0,w,c
 13185  012A5C  A4D8               	btfss	status,2,c
 13186  012A5E  D069               	goto	l12854
 13187  012A60                     u12260:
 13188                           
 13189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13190                           ;stkvar	_fmt @ sp[(-32)+-4]
 13191  012A60  0EDC               	movlw	-36
 13192  012A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 13193  012A68  0EDD               	movlw	-35
 13194  012A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13195  012A70  0E02               	movlw	2
 13196  012A72  26DE               	addwf	postinc2,f,c
 13197  012A74  0E00               	movlw	0
 13198  012A76  22DD               	addwfc	postdec2,f,c
 13199                           
 13200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13201                           ;stkvar	_ap @ sp[(-32)+-6]
 13202  012A78  0EDA               	movlw	-38
 13203  012A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13204  012A80  0EDB               	movlw	-37
 13205  012A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 13206  012A88  0E04               	movlw	4
 13207  012A8A  5EDE               	subwf	postinc2,f,c
 13208  012A8C  0E00               	movlw	0
 13209  012A8E  5ADD               	subwfb	postdec2,f,c
 13210  012A90  006F FF78  F00B    	movff	postinc2,btemp+10
 13211  012A96  006F FF74  F00C    	movff	postdec2,btemp+11
 13212  012A9C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13213  012AA2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13214  012AA8  006F FF78  F009    	movff	postinc2,btemp+8
 13215  012AAE  006F FF78  F00A    	movff	postinc2,btemp+9
 13216  012AB4  006F FF78  F00B    	movff	postinc2,btemp+10
 13217  012ABA  006F FF78  F00C    	movff	postinc2,btemp+11
 13218  012AC0  0060  F024  F011   	movff	btemp+8,btemp+16
 13219  012AC6  0060  F028  F012   	movff	btemp+9,btemp+17
 13220  012ACC  0060  F02C  F013   	movff	btemp+10,btemp+18
 13221  012AD2  0060  F030  F014   	movff	btemp+11,btemp+19
 13222  012AD8  6A15               	clrf	(btemp+20)^0,c
 13223  012ADA  BE14               	btfsc	(btemp+19)^0,7,c
 13224  012ADC  6815               	setf	(btemp+20)^0,c
 13225  012ADE  0060  F054  F016   	movff	btemp+20,btemp+21
 13226  012AE4  0060  F054  F017   	movff	btemp+20,btemp+22
 13227  012AEA  0060  F054  F018   	movff	btemp+20,btemp+23
 13228                           
 13229                           ;stkvar	_ll @ sp[(-32)+14]
 13230  012AF0  0EEE               	movlw	-18
 13231  012AF2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13232  012AF8  0EEF               	movlw	-17
 13233  012AFA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13234  012B00  0EF0               	movlw	-16
 13235  012B02  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13236  012B08  0EF1               	movlw	-15
 13237  012B0A  0060  F053  FFE3   	movff	btemp+19,plusw1
 13238  012B10  0EF2               	movlw	-14
 13239  012B12  0060  F057  FFE3   	movff	btemp+20,plusw1
 13240  012B18  0EF3               	movlw	-13
 13241  012B1A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13242  012B20  0EF4               	movlw	-12
 13243  012B22  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13244  012B28  0EF5               	movlw	-11
 13245  012B2A  0060  F063  FFE3   	movff	btemp+23,plusw1
 13246  012B30  D729               	goto	l12838
 13247  012B32                     l12854:
 13248                           
 13249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13250                           ;stkvar	_ct @ sp[(-32)+26]
 13251  012B32  0EFA               	movlw	-6
 13252  012B34  006F FF8C  F001    	movff	plusw1,btemp
 13253  012B3A  0E66               	movlw	102
 13254  012B3C  1801               	xorwf	btemp^0,w,c
 13255  012B3E  A4D8               	btfss	status,2,c
 13256  012B40  D06E               	goto	l12866
 13257                           
 13258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13259                           ;stkvar	_fmt @ sp[(-32)+-4]
 13260  012B42  0EDC               	movlw	-36
 13261  012B44  006F FF8F FFD9     	movff	plusw1,fsr2l
 13262  012B4A  0EDD               	movlw	-35
 13263  012B4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13264  012B52  006F FF7B FFF6     	movff	postinc2,tblptrl
 13265  012B58  006F FF77 FFF7     	movff	postdec2,tblptrh
 13266  012B5E                     	if	0	;tblptru may be non-zero
 13267  012B5E                     	endif
 13268  012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13269  012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 13270  012B60  6EF8               	movwf	tblptru,c
 13271  012B62                     	endif
 13272                           
 13273                           ;stkvar	_c @ sp[(-32)+31]
 13274  012B62  0008               	tblrd		*
 13275  012B64  0EFF               	movlw	-1
 13276  012B66  006F FFD7 FFE3     	movff	tablat,plusw1
 13277                           
 13278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13279                           ;stkvar	_fmt @ sp[(-32)+-4]
 13280  012B6C  0EDC               	movlw	-36
 13281  012B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13282  012B74  0EDD               	movlw	-35
 13283  012B76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13284  012B7C  2ADE               	incf	postinc2,f,c
 13285  012B7E  0E00               	movlw	0
 13286  012B80  22DD               	addwfc	postdec2,f,c
 13287                           
 13288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13289                           ;stkvar	_ap @ sp[(-32)+-6]
 13290  012B82  0EDA               	movlw	-38
 13291  012B84  006F FF8F FFD9     	movff	plusw1,fsr2l
 13292  012B8A  0EDB               	movlw	-37
 13293  012B8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13294  012B92  0E04               	movlw	4
 13295  012B94  5EDE               	subwf	postinc2,f,c
 13296  012B96  0E00               	movlw	0
 13297  012B98  5ADD               	subwfb	postdec2,f,c
 13298  012B9A  006F FF78  F00B    	movff	postinc2,btemp+10
 13299  012BA0  006F FF74  F00C    	movff	postdec2,btemp+11
 13300  012BA6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13301  012BAC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13302  012BB2  006F FF78  F009    	movff	postinc2,btemp+8
 13303  012BB8  006F FF78  F00A    	movff	postinc2,btemp+9
 13304  012BBE  006F FF78  F00B    	movff	postinc2,btemp+10
 13305  012BC4  006F FF78  F00C    	movff	postinc2,btemp+11
 13306                           
 13307                           ;stkvar	_f @ sp[(-32)+22]
 13308  012BCA  0EF6               	movlw	-10
 13309  012BCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 13310  012BD2  0EF7               	movlw	-9
 13311  012BD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13312  012BDA  0EF8               	movlw	-8
 13313  012BDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13314  012BE2  0EF9               	movlw	-7
 13315  012BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13316  012BEA                     l12862:
 13317                           
 13318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13319                           ;stkvar	_c @ sp[(-32)+31]
 13320  012BEA  0EFF               	movlw	-1
 13321  012BEC  50E3               	movf	plusw1,w,c
 13322  012BEE  6EE6               	movwf	postinc1,c
 13323                           
 13324                           ;stkvar	_f @ sp[(-33)+22]
 13325  012BF0  0EF5               	movlw	-11
 13326  012BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 13327  012BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13328  012BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13329  012C04  006F FF8F FFE6     	movff	plusw1,postinc1
 13330                           
 13331                           ;stkvar	_fp @ sp[(-37)+-2]
 13332  012C0A  0ED9               	movlw	-39
 13333  012C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13334  012C12  006F FF8F FFE6     	movff	plusw1,postinc1
 13335  012C18  EC00  F080         	call	_efgtoa	;wreg free
 13336  012C1C  D3B6               	goto	l2448
 13337  012C1E                     l12866:
 13338                           
 13339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13340  012C1E  0E02               	movlw	2
 13341  012C20  6EE6               	movwf	postinc1,c
 13342  012C22  0E00               	movlw	0
 13343  012C24  6EE6               	movwf	postinc1,c
 13344  012C26  0EED               	movlw	low STR_82
 13345  012C28  6EE6               	movwf	postinc1,c
 13346  012C2A  0EFF               	movlw	high STR_82
 13347  012C2C  6EE6               	movwf	postinc1,c
 13348                           
 13349                           ;stkvar	_ct @ sp[(-36)+26]
 13350  012C2E  0EF6               	movlw	246
 13351  012C30  24E1               	addwf	fsr1l,w,c
 13352  012C32  6E01               	movwf	btemp^0,c
 13353  012C34  0EFF               	movlw	255
 13354  012C36  20E2               	addwfc	fsr1h,w,c
 13355  012C38  6E02               	movwf	(btemp+1)^0,c
 13356  012C3A  0060  F007  FFE6   	movff	btemp,postinc1
 13357  012C40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13358  012C46  EC4C  F0C0         	call	_strncmp	;wreg free
 13359  012C4A  5001               	movf	btemp^0,w,c
 13360  012C4C  1002               	iorwf	(btemp+1)^0,w,c
 13361  012C4E  A4D8               	btfss	status,2,c
 13362  012C50  D096               	goto	l12886
 13363                           
 13364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13365                           ;stkvar	_fmt @ sp[(-32)+-4]
 13366  012C52  0EDC               	movlw	-36
 13367  012C54  006F FF8F FFD9     	movff	plusw1,fsr2l
 13368  012C5A  0EDD               	movlw	-35
 13369  012C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13370  012C62  006F FF78  F00B    	movff	postinc2,btemp+10
 13371  012C68  006F FF74  F00C    	movff	postdec2,btemp+11
 13372  012C6E  0E01               	movlw	1
 13373  012C70  260B               	addwf	(btemp+10)^0,f,c
 13374  012C72  0E00               	movlw	0
 13375  012C74  220C               	addwfc	(btemp+11)^0,f,c
 13376  012C76  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13377  012C7C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13378  012C82                     	if	0	;tblptru may be non-zero
 13379  012C82                     	endif
 13380  012C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13381  012C82  0E00               	movlw	low (__mediumconst shr (0+16))
 13382  012C84  6EF8               	movwf	tblptru,c
 13383  012C86                     	endif
 13384                           
 13385                           ;stkvar	_c @ sp[(-32)+31]
 13386  012C86  0008               	tblrd		*
 13387  012C88  0EFF               	movlw	-1
 13388  012C8A  006F FFD7 FFE3     	movff	tablat,plusw1
 13389  012C90  0EBF               	movlw	191
 13390  012C92  6E0B               	movwf	(btemp+10)^0,c
 13391  012C94  0EFF               	movlw	255
 13392  012C96  6E0C               	movwf	(btemp+11)^0,c
 13393                           
 13394                           ;stkvar	_fmt @ sp[(-32)+-4]
 13395  012C98  0EDC               	movlw	-36
 13396  012C9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13397  012CA0  0EDD               	movlw	-35
 13398  012CA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13399  012CA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13400  012CAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13401  012CB4                     	if	0	;tblptru may be non-zero
 13402  012CB4                     	endif
 13403  012CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13404  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13405  012CB6  6EF8               	movwf	tblptru,c
 13406  012CB8                     	endif
 13407  012CB8  0008               	tblrd		*
 13408  012CBA  50F5               	movf	tablat,w,c
 13409  012CBC  6E09               	movwf	(btemp+8)^0,c
 13410  012CBE  6A0A               	clrf	(btemp+9)^0,c
 13411  012CC0  500B               	movf	(btemp+10)^0,w,c
 13412  012CC2  2609               	addwf	(btemp+8)^0,f,c
 13413  012CC4  500C               	movf	(btemp+11)^0,w,c
 13414  012CC6  220A               	addwfc	(btemp+9)^0,f,c
 13415  012CC8  500A               	movf	(btemp+9)^0,w,c
 13416  012CCA  E106               	bnz	u12290
 13417  012CCC  0E1A               	movlw	26
 13418  012CCE  5C09               	subwf	(btemp+8)^0,w,c
 13419  012CD0  B0D8               	btfsc	status,0,c
 13420  012CD2  D002               	goto	u12290
 13421  012CD4  0E01               	movlw	1
 13422  012CD6  D001               	goto	u12300
 13423  012CD8                     u12290:
 13424  012CD8  0E00               	movlw	0
 13425  012CDA                     u12300:
 13426  012CDA  6E0B               	movwf	(btemp+10)^0,c
 13427  012CDC  6A0C               	clrf	(btemp+11)^0,c
 13428                           
 13429                           ;stkvar	_vfpfcnvrt$5819 @ sp[(-32)+2]
 13430  012CDE  0EE2               	movlw	-30
 13431  012CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13432  012CE6  0EE3               	movlw	-29
 13433  012CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13434                           
 13435                           ;stkvar	_vfpfcnvrt$5819 @ sp[(-32)+2]
 13436  012CEE  0EE2               	movlw	-30
 13437  012CF0  006F FF8C  F001    	movff	plusw1,btemp
 13438  012CF6  0EE3               	movlw	-29
 13439  012CF8  50E3               	movf	plusw1,w,c
 13440  012CFA  1001               	iorwf	btemp^0,w,c
 13441                           
 13442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13443                           ;stkvar	_ap @ sp[(-32)+-6]
 13444                           
 13445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13446                           
 13447                           ;stkvar	_f @ sp[(-32)+22]
 13448                           
 13449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13450                           ;stkvar	_ap @ sp[(-32)+-6]
 13451  012CFC  0EDA               	movlw	-38
 13452  012CFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13453  012D04  0EDB               	movlw	-37
 13454  012D06  006F FF8F FFDA     	movff	plusw1,fsr2h
 13455  012D0C  0E04               	movlw	4
 13456  012D0E  5EDE               	subwf	postinc2,f,c
 13457  012D10  0E00               	movlw	0
 13458  012D12  5ADD               	subwfb	postdec2,f,c
 13459  012D14  006F FF78  F00B    	movff	postinc2,btemp+10
 13460  012D1A  006F FF74  F00C    	movff	postdec2,btemp+11
 13461  012D20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13462  012D26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13463  012D2C  006F FF78  F009    	movff	postinc2,btemp+8
 13464  012D32  006F FF78  F00A    	movff	postinc2,btemp+9
 13465  012D38  006F FF78  F00B    	movff	postinc2,btemp+10
 13466  012D3E  006F FF78  F00C    	movff	postinc2,btemp+11
 13467                           
 13468                           ;stkvar	_f @ sp[(-32)+22]
 13469  012D44  0EF6               	movlw	-10
 13470  012D46  0060  F027  FFE3   	movff	btemp+8,plusw1
 13471  012D4C  0EF7               	movlw	-9
 13472  012D4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13473  012D54  0EF8               	movlw	-8
 13474  012D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13475  012D5C  0EF9               	movlw	-7
 13476  012D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13477                           
 13478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13479                           ;stkvar	_fmt @ sp[(-32)+-4]
 13480  012D64  0EDC               	movlw	-36
 13481  012D66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13482  012D6C  0EDD               	movlw	-35
 13483  012D6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13484  012D74  0E02               	movlw	2
 13485  012D76  26DE               	addwf	postinc2,f,c
 13486  012D78  0E00               	movlw	0
 13487  012D7A  22DD               	addwfc	postdec2,f,c
 13488  012D7C  D736               	goto	l12862
 13489  012D7E                     l12886:
 13490                           
 13491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13492                           ;stkvar	_fmt @ sp[(-32)+-4]
 13493  012D7E  0EDC               	movlw	-36
 13494  012D80  006F FF8F FFD9     	movff	plusw1,fsr2l
 13495  012D86  0EDD               	movlw	-35
 13496  012D88  006F FF8F FFDA     	movff	plusw1,fsr2h
 13497  012D8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13498  012D94  006F FF77 FFF7     	movff	postdec2,tblptrh
 13499  012D9A                     	if	0	;tblptru may be non-zero
 13500  012D9A                     	endif
 13501  012D9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13502  012D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13503  012D9C  6EF8               	movwf	tblptru,c
 13504  012D9E                     	endif
 13505  012D9E  0008               	tblrd		*
 13506  012DA0  50F5               	movf	tablat,w,c
 13507  012DA2  0A73               	xorlw	115
 13508  012DA4  A4D8               	btfss	status,2,c
 13509  012DA6  D042               	goto	l12896
 13510                           
 13511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13512                           ;stkvar	_fmt @ sp[(-32)+-4]
 13513  012DA8  0EDC               	movlw	-36
 13514  012DAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13515  012DB0  0EDD               	movlw	-35
 13516  012DB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13517  012DB8  2ADE               	incf	postinc2,f,c
 13518  012DBA  0E00               	movlw	0
 13519  012DBC  22DD               	addwfc	postdec2,f,c
 13520                           
 13521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13522                           ;stkvar	_ap @ sp[(-32)+-6]
 13523  012DBE  0EDA               	movlw	-38
 13524  012DC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13525  012DC6  0EDB               	movlw	-37
 13526  012DC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13527  012DCE  0E02               	movlw	2
 13528  012DD0  5EDE               	subwf	postinc2,f,c
 13529  012DD2  0E00               	movlw	0
 13530  012DD4  5ADD               	subwfb	postdec2,f,c
 13531  012DD6  006F FF78  F00B    	movff	postinc2,btemp+10
 13532  012DDC  006F FF74  F00C    	movff	postdec2,btemp+11
 13533  012DE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13534  012DE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13535  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 13536  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 13537                           
 13538                           ;stkvar	_cp @ sp[(-32)+29]
 13539  012DFA  0EFE               	movlw	-2
 13540  012DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13541  012E02  0EFD               	movlw	-3
 13542  012E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13543                           
 13544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13545                           ;stkvar	_cp @ sp[(-32)+29]
 13546  012E0A  0EFD               	movlw	-3
 13547  012E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13548  012E12  006F FF8F FFE6     	movff	plusw1,postinc1
 13549                           
 13550                           ;stkvar	_fp @ sp[(-34)+-2]
 13551  012E18  0EDC               	movlw	-36
 13552  012E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13553  012E20  006F FF8F FFE6     	movff	plusw1,postinc1
 13554  012E26  EC30  F0BA         	call	_stoa	;wreg free
 13555  012E2A  D2AF               	goto	l2448
 13556  012E2C                     l12896:
 13557                           
 13558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13559                           ;stkvar	_fmt @ sp[(-32)+-4]
 13560  012E2C  0EDC               	movlw	-36
 13561  012E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13562  012E34  0EDD               	movlw	-35
 13563  012E36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13564  012E3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13565  012E42  006F FF77 FFF7     	movff	postdec2,tblptrh
 13566  012E48                     	if	0	;tblptru may be non-zero
 13567  012E48                     	endif
 13568  012E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13569  012E48  0E00               	movlw	low (__mediumconst shr (0+16))
 13570  012E4A  6EF8               	movwf	tblptru,c
 13571  012E4C                     	endif
 13572  012E4C  0008               	tblrd		*
 13573  012E4E  50F5               	movf	tablat,w,c
 13574  012E50  0A75               	xorlw	117
 13575  012E52  A4D8               	btfss	status,2,c
 13576  012E54  D07C               	goto	l12906
 13577                           
 13578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13579                           ;stkvar	_fmt @ sp[(-32)+-4]
 13580  012E56  0EDC               	movlw	-36
 13581  012E58  006F FF8F FFD9     	movff	plusw1,fsr2l
 13582  012E5E  0EDD               	movlw	-35
 13583  012E60  006F FF8F FFDA     	movff	plusw1,fsr2h
 13584  012E66  2ADE               	incf	postinc2,f,c
 13585  012E68  0E00               	movlw	0
 13586  012E6A  22DD               	addwfc	postdec2,f,c
 13587                           
 13588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13589                           ;stkvar	_ap @ sp[(-32)+-6]
 13590  012E6C  0EDA               	movlw	-38
 13591  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13592  012E74  0EDB               	movlw	-37
 13593  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13594  012E7C  0E02               	movlw	2
 13595  012E7E  5EDE               	subwf	postinc2,f,c
 13596  012E80  0E00               	movlw	0
 13597  012E82  5ADD               	subwfb	postdec2,f,c
 13598  012E84  006F FF78  F00B    	movff	postinc2,btemp+10
 13599  012E8A  006F FF74  F00C    	movff	postdec2,btemp+11
 13600  012E90  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13601  012E96  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13602  012E9C  006F FF78  F00B    	movff	postinc2,btemp+10
 13603  012EA2  006F FF74  F00C    	movff	postdec2,btemp+11
 13604  012EA8  500B               	movf	(btemp+10)^0,w,c
 13605  012EAA  6E11               	movwf	(btemp+16)^0,c
 13606  012EAC  500C               	movf	(btemp+11)^0,w,c
 13607  012EAE  6E12               	movwf	(btemp+17)^0,c
 13608  012EB0  6A13               	clrf	(btemp+18)^0,c
 13609  012EB2  6A14               	clrf	(btemp+19)^0,c
 13610  012EB4  6A15               	clrf	(btemp+20)^0,c
 13611  012EB6  6A16               	clrf	(btemp+21)^0,c
 13612  012EB8  6A17               	clrf	(btemp+22)^0,c
 13613  012EBA  6A18               	clrf	(btemp+23)^0,c
 13614                           
 13615                           ;stkvar	_llu @ sp[(-32)+6]
 13616  012EBC  0EE6               	movlw	-26
 13617  012EBE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13618  012EC4  0EE7               	movlw	-25
 13619  012EC6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13620  012ECC  0EE8               	movlw	-24
 13621  012ECE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13622  012ED4  0EE9               	movlw	-23
 13623  012ED6  0060  F053  FFE3   	movff	btemp+19,plusw1
 13624  012EDC  0EEA               	movlw	-22
 13625  012EDE  0060  F057  FFE3   	movff	btemp+20,plusw1
 13626  012EE4  0EEB               	movlw	-21
 13627  012EE6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13628  012EEC  0EEC               	movlw	-20
 13629  012EEE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13630  012EF4  0EED               	movlw	-19
 13631  012EF6  0060  F063  FFE3   	movff	btemp+23,plusw1
 13632                           
 13633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13634                           ;stkvar	_llu @ sp[(-32)+6]
 13635  012EFC  50E1               	movf	fsr1l,w,c
 13636  012EFE  0FE6               	addlw	-26
 13637  012F00  6ED9               	movwf	fsr2l,c
 13638  012F02  50E2               	movf	fsr1h,w,c
 13639  012F04  6EDA               	movwf	fsr2h,c
 13640  012F06  0EFF               	movlw	255
 13641  012F08  22DA               	addwfc	fsr2h,f,c
 13642  012F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 13643  012F10  006F FF7B FFE6     	movff	postinc2,postinc1
 13644  012F16  006F FF7B FFE6     	movff	postinc2,postinc1
 13645  012F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 13646  012F22  006F FF7B FFE6     	movff	postinc2,postinc1
 13647  012F28  006F FF7B FFE6     	movff	postinc2,postinc1
 13648  012F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 13649  012F34  006F FF7B FFE6     	movff	postinc2,postinc1
 13650                           
 13651                           ;stkvar	_fp @ sp[(-40)+-2]
 13652  012F3A  0ED6               	movlw	-42
 13653  012F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13654  012F42  006F FF8F FFE6     	movff	plusw1,postinc1
 13655  012F48  EC18  F0B4         	call	_utoa	;wreg free
 13656  012F4C  D21E               	goto	l2448
 13657  012F4E                     l12906:
 13658                           
 13659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13660  012F4E  0E02               	movlw	2
 13661  012F50  6EE6               	movwf	postinc1,c
 13662  012F52  0E00               	movlw	0
 13663  012F54  6EE6               	movwf	postinc1,c
 13664  012F56  0EF3               	movlw	low STR_87
 13665  012F58  6EE6               	movwf	postinc1,c
 13666  012F5A  0EFF               	movlw	high STR_87
 13667  012F5C  6EE6               	movwf	postinc1,c
 13668                           
 13669                           ;stkvar	_fmt @ sp[(-36)+-4]
 13670  012F5E  0ED8               	movlw	-40
 13671  012F60  006F FF8F FFD9     	movff	plusw1,fsr2l
 13672  012F66  0ED9               	movlw	-39
 13673  012F68  006F FF8F FFDA     	movff	plusw1,fsr2h
 13674  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 13675  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 13676  012F7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13677  012F80  0060  F033  FFE6   	movff	btemp+11,postinc1
 13678  012F86  EC4C  F0C0         	call	_strncmp	;wreg free
 13679  012F8A  5001               	movf	btemp^0,w,c
 13680  012F8C  1002               	iorwf	(btemp+1)^0,w,c
 13681  012F8E  A4D8               	btfss	status,2,c
 13682  012F90  D039               	goto	l12916
 13683                           
 13684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13685                           ;stkvar	_fmt @ sp[(-32)+-4]
 13686  012F92  0EDC               	movlw	-36
 13687  012F94  006F FF8F FFD9     	movff	plusw1,fsr2l
 13688  012F9A  0EDD               	movlw	-35
 13689  012F9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13690  012FA2  0E02               	movlw	2
 13691  012FA4  26DE               	addwf	postinc2,f,c
 13692  012FA6  0E00               	movlw	0
 13693  012FA8  22DD               	addwfc	postdec2,f,c
 13694                           
 13695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13696                           ;stkvar	_ap @ sp[(-32)+-6]
 13697  012FAA  0EDA               	movlw	-38
 13698  012FAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13699  012FB2  0EDB               	movlw	-37
 13700  012FB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13701  012FBA  0E04               	movlw	4
 13702  012FBC  5EDE               	subwf	postinc2,f,c
 13703  012FBE  0E00               	movlw	0
 13704  012FC0  5ADD               	subwfb	postdec2,f,c
 13705  012FC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13706  012FC8  006F FF74  F00C    	movff	postdec2,btemp+11
 13707  012FCE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13708  012FD4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13709  012FDA  006F FF78  F009    	movff	postinc2,btemp+8
 13710  012FE0  006F FF78  F00A    	movff	postinc2,btemp+9
 13711  012FE6  006F FF78  F00B    	movff	postinc2,btemp+10
 13712  012FEC  006F FF78  F00C    	movff	postinc2,btemp+11
 13713  012FF2  5009               	movf	(btemp+8)^0,w,c
 13714  012FF4  6E11               	movwf	(btemp+16)^0,c
 13715  012FF6  500A               	movf	(btemp+9)^0,w,c
 13716  012FF8  6E12               	movwf	(btemp+17)^0,c
 13717  012FFA  500B               	movf	(btemp+10)^0,w,c
 13718  012FFC  6E13               	movwf	(btemp+18)^0,c
 13719  012FFE  500C               	movf	(btemp+11)^0,w,c
 13720  013000  6E14               	movwf	(btemp+19)^0,c
 13721  013002  D758               	goto	L11
 13722  013004                     l12916:
 13723                           
 13724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13725                           ;stkvar	_fmt @ sp[(-32)+-4]
 13726  013004  0EDC               	movlw	-36
 13727  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 13728  01300C  0EDD               	movlw	-35
 13729  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13730  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 13731  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13732  013020                     	if	0	;tblptru may be non-zero
 13733  013020                     	endif
 13734  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13735  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 13736  013022  6EF8               	movwf	tblptru,c
 13737  013024                     	endif
 13738  013024  0008               	tblrd		*
 13739  013026  50F5               	movf	tablat,w,c
 13740  013028  0A78               	xorlw	120
 13741  01302A  B4D8               	btfsc	status,2,c
 13742  01302C  D015               	goto	u12360
 13743                           
 13744                           ;stkvar	_fmt @ sp[(-32)+-4]
 13745  01302E  0EDC               	movlw	-36
 13746  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 13747  013036  0EDD               	movlw	-35
 13748  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 13749  01303E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13750  013044  006F FF77 FFF7     	movff	postdec2,tblptrh
 13751  01304A                     	if	0	;tblptru may be non-zero
 13752  01304A                     	endif
 13753  01304A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13754  01304A  0E00               	movlw	low (__mediumconst shr (0+16))
 13755  01304C  6EF8               	movwf	tblptru,c
 13756  01304E                     	endif
 13757  01304E  0008               	tblrd		*
 13758  013050  50F5               	movf	tablat,w,c
 13759  013052  0A58               	xorlw	88
 13760  013054  A4D8               	btfss	status,2,c
 13761  013056  D094               	goto	l12930
 13762  013058                     u12360:
 13763                           
 13764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13765                           ;stkvar	_fmt @ sp[(-32)+-4]
 13766  013058  0EDC               	movlw	-36
 13767  01305A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13768  013060  0EDD               	movlw	-35
 13769  013062  006F FF8F FFDA     	movff	plusw1,fsr2h
 13770  013068  006F FF7B FFF6     	movff	postinc2,tblptrl
 13771  01306E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13772  013074                     	if	0	;tblptru may be non-zero
 13773  013074                     	endif
 13774  013074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13775  013074  0E00               	movlw	low (__mediumconst shr (0+16))
 13776  013076  6EF8               	movwf	tblptru,c
 13777  013078                     	endif
 13778                           
 13779                           ;stkvar	_c @ sp[(-32)+31]
 13780  013078  0008               	tblrd		*
 13781  01307A  0EFF               	movlw	-1
 13782  01307C  006F FFD7 FFE3     	movff	tablat,plusw1
 13783                           
 13784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13785                           ;stkvar	_fmt @ sp[(-32)+-4]
 13786  013082  0EDC               	movlw	-36
 13787  013084  006F FF8F FFD9     	movff	plusw1,fsr2l
 13788  01308A  0EDD               	movlw	-35
 13789  01308C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13790  013092  2ADE               	incf	postinc2,f,c
 13791  013094  0E00               	movlw	0
 13792  013096  22DD               	addwfc	postdec2,f,c
 13793                           
 13794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13795                           ;stkvar	_ap @ sp[(-32)+-6]
 13796  013098  0EDA               	movlw	-38
 13797  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13798  0130A0  0EDB               	movlw	-37
 13799  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13800  0130A8  0E02               	movlw	2
 13801  0130AA  5EDE               	subwf	postinc2,f,c
 13802  0130AC  0E00               	movlw	0
 13803  0130AE  5ADD               	subwfb	postdec2,f,c
 13804  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 13805  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 13806  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13807  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13808  0130C8  006F FF78  F00B    	movff	postinc2,btemp+10
 13809  0130CE  006F FF74  F00C    	movff	postdec2,btemp+11
 13810  0130D4  500B               	movf	(btemp+10)^0,w,c
 13811  0130D6  6E11               	movwf	(btemp+16)^0,c
 13812  0130D8  500C               	movf	(btemp+11)^0,w,c
 13813  0130DA  6E12               	movwf	(btemp+17)^0,c
 13814  0130DC  6A13               	clrf	(btemp+18)^0,c
 13815  0130DE  6A14               	clrf	(btemp+19)^0,c
 13816  0130E0  6A15               	clrf	(btemp+20)^0,c
 13817  0130E2  6A16               	clrf	(btemp+21)^0,c
 13818  0130E4  6A17               	clrf	(btemp+22)^0,c
 13819  0130E6  6A18               	clrf	(btemp+23)^0,c
 13820                           
 13821                           ;stkvar	_llu @ sp[(-32)+6]
 13822  0130E8  0EE6               	movlw	-26
 13823  0130EA  0060  F047  FFE3   	movff	btemp+16,plusw1
 13824  0130F0  0EE7               	movlw	-25
 13825  0130F2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13826  0130F8  0EE8               	movlw	-24
 13827  0130FA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13828  013100  0EE9               	movlw	-23
 13829  013102  0060  F053  FFE3   	movff	btemp+19,plusw1
 13830  013108  0EEA               	movlw	-22
 13831  01310A  0060  F057  FFE3   	movff	btemp+20,plusw1
 13832  013110  0EEB               	movlw	-21
 13833  013112  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13834  013118  0EEC               	movlw	-20
 13835  01311A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13836  013120  0EED               	movlw	-19
 13837  013122  0060  F063  FFE3   	movff	btemp+23,plusw1
 13838                           
 13839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13840                           ;stkvar	_c @ sp[(-32)+31]
 13841  013128  0EFF               	movlw	-1
 13842  01312A  50E3               	movf	plusw1,w,c
 13843  01312C  6EE6               	movwf	postinc1,c
 13844                           
 13845                           ;stkvar	_llu @ sp[(-33)+6]
 13846  01312E  50E1               	movf	fsr1l,w,c
 13847  013130  0FE5               	addlw	-27
 13848  013132  6ED9               	movwf	fsr2l,c
 13849  013134  50E2               	movf	fsr1h,w,c
 13850  013136  6EDA               	movwf	fsr2h,c
 13851  013138  0EFF               	movlw	255
 13852  01313A  22DA               	addwfc	fsr2h,f,c
 13853  01313C  006F FF7B FFE6     	movff	postinc2,postinc1
 13854  013142  006F FF7B FFE6     	movff	postinc2,postinc1
 13855  013148  006F FF7B FFE6     	movff	postinc2,postinc1
 13856  01314E  006F FF7B FFE6     	movff	postinc2,postinc1
 13857  013154  006F FF7B FFE6     	movff	postinc2,postinc1
 13858  01315A  006F FF7B FFE6     	movff	postinc2,postinc1
 13859  013160  006F FF7B FFE6     	movff	postinc2,postinc1
 13860  013166  006F FF7B FFE6     	movff	postinc2,postinc1
 13861                           
 13862                           ;stkvar	_fp @ sp[(-41)+-2]
 13863  01316C  0ED5               	movlw	-43
 13864  01316E  006F FF8F FFE6     	movff	plusw1,postinc1
 13865  013174  006F FF8F FFE6     	movff	plusw1,postinc1
 13866  01317A  EC85  F0B0         	call	_xtoa	;wreg free
 13867  01317E  D105               	goto	l2448
 13868  013180                     l12930:
 13869                           
 13870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13871  013180  0E02               	movlw	2
 13872  013182  6EE6               	movwf	postinc1,c
 13873  013184  0E00               	movlw	0
 13874  013186  6EE6               	movwf	postinc1,c
 13875  013188  0EF6               	movlw	low STR_92
 13876  01318A  6EE6               	movwf	postinc1,c
 13877  01318C  0EFF               	movlw	high STR_92
 13878  01318E  6EE6               	movwf	postinc1,c
 13879                           
 13880                           ;stkvar	_fmt @ sp[(-36)+-4]
 13881  013190  0ED8               	movlw	-40
 13882  013192  006F FF8F FFD9     	movff	plusw1,fsr2l
 13883  013198  0ED9               	movlw	-39
 13884  01319A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13885  0131A0  006F FF78  F00B    	movff	postinc2,btemp+10
 13886  0131A6  006F FF74  F00C    	movff	postdec2,btemp+11
 13887  0131AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13888  0131B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13889  0131B8  EC4C  F0C0         	call	_strncmp	;wreg free
 13890  0131BC  5001               	movf	btemp^0,w,c
 13891  0131BE  1002               	iorwf	(btemp+1)^0,w,c
 13892  0131C0  B4D8               	btfsc	status,2,c
 13893  0131C2  D022               	goto	u12380
 13894  0131C4  0E02               	movlw	2
 13895  0131C6  6EE6               	movwf	postinc1,c
 13896  0131C8  0E00               	movlw	0
 13897  0131CA  6EE6               	movwf	postinc1,c
 13898  0131CC  0EE7               	movlw	low STR_96
 13899  0131CE  6EE6               	movwf	postinc1,c
 13900  0131D0  0EFF               	movlw	high STR_96
 13901  0131D2  6EE6               	movwf	postinc1,c
 13902                           
 13903                           ;stkvar	_fmt @ sp[(-36)+-4]
 13904  0131D4  0ED8               	movlw	-40
 13905  0131D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13906  0131DC  0ED9               	movlw	-39
 13907  0131DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13908  0131E4  006F FF78  F00B    	movff	postinc2,btemp+10
 13909  0131EA  006F FF74  F00C    	movff	postdec2,btemp+11
 13910  0131F0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13911  0131F6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13912  0131FC  EC4C  F0C0         	call	_strncmp	;wreg free
 13913  013200  5001               	movf	btemp^0,w,c
 13914  013202  1002               	iorwf	(btemp+1)^0,w,c
 13915  013204  A4D8               	btfss	status,2,c
 13916  013206  D058               	goto	l12944
 13917  013208                     u12380:
 13918                           
 13919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13920                           ;stkvar	_fmt @ sp[(-32)+-4]
 13921  013208  0EDC               	movlw	-36
 13922  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13923  013210  0EDD               	movlw	-35
 13924  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 13925  013218  006F FF78  F00B    	movff	postinc2,btemp+10
 13926  01321E  006F FF74  F00C    	movff	postdec2,btemp+11
 13927  013224  0E01               	movlw	1
 13928  013226  260B               	addwf	(btemp+10)^0,f,c
 13929  013228  0E00               	movlw	0
 13930  01322A  220C               	addwfc	(btemp+11)^0,f,c
 13931  01322C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13932  013232  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13933  013238                     	if	0	;tblptru may be non-zero
 13934  013238                     	endif
 13935  013238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13936  013238  0E00               	movlw	low (__mediumconst shr (0+16))
 13937  01323A  6EF8               	movwf	tblptru,c
 13938  01323C                     	endif
 13939                           
 13940                           ;stkvar	_c @ sp[(-32)+31]
 13941  01323C  0008               	tblrd		*
 13942  01323E  0EFF               	movlw	-1
 13943  013240  006F FFD7 FFE3     	movff	tablat,plusw1
 13944                           
 13945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13946                           ;stkvar	_fmt @ sp[(-32)+-4]
 13947  013246  0EDC               	movlw	-36
 13948  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 13949  01324E  0EDD               	movlw	-35
 13950  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 13951  013256  0E02               	movlw	2
 13952  013258  26DE               	addwf	postinc2,f,c
 13953  01325A  0E00               	movlw	0
 13954  01325C  22DD               	addwfc	postdec2,f,c
 13955                           
 13956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13957                           ;stkvar	_ap @ sp[(-32)+-6]
 13958  01325E  0EDA               	movlw	-38
 13959  013260  006F FF8F FFD9     	movff	plusw1,fsr2l
 13960  013266  0EDB               	movlw	-37
 13961  013268  006F FF8F FFDA     	movff	plusw1,fsr2h
 13962  01326E  0E04               	movlw	4
 13963  013270  5EDE               	subwf	postinc2,f,c
 13964  013272  0E00               	movlw	0
 13965  013274  5ADD               	subwfb	postdec2,f,c
 13966  013276  006F FF78  F00B    	movff	postinc2,btemp+10
 13967  01327C  006F FF74  F00C    	movff	postdec2,btemp+11
 13968  013282  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13969  013288  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13970  01328E  006F FF78  F009    	movff	postinc2,btemp+8
 13971  013294  006F FF78  F00A    	movff	postinc2,btemp+9
 13972  01329A  006F FF78  F00B    	movff	postinc2,btemp+10
 13973  0132A0  006F FF78  F00C    	movff	postinc2,btemp+11
 13974  0132A6  5009               	movf	(btemp+8)^0,w,c
 13975  0132A8  6E11               	movwf	(btemp+16)^0,c
 13976  0132AA  500A               	movf	(btemp+9)^0,w,c
 13977  0132AC  6E12               	movwf	(btemp+17)^0,c
 13978  0132AE  500B               	movf	(btemp+10)^0,w,c
 13979  0132B0  6E13               	movwf	(btemp+18)^0,c
 13980  0132B2  500C               	movf	(btemp+11)^0,w,c
 13981  0132B4  6E14               	movwf	(btemp+19)^0,c
 13982  0132B6  D714               	goto	L12
 13983  0132B8                     l12944:
 13984                           
 13985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13986                           ;stkvar	_fmt @ sp[(-32)+-4]
 13987  0132B8  0EDC               	movlw	-36
 13988  0132BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13989  0132C0  0EDD               	movlw	-35
 13990  0132C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13991  0132C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13992  0132CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13993  0132D4                     	if	0	;tblptru may be non-zero
 13994  0132D4                     	endif
 13995  0132D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13996  0132D4  0E00               	movlw	low (__mediumconst shr (0+16))
 13997  0132D6  6EF8               	movwf	tblptru,c
 13998  0132D8                     	endif
 13999  0132D8  0008               	tblrd		*
 14000  0132DA  50F5               	movf	tablat,w,c
 14001  0132DC  0A25               	xorlw	37
 14002  0132DE  A4D8               	btfss	status,2,c
 14003  0132E0  D01A               	goto	l12954
 14004                           
 14005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14006                           ;stkvar	_fmt @ sp[(-32)+-4]
 14007  0132E2  0EDC               	movlw	-36
 14008  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14009  0132EA  0EDD               	movlw	-35
 14010  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14011  0132F2  2ADE               	incf	postinc2,f,c
 14012  0132F4  0E00               	movlw	0
 14013  0132F6  22DD               	addwfc	postdec2,f,c
 14014                           
 14015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14016                           ;stkvar	_fp @ sp[(-32)+-2]
 14017  0132F8  0EDE               	movlw	-34
 14018  0132FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14019  013300  006F FF8F FFE6     	movff	plusw1,postinc1
 14020  013306  0E25               	movlw	37
 14021  013308  6EE6               	movwf	postinc1,c
 14022  01330A  0E00               	movlw	0
 14023  01330C  6EE6               	movwf	postinc1,c
 14024  01330E  ECE6  F0CC         	call	_fputc	;wreg free
 14025  013312                     l12950:
 14026                           
 14027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14028  013312  0E01               	movlw	1
 14029  013314  D00C               	goto	L13
 14030  013316                     l12954:
 14031                           
 14032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14033                           ;stkvar	_fmt @ sp[(-32)+-4]
 14034  013316  0EDC               	movlw	-36
 14035  013318  006F FF8F FFD9     	movff	plusw1,fsr2l
 14036  01331E  0EDD               	movlw	-35
 14037  013320  006F FF8F FFDA     	movff	plusw1,fsr2h
 14038  013326  2ADE               	incf	postinc2,f,c
 14039  013328  0E00               	movlw	0
 14040  01332A  22DD               	addwfc	postdec2,f,c
 14041                           
 14042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14043  01332C  0E00               	movlw	0
 14044  01332E                     L13:
 14045  01332E  6E01               	movwf	btemp^0,c
 14046  013330  0E00               	movlw	0
 14047  013332  6E02               	movwf	(btemp+1)^0,c
 14048  013334  D02A               	goto	l2448
 14049  013336                     l12960:
 14050                           
 14051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14052                           ;stkvar	_fp @ sp[(-32)+-2]
 14053  013336  0EDE               	movlw	-34
 14054  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14055  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14056                           
 14057                           ;stkvar	_fmt @ sp[(-34)+-4]
 14058  013344  0EDA               	movlw	-38
 14059  013346  006F FF8F FFD9     	movff	plusw1,fsr2l
 14060  01334C  0EDB               	movlw	-37
 14061  01334E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14062  013354  006F FF7B FFF6     	movff	postinc2,tblptrl
 14063  01335A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14064  013360                     	if	0	;tblptru may be non-zero
 14065  013360                     	endif
 14066  013360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14067  013360  0E00               	movlw	low (__mediumconst shr (0+16))
 14068  013362  6EF8               	movwf	tblptru,c
 14069  013364                     	endif
 14070  013364  0008               	tblrd		*
 14071  013366  50F5               	movf	tablat,w,c
 14072  013368  6EE6               	movwf	postinc1,c
 14073  01336A  0E00               	movlw	0
 14074  01336C  6EE6               	movwf	postinc1,c
 14075  01336E  ECE6  F0CC         	call	_fputc	;wreg free
 14076                           
 14077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14078                           ;stkvar	_fmt @ sp[(-32)+-4]
 14079  013372  0EDC               	movlw	-36
 14080  013374  006F FF8F FFD9     	movff	plusw1,fsr2l
 14081  01337A  0EDD               	movlw	-35
 14082  01337C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14083  013382  2ADE               	incf	postinc2,f,c
 14084  013384  0E00               	movlw	0
 14085  013386  22DD               	addwfc	postdec2,f,c
 14086  013388  D7C4               	goto	l12950
 14087  01338A                     l2448:
 14088                           
 14089                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14090  01338A  0EDA               	movlw	218
 14091  01338C  26E1               	addwf	fsr1l,f,c
 14092  01338E  0EFF               	movlw	255
 14093  013390  22E2               	addwfc	fsr1h,f,c
 14094  013392  0012               	return		;funcret
 14095  013394                     __end_of_vfpfcnvrt:
 14096                           	opt callstack 0
 14097                           
 14098 ;; *************** function _xtoa *****************
 14099 ;; Defined at:
 14100 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14101 ;; Parameters:    Size  Location     Type
 14102 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14103 ;;		 -> f(6), NULL(0), 
 14104 ;;  d               8  [STACK] unsigned long long 
 14105 ;;  x               1  [STACK] unsigned char 
 14106 ;; Auto vars:     Size  Location     Type
 14107 ;;  n               8  [STACK] unsigned long long 
 14108 ;;  c               2  [STACK] int 
 14109 ;;  i               2  [STACK] int 
 14110 ;;  w               2  [STACK] int 
 14111 ;;  p               2  [STACK] int 
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  2  [STACK] int 
 14114 ;; Registers used:
 14115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;Total ram usage:        0 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:   20
 14128 ;; This function calls:
 14129 ;;		_isalpha
 14130 ;;		_isupper
 14131 ;;		_pad
 14132 ;;		_toupper
 14133 ;; This function is called by:
 14134 ;;		_vfpfcnvrt
 14135 ;; This function uses a reentrant model
 14136 ;;
 14137                           
 14138                           	psect	text53
 14139  01610A                     __ptext53:
 14140                           	opt callstack 0
 14141  01610A                     _xtoa:
 14142                           	opt callstack 0
 14143                           
 14144                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14145  01610A  0E14               	movlw	20
 14146  01610C  26E1               	addwf	fsr1l,f,c
 14147  01610E  0E00               	movlw	0
 14148  016110  22E2               	addwfc	fsr1h,f,c
 14149                           
 14150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14151                           
 14152                           ;incstack = 0
 14153 ;; hardware stack exceeded
 14154  016112  AE3D               	btfss	(_prec+1)^0,7,c
 14155                           
 14156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14157  016114  923E               	bcf	_flags^0,1,c
 14158                           
 14159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14160  016116  BE3D               	btfsc	(_prec+1)^0,7,c
 14161  016118  D005               	goto	u11920
 14162  01611A  503D               	movf	(_prec+1)^0,w,c
 14163  01611C  E110               	bnz	l12680
 14164  01611E  043C               	decf	_prec^0,w,c
 14165  016120  B0D8               	btfsc	status,0,c
 14166  016122  D00D               	goto	l12680
 14167  016124                     u11920:
 14168  016124  0E01               	movlw	1
 14169  016126  6E0B               	movwf	(btemp+10)^0,c
 14170  016128  0E00               	movlw	0
 14171  01612A  6E0C               	movwf	(btemp+11)^0,c
 14172                           
 14173                           ;stkvar	_p @ sp[(-20)+18]
 14174  01612C  0EFE               	movlw	-2
 14175  01612E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14176  016134  0EFF               	movlw	-1
 14177  016136  0060  F033  FFE3   	movff	btemp+11,plusw1
 14178  01613C  D008               	goto	l2398
 14179  01613E                     l12680:
 14180                           
 14181                           ;stkvar	_p @ sp[(-20)+18]
 14182  01613E  0EFE               	movlw	-2
 14183  016140  0060  F0F3  FFE3   	movff	_prec,plusw1
 14184  016146  0EFF               	movlw	-1
 14185  016148  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14186  01614E                     l2398:
 14187                           
 14188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14189                           ;stkvar	_w @ sp[(-20)+16]
 14190  01614E  0EFC               	movlw	-4
 14191  016150  0060  F0EB  FFE3   	movff	_width,plusw1
 14192  016156  0EFD               	movlw	-3
 14193  016158  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14194                           
 14195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14196  01615E  A83E               	btfss	_flags^0,4,c
 14197  016160  D00B               	goto	l12686
 14198                           
 14199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14200                           ;stkvar	_w @ sp[(-20)+16]
 14201  016162  50E1               	movf	fsr1l,w,c
 14202  016164  0FFC               	addlw	-4
 14203  016166  6ED9               	movwf	fsr2l,c
 14204  016168  50E2               	movf	fsr1h,w,c
 14205  01616A  6EDA               	movwf	fsr2h,c
 14206  01616C  0EFF               	movlw	255
 14207  01616E  22DA               	addwfc	fsr2h,f,c
 14208  016170  0EFE               	movlw	254
 14209  016172  26DE               	addwf	postinc2,f,c
 14210  016174  0EFF               	movlw	255
 14211  016176  22DD               	addwfc	postdec2,f,c
 14212  016178                     l12686:
 14213                           
 14214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14215                           ;stkvar	_d @ sp[(-20)+-10]
 14216  016178  0EE2               	movlw	226
 14217  01617A  24E1               	addwf	fsr1l,w,c
 14218  01617C  6ED9               	movwf	fsr2l,c
 14219  01617E  0EFF               	movlw	255
 14220  016180  20E2               	addwfc	fsr1h,w,c
 14221  016182  6EDA               	movwf	fsr2h,c
 14222                           
 14223                           ;stkvar	_n @ sp[(-20)+4]
 14224  016184  0E08               	movlw	8
 14225  016186  6E01               	movwf	btemp^0,c
 14226  016188  0EF0               	movlw	-16
 14227  01618A                     us1194999:
 14228  01618A  006F FF7B FFE3     	movff	postinc2,plusw1
 14229  016190  28E8               	incf	wreg,w,c
 14230  016192  2E01               	decfsz	btemp^0,f,c
 14231  016194  D7FA               	bra	us1194999
 14232                           
 14233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14234  016196  0E4F               	movlw	79
 14235  016198  6E0B               	movwf	(btemp+10)^0,c
 14236  01619A  0E00               	movlw	0
 14237  01619C  6E0C               	movwf	(btemp+11)^0,c
 14238                           
 14239                           ;stkvar	_i @ sp[(-20)+14]
 14240  01619E  0EFA               	movlw	-6
 14241  0161A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14242  0161A6  0EFB               	movlw	-5
 14243  0161A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14244                           
 14245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14246  0161AE  0102               	movlb	2	; () banked
 14247  0161B0  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14248                           
 14249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14250  0161B2  D0EE               	goto	l12724
 14251  0161B4                     l12692:
 14252                           
 14253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14254                           ;stkvar	_i @ sp[(-20)+14]
 14255  0161B4  50E1               	movf	fsr1l,w,c
 14256  0161B6  0FFA               	addlw	-6
 14257  0161B8  6ED9               	movwf	fsr2l,c
 14258  0161BA  50E2               	movf	fsr1h,w,c
 14259  0161BC  6EDA               	movwf	fsr2h,c
 14260  0161BE  0EFF               	movlw	255
 14261  0161C0  22DA               	addwfc	fsr2h,f,c
 14262  0161C2  06DE               	decf	postinc2,f,c
 14263  0161C4  0E00               	movlw	0
 14264  0161C6  5ADD               	subwfb	postdec2,f,c
 14265                           
 14266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14267                           ;stkvar	_n @ sp[(-20)+4]
 14268  0161C8  0EF0               	movlw	-16
 14269  0161CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14270  0161D0  0EF1               	movlw	-15
 14271  0161D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14272  0161D8  0E0F               	movlw	15
 14273  0161DA  160B               	andwf	(btemp+10)^0,f,c
 14274  0161DC  0E00               	movlw	0
 14275  0161DE  160C               	andwf	(btemp+11)^0,f,c
 14276                           
 14277                           ;stkvar	_c @ sp[(-20)+12]
 14278  0161E0  0EF8               	movlw	-8
 14279  0161E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14280  0161E8  0EF9               	movlw	-7
 14281  0161EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14282                           
 14283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14284                           ;stkvar	_c @ sp[(-20)+12]
 14285  0161F0  0EF9               	movlw	-7
 14286  0161F2  BEE3               	btfsc	plusw1,7,c
 14287  0161F4  D00F               	goto	l12700
 14288  0161F6  0EF9               	movlw	-7
 14289  0161F8  50E3               	movf	plusw1,w,c
 14290  0161FA  E108               	bnz	u11950
 14291  0161FC  0EF8               	movlw	-8
 14292  0161FE  006F FF8C  F001    	movff	plusw1,btemp
 14293  016204  0E0A               	movlw	10
 14294  016206  5E01               	subwf	btemp^0,f,c
 14295  016208  A0D8               	btfss	status,0,c
 14296  01620A  D004               	goto	l12700
 14297  01620C                     u11950:
 14298                           
 14299                           ;stkvar	_c @ sp[(-20)+12]
 14300  01620C  0EF8               	movlw	-8
 14301  01620E  50E3               	movf	plusw1,w,c
 14302  016210  0F57               	addlw	87
 14303  016212  D003               	goto	L14
 14304  016214                     l12700:
 14305                           
 14306                           ;stkvar	_c @ sp[(-20)+12]
 14307  016214  0EF8               	movlw	-8
 14308  016216  50E3               	movf	plusw1,w,c
 14309  016218  0F30               	addlw	48
 14310  01621A                     L14:
 14311  01621A  6E0B               	movwf	(btemp+10)^0,c
 14312  01621C  0EF9               	movlw	-7
 14313  01621E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14314  016224  0E00               	movlw	0
 14315  016226  220C               	addwfc	(btemp+11)^0,f,c
 14316                           
 14317                           ;stkvar	_c @ sp[(-20)+12]
 14318  016228  0EF8               	movlw	-8
 14319  01622A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14320  016230  0EF9               	movlw	-7
 14321  016232  0060  F033  FFE3   	movff	btemp+11,plusw1
 14322  016238  0EBF               	movlw	191
 14323  01623A  6E0B               	movwf	(btemp+10)^0,c
 14324  01623C  0EFF               	movlw	255
 14325  01623E  6E0C               	movwf	(btemp+11)^0,c
 14326                           
 14327                           ;stkvar	_x @ sp[(-20)+-11]
 14328  016240  0EE1               	movlw	-31
 14329  016242  50E3               	movf	plusw1,w,c
 14330  016244  6E09               	movwf	(btemp+8)^0,c
 14331  016246  6A0A               	clrf	(btemp+9)^0,c
 14332  016248  500B               	movf	(btemp+10)^0,w,c
 14333  01624A  2609               	addwf	(btemp+8)^0,f,c
 14334  01624C  500C               	movf	(btemp+11)^0,w,c
 14335  01624E  220A               	addwfc	(btemp+9)^0,f,c
 14336  016250  500A               	movf	(btemp+9)^0,w,c
 14337  016252  E106               	bnz	u11960
 14338  016254  0E1A               	movlw	26
 14339  016256  5C09               	subwf	(btemp+8)^0,w,c
 14340  016258  B0D8               	btfsc	status,0,c
 14341  01625A  D002               	goto	u11960
 14342  01625C  0E01               	movlw	1
 14343  01625E  D001               	goto	u11970
 14344  016260                     u11960:
 14345  016260  0E00               	movlw	0
 14346  016262                     u11970:
 14347  016262  6E0B               	movwf	(btemp+10)^0,c
 14348  016264  6A0C               	clrf	(btemp+11)^0,c
 14349                           
 14350                           ;stkvar	_xtoa$5792 @ sp[(-20)+2]
 14351  016266  0EEE               	movlw	-18
 14352  016268  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14353  01626E  0EEF               	movlw	-17
 14354  016270  0060  F033  FFE3   	movff	btemp+11,plusw1
 14355                           
 14356                           ;stkvar	_xtoa$5792 @ sp[(-20)+2]
 14357  016276  0EEE               	movlw	-18
 14358  016278  006F FF8C  F001    	movff	plusw1,btemp
 14359  01627E  0EEF               	movlw	-17
 14360  016280  50E3               	movf	plusw1,w,c
 14361  016282  1001               	iorwf	btemp^0,w,c
 14362  016284  B4D8               	btfsc	status,2,c
 14363  016286  D041               	goto	l12716
 14364  016288  0E9F               	movlw	159
 14365  01628A  6E0B               	movwf	(btemp+10)^0,c
 14366  01628C  0EFF               	movlw	255
 14367  01628E  6E0C               	movwf	(btemp+11)^0,c
 14368                           
 14369                           ;stkvar	_c @ sp[(-20)+12]
 14370  016290  0EF8               	movlw	-8
 14371  016292  006F FF8C  F009    	movff	plusw1,btemp+8
 14372  016298  0EF9               	movlw	-7
 14373  01629A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14374  0162A0  0E20               	movlw	32
 14375  0162A2  1209               	iorwf	(btemp+8)^0,f,c
 14376  0162A4  0E00               	movlw	0
 14377  0162A6  120A               	iorwf	(btemp+9)^0,f,c
 14378  0162A8  500B               	movf	(btemp+10)^0,w,c
 14379  0162AA  2609               	addwf	(btemp+8)^0,f,c
 14380  0162AC  500C               	movf	(btemp+11)^0,w,c
 14381  0162AE  220A               	addwfc	(btemp+9)^0,f,c
 14382  0162B0  500A               	movf	(btemp+9)^0,w,c
 14383  0162B2  E106               	bnz	u11990
 14384  0162B4  0E1A               	movlw	26
 14385  0162B6  5C09               	subwf	(btemp+8)^0,w,c
 14386  0162B8  B0D8               	btfsc	status,0,c
 14387  0162BA  D002               	goto	u11990
 14388  0162BC  0E01               	movlw	1
 14389  0162BE  D001               	goto	u12000
 14390  0162C0                     u11990:
 14391  0162C0  0E00               	movlw	0
 14392  0162C2                     u12000:
 14393  0162C2  6E0B               	movwf	(btemp+10)^0,c
 14394  0162C4  6A0C               	clrf	(btemp+11)^0,c
 14395                           
 14396                           ;stkvar	_xtoa$5793 @ sp[(-20)+0]
 14397  0162C6  0EEC               	movlw	-20
 14398  0162C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14399  0162CE  0EED               	movlw	-19
 14400  0162D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14401                           
 14402                           ;stkvar	_xtoa$5793 @ sp[(-20)+0]
 14403  0162D6  0EEC               	movlw	-20
 14404  0162D8  006F FF8C  F001    	movff	plusw1,btemp
 14405  0162DE  0EED               	movlw	-19
 14406  0162E0  50E3               	movf	plusw1,w,c
 14407  0162E2  1001               	iorwf	btemp^0,w,c
 14408  0162E4  B4D8               	btfsc	status,2,c
 14409  0162E6  D011               	goto	l12716
 14410                           
 14411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14412                           ;stkvar	_c @ sp[(-20)+12]
 14413  0162E8  0EF8               	movlw	-8
 14414  0162EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14415  0162F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14416  0162F6  ECC5  F0D7         	call	_toupper	;wreg free
 14417                           
 14418                           ;stkvar	_c @ sp[(-20)+12]
 14419  0162FA  0EF8               	movlw	-8
 14420  0162FC  0060  F007  FFE3   	movff	btemp,plusw1
 14421  016302  0EF9               	movlw	-7
 14422  016304  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14423  01630A                     l12716:
 14424                           
 14425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14426                           ;stkvar	_c @ sp[(-20)+12]
 14427                           ;stkvar	_i @ sp[(-20)+14]
 14428  01630A  0EFA               	movlw	-6
 14429  01630C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14430  016312  0EFB               	movlw	-5
 14431  016314  006F FF8C  F00C    	movff	plusw1,btemp+11
 14432  01631A  0E97               	movlw	low _dbuf
 14433  01631C  240B               	addwf	(btemp+10)^0,w,c
 14434  01631E  6ED9               	movwf	fsr2l,c
 14435  016320  0E02               	movlw	high _dbuf
 14436  016322  200C               	addwfc	(btemp+11)^0,w,c
 14437  016324  6EDA               	movwf	fsr2h,c
 14438  016326  0EF8               	movlw	-8
 14439  016328  006F FF8F FFDF     	movff	plusw1,indf2
 14440                           
 14441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14442                           ;stkvar	_p @ sp[(-20)+18]
 14443  01632E  50E1               	movf	fsr1l,w,c
 14444  016330  0FFE               	addlw	-2
 14445  016332  6ED9               	movwf	fsr2l,c
 14446  016334  50E2               	movf	fsr1h,w,c
 14447  016336  6EDA               	movwf	fsr2h,c
 14448  016338  0EFF               	movlw	255
 14449  01633A  22DA               	addwfc	fsr2h,f,c
 14450  01633C  06DE               	decf	postinc2,f,c
 14451  01633E  0E00               	movlw	0
 14452  016340  5ADD               	subwfb	postdec2,f,c
 14453                           
 14454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14455                           ;stkvar	_w @ sp[(-20)+16]
 14456  016342  50E1               	movf	fsr1l,w,c
 14457  016344  0FFC               	addlw	-4
 14458  016346  6ED9               	movwf	fsr2l,c
 14459  016348  50E2               	movf	fsr1h,w,c
 14460  01634A  6EDA               	movwf	fsr2h,c
 14461  01634C  0EFF               	movlw	255
 14462  01634E  22DA               	addwfc	fsr2h,f,c
 14463  016350  06DE               	decf	postinc2,f,c
 14464  016352  0E00               	movlw	0
 14465  016354  5ADD               	subwfb	postdec2,f,c
 14466                           
 14467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14468  016356  0E04               	movlw	4
 14469  016358  6E0C               	movwf	(btemp+11)^0,c
 14470                           
 14471                           ;stkvar	_n @ sp[(-20)+4]
 14472  01635A  50E1               	movf	fsr1l,w,c
 14473  01635C  0FF0               	addlw	-16
 14474  01635E  6ED9               	movwf	fsr2l,c
 14475  016360  50E2               	movf	fsr1h,w,c
 14476  016362  6EDA               	movwf	fsr2h,c
 14477  016364  0EFF               	movlw	255
 14478  016366  22DA               	addwfc	fsr2h,f,c
 14479  016368  280C               	incf	(btemp+11)^0,w,c
 14480  01636A  52DE               	movf	postinc2,f,c
 14481  01636C  D00F               	goto	u12020
 14482  01636E                     u12025:
 14483  01636E  52DE               	movf	postinc2,f,c
 14484  016370  52DE               	movf	postinc2,f,c
 14485  016372  52DE               	movf	postinc2,f,c
 14486  016374  52DE               	movf	postinc2,f,c
 14487  016376  52DE               	movf	postinc2,f,c
 14488  016378  52DE               	movf	postinc2,f,c
 14489  01637A  90D8               	bcf	status,0,c
 14490  01637C  32DD               	rrcf	postdec2,f,c
 14491  01637E  32DD               	rrcf	postdec2,f,c
 14492  016380  32DD               	rrcf	postdec2,f,c
 14493  016382  32DD               	rrcf	postdec2,f,c
 14494  016384  32DD               	rrcf	postdec2,f,c
 14495  016386  32DD               	rrcf	postdec2,f,c
 14496  016388  32DD               	rrcf	postdec2,f,c
 14497  01638A  32DE               	rrcf	postinc2,f,c
 14498  01638C                     u12020:
 14499  01638C  2EE8               	decfsz	wreg,f,c
 14500  01638E  D7EF               	goto	u12025
 14501  016390                     l12724:
 14502                           
 14503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14504                           ;stkvar	_i @ sp[(-20)+14]
 14505  016390  0EFB               	movlw	-5
 14506  016392  BEE3               	btfsc	plusw1,7,c
 14507  016394  D03A               	goto	u12070
 14508  016396  0EFB               	movlw	-5
 14509  016398  50E3               	movf	plusw1,w,c
 14510  01639A  E108               	bnz	u12030
 14511  01639C  0EFA               	movlw	-6
 14512  01639E  006F FF8C  F001    	movff	plusw1,btemp
 14513  0163A4  0E02               	movlw	2
 14514  0163A6  5E01               	subwf	btemp^0,f,c
 14515  0163A8  A0D8               	btfss	status,0,c
 14516  0163AA  D02F               	goto	u12070
 14517  0163AC                     u12030:
 14518                           
 14519                           ;stkvar	_n @ sp[(-20)+4]
 14520  0163AC  0EF0               	movlw	-16
 14521  0163AE  50E3               	movf	plusw1,w,c
 14522  0163B0  E115               	bnz	u12041
 14523  0163B2  0EF1               	movlw	-15
 14524  0163B4  50E3               	movf	plusw1,w,c
 14525  0163B6  E112               	bnz	u12041
 14526  0163B8  0EF2               	movlw	-14
 14527  0163BA  50E3               	movf	plusw1,w,c
 14528  0163BC  E10F               	bnz	u12041
 14529  0163BE  0EF3               	movlw	-13
 14530  0163C0  50E3               	movf	plusw1,w,c
 14531  0163C2  E10C               	bnz	u12041
 14532  0163C4  0EF4               	movlw	-12
 14533  0163C6  50E3               	movf	plusw1,w,c
 14534  0163C8  E109               	bnz	u12041
 14535  0163CA  0EF5               	movlw	-11
 14536  0163CC  50E3               	movf	plusw1,w,c
 14537  0163CE  E106               	bnz	u12041
 14538  0163D0  0EF6               	movlw	-10
 14539  0163D2  50E3               	movf	plusw1,w,c
 14540  0163D4  E103               	bnz	u12041
 14541  0163D6  0EF7               	movlw	-9
 14542  0163D8  50E3               	movf	plusw1,w,c
 14543  0163DA  A4D8               	btfss	status,2,c
 14544  0163DC                     u12041:
 14545  0163DC  D6EB               	goto	l12692
 14546                           
 14547                           ;stkvar	_p @ sp[(-20)+18]
 14548  0163DE  0EFF               	movlw	-1
 14549  0163E0  BEE3               	btfsc	plusw1,7,c
 14550  0163E2  D007               	goto	u12050
 14551  0163E4  0EFF               	movlw	-1
 14552  0163E6  50E3               	movf	plusw1,w,c
 14553  0163E8  E103               	bnz	u12051
 14554  0163EA  0EFE               	movlw	-2
 14555  0163EC  04E3               	decf	plusw1,w,c
 14556  0163EE  B0D8               	btfsc	status,0,c
 14557  0163F0                     u12051:
 14558  0163F0  D6E1               	goto	l12692
 14559  0163F2                     u12050:
 14560                           
 14561                           ;stkvar	_w @ sp[(-20)+16]
 14562  0163F2  0EFD               	movlw	-3
 14563  0163F4  BEE3               	btfsc	plusw1,7,c
 14564  0163F6  D009               	goto	u12070
 14565  0163F8  0EFD               	movlw	-3
 14566  0163FA  50E3               	movf	plusw1,w,c
 14567  0163FC  E104               	bnz	u12060
 14568  0163FE  0EFC               	movlw	-4
 14569  016400  04E3               	decf	plusw1,w,c
 14570  016402  A0D8               	btfss	status,0,c
 14571  016404  D002               	goto	u12070
 14572  016406                     u12060:
 14573  016406  B23E               	btfsc	_flags^0,1,c
 14574  016408  D6D5               	goto	l12692
 14575  01640A                     u12070:
 14576                           
 14577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14578  01640A  A83E               	btfss	_flags^0,4,c
 14579  01640C  D036               	goto	l12740
 14580                           
 14581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14582                           ;stkvar	_i @ sp[(-20)+14]
 14583  01640E  50E1               	movf	fsr1l,w,c
 14584  016410  0FFA               	addlw	-6
 14585  016412  6ED9               	movwf	fsr2l,c
 14586  016414  50E2               	movf	fsr1h,w,c
 14587  016416  6EDA               	movwf	fsr2h,c
 14588  016418  0EFF               	movlw	255
 14589  01641A  22DA               	addwfc	fsr2h,f,c
 14590  01641C  06DE               	decf	postinc2,f,c
 14591  01641E  0E00               	movlw	0
 14592  016420  5ADD               	subwfb	postdec2,f,c
 14593                           
 14594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14595                           ;stkvar	_x @ sp[(-20)+-11]
 14596                           ;stkvar	_i @ sp[(-20)+14]
 14597  016422  0EFA               	movlw	-6
 14598  016424  006F FF8C  F00B    	movff	plusw1,btemp+10
 14599  01642A  0EFB               	movlw	-5
 14600  01642C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14601  016432  0E97               	movlw	low _dbuf
 14602  016434  240B               	addwf	(btemp+10)^0,w,c
 14603  016436  6ED9               	movwf	fsr2l,c
 14604  016438  0E02               	movlw	high _dbuf
 14605  01643A  200C               	addwfc	(btemp+11)^0,w,c
 14606  01643C  6EDA               	movwf	fsr2h,c
 14607  01643E  0EE1               	movlw	-31
 14608  016440  006F FF8F FFDF     	movff	plusw1,indf2
 14609                           
 14610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14611                           ;stkvar	_i @ sp[(-20)+14]
 14612  016446  50E1               	movf	fsr1l,w,c
 14613  016448  0FFA               	addlw	-6
 14614  01644A  6ED9               	movwf	fsr2l,c
 14615  01644C  50E2               	movf	fsr1h,w,c
 14616  01644E  6EDA               	movwf	fsr2h,c
 14617  016450  0EFF               	movlw	255
 14618  016452  22DA               	addwfc	fsr2h,f,c
 14619  016454  06DE               	decf	postinc2,f,c
 14620  016456  0E00               	movlw	0
 14621  016458  5ADD               	subwfb	postdec2,f,c
 14622                           
 14623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14624                           ;stkvar	_i @ sp[(-20)+14]
 14625  01645A  0EFA               	movlw	-6
 14626  01645C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14627  016462  0EFB               	movlw	-5
 14628  016464  006F FF8C  F00C    	movff	plusw1,btemp+11
 14629  01646A  0E97               	movlw	low _dbuf
 14630  01646C  240B               	addwf	(btemp+10)^0,w,c
 14631  01646E  6ED9               	movwf	fsr2l,c
 14632  016470  0E02               	movlw	high _dbuf
 14633  016472  200C               	addwfc	(btemp+11)^0,w,c
 14634  016474  6EDA               	movwf	fsr2h,c
 14635  016476  0E30               	movlw	48
 14636  016478  6EDF               	movwf	indf2,c
 14637  01647A                     l12740:
 14638                           
 14639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14640                           ;stkvar	_w @ sp[(-20)+16]
 14641  01647A  0EFC               	movlw	-4
 14642  01647C  006F FF8F FFE6     	movff	plusw1,postinc1
 14643  016482  006F FF8F FFE6     	movff	plusw1,postinc1
 14644                           
 14645                           ;stkvar	_i @ sp[(-22)+14]
 14646  016488  0E97               	movlw	low _dbuf
 14647  01648A  6E0B               	movwf	(btemp+10)^0,c
 14648  01648C  0E02               	movlw	high _dbuf
 14649  01648E  6E0C               	movwf	(btemp+11)^0,c
 14650  016490  0EF8               	movlw	-8
 14651  016492  50E3               	movf	plusw1,w,c
 14652  016494  260B               	addwf	(btemp+10)^0,f,c
 14653  016496  0EF9               	movlw	-7
 14654  016498  50E3               	movf	plusw1,w,c
 14655  01649A  220C               	addwfc	(btemp+11)^0,f,c
 14656  01649C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14657  0164A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 14658                           
 14659                           ;stkvar	_fp @ sp[(-24)+-2]
 14660  0164A8  0EE6               	movlw	-26
 14661  0164AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14662  0164B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14663  0164B6  EC90  F0CE         	call	_pad	;wreg free
 14664                           
 14665                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14666  0164BA  0EE1               	movlw	225
 14667  0164BC  26E1               	addwf	fsr1l,f,c
 14668  0164BE  0EFF               	movlw	255
 14669  0164C0  22E2               	addwfc	fsr1h,f,c
 14670  0164C2  0012               	return		;funcret
 14671  0164C4                     __end_of_xtoa:
 14672                           	opt callstack 0
 14673                           
 14674 ;; *************** function _toupper *****************
 14675 ;; Defined at:
 14676 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;  c               2  [STACK] int 
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;		None
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  2  [STACK] int 
 14683 ;; Registers used:
 14684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/2
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14694 ;;Total ram usage:        0 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:   16
 14697 ;; This function calls:
 14698 ;;		_islower
 14699 ;; This function is called by:
 14700 ;;		_xtoa
 14701 ;; This function uses a reentrant model
 14702 ;;
 14703                           
 14704                           	psect	text54
 14705  01AF8A                     __ptext54:
 14706                           	opt callstack 0
 14707  01AF8A                     _toupper:
 14708                           	opt callstack 0
 14709                           
 14710                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14711  01AF8A  52E6               	movf	postinc1,f,c
 14712  01AF8C  52E6               	movf	postinc1,f,c
 14713                           
 14714                           ;stkvar	_c @ sp[(-2)+-2]
 14715                           
 14716                           ;incstack = 0
 14717 ;; hardware stack exceeded
 14718  01AF8E  0EFC               	movlw	-4
 14719  01AF90  50E3               	movf	plusw1,w,c
 14720  01AF92  0F9F               	addlw	159
 14721  01AF94  6E0B               	movwf	(btemp+10)^0,c
 14722  01AF96  0EFD               	movlw	-3
 14723  01AF98  006F FF8C  F00C    	movff	plusw1,btemp+11
 14724  01AF9E  0EFF               	movlw	255
 14725  01AFA0  220C               	addwfc	(btemp+11)^0,f,c
 14726  01AFA2  500C               	movf	(btemp+11)^0,w,c
 14727  01AFA4  E106               	bnz	u6310
 14728  01AFA6  0E1A               	movlw	26
 14729  01AFA8  5C0B               	subwf	(btemp+10)^0,w,c
 14730  01AFAA  B0D8               	btfsc	status,0,c
 14731  01AFAC  D002               	goto	u6310
 14732  01AFAE  0E01               	movlw	1
 14733  01AFB0  D001               	goto	u6320
 14734  01AFB2                     u6310:
 14735  01AFB2  0E00               	movlw	0
 14736  01AFB4                     u6320:
 14737  01AFB4  6E0B               	movwf	(btemp+10)^0,c
 14738  01AFB6  6A0C               	clrf	(btemp+11)^0,c
 14739                           
 14740                           ;stkvar	_toupper$6599 @ sp[(-2)+0]
 14741  01AFB8  0EFE               	movlw	-2
 14742  01AFBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14743  01AFC0  0EFF               	movlw	-1
 14744  01AFC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 14745                           
 14746                           ;stkvar	_toupper$6599 @ sp[(-2)+0]
 14747  01AFC8  0EFE               	movlw	-2
 14748  01AFCA  006F FF8C  F001    	movff	plusw1,btemp
 14749  01AFD0  0EFF               	movlw	-1
 14750  01AFD2  50E3               	movf	plusw1,w,c
 14751  01AFD4  1001               	iorwf	btemp^0,w,c
 14752  01AFD6  B4D8               	btfsc	status,2,c
 14753  01AFD8  D00D               	goto	l8284
 14754                           
 14755                           ;stkvar	_c @ sp[(-2)+-2]
 14756  01AFDA  0EFC               	movlw	-4
 14757  01AFDC  006F FF8C  F001    	movff	plusw1,btemp
 14758  01AFE2  0EFD               	movlw	-3
 14759  01AFE4  006F FF8C  F002    	movff	plusw1,btemp+1
 14760  01AFEA  0E5F               	movlw	95
 14761  01AFEC  1601               	andwf	btemp^0,f,c
 14762  01AFEE  0E00               	movlw	0
 14763  01AFF0  1602               	andwf	(btemp+1)^0,f,c
 14764  01AFF2  D008               	goto	l3565
 14765  01AFF4                     l8284:
 14766                           
 14767                           ;stkvar	_c @ sp[(-2)+-2]
 14768  01AFF4  0EFC               	movlw	-4
 14769  01AFF6  006F FF8C  F001    	movff	plusw1,btemp
 14770  01AFFC  0EFD               	movlw	-3
 14771  01AFFE  006F FF8C  F002    	movff	plusw1,btemp+1
 14772  01B004                     l3565:
 14773                           
 14774                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14775  01B004  52E5               	movf	postdec1,f,c
 14776  01B006  52E5               	movf	postdec1,f,c
 14777  01B008  52E5               	movf	postdec1,f,c
 14778  01B00A  52E5               	movf	postdec1,f,c
 14779  01B00C  0012               	return		;funcret
 14780  01B00E                     __end_of_toupper:
 14781                           	opt callstack 0
 14782                           
 14783 ;; *************** function _islower *****************
 14784 ;; Defined at:
 14785 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;  c               2  [STACK] int 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;		None
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  2  [STACK] int 
 14792 ;; Registers used:
 14793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14803 ;;Total ram usage:        0 bytes
 14804 ;; Hardware stack levels used:    1
 14805 ;; Hardware stack levels required when called:   15
 14806 ;; This function calls:
 14807 ;;		Nothing
 14808 ;; This function is called by:
 14809 ;;		_toupper
 14810 ;; This function uses a reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text55
 14814  01BE40                     __ptext55:
 14815                           	opt callstack 0
 14816  01BE40                     _islower:
 14817                           	opt callstack 0
 14818                           
 14819                           ;stkvar	_c @ sp[(0)+-2]
 14820                           
 14821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14822                           ;incstack = 0
 14823 ;; hardware stack exceeded
 14824  01BE40  0EFE               	movlw	-2
 14825  01BE42  50E3               	movf	plusw1,w,c
 14826  01BE44  0F9F               	addlw	159
 14827  01BE46  6E0B               	movwf	(btemp+10)^0,c
 14828  01BE48  0EFF               	movlw	-1
 14829  01BE4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14830  01BE50  0EFF               	movlw	255
 14831  01BE52  220C               	addwfc	(btemp+11)^0,f,c
 14832  01BE54  500C               	movf	(btemp+11)^0,w,c
 14833  01BE56  E106               	bnz	u5950
 14834  01BE58  0E1A               	movlw	26
 14835  01BE5A  5C0B               	subwf	(btemp+10)^0,w,c
 14836  01BE5C  B0D8               	btfsc	status,0,c
 14837  01BE5E  D002               	goto	u5950
 14838  01BE60  0E01               	movlw	1
 14839  01BE62  D001               	goto	u5960
 14840  01BE64                     u5950:
 14841  01BE64  0E00               	movlw	0
 14842  01BE66                     u5960:
 14843  01BE66  6E01               	movwf	btemp^0,c
 14844  01BE68  6A02               	clrf	(btemp+1)^0,c
 14845                           
 14846                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14847  01BE6A  52E5               	movf	postdec1,f,c
 14848  01BE6C  52E5               	movf	postdec1,f,c
 14849  01BE6E  0012               	return		;funcret
 14850  01BE70                     __end_of_islower:
 14851                           	opt callstack 0
 14852                           
 14853 ;; *************** function _isalpha *****************
 14854 ;; Defined at:
 14855 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;  c               2  [STACK] int 
 14858 ;; Auto vars:     Size  Location     Type
 14859 ;;		None
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  2  [STACK] int 
 14862 ;; Registers used:
 14863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14873 ;;Total ram usage:        0 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:   15
 14876 ;; This function calls:
 14877 ;;		Nothing
 14878 ;; This function is called by:
 14879 ;;		_xtoa
 14880 ;; This function uses a reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text56
 14884  01BA26                     __ptext56:
 14885                           	opt callstack 0
 14886  01BA26                     _isalpha:
 14887                           	opt callstack 0
 14888                           
 14889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14890                           ;incstack = 0
 14891 ;; hardware stack exceeded
 14892  01BA26  0E9F               	movlw	159
 14893  01BA28  6E0B               	movwf	(btemp+10)^0,c
 14894  01BA2A  0EFF               	movlw	255
 14895  01BA2C  6E0C               	movwf	(btemp+11)^0,c
 14896                           
 14897                           ;stkvar	_c @ sp[(0)+-2]
 14898  01BA2E  0EFE               	movlw	-2
 14899  01BA30  006F FF8C  F009    	movff	plusw1,btemp+8
 14900  01BA36  0EFF               	movlw	-1
 14901  01BA38  006F FF8C  F00A    	movff	plusw1,btemp+9
 14902  01BA3E  0E20               	movlw	32
 14903  01BA40  1209               	iorwf	(btemp+8)^0,f,c
 14904  01BA42  0E00               	movlw	0
 14905  01BA44  120A               	iorwf	(btemp+9)^0,f,c
 14906  01BA46  500B               	movf	(btemp+10)^0,w,c
 14907  01BA48  2609               	addwf	(btemp+8)^0,f,c
 14908  01BA4A  500C               	movf	(btemp+11)^0,w,c
 14909  01BA4C  220A               	addwfc	(btemp+9)^0,f,c
 14910  01BA4E  500A               	movf	(btemp+9)^0,w,c
 14911  01BA50  E106               	bnz	u6290
 14912  01BA52  0E1A               	movlw	26
 14913  01BA54  5C09               	subwf	(btemp+8)^0,w,c
 14914  01BA56  B0D8               	btfsc	status,0,c
 14915  01BA58  D002               	goto	u6290
 14916  01BA5A  0E01               	movlw	1
 14917  01BA5C  D001               	goto	u6300
 14918  01BA5E                     u6290:
 14919  01BA5E  0E00               	movlw	0
 14920  01BA60                     u6300:
 14921  01BA60  6E01               	movwf	btemp^0,c
 14922  01BA62  6A02               	clrf	(btemp+1)^0,c
 14923                           
 14924                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14925  01BA64  52E5               	movf	postdec1,f,c
 14926  01BA66  52E5               	movf	postdec1,f,c
 14927  01BA68  0012               	return		;funcret
 14928  01BA6A                     __end_of_isalpha:
 14929                           	opt callstack 0
 14930                           
 14931 ;; *************** function _utoa *****************
 14932 ;; Defined at:
 14933 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14936 ;;		 -> f(6), NULL(0), 
 14937 ;;  d               8  [STACK] unsigned long long 
 14938 ;; Auto vars:     Size  Location     Type
 14939 ;;  n               8  [STACK] unsigned long long 
 14940 ;;  i               2  [STACK] int 
 14941 ;;  w               2  [STACK] int 
 14942 ;;  p               2  [STACK] int 
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  2  [STACK] int 
 14945 ;; Registers used:
 14946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14956 ;;Total ram usage:        0 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; Hardware stack levels required when called:   20
 14959 ;; This function calls:
 14960 ;;		___lodiv
 14961 ;;		___lomod
 14962 ;;		_pad
 14963 ;; This function is called by:
 14964 ;;		_vfpfcnvrt
 14965 ;; This function uses a reentrant model
 14966 ;;
 14967                           
 14968                           	psect	text57
 14969  016830                     __ptext57:
 14970                           	opt callstack 0
 14971  016830                     _utoa:
 14972                           	opt callstack 0
 14973                           
 14974                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14975  016830  0E0E               	movlw	14
 14976  016832  26E1               	addwf	fsr1l,f,c
 14977  016834  0E00               	movlw	0
 14978  016836  22E2               	addwfc	fsr1h,f,c
 14979                           
 14980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14981                           
 14982                           ;incstack = 0
 14983 ;; hardware stack exceeded
 14984  016838  AE3D               	btfss	(_prec+1)^0,7,c
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14987  01683A  923E               	bcf	_flags^0,1,c
 14988                           
 14989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14990  01683C  BE3D               	btfsc	(_prec+1)^0,7,c
 14991  01683E  D005               	goto	u11840
 14992  016840  503D               	movf	(_prec+1)^0,w,c
 14993  016842  E110               	bnz	l12640
 14994  016844  043C               	decf	_prec^0,w,c
 14995  016846  B0D8               	btfsc	status,0,c
 14996  016848  D00D               	goto	l12640
 14997  01684A                     u11840:
 14998  01684A  0E01               	movlw	1
 14999  01684C  6E0B               	movwf	(btemp+10)^0,c
 15000  01684E  0E00               	movlw	0
 15001  016850  6E0C               	movwf	(btemp+11)^0,c
 15002                           
 15003                           ;stkvar	_p @ sp[(-14)+12]
 15004  016852  0EFE               	movlw	-2
 15005  016854  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15006  01685A  0EFF               	movlw	-1
 15007  01685C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15008  016862  D008               	goto	l2383
 15009  016864                     l12640:
 15010                           
 15011                           ;stkvar	_p @ sp[(-14)+12]
 15012  016864  0EFE               	movlw	-2
 15013  016866  0060  F0F3  FFE3   	movff	_prec,plusw1
 15014  01686C  0EFF               	movlw	-1
 15015  01686E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15016  016874                     l2383:
 15017                           
 15018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15019                           ;stkvar	_w @ sp[(-14)+10]
 15020  016874  0EFC               	movlw	-4
 15021  016876  0060  F0EB  FFE3   	movff	_width,plusw1
 15022  01687C  0EFD               	movlw	-3
 15023  01687E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15024                           
 15025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15026                           ;stkvar	_d @ sp[(-14)+-10]
 15027  016884  0EE8               	movlw	232
 15028  016886  24E1               	addwf	fsr1l,w,c
 15029  016888  6ED9               	movwf	fsr2l,c
 15030  01688A  0EFF               	movlw	255
 15031  01688C  20E2               	addwfc	fsr1h,w,c
 15032  01688E  6EDA               	movwf	fsr2h,c
 15033                           
 15034                           ;stkvar	_n @ sp[(-14)+0]
 15035  016890  0E08               	movlw	8
 15036  016892  6E01               	movwf	btemp^0,c
 15037  016894  0EF2               	movlw	-14
 15038  016896                     us1185999:
 15039  016896  006F FF7B FFE3     	movff	postinc2,plusw1
 15040  01689C  28E8               	incf	wreg,w,c
 15041  01689E  2E01               	decfsz	btemp^0,f,c
 15042  0168A0  D7FA               	bra	us1185999
 15043                           
 15044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15045  0168A2  0E4F               	movlw	79
 15046  0168A4  6E0B               	movwf	(btemp+10)^0,c
 15047  0168A6  0E00               	movlw	0
 15048  0168A8  6E0C               	movwf	(btemp+11)^0,c
 15049                           
 15050                           ;stkvar	_i @ sp[(-14)+8]
 15051  0168AA  0EFA               	movlw	-6
 15052  0168AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15053  0168B2  0EFB               	movlw	-5
 15054  0168B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15055                           
 15056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15057  0168BA  0102               	movlb	2	; () banked
 15058  0168BC  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15059                           
 15060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15061  0168BE  D0FB               	goto	l12658
 15062  0168C0                     l12648:
 15063                           
 15064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15065                           ;stkvar	_i @ sp[(-14)+8]
 15066  0168C0  50E1               	movf	fsr1l,w,c
 15067  0168C2  0FFA               	addlw	-6
 15068  0168C4  6ED9               	movwf	fsr2l,c
 15069  0168C6  50E2               	movf	fsr1h,w,c
 15070  0168C8  6EDA               	movwf	fsr2h,c
 15071  0168CA  0EFF               	movlw	255
 15072  0168CC  22DA               	addwfc	fsr2h,f,c
 15073  0168CE  06DE               	decf	postinc2,f,c
 15074  0168D0  0E00               	movlw	0
 15075  0168D2  5ADD               	subwfb	postdec2,f,c
 15076                           
 15077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15078  0168D4  0E0A               	movlw	10
 15079  0168D6  6EE6               	movwf	postinc1,c
 15080  0168D8  0E00               	movlw	0
 15081  0168DA  6EE6               	movwf	postinc1,c
 15082  0168DC  0E00               	movlw	0
 15083  0168DE  6EE6               	movwf	postinc1,c
 15084  0168E0  0E00               	movlw	0
 15085  0168E2  6EE6               	movwf	postinc1,c
 15086  0168E4  0E00               	movlw	0
 15087  0168E6  6EE6               	movwf	postinc1,c
 15088  0168E8  0E00               	movlw	0
 15089  0168EA  6EE6               	movwf	postinc1,c
 15090  0168EC  0E00               	movlw	0
 15091  0168EE  6EE6               	movwf	postinc1,c
 15092  0168F0  0E00               	movlw	0
 15093  0168F2  6EE6               	movwf	postinc1,c
 15094                           
 15095                           ;stkvar	_n @ sp[(-22)+0]
 15096  0168F4  50E1               	movf	fsr1l,w,c
 15097  0168F6  0FEA               	addlw	-22
 15098  0168F8  6ED9               	movwf	fsr2l,c
 15099  0168FA  50E2               	movf	fsr1h,w,c
 15100  0168FC  6EDA               	movwf	fsr2h,c
 15101  0168FE  0EFF               	movlw	255
 15102  016900  22DA               	addwfc	fsr2h,f,c
 15103  016902  006F FF7B FFE6     	movff	postinc2,postinc1
 15104  016908  006F FF7B FFE6     	movff	postinc2,postinc1
 15105  01690E  006F FF7B FFE6     	movff	postinc2,postinc1
 15106  016914  006F FF7B FFE6     	movff	postinc2,postinc1
 15107  01691A  006F FF7B FFE6     	movff	postinc2,postinc1
 15108  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 15109  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 15110  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 15111  016932  EC14  F0CB         	call	___lomod	;wreg free
 15112  016936  52E5               	movf	postdec1,f,c
 15113  016938  006F FF9C  F018    	movff	indf1,btemp+23
 15114  01693E  52E5               	movf	postdec1,f,c
 15115  016940  006F FF9C  F017    	movff	indf1,btemp+22
 15116  016946  52E5               	movf	postdec1,f,c
 15117  016948  006F FF9C  F016    	movff	indf1,btemp+21
 15118  01694E  52E5               	movf	postdec1,f,c
 15119  016950  006F FF9C  F015    	movff	indf1,btemp+20
 15120  016956  52E5               	movf	postdec1,f,c
 15121  016958  006F FF9C  F014    	movff	indf1,btemp+19
 15122  01695E  52E5               	movf	postdec1,f,c
 15123  016960  006F FF9C  F013    	movff	indf1,btemp+18
 15124  016966  52E5               	movf	postdec1,f,c
 15125  016968  006F FF9C  F012    	movff	indf1,btemp+17
 15126  01696E  52E5               	movf	postdec1,f,c
 15127  016970  006F FF9C  F011    	movff	indf1,btemp+16
 15128  016976  0EF8               	movlw	248
 15129  016978  26E1               	addwf	fsr1l,f,c
 15130  01697A  0EFF               	movlw	255
 15131  01697C  22E2               	addwfc	fsr1h,f,c
 15132  01697E  0E30               	movlw	48
 15133  016980  2611               	addwf	(btemp+16)^0,f,c
 15134                           
 15135                           ;stkvar	_i @ sp[(-14)+8]
 15136  016982  0EFA               	movlw	-6
 15137  016984  006F FF8C  F00B    	movff	plusw1,btemp+10
 15138  01698A  0EFB               	movlw	-5
 15139  01698C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15140  016992  0E97               	movlw	low _dbuf
 15141  016994  240B               	addwf	(btemp+10)^0,w,c
 15142  016996  6ED9               	movwf	fsr2l,c
 15143  016998  0E02               	movlw	high _dbuf
 15144  01699A  200C               	addwfc	(btemp+11)^0,w,c
 15145  01699C  6EDA               	movwf	fsr2h,c
 15146  01699E  0060  F047  FFDF   	movff	btemp+16,indf2
 15147                           
 15148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15149                           ;stkvar	_p @ sp[(-14)+12]
 15150  0169A4  50E1               	movf	fsr1l,w,c
 15151  0169A6  0FFE               	addlw	-2
 15152  0169A8  6ED9               	movwf	fsr2l,c
 15153  0169AA  50E2               	movf	fsr1h,w,c
 15154  0169AC  6EDA               	movwf	fsr2h,c
 15155  0169AE  0EFF               	movlw	255
 15156  0169B0  22DA               	addwfc	fsr2h,f,c
 15157  0169B2  06DE               	decf	postinc2,f,c
 15158  0169B4  0E00               	movlw	0
 15159  0169B6  5ADD               	subwfb	postdec2,f,c
 15160                           
 15161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15162                           ;stkvar	_w @ sp[(-14)+10]
 15163  0169B8  50E1               	movf	fsr1l,w,c
 15164  0169BA  0FFC               	addlw	-4
 15165  0169BC  6ED9               	movwf	fsr2l,c
 15166  0169BE  50E2               	movf	fsr1h,w,c
 15167  0169C0  6EDA               	movwf	fsr2h,c
 15168  0169C2  0EFF               	movlw	255
 15169  0169C4  22DA               	addwfc	fsr2h,f,c
 15170  0169C6  06DE               	decf	postinc2,f,c
 15171  0169C8  0E00               	movlw	0
 15172  0169CA  5ADD               	subwfb	postdec2,f,c
 15173                           
 15174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15175  0169CC  0E0A               	movlw	10
 15176  0169CE  6EE6               	movwf	postinc1,c
 15177  0169D0  0E00               	movlw	0
 15178  0169D2  6EE6               	movwf	postinc1,c
 15179  0169D4  0E00               	movlw	0
 15180  0169D6  6EE6               	movwf	postinc1,c
 15181  0169D8  0E00               	movlw	0
 15182  0169DA  6EE6               	movwf	postinc1,c
 15183  0169DC  0E00               	movlw	0
 15184  0169DE  6EE6               	movwf	postinc1,c
 15185  0169E0  0E00               	movlw	0
 15186  0169E2  6EE6               	movwf	postinc1,c
 15187  0169E4  0E00               	movlw	0
 15188  0169E6  6EE6               	movwf	postinc1,c
 15189  0169E8  0E00               	movlw	0
 15190  0169EA  6EE6               	movwf	postinc1,c
 15191                           
 15192                           ;stkvar	_n @ sp[(-22)+0]
 15193  0169EC  50E1               	movf	fsr1l,w,c
 15194  0169EE  0FEA               	addlw	-22
 15195  0169F0  6ED9               	movwf	fsr2l,c
 15196  0169F2  50E2               	movf	fsr1h,w,c
 15197  0169F4  6EDA               	movwf	fsr2h,c
 15198  0169F6  0EFF               	movlw	255
 15199  0169F8  22DA               	addwfc	fsr2h,f,c
 15200  0169FA  006F FF7B FFE6     	movff	postinc2,postinc1
 15201  016A00  006F FF7B FFE6     	movff	postinc2,postinc1
 15202  016A06  006F FF7B FFE6     	movff	postinc2,postinc1
 15203  016A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15204  016A12  006F FF7B FFE6     	movff	postinc2,postinc1
 15205  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 15206  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15207  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 15208  016A2A  EC91  F0C7         	call	___lodiv	;wreg free
 15209  016A2E  52E5               	movf	postdec1,f,c
 15210  016A30  006F FF9C  F018    	movff	indf1,btemp+23
 15211  016A36  52E5               	movf	postdec1,f,c
 15212  016A38  006F FF9C  F017    	movff	indf1,btemp+22
 15213  016A3E  52E5               	movf	postdec1,f,c
 15214  016A40  006F FF9C  F016    	movff	indf1,btemp+21
 15215  016A46  52E5               	movf	postdec1,f,c
 15216  016A48  006F FF9C  F015    	movff	indf1,btemp+20
 15217  016A4E  52E5               	movf	postdec1,f,c
 15218  016A50  006F FF9C  F014    	movff	indf1,btemp+19
 15219  016A56  52E5               	movf	postdec1,f,c
 15220  016A58  006F FF9C  F013    	movff	indf1,btemp+18
 15221  016A5E  52E5               	movf	postdec1,f,c
 15222  016A60  006F FF9C  F012    	movff	indf1,btemp+17
 15223  016A66  52E5               	movf	postdec1,f,c
 15224  016A68  006F FF9C  F011    	movff	indf1,btemp+16
 15225  016A6E  0EF8               	movlw	248
 15226  016A70  26E1               	addwf	fsr1l,f,c
 15227  016A72  0EFF               	movlw	255
 15228  016A74  22E2               	addwfc	fsr1h,f,c
 15229                           
 15230                           ;stkvar	_n @ sp[(-14)+0]
 15231  016A76  0EF2               	movlw	-14
 15232  016A78  0060  F047  FFE3   	movff	btemp+16,plusw1
 15233  016A7E  0EF3               	movlw	-13
 15234  016A80  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15235  016A86  0EF4               	movlw	-12
 15236  016A88  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15237  016A8E  0EF5               	movlw	-11
 15238  016A90  0060  F053  FFE3   	movff	btemp+19,plusw1
 15239  016A96  0EF6               	movlw	-10
 15240  016A98  0060  F057  FFE3   	movff	btemp+20,plusw1
 15241  016A9E  0EF7               	movlw	-9
 15242  016AA0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15243  016AA6  0EF8               	movlw	-8
 15244  016AA8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15245  016AAE  0EF9               	movlw	-7
 15246  016AB0  0060  F063  FFE3   	movff	btemp+23,plusw1
 15247  016AB6                     l12658:
 15248                           
 15249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15250                           ;stkvar	_i @ sp[(-14)+8]
 15251  016AB6  0EFA               	movlw	-6
 15252  016AB8  006F FF8C  F001    	movff	plusw1,btemp
 15253  016ABE  0EFB               	movlw	-5
 15254  016AC0  50E3               	movf	plusw1,w,c
 15255  016AC2  1001               	iorwf	btemp^0,w,c
 15256  016AC4  B4D8               	btfsc	status,2,c
 15257  016AC6  D02F               	goto	u11900
 15258                           
 15259                           ;stkvar	_n @ sp[(-14)+0]
 15260  016AC8  0EF2               	movlw	-14
 15261  016ACA  50E3               	movf	plusw1,w,c
 15262  016ACC  E115               	bnz	u11871
 15263  016ACE  0EF3               	movlw	-13
 15264  016AD0  50E3               	movf	plusw1,w,c
 15265  016AD2  E112               	bnz	u11871
 15266  016AD4  0EF4               	movlw	-12
 15267  016AD6  50E3               	movf	plusw1,w,c
 15268  016AD8  E10F               	bnz	u11871
 15269  016ADA  0EF5               	movlw	-11
 15270  016ADC  50E3               	movf	plusw1,w,c
 15271  016ADE  E10C               	bnz	u11871
 15272  016AE0  0EF6               	movlw	-10
 15273  016AE2  50E3               	movf	plusw1,w,c
 15274  016AE4  E109               	bnz	u11871
 15275  016AE6  0EF7               	movlw	-9
 15276  016AE8  50E3               	movf	plusw1,w,c
 15277  016AEA  E106               	bnz	u11871
 15278  016AEC  0EF8               	movlw	-8
 15279  016AEE  50E3               	movf	plusw1,w,c
 15280  016AF0  E103               	bnz	u11871
 15281  016AF2  0EF9               	movlw	-7
 15282  016AF4  50E3               	movf	plusw1,w,c
 15283  016AF6  A4D8               	btfss	status,2,c
 15284  016AF8                     u11871:
 15285  016AF8  D6E3               	goto	l12648
 15286                           
 15287                           ;stkvar	_p @ sp[(-14)+12]
 15288  016AFA  0EFF               	movlw	-1
 15289  016AFC  BEE3               	btfsc	plusw1,7,c
 15290  016AFE  D007               	goto	u11880
 15291  016B00  0EFF               	movlw	-1
 15292  016B02  50E3               	movf	plusw1,w,c
 15293  016B04  E103               	bnz	u11881
 15294  016B06  0EFE               	movlw	-2
 15295  016B08  04E3               	decf	plusw1,w,c
 15296  016B0A  B0D8               	btfsc	status,0,c
 15297  016B0C                     u11881:
 15298  016B0C  D6D9               	goto	l12648
 15299  016B0E                     u11880:
 15300                           
 15301                           ;stkvar	_w @ sp[(-14)+10]
 15302  016B0E  0EFD               	movlw	-3
 15303  016B10  BEE3               	btfsc	plusw1,7,c
 15304  016B12  D009               	goto	u11900
 15305  016B14  0EFD               	movlw	-3
 15306  016B16  50E3               	movf	plusw1,w,c
 15307  016B18  E104               	bnz	u11890
 15308  016B1A  0EFC               	movlw	-4
 15309  016B1C  04E3               	decf	plusw1,w,c
 15310  016B1E  A0D8               	btfss	status,0,c
 15311  016B20  D002               	goto	u11900
 15312  016B22                     u11890:
 15313  016B22  B23E               	btfsc	_flags^0,1,c
 15314  016B24  D6CD               	goto	l12648
 15315  016B26                     u11900:
 15316                           
 15317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15318                           ;stkvar	_w @ sp[(-14)+10]
 15319  016B26  0EFC               	movlw	-4
 15320  016B28  006F FF8F FFE6     	movff	plusw1,postinc1
 15321  016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15322                           
 15323                           ;stkvar	_i @ sp[(-16)+8]
 15324  016B34  0E97               	movlw	low _dbuf
 15325  016B36  6E0B               	movwf	(btemp+10)^0,c
 15326  016B38  0E02               	movlw	high _dbuf
 15327  016B3A  6E0C               	movwf	(btemp+11)^0,c
 15328  016B3C  0EF8               	movlw	-8
 15329  016B3E  50E3               	movf	plusw1,w,c
 15330  016B40  260B               	addwf	(btemp+10)^0,f,c
 15331  016B42  0EF9               	movlw	-7
 15332  016B44  50E3               	movf	plusw1,w,c
 15333  016B46  220C               	addwfc	(btemp+11)^0,f,c
 15334  016B48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15335  016B4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15336                           
 15337                           ;stkvar	_fp @ sp[(-18)+-2]
 15338  016B54  0EEC               	movlw	-20
 15339  016B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15340  016B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15341  016B62  EC90  F0CE         	call	_pad	;wreg free
 15342                           
 15343                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15344  016B66  0EE8               	movlw	232
 15345  016B68  26E1               	addwf	fsr1l,f,c
 15346  016B6A  0EFF               	movlw	255
 15347  016B6C  22E2               	addwfc	fsr1h,f,c
 15348  016B6E  0012               	return		;funcret
 15349  016B70                     __end_of_utoa:
 15350                           	opt callstack 0
 15351                           
 15352 ;; *************** function ___lomod *****************
 15353 ;; Defined at:
 15354 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;  dividend        8  [STACK] unsigned long long 
 15357 ;;  divisor         8  [STACK] unsigned long long 
 15358 ;; Auto vars:     Size  Location     Type
 15359 ;;  counter         1  [STACK] unsigned char 
 15360 ;; Return value:  Size  Location     Type
 15361 ;;                  8  [STACK] unsigned long long 
 15362 ;; Registers used:
 15363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15364 ;; Tracked objects:
 15365 ;;		On entry : 0/2
 15366 ;;		On exit  : 0/0
 15367 ;;		Unchanged: 0/0
 15368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15373 ;;Total ram usage:        0 bytes
 15374 ;; Hardware stack levels used:    1
 15375 ;; Hardware stack levels required when called:   15
 15376 ;; This function calls:
 15377 ;;		Nothing
 15378 ;; This function is called by:
 15379 ;;		_utoa
 15380 ;; This function uses a reentrant model
 15381 ;;
 15382                           
 15383                           	psect	text58
 15384  019628                     __ptext58:
 15385                           	opt callstack 0
 15386  019628                     ___lomod:
 15387                           	opt callstack 0
 15388                           
 15389                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15390  019628  52E6               	movf	postinc1,f,c
 15391                           
 15392                           ;stkvar	_divisor @ sp[(-1)+-16]
 15393                           
 15394                           ;incstack = 0
 15395 ;; hardware stack exceeded
 15396  01962A  0EEF               	movlw	-17
 15397  01962C  50E3               	movf	plusw1,w,c
 15398  01962E  E116               	bnz	u7440
 15399  019630  0EF0               	movlw	-16
 15400  019632  50E3               	movf	plusw1,w,c
 15401  019634  E113               	bnz	u7440
 15402  019636  0EF1               	movlw	-15
 15403  019638  50E3               	movf	plusw1,w,c
 15404  01963A  E110               	bnz	u7440
 15405  01963C  0EF2               	movlw	-14
 15406  01963E  50E3               	movf	plusw1,w,c
 15407  019640  E10D               	bnz	u7440
 15408  019642  0EF3               	movlw	-13
 15409  019644  50E3               	movf	plusw1,w,c
 15410  019646  E10A               	bnz	u7440
 15411  019648  0EF4               	movlw	-12
 15412  01964A  50E3               	movf	plusw1,w,c
 15413  01964C  E107               	bnz	u7440
 15414  01964E  0EF5               	movlw	-11
 15415  019650  50E3               	movf	plusw1,w,c
 15416  019652  E104               	bnz	u7440
 15417  019654  0EF6               	movlw	-10
 15418  019656  50E3               	movf	plusw1,w,c
 15419  019658  B4D8               	btfsc	status,2,c
 15420  01965A  D075               	goto	u7470
 15421  01965C                     u7440:
 15422                           
 15423                           ;stkvar	_counter @ sp[(-1)+0]
 15424  01965C  0EFF               	movlw	-1
 15425  01965E  6AE3               	clrf	plusw1,c
 15426  019660  D012               	goto	L15
 15427  019662                     l8894:
 15428                           
 15429                           ;stkvar	_divisor @ sp[(-1)+-16]
 15430  019662  90D8               	bcf	status,0,c
 15431  019664  0EEF               	movlw	-17
 15432  019666  36E3               	rlcf	plusw1,f,c
 15433  019668  0EF0               	movlw	-16
 15434  01966A  36E3               	rlcf	plusw1,f,c
 15435  01966C  0EF1               	movlw	-15
 15436  01966E  36E3               	rlcf	plusw1,f,c
 15437  019670  0EF2               	movlw	-14
 15438  019672  36E3               	rlcf	plusw1,f,c
 15439  019674  0EF3               	movlw	-13
 15440  019676  36E3               	rlcf	plusw1,f,c
 15441  019678  0EF4               	movlw	-12
 15442  01967A  36E3               	rlcf	plusw1,f,c
 15443  01967C  0EF5               	movlw	-11
 15444  01967E  36E3               	rlcf	plusw1,f,c
 15445  019680  0EF6               	movlw	-10
 15446  019682  36E3               	rlcf	plusw1,f,c
 15447                           
 15448                           ;stkvar	_counter @ sp[(-1)+0]
 15449  019684  0EFF               	movlw	-1
 15450  019686                     L15:
 15451  019686  2AE3               	incf	plusw1,f,c
 15452                           
 15453                           ;stkvar	_divisor @ sp[(-1)+-16]
 15454  019688  0EF6               	movlw	-10
 15455  01968A  AEE3               	btfss	plusw1,7,c
 15456  01968C  D7EA               	goto	l8894
 15457  01968E                     u7450:
 15458                           
 15459                           ;stkvar	_divisor @ sp[(-1)+-16]
 15460                           ;stkvar	_dividend @ sp[(-1)+-8]
 15461  01968E  50E1               	movf	fsr1l,w,c
 15462  019690  0FF7               	addlw	-9
 15463  019692  6ED9               	movwf	fsr2l,c
 15464  019694  50E2               	movf	fsr1h,w,c
 15465  019696  6EDA               	movwf	fsr2h,c
 15466  019698  0EFF               	movlw	255
 15467  01969A  22DA               	addwfc	fsr2h,f,c
 15468  01969C  0EEF               	movlw	-17
 15469  01969E  50E3               	movf	plusw1,w,c
 15470  0196A0  5CDE               	subwf	postinc2,w,c
 15471  0196A2  0EF0               	movlw	-16
 15472  0196A4  50E3               	movf	plusw1,w,c
 15473  0196A6  58DE               	subwfb	postinc2,w,c
 15474  0196A8  0EF1               	movlw	-15
 15475  0196AA  50E3               	movf	plusw1,w,c
 15476  0196AC  58DE               	subwfb	postinc2,w,c
 15477  0196AE  0EF2               	movlw	-14
 15478  0196B0  50E3               	movf	plusw1,w,c
 15479  0196B2  58DE               	subwfb	postinc2,w,c
 15480  0196B4  0EF3               	movlw	-13
 15481  0196B6  50E3               	movf	plusw1,w,c
 15482  0196B8  58DE               	subwfb	postinc2,w,c
 15483  0196BA  0EF4               	movlw	-12
 15484  0196BC  50E3               	movf	plusw1,w,c
 15485  0196BE  58DE               	subwfb	postinc2,w,c
 15486  0196C0  0EF5               	movlw	-11
 15487  0196C2  50E3               	movf	plusw1,w,c
 15488  0196C4  58DE               	subwfb	postinc2,w,c
 15489  0196C6  0EF6               	movlw	-10
 15490  0196C8  50E3               	movf	plusw1,w,c
 15491  0196CA  58DE               	subwfb	postinc2,w,c
 15492  0196CC  A0D8               	btfss	status,0,c
 15493  0196CE  D01F               	goto	l8902
 15494                           
 15495                           ;stkvar	_divisor @ sp[(-1)+-16]
 15496                           ;stkvar	_dividend @ sp[(-1)+-8]
 15497  0196D0  50E1               	movf	fsr1l,w,c
 15498  0196D2  0FF7               	addlw	-9
 15499  0196D4  6ED9               	movwf	fsr2l,c
 15500  0196D6  50E2               	movf	fsr1h,w,c
 15501  0196D8  6EDA               	movwf	fsr2h,c
 15502  0196DA  0EFF               	movlw	255
 15503  0196DC  22DA               	addwfc	fsr2h,f,c
 15504  0196DE  0EEF               	movlw	-17
 15505  0196E0  50E3               	movf	plusw1,w,c
 15506  0196E2  5EDE               	subwf	postinc2,f,c
 15507  0196E4  0EF0               	movlw	-16
 15508  0196E6  50E3               	movf	plusw1,w,c
 15509  0196E8  5ADE               	subwfb	postinc2,f,c
 15510  0196EA  0EF1               	movlw	-15
 15511  0196EC  50E3               	movf	plusw1,w,c
 15512  0196EE  5ADE               	subwfb	postinc2,f,c
 15513  0196F0  0EF2               	movlw	-14
 15514  0196F2  50E3               	movf	plusw1,w,c
 15515  0196F4  5ADE               	subwfb	postinc2,f,c
 15516  0196F6  0EF3               	movlw	-13
 15517  0196F8  50E3               	movf	plusw1,w,c
 15518  0196FA  5ADE               	subwfb	postinc2,f,c
 15519  0196FC  0EF4               	movlw	-12
 15520  0196FE  50E3               	movf	plusw1,w,c
 15521  019700  5ADE               	subwfb	postinc2,f,c
 15522  019702  0EF5               	movlw	-11
 15523  019704  50E3               	movf	plusw1,w,c
 15524  019706  5ADE               	subwfb	postinc2,f,c
 15525  019708  0EF6               	movlw	-10
 15526  01970A  50E3               	movf	plusw1,w,c
 15527  01970C  5ADE               	subwfb	postinc2,f,c
 15528  01970E                     l8902:
 15529                           
 15530                           ;stkvar	_divisor @ sp[(-1)+-16]
 15531  01970E  90D8               	bcf	status,0,c
 15532  019710  0EF6               	movlw	-10
 15533  019712  32E3               	rrcf	plusw1,f,c
 15534  019714  0EF5               	movlw	-11
 15535  019716  32E3               	rrcf	plusw1,f,c
 15536  019718  0EF4               	movlw	-12
 15537  01971A  32E3               	rrcf	plusw1,f,c
 15538  01971C  0EF3               	movlw	-13
 15539  01971E  32E3               	rrcf	plusw1,f,c
 15540  019720  0EF2               	movlw	-14
 15541  019722  32E3               	rrcf	plusw1,f,c
 15542  019724  0EF1               	movlw	-15
 15543  019726  32E3               	rrcf	plusw1,f,c
 15544  019728  0EF0               	movlw	-16
 15545  01972A  32E3               	rrcf	plusw1,f,c
 15546  01972C  0EEF               	movlw	-17
 15547  01972E  32E3               	rrcf	plusw1,f,c
 15548                           
 15549                           ;stkvar	_counter @ sp[(-1)+0]
 15550  019730  0EFF               	movlw	-1
 15551  019732  50E3               	movf	plusw1,w,c
 15552  019734  6E01               	movwf	btemp^0,c
 15553  019736  0E01               	movlw	1
 15554  019738  5E01               	subwf	btemp^0,f,c
 15555  01973A  0EFF               	movlw	-1
 15556  01973C  0060  F007  FFE3   	movff	btemp,plusw1
 15557  019742  A4D8               	btfss	status,2,c
 15558  019744  D7A4               	goto	u7450
 15559  019746                     u7470:
 15560                           
 15561                           ;stkvar	_dividend @ sp[(-1)+-8]
 15562  019746  0EF7               	movlw	247
 15563  019748  24E1               	addwf	fsr1l,w,c
 15564  01974A  6ED9               	movwf	fsr2l,c
 15565  01974C  0EFF               	movlw	255
 15566  01974E  20E2               	addwfc	fsr1h,w,c
 15567  019750  6EDA               	movwf	fsr2h,c
 15568                           
 15569                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15570  019752  0E08               	movlw	8
 15571  019754  6E01               	movwf	btemp^0,c
 15572  019756  0EF7               	movlw	-9
 15573  019758                     us748999:
 15574  019758  006F FF7B FFE3     	movff	postinc2,plusw1
 15575  01975E  28E8               	incf	wreg,w,c
 15576  019760  2E01               	decfsz	btemp^0,f,c
 15577  019762  D7FA               	bra	us748999
 15578                           
 15579                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15580  019764  52E5               	movf	postdec1,f,c
 15581  019766  0012               	return		;funcret
 15582  019768                     __end_of___lomod:
 15583                           	opt callstack 0
 15584                           
 15585 ;; *************** function ___lodiv *****************
 15586 ;; Defined at:
 15587 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15588 ;; Parameters:    Size  Location     Type
 15589 ;;  dividend        8  [STACK] unsigned long long 
 15590 ;;  divisor         8  [STACK] unsigned long long 
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;  quotient        8  [STACK] unsigned long long 
 15593 ;;  counter         1  [STACK] unsigned char 
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  8  [STACK] unsigned long long 
 15596 ;; Registers used:
 15597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/2
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15607 ;;Total ram usage:        0 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; Hardware stack levels required when called:   15
 15610 ;; This function calls:
 15611 ;;		Nothing
 15612 ;; This function is called by:
 15613 ;;		_utoa
 15614 ;; This function uses a reentrant model
 15615 ;;
 15616                           
 15617                           	psect	text59
 15618  018F22                     __ptext59:
 15619                           	opt callstack 0
 15620  018F22                     ___lodiv:
 15621                           	opt callstack 0
 15622                           
 15623                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15624  018F22  0E09               	movlw	9
 15625  018F24  26E1               	addwf	fsr1l,f,c
 15626  018F26  0E00               	movlw	0
 15627  018F28  22E2               	addwfc	fsr1h,f,c
 15628                           
 15629                           ;stkvar	_quotient @ sp[(-9)+0]
 15630                           
 15631                           ;incstack = 0
 15632 ;; hardware stack exceeded
 15633  018F2A  0E07               	movlw	7
 15634  018F2C  6E01               	movwf	btemp^0,c
 15635  018F2E  0EF7               	movlw	-9
 15636  018F30                     u7381:
 15637  018F30  6AE3               	clrf	plusw1,c
 15638  018F32  2AE8               	incf	wreg,f,c
 15639  018F34  0601               	decf	btemp^0,f,c
 15640  018F36  E2FC               	bc	u7381
 15641                           
 15642                           ;stkvar	_divisor @ sp[(-9)+-16]
 15643  018F38  0EE7               	movlw	-25
 15644  018F3A  50E3               	movf	plusw1,w,c
 15645  018F3C  E116               	bnz	u7390
 15646  018F3E  0EE8               	movlw	-24
 15647  018F40  50E3               	movf	plusw1,w,c
 15648  018F42  E113               	bnz	u7390
 15649  018F44  0EE9               	movlw	-23
 15650  018F46  50E3               	movf	plusw1,w,c
 15651  018F48  E110               	bnz	u7390
 15652  018F4A  0EEA               	movlw	-22
 15653  018F4C  50E3               	movf	plusw1,w,c
 15654  018F4E  E10D               	bnz	u7390
 15655  018F50  0EEB               	movlw	-21
 15656  018F52  50E3               	movf	plusw1,w,c
 15657  018F54  E10A               	bnz	u7390
 15658  018F56  0EEC               	movlw	-20
 15659  018F58  50E3               	movf	plusw1,w,c
 15660  018F5A  E107               	bnz	u7390
 15661  018F5C  0EED               	movlw	-19
 15662  018F5E  50E3               	movf	plusw1,w,c
 15663  018F60  E104               	bnz	u7390
 15664  018F62  0EEE               	movlw	-18
 15665  018F64  50E3               	movf	plusw1,w,c
 15666  018F66  B4D8               	btfsc	status,2,c
 15667  018F68  D088               	goto	u7420
 15668  018F6A                     u7390:
 15669                           
 15670                           ;stkvar	_counter @ sp[(-9)+8]
 15671  018F6A  0EFF               	movlw	-1
 15672  018F6C  6AE3               	clrf	plusw1,c
 15673  018F6E  D012               	goto	L16
 15674  018F70                     l8870:
 15675                           
 15676                           ;stkvar	_divisor @ sp[(-9)+-16]
 15677  018F70  90D8               	bcf	status,0,c
 15678  018F72  0EE7               	movlw	-25
 15679  018F74  36E3               	rlcf	plusw1,f,c
 15680  018F76  0EE8               	movlw	-24
 15681  018F78  36E3               	rlcf	plusw1,f,c
 15682  018F7A  0EE9               	movlw	-23
 15683  018F7C  36E3               	rlcf	plusw1,f,c
 15684  018F7E  0EEA               	movlw	-22
 15685  018F80  36E3               	rlcf	plusw1,f,c
 15686  018F82  0EEB               	movlw	-21
 15687  018F84  36E3               	rlcf	plusw1,f,c
 15688  018F86  0EEC               	movlw	-20
 15689  018F88  36E3               	rlcf	plusw1,f,c
 15690  018F8A  0EED               	movlw	-19
 15691  018F8C  36E3               	rlcf	plusw1,f,c
 15692  018F8E  0EEE               	movlw	-18
 15693  018F90  36E3               	rlcf	plusw1,f,c
 15694                           
 15695                           ;stkvar	_counter @ sp[(-9)+8]
 15696  018F92  0EFF               	movlw	-1
 15697  018F94                     L16:
 15698  018F94  2AE3               	incf	plusw1,f,c
 15699                           
 15700                           ;stkvar	_divisor @ sp[(-9)+-16]
 15701  018F96  0EEE               	movlw	-18
 15702  018F98  AEE3               	btfss	plusw1,7,c
 15703  018F9A  D7EA               	goto	l8870
 15704  018F9C                     u7400:
 15705                           
 15706                           ;stkvar	_quotient @ sp[(-9)+0]
 15707  018F9C  90D8               	bcf	status,0,c
 15708  018F9E  0EF7               	movlw	-9
 15709  018FA0  36E3               	rlcf	plusw1,f,c
 15710  018FA2  0EF8               	movlw	-8
 15711  018FA4  36E3               	rlcf	plusw1,f,c
 15712  018FA6  0EF9               	movlw	-7
 15713  018FA8  36E3               	rlcf	plusw1,f,c
 15714  018FAA  0EFA               	movlw	-6
 15715  018FAC  36E3               	rlcf	plusw1,f,c
 15716  018FAE  0EFB               	movlw	-5
 15717  018FB0  36E3               	rlcf	plusw1,f,c
 15718  018FB2  0EFC               	movlw	-4
 15719  018FB4  36E3               	rlcf	plusw1,f,c
 15720  018FB6  0EFD               	movlw	-3
 15721  018FB8  36E3               	rlcf	plusw1,f,c
 15722  018FBA  0EFE               	movlw	-2
 15723  018FBC  36E3               	rlcf	plusw1,f,c
 15724                           
 15725                           ;stkvar	_divisor @ sp[(-9)+-16]
 15726                           ;stkvar	_dividend @ sp[(-9)+-8]
 15727  018FBE  50E1               	movf	fsr1l,w,c
 15728  018FC0  0FEF               	addlw	-17
 15729  018FC2  6ED9               	movwf	fsr2l,c
 15730  018FC4  50E2               	movf	fsr1h,w,c
 15731  018FC6  6EDA               	movwf	fsr2h,c
 15732  018FC8  0EFF               	movlw	255
 15733  018FCA  22DA               	addwfc	fsr2h,f,c
 15734  018FCC  0EE7               	movlw	-25
 15735  018FCE  50E3               	movf	plusw1,w,c
 15736  018FD0  5CDE               	subwf	postinc2,w,c
 15737  018FD2  0EE8               	movlw	-24
 15738  018FD4  50E3               	movf	plusw1,w,c
 15739  018FD6  58DE               	subwfb	postinc2,w,c
 15740  018FD8  0EE9               	movlw	-23
 15741  018FDA  50E3               	movf	plusw1,w,c
 15742  018FDC  58DE               	subwfb	postinc2,w,c
 15743  018FDE  0EEA               	movlw	-22
 15744  018FE0  50E3               	movf	plusw1,w,c
 15745  018FE2  58DE               	subwfb	postinc2,w,c
 15746  018FE4  0EEB               	movlw	-21
 15747  018FE6  50E3               	movf	plusw1,w,c
 15748  018FE8  58DE               	subwfb	postinc2,w,c
 15749  018FEA  0EEC               	movlw	-20
 15750  018FEC  50E3               	movf	plusw1,w,c
 15751  018FEE  58DE               	subwfb	postinc2,w,c
 15752  018FF0  0EED               	movlw	-19
 15753  018FF2  50E3               	movf	plusw1,w,c
 15754  018FF4  58DE               	subwfb	postinc2,w,c
 15755  018FF6  0EEE               	movlw	-18
 15756  018FF8  50E3               	movf	plusw1,w,c
 15757  018FFA  58DE               	subwfb	postinc2,w,c
 15758  018FFC  A0D8               	btfss	status,0,c
 15759  018FFE  D021               	goto	l8882
 15760                           
 15761                           ;stkvar	_divisor @ sp[(-9)+-16]
 15762                           ;stkvar	_dividend @ sp[(-9)+-8]
 15763  019000  50E1               	movf	fsr1l,w,c
 15764  019002  0FEF               	addlw	-17
 15765  019004  6ED9               	movwf	fsr2l,c
 15766  019006  50E2               	movf	fsr1h,w,c
 15767  019008  6EDA               	movwf	fsr2h,c
 15768  01900A  0EFF               	movlw	255
 15769  01900C  22DA               	addwfc	fsr2h,f,c
 15770  01900E  0EE7               	movlw	-25
 15771  019010  50E3               	movf	plusw1,w,c
 15772  019012  5EDE               	subwf	postinc2,f,c
 15773  019014  0EE8               	movlw	-24
 15774  019016  50E3               	movf	plusw1,w,c
 15775  019018  5ADE               	subwfb	postinc2,f,c
 15776  01901A  0EE9               	movlw	-23
 15777  01901C  50E3               	movf	plusw1,w,c
 15778  01901E  5ADE               	subwfb	postinc2,f,c
 15779  019020  0EEA               	movlw	-22
 15780  019022  50E3               	movf	plusw1,w,c
 15781  019024  5ADE               	subwfb	postinc2,f,c
 15782  019026  0EEB               	movlw	-21
 15783  019028  50E3               	movf	plusw1,w,c
 15784  01902A  5ADE               	subwfb	postinc2,f,c
 15785  01902C  0EEC               	movlw	-20
 15786  01902E  50E3               	movf	plusw1,w,c
 15787  019030  5ADE               	subwfb	postinc2,f,c
 15788  019032  0EED               	movlw	-19
 15789  019034  50E3               	movf	plusw1,w,c
 15790  019036  5ADE               	subwfb	postinc2,f,c
 15791  019038  0EEE               	movlw	-18
 15792  01903A  50E3               	movf	plusw1,w,c
 15793  01903C  5ADE               	subwfb	postinc2,f,c
 15794                           
 15795                           ;stkvar	_quotient @ sp[(-9)+0]
 15796  01903E  0EF7               	movlw	-9
 15797  019040  80E3               	bsf	plusw1,0,c
 15798  019042                     l8882:
 15799                           
 15800                           ;stkvar	_divisor @ sp[(-9)+-16]
 15801  019042  90D8               	bcf	status,0,c
 15802  019044  0EEE               	movlw	-18
 15803  019046  32E3               	rrcf	plusw1,f,c
 15804  019048  0EED               	movlw	-19
 15805  01904A  32E3               	rrcf	plusw1,f,c
 15806  01904C  0EEC               	movlw	-20
 15807  01904E  32E3               	rrcf	plusw1,f,c
 15808  019050  0EEB               	movlw	-21
 15809  019052  32E3               	rrcf	plusw1,f,c
 15810  019054  0EEA               	movlw	-22
 15811  019056  32E3               	rrcf	plusw1,f,c
 15812  019058  0EE9               	movlw	-23
 15813  01905A  32E3               	rrcf	plusw1,f,c
 15814  01905C  0EE8               	movlw	-24
 15815  01905E  32E3               	rrcf	plusw1,f,c
 15816  019060  0EE7               	movlw	-25
 15817  019062  32E3               	rrcf	plusw1,f,c
 15818                           
 15819                           ;stkvar	_counter @ sp[(-9)+8]
 15820  019064  0EFF               	movlw	-1
 15821  019066  50E3               	movf	plusw1,w,c
 15822  019068  6E01               	movwf	btemp^0,c
 15823  01906A  0E01               	movlw	1
 15824  01906C  5E01               	subwf	btemp^0,f,c
 15825  01906E  0EFF               	movlw	-1
 15826  019070  0060  F007  FFE3   	movff	btemp,plusw1
 15827  019076  A4D8               	btfss	status,2,c
 15828  019078  D791               	goto	u7400
 15829  01907A                     u7420:
 15830                           
 15831                           ;stkvar	_quotient @ sp[(-9)+0]
 15832  01907A  0EF7               	movlw	247
 15833  01907C  24E1               	addwf	fsr1l,w,c
 15834  01907E  6ED9               	movwf	fsr2l,c
 15835  019080  0EFF               	movlw	255
 15836  019082  20E2               	addwfc	fsr1h,w,c
 15837  019084  6EDA               	movwf	fsr2h,c
 15838                           
 15839                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15840  019086  0E08               	movlw	8
 15841  019088  6E01               	movwf	btemp^0,c
 15842  01908A  0EEF               	movlw	-17
 15843  01908C                     us743999:
 15844  01908C  006F FF7B FFE3     	movff	postinc2,plusw1
 15845  019092  28E8               	incf	wreg,w,c
 15846  019094  2E01               	decfsz	btemp^0,f,c
 15847  019096  D7FA               	bra	us743999
 15848                           
 15849                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15850  019098  0EF7               	movlw	247
 15851  01909A  26E1               	addwf	fsr1l,f,c
 15852  01909C  0EFF               	movlw	255
 15853  01909E  22E2               	addwfc	fsr1h,f,c
 15854  0190A0  0012               	return		;funcret
 15855  0190A2                     __end_of___lodiv:
 15856                           	opt callstack 0
 15857                           
 15858 ;; *************** function _strncmp *****************
 15859 ;; Defined at:
 15860 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;  _l              2  [STACK] PTR const unsigned char 
 15863 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15864 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15865 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15866 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15867 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15868 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15869 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15870 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15871 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15872 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15873 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15874 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15875 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15876 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15877 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15878 ;;		 -> STR_1(21), 
 15879 ;;  _r              2  [STACK] PTR const unsigned char 
 15880 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15881 ;;		 -> STR_79(3), STR_75(3), 
 15882 ;;  n               2  [STACK] unsigned int 
 15883 ;; Auto vars:     Size  Location     Type
 15884 ;;  r               2  [STACK] PTR const unsigned char 
 15885 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15886 ;;		 -> STR_79(3), STR_75(3), 
 15887 ;;  l               2  [STACK] PTR const unsigned char 
 15888 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15889 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15890 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15891 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15892 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15893 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15894 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15895 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15896 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15897 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15898 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15899 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15900 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15901 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15902 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15903 ;;		 -> STR_1(21), 
 15904 ;; Return value:  Size  Location     Type
 15905 ;;                  2  [STACK] int 
 15906 ;; Registers used:
 15907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15917 ;;Total ram usage:        0 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:   15
 15920 ;; This function calls:
 15921 ;;		Nothing
 15922 ;; This function is called by:
 15923 ;;		_vfpfcnvrt
 15924 ;; This function uses a reentrant model
 15925 ;;
 15926                           
 15927                           	psect	text60
 15928  018098                     __ptext60:
 15929                           	opt callstack 0
 15930  018098                     _strncmp:
 15931                           	opt callstack 0
 15932                           
 15933                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15934  018098  52E6               	movf	postinc1,f,c
 15935  01809A  52E6               	movf	postinc1,f,c
 15936  01809C  52E6               	movf	postinc1,f,c
 15937  01809E  52E6               	movf	postinc1,f,c
 15938                           
 15939                           ;stkvar	__l @ sp[(-4)+-2]
 15940                           
 15941                           ;incstack = 0
 15942 ;; hardware stack exceeded
 15943  0180A0  0EFA               	movlw	-6
 15944  0180A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15945  0180A8  0EFB               	movlw	-5
 15946  0180AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15947                           
 15948                           ;stkvar	_l @ sp[(-4)+2]
 15949  0180B0  0EFF               	movlw	-1
 15950  0180B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15951  0180B8  0EFE               	movlw	-2
 15952  0180BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15953                           
 15954                           ;stkvar	__r @ sp[(-4)+-4]
 15955  0180C0  0EF8               	movlw	-8
 15956  0180C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15957  0180C8  0EF9               	movlw	-7
 15958  0180CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15959                           
 15960                           ;stkvar	_r @ sp[(-4)+0]
 15961  0180D0  0EFD               	movlw	-3
 15962  0180D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15963  0180D8  0EFC               	movlw	-4
 15964  0180DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15965                           
 15966                           ;stkvar	_n @ sp[(-4)+-6]
 15967  0180E0  0EF6               	movlw	-10
 15968  0180E2  006F FF8C  F001    	movff	plusw1,btemp
 15969  0180E8  0E01               	movlw	1
 15970  0180EA  5E01               	subwf	btemp^0,f,c
 15971  0180EC  0EF6               	movlw	-10
 15972  0180EE  0060  F007  FFE3   	movff	btemp,plusw1
 15973  0180F4  0EF7               	movlw	-9
 15974  0180F6  006F FF8C  F001    	movff	plusw1,btemp
 15975  0180FC  0E00               	movlw	0
 15976  0180FE  5A01               	subwfb	btemp^0,f,c
 15977  018100  0EF7               	movlw	-9
 15978  018102  0060  F007  FFE3   	movff	btemp,plusw1
 15979  018108  0EF6               	movlw	-10
 15980  01810A  28E3               	incf	plusw1,w,c
 15981  01810C  E13F               	bnz	l9552
 15982  01810E  0EF7               	movlw	-9
 15983  018110  28E3               	incf	plusw1,w,c
 15984  018112  A4D8               	btfss	status,2,c
 15985  018114  D03B               	goto	l9552
 15986  018116  0E00               	movlw	0
 15987  018118  6E01               	movwf	btemp^0,c
 15988  01811A  0E00               	movlw	0
 15989  01811C  6E02               	movwf	(btemp+1)^0,c
 15990  01811E  D0C7               	goto	l3537
 15991  018120                     l9550:
 15992                           
 15993                           ;stkvar	_l @ sp[(-4)+2]
 15994  018120  0EFE               	movlw	-2
 15995  018122  50E3               	movf	plusw1,w,c
 15996  018124  0F01               	addlw	1
 15997  018126  6E01               	movwf	btemp^0,c
 15998  018128  0EFE               	movlw	-2
 15999  01812A  0060  F007  FFE3   	movff	btemp,plusw1
 16000  018130  6A01               	clrf	btemp^0,c
 16001  018132  0EFF               	movlw	-1
 16002  018134  50E3               	movf	plusw1,w,c
 16003  018136  2001               	addwfc	btemp^0,w,c
 16004  018138  6E01               	movwf	btemp^0,c
 16005  01813A  0EFF               	movlw	-1
 16006  01813C  0060  F007  FFE3   	movff	btemp,plusw1
 16007                           
 16008                           ;stkvar	_r @ sp[(-4)+0]
 16009  018142  0EFC               	movlw	-4
 16010  018144  50E3               	movf	plusw1,w,c
 16011  018146  0F01               	addlw	1
 16012  018148  6E01               	movwf	btemp^0,c
 16013  01814A  0EFC               	movlw	-4
 16014  01814C  0060  F007  FFE3   	movff	btemp,plusw1
 16015  018152  6A01               	clrf	btemp^0,c
 16016  018154  0EFD               	movlw	-3
 16017  018156  50E3               	movf	plusw1,w,c
 16018  018158  2001               	addwfc	btemp^0,w,c
 16019  01815A  6E01               	movwf	btemp^0,c
 16020  01815C  0EFD               	movlw	-3
 16021  01815E  0060  F007  FFE3   	movff	btemp,plusw1
 16022                           
 16023                           ;stkvar	_n @ sp[(-4)+-6]
 16024  018164  0EF6               	movlw	-10
 16025  018166  006F FF8C  F001    	movff	plusw1,btemp
 16026  01816C  0E01               	movlw	1
 16027  01816E  5E01               	subwf	btemp^0,f,c
 16028  018170  0EF6               	movlw	-10
 16029  018172  0060  F007  FFE3   	movff	btemp,plusw1
 16030  018178  0EF7               	movlw	-9
 16031  01817A  006F FF8C  F001    	movff	plusw1,btemp
 16032  018180  0E00               	movlw	0
 16033  018182  5A01               	subwfb	btemp^0,f,c
 16034  018184  0EF7               	movlw	-9
 16035  018186  0060  F007  FFE3   	movff	btemp,plusw1
 16036  01818C                     l9552:
 16037                           
 16038                           ;stkvar	_l @ sp[(-4)+2]
 16039  01818C  0EFE               	movlw	-2
 16040  01818E  006F FF8F FFF6     	movff	plusw1,tblptrl
 16041  018194  0EFF               	movlw	-1
 16042  018196  006F FF8F FFF7     	movff	plusw1,tblptrh
 16043  01819C  0E00               	movlw	low (__mediumconst shr (0+16))
 16044  01819E  6EF8               	movwf	tblptru,c
 16045  0181A0  0E1F               	movlw	(high __ramtop+-1)
 16046  0181A2  64F7               	cpfsgt	tblptrh,c
 16047  0181A4  D003               	bra	u8677
 16048  0181A6  0008               	tblrd		*
 16049  0181A8  50F5               	movf	tablat,w,c
 16050  0181AA  D007               	bra	u8670
 16051  0181AC                     u8677:
 16052  0181AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16053  0181B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16054  0181B8  50EF               	movf	indf0,w,c
 16055  0181BA                     u8670:
 16056  0181BA  0900               	iorlw	0
 16057  0181BC  B4D8               	btfsc	status,2,c
 16058  0181BE  D04A               	goto	u8710
 16059                           
 16060                           ;stkvar	_r @ sp[(-4)+0]
 16061  0181C0  50E1               	movf	fsr1l,w,c
 16062  0181C2  0FFC               	addlw	-4
 16063  0181C4  6ED9               	movwf	fsr2l,c
 16064  0181C6  50E2               	movf	fsr1h,w,c
 16065  0181C8  6EDA               	movwf	fsr2h,c
 16066  0181CA  0EFF               	movlw	255
 16067  0181CC  22DA               	addwfc	fsr2h,f,c
 16068  0181CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16069  0181D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16070  0181DA                     	if	0	;tblptru may be non-zero
 16071  0181DA                     	endif
 16072  0181DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16073  0181DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16074  0181DC  6EF8               	movwf	tblptru,c
 16075  0181DE                     	endif
 16076  0181DE  0008               	tblrd		*
 16077  0181E0  50F5               	movf	tablat,w,c
 16078  0181E2  0900               	iorlw	0
 16079  0181E4  B4D8               	btfsc	status,2,c
 16080  0181E6  D036               	goto	u8710
 16081                           
 16082                           ;stkvar	_n @ sp[(-4)+-6]
 16083  0181E8  0EF6               	movlw	-10
 16084  0181EA  006F FF8C  F001    	movff	plusw1,btemp
 16085  0181F0  0EF7               	movlw	-9
 16086  0181F2  50E3               	movf	plusw1,w,c
 16087  0181F4  1001               	iorwf	btemp^0,w,c
 16088  0181F6  B4D8               	btfsc	status,2,c
 16089  0181F8  D02D               	goto	u8710
 16090                           
 16091                           ;stkvar	_r @ sp[(-4)+0]
 16092  0181FA  50E1               	movf	fsr1l,w,c
 16093  0181FC  0FFC               	addlw	-4
 16094  0181FE  6ED9               	movwf	fsr2l,c
 16095  018200  50E2               	movf	fsr1h,w,c
 16096  018202  6EDA               	movwf	fsr2h,c
 16097  018204  0EFF               	movlw	255
 16098  018206  22DA               	addwfc	fsr2h,f,c
 16099  018208  006F FF7B FFF6     	movff	postinc2,tblptrl
 16100  01820E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16101  018214                     	if	0	;tblptru may be non-zero
 16102  018214                     	endif
 16103  018214                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16104  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 16105  018216  6EF8               	movwf	tblptru,c
 16106  018218                     	endif
 16107  018218  0008               	tblrd		*
 16108  01821A  006F FFD4  F00C    	movff	tablat,btemp+11
 16109                           
 16110                           ;stkvar	_l @ sp[(-4)+2]
 16111  018220  0EFE               	movlw	-2
 16112  018222  006F FF8F FFF6     	movff	plusw1,tblptrl
 16113  018228  0EFF               	movlw	-1
 16114  01822A  006F FF8F FFF7     	movff	plusw1,tblptrh
 16115  018230  0E00               	movlw	low (__mediumconst shr (0+16))
 16116  018232  6EF8               	movwf	tblptru,c
 16117  018234  0E1F               	movlw	(high __ramtop+-1)
 16118  018236  64F7               	cpfsgt	tblptrh,c
 16119  018238  D003               	bra	u8717
 16120  01823A  0008               	tblrd		*
 16121  01823C  50F5               	movf	tablat,w,c
 16122  01823E  D007               	bra	u8715
 16123  018240                     u8717:
 16124  018240  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16125  018246  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16126  01824C  50EF               	movf	indf0,w,c
 16127  01824E                     u8715:
 16128  01824E  180C               	xorwf	(btemp+11)^0,w,c
 16129  018250  B4D8               	btfsc	status,2,c
 16130  018252  D766               	goto	l9550
 16131  018254                     u8710:
 16132                           
 16133                           ;stkvar	_l @ sp[(-4)+2]
 16134  018254  0EFE               	movlw	-2
 16135  018256  006F FF8F FFF6     	movff	plusw1,tblptrl
 16136  01825C  0EFF               	movlw	-1
 16137  01825E  006F FF8F FFF7     	movff	plusw1,tblptrh
 16138  018264  0E00               	movlw	low (__mediumconst shr (0+16))
 16139  018266  6EF8               	movwf	tblptru,c
 16140  018268  0E1F               	movlw	(high __ramtop+-1)
 16141  01826A  64F7               	cpfsgt	tblptrh,c
 16142  01826C  D003               	bra	u8727
 16143  01826E  0008               	tblrd		*
 16144  018270  50F5               	movf	tablat,w,c
 16145  018272  D007               	bra	u8720
 16146  018274                     u8727:
 16147  018274  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16148  01827A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16149  018280  50EF               	movf	indf0,w,c
 16150  018282                     u8720:
 16151  018282  6E01               	movwf	btemp^0,c
 16152  018284  6A02               	clrf	(btemp+1)^0,c
 16153                           
 16154                           ;stkvar	_r @ sp[(-4)+0]
 16155  018286  50E1               	movf	fsr1l,w,c
 16156  018288  0FFC               	addlw	-4
 16157  01828A  6ED9               	movwf	fsr2l,c
 16158  01828C  50E2               	movf	fsr1h,w,c
 16159  01828E  6EDA               	movwf	fsr2h,c
 16160  018290  0EFF               	movlw	255
 16161  018292  22DA               	addwfc	fsr2h,f,c
 16162  018294  006F FF7B FFF6     	movff	postinc2,tblptrl
 16163  01829A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16164  0182A0                     	if	0	;tblptru may be non-zero
 16165  0182A0                     	endif
 16166  0182A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16167  0182A0  0E00               	movlw	low (__mediumconst shr (0+16))
 16168  0182A2  6EF8               	movwf	tblptru,c
 16169  0182A4                     	endif
 16170  0182A4  0008               	tblrd		*
 16171  0182A6  50F5               	movf	tablat,w,c
 16172  0182A8  5E01               	subwf	btemp^0,f,c
 16173  0182AA  0E00               	movlw	0
 16174  0182AC  5A02               	subwfb	(btemp+1)^0,f,c
 16175  0182AE                     l3537:
 16176                           
 16177                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16178  0182AE  0EF6               	movlw	246
 16179  0182B0  26E1               	addwf	fsr1l,f,c
 16180  0182B2  0EFF               	movlw	255
 16181  0182B4  22E2               	addwfc	fsr1h,f,c
 16182  0182B6  0012               	return		;funcret
 16183  0182B8                     __end_of_strncmp:
 16184                           	opt callstack 0
 16185                           
 16186 ;; *************** function _stoa *****************
 16187 ;; Defined at:
 16188 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16189 ;; Parameters:    Size  Location     Type
 16190 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16191 ;;		 -> f(6), NULL(0), 
 16192 ;;  s               2  [STACK] PTR unsigned char 
 16193 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16194 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16195 ;;		 -> V(191), 
 16196 ;; Auto vars:     Size  Location     Type
 16197 ;;  nuls            7  [STACK] unsigned char [7]
 16198 ;;  l               2  [STACK] int 
 16199 ;;  p               2  [STACK] int 
 16200 ;;  cp              2  [STACK] PTR unsigned char 
 16201 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16202 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16203 ;;		 -> STR_3(5), V(191), 
 16204 ;;  w               2  [STACK] int 
 16205 ;;  i               2  [STACK] int 
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  2  [STACK] int 
 16208 ;; Registers used:
 16209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16219 ;;Total ram usage:        0 bytes
 16220 ;; Hardware stack levels used:    1
 16221 ;; Hardware stack levels required when called:   18
 16222 ;; This function calls:
 16223 ;;		_fputc
 16224 ;;		_strlen
 16225 ;; This function is called by:
 16226 ;;		_vfpfcnvrt
 16227 ;; This function uses a reentrant model
 16228 ;;
 16229                           
 16230                           	psect	text61
 16231  017460                     __ptext61:
 16232                           	opt callstack 0
 16233  017460                     _stoa:
 16234                           	opt callstack 0
 16235                           
 16236                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16237  017460  0E11               	movlw	17
 16238  017462  26E1               	addwf	fsr1l,f,c
 16239  017464  0E00               	movlw	0
 16240  017466  22E2               	addwfc	fsr1h,f,c
 16241                           
 16242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16243                           
 16244                           ;incstack = 0
 16245 ;; hardware stack exceeded
 16246  017468  EE20  F100         	lfsr	2,stoa@F1166
 16247                           
 16248                           ;stkvar	_nuls @ sp[(-17)+0]
 16249  01746C  0E07               	movlw	7
 16250  01746E  6E01               	movwf	btemp^0,c
 16251  017470  0EEF               	movlw	-17
 16252  017472                     us1173999:
 16253  017472  006F FF7B FFE3     	movff	postinc2,plusw1
 16254  017478  28E8               	incf	wreg,w,c
 16255  01747A  2E01               	decfsz	btemp^0,f,c
 16256  01747C  D7FA               	bra	us1173999
 16257                           
 16258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16259                           ;stkvar	_s @ sp[(-17)+-4]
 16260  01747E  0EEB               	movlw	-21
 16261  017480  006F FF8C  F00B    	movff	plusw1,btemp+10
 16262  017486  0EEC               	movlw	-20
 16263  017488  006F FF8C  F00C    	movff	plusw1,btemp+11
 16264                           
 16265                           ;stkvar	_cp @ sp[(-17)+11]
 16266  01748E  0EFB               	movlw	-5
 16267  017490  0060  F033  FFE3   	movff	btemp+11,plusw1
 16268  017496  0EFA               	movlw	-6
 16269  017498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16270                           
 16271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16272                           ;stkvar	_cp @ sp[(-17)+11]
 16273  01749E  0EFA               	movlw	-6
 16274  0174A0  006F FF8C  F001    	movff	plusw1,btemp
 16275  0174A6  0EFB               	movlw	-5
 16276  0174A8  50E3               	movf	plusw1,w,c
 16277  0174AA  1001               	iorwf	btemp^0,w,c
 16278  0174AC  A4D8               	btfss	status,2,c
 16279  0174AE  D00E               	goto	l12588
 16280                           
 16281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16282                           ;stkvar	_nuls @ sp[(-17)+0]
 16283  0174B0  0EEF               	movlw	239
 16284  0174B2  24E1               	addwf	fsr1l,w,c
 16285  0174B4  6E0B               	movwf	(btemp+10)^0,c
 16286  0174B6  0EFF               	movlw	255
 16287  0174B8  20E2               	addwfc	fsr1h,w,c
 16288  0174BA  6E0C               	movwf	(btemp+11)^0,c
 16289                           
 16290                           ;stkvar	_cp @ sp[(-17)+11]
 16291  0174BC  0EFB               	movlw	-5
 16292  0174BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16293  0174C4  0EFA               	movlw	-6
 16294  0174C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16295  0174CC                     l12588:
 16296                           
 16297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16298                           ;stkvar	_cp @ sp[(-17)+11]
 16299  0174CC  0EFA               	movlw	-6
 16300  0174CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16301  0174D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16302  0174DA  EC52  F0D6         	call	_strlen	;wreg free
 16303                           
 16304                           ;stkvar	_l @ sp[(-17)+7]
 16305  0174DE  0EF6               	movlw	-10
 16306  0174E0  0060  F007  FFE3   	movff	btemp,plusw1
 16307  0174E6  0EF7               	movlw	-9
 16308  0174E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16309                           
 16310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16311                           ;stkvar	_p @ sp[(-17)+9]
 16312  0174EE  0EF8               	movlw	-8
 16313  0174F0  0060  F0F3  FFE3   	movff	_prec,plusw1
 16314  0174F6  0EF9               	movlw	-7
 16315  0174F8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16316                           
 16317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16318                           ;stkvar	_p @ sp[(-17)+9]
 16319  0174FE  0EF9               	movlw	-7
 16320  017500  BEE3               	btfsc	plusw1,7,c
 16321  017502  D023               	goto	l2362
 16322                           
 16323                           ;stkvar	_l @ sp[(-17)+7]
 16324                           ;stkvar	_p @ sp[(-17)+9]
 16325  017504  50E1               	movf	fsr1l,w,c
 16326  017506  0FF8               	addlw	-8
 16327  017508  6ED9               	movwf	fsr2l,c
 16328  01750A  50E2               	movf	fsr1h,w,c
 16329  01750C  6EDA               	movwf	fsr2h,c
 16330  01750E  0EFF               	movlw	255
 16331  017510  22DA               	addwfc	fsr2h,f,c
 16332  017512  0EF6               	movlw	-10
 16333  017514  50E3               	movf	plusw1,w,c
 16334  017516  5CDE               	subwf	postinc2,w,c
 16335  017518  50DE               	movf	postinc2,w,c
 16336  01751A  0A80               	xorlw	128
 16337  01751C  6E01               	movwf	btemp^0,c
 16338  01751E  0EF7               	movlw	-9
 16339  017520  50E3               	movf	plusw1,w,c
 16340  017522  0A80               	xorlw	128
 16341  017524  5801               	subwfb	btemp^0,w,c
 16342  017526  B0D8               	btfsc	status,0,c
 16343  017528  D010               	goto	l2362
 16344                           
 16345                           ;stkvar	_p @ sp[(-17)+9]
 16346                           ;stkvar	_l @ sp[(-17)+7]
 16347  01752A  0EF8               	movlw	-8
 16348  01752C  006F FF8C  F001    	movff	plusw1,btemp
 16349  017532  0EF6               	movlw	-10
 16350  017534  0060  F007  FFE3   	movff	btemp,plusw1
 16351  01753A  0EF9               	movlw	-7
 16352  01753C  006F FF8C  F001    	movff	plusw1,btemp
 16353  017542  0EF7               	movlw	-9
 16354  017544  0060  F007  FFE3   	movff	btemp,plusw1
 16355  01754A                     l2362:
 16356                           
 16357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16358                           ;stkvar	_l @ sp[(-17)+7]
 16359                           ;stkvar	_p @ sp[(-17)+9]
 16360  01754A  0EF6               	movlw	-10
 16361  01754C  006F FF8C  F001    	movff	plusw1,btemp
 16362  017552  0EF8               	movlw	-8
 16363  017554  0060  F007  FFE3   	movff	btemp,plusw1
 16364  01755A  0EF7               	movlw	-9
 16365  01755C  006F FF8C  F001    	movff	plusw1,btemp
 16366  017562  0EF9               	movlw	-7
 16367  017564  0060  F007  FFE3   	movff	btemp,plusw1
 16368                           
 16369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16370                           ;stkvar	_w @ sp[(-17)+13]
 16371  01756A  0EFC               	movlw	-4
 16372  01756C  0060  F0EB  FFE3   	movff	_width,plusw1
 16373  017572  0EFD               	movlw	-3
 16374  017574  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16375                           
 16376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16377  01757A  A03E               	btfss	_flags^0,0,c
 16378  01757C  D01F               	goto	l12608
 16379  01757E  D031               	goto	u11780
 16380  017580                     l12604:
 16381                           
 16382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16383                           ;stkvar	_fp @ sp[(-17)+-2]
 16384  017580  0EED               	movlw	-19
 16385  017582  006F FF8F FFE6     	movff	plusw1,postinc1
 16386  017588  006F FF8F FFE6     	movff	plusw1,postinc1
 16387  01758E  0E20               	movlw	32
 16388  017590  6EE6               	movwf	postinc1,c
 16389  017592  0E00               	movlw	0
 16390  017594  6EE6               	movwf	postinc1,c
 16391  017596  ECE6  F0CC         	call	_fputc	;wreg free
 16392                           
 16393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16394                           ;stkvar	_l @ sp[(-17)+7]
 16395  01759A  0EF6               	movlw	-10
 16396  01759C  50E3               	movf	plusw1,w,c
 16397  01759E  0F01               	addlw	1
 16398  0175A0  6E01               	movwf	btemp^0,c
 16399  0175A2  0EF6               	movlw	-10
 16400  0175A4  0060  F007  FFE3   	movff	btemp,plusw1
 16401  0175AA  6A01               	clrf	btemp^0,c
 16402  0175AC  0EF7               	movlw	-9
 16403  0175AE  50E3               	movf	plusw1,w,c
 16404  0175B0  2001               	addwfc	btemp^0,w,c
 16405  0175B2  6E01               	movwf	btemp^0,c
 16406  0175B4  0EF7               	movlw	-9
 16407  0175B6  0060  F007  FFE3   	movff	btemp,plusw1
 16408  0175BC                     l12608:
 16409                           
 16410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16411                           ;stkvar	_w @ sp[(-17)+13]
 16412                           ;stkvar	_l @ sp[(-17)+7]
 16413  0175BC  50E1               	movf	fsr1l,w,c
 16414  0175BE  0FF6               	addlw	-10
 16415  0175C0  6ED9               	movwf	fsr2l,c
 16416  0175C2  50E2               	movf	fsr1h,w,c
 16417  0175C4  6EDA               	movwf	fsr2h,c
 16418  0175C6  0EFF               	movlw	255
 16419  0175C8  22DA               	addwfc	fsr2h,f,c
 16420  0175CA  0EFC               	movlw	-4
 16421  0175CC  50E3               	movf	plusw1,w,c
 16422  0175CE  5CDE               	subwf	postinc2,w,c
 16423  0175D0  50DE               	movf	postinc2,w,c
 16424  0175D2  0A80               	xorlw	128
 16425  0175D4  6E01               	movwf	btemp^0,c
 16426  0175D6  0EFD               	movlw	-3
 16427  0175D8  50E3               	movf	plusw1,w,c
 16428  0175DA  0A80               	xorlw	128
 16429  0175DC  5801               	subwfb	btemp^0,w,c
 16430  0175DE  A0D8               	btfss	status,0,c
 16431  0175E0  D7CF               	goto	l12604
 16432  0175E2                     u11780:
 16433                           
 16434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16435                           ;stkvar	_i @ sp[(-17)+15]
 16436  0175E2  0EFE               	movlw	-2
 16437  0175E4  6AE3               	clrf	plusw1,c
 16438  0175E6  0EFF               	movlw	-1
 16439  0175E8  6AE3               	clrf	plusw1,c
 16440                           
 16441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16442  0175EA  D045               	goto	l12618
 16443  0175EC                     l12612:
 16444                           
 16445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16446                           ;stkvar	_fp @ sp[(-17)+-2]
 16447  0175EC  0EED               	movlw	-19
 16448  0175EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16449  0175F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16450                           
 16451                           ;stkvar	_cp @ sp[(-19)+11]
 16452  0175FA  0EF8               	movlw	-8
 16453  0175FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 16454  017602  0EF9               	movlw	-7
 16455  017604  006F FF8F FFF7     	movff	plusw1,tblptrh
 16456  01760A  0E00               	movlw	low (__mediumconst shr (0+16))
 16457  01760C  6EF8               	movwf	tblptru,c
 16458  01760E  0E1F               	movlw	(high __ramtop+-1)
 16459  017610  64F7               	cpfsgt	tblptrh,c
 16460  017612  D003               	bra	u11797
 16461  017614  0008               	tblrd		*
 16462  017616  50F5               	movf	tablat,w,c
 16463  017618  D007               	bra	u11790
 16464  01761A                     u11797:
 16465  01761A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16466  017620  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16467  017626  50EF               	movf	indf0,w,c
 16468  017628                     u11790:
 16469  017628  6EE6               	movwf	postinc1,c
 16470  01762A  0E00               	movlw	0
 16471  01762C  6EE6               	movwf	postinc1,c
 16472  01762E  ECE6  F0CC         	call	_fputc	;wreg free
 16473                           
 16474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16475                           ;stkvar	_cp @ sp[(-17)+11]
 16476  017632  0EFA               	movlw	-6
 16477  017634  50E3               	movf	plusw1,w,c
 16478  017636  0F01               	addlw	1
 16479  017638  6E01               	movwf	btemp^0,c
 16480  01763A  0EFA               	movlw	-6
 16481  01763C  0060  F007  FFE3   	movff	btemp,plusw1
 16482  017642  6A01               	clrf	btemp^0,c
 16483  017644  0EFB               	movlw	-5
 16484  017646  50E3               	movf	plusw1,w,c
 16485  017648  2001               	addwfc	btemp^0,w,c
 16486  01764A  6E01               	movwf	btemp^0,c
 16487  01764C  0EFB               	movlw	-5
 16488  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 16489                           
 16490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16491                           ;stkvar	_i @ sp[(-17)+15]
 16492  017654  0EFE               	movlw	-2
 16493  017656  50E3               	movf	plusw1,w,c
 16494  017658  0F01               	addlw	1
 16495  01765A  6E01               	movwf	btemp^0,c
 16496  01765C  0EFE               	movlw	-2
 16497  01765E  0060  F007  FFE3   	movff	btemp,plusw1
 16498  017664  6A01               	clrf	btemp^0,c
 16499  017666  0EFF               	movlw	-1
 16500  017668  50E3               	movf	plusw1,w,c
 16501  01766A  2001               	addwfc	btemp^0,w,c
 16502  01766C  6E01               	movwf	btemp^0,c
 16503  01766E  0EFF               	movlw	-1
 16504  017670  0060  F007  FFE3   	movff	btemp,plusw1
 16505  017676                     l12618:
 16506                           
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16508                           ;stkvar	_p @ sp[(-17)+9]
 16509                           ;stkvar	_i @ sp[(-17)+15]
 16510  017676  50E1               	movf	fsr1l,w,c
 16511  017678  0FFE               	addlw	-2
 16512  01767A  6ED9               	movwf	fsr2l,c
 16513  01767C  50E2               	movf	fsr1h,w,c
 16514  01767E  6EDA               	movwf	fsr2h,c
 16515  017680  0EFF               	movlw	255
 16516  017682  22DA               	addwfc	fsr2h,f,c
 16517  017684  0EF8               	movlw	-8
 16518  017686  50E3               	movf	plusw1,w,c
 16519  017688  5CDE               	subwf	postinc2,w,c
 16520  01768A  50DE               	movf	postinc2,w,c
 16521  01768C  0A80               	xorlw	128
 16522  01768E  6E01               	movwf	btemp^0,c
 16523  017690  0EF9               	movlw	-7
 16524  017692  50E3               	movf	plusw1,w,c
 16525  017694  0A80               	xorlw	128
 16526  017696  5801               	subwfb	btemp^0,w,c
 16527  017698  A0D8               	btfss	status,0,c
 16528  01769A  D7A8               	goto	l12612
 16529                           
 16530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16531  01769C  B03E               	btfsc	_flags^0,0,c
 16532  01769E  D01F               	goto	l12626
 16533  0176A0  D031               	goto	u11820
 16534  0176A2                     l12622:
 16535                           
 16536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16537                           ;stkvar	_fp @ sp[(-17)+-2]
 16538  0176A2  0EED               	movlw	-19
 16539  0176A4  006F FF8F FFE6     	movff	plusw1,postinc1
 16540  0176AA  006F FF8F FFE6     	movff	plusw1,postinc1
 16541  0176B0  0E20               	movlw	32
 16542  0176B2  6EE6               	movwf	postinc1,c
 16543  0176B4  0E00               	movlw	0
 16544  0176B6  6EE6               	movwf	postinc1,c
 16545  0176B8  ECE6  F0CC         	call	_fputc	;wreg free
 16546                           
 16547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16548                           ;stkvar	_l @ sp[(-17)+7]
 16549  0176BC  0EF6               	movlw	-10
 16550  0176BE  50E3               	movf	plusw1,w,c
 16551  0176C0  0F01               	addlw	1
 16552  0176C2  6E01               	movwf	btemp^0,c
 16553  0176C4  0EF6               	movlw	-10
 16554  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 16555  0176CC  6A01               	clrf	btemp^0,c
 16556  0176CE  0EF7               	movlw	-9
 16557  0176D0  50E3               	movf	plusw1,w,c
 16558  0176D2  2001               	addwfc	btemp^0,w,c
 16559  0176D4  6E01               	movwf	btemp^0,c
 16560  0176D6  0EF7               	movlw	-9
 16561  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 16562  0176DE                     l12626:
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16565                           ;stkvar	_w @ sp[(-17)+13]
 16566                           ;stkvar	_l @ sp[(-17)+7]
 16567  0176DE  50E1               	movf	fsr1l,w,c
 16568  0176E0  0FF6               	addlw	-10
 16569  0176E2  6ED9               	movwf	fsr2l,c
 16570  0176E4  50E2               	movf	fsr1h,w,c
 16571  0176E6  6EDA               	movwf	fsr2h,c
 16572  0176E8  0EFF               	movlw	255
 16573  0176EA  22DA               	addwfc	fsr2h,f,c
 16574  0176EC  0EFC               	movlw	-4
 16575  0176EE  50E3               	movf	plusw1,w,c
 16576  0176F0  5CDE               	subwf	postinc2,w,c
 16577  0176F2  50DE               	movf	postinc2,w,c
 16578  0176F4  0A80               	xorlw	128
 16579  0176F6  6E01               	movwf	btemp^0,c
 16580  0176F8  0EFD               	movlw	-3
 16581  0176FA  50E3               	movf	plusw1,w,c
 16582  0176FC  0A80               	xorlw	128
 16583  0176FE  5801               	subwfb	btemp^0,w,c
 16584  017700  A0D8               	btfss	status,0,c
 16585  017702  D7CF               	goto	l12622
 16586  017704                     u11820:
 16587                           
 16588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16589                           ;stkvar	_l @ sp[(-17)+7]
 16590  017704  0EF6               	movlw	-10
 16591  017706  006F FF8C  F001    	movff	plusw1,btemp
 16592  01770C  0EF7               	movlw	-9
 16593  01770E  006F FF8C  F002    	movff	plusw1,btemp+1
 16594                           
 16595                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16596  017714  0EEB               	movlw	235
 16597  017716  26E1               	addwf	fsr1l,f,c
 16598  017718  0EFF               	movlw	255
 16599  01771A  22E2               	addwfc	fsr1h,f,c
 16600  01771C  0012               	return		;funcret
 16601  01771E                     __end_of_stoa:
 16602                           	opt callstack 0
 16603                           
 16604 ;; *************** function _efgtoa *****************
 16605 ;; Defined at:
 16606 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16607 ;; Parameters:    Size  Location     Type
 16608 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16609 ;;		 -> f(6), NULL(0), 
 16610 ;;  f               4  [STACK] PTR struct _IO_FILE
 16611 ;;  c               1  [STACK] unsigned char 
 16612 ;; Auto vars:     Size  Location     Type
 16613 ;;  u               4  [STACK] unsigned char 
 16614 ;;  g               4  [STACK] unsigned char 
 16615 ;;  l               4  [STACK] unsigned char 
 16616 ;;  h               4  [STACK] unsigned char 
 16617 ;;  ou              4  [STACK] unsigned char 
 16618 ;;  n               2  [STACK] int 
 16619 ;;  e               2  [STACK] int 
 16620 ;;  i               2  [STACK] int 
 16621 ;;  w               2  [STACK] int 
 16622 ;;  p               2  [STACK] int 
 16623 ;;  sign            2  [STACK] int 
 16624 ;;  d               2  [STACK] int 
 16625 ;;  ne              2  [STACK] int 
 16626 ;;  m               2  [STACK] int 
 16627 ;;  pp              2  [STACK] int 
 16628 ;;  t               2  [STACK] int 
 16629 ;;  mode            1  [STACK] unsigned char 
 16630 ;;  nmode           1  [STACK] unsigned char 
 16631 ;; Return value:  Size  Location     Type
 16632 ;;                  2  [STACK] int 
 16633 ;; Registers used:
 16634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16635 ;; Tracked objects:
 16636 ;;		On entry : 0/0
 16637 ;;		On exit  : 0/0
 16638 ;;		Unchanged: 0/0
 16639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16644 ;;Total ram usage:        0 bytes
 16645 ;; Hardware stack levels used:    1
 16646 ;; Hardware stack levels required when called:   20
 16647 ;; This function calls:
 16648 ;;		___awdiv
 16649 ;;		___awmod
 16650 ;;		___fladd
 16651 ;;		___fldiv
 16652 ;;		___fleq
 16653 ;;		___flge
 16654 ;;		___flmul
 16655 ;;		___flneg
 16656 ;;		___flsub
 16657 ;;		___fltol
 16658 ;;		___fpclassifyf
 16659 ;;		_floorf
 16660 ;;		_isupper
 16661 ;;		_pad
 16662 ;;		_strcpy
 16663 ;;		_tolower
 16664 ;; This function is called by:
 16665 ;;		_vfpfcnvrt
 16666 ;; This function uses a reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text62
 16670  010000                     __ptext62:
 16671                           	opt callstack 0
 16672  010000                     _efgtoa:
 16673                           	opt callstack 0
 16674                           
 16675                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16676  010000  0E38               	movlw	56
 16677  010002  26E1               	addwf	fsr1l,f,c
 16678  010004  0E00               	movlw	0
 16679  010006  22E2               	addwfc	fsr1h,f,c
 16680                           
 16681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16682                           ;stkvar	_sign @ sp[(-56)+42]
 16683                           
 16684                           ;incstack = 0
 16685 ;; hardware stack exceeded
 16686  010008  0EF2               	movlw	-14
 16687  01000A  6AE3               	clrf	plusw1,c
 16688  01000C  0EF3               	movlw	-13
 16689  01000E  6AE3               	clrf	plusw1,c
 16690                           
 16691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16692                           ;stkvar	_f @ sp[(-56)+-6]
 16693  010010  0EC2               	movlw	-62
 16694  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16695  010018  0EC3               	movlw	-61
 16696  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16697  010020  0EC4               	movlw	-60
 16698  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16699  010028  0EC5               	movlw	-59
 16700  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16701                           
 16702                           ;stkvar	_g @ sp[(-56)+16]
 16703  010030  0ED8               	movlw	-40
 16704  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16705  010038  0ED9               	movlw	-39
 16706  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16707  010040  0EDA               	movlw	-38
 16708  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16709  010048  0EDB               	movlw	-37
 16710  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16711                           
 16712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16713                           ;stkvar	_g @ sp[(-56)+16]
 16714  010050  0EDB               	movlw	-37
 16715  010052  AEE3               	btfss	plusw1,7,c
 16716  010054  D02B               	goto	l12286
 16717                           
 16718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16719  010056  0E01               	movlw	1
 16720  010058  6E0B               	movwf	(btemp+10)^0,c
 16721  01005A  0E00               	movlw	0
 16722  01005C  6E0C               	movwf	(btemp+11)^0,c
 16723                           
 16724                           ;stkvar	_sign @ sp[(-56)+42]
 16725  01005E  0EF2               	movlw	-14
 16726  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16727  010066  0EF3               	movlw	-13
 16728  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16731                           ;stkvar	_g @ sp[(-56)+16]
 16732  01006E  0ED8               	movlw	-40
 16733  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16734  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16735  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16736  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16737  010088  EC1A  F0DC         	call	___flneg	;wreg free
 16738                           
 16739                           ;stkvar	_g @ sp[(-56)+16]
 16740  01008C  0ED8               	movlw	-40
 16741  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16742  010094  0ED9               	movlw	-39
 16743  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16744  01009C  0EDA               	movlw	-38
 16745  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16746  0100A4  0EDB               	movlw	-37
 16747  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16748  0100AC                     l12286:
 16749                           
 16750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16751                           ;stkvar	_n @ sp[(-56)+32]
 16752  0100AC  0EE8               	movlw	-24
 16753  0100AE  6AE3               	clrf	plusw1,c
 16754  0100B0  0EE9               	movlw	-23
 16755  0100B2  6AE3               	clrf	plusw1,c
 16756                           
 16757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16758                           ;stkvar	_w @ sp[(-56)+38]
 16759  0100B4  0EEE               	movlw	-18
 16760  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16761  0100BC  0EEF               	movlw	-17
 16762  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16763                           
 16764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16765                           ;stkvar	_sign @ sp[(-56)+42]
 16766  0100C4  0EF2               	movlw	-14
 16767  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16768  0100CC  0EF3               	movlw	-13
 16769  0100CE  50E3               	movf	plusw1,w,c
 16770  0100D0  1001               	iorwf	btemp^0,w,c
 16771  0100D2  A4D8               	btfss	status,2,c
 16772  0100D4  D002               	goto	u11230
 16773  0100D6  A43E               	btfss	_flags^0,2,c
 16774  0100D8  D036               	goto	l12306
 16775  0100DA                     u11230:
 16776                           
 16777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16778                           ;stkvar	_sign @ sp[(-56)+42]
 16779  0100DA  0EF2               	movlw	-14
 16780  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16781  0100E2  0EF3               	movlw	-13
 16782  0100E4  50E3               	movf	plusw1,w,c
 16783  0100E6  1001               	iorwf	btemp^0,w,c
 16784  0100E8  A4D8               	btfss	status,2,c
 16785  0100EA  D002               	goto	l12298
 16786  0100EC  0E2B               	movlw	43
 16787  0100EE  D001               	goto	L17
 16788  0100F0                     l12298:
 16789  0100F0  0E2D               	movlw	45
 16790  0100F2                     L17:
 16791  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16792  0100F4  0E00               	movlw	0
 16793  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16794                           
 16795                           ;stkvar	_efgtoa$5754 @ sp[(-56)+10]
 16796  0100F8  0ED2               	movlw	-46
 16797  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16798  010100  0ED3               	movlw	-45
 16799  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16800                           
 16801                           ;stkvar	_efgtoa$5754 @ sp[(-56)+10]
 16802  010108  0ED2               	movlw	-46
 16803  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16804                           
 16805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16806                           ;stkvar	_n @ sp[(-56)+32]
 16807  010110  0EE8               	movlw	-24
 16808  010112  50E3               	movf	plusw1,w,c
 16809  010114  0F01               	addlw	1
 16810  010116  6E01               	movwf	btemp^0,c
 16811  010118  0EE8               	movlw	-24
 16812  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16813  010120  6A01               	clrf	btemp^0,c
 16814  010122  0EE9               	movlw	-23
 16815  010124  50E3               	movf	plusw1,w,c
 16816  010126  2001               	addwfc	btemp^0,w,c
 16817  010128  6E01               	movwf	btemp^0,c
 16818  01012A  0EE9               	movlw	-23
 16819  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16820                           
 16821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16822                           ;stkvar	_w @ sp[(-56)+38]
 16823  010132  50E1               	movf	fsr1l,w,c
 16824  010134  0FEE               	addlw	-18
 16825  010136  6ED9               	movwf	fsr2l,c
 16826  010138  50E2               	movf	fsr1h,w,c
 16827  01013A  6EDA               	movwf	fsr2h,c
 16828  01013C  0EFF               	movlw	255
 16829  01013E  22DA               	addwfc	fsr2h,f,c
 16830  010140  06DE               	decf	postinc2,f,c
 16831  010142  0E00               	movlw	0
 16832  010144  5ADD               	subwfb	postdec2,f,c
 16833  010146                     l12306:
 16834                           
 16835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16836                           ;stkvar	_g @ sp[(-56)+16]
 16837  010146  0ED8               	movlw	-40
 16838  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16839  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16841  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16842  010160  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16843  010164  0401               	decf	btemp^0,w,c
 16844  010166  1002               	iorwf	(btemp+1)^0,w,c
 16845  010168  A4D8               	btfss	status,2,c
 16846  01016A  D076               	goto	l12324
 16847  01016C  0EBF               	movlw	191
 16848  01016E  6E0B               	movwf	(btemp+10)^0,c
 16849  010170  0EFF               	movlw	255
 16850  010172  6E0C               	movwf	(btemp+11)^0,c
 16851                           
 16852                           ;stkvar	_c @ sp[(-56)+-7]
 16853  010174  0EC1               	movlw	-63
 16854  010176  50E3               	movf	plusw1,w,c
 16855  010178  6E09               	movwf	(btemp+8)^0,c
 16856  01017A  6A0A               	clrf	(btemp+9)^0,c
 16857  01017C  500B               	movf	(btemp+10)^0,w,c
 16858  01017E  2609               	addwf	(btemp+8)^0,f,c
 16859  010180  500C               	movf	(btemp+11)^0,w,c
 16860  010182  220A               	addwfc	(btemp+9)^0,f,c
 16861  010184  500A               	movf	(btemp+9)^0,w,c
 16862  010186  E106               	bnz	u11260
 16863  010188  0E1A               	movlw	26
 16864  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16865  01018C  B0D8               	btfsc	status,0,c
 16866  01018E  D002               	goto	u11260
 16867  010190  0E01               	movlw	1
 16868  010192  D001               	goto	u11270
 16869  010194                     u11260:
 16870  010194  0E00               	movlw	0
 16871  010196                     u11270:
 16872  010196  6E0B               	movwf	(btemp+10)^0,c
 16873  010198  6A0C               	clrf	(btemp+11)^0,c
 16874                           
 16875                           ;stkvar	_efgtoa$5755 @ sp[(-56)+8]
 16876  01019A  0ED0               	movlw	-48
 16877  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16878  0101A2  0ED1               	movlw	-47
 16879  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16880                           
 16881                           ;stkvar	_efgtoa$5755 @ sp[(-56)+8]
 16882  0101AA  0ED0               	movlw	-48
 16883  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16884  0101B2  0ED1               	movlw	-47
 16885  0101B4  50E3               	movf	plusw1,w,c
 16886  0101B6  1001               	iorwf	btemp^0,w,c
 16887  0101B8  B4D8               	btfsc	status,2,c
 16888  0101BA  D017               	goto	l12316
 16889                           
 16890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16891  0101BC  0ED7               	movlw	low STR_65
 16892  0101BE  6EE6               	movwf	postinc1,c
 16893  0101C0  0EFF               	movlw	high STR_65
 16894  0101C2  6EE6               	movwf	postinc1,c
 16895                           
 16896                           ;stkvar	_n @ sp[(-58)+32]
 16897  0101C4  0E97               	movlw	low _dbuf
 16898  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16899  0101C8  0E02               	movlw	high _dbuf
 16900  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16901  0101CC  0EE6               	movlw	-26
 16902  0101CE  50E3               	movf	plusw1,w,c
 16903  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16904  0101D2  0EE7               	movlw	-25
 16905  0101D4  50E3               	movf	plusw1,w,c
 16906  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16907  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16908  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16909  0101E4  ECF9  F0D1         	call	_strcpy	;wreg free
 16910                           
 16911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16912  0101E8  D016               	goto	l12318
 16913  0101EA                     l12316:
 16914                           
 16915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16916  0101EA  0EDF               	movlw	low STR_66
 16917  0101EC  6EE6               	movwf	postinc1,c
 16918  0101EE  0EFF               	movlw	high STR_66
 16919  0101F0  6EE6               	movwf	postinc1,c
 16920                           
 16921                           ;stkvar	_n @ sp[(-58)+32]
 16922  0101F2  0E97               	movlw	low _dbuf
 16923  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16924  0101F6  0E02               	movlw	high _dbuf
 16925  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16926  0101FA  0EE6               	movlw	-26
 16927  0101FC  50E3               	movf	plusw1,w,c
 16928  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16929  010200  0EE7               	movlw	-25
 16930  010202  50E3               	movf	plusw1,w,c
 16931  010204  220C               	addwfc	(btemp+11)^0,f,c
 16932  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16933  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16934  010212  ECF9  F0D1         	call	_strcpy	;wreg free
 16935  010216                     l12318:
 16936                           
 16937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16938                           ;stkvar	_w @ sp[(-56)+38]
 16939  010216  50E1               	movf	fsr1l,w,c
 16940  010218  0FEE               	addlw	-18
 16941  01021A  6ED9               	movwf	fsr2l,c
 16942  01021C  50E2               	movf	fsr1h,w,c
 16943  01021E  6EDA               	movwf	fsr2h,c
 16944  010220  0EFF               	movlw	255
 16945  010222  22DA               	addwfc	fsr2h,f,c
 16946  010224  0EFD               	movlw	253
 16947  010226  26DE               	addwf	postinc2,f,c
 16948  010228  0EFF               	movlw	255
 16949  01022A  22DD               	addwfc	postdec2,f,c
 16950  01022C                     l12320:
 16951                           
 16952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16953                           ;stkvar	_w @ sp[(-56)+38]
 16954  01022C  0EEE               	movlw	-18
 16955  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16956  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16957  01023A  0E97               	movlw	low _dbuf
 16958  01023C  6EE6               	movwf	postinc1,c
 16959  01023E  0E02               	movlw	high _dbuf
 16960  010240  6EE6               	movwf	postinc1,c
 16961                           
 16962                           ;stkvar	_fp @ sp[(-60)+-2]
 16963  010242  0EC2               	movlw	-62
 16964  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16965  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16966  010250  EC90  F0CE         	call	_pad	;wreg free
 16967  010254  EF1D  F089         	goto	l2280
 16968  010258                     l12324:
 16969                           
 16970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16971                           ;stkvar	_g @ sp[(-56)+16]
 16972  010258  0ED8               	movlw	-40
 16973  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16974  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16975  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16976  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16977  010272  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16978  010276  5001               	movf	btemp^0,w,c
 16979  010278  1002               	iorwf	(btemp+1)^0,w,c
 16980  01027A  A4D8               	btfss	status,2,c
 16981  01027C  D056               	goto	l12342
 16982  01027E  0EBF               	movlw	191
 16983  010280  6E0B               	movwf	(btemp+10)^0,c
 16984  010282  0EFF               	movlw	255
 16985  010284  6E0C               	movwf	(btemp+11)^0,c
 16986                           
 16987                           ;stkvar	_c @ sp[(-56)+-7]
 16988  010286  0EC1               	movlw	-63
 16989  010288  50E3               	movf	plusw1,w,c
 16990  01028A  6E09               	movwf	(btemp+8)^0,c
 16991  01028C  6A0A               	clrf	(btemp+9)^0,c
 16992  01028E  500B               	movf	(btemp+10)^0,w,c
 16993  010290  2609               	addwf	(btemp+8)^0,f,c
 16994  010292  500C               	movf	(btemp+11)^0,w,c
 16995  010294  220A               	addwfc	(btemp+9)^0,f,c
 16996  010296  500A               	movf	(btemp+9)^0,w,c
 16997  010298  E106               	bnz	u11300
 16998  01029A  0E1A               	movlw	26
 16999  01029C  5C09               	subwf	(btemp+8)^0,w,c
 17000  01029E  B0D8               	btfsc	status,0,c
 17001  0102A0  D002               	goto	u11300
 17002  0102A2  0E01               	movlw	1
 17003  0102A4  D001               	goto	u11310
 17004  0102A6                     u11300:
 17005  0102A6  0E00               	movlw	0
 17006  0102A8                     u11310:
 17007  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17008  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17009                           
 17010                           ;stkvar	_efgtoa$5759 @ sp[(-56)+6]
 17011  0102AC  0ECE               	movlw	-50
 17012  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17013  0102B4  0ECF               	movlw	-49
 17014  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17015                           
 17016                           ;stkvar	_efgtoa$5759 @ sp[(-56)+6]
 17017  0102BC  0ECE               	movlw	-50
 17018  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17019  0102C4  0ECF               	movlw	-49
 17020  0102C6  50E3               	movf	plusw1,w,c
 17021  0102C8  1001               	iorwf	btemp^0,w,c
 17022  0102CA  B4D8               	btfsc	status,2,c
 17023  0102CC  D017               	goto	l12334
 17024                           
 17025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17026  0102CE  0EDB               	movlw	low STR_69
 17027  0102D0  6EE6               	movwf	postinc1,c
 17028  0102D2  0EFF               	movlw	high STR_69
 17029  0102D4  6EE6               	movwf	postinc1,c
 17030                           
 17031                           ;stkvar	_n @ sp[(-58)+32]
 17032  0102D6  0E97               	movlw	low _dbuf
 17033  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17034  0102DA  0E02               	movlw	high _dbuf
 17035  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17036  0102DE  0EE6               	movlw	-26
 17037  0102E0  50E3               	movf	plusw1,w,c
 17038  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17039  0102E4  0EE7               	movlw	-25
 17040  0102E6  50E3               	movf	plusw1,w,c
 17041  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17042  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17043  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17044  0102F6  ECF9  F0D1         	call	_strcpy	;wreg free
 17045                           
 17046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17047  0102FA  D78D               	goto	l12318
 17048  0102FC                     l12334:
 17049                           
 17050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17051  0102FC  0EE3               	movlw	low STR_70
 17052  0102FE  6EE6               	movwf	postinc1,c
 17053  010300  0EFF               	movlw	high STR_70
 17054  010302  6EE6               	movwf	postinc1,c
 17055                           
 17056                           ;stkvar	_n @ sp[(-58)+32]
 17057  010304  0E97               	movlw	low _dbuf
 17058  010306  6E0B               	movwf	(btemp+10)^0,c
 17059  010308  0E02               	movlw	high _dbuf
 17060  01030A  6E0C               	movwf	(btemp+11)^0,c
 17061  01030C  0EE6               	movlw	-26
 17062  01030E  50E3               	movf	plusw1,w,c
 17063  010310  260B               	addwf	(btemp+10)^0,f,c
 17064  010312  0EE7               	movlw	-25
 17065  010314  50E3               	movf	plusw1,w,c
 17066  010316  220C               	addwfc	(btemp+11)^0,f,c
 17067  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17068  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17069  010324  ECF9  F0D1         	call	_strcpy	;wreg free
 17070  010328  D776               	goto	l12318
 17071  01032A                     l12342:
 17072                           
 17073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17074  01032A  0E00               	movlw	0
 17075  01032C  6E09               	movwf	(btemp+8)^0,c
 17076  01032E  0E00               	movlw	0
 17077  010330  6E0A               	movwf	(btemp+9)^0,c
 17078  010332  0E80               	movlw	128
 17079  010334  6E0B               	movwf	(btemp+10)^0,c
 17080  010336  0E3F               	movlw	63
 17081  010338  6E0C               	movwf	(btemp+11)^0,c
 17082                           
 17083                           ;stkvar	_u @ sp[(-56)+12]
 17084  01033A  0ED4               	movlw	-44
 17085  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17086  010342  0ED5               	movlw	-43
 17087  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17088  01034A  0ED6               	movlw	-42
 17089  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17090  010352  0ED7               	movlw	-41
 17091  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17092                           
 17093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17094                           ;stkvar	_e @ sp[(-56)+34]
 17095  01035A  0EEA               	movlw	-22
 17096  01035C  6AE3               	clrf	plusw1,c
 17097  01035E  0EEB               	movlw	-21
 17098  010360  6AE3               	clrf	plusw1,c
 17099                           
 17100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17101  010362  0E00               	movlw	0
 17102  010364  6EE6               	movwf	postinc1,c
 17103  010366  0E00               	movlw	0
 17104  010368  6EE6               	movwf	postinc1,c
 17105  01036A  0E00               	movlw	0
 17106  01036C  6EE6               	movwf	postinc1,c
 17107  01036E  0E00               	movlw	0
 17108  010370  6EE6               	movwf	postinc1,c
 17109                           
 17110                           ;stkvar	_g @ sp[(-60)+16]
 17111  010372  0ED4               	movlw	-44
 17112  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17113  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17114  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17115  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17116  01038C  EC33  F0D3         	call	___fleq	;wreg free
 17117  010390  A001               	btfss	btemp& (0+255),0,c
 17118  010392  D039               	goto	l12354
 17119  010394  D0BC               	goto	u11350
 17120  010396                     l12350:
 17121                           
 17122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17123  010396  0E00               	movlw	0
 17124  010398  6EE6               	movwf	postinc1,c
 17125  01039A  0E00               	movlw	0
 17126  01039C  6EE6               	movwf	postinc1,c
 17127  01039E  0E20               	movlw	32
 17128  0103A0  6EE6               	movwf	postinc1,c
 17129  0103A2  0E41               	movlw	65
 17130  0103A4  6EE6               	movwf	postinc1,c
 17131                           
 17132                           ;stkvar	_u @ sp[(-60)+12]
 17133  0103A6  0ED0               	movlw	-48
 17134  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17135  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17136  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17137  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17138  0103C0  ECE5  F09E         	call	___flmul	;wreg free
 17139                           
 17140                           ;stkvar	_u @ sp[(-56)+12]
 17141  0103C4  0ED4               	movlw	-44
 17142  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17143  0103CC  0ED5               	movlw	-43
 17144  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17145  0103D4  0ED6               	movlw	-42
 17146  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17147  0103DC  0ED7               	movlw	-41
 17148  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17149                           
 17150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17151                           ;stkvar	_e @ sp[(-56)+34]
 17152  0103E4  0EEA               	movlw	-22
 17153  0103E6  50E3               	movf	plusw1,w,c
 17154  0103E8  0F01               	addlw	1
 17155  0103EA  6E01               	movwf	btemp^0,c
 17156  0103EC  0EEA               	movlw	-22
 17157  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17158  0103F4  6A01               	clrf	btemp^0,c
 17159  0103F6  0EEB               	movlw	-21
 17160  0103F8  50E3               	movf	plusw1,w,c
 17161  0103FA  2001               	addwfc	btemp^0,w,c
 17162  0103FC  6E01               	movwf	btemp^0,c
 17163  0103FE  0EEB               	movlw	-21
 17164  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17165  010406                     l12354:
 17166                           
 17167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17168  010406  0E00               	movlw	0
 17169  010408  6EE6               	movwf	postinc1,c
 17170  01040A  0E00               	movlw	0
 17171  01040C  6EE6               	movwf	postinc1,c
 17172  01040E  0E20               	movlw	32
 17173  010410  6EE6               	movwf	postinc1,c
 17174  010412  0E41               	movlw	65
 17175  010414  6EE6               	movwf	postinc1,c
 17176                           
 17177                           ;stkvar	_u @ sp[(-60)+12]
 17178  010416  0ED0               	movlw	-48
 17179  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17180  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17181  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17182  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17183  010430  ECE5  F09E         	call	___flmul	;wreg free
 17184  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17185  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17186  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17187  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17188                           
 17189                           ;stkvar	_g @ sp[(-60)+16]
 17190  01044C  0ED4               	movlw	-44
 17191  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17192  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17193  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17194  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17195  010466  EC0A  F0C9         	call	___flge	;wreg free
 17196  01046A  A001               	btfss	btemp& (0+255),0,c
 17197  01046C  D032               	goto	l12360
 17198  01046E  D793               	goto	l12350
 17199  010470                     l12356:
 17200                           
 17201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17202  010470  0E00               	movlw	0
 17203  010472  6EE6               	movwf	postinc1,c
 17204  010474  0E00               	movlw	0
 17205  010476  6EE6               	movwf	postinc1,c
 17206  010478  0E20               	movlw	32
 17207  01047A  6EE6               	movwf	postinc1,c
 17208  01047C  0E41               	movlw	65
 17209  01047E  6EE6               	movwf	postinc1,c
 17210                           
 17211                           ;stkvar	_u @ sp[(-60)+12]
 17212  010480  0ED0               	movlw	-48
 17213  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17214  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17215  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17216  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17217  01049A  ECD8  F0A6         	call	___fldiv	;wreg free
 17218                           
 17219                           ;stkvar	_u @ sp[(-56)+12]
 17220  01049E  0ED4               	movlw	-44
 17221  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17222  0104A6  0ED5               	movlw	-43
 17223  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17224  0104AE  0ED6               	movlw	-42
 17225  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17226  0104B6  0ED7               	movlw	-41
 17227  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17228                           
 17229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17230                           ;stkvar	_e @ sp[(-56)+34]
 17231  0104BE  50E1               	movf	fsr1l,w,c
 17232  0104C0  0FEA               	addlw	-22
 17233  0104C2  6ED9               	movwf	fsr2l,c
 17234  0104C4  50E2               	movf	fsr1h,w,c
 17235  0104C6  6EDA               	movwf	fsr2h,c
 17236  0104C8  0EFF               	movlw	255
 17237  0104CA  22DA               	addwfc	fsr2h,f,c
 17238  0104CC  06DE               	decf	postinc2,f,c
 17239  0104CE  0E00               	movlw	0
 17240  0104D0  5ADD               	subwfb	postdec2,f,c
 17241  0104D2                     l12360:
 17242                           
 17243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17244                           ;stkvar	_u @ sp[(-56)+12]
 17245  0104D2  0ED4               	movlw	-44
 17246  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17247  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17248  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17249  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17250                           
 17251                           ;stkvar	_g @ sp[(-60)+16]
 17252  0104EC  0ED4               	movlw	-44
 17253  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17254  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17255  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17256  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17257  010506  EC0A  F0C9         	call	___flge	;wreg free
 17258  01050A  A001               	btfss	btemp& (0+255),0,c
 17259  01050C  D7B1               	goto	l12356
 17260  01050E                     u11350:
 17261                           
 17262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17263                           ;stkvar	_c @ sp[(-56)+-7]
 17264  01050E  0EC1               	movlw	-63
 17265  010510  50E3               	movf	plusw1,w,c
 17266  010512  6EE6               	movwf	postinc1,c
 17267  010514  0E00               	movlw	0
 17268  010516  6EE6               	movwf	postinc1,c
 17269  010518  EC07  F0D8         	call	_tolower	;wreg free
 17270                           
 17271                           ;stkvar	_mode @ sp[(-56)+54]
 17272  01051C  0EFE               	movlw	-2
 17273  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17274                           
 17275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17276                           ;stkvar	_mode @ sp[(-56)+54]
 17277                           ;stkvar	_nmode @ sp[(-56)+55]
 17278  010524  0EFE               	movlw	-2
 17279  010526  006F FF8C  F001    	movff	plusw1,btemp
 17280  01052C  0EFF               	movlw	-1
 17281  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17282                           
 17283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17284                           ;stkvar	_mode @ sp[(-56)+54]
 17285  010534  0EFE               	movlw	-2
 17286  010536  006F FF8C  F001    	movff	plusw1,btemp
 17287  01053C  0E67               	movlw	103
 17288  01053E  1801               	xorwf	btemp^0,w,c
 17289  010540  A4D8               	btfss	status,2,c
 17290  010542  D025               	goto	l12378
 17291                           
 17292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17293  010544  503C               	movf	_prec^0,w,c
 17294  010546  103D               	iorwf	(_prec+1)^0,w,c
 17295  010548  A4D8               	btfss	status,2,c
 17296  01054A  D004               	goto	l12372
 17297                           
 17298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17299  01054C  0E00               	movlw	0
 17300  01054E  6E3D               	movwf	(_prec+1)^0,c
 17301  010550  0E01               	movlw	1
 17302  010552  6E3C               	movwf	_prec^0,c
 17303  010554                     l12372:
 17304                           
 17305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17306  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17307  010556  D005               	goto	u11380
 17308  010558  503D               	movf	(_prec+1)^0,w,c
 17309  01055A  E110               	bnz	l12376
 17310  01055C  043C               	decf	_prec^0,w,c
 17311  01055E  B0D8               	btfsc	status,0,c
 17312  010560  D00D               	goto	l12376
 17313  010562                     u11380:
 17314  010562  0E06               	movlw	6
 17315  010564  6E0B               	movwf	(btemp+10)^0,c
 17316  010566  0E00               	movlw	0
 17317  010568  6E0C               	movwf	(btemp+11)^0,c
 17318                           
 17319                           ;stkvar	_p @ sp[(-56)+40]
 17320  01056A  0EF0               	movlw	-16
 17321  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17322  010572  0EF1               	movlw	-15
 17323  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17324  01057A  D00C               	goto	l12384
 17325  01057C                     l12376:
 17326                           
 17327                           ;stkvar	_p @ sp[(-56)+40]
 17328  01057C  0EF0               	movlw	-16
 17329  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17330  010584  0EF1               	movlw	-15
 17331  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17332  01058C  D003               	goto	l12384
 17333  01058E                     l12378:
 17334                           
 17335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17336  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17337  010590  D7F5               	goto	l12376
 17338  010592  D7E7               	goto	u11380
 17339  010594                     l12384:
 17340                           
 17341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17342                           ;stkvar	_mode @ sp[(-56)+54]
 17343  010594  0EFE               	movlw	-2
 17344  010596  006F FF8C  F001    	movff	plusw1,btemp
 17345  01059C  0E67               	movlw	103
 17346  01059E  1801               	xorwf	btemp^0,w,c
 17347  0105A0  A4D8               	btfss	status,2,c
 17348  0105A2  D02F               	goto	l12394
 17349                           
 17350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17351                           ;stkvar	_e @ sp[(-56)+34]
 17352  0105A4  0EEB               	movlw	-21
 17353  0105A6  AEE3               	btfss	plusw1,7,c
 17354  0105A8  D00E               	goto	u11410
 17355  0105AA  0EEA               	movlw	-22
 17356  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17357  0105B2  0EFC               	movlw	252
 17358  0105B4  5E01               	subwf	btemp^0,f,c
 17359  0105B6  0EEB               	movlw	-21
 17360  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17361  0105BE  0EFF               	movlw	255
 17362  0105C0  5A01               	subwfb	btemp^0,f,c
 17363  0105C2  A0D8               	btfss	status,0,c
 17364  0105C4  D018               	goto	l12392
 17365  0105C6                     u11410:
 17366                           
 17367                           ;stkvar	_e @ sp[(-56)+34]
 17368                           ;stkvar	_p @ sp[(-56)+40]
 17369  0105C6  0EF0               	movlw	-16
 17370  0105C8  50E3               	movf	plusw1,w,c
 17371  0105CA  0FFF               	addlw	255
 17372  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17373  0105CE  0EF1               	movlw	-15
 17374  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17375  0105D6  0EFF               	movlw	255
 17376  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17377  0105DA  0EEA               	movlw	-22
 17378  0105DC  50E3               	movf	plusw1,w,c
 17379  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17380  0105E0  500C               	movf	(btemp+11)^0,w,c
 17381  0105E2  0A80               	xorlw	128
 17382  0105E4  6E01               	movwf	btemp^0,c
 17383  0105E6  0EEB               	movlw	-21
 17384  0105E8  50E3               	movf	plusw1,w,c
 17385  0105EA  0A80               	xorlw	128
 17386  0105EC  5801               	subwfb	btemp^0,w,c
 17387  0105EE  A0D8               	btfss	status,0,c
 17388  0105F0  D002               	goto	l12392
 17389                           
 17390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17391  0105F2  0E66               	movlw	102
 17392  0105F4  D001               	goto	L18
 17393  0105F6                     l12392:
 17394                           
 17395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17396  0105F6  0E65               	movlw	101
 17397  0105F8                     L18:
 17398  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17399                           
 17400                           ;stkvar	_nmode @ sp[(-56)+55]
 17401  0105FA  0EFF               	movlw	-1
 17402  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17403  010602                     l12394:
 17404                           
 17405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17406                           ;stkvar	_p @ sp[(-56)+40]
 17407                           ;stkvar	_m @ sp[(-56)+48]
 17408  010602  0EF0               	movlw	-16
 17409  010604  006F FF8C  F001    	movff	plusw1,btemp
 17410  01060A  0EF8               	movlw	-8
 17411  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17412  010612  0EF1               	movlw	-15
 17413  010614  006F FF8C  F001    	movff	plusw1,btemp
 17414  01061A  0EF9               	movlw	-7
 17415  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17416                           
 17417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17418                           ;stkvar	_mode @ sp[(-56)+54]
 17419  010622  0EFE               	movlw	-2
 17420  010624  006F FF8C  F001    	movff	plusw1,btemp
 17421  01062A  0E67               	movlw	103
 17422  01062C  1801               	xorwf	btemp^0,w,c
 17423  01062E  A4D8               	btfss	status,2,c
 17424  010630  D00B               	goto	u11450
 17425                           
 17426                           ;stkvar	_nmode @ sp[(-56)+55]
 17427  010632  0EFF               	movlw	-1
 17428  010634  006F FF8C  F001    	movff	plusw1,btemp
 17429  01063A  0E66               	movlw	102
 17430  01063C  1801               	xorwf	btemp^0,w,c
 17431  01063E  A4D8               	btfss	status,2,c
 17432  010640  D014               	goto	l2309
 17433                           
 17434                           ;stkvar	_e @ sp[(-56)+34]
 17435  010642  0EEB               	movlw	-21
 17436  010644  AEE3               	btfss	plusw1,7,c
 17437  010646  D011               	goto	l2309
 17438  010648                     u11450:
 17439                           
 17440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17441                           ;stkvar	_m @ sp[(-56)+48]
 17442  010648  0EF8               	movlw	-8
 17443  01064A  50E3               	movf	plusw1,w,c
 17444  01064C  0F01               	addlw	1
 17445  01064E  6E01               	movwf	btemp^0,c
 17446  010650  0EF8               	movlw	-8
 17447  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17448  010658  6A01               	clrf	btemp^0,c
 17449  01065A  0EF9               	movlw	-7
 17450  01065C  50E3               	movf	plusw1,w,c
 17451  01065E  2001               	addwfc	btemp^0,w,c
 17452  010660  6E01               	movwf	btemp^0,c
 17453  010662  0EF9               	movlw	-7
 17454  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17455  01066A                     l2309:
 17456                           
 17457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17458                           ;stkvar	_nmode @ sp[(-56)+55]
 17459  01066A  0EFF               	movlw	-1
 17460  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17461  010672  0E66               	movlw	102
 17462  010674  1801               	xorwf	btemp^0,w,c
 17463  010676  A4D8               	btfss	status,2,c
 17464  010678  D03B               	goto	l12414
 17465                           
 17466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17467                           ;stkvar	_e @ sp[(-56)+34]
 17468  01067A  0EEB               	movlw	-21
 17469  01067C  AEE3               	btfss	plusw1,7,c
 17470  01067E  D01C               	goto	l12410
 17471                           
 17472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17473  010680  0E00               	movlw	0
 17474  010682  6E09               	movwf	(btemp+8)^0,c
 17475  010684  0E00               	movlw	0
 17476  010686  6E0A               	movwf	(btemp+9)^0,c
 17477  010688  0E80               	movlw	128
 17478  01068A  6E0B               	movwf	(btemp+10)^0,c
 17479  01068C  0E3F               	movlw	63
 17480  01068E  6E0C               	movwf	(btemp+11)^0,c
 17481                           
 17482                           ;stkvar	_u @ sp[(-56)+12]
 17483  010690  0ED4               	movlw	-44
 17484  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17485  010698  0ED5               	movlw	-43
 17486  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17487  0106A0  0ED6               	movlw	-42
 17488  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17489  0106A8  0ED7               	movlw	-41
 17490  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17491                           
 17492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17493                           ;stkvar	_e @ sp[(-56)+34]
 17494  0106B0  0EEA               	movlw	-22
 17495  0106B2  6AE3               	clrf	plusw1,c
 17496  0106B4  0EEB               	movlw	-21
 17497  0106B6  6AE3               	clrf	plusw1,c
 17498  0106B8                     l12410:
 17499                           
 17500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17501                           ;stkvar	_mode @ sp[(-56)+54]
 17502  0106B8  0EFE               	movlw	-2
 17503  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17504  0106C0  0E67               	movlw	103
 17505  0106C2  1801               	xorwf	btemp^0,w,c
 17506  0106C4  B4D8               	btfsc	status,2,c
 17507  0106C6  D014               	goto	l12414
 17508                           
 17509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17510                           ;stkvar	_e @ sp[(-56)+34]
 17511                           ;stkvar	_m @ sp[(-56)+48]
 17512  0106C8  0EF8               	movlw	-8
 17513  0106CA  50E3               	movf	plusw1,w,c
 17514  0106CC  6E01               	movwf	btemp^0,c
 17515  0106CE  0EEA               	movlw	-22
 17516  0106D0  50E3               	movf	plusw1,w,c
 17517  0106D2  2601               	addwf	btemp^0,f,c
 17518  0106D4  0EF8               	movlw	-8
 17519  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17520  0106DC  0EF9               	movlw	-7
 17521  0106DE  50E3               	movf	plusw1,w,c
 17522  0106E0  6E01               	movwf	btemp^0,c
 17523  0106E2  0EEB               	movlw	-21
 17524  0106E4  50E3               	movf	plusw1,w,c
 17525  0106E6  2201               	addwfc	btemp^0,f,c
 17526  0106E8  0EF9               	movlw	-7
 17527  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17528  0106F0                     l12414:
 17529                           
 17530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17531                           ;stkvar	_i @ sp[(-56)+36]
 17532  0106F0  0EEC               	movlw	-20
 17533  0106F2  6AE3               	clrf	plusw1,c
 17534  0106F4  0EED               	movlw	-19
 17535  0106F6  6AE3               	clrf	plusw1,c
 17536                           
 17537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17538                           ;stkvar	_g @ sp[(-56)+16]
 17539  0106F8  0ED8               	movlw	-40
 17540  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17541  010700  0ED9               	movlw	-39
 17542  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17543  010708  0EDA               	movlw	-38
 17544  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17545  010710  0EDB               	movlw	-37
 17546  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17547                           
 17548                           ;stkvar	_h @ sp[(-56)+24]
 17549  010718  0EE0               	movlw	-32
 17550  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17551  010720  0EE1               	movlw	-31
 17552  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17553  010728  0EE2               	movlw	-30
 17554  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17555  010730  0EE3               	movlw	-29
 17556  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17557                           
 17558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17559                           ;stkvar	_u @ sp[(-56)+12]
 17560  010738  0ED4               	movlw	-44
 17561  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17562  010740  0ED5               	movlw	-43
 17563  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17564  010748  0ED6               	movlw	-42
 17565  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17566  010750  0ED7               	movlw	-41
 17567  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17568                           
 17569                           ;stkvar	_ou @ sp[(-56)+28]
 17570  010758  0EE4               	movlw	-28
 17571  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17572  010760  0EE5               	movlw	-27
 17573  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17574  010768  0EE6               	movlw	-26
 17575  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17576  010770  0EE7               	movlw	-25
 17577  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17578                           
 17579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17580  010778  D0D6               	goto	l12430
 17581  01077A                     l12420:
 17582                           
 17583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17584                           ;stkvar	_u @ sp[(-56)+12]
 17585  01077A  0ED4               	movlw	-44
 17586  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17587  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17588  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17589  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17590                           
 17591                           ;stkvar	_h @ sp[(-60)+24]
 17592  010794  0EDC               	movlw	-36
 17593  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17594  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17595  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17596  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17597  0107AE  ECD8  F0A6         	call	___fldiv	;wreg free
 17598  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17599  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17600  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17601  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17602  0107CA  EC62  F0B2         	call	_floorf	;wreg free
 17603                           
 17604                           ;stkvar	_l @ sp[(-56)+20]
 17605  0107CE  0EDC               	movlw	-36
 17606  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17607  0107D6  0EDD               	movlw	-35
 17608  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17609  0107DE  0EDE               	movlw	-34
 17610  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17611  0107E6  0EDF               	movlw	-33
 17612  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17613                           
 17614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17615                           ;stkvar	_l @ sp[(-56)+20]
 17616  0107EE  0EDC               	movlw	-36
 17617  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17618  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17619  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17620  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17621  010808  EC51  F0C8         	call	___fltol	;wreg free
 17622  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17623  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17624                           
 17625                           ;stkvar	_d @ sp[(-56)+44]
 17626  010818  0EF4               	movlw	-12
 17627  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17628  010820  0EF5               	movlw	-11
 17629  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17630                           
 17631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17632                           ;stkvar	_u @ sp[(-56)+12]
 17633  010828  0ED4               	movlw	-44
 17634  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17635  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17636  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17637  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17638                           
 17639                           ;stkvar	_l @ sp[(-60)+20]
 17640  010842  0ED8               	movlw	-40
 17641  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17642  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17643  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17644  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17645  01085C  ECE5  F09E         	call	___flmul	;wreg free
 17646  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17647  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17648  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17649  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17650                           
 17651                           ;stkvar	_h @ sp[(-60)+24]
 17652  010878  0EDC               	movlw	-36
 17653  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17654  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17655  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17656  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17657  010892  ECF0  F0DC         	call	___flsub	;wreg free
 17658                           
 17659                           ;stkvar	_h @ sp[(-56)+24]
 17660  010896  0EE0               	movlw	-32
 17661  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17662  01089E  0EE1               	movlw	-31
 17663  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17664  0108A6  0EE2               	movlw	-30
 17665  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17666  0108AE  0EE3               	movlw	-29
 17667  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17668                           
 17669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17670  0108B6  0E00               	movlw	0
 17671  0108B8  6EE6               	movwf	postinc1,c
 17672  0108BA  0E00               	movlw	0
 17673  0108BC  6EE6               	movwf	postinc1,c
 17674  0108BE  0E20               	movlw	32
 17675  0108C0  6EE6               	movwf	postinc1,c
 17676  0108C2  0E41               	movlw	65
 17677  0108C4  6EE6               	movwf	postinc1,c
 17678                           
 17679                           ;stkvar	_u @ sp[(-60)+12]
 17680  0108C6  0ED0               	movlw	-48
 17681  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17682  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17683  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17684  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17685  0108E0  ECD8  F0A6         	call	___fldiv	;wreg free
 17686                           
 17687                           ;stkvar	_u @ sp[(-56)+12]
 17688  0108E4  0ED4               	movlw	-44
 17689  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17690  0108EC  0ED5               	movlw	-43
 17691  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17692  0108F4  0ED6               	movlw	-42
 17693  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17694  0108FC  0ED7               	movlw	-41
 17695  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17696                           
 17697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17698                           ;stkvar	_i @ sp[(-56)+36]
 17699  010904  0EEC               	movlw	-20
 17700  010906  50E3               	movf	plusw1,w,c
 17701  010908  0F01               	addlw	1
 17702  01090A  6E01               	movwf	btemp^0,c
 17703  01090C  0EEC               	movlw	-20
 17704  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17705  010914  6A01               	clrf	btemp^0,c
 17706  010916  0EED               	movlw	-19
 17707  010918  50E3               	movf	plusw1,w,c
 17708  01091A  2001               	addwfc	btemp^0,w,c
 17709  01091C  6E01               	movwf	btemp^0,c
 17710  01091E  0EED               	movlw	-19
 17711  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17712  010926                     l12430:
 17713                           
 17714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17715                           ;stkvar	_m @ sp[(-56)+48]
 17716                           ;stkvar	_i @ sp[(-56)+36]
 17717  010926  50E1               	movf	fsr1l,w,c
 17718  010928  0FEC               	addlw	-20
 17719  01092A  6ED9               	movwf	fsr2l,c
 17720  01092C  50E2               	movf	fsr1h,w,c
 17721  01092E  6EDA               	movwf	fsr2h,c
 17722  010930  0EFF               	movlw	255
 17723  010932  22DA               	addwfc	fsr2h,f,c
 17724  010934  0EF8               	movlw	-8
 17725  010936  50E3               	movf	plusw1,w,c
 17726  010938  5CDE               	subwf	postinc2,w,c
 17727  01093A  50DE               	movf	postinc2,w,c
 17728  01093C  0A80               	xorlw	128
 17729  01093E  6E01               	movwf	btemp^0,c
 17730  010940  0EF9               	movlw	-7
 17731  010942  50E3               	movf	plusw1,w,c
 17732  010944  0A80               	xorlw	128
 17733  010946  5801               	subwfb	btemp^0,w,c
 17734  010948  A0D8               	btfss	status,0,c
 17735  01094A  D717               	goto	l12420
 17736                           
 17737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17738  01094C  0E00               	movlw	0
 17739  01094E  6EE6               	movwf	postinc1,c
 17740  010950  0E00               	movlw	0
 17741  010952  6EE6               	movwf	postinc1,c
 17742  010954  0EA0               	movlw	160
 17743  010956  6EE6               	movwf	postinc1,c
 17744  010958  0E40               	movlw	64
 17745  01095A  6EE6               	movwf	postinc1,c
 17746                           
 17747                           ;stkvar	_u @ sp[(-60)+12]
 17748  01095C  0ED0               	movlw	-48
 17749  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17750  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17751  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17752  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  010976  ECE5  F09E         	call	___flmul	;wreg free
 17754                           
 17755                           ;stkvar	_l @ sp[(-56)+20]
 17756  01097A  0EDC               	movlw	-36
 17757  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17758  010982  0EDD               	movlw	-35
 17759  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17760  01098A  0EDE               	movlw	-34
 17761  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17762  010992  0EDF               	movlw	-33
 17763  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17764                           
 17765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17766                           ;stkvar	_l @ sp[(-56)+20]
 17767  01099A  0EDC               	movlw	-36
 17768  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17769  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17770  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17771  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17772                           
 17773                           ;stkvar	_h @ sp[(-60)+24]
 17774  0109B4  0EDC               	movlw	-36
 17775  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17776  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17777  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17778  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17779  0109CE  EC0A  F0C9         	call	___flge	;wreg free
 17780  0109D2  A001               	btfss	btemp& (0+255),0,c
 17781  0109D4  D021               	goto	u11520
 17782                           
 17783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17784                           ;stkvar	_l @ sp[(-56)+20]
 17785                           
 17786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17787                           
 17788                           ;stkvar	_l @ sp[(-56)+20]
 17789                           
 17790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17791  0109D6  0EDC               	movlw	-36
 17792  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17793  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17794  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17795  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17796                           
 17797                           ;stkvar	_h @ sp[(-60)+24]
 17798  0109F0  0EDC               	movlw	-36
 17799  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17800  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17801  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17802  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17803  010A0A  EC33  F0D3         	call	___fleq	;wreg free
 17804  010A0E  A001               	btfss	btemp& (0+255),0,c
 17805  010A10  D01B               	goto	l12444
 17806                           
 17807                           ;stkvar	_d @ sp[(-56)+44]
 17808  010A12  0EF4               	movlw	-12
 17809  010A14  B0E3               	btfsc	plusw1,0,c
 17810  010A16  D018               	goto	l12444
 17811  010A18                     u11520:
 17812                           
 17813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17814  010A18  0E00               	movlw	0
 17815  010A1A  6E09               	movwf	(btemp+8)^0,c
 17816  010A1C  0E00               	movlw	0
 17817  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17818  010A20  0E00               	movlw	0
 17819  010A22  6E0B               	movwf	(btemp+10)^0,c
 17820  010A24  0E00               	movlw	0
 17821  010A26  6E0C               	movwf	(btemp+11)^0,c
 17822                           
 17823                           ;stkvar	_l @ sp[(-56)+20]
 17824  010A28  0EDC               	movlw	-36
 17825  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17826  010A30  0EDD               	movlw	-35
 17827  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17828  010A38  0EDE               	movlw	-34
 17829  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17830  010A40  0EDF               	movlw	-33
 17831  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17832  010A48                     l12444:
 17833                           
 17834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17835                           ;stkvar	_l @ sp[(-56)+20]
 17836  010A48  0EDC               	movlw	-36
 17837  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17838  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17839  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17840  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17841                           
 17842                           ;stkvar	_g @ sp[(-60)+16]
 17843  010A62  0ED4               	movlw	-44
 17844  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17845  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17846  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17847  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17848  010A7C  ECFA  F0A2         	call	___fladd	;wreg free
 17849                           
 17850                           ;stkvar	_h @ sp[(-56)+24]
 17851  010A80  0EE0               	movlw	-32
 17852  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17853  010A88  0EE1               	movlw	-31
 17854  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17855  010A90  0EE2               	movlw	-30
 17856  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17857  010A98  0EE3               	movlw	-29
 17858  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17859                           
 17860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17861                           ;stkvar	_ou @ sp[(-56)+28]
 17862  010AA0  0EE4               	movlw	-28
 17863  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17864  010AA8  0EE5               	movlw	-27
 17865  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17866  010AB0  0EE6               	movlw	-26
 17867  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17868  010AB8  0EE7               	movlw	-25
 17869  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17870                           
 17871                           ;stkvar	_u @ sp[(-56)+12]
 17872  010AC0  0ED4               	movlw	-44
 17873  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17874  010AC8  0ED5               	movlw	-43
 17875  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17876  010AD0  0ED6               	movlw	-42
 17877  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17878  010AD8  0ED7               	movlw	-41
 17879  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17880                           
 17881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17882                           ;stkvar	_nmode @ sp[(-56)+55]
 17883  010AE0  0EFF               	movlw	-1
 17884  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17885  010AE8  0E65               	movlw	101
 17886  010AEA  1801               	xorwf	btemp^0,w,c
 17887  010AEC  B4D8               	btfsc	status,2,c
 17888  010AEE  D011               	goto	l12452
 17889                           
 17890                           ;stkvar	_e @ sp[(-56)+34]
 17891                           ;stkvar	_ne @ sp[(-56)+46]
 17892  010AF0  0EEA               	movlw	-22
 17893  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17894  010AF8  0EF6               	movlw	-10
 17895  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17896  010B00  0EEB               	movlw	-21
 17897  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17898  010B08  0EF7               	movlw	-9
 17899  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17900  010B10  D004               	goto	l2324
 17901  010B12                     l12452:
 17902                           
 17903                           ;stkvar	_ne @ sp[(-56)+46]
 17904  010B12  0EF6               	movlw	-10
 17905  010B14  6AE3               	clrf	plusw1,c
 17906  010B16  0EF7               	movlw	-9
 17907  010B18  6AE3               	clrf	plusw1,c
 17908  010B1A                     l2324:
 17909                           
 17910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17911                           ;stkvar	_pp @ sp[(-56)+50]
 17912  010B1A  0EFA               	movlw	-6
 17913  010B1C  6AE3               	clrf	plusw1,c
 17914  010B1E  0EFB               	movlw	-5
 17915  010B20  6AE3               	clrf	plusw1,c
 17916                           
 17917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17918                           ;stkvar	_t @ sp[(-56)+52]
 17919  010B22  0EFC               	movlw	-4
 17920  010B24  6AE3               	clrf	plusw1,c
 17921  010B26  0EFD               	movlw	-3
 17922  010B28  6AE3               	clrf	plusw1,c
 17923                           
 17924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17925                           ;stkvar	_i @ sp[(-56)+36]
 17926  010B2A  0EEC               	movlw	-20
 17927  010B2C  6AE3               	clrf	plusw1,c
 17928  010B2E  0EED               	movlw	-19
 17929  010B30  6AE3               	clrf	plusw1,c
 17930                           
 17931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17932  010B32  D1B7               	goto	l12504
 17933  010B34                     l12454:
 17934                           
 17935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17936                           ;stkvar	_u @ sp[(-56)+12]
 17937  010B34  0ED4               	movlw	-44
 17938  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17939  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17940  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17941  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17942                           
 17943                           ;stkvar	_h @ sp[(-60)+24]
 17944  010B4E  0EDC               	movlw	-36
 17945  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17948  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17949  010B68  ECD8  F0A6         	call	___fldiv	;wreg free
 17950  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17951  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17952  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17953  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17954  010B84  EC62  F0B2         	call	_floorf	;wreg free
 17955                           
 17956                           ;stkvar	_l @ sp[(-56)+20]
 17957  010B88  0EDC               	movlw	-36
 17958  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17959  010B90  0EDD               	movlw	-35
 17960  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17961  010B98  0EDE               	movlw	-34
 17962  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17963  010BA0  0EDF               	movlw	-33
 17964  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17965                           
 17966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17967                           ;stkvar	_l @ sp[(-56)+20]
 17968  010BA8  0EDC               	movlw	-36
 17969  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17970  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17971  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17972  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17973  010BC2  EC51  F0C8         	call	___fltol	;wreg free
 17974  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17975  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17976                           
 17977                           ;stkvar	_d @ sp[(-56)+44]
 17978  010BD2  0EF4               	movlw	-12
 17979  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17980  010BDA  0EF5               	movlw	-11
 17981  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17982                           
 17983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17984  010BE2  B83E               	btfsc	_flags^0,4,c
 17985  010BE4  D026               	goto	l12468
 17986                           
 17987                           ;stkvar	_d @ sp[(-56)+44]
 17988  010BE6  0EF4               	movlw	-12
 17989  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17990  010BEE  0EF5               	movlw	-11
 17991  010BF0  50E3               	movf	plusw1,w,c
 17992  010BF2  1001               	iorwf	btemp^0,w,c
 17993  010BF4  A4D8               	btfss	status,2,c
 17994  010BF6  D01D               	goto	l12468
 17995                           
 17996                           ;stkvar	_mode @ sp[(-56)+54]
 17997  010BF8  0EFE               	movlw	-2
 17998  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17999  010C00  0E67               	movlw	103
 18000  010C02  1801               	xorwf	btemp^0,w,c
 18001  010C04  A4D8               	btfss	status,2,c
 18002  010C06  D015               	goto	l12468
 18003                           
 18004                           ;stkvar	_ne @ sp[(-56)+46]
 18005  010C08  0EF7               	movlw	-9
 18006  010C0A  AEE3               	btfss	plusw1,7,c
 18007  010C0C  D012               	goto	l12468
 18008                           
 18009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18010                           ;stkvar	_t @ sp[(-56)+52]
 18011  010C0E  0EFC               	movlw	-4
 18012  010C10  50E3               	movf	plusw1,w,c
 18013  010C12  0F01               	addlw	1
 18014  010C14  6E01               	movwf	btemp^0,c
 18015  010C16  0EFC               	movlw	-4
 18016  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18017  010C1E  6A01               	clrf	btemp^0,c
 18018  010C20  0EFD               	movlw	-3
 18019  010C22  50E3               	movf	plusw1,w,c
 18020  010C24  2001               	addwfc	btemp^0,w,c
 18021  010C26  6E01               	movwf	btemp^0,c
 18022  010C28  0EFD               	movlw	-3
 18023  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18024                           
 18025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18026  010C30  D0AF               	goto	l12496
 18027  010C32                     l12468:
 18028                           
 18029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18030                           ;stkvar	_pp @ sp[(-56)+50]
 18031  010C32  0EFA               	movlw	-6
 18032  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18033  010C3A  0EFB               	movlw	-5
 18034  010C3C  50E3               	movf	plusw1,w,c
 18035  010C3E  1001               	iorwf	btemp^0,w,c
 18036  010C40  A4D8               	btfss	status,2,c
 18037  010C42  D070               	goto	l12488
 18038                           
 18039                           ;stkvar	_ne @ sp[(-56)+46]
 18040  010C44  0EF7               	movlw	-9
 18041  010C46  AEE3               	btfss	plusw1,7,c
 18042  010C48  D06D               	goto	l12488
 18043                           
 18044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18045                           ;stkvar	_n @ sp[(-56)+32]
 18046  010C4A  0EE8               	movlw	-24
 18047  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18048  010C52  0EE9               	movlw	-23
 18049  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18050  010C5A  0E97               	movlw	low _dbuf
 18051  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18052  010C5E  6ED9               	movwf	fsr2l,c
 18053  010C60  0E02               	movlw	high _dbuf
 18054  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18055  010C64  6EDA               	movwf	fsr2h,c
 18056  010C66  0E2E               	movlw	46
 18057  010C68  6EDF               	movwf	indf2,c
 18058                           
 18059                           ;stkvar	_n @ sp[(-56)+32]
 18060  010C6A  0EE8               	movlw	-24
 18061  010C6C  50E3               	movf	plusw1,w,c
 18062  010C6E  0F01               	addlw	1
 18063  010C70  6E01               	movwf	btemp^0,c
 18064  010C72  0EE8               	movlw	-24
 18065  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18066  010C7A  6A01               	clrf	btemp^0,c
 18067  010C7C  0EE9               	movlw	-23
 18068  010C7E  50E3               	movf	plusw1,w,c
 18069  010C80  2001               	addwfc	btemp^0,w,c
 18070  010C82  6E01               	movwf	btemp^0,c
 18071  010C84  0EE9               	movlw	-23
 18072  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18073                           
 18074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18075                           ;stkvar	_w @ sp[(-56)+38]
 18076  010C8C  50E1               	movf	fsr1l,w,c
 18077  010C8E  0FEE               	addlw	-18
 18078  010C90  6ED9               	movwf	fsr2l,c
 18079  010C92  50E2               	movf	fsr1h,w,c
 18080  010C94  6EDA               	movwf	fsr2h,c
 18081  010C96  0EFF               	movlw	255
 18082  010C98  22DA               	addwfc	fsr2h,f,c
 18083  010C9A  06DE               	decf	postinc2,f,c
 18084  010C9C  0E00               	movlw	0
 18085  010C9E  5ADD               	subwfb	postdec2,f,c
 18086                           
 18087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18088  010CA0  0E01               	movlw	1
 18089  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18090  010CA4  0E00               	movlw	0
 18091  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18092                           
 18093                           ;stkvar	_pp @ sp[(-56)+50]
 18094  010CA8  0EFA               	movlw	-6
 18095  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18096  010CB0  0EFB               	movlw	-5
 18097  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18098  010CB8  D035               	goto	l12488
 18099  010CBA                     l12480:
 18100                           
 18101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18102                           ;stkvar	_n @ sp[(-56)+32]
 18103  010CBA  0EE8               	movlw	-24
 18104  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18105  010CC2  0EE9               	movlw	-23
 18106  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18107  010CCA  0E97               	movlw	low _dbuf
 18108  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18109  010CCE  6ED9               	movwf	fsr2l,c
 18110  010CD0  0E02               	movlw	high _dbuf
 18111  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18112  010CD4  6EDA               	movwf	fsr2h,c
 18113  010CD6  0E30               	movlw	48
 18114  010CD8  6EDF               	movwf	indf2,c
 18115                           
 18116                           ;stkvar	_n @ sp[(-56)+32]
 18117  010CDA  0EE8               	movlw	-24
 18118  010CDC  50E3               	movf	plusw1,w,c
 18119  010CDE  0F01               	addlw	1
 18120  010CE0  6E01               	movwf	btemp^0,c
 18121  010CE2  0EE8               	movlw	-24
 18122  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18123  010CEA  6A01               	clrf	btemp^0,c
 18124  010CEC  0EE9               	movlw	-23
 18125  010CEE  50E3               	movf	plusw1,w,c
 18126  010CF0  2001               	addwfc	btemp^0,w,c
 18127  010CF2  6E01               	movwf	btemp^0,c
 18128  010CF4  0EE9               	movlw	-23
 18129  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18130                           
 18131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18132                           ;stkvar	_w @ sp[(-56)+38]
 18133  010CFC  50E1               	movf	fsr1l,w,c
 18134  010CFE  0FEE               	addlw	-18
 18135  010D00  6ED9               	movwf	fsr2l,c
 18136  010D02  50E2               	movf	fsr1h,w,c
 18137  010D04  6EDA               	movwf	fsr2h,c
 18138  010D06  0EFF               	movlw	255
 18139  010D08  22DA               	addwfc	fsr2h,f,c
 18140  010D0A  06DE               	decf	postinc2,f,c
 18141  010D0C  0E00               	movlw	0
 18142  010D0E  5ADD               	subwfb	postdec2,f,c
 18143                           
 18144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18145                           ;stkvar	_t @ sp[(-56)+52]
 18146  010D10  50E1               	movf	fsr1l,w,c
 18147  010D12  0FFC               	addlw	-4
 18148  010D14  6ED9               	movwf	fsr2l,c
 18149  010D16  50E2               	movf	fsr1h,w,c
 18150  010D18  6EDA               	movwf	fsr2h,c
 18151  010D1A  0EFF               	movlw	255
 18152  010D1C  22DA               	addwfc	fsr2h,f,c
 18153  010D1E  06DE               	decf	postinc2,f,c
 18154  010D20  0E00               	movlw	0
 18155  010D22  5ADD               	subwfb	postdec2,f,c
 18156  010D24                     l12488:
 18157                           
 18158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18159                           ;stkvar	_t @ sp[(-56)+52]
 18160  010D24  0EFC               	movlw	-4
 18161  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18162  010D2C  0EFD               	movlw	-3
 18163  010D2E  50E3               	movf	plusw1,w,c
 18164  010D30  1001               	iorwf	btemp^0,w,c
 18165  010D32  A4D8               	btfss	status,2,c
 18166  010D34  D7C2               	goto	l12480
 18167                           
 18168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18169                           ;stkvar	_n @ sp[(-56)+32]
 18170  010D36  0EE8               	movlw	-24
 18171  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18172  010D3E  0EE9               	movlw	-23
 18173  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18174  010D46  0E97               	movlw	low _dbuf
 18175  010D48  240B               	addwf	(btemp+10)^0,w,c
 18176  010D4A  6ED9               	movwf	fsr2l,c
 18177  010D4C  0E02               	movlw	high _dbuf
 18178  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18179  010D50  6EDA               	movwf	fsr2h,c
 18180                           
 18181                           ;stkvar	_d @ sp[(-56)+44]
 18182  010D52  0EF4               	movlw	-12
 18183  010D54  50E3               	movf	plusw1,w,c
 18184  010D56  0F30               	addlw	48
 18185  010D58  6EDF               	movwf	indf2,c
 18186                           
 18187                           ;stkvar	_n @ sp[(-56)+32]
 18188  010D5A  0EE8               	movlw	-24
 18189  010D5C  50E3               	movf	plusw1,w,c
 18190  010D5E  0F01               	addlw	1
 18191  010D60  6E01               	movwf	btemp^0,c
 18192  010D62  0EE8               	movlw	-24
 18193  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18194  010D6A  6A01               	clrf	btemp^0,c
 18195  010D6C  0EE9               	movlw	-23
 18196  010D6E  50E3               	movf	plusw1,w,c
 18197  010D70  2001               	addwfc	btemp^0,w,c
 18198  010D72  6E01               	movwf	btemp^0,c
 18199  010D74  0EE9               	movlw	-23
 18200  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18201                           
 18202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18203                           ;stkvar	_w @ sp[(-56)+38]
 18204  010D7C  50E1               	movf	fsr1l,w,c
 18205  010D7E  0FEE               	addlw	-18
 18206  010D80  6ED9               	movwf	fsr2l,c
 18207  010D82  50E2               	movf	fsr1h,w,c
 18208  010D84  6EDA               	movwf	fsr2h,c
 18209  010D86  0EFF               	movlw	255
 18210  010D88  22DA               	addwfc	fsr2h,f,c
 18211  010D8A  06DE               	decf	postinc2,f,c
 18212  010D8C  0E00               	movlw	0
 18213  010D8E  5ADD               	subwfb	postdec2,f,c
 18214  010D90                     l12496:
 18215                           
 18216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18217                           ;stkvar	_u @ sp[(-56)+12]
 18218  010D90  0ED4               	movlw	-44
 18219  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18220  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18221  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18222  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18223                           
 18224                           ;stkvar	_l @ sp[(-60)+20]
 18225  010DAA  0ED8               	movlw	-40
 18226  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18227  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18228  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18229  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18230  010DC4  ECE5  F09E         	call	___flmul	;wreg free
 18231  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18232  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18233  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18234  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18235                           
 18236                           ;stkvar	_h @ sp[(-60)+24]
 18237  010DE0  0EDC               	movlw	-36
 18238  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18239  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18240  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18241  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18242  010DFA  ECF0  F0DC         	call	___flsub	;wreg free
 18243                           
 18244                           ;stkvar	_h @ sp[(-56)+24]
 18245  010DFE  0EE0               	movlw	-32
 18246  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18247  010E06  0EE1               	movlw	-31
 18248  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18249  010E0E  0EE2               	movlw	-30
 18250  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18251  010E16  0EE3               	movlw	-29
 18252  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18253                           
 18254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18255  010E1E  0E00               	movlw	0
 18256  010E20  6EE6               	movwf	postinc1,c
 18257  010E22  0E00               	movlw	0
 18258  010E24  6EE6               	movwf	postinc1,c
 18259  010E26  0E20               	movlw	32
 18260  010E28  6EE6               	movwf	postinc1,c
 18261  010E2A  0E41               	movlw	65
 18262  010E2C  6EE6               	movwf	postinc1,c
 18263                           
 18264                           ;stkvar	_u @ sp[(-60)+12]
 18265  010E2E  0ED0               	movlw	-48
 18266  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18267  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18268  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18269  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18270  010E48  ECD8  F0A6         	call	___fldiv	;wreg free
 18271                           
 18272                           ;stkvar	_u @ sp[(-56)+12]
 18273  010E4C  0ED4               	movlw	-44
 18274  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18275  010E54  0ED5               	movlw	-43
 18276  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18277  010E5C  0ED6               	movlw	-42
 18278  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18279  010E64  0ED7               	movlw	-41
 18280  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18281                           
 18282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18283                           ;stkvar	_ne @ sp[(-56)+46]
 18284  010E6C  50E1               	movf	fsr1l,w,c
 18285  010E6E  0FF6               	addlw	-10
 18286  010E70  6ED9               	movwf	fsr2l,c
 18287  010E72  50E2               	movf	fsr1h,w,c
 18288  010E74  6EDA               	movwf	fsr2h,c
 18289  010E76  0EFF               	movlw	255
 18290  010E78  22DA               	addwfc	fsr2h,f,c
 18291  010E7A  06DE               	decf	postinc2,f,c
 18292  010E7C  0E00               	movlw	0
 18293  010E7E  5ADD               	subwfb	postdec2,f,c
 18294                           
 18295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18296                           ;stkvar	_i @ sp[(-56)+36]
 18297  010E80  0EEC               	movlw	-20
 18298  010E82  50E3               	movf	plusw1,w,c
 18299  010E84  0F01               	addlw	1
 18300  010E86  6E01               	movwf	btemp^0,c
 18301  010E88  0EEC               	movlw	-20
 18302  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18303  010E90  6A01               	clrf	btemp^0,c
 18304  010E92  0EED               	movlw	-19
 18305  010E94  50E3               	movf	plusw1,w,c
 18306  010E96  2001               	addwfc	btemp^0,w,c
 18307  010E98  6E01               	movwf	btemp^0,c
 18308  010E9A  0EED               	movlw	-19
 18309  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18310  010EA2                     l12504:
 18311                           
 18312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18313                           ;stkvar	_m @ sp[(-56)+48]
 18314                           ;stkvar	_i @ sp[(-56)+36]
 18315  010EA2  50E1               	movf	fsr1l,w,c
 18316  010EA4  0FEC               	addlw	-20
 18317  010EA6  6ED9               	movwf	fsr2l,c
 18318  010EA8  50E2               	movf	fsr1h,w,c
 18319  010EAA  6EDA               	movwf	fsr2h,c
 18320  010EAC  0EFF               	movlw	255
 18321  010EAE  22DA               	addwfc	fsr2h,f,c
 18322  010EB0  0EF8               	movlw	-8
 18323  010EB2  50E3               	movf	plusw1,w,c
 18324  010EB4  5CDE               	subwf	postinc2,w,c
 18325  010EB6  50DE               	movf	postinc2,w,c
 18326  010EB8  0A80               	xorlw	128
 18327  010EBA  6E01               	movwf	btemp^0,c
 18328  010EBC  0EF9               	movlw	-7
 18329  010EBE  50E3               	movf	plusw1,w,c
 18330  010EC0  0A80               	xorlw	128
 18331  010EC2  5801               	subwfb	btemp^0,w,c
 18332  010EC4  B0D8               	btfsc	status,0,c
 18333  010EC6  D00E               	goto	u11620
 18334                           
 18335                           ;stkvar	_n @ sp[(-56)+32]
 18336  010EC8  0EE9               	movlw	-23
 18337  010ECA  BEE3               	btfsc	plusw1,7,c
 18338  010ECC  D633               	goto	l12454
 18339  010ECE  0EE9               	movlw	-23
 18340  010ED0  50E3               	movf	plusw1,w,c
 18341  010ED2  E108               	bnz	u11620
 18342  010ED4  0EE8               	movlw	-24
 18343  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18344  010EDC  0E4B               	movlw	75
 18345  010EDE  5E01               	subwf	btemp^0,f,c
 18346  010EE0  A0D8               	btfss	status,0,c
 18347  010EE2  D628               	goto	l12454
 18348  010EE4                     u11620:
 18349                           
 18350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18351                           ;stkvar	_pp @ sp[(-56)+50]
 18352  010EE4  0EFA               	movlw	-6
 18353  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18354  010EEC  0EFB               	movlw	-5
 18355  010EEE  50E3               	movf	plusw1,w,c
 18356  010EF0  1001               	iorwf	btemp^0,w,c
 18357  010EF2  B4D8               	btfsc	status,2,c
 18358  010EF4  A83E               	btfss	_flags^0,4,c
 18359  010EF6  D021               	goto	l12516
 18360                           
 18361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18362                           ;stkvar	_n @ sp[(-56)+32]
 18363  010EF8  0EE8               	movlw	-24
 18364  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18365  010F00  0EE9               	movlw	-23
 18366  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18367  010F08  0E97               	movlw	low _dbuf
 18368  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18369  010F0C  6ED9               	movwf	fsr2l,c
 18370  010F0E  0E02               	movlw	high _dbuf
 18371  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18372  010F12  6EDA               	movwf	fsr2h,c
 18373  010F14  0E2E               	movlw	46
 18374  010F16  6EDF               	movwf	indf2,c
 18375                           
 18376                           ;stkvar	_n @ sp[(-56)+32]
 18377  010F18  0EE8               	movlw	-24
 18378  010F1A  50E3               	movf	plusw1,w,c
 18379  010F1C  0F01               	addlw	1
 18380  010F1E  6E01               	movwf	btemp^0,c
 18381  010F20  0EE8               	movlw	-24
 18382  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18383  010F28  6A01               	clrf	btemp^0,c
 18384  010F2A  0EE9               	movlw	-23
 18385  010F2C  50E3               	movf	plusw1,w,c
 18386  010F2E  2001               	addwfc	btemp^0,w,c
 18387  010F30  6E01               	movwf	btemp^0,c
 18388  010F32  0EE9               	movlw	-23
 18389  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18390  010F3A                     l12516:
 18391                           
 18392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18393                           ;stkvar	_n @ sp[(-56)+32]
 18394  010F3A  0EE8               	movlw	-24
 18395  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18396  010F42  0EE9               	movlw	-23
 18397  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18398  010F4A  0E97               	movlw	low _dbuf
 18399  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18400  010F4E  6ED9               	movwf	fsr2l,c
 18401  010F50  0E02               	movlw	high _dbuf
 18402  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18403  010F54  6EDA               	movwf	fsr2h,c
 18404  010F56  0E00               	movlw	0
 18405  010F58  6EDF               	movwf	indf2,c
 18406                           
 18407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18408                           ;stkvar	_nmode @ sp[(-56)+55]
 18409  010F5A  0EFF               	movlw	-1
 18410  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18411  010F62  0E65               	movlw	101
 18412  010F64  1801               	xorwf	btemp^0,w,c
 18413  010F66  A4D8               	btfss	status,2,c
 18414  010F68  EF16  F081         	goto	l12320
 18415                           
 18416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18417  010F6C  0E4F               	movlw	79
 18418  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18419  010F70  0E00               	movlw	0
 18420  010F72  6E0C               	movwf	(btemp+11)^0,c
 18421                           
 18422                           ;stkvar	_i @ sp[(-56)+36]
 18423  010F74  0EEC               	movlw	-20
 18424  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18425  010F7C  0EED               	movlw	-19
 18426  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18427                           
 18428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18429                           ;stkvar	_i @ sp[(-56)+36]
 18430  010F84  0EEC               	movlw	-20
 18431  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18432  010F8C  0EED               	movlw	-19
 18433  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18434  010F94  0E97               	movlw	low _dbuf
 18435  010F96  240B               	addwf	(btemp+10)^0,w,c
 18436  010F98  6ED9               	movwf	fsr2l,c
 18437  010F9A  0E02               	movlw	high _dbuf
 18438  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18439  010F9E  6EDA               	movwf	fsr2h,c
 18440  010FA0  0E00               	movlw	0
 18441  010FA2  6EDF               	movwf	indf2,c
 18442                           
 18443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18444                           ;stkvar	_sign @ sp[(-56)+42]
 18445  010FA4  0EF2               	movlw	-14
 18446  010FA6  6AE3               	clrf	plusw1,c
 18447  010FA8  0EF3               	movlw	-13
 18448  010FAA  6AE3               	clrf	plusw1,c
 18449                           
 18450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18451                           ;stkvar	_e @ sp[(-56)+34]
 18452  010FAC  0EEB               	movlw	-21
 18453  010FAE  AEE3               	btfss	plusw1,7,c
 18454  010FB0  D012               	goto	l12530
 18455                           
 18456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18457  010FB2  0E01               	movlw	1
 18458  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18459  010FB6  0E00               	movlw	0
 18460  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18461                           
 18462                           ;stkvar	_sign @ sp[(-56)+42]
 18463  010FBA  0EF2               	movlw	-14
 18464  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18465  010FC2  0EF3               	movlw	-13
 18466  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18467                           
 18468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18469                           ;stkvar	_e @ sp[(-56)+34]
 18470                           ;stkvar	_e @ sp[(-56)+34]
 18471  010FCA  0EEA               	movlw	-22
 18472  010FCC  6CE3               	negf	plusw1,c
 18473  010FCE  0EEB               	movlw	-21
 18474  010FD0  1EE3               	comf	plusw1,f,c
 18475  010FD2  B0D8               	btfsc	status,0,c
 18476  010FD4  2AE3               	incf	plusw1,f,c
 18477  010FD6                     l12530:
 18478                           
 18479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18480  010FD6  0E02               	movlw	2
 18481  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18482  010FDA  0E00               	movlw	0
 18483  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18484                           
 18485                           ;stkvar	_p @ sp[(-56)+40]
 18486  010FDE  0EF0               	movlw	-16
 18487  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18488  010FE6  0EF1               	movlw	-15
 18489  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18490                           
 18491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18492  010FEE  D051               	goto	l12542
 18493  010FF0                     l12532:
 18494                           
 18495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18496                           ;stkvar	_i @ sp[(-56)+36]
 18497  010FF0  50E1               	movf	fsr1l,w,c
 18498  010FF2  0FEC               	addlw	-20
 18499  010FF4  6ED9               	movwf	fsr2l,c
 18500  010FF6  50E2               	movf	fsr1h,w,c
 18501  010FF8  6EDA               	movwf	fsr2h,c
 18502  010FFA  0EFF               	movlw	255
 18503  010FFC  22DA               	addwfc	fsr2h,f,c
 18504  010FFE  06DE               	decf	postinc2,f,c
 18505  011000  0E00               	movlw	0
 18506  011002  5ADD               	subwfb	postdec2,f,c
 18507                           
 18508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18509                           ;stkvar	_i @ sp[(-56)+36]
 18510  011004  0EEC               	movlw	-20
 18511  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18512  01100C  0EED               	movlw	-19
 18513  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18514  011014  0E97               	movlw	low _dbuf
 18515  011016  240B               	addwf	(btemp+10)^0,w,c
 18516  011018  6ED9               	movwf	fsr2l,c
 18517  01101A  0E02               	movlw	high _dbuf
 18518  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18519  01101E  6EDA               	movwf	fsr2h,c
 18520  011020  0E0A               	movlw	10
 18521  011022  6EE6               	movwf	postinc1,c
 18522  011024  0E00               	movlw	0
 18523  011026  6EE6               	movwf	postinc1,c
 18524                           
 18525                           ;stkvar	_e @ sp[(-58)+34]
 18526  011028  0EE8               	movlw	-24
 18527  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18528  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18529  011036  EC04  F0CE         	call	___awmod	;wreg free
 18530  01103A  5001               	movf	btemp^0,w,c
 18531  01103C  0F30               	addlw	48
 18532  01103E  6EDF               	movwf	indf2,c
 18533                           
 18534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18535  011040  0E0A               	movlw	10
 18536  011042  6EE6               	movwf	postinc1,c
 18537  011044  0E00               	movlw	0
 18538  011046  6EE6               	movwf	postinc1,c
 18539                           
 18540                           ;stkvar	_e @ sp[(-58)+34]
 18541  011048  0EE8               	movlw	-24
 18542  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18543  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18544  011056  EC6D  F0CA         	call	___awdiv	;wreg free
 18545                           
 18546                           ;stkvar	_e @ sp[(-56)+34]
 18547  01105A  0EEA               	movlw	-22
 18548  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18549  011062  0EEB               	movlw	-21
 18550  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18551                           
 18552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18553                           ;stkvar	_p @ sp[(-56)+40]
 18554  01106A  50E1               	movf	fsr1l,w,c
 18555  01106C  0FF0               	addlw	-16
 18556  01106E  6ED9               	movwf	fsr2l,c
 18557  011070  50E2               	movf	fsr1h,w,c
 18558  011072  6EDA               	movwf	fsr2h,c
 18559  011074  0EFF               	movlw	255
 18560  011076  22DA               	addwfc	fsr2h,f,c
 18561  011078  06DE               	decf	postinc2,f,c
 18562  01107A  0E00               	movlw	0
 18563  01107C  5ADD               	subwfb	postdec2,f,c
 18564                           
 18565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18566                           ;stkvar	_w @ sp[(-56)+38]
 18567  01107E  50E1               	movf	fsr1l,w,c
 18568  011080  0FEE               	addlw	-18
 18569  011082  6ED9               	movwf	fsr2l,c
 18570  011084  50E2               	movf	fsr1h,w,c
 18571  011086  6EDA               	movwf	fsr2h,c
 18572  011088  0EFF               	movlw	255
 18573  01108A  22DA               	addwfc	fsr2h,f,c
 18574  01108C  06DE               	decf	postinc2,f,c
 18575  01108E  0E00               	movlw	0
 18576  011090  5ADD               	subwfb	postdec2,f,c
 18577  011092                     l12542:
 18578                           
 18579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18580                           ;stkvar	_e @ sp[(-56)+34]
 18581  011092  0EEA               	movlw	-22
 18582  011094  006F FF8C  F001    	movff	plusw1,btemp
 18583  01109A  0EEB               	movlw	-21
 18584  01109C  50E3               	movf	plusw1,w,c
 18585  01109E  1001               	iorwf	btemp^0,w,c
 18586  0110A0  A4D8               	btfss	status,2,c
 18587  0110A2  D7A6               	goto	l12532
 18588                           
 18589                           ;stkvar	_p @ sp[(-56)+40]
 18590  0110A4  0EF1               	movlw	-15
 18591  0110A6  BEE3               	btfsc	plusw1,7,c
 18592  0110A8  D007               	goto	u11680
 18593  0110AA  0EF1               	movlw	-15
 18594  0110AC  50E3               	movf	plusw1,w,c
 18595  0110AE  E1A0               	bnz	l12532
 18596  0110B0  0EF0               	movlw	-16
 18597  0110B2  04E3               	decf	plusw1,w,c
 18598  0110B4  B0D8               	btfsc	status,0,c
 18599  0110B6  D79C               	goto	l12532
 18600  0110B8                     u11680:
 18601                           
 18602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18603                           ;stkvar	_i @ sp[(-56)+36]
 18604  0110B8  50E1               	movf	fsr1l,w,c
 18605  0110BA  0FEC               	addlw	-20
 18606  0110BC  6ED9               	movwf	fsr2l,c
 18607  0110BE  50E2               	movf	fsr1h,w,c
 18608  0110C0  6EDA               	movwf	fsr2h,c
 18609  0110C2  0EFF               	movlw	255
 18610  0110C4  22DA               	addwfc	fsr2h,f,c
 18611  0110C6  06DE               	decf	postinc2,f,c
 18612  0110C8  0E00               	movlw	0
 18613  0110CA  5ADD               	subwfb	postdec2,f,c
 18614                           
 18615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18616                           ;stkvar	_sign @ sp[(-56)+42]
 18617  0110CC  0EF2               	movlw	-14
 18618  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18619  0110D4  0EF3               	movlw	-13
 18620  0110D6  50E3               	movf	plusw1,w,c
 18621  0110D8  1001               	iorwf	btemp^0,w,c
 18622  0110DA  A4D8               	btfss	status,2,c
 18623  0110DC  D002               	goto	l12552
 18624  0110DE  0E2B               	movlw	43
 18625  0110E0  D001               	goto	L19
 18626  0110E2                     l12552:
 18627  0110E2  0E2D               	movlw	45
 18628  0110E4                     L19:
 18629  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18630  0110E6  0E00               	movlw	0
 18631  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18632                           
 18633                           ;stkvar	_efgtoa$5763 @ sp[(-56)+4]
 18634  0110EA  0ECC               	movlw	-52
 18635  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18636  0110F2  0ECD               	movlw	-51
 18637  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18638                           
 18639                           ;stkvar	_efgtoa$5763 @ sp[(-56)+4]
 18640                           ;stkvar	_i @ sp[(-56)+36]
 18641  0110FA  0EEC               	movlw	-20
 18642  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18643  011102  0EED               	movlw	-19
 18644  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18645  01110A  0E97               	movlw	low _dbuf
 18646  01110C  240B               	addwf	(btemp+10)^0,w,c
 18647  01110E  6ED9               	movwf	fsr2l,c
 18648  011110  0E02               	movlw	high _dbuf
 18649  011112  200C               	addwfc	(btemp+11)^0,w,c
 18650  011114  6EDA               	movwf	fsr2h,c
 18651  011116  0ECC               	movlw	-52
 18652  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18653                           
 18654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18655                           ;stkvar	_w @ sp[(-56)+38]
 18656  01111E  50E1               	movf	fsr1l,w,c
 18657  011120  0FEE               	addlw	-18
 18658  011122  6ED9               	movwf	fsr2l,c
 18659  011124  50E2               	movf	fsr1h,w,c
 18660  011126  6EDA               	movwf	fsr2h,c
 18661  011128  0EFF               	movlw	255
 18662  01112A  22DA               	addwfc	fsr2h,f,c
 18663  01112C  06DE               	decf	postinc2,f,c
 18664  01112E  0E00               	movlw	0
 18665  011130  5ADD               	subwfb	postdec2,f,c
 18666                           
 18667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18668                           ;stkvar	_i @ sp[(-56)+36]
 18669  011132  50E1               	movf	fsr1l,w,c
 18670  011134  0FEC               	addlw	-20
 18671  011136  6ED9               	movwf	fsr2l,c
 18672  011138  50E2               	movf	fsr1h,w,c
 18673  01113A  6EDA               	movwf	fsr2h,c
 18674  01113C  0EFF               	movlw	255
 18675  01113E  22DA               	addwfc	fsr2h,f,c
 18676  011140  06DE               	decf	postinc2,f,c
 18677  011142  0E00               	movlw	0
 18678  011144  5ADD               	subwfb	postdec2,f,c
 18679  011146  0EBF               	movlw	191
 18680  011148  6E0B               	movwf	(btemp+10)^0,c
 18681  01114A  0EFF               	movlw	255
 18682  01114C  6E0C               	movwf	(btemp+11)^0,c
 18683                           
 18684                           ;stkvar	_c @ sp[(-56)+-7]
 18685  01114E  0EC1               	movlw	-63
 18686  011150  50E3               	movf	plusw1,w,c
 18687  011152  6E09               	movwf	(btemp+8)^0,c
 18688  011154  6A0A               	clrf	(btemp+9)^0,c
 18689  011156  500B               	movf	(btemp+10)^0,w,c
 18690  011158  2609               	addwf	(btemp+8)^0,f,c
 18691  01115A  500C               	movf	(btemp+11)^0,w,c
 18692  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18693  01115E  500A               	movf	(btemp+9)^0,w,c
 18694  011160  E106               	bnz	u11700
 18695  011162  0E1A               	movlw	26
 18696  011164  5C09               	subwf	(btemp+8)^0,w,c
 18697  011166  B0D8               	btfsc	status,0,c
 18698  011168  D002               	goto	u11700
 18699  01116A  0E01               	movlw	1
 18700  01116C  D001               	goto	u11710
 18701  01116E                     u11700:
 18702  01116E  0E00               	movlw	0
 18703  011170                     u11710:
 18704  011170  6E0B               	movwf	(btemp+10)^0,c
 18705  011172  6A0C               	clrf	(btemp+11)^0,c
 18706                           
 18707                           ;stkvar	_efgtoa$5765 @ sp[(-56)+0]
 18708  011174  0EC8               	movlw	-56
 18709  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18710  01117C  0EC9               	movlw	-55
 18711  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18712                           
 18713                           ;stkvar	_efgtoa$5765 @ sp[(-56)+0]
 18714  011184  0EC8               	movlw	-56
 18715  011186  006F FF8C  F001    	movff	plusw1,btemp
 18716  01118C  0EC9               	movlw	-55
 18717  01118E  50E3               	movf	plusw1,w,c
 18718  011190  1001               	iorwf	btemp^0,w,c
 18719  011192  A4D8               	btfss	status,2,c
 18720  011194  D002               	goto	l12568
 18721  011196  0E65               	movlw	101
 18722  011198  D001               	goto	L20
 18723  01119A                     l12568:
 18724  01119A  0E45               	movlw	69
 18725  01119C                     L20:
 18726  01119C  6E0B               	movwf	(btemp+10)^0,c
 18727  01119E  0E00               	movlw	0
 18728  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18729                           
 18730                           ;stkvar	_efgtoa$5764 @ sp[(-56)+2]
 18731  0111A2  0ECA               	movlw	-54
 18732  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18733  0111AA  0ECB               	movlw	-53
 18734  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18735                           
 18736                           ;stkvar	_efgtoa$5764 @ sp[(-56)+2]
 18737                           ;stkvar	_i @ sp[(-56)+36]
 18738  0111B2  0EEC               	movlw	-20
 18739  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18740  0111BA  0EED               	movlw	-19
 18741  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18742  0111C2  0E97               	movlw	low _dbuf
 18743  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18744  0111C6  6ED9               	movwf	fsr2l,c
 18745  0111C8  0E02               	movlw	high _dbuf
 18746  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18747  0111CC  6EDA               	movwf	fsr2h,c
 18748  0111CE  0ECA               	movlw	-54
 18749  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18750                           
 18751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18752                           ;stkvar	_w @ sp[(-56)+38]
 18753  0111D6  50E1               	movf	fsr1l,w,c
 18754  0111D8  0FEE               	addlw	-18
 18755  0111DA  6ED9               	movwf	fsr2l,c
 18756  0111DC  50E2               	movf	fsr1h,w,c
 18757  0111DE  6EDA               	movwf	fsr2h,c
 18758  0111E0  0EFF               	movlw	255
 18759  0111E2  22DA               	addwfc	fsr2h,f,c
 18760  0111E4  06DE               	decf	postinc2,f,c
 18761  0111E6  0E00               	movlw	0
 18762  0111E8  5ADD               	subwfb	postdec2,f,c
 18763                           
 18764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18765                           ;stkvar	_i @ sp[(-56)+36]
 18766  0111EA  0EEC               	movlw	-20
 18767  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18768  0111F2  0EED               	movlw	-19
 18769  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18770  0111FA  0E97               	movlw	low _dbuf
 18771  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18772  0111FE  6E09               	movwf	(btemp+8)^0,c
 18773  011200  0E02               	movlw	high _dbuf
 18774  011202  200C               	addwfc	(btemp+11)^0,w,c
 18775  011204  6E0A               	movwf	(btemp+9)^0,c
 18776  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18777  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18778                           
 18779                           ;stkvar	_n @ sp[(-58)+32]
 18780  011212  0E97               	movlw	low _dbuf
 18781  011214  6E0B               	movwf	(btemp+10)^0,c
 18782  011216  0E02               	movlw	high _dbuf
 18783  011218  6E0C               	movwf	(btemp+11)^0,c
 18784  01121A  0EE6               	movlw	-26
 18785  01121C  50E3               	movf	plusw1,w,c
 18786  01121E  260B               	addwf	(btemp+10)^0,f,c
 18787  011220  0EE7               	movlw	-25
 18788  011222  50E3               	movf	plusw1,w,c
 18789  011224  220C               	addwfc	(btemp+11)^0,f,c
 18790  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18791  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18792  011232  ECF9  F0D1         	call	_strcpy	;wreg free
 18793  011236  EF16  F081         	goto	l12320
 18794  01123A                     l2280:
 18795                           
 18796                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18797  01123A  0EC1               	movlw	193
 18798  01123C  26E1               	addwf	fsr1l,f,c
 18799  01123E  0EFF               	movlw	255
 18800  011240  22E2               	addwfc	fsr1h,f,c
 18801  011242  0012               	return		;funcret
 18802  011244                     __end_of_efgtoa:
 18803                           	opt callstack 0
 18804                           
 18805 ;; *************** function _tolower *****************
 18806 ;; Defined at:
 18807 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18808 ;; Parameters:    Size  Location     Type
 18809 ;;  c               2  [STACK] int 
 18810 ;; Auto vars:     Size  Location     Type
 18811 ;;		None
 18812 ;; Return value:  Size  Location     Type
 18813 ;;                  2  [STACK] int 
 18814 ;; Registers used:
 18815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18816 ;; Tracked objects:
 18817 ;;		On entry : 0/0
 18818 ;;		On exit  : 0/0
 18819 ;;		Unchanged: 0/0
 18820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18825 ;;Total ram usage:        0 bytes
 18826 ;; Hardware stack levels used:    1
 18827 ;; Hardware stack levels required when called:   16
 18828 ;; This function calls:
 18829 ;;		_isupper
 18830 ;; This function is called by:
 18831 ;;		_efgtoa
 18832 ;;		_vfpfcnvrt
 18833 ;; This function uses a reentrant model
 18834 ;;
 18835                           
 18836                           	psect	text63
 18837  01B00E                     __ptext63:
 18838                           	opt callstack 0
 18839  01B00E                     _tolower:
 18840                           	opt callstack 0
 18841                           
 18842                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18843  01B00E  52E6               	movf	postinc1,f,c
 18844  01B010  52E6               	movf	postinc1,f,c
 18845                           
 18846                           ;stkvar	_c @ sp[(-2)+-2]
 18847                           
 18848                           ;incstack = 0
 18849 ;; hardware stack exceeded
 18850  01B012  0EFC               	movlw	-4
 18851  01B014  50E3               	movf	plusw1,w,c
 18852  01B016  0FBF               	addlw	191
 18853  01B018  6E0B               	movwf	(btemp+10)^0,c
 18854  01B01A  0EFD               	movlw	-3
 18855  01B01C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18856  01B022  0EFF               	movlw	255
 18857  01B024  220C               	addwfc	(btemp+11)^0,f,c
 18858  01B026  500C               	movf	(btemp+11)^0,w,c
 18859  01B028  E106               	bnz	u6160
 18860  01B02A  0E1A               	movlw	26
 18861  01B02C  5C0B               	subwf	(btemp+10)^0,w,c
 18862  01B02E  B0D8               	btfsc	status,0,c
 18863  01B030  D002               	goto	u6160
 18864  01B032  0E01               	movlw	1
 18865  01B034  D001               	goto	u6170
 18866  01B036                     u6160:
 18867  01B036  0E00               	movlw	0
 18868  01B038                     u6170:
 18869  01B038  6E0B               	movwf	(btemp+10)^0,c
 18870  01B03A  6A0C               	clrf	(btemp+11)^0,c
 18871                           
 18872                           ;stkvar	_tolower$6584 @ sp[(-2)+0]
 18873  01B03C  0EFE               	movlw	-2
 18874  01B03E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18875  01B044  0EFF               	movlw	-1
 18876  01B046  0060  F033  FFE3   	movff	btemp+11,plusw1
 18877                           
 18878                           ;stkvar	_tolower$6584 @ sp[(-2)+0]
 18879  01B04C  0EFE               	movlw	-2
 18880  01B04E  006F FF8C  F001    	movff	plusw1,btemp
 18881  01B054  0EFF               	movlw	-1
 18882  01B056  50E3               	movf	plusw1,w,c
 18883  01B058  1001               	iorwf	btemp^0,w,c
 18884  01B05A  B4D8               	btfsc	status,2,c
 18885  01B05C  D00D               	goto	l8228
 18886                           
 18887                           ;stkvar	_c @ sp[(-2)+-2]
 18888  01B05E  0EFC               	movlw	-4
 18889  01B060  006F FF8C  F001    	movff	plusw1,btemp
 18890  01B066  0EFD               	movlw	-3
 18891  01B068  006F FF8C  F002    	movff	plusw1,btemp+1
 18892  01B06E  0E20               	movlw	32
 18893  01B070  1201               	iorwf	btemp^0,f,c
 18894  01B072  0E00               	movlw	0
 18895  01B074  1202               	iorwf	(btemp+1)^0,f,c
 18896  01B076  D008               	goto	l3552
 18897  01B078                     l8228:
 18898                           
 18899                           ;stkvar	_c @ sp[(-2)+-2]
 18900  01B078  0EFC               	movlw	-4
 18901  01B07A  006F FF8C  F001    	movff	plusw1,btemp
 18902  01B080  0EFD               	movlw	-3
 18903  01B082  006F FF8C  F002    	movff	plusw1,btemp+1
 18904  01B088                     l3552:
 18905                           
 18906                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18907  01B088  52E5               	movf	postdec1,f,c
 18908  01B08A  52E5               	movf	postdec1,f,c
 18909  01B08C  52E5               	movf	postdec1,f,c
 18910  01B08E  52E5               	movf	postdec1,f,c
 18911  01B090  0012               	return		;funcret
 18912  01B092                     __end_of_tolower:
 18913                           	opt callstack 0
 18914                           
 18915 ;; *************** function _isupper *****************
 18916 ;; Defined at:
 18917 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18918 ;; Parameters:    Size  Location     Type
 18919 ;;  c               2  [STACK] int 
 18920 ;; Auto vars:     Size  Location     Type
 18921 ;;		None
 18922 ;; Return value:  Size  Location     Type
 18923 ;;                  2  [STACK] int 
 18924 ;; Registers used:
 18925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18926 ;; Tracked objects:
 18927 ;;		On entry : 0/0
 18928 ;;		On exit  : 0/0
 18929 ;;		Unchanged: 0/0
 18930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18935 ;;Total ram usage:        0 bytes
 18936 ;; Hardware stack levels used:    1
 18937 ;; Hardware stack levels required when called:   15
 18938 ;; This function calls:
 18939 ;;		Nothing
 18940 ;; This function is called by:
 18941 ;;		_efgtoa
 18942 ;;		_xtoa
 18943 ;;		_vfpfcnvrt
 18944 ;;		_tolower
 18945 ;; This function uses a reentrant model
 18946 ;;
 18947                           
 18948                           	psect	text64
 18949  01BE70                     __ptext64:
 18950                           	opt callstack 0
 18951  01BE70                     _isupper:
 18952                           	opt callstack 0
 18953                           
 18954                           ;stkvar	_c @ sp[(0)+-2]
 18955                           
 18956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18957                           ;incstack = 0
 18958 ;; hardware stack exceeded
 18959  01BE70  0EFE               	movlw	-2
 18960  01BE72  50E3               	movf	plusw1,w,c
 18961  01BE74  0FBF               	addlw	191
 18962  01BE76  6E0B               	movwf	(btemp+10)^0,c
 18963  01BE78  0EFF               	movlw	-1
 18964  01BE7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18965  01BE80  0EFF               	movlw	255
 18966  01BE82  220C               	addwfc	(btemp+11)^0,f,c
 18967  01BE84  500C               	movf	(btemp+11)^0,w,c
 18968  01BE86  E106               	bnz	u5510
 18969  01BE88  0E1A               	movlw	26
 18970  01BE8A  5C0B               	subwf	(btemp+10)^0,w,c
 18971  01BE8C  B0D8               	btfsc	status,0,c
 18972  01BE8E  D002               	goto	u5510
 18973  01BE90  0E01               	movlw	1
 18974  01BE92  D001               	goto	u5520
 18975  01BE94                     u5510:
 18976  01BE94  0E00               	movlw	0
 18977  01BE96                     u5520:
 18978  01BE96  6E01               	movwf	btemp^0,c
 18979  01BE98  6A02               	clrf	(btemp+1)^0,c
 18980                           
 18981                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18982  01BE9A  52E5               	movf	postdec1,f,c
 18983  01BE9C  52E5               	movf	postdec1,f,c
 18984  01BE9E  0012               	return		;funcret
 18985  01BEA0                     __end_of_isupper:
 18986                           	opt callstack 0
 18987                           
 18988 ;; *************** function _strcpy *****************
 18989 ;; Defined at:
 18990 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18991 ;; Parameters:    Size  Location     Type
 18992 ;;  dest            2  [STACK] PTR unsigned char 
 18993 ;;		 -> dbuf(80), 
 18994 ;;  src             2  [STACK] PTR const unsigned char 
 18995 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18996 ;;		 -> dbuf(80), 
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;  d               2  [STACK] PTR unsigned char 
 18999 ;;		 -> dbuf(80), 
 19000 ;;  s               2  [STACK] PTR const unsigned char 
 19001 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 19002 ;;		 -> dbuf(80), 
 19003 ;; Return value:  Size  Location     Type
 19004 ;;                  2  [STACK] PTR unsigned char 
 19005 ;; Registers used:
 19006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19007 ;; Tracked objects:
 19008 ;;		On entry : 0/0
 19009 ;;		On exit  : 0/0
 19010 ;;		Unchanged: 0/0
 19011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19016 ;;Total ram usage:        0 bytes
 19017 ;; Hardware stack levels used:    1
 19018 ;; Hardware stack levels required when called:   15
 19019 ;; This function calls:
 19020 ;;		Nothing
 19021 ;; This function is called by:
 19022 ;;		_efgtoa
 19023 ;; This function uses a reentrant model
 19024 ;;
 19025                           
 19026                           	psect	text65
 19027  01A3F2                     __ptext65:
 19028                           	opt callstack 0
 19029  01A3F2                     _strcpy:
 19030                           	opt callstack 0
 19031                           
 19032                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19033  01A3F2  52E6               	movf	postinc1,f,c
 19034  01A3F4  52E6               	movf	postinc1,f,c
 19035  01A3F6  52E6               	movf	postinc1,f,c
 19036  01A3F8  52E6               	movf	postinc1,f,c
 19037                           
 19038                           ;stkvar	_src @ sp[(-4)+-4]
 19039                           
 19040                           ;incstack = 0
 19041 ;; hardware stack exceeded
 19042  01A3FA  0EF8               	movlw	-8
 19043  01A3FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19044  01A402  0EF9               	movlw	-7
 19045  01A404  006F FF8C  F00C    	movff	plusw1,btemp+11
 19046                           
 19047                           ;stkvar	_s @ sp[(-4)+2]
 19048  01A40A  0EFF               	movlw	-1
 19049  01A40C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19050  01A412  0EFE               	movlw	-2
 19051  01A414  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19052                           
 19053                           ;stkvar	_dest @ sp[(-4)+-2]
 19054  01A41A  0EFA               	movlw	-6
 19055  01A41C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19056  01A422  0EFB               	movlw	-5
 19057  01A424  006F FF8C  F00C    	movff	plusw1,btemp+11
 19058                           
 19059                           ;stkvar	_d @ sp[(-4)+0]
 19060  01A42A  0EFD               	movlw	-3
 19061  01A42C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19062  01A432  0EFC               	movlw	-4
 19063  01A434  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19064  01A43A                     l12182:
 19065                           
 19066                           ;stkvar	_s @ sp[(-4)+2]
 19067  01A43A  50E1               	movf	fsr1l,w,c
 19068  01A43C  0FFE               	addlw	-2
 19069  01A43E  6ED9               	movwf	fsr2l,c
 19070  01A440  50E2               	movf	fsr1h,w,c
 19071  01A442  6EDA               	movwf	fsr2h,c
 19072  01A444  0EFF               	movlw	255
 19073  01A446  22DA               	addwfc	fsr2h,f,c
 19074  01A448  006F FF7C  F00B    	movff	indf2,btemp+10
 19075  01A44E  0E01               	movlw	1
 19076  01A450  26DE               	addwf	postinc2,f,c
 19077  01A452  006F FF7C  F00C    	movff	indf2,btemp+11
 19078  01A458  0E00               	movlw	0
 19079  01A45A  22DD               	addwfc	postdec2,f,c
 19080  01A45C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19081  01A462  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19082  01A468  0E00               	movlw	low (__mediumconst shr (0+16))
 19083  01A46A  6EF8               	movwf	tblptru,c
 19084                           
 19085                           ;stkvar	_d @ sp[(-4)+0]
 19086  01A46C  50E1               	movf	fsr1l,w,c
 19087  01A46E  0FFC               	addlw	-4
 19088  01A470  6ED9               	movwf	fsr2l,c
 19089  01A472  50E2               	movf	fsr1h,w,c
 19090  01A474  6EDA               	movwf	fsr2h,c
 19091  01A476  0EFF               	movlw	255
 19092  01A478  22DA               	addwfc	fsr2h,f,c
 19093  01A47A  006F FF7C  F00B    	movff	indf2,btemp+10
 19094  01A480  0E01               	movlw	1
 19095  01A482  26DE               	addwf	postinc2,f,c
 19096  01A484  006F FF7C  F00C    	movff	indf2,btemp+11
 19097  01A48A  0E00               	movlw	0
 19098  01A48C  22DD               	addwfc	postdec2,f,c
 19099  01A48E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19100  01A494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19101  01A49A  0E1F               	movlw	(high __ramtop+-1)
 19102  01A49C  64F7               	cpfsgt	tblptrh,c
 19103  01A49E  D003               	bra	u11007
 19104  01A4A0  0008               	tblrd		*
 19105  01A4A2  50F5               	movf	tablat,w,c
 19106  01A4A4  D007               	bra	u11000
 19107  01A4A6                     u11007:
 19108  01A4A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19109  01A4AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19110  01A4B2  50EF               	movf	indf0,w,c
 19111  01A4B4                     u11000:
 19112  01A4B4  6EDF               	movwf	indf2,c
 19113  01A4B6  50DF               	movf	indf2,w,c
 19114  01A4B8  A4D8               	btfss	status,2,c
 19115  01A4BA  D7BF               	goto	l12182
 19116                           
 19117                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19118  01A4BC  0EF8               	movlw	248
 19119  01A4BE  26E1               	addwf	fsr1l,f,c
 19120  01A4C0  0EFF               	movlw	255
 19121  01A4C2  22E2               	addwfc	fsr1h,f,c
 19122  01A4C4  0012               	return		;funcret
 19123  01A4C6                     __end_of_strcpy:
 19124                           	opt callstack 0
 19125                           
 19126 ;; *************** function _floorf *****************
 19127 ;; Defined at:
 19128 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19129 ;; Parameters:    Size  Location     Type
 19130 ;;  x               4  [STACK] float 
 19131 ;; Auto vars:     Size  Location     Type
 19132 ;;  u               4  [STACK] struct .
 19133 ;;  m               4  [STACK] unsigned long 
 19134 ;;  e               2  [STACK] int 
 19135 ;; Return value:  Size  Location     Type
 19136 ;;                  4  [STACK] float 
 19137 ;; Registers used:
 19138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19139 ;; Tracked objects:
 19140 ;;		On entry : 0/0
 19141 ;;		On exit  : 0/0
 19142 ;;		Unchanged: 0/0
 19143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19148 ;;Total ram usage:        0 bytes
 19149 ;; Hardware stack levels used:    1
 19150 ;; Hardware stack levels required when called:   15
 19151 ;; This function calls:
 19152 ;;		Nothing
 19153 ;; This function is called by:
 19154 ;;		_efgtoa
 19155 ;; This function uses a reentrant model
 19156 ;;
 19157                           
 19158                           	psect	text66
 19159  0164C4                     __ptext66:
 19160                           	opt callstack 0
 19161  0164C4                     _floorf:
 19162                           	opt callstack 0
 19163                           
 19164                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19165  0164C4  0E0A               	movlw	10
 19166  0164C6  26E1               	addwf	fsr1l,f,c
 19167  0164C8  0E00               	movlw	0
 19168  0164CA  22E2               	addwfc	fsr1h,f,c
 19169                           
 19170                           ;incstack = 0
 19171 ;; hardware stack exceeded
 19172  0164CC  0060  F79C  F009   	movff	floorf@F524,btemp+8
 19173  0164D2  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 19174  0164D8  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 19175  0164DE  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 19176                           
 19177                           ;stkvar	_u @ sp[(-10)+0]
 19178  0164E4  0EF6               	movlw	-10
 19179  0164E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 19180  0164EC  0EF7               	movlw	-9
 19181  0164EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19182  0164F4  0EF8               	movlw	-8
 19183  0164F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19184  0164FC  0EF9               	movlw	-7
 19185  0164FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19186                           
 19187                           ;stkvar	_x @ sp[(-10)+-4]
 19188  016504  0EF2               	movlw	-14
 19189  016506  006F FF8C  F009    	movff	plusw1,btemp+8
 19190  01650C  0EF3               	movlw	-13
 19191  01650E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19192  016514  0EF4               	movlw	-12
 19193  016516  006F FF8C  F00B    	movff	plusw1,btemp+10
 19194  01651C  0EF5               	movlw	-11
 19195  01651E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19196                           
 19197                           ;stkvar	_u @ sp[(-10)+0]
 19198  016524  0EF6               	movlw	-10
 19199  016526  0060  F027  FFE3   	movff	btemp+8,plusw1
 19200  01652C  0EF7               	movlw	-9
 19201  01652E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19202  016534  0EF8               	movlw	-8
 19203  016536  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19204  01653C  0EF9               	movlw	-7
 19205  01653E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19206  016544  0E81               	movlw	129
 19207  016546  6E0B               	movwf	(btemp+10)^0,c
 19208  016548  0EFF               	movlw	255
 19209  01654A  6E0C               	movwf	(btemp+11)^0,c
 19210                           
 19211                           ;stkvar	_u @ sp[(-10)+0]
 19212  01654C  0EF6               	movlw	-10
 19213  01654E  006F FF8C  F005    	movff	plusw1,btemp+4
 19214  016554  0EF7               	movlw	-9
 19215  016556  006F FF8C  F006    	movff	plusw1,btemp+5
 19216  01655C  0EF8               	movlw	-8
 19217  01655E  006F FF8C  F007    	movff	plusw1,btemp+6
 19218  016564  0EF9               	movlw	-7
 19219  016566  006F FF8C  F008    	movff	plusw1,btemp+7
 19220  01656C  0E18               	movlw	24
 19221  01656E  D005               	goto	u6190
 19222  016570                     u6195:
 19223  016570  90D8               	bcf	status,0,c
 19224  016572  3208               	rrcf	(btemp+7)^0,f,c
 19225  016574  3207               	rrcf	(btemp+6)^0,f,c
 19226  016576  3206               	rrcf	(btemp+5)^0,f,c
 19227  016578  3205               	rrcf	(btemp+4)^0,f,c
 19228  01657A                     u6190:
 19229  01657A  2EE8               	decfsz	wreg,f,c
 19230  01657C  D7F9               	goto	u6195
 19231  01657E  0060  F014  F009   	movff	btemp+4,btemp+8
 19232  016584  0060  F018  F00A   	movff	btemp+5,btemp+9
 19233  01658A  0EFF               	movlw	255
 19234  01658C  1609               	andwf	(btemp+8)^0,f,c
 19235  01658E  0E00               	movlw	0
 19236  016590  160A               	andwf	(btemp+9)^0,f,c
 19237  016592  500B               	movf	(btemp+10)^0,w,c
 19238  016594  2609               	addwf	(btemp+8)^0,f,c
 19239  016596  500C               	movf	(btemp+11)^0,w,c
 19240  016598  220A               	addwfc	(btemp+9)^0,f,c
 19241                           
 19242                           ;stkvar	_e @ sp[(-10)+8]
 19243  01659A  0EFE               	movlw	-2
 19244  01659C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19245  0165A2  0EFF               	movlw	-1
 19246  0165A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19247                           
 19248                           ;stkvar	_e @ sp[(-10)+8]
 19249  0165AA  0EFF               	movlw	-1
 19250  0165AC  BEE3               	btfsc	plusw1,7,c
 19251  0165AE  D019               	goto	l8242
 19252  0165B0  0EFF               	movlw	-1
 19253  0165B2  50E3               	movf	plusw1,w,c
 19254  0165B4  E108               	bnz	u6200
 19255  0165B6  0EFE               	movlw	-2
 19256  0165B8  006F FF8C  F001    	movff	plusw1,btemp
 19257  0165BE  0E17               	movlw	23
 19258  0165C0  5E01               	subwf	btemp^0,f,c
 19259  0165C2  A0D8               	btfss	status,0,c
 19260  0165C4  D00E               	goto	l8242
 19261  0165C6                     u6200:
 19262                           
 19263                           ;stkvar	_x @ sp[(-10)+-4]
 19264  0165C6  0EF2               	movlw	-14
 19265  0165C8  006F FF8C  F001    	movff	plusw1,btemp
 19266  0165CE  0EF3               	movlw	-13
 19267  0165D0  006F FF8C  F002    	movff	plusw1,btemp+1
 19268  0165D6  0EF4               	movlw	-12
 19269  0165D8  006F FF8C  F003    	movff	plusw1,btemp+2
 19270  0165DE  0EF5               	movlw	-11
 19271  0165E0  D11F               	goto	L21
 19272  0165E2                     l8242:
 19273                           
 19274                           ;stkvar	_e @ sp[(-10)+8]
 19275  0165E2  0EFF               	movlw	-1
 19276  0165E4  BEE3               	btfsc	plusw1,7,c
 19277  0165E6  D0B4               	goto	l8258
 19278                           
 19279                           ;stkvar	_e @ sp[(-10)+8]
 19280  0165E8  0EFE               	movlw	-2
 19281  0165EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19282  0165F0  0EFF               	movlw	255
 19283  0165F2  6E05               	movwf	(btemp+4)^0,c
 19284  0165F4  0EFF               	movlw	255
 19285  0165F6  6E06               	movwf	(btemp+5)^0,c
 19286  0165F8  0E7F               	movlw	127
 19287  0165FA  6E07               	movwf	(btemp+6)^0,c
 19288  0165FC  0E00               	movlw	0
 19289  0165FE  6E08               	movwf	(btemp+7)^0,c
 19290  016600                     u6225:
 19291  016600  660C               	tstfsz	(btemp+11)^0,c
 19292  016602  D001               	goto	u6226
 19293  016604  D007               	goto	u6227
 19294  016606                     u6226:
 19295  016606  3408               	rlcf	(btemp+7)^0,w,c
 19296  016608  3208               	rrcf	(btemp+7)^0,f,c
 19297  01660A  3207               	rrcf	(btemp+6)^0,f,c
 19298  01660C  3206               	rrcf	(btemp+5)^0,f,c
 19299  01660E  3205               	rrcf	(btemp+4)^0,f,c
 19300  016610  2E0C               	decfsz	(btemp+11)^0,f,c
 19301  016612  D7F6               	goto	u6225
 19302  016614                     u6227:
 19303                           
 19304                           ;stkvar	_m @ sp[(-10)+4]
 19305  016614  0EFA               	movlw	-6
 19306  016616  0060  F017  FFE3   	movff	btemp+4,plusw1
 19307  01661C  0EFB               	movlw	-5
 19308  01661E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19309  016624  0EFC               	movlw	-4
 19310  016626  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19311  01662C  0EFD               	movlw	-3
 19312  01662E  0060  F023  FFE3   	movff	btemp+7,plusw1
 19313                           
 19314                           ;stkvar	_m @ sp[(-10)+4]
 19315                           ;stkvar	_u @ sp[(-10)+0]
 19316  016634  0EF6               	movlw	-10
 19317  016636  006F FF8C  F009    	movff	plusw1,btemp+8
 19318  01663C  0EF7               	movlw	-9
 19319  01663E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19320  016644  0EF8               	movlw	-8
 19321  016646  006F FF8C  F00B    	movff	plusw1,btemp+10
 19322  01664C  0EF9               	movlw	-7
 19323  01664E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19324  016654  0EFA               	movlw	-6
 19325  016656  50E3               	movf	plusw1,w,c
 19326  016658  1609               	andwf	(btemp+8)^0,f,c
 19327  01665A  0EFB               	movlw	-5
 19328  01665C  50E3               	movf	plusw1,w,c
 19329  01665E  160A               	andwf	(btemp+9)^0,f,c
 19330  016660  0EFC               	movlw	-4
 19331  016662  50E3               	movf	plusw1,w,c
 19332  016664  160B               	andwf	(btemp+10)^0,f,c
 19333  016666  0EFD               	movlw	-3
 19334  016668  50E3               	movf	plusw1,w,c
 19335  01666A  160C               	andwf	(btemp+11)^0,f,c
 19336  01666C  5009               	movf	(btemp+8)^0,w,c
 19337  01666E  100A               	iorwf	(btemp+9)^0,w,c
 19338  016670  100B               	iorwf	(btemp+10)^0,w,c
 19339  016672  100C               	iorwf	(btemp+11)^0,w,c
 19340  016674  B4D8               	btfsc	status,2,c
 19341  016676  D7A7               	goto	u6200
 19342                           
 19343                           ;stkvar	_u @ sp[(-10)+0]
 19344  016678  0EF6               	movlw	-10
 19345  01667A  006F FF8C  F009    	movff	plusw1,btemp+8
 19346  016680  0EF7               	movlw	-9
 19347  016682  006F FF8C  F00A    	movff	plusw1,btemp+9
 19348  016688  0EF8               	movlw	-8
 19349  01668A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19350  016690  0EF9               	movlw	-7
 19351  016692  006F FF8C  F00C    	movff	plusw1,btemp+11
 19352  016698  0E20               	movlw	32
 19353  01669A  D005               	goto	u6240
 19354  01669C                     u6245:
 19355  01669C  90D8               	bcf	status,0,c
 19356  01669E  320C               	rrcf	(btemp+11)^0,f,c
 19357  0166A0  320B               	rrcf	(btemp+10)^0,f,c
 19358  0166A2  320A               	rrcf	(btemp+9)^0,f,c
 19359  0166A4  3209               	rrcf	(btemp+8)^0,f,c
 19360  0166A6                     u6240:
 19361  0166A6  2EE8               	decfsz	wreg,f,c
 19362  0166A8  D7F9               	goto	u6245
 19363  0166AA  5009               	movf	(btemp+8)^0,w,c
 19364  0166AC  B4D8               	btfsc	status,2,c
 19365  0166AE  D028               	goto	l8256
 19366                           
 19367                           ;stkvar	_m @ sp[(-10)+4]
 19368                           ;stkvar	_u @ sp[(-10)+0]
 19369  0166B0  0EF6               	movlw	-10
 19370  0166B2  50E3               	movf	plusw1,w,c
 19371  0166B4  6E01               	movwf	btemp^0,c
 19372  0166B6  0EFA               	movlw	-6
 19373  0166B8  50E3               	movf	plusw1,w,c
 19374  0166BA  2601               	addwf	btemp^0,f,c
 19375  0166BC  0EF6               	movlw	-10
 19376  0166BE  0060  F007  FFE3   	movff	btemp,plusw1
 19377  0166C4  0EF7               	movlw	-9
 19378  0166C6  50E3               	movf	plusw1,w,c
 19379  0166C8  6E01               	movwf	btemp^0,c
 19380  0166CA  0EFB               	movlw	-5
 19381  0166CC  50E3               	movf	plusw1,w,c
 19382  0166CE  2201               	addwfc	btemp^0,f,c
 19383  0166D0  0EF7               	movlw	-9
 19384  0166D2  0060  F007  FFE3   	movff	btemp,plusw1
 19385  0166D8  0EF8               	movlw	-8
 19386  0166DA  50E3               	movf	plusw1,w,c
 19387  0166DC  6E01               	movwf	btemp^0,c
 19388  0166DE  0EFC               	movlw	-4
 19389  0166E0  50E3               	movf	plusw1,w,c
 19390  0166E2  2201               	addwfc	btemp^0,f,c
 19391  0166E4  0EF8               	movlw	-8
 19392  0166E6  0060  F007  FFE3   	movff	btemp,plusw1
 19393  0166EC  0EF9               	movlw	-7
 19394  0166EE  50E3               	movf	plusw1,w,c
 19395  0166F0  6E01               	movwf	btemp^0,c
 19396  0166F2  0EFD               	movlw	-3
 19397  0166F4  50E3               	movf	plusw1,w,c
 19398  0166F6  2201               	addwfc	btemp^0,f,c
 19399  0166F8  0EF9               	movlw	-7
 19400  0166FA  0060  F007  FFE3   	movff	btemp,plusw1
 19401  016700                     l8256:
 19402                           
 19403                           ;stkvar	_m @ sp[(-10)+4]
 19404  016700  0EFA               	movlw	-6
 19405  016702  006F FF8C  F009    	movff	plusw1,btemp+8
 19406  016708  0EFB               	movlw	-5
 19407  01670A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19408  016710  0EFC               	movlw	-4
 19409  016712  006F FF8C  F00B    	movff	plusw1,btemp+10
 19410  016718  0EFD               	movlw	-3
 19411  01671A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19412  016720  1C09               	comf	(btemp+8)^0,w,c
 19413  016722  6E05               	movwf	(btemp+4)^0,c
 19414  016724  1C0A               	comf	(btemp+9)^0,w,c
 19415  016726  6E06               	movwf	(btemp+5)^0,c
 19416  016728  1C0B               	comf	(btemp+10)^0,w,c
 19417  01672A  6E07               	movwf	(btemp+6)^0,c
 19418  01672C  1C0C               	comf	(btemp+11)^0,w,c
 19419  01672E  6E08               	movwf	(btemp+7)^0,c
 19420                           
 19421                           ;stkvar	_u @ sp[(-10)+0]
 19422  016730  50E1               	movf	fsr1l,w,c
 19423  016732  0FF6               	addlw	-10
 19424  016734  6ED9               	movwf	fsr2l,c
 19425  016736  50E2               	movf	fsr1h,w,c
 19426  016738  6EDA               	movwf	fsr2h,c
 19427  01673A  0EFF               	movlw	255
 19428  01673C  22DA               	addwfc	fsr2h,f,c
 19429  01673E  5005               	movf	(btemp+4)^0,w,c
 19430  016740  16DE               	andwf	postinc2,f,c
 19431  016742  5006               	movf	(btemp+5)^0,w,c
 19432  016744  16DE               	andwf	postinc2,f,c
 19433  016746  5007               	movf	(btemp+6)^0,w,c
 19434  016748  16DE               	andwf	postinc2,f,c
 19435  01674A  5008               	movf	(btemp+7)^0,w,c
 19436  01674C  16DE               	andwf	postinc2,f,c
 19437  01674E  D05B               	goto	l8266
 19438  016750                     l8258:
 19439                           
 19440                           ;stkvar	_u @ sp[(-10)+0]
 19441  016750  0EF6               	movlw	-10
 19442  016752  006F FF8C  F009    	movff	plusw1,btemp+8
 19443  016758  0EF7               	movlw	-9
 19444  01675A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19445  016760  0EF8               	movlw	-8
 19446  016762  006F FF8C  F00B    	movff	plusw1,btemp+10
 19447  016768  0EF9               	movlw	-7
 19448  01676A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19449  016770  0E20               	movlw	32
 19450  016772  D005               	goto	u6260
 19451  016774                     u6265:
 19452  016774  90D8               	bcf	status,0,c
 19453  016776  320C               	rrcf	(btemp+11)^0,f,c
 19454  016778  320B               	rrcf	(btemp+10)^0,f,c
 19455  01677A  320A               	rrcf	(btemp+9)^0,f,c
 19456  01677C  3209               	rrcf	(btemp+8)^0,f,c
 19457  01677E                     u6260:
 19458  01677E  2EE8               	decfsz	wreg,f,c
 19459  016780  D7F9               	goto	u6265
 19460  016782  6609               	tstfsz	(btemp+8)^0,c
 19461  016784  D009               	goto	l8262
 19462                           
 19463                           ;stkvar	_u @ sp[(-10)+0]
 19464  016786  0EF6               	movlw	-10
 19465  016788  6AE3               	clrf	plusw1,c
 19466  01678A  0EF7               	movlw	-9
 19467  01678C  6AE3               	clrf	plusw1,c
 19468  01678E  0EF8               	movlw	-8
 19469  016790  6AE3               	clrf	plusw1,c
 19470  016792  0EF9               	movlw	-7
 19471  016794  6AE3               	clrf	plusw1,c
 19472  016796  D037               	goto	l8266
 19473  016798                     l8262:
 19474                           
 19475                           ;stkvar	_u @ sp[(-10)+0]
 19476  016798  0EF6               	movlw	-10
 19477  01679A  006F FF8C  F009    	movff	plusw1,btemp+8
 19478  0167A0  0EF7               	movlw	-9
 19479  0167A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19480  0167A8  0EF8               	movlw	-8
 19481  0167AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19482  0167B0  0EF9               	movlw	-7
 19483  0167B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19484  0167B8  90D8               	bcf	status,0,c
 19485  0167BA  3409               	rlcf	(btemp+8)^0,w,c
 19486  0167BC  6E05               	movwf	(btemp+4)^0,c
 19487  0167BE  340A               	rlcf	(btemp+9)^0,w,c
 19488  0167C0  6E06               	movwf	(btemp+5)^0,c
 19489  0167C2  340B               	rlcf	(btemp+10)^0,w,c
 19490  0167C4  6E07               	movwf	(btemp+6)^0,c
 19491  0167C6  340C               	rlcf	(btemp+11)^0,w,c
 19492  0167C8  6E08               	movwf	(btemp+7)^0,c
 19493  0167CA  5005               	movf	(btemp+4)^0,w,c
 19494  0167CC  1006               	iorwf	(btemp+5)^0,w,c
 19495  0167CE  1007               	iorwf	(btemp+6)^0,w,c
 19496  0167D0  1008               	iorwf	(btemp+7)^0,w,c
 19497  0167D2  B4D8               	btfsc	status,2,c
 19498  0167D4  D018               	goto	l8266
 19499  0167D6  0E00               	movlw	0
 19500  0167D8  6E09               	movwf	(btemp+8)^0,c
 19501  0167DA  0E00               	movlw	0
 19502  0167DC  6E0A               	movwf	(btemp+9)^0,c
 19503  0167DE  0E80               	movlw	128
 19504  0167E0  6E0B               	movwf	(btemp+10)^0,c
 19505  0167E2  0EBF               	movlw	191
 19506  0167E4  6E0C               	movwf	(btemp+11)^0,c
 19507                           
 19508                           ;stkvar	_u @ sp[(-10)+0]
 19509  0167E6  0EF6               	movlw	-10
 19510  0167E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19511  0167EE  0EF7               	movlw	-9
 19512  0167F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19513  0167F6  0EF8               	movlw	-8
 19514  0167F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19515  0167FE  0EF9               	movlw	-7
 19516  016800  0060  F033  FFE3   	movff	btemp+11,plusw1
 19517  016806                     l8266:
 19518                           
 19519                           ;stkvar	_u @ sp[(-10)+0]
 19520  016806  0EF6               	movlw	-10
 19521  016808  006F FF8C  F001    	movff	plusw1,btemp
 19522  01680E  0EF7               	movlw	-9
 19523  016810  006F FF8C  F002    	movff	plusw1,btemp+1
 19524  016816  0EF8               	movlw	-8
 19525  016818  006F FF8C  F003    	movff	plusw1,btemp+2
 19526  01681E  0EF9               	movlw	-7
 19527  016820                     L21:
 19528  016820  006F FF8C  F004    	movff	plusw1,btemp+3
 19529                           
 19530                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19531  016826  0EF2               	movlw	242
 19532  016828  26E1               	addwf	fsr1l,f,c
 19533  01682A  0EFF               	movlw	255
 19534  01682C  22E2               	addwfc	fsr1h,f,c
 19535  01682E  0012               	return		;funcret
 19536  016830                     __end_of_floorf:
 19537                           	opt callstack 0
 19538                           
 19539 ;; *************** function ___fpclassifyf *****************
 19540 ;; Defined at:
 19541 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19542 ;; Parameters:    Size  Location     Type
 19543 ;;  x               4  [STACK] float 
 19544 ;; Auto vars:     Size  Location     Type
 19545 ;;  u               4  [STACK] struct .
 19546 ;;  e               2  [STACK] int 
 19547 ;; Return value:  Size  Location     Type
 19548 ;;                  2  [STACK] int 
 19549 ;; Registers used:
 19550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19551 ;; Tracked objects:
 19552 ;;		On entry : 0/0
 19553 ;;		On exit  : 0/0
 19554 ;;		Unchanged: 0/0
 19555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19560 ;;Total ram usage:        0 bytes
 19561 ;; Hardware stack levels used:    1
 19562 ;; Hardware stack levels required when called:   15
 19563 ;; This function calls:
 19564 ;;		Nothing
 19565 ;; This function is called by:
 19566 ;;		_efgtoa
 19567 ;; This function uses a reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text67
 19571  018C06                     __ptext67:
 19572                           	opt callstack 0
 19573  018C06                     ___fpclassifyf:
 19574                           	opt callstack 0
 19575                           
 19576                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19577  018C06  0E06               	movlw	6
 19578  018C08  26E1               	addwf	fsr1l,f,c
 19579  018C0A  0E00               	movlw	0
 19580  018C0C  22E2               	addwfc	fsr1h,f,c
 19581                           
 19582                           ;incstack = 0
 19583 ;; hardware stack exceeded
 19584  018C0E  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19585  018C14  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19586  018C1A  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19587  018C20  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19588                           
 19589                           ;stkvar	_u @ sp[(-6)+0]
 19590  018C26  0EFA               	movlw	-6
 19591  018C28  0060  F027  FFE3   	movff	btemp+8,plusw1
 19592  018C2E  0EFB               	movlw	-5
 19593  018C30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19594  018C36  0EFC               	movlw	-4
 19595  018C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19596  018C3E  0EFD               	movlw	-3
 19597  018C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 19598                           
 19599                           ;stkvar	_x @ sp[(-6)+-4]
 19600  018C46  0EF6               	movlw	-10
 19601  018C48  006F FF8C  F009    	movff	plusw1,btemp+8
 19602  018C4E  0EF7               	movlw	-9
 19603  018C50  006F FF8C  F00A    	movff	plusw1,btemp+9
 19604  018C56  0EF8               	movlw	-8
 19605  018C58  006F FF8C  F00B    	movff	plusw1,btemp+10
 19606  018C5E  0EF9               	movlw	-7
 19607  018C60  006F FF8C  F00C    	movff	plusw1,btemp+11
 19608                           
 19609                           ;stkvar	_u @ sp[(-6)+0]
 19610  018C66  0EFA               	movlw	-6
 19611  018C68  0060  F027  FFE3   	movff	btemp+8,plusw1
 19612  018C6E  0EFB               	movlw	-5
 19613  018C70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19614  018C76  0EFC               	movlw	-4
 19615  018C78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19616  018C7E  0EFD               	movlw	-3
 19617  018C80  0060  F033  FFE3   	movff	btemp+11,plusw1
 19618                           
 19619                           ;stkvar	_u @ sp[(-6)+0]
 19620  018C86  0EFA               	movlw	-6
 19621  018C88  006F FF8C  F009    	movff	plusw1,btemp+8
 19622  018C8E  0EFB               	movlw	-5
 19623  018C90  006F FF8C  F00A    	movff	plusw1,btemp+9
 19624  018C96  0EFC               	movlw	-4
 19625  018C98  006F FF8C  F00B    	movff	plusw1,btemp+10
 19626  018C9E  0EFD               	movlw	-3
 19627  018CA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19628  018CA6  0E18               	movlw	24
 19629  018CA8  D005               	goto	u6070
 19630  018CAA                     u6075:
 19631  018CAA  90D8               	bcf	status,0,c
 19632  018CAC  320C               	rrcf	(btemp+11)^0,f,c
 19633  018CAE  320B               	rrcf	(btemp+10)^0,f,c
 19634  018CB0  320A               	rrcf	(btemp+9)^0,f,c
 19635  018CB2  3209               	rrcf	(btemp+8)^0,f,c
 19636  018CB4                     u6070:
 19637  018CB4  2EE8               	decfsz	wreg,f,c
 19638  018CB6  D7F9               	goto	u6075
 19639  018CB8  0060  F024  F007   	movff	btemp+8,btemp+6
 19640  018CBE  0060  F028  F008   	movff	btemp+9,btemp+7
 19641  018CC4  0EFF               	movlw	255
 19642  018CC6  1607               	andwf	(btemp+6)^0,f,c
 19643  018CC8  0E00               	movlw	0
 19644  018CCA  1608               	andwf	(btemp+7)^0,f,c
 19645                           
 19646                           ;stkvar	_e @ sp[(-6)+4]
 19647  018CCC  0EFE               	movlw	-2
 19648  018CCE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19649  018CD4  0EFF               	movlw	-1
 19650  018CD6  0060  F023  FFE3   	movff	btemp+7,plusw1
 19651                           
 19652                           ;stkvar	_e @ sp[(-6)+4]
 19653  018CDC  0EFE               	movlw	-2
 19654  018CDE  006F FF8C  F001    	movff	plusw1,btemp
 19655  018CE4  0EFF               	movlw	-1
 19656  018CE6  50E3               	movf	plusw1,w,c
 19657  018CE8  1001               	iorwf	btemp^0,w,c
 19658  018CEA  A4D8               	btfss	status,2,c
 19659  018CEC  D023               	goto	l8204
 19660                           
 19661                           ;stkvar	_u @ sp[(-6)+0]
 19662  018CEE  0EFA               	movlw	-6
 19663  018CF0  006F FF8C  F009    	movff	plusw1,btemp+8
 19664  018CF6  0EFB               	movlw	-5
 19665  018CF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19666  018CFE  0EFC               	movlw	-4
 19667  018D00  006F FF8C  F00B    	movff	plusw1,btemp+10
 19668  018D06  0EFD               	movlw	-3
 19669  018D08  006F FF8C  F00C    	movff	plusw1,btemp+11
 19670  018D0E  90D8               	bcf	status,0,c
 19671  018D10  3409               	rlcf	(btemp+8)^0,w,c
 19672  018D12  6E05               	movwf	(btemp+4)^0,c
 19673  018D14  340A               	rlcf	(btemp+9)^0,w,c
 19674  018D16  6E06               	movwf	(btemp+5)^0,c
 19675  018D18  340B               	rlcf	(btemp+10)^0,w,c
 19676  018D1A  6E07               	movwf	(btemp+6)^0,c
 19677  018D1C  340C               	rlcf	(btemp+11)^0,w,c
 19678  018D1E  6E08               	movwf	(btemp+7)^0,c
 19679  018D20  5005               	movf	(btemp+4)^0,w,c
 19680  018D22  1006               	iorwf	(btemp+5)^0,w,c
 19681  018D24  1007               	iorwf	(btemp+6)^0,w,c
 19682  018D26  1008               	iorwf	(btemp+7)^0,w,c
 19683  018D28  A4D8               	btfss	status,2,c
 19684  018D2A  D002               	goto	l8200
 19685  018D2C  0E02               	movlw	2
 19686  018D2E  D02E               	goto	L22
 19687  018D30                     l8200:
 19688  018D30  0E03               	movlw	3
 19689  018D32  D02C               	goto	L22
 19690  018D34                     l8204:
 19691                           
 19692                           ;stkvar	_e @ sp[(-6)+4]
 19693  018D34  0EFE               	movlw	-2
 19694  018D36  28E3               	incf	plusw1,w,c
 19695  018D38  E128               	bnz	l8210
 19696  018D3A  0EFF               	movlw	-1
 19697  018D3C  50E3               	movf	plusw1,w,c
 19698  018D3E  A4D8               	btfss	status,2,c
 19699  018D40  D024               	goto	l8210
 19700                           
 19701                           ;stkvar	_u @ sp[(-6)+0]
 19702  018D42  0EFA               	movlw	-6
 19703  018D44  006F FF8C  F009    	movff	plusw1,btemp+8
 19704  018D4A  0EFB               	movlw	-5
 19705  018D4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19706  018D52  0EFC               	movlw	-4
 19707  018D54  006F FF8C  F00B    	movff	plusw1,btemp+10
 19708  018D5A  0EFD               	movlw	-3
 19709  018D5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19710  018D62  0E09               	movlw	9
 19711  018D64                     u6115:
 19712  018D64  90D8               	bcf	status,0,c
 19713  018D66  3609               	rlcf	(btemp+8)^0,f,c
 19714  018D68  360A               	rlcf	(btemp+9)^0,f,c
 19715  018D6A  360B               	rlcf	(btemp+10)^0,f,c
 19716  018D6C  360C               	rlcf	(btemp+11)^0,f,c
 19717  018D6E  2EE8               	decfsz	wreg,f,c
 19718  018D70  D7F9               	goto	u6115
 19719  018D72  5009               	movf	(btemp+8)^0,w,c
 19720  018D74  100A               	iorwf	(btemp+9)^0,w,c
 19721  018D76  100B               	iorwf	(btemp+10)^0,w,c
 19722  018D78  100C               	iorwf	(btemp+11)^0,w,c
 19723  018D7A  A4D8               	btfss	status,2,c
 19724  018D7C  D002               	goto	u6120
 19725  018D7E  0E01               	movlw	1
 19726  018D80  D001               	goto	u6130
 19727  018D82                     u6120:
 19728  018D82  0E00               	movlw	0
 19729  018D84                     u6130:
 19730  018D84  6E01               	movwf	btemp^0,c
 19731  018D86  6A02               	clrf	(btemp+1)^0,c
 19732  018D88  D004               	goto	l3162
 19733  018D8A                     l8210:
 19734  018D8A  0E04               	movlw	4
 19735  018D8C                     L22:
 19736  018D8C  6E01               	movwf	btemp^0,c
 19737  018D8E  0E00               	movlw	0
 19738  018D90  6E02               	movwf	(btemp+1)^0,c
 19739  018D92                     l3162:
 19740                           
 19741                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19742  018D92  0EF6               	movlw	246
 19743  018D94  26E1               	addwf	fsr1l,f,c
 19744  018D96  0EFF               	movlw	255
 19745  018D98  22E2               	addwfc	fsr1h,f,c
 19746  018D9A  0012               	return		;funcret
 19747  018D9C                     __end_of___fpclassifyf:
 19748                           	opt callstack 0
 19749                           
 19750 ;; *************** function ___fltol *****************
 19751 ;; Defined at:
 19752 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19753 ;; Parameters:    Size  Location     Type
 19754 ;;  f1              4  [STACK] int 
 19755 ;; Auto vars:     Size  Location     Type
 19756 ;;  exp1            1  [STACK] unsigned char 
 19757 ;;  sign1           1  [STACK] unsigned char 
 19758 ;; Return value:  Size  Location     Type
 19759 ;;                  4  [STACK] long 
 19760 ;; Registers used:
 19761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19762 ;; Tracked objects:
 19763 ;;		On entry : 0/0
 19764 ;;		On exit  : 0/0
 19765 ;;		Unchanged: 0/0
 19766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19771 ;;Total ram usage:        0 bytes
 19772 ;; Hardware stack levels used:    1
 19773 ;; Hardware stack levels required when called:   15
 19774 ;; This function calls:
 19775 ;;		Nothing
 19776 ;; This function is called by:
 19777 ;;		_main
 19778 ;;		_convert_dac_raw
 19779 ;;		_calc_bsoc
 19780 ;;		_init_bsoc
 19781 ;;		_efgtoa
 19782 ;; This function uses a reentrant model
 19783 ;;
 19784                           
 19785                           	psect	text68
 19786  0190A2                     __ptext68:
 19787                           	opt callstack 0
 19788  0190A2                     ___fltol:
 19789                           	opt callstack 0
 19790                           
 19791                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19792  0190A2  52E6               	movf	postinc1,f,c
 19793  0190A4  52E6               	movf	postinc1,f,c
 19794                           
 19795                           ;stkvar	_f1 @ sp[(-2)+-4]
 19796                           
 19797                           ;incstack = 0
 19798 ;; hardware stack exceeded
 19799  0190A6  0EFA               	movlw	-6
 19800  0190A8  006F FF8C  F009    	movff	plusw1,btemp+8
 19801  0190AE  0EFB               	movlw	-5
 19802  0190B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19803  0190B6  0EFC               	movlw	-4
 19804  0190B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19805  0190BE  0EFD               	movlw	-3
 19806  0190C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19807  0190C6  0E18               	movlw	24
 19808  0190C8  D005               	goto	u7280
 19809  0190CA                     u7285:
 19810  0190CA  90D8               	bcf	status,0,c
 19811  0190CC  320C               	rrcf	(btemp+11)^0,f,c
 19812  0190CE  320B               	rrcf	(btemp+10)^0,f,c
 19813  0190D0  320A               	rrcf	(btemp+9)^0,f,c
 19814  0190D2  3209               	rrcf	(btemp+8)^0,f,c
 19815  0190D4                     u7280:
 19816  0190D4  2EE8               	decfsz	wreg,f,c
 19817  0190D6  D7F9               	goto	u7285
 19818                           
 19819                           ;stkvar	_exp1 @ sp[(-2)+0]
 19820  0190D8  0EFE               	movlw	-2
 19821  0190DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19822  0190E0  0EFE               	movlw	-2
 19823  0190E2  50E3               	movf	plusw1,w,c
 19824  0190E4  A4D8               	btfss	status,2,c
 19825  0190E6  D006               	goto	l8830
 19826  0190E8                     u7290:
 19827  0190E8  0E00               	movlw	0
 19828  0190EA  6E01               	movwf	btemp^0,c
 19829  0190EC  6A02               	clrf	(btemp+1)^0,c
 19830  0190EE  6A03               	clrf	(btemp+2)^0,c
 19831  0190F0  6A04               	clrf	(btemp+3)^0,c
 19832  0190F2  D08B               	goto	l2778
 19833  0190F4                     l8830:
 19834                           
 19835                           ;stkvar	_f1 @ sp[(-2)+-4]
 19836  0190F4  0EFA               	movlw	-6
 19837  0190F6  006F FF8C  F009    	movff	plusw1,btemp+8
 19838  0190FC  0EFB               	movlw	-5
 19839  0190FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19840  019104  0EFC               	movlw	-4
 19841  019106  006F FF8C  F00B    	movff	plusw1,btemp+10
 19842  01910C  0EFD               	movlw	-3
 19843  01910E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19844  019114  0E20               	movlw	32
 19845  019116  D005               	goto	u7300
 19846  019118                     u7305:
 19847  019118  90D8               	bcf	status,0,c
 19848  01911A  320C               	rrcf	(btemp+11)^0,f,c
 19849  01911C  320B               	rrcf	(btemp+10)^0,f,c
 19850  01911E  320A               	rrcf	(btemp+9)^0,f,c
 19851  019120  3209               	rrcf	(btemp+8)^0,f,c
 19852  019122                     u7300:
 19853  019122  2EE8               	decfsz	wreg,f,c
 19854  019124  D7F9               	goto	u7305
 19855                           
 19856                           ;stkvar	_sign1 @ sp[(-2)+1]
 19857  019126  0EFF               	movlw	-1
 19858  019128  0060  F027  FFE3   	movff	btemp+8,plusw1
 19859                           
 19860                           ;stkvar	_f1 @ sp[(-2)+-4]
 19861  01912E  0EFC               	movlw	-4
 19862  019130  8EE3               	bsf	plusw1,7,c
 19863                           
 19864                           ;stkvar	_f1 @ sp[(-2)+-4]
 19865  019132  50E1               	movf	fsr1l,w,c
 19866  019134  0FFA               	addlw	-6
 19867  019136  6ED9               	movwf	fsr2l,c
 19868  019138  50E2               	movf	fsr1h,w,c
 19869  01913A  6EDA               	movwf	fsr2h,c
 19870  01913C  0EFF               	movlw	255
 19871  01913E  22DA               	addwfc	fsr2h,f,c
 19872  019140  0EFF               	movlw	255
 19873  019142  16DE               	andwf	postinc2,f,c
 19874  019144  0EFF               	movlw	255
 19875  019146  16DE               	andwf	postinc2,f,c
 19876  019148  0EFF               	movlw	255
 19877  01914A  16DE               	andwf	postinc2,f,c
 19878  01914C  0E00               	movlw	0
 19879  01914E  16DE               	andwf	postinc2,f,c
 19880                           
 19881                           ;stkvar	_exp1 @ sp[(-2)+0]
 19882  019150  0EFE               	movlw	-2
 19883  019152  006F FF8C  F001    	movff	plusw1,btemp
 19884  019158  0E96               	movlw	150
 19885  01915A  5E01               	subwf	btemp^0,f,c
 19886  01915C  0EFE               	movlw	-2
 19887  01915E  0060  F007  FFE3   	movff	btemp,plusw1
 19888                           
 19889                           ;stkvar	_exp1 @ sp[(-2)+0]
 19890  019164  0EFE               	movlw	-2
 19891  019166  AEE3               	btfss	plusw1,7,c
 19892  019168  D014               	goto	l8848
 19893                           
 19894                           ;stkvar	_exp1 @ sp[(-2)+0]
 19895  01916A  0EFE               	movlw	-2
 19896  01916C  50E3               	movf	plusw1,w,c
 19897  01916E  0A80               	xorlw	128
 19898  019170  0F97               	addlw	151
 19899  019172  A0D8               	btfss	status,0,c
 19900  019174  D7B9               	goto	u7290
 19901  019176                     l8846:
 19902                           
 19903                           ;stkvar	_f1 @ sp[(-2)+-4]
 19904  019176  90D8               	bcf	status,0,c
 19905  019178  0EFD               	movlw	-3
 19906  01917A  32E3               	rrcf	plusw1,f,c
 19907  01917C  0EFC               	movlw	-4
 19908  01917E  32E3               	rrcf	plusw1,f,c
 19909  019180  0EFB               	movlw	-5
 19910  019182  32E3               	rrcf	plusw1,f,c
 19911  019184  0EFA               	movlw	-6
 19912  019186  32E3               	rrcf	plusw1,f,c
 19913                           
 19914                           ;stkvar	_exp1 @ sp[(-2)+0]
 19915  019188  0EFE               	movlw	-2
 19916  01918A  2AE3               	incf	plusw1,f,c
 19917  01918C  B4D8               	btfsc	status,2,c
 19918  01918E  D018               	goto	u7350
 19919  019190  D7F2               	goto	l8846
 19920  019192                     l8848:
 19921                           
 19922                           ;stkvar	_exp1 @ sp[(-2)+0]
 19923  019192  0EFE               	movlw	-2
 19924  019194  006F FF8C  F001    	movff	plusw1,btemp
 19925  01919A  0E1F               	movlw	31
 19926  01919C  6401               	cpfsgt	btemp^0,c
 19927  01919E  D00C               	goto	l8856
 19928  0191A0  D7A3               	goto	u7290
 19929  0191A2                     l8854:
 19930                           
 19931                           ;stkvar	_f1 @ sp[(-2)+-4]
 19932  0191A2  90D8               	bcf	status,0,c
 19933  0191A4  0EFA               	movlw	-6
 19934  0191A6  36E3               	rlcf	plusw1,f,c
 19935  0191A8  0EFB               	movlw	-5
 19936  0191AA  36E3               	rlcf	plusw1,f,c
 19937  0191AC  0EFC               	movlw	-4
 19938  0191AE  36E3               	rlcf	plusw1,f,c
 19939  0191B0  0EFD               	movlw	-3
 19940  0191B2  36E3               	rlcf	plusw1,f,c
 19941                           
 19942                           ;stkvar	_exp1 @ sp[(-2)+0]
 19943  0191B4  0EFE               	movlw	-2
 19944  0191B6  06E3               	decf	plusw1,f,c
 19945  0191B8                     l8856:
 19946                           
 19947                           ;stkvar	_exp1 @ sp[(-2)+0]
 19948  0191B8  0EFE               	movlw	-2
 19949  0191BA  50E3               	movf	plusw1,w,c
 19950  0191BC  A4D8               	btfss	status,2,c
 19951  0191BE  D7F1               	goto	l8854
 19952  0191C0                     u7350:
 19953                           
 19954                           ;stkvar	_sign1 @ sp[(-2)+1]
 19955  0191C0  0EFF               	movlw	-1
 19956  0191C2  50E3               	movf	plusw1,w,c
 19957  0191C4  B4D8               	btfsc	status,2,c
 19958  0191C6  D011               	goto	u7370
 19959                           
 19960                           ;stkvar	_f1 @ sp[(-2)+-4]
 19961                           ;stkvar	_f1 @ sp[(-2)+-4]
 19962  0191C8  0EFA               	movlw	-6
 19963  0191CA  6CE3               	negf	plusw1,c
 19964  0191CC  0EFB               	movlw	-5
 19965  0191CE  1EE3               	comf	plusw1,f,c
 19966  0191D0  0EFC               	movlw	-4
 19967  0191D2  1EE3               	comf	plusw1,f,c
 19968  0191D4  0EFD               	movlw	-3
 19969  0191D6  1EE3               	comf	plusw1,f,c
 19970  0191D8  E308               	bnc	u7370
 19971  0191DA  0EFB               	movlw	-5
 19972  0191DC  2AE3               	incf	plusw1,f,c
 19973  0191DE  E305               	bnc	u7370
 19974  0191E0  0EFC               	movlw	-4
 19975  0191E2  2AE3               	incf	plusw1,f,c
 19976  0191E4  E302               	bnc	u7370
 19977  0191E6  0EFD               	movlw	-3
 19978  0191E8  2AE3               	incf	plusw1,f,c
 19979  0191EA                     u7370:
 19980                           
 19981                           ;stkvar	_f1 @ sp[(-2)+-4]
 19982  0191EA  0EFA               	movlw	-6
 19983  0191EC  006F FF8C  F001    	movff	plusw1,btemp
 19984  0191F2  0EFB               	movlw	-5
 19985  0191F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19986  0191FA  0EFC               	movlw	-4
 19987  0191FC  006F FF8C  F003    	movff	plusw1,btemp+2
 19988  019202  0EFD               	movlw	-3
 19989  019204  006F FF8C  F004    	movff	plusw1,btemp+3
 19990  01920A                     l2778:
 19991                           
 19992                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19993  01920A  0EFA               	movlw	250
 19994  01920C  26E1               	addwf	fsr1l,f,c
 19995  01920E  0EFF               	movlw	255
 19996  019210  22E2               	addwfc	fsr1h,f,c
 19997  019212  0012               	return		;funcret
 19998  019214                     __end_of___fltol:
 19999                           	opt callstack 0
 20000                           
 20001 ;; *************** function ___flneg *****************
 20002 ;; Defined at:
 20003 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 20004 ;; Parameters:    Size  Location     Type
 20005 ;;  f1              4  [STACK] long 
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  4  [STACK] long 
 20010 ;; Registers used:
 20011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20021 ;;Total ram usage:        0 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; Hardware stack levels required when called:   15
 20024 ;; This function calls:
 20025 ;;		Nothing
 20026 ;; This function is called by:
 20027 ;;		_calc_bsoc
 20028 ;;		_efgtoa
 20029 ;; This function uses a reentrant model
 20030 ;;
 20031                           
 20032                           	psect	text69
 20033  01B834                     __ptext69:
 20034                           	opt callstack 0
 20035  01B834                     ___flneg:
 20036                           	opt callstack 0
 20037                           
 20038                           ;stkvar	_f1 @ sp[(0)+-4]
 20039                           
 20040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20041                           ;incstack = 0
 20042 ;; hardware stack exceeded
 20043  01B834  0EFC               	movlw	-4
 20044  01B836  50E3               	movf	plusw1,w,c
 20045  01B838  E10A               	bnz	u7270
 20046  01B83A  0EFD               	movlw	-3
 20047  01B83C  50E3               	movf	plusw1,w,c
 20048  01B83E  E107               	bnz	u7270
 20049  01B840  0EFE               	movlw	-2
 20050  01B842  50E3               	movf	plusw1,w,c
 20051  01B844  E104               	bnz	u7270
 20052  01B846  0EFF               	movlw	-1
 20053  01B848  50E3               	movf	plusw1,w,c
 20054  01B84A  B4D8               	btfsc	status,2,c
 20055  01B84C  D002               	goto	l8820
 20056  01B84E                     u7270:
 20057                           
 20058                           ;stkvar	_f1 @ sp[(0)+-4]
 20059  01B84E  0EFF               	movlw	-1
 20060  01B850  7EE3               	btg	plusw1,7,c
 20061  01B852                     l8820:
 20062                           
 20063                           ;stkvar	_f1 @ sp[(0)+-4]
 20064  01B852  0EFC               	movlw	-4
 20065  01B854  006F FF8C  F001    	movff	plusw1,btemp
 20066  01B85A  0EFD               	movlw	-3
 20067  01B85C  006F FF8C  F002    	movff	plusw1,btemp+1
 20068  01B862  0EFE               	movlw	-2
 20069  01B864  006F FF8C  F003    	movff	plusw1,btemp+2
 20070  01B86A  0EFF               	movlw	-1
 20071  01B86C  006F FF8C  F004    	movff	plusw1,btemp+3
 20072                           
 20073                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20074  01B872  52E5               	movf	postdec1,f,c
 20075  01B874  52E5               	movf	postdec1,f,c
 20076  01B876  52E5               	movf	postdec1,f,c
 20077  01B878  52E5               	movf	postdec1,f,c
 20078  01B87A  0012               	return		;funcret
 20079  01B87C                     __end_of___flneg:
 20080                           	opt callstack 0
 20081                           
 20082 ;; *************** function ___fleq *****************
 20083 ;; Defined at:
 20084 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20085 ;; Parameters:    Size  Location     Type
 20086 ;;  ff1             4  [STACK] long 
 20087 ;;  ff2             4  [STACK] long 
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;		None
 20090 ;; Return value:  Size  Location     Type
 20091 ;;		None               void
 20092 ;; Registers used:
 20093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20094 ;; Tracked objects:
 20095 ;;		On entry : 0/0
 20096 ;;		On exit  : 0/0
 20097 ;;		Unchanged: 0/0
 20098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20103 ;;Total ram usage:        0 bytes
 20104 ;; Hardware stack levels used:    1
 20105 ;; Hardware stack levels required when called:   15
 20106 ;; This function calls:
 20107 ;;		Nothing
 20108 ;; This function is called by:
 20109 ;;		_efgtoa
 20110 ;; This function uses a reentrant model
 20111 ;;
 20112                           
 20113                           	psect	text70
 20114  01A666                     __ptext70:
 20115                           	opt callstack 0
 20116  01A666                     ___fleq:
 20117                           	opt callstack 0
 20118                           
 20119                           ;stkvar	_ff1 @ sp[(0)+-4]
 20120                           
 20121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20122                           ;incstack = 0
 20123 ;; hardware stack exceeded
 20124  01A666  50E1               	movf	fsr1l,w,c
 20125  01A668  0FFC               	addlw	-4
 20126  01A66A  6ED9               	movwf	fsr2l,c
 20127  01A66C  50E2               	movf	fsr1h,w,c
 20128  01A66E  6EDA               	movwf	fsr2h,c
 20129  01A670  0EFF               	movlw	255
 20130  01A672  22DA               	addwfc	fsr2h,f,c
 20131  01A674  0E00               	movlw	0
 20132  01A676  14DE               	andwf	postinc2,w,c
 20133  01A678  6E09               	movwf	(btemp+8)^0,c
 20134  01A67A  0E00               	movlw	0
 20135  01A67C  14DE               	andwf	postinc2,w,c
 20136  01A67E  6E0A               	movwf	(btemp+9)^0,c
 20137  01A680  0E80               	movlw	128
 20138  01A682  14DE               	andwf	postinc2,w,c
 20139  01A684  6E0B               	movwf	(btemp+10)^0,c
 20140  01A686  0E7F               	movlw	127
 20141  01A688  14DE               	andwf	postinc2,w,c
 20142  01A68A  6E0C               	movwf	(btemp+11)^0,c
 20143  01A68C  5009               	movf	(btemp+8)^0,w,c
 20144  01A68E  100A               	iorwf	(btemp+9)^0,w,c
 20145  01A690  100B               	iorwf	(btemp+10)^0,w,c
 20146  01A692  100C               	iorwf	(btemp+11)^0,w,c
 20147  01A694  A4D8               	btfss	status,2,c
 20148  01A696  D008               	goto	l8778
 20149                           
 20150                           ;stkvar	_ff1 @ sp[(0)+-4]
 20151  01A698  0EFC               	movlw	-4
 20152  01A69A  6AE3               	clrf	plusw1,c
 20153  01A69C  0EFD               	movlw	-3
 20154  01A69E  6AE3               	clrf	plusw1,c
 20155  01A6A0  0EFE               	movlw	-2
 20156  01A6A2  6AE3               	clrf	plusw1,c
 20157  01A6A4  0EFF               	movlw	-1
 20158  01A6A6  6AE3               	clrf	plusw1,c
 20159  01A6A8                     l8778:
 20160                           
 20161                           ;stkvar	_ff2 @ sp[(0)+-8]
 20162  01A6A8  50E1               	movf	fsr1l,w,c
 20163  01A6AA  0FF8               	addlw	-8
 20164  01A6AC  6ED9               	movwf	fsr2l,c
 20165  01A6AE  50E2               	movf	fsr1h,w,c
 20166  01A6B0  6EDA               	movwf	fsr2h,c
 20167  01A6B2  0EFF               	movlw	255
 20168  01A6B4  22DA               	addwfc	fsr2h,f,c
 20169  01A6B6  0E00               	movlw	0
 20170  01A6B8  14DE               	andwf	postinc2,w,c
 20171  01A6BA  6E09               	movwf	(btemp+8)^0,c
 20172  01A6BC  0E00               	movlw	0
 20173  01A6BE  14DE               	andwf	postinc2,w,c
 20174  01A6C0  6E0A               	movwf	(btemp+9)^0,c
 20175  01A6C2  0E80               	movlw	128
 20176  01A6C4  14DE               	andwf	postinc2,w,c
 20177  01A6C6  6E0B               	movwf	(btemp+10)^0,c
 20178  01A6C8  0E7F               	movlw	127
 20179  01A6CA  14DE               	andwf	postinc2,w,c
 20180  01A6CC  6E0C               	movwf	(btemp+11)^0,c
 20181  01A6CE  5009               	movf	(btemp+8)^0,w,c
 20182  01A6D0  100A               	iorwf	(btemp+9)^0,w,c
 20183  01A6D2  100B               	iorwf	(btemp+10)^0,w,c
 20184  01A6D4  100C               	iorwf	(btemp+11)^0,w,c
 20185  01A6D6  A4D8               	btfss	status,2,c
 20186  01A6D8  D008               	goto	l8782
 20187                           
 20188                           ;stkvar	_ff2 @ sp[(0)+-8]
 20189  01A6DA  0EF8               	movlw	-8
 20190  01A6DC  6AE3               	clrf	plusw1,c
 20191  01A6DE  0EF9               	movlw	-7
 20192  01A6E0  6AE3               	clrf	plusw1,c
 20193  01A6E2  0EFA               	movlw	-6
 20194  01A6E4  6AE3               	clrf	plusw1,c
 20195  01A6E6  0EFB               	movlw	-5
 20196  01A6E8  6AE3               	clrf	plusw1,c
 20197  01A6EA                     l8782:
 20198                           
 20199                           ;stkvar	_ff2 @ sp[(0)+-8]
 20200                           ;stkvar	_ff1 @ sp[(0)+-4]
 20201  01A6EA  50E1               	movf	fsr1l,w,c
 20202  01A6EC  0FFC               	addlw	-4
 20203  01A6EE  6ED9               	movwf	fsr2l,c
 20204  01A6F0  50E2               	movf	fsr1h,w,c
 20205  01A6F2  6EDA               	movwf	fsr2h,c
 20206  01A6F4  0EFF               	movlw	255
 20207  01A6F6  22DA               	addwfc	fsr2h,f,c
 20208  01A6F8  0EF8               	movlw	-8
 20209  01A6FA  50E3               	movf	plusw1,w,c
 20210  01A6FC  18DE               	xorwf	postinc2,w,c
 20211  01A6FE  E10D               	bnz	u7210
 20212  01A700  0EF9               	movlw	-7
 20213  01A702  50E3               	movf	plusw1,w,c
 20214  01A704  18DE               	xorwf	postinc2,w,c
 20215  01A706  E109               	bnz	u7210
 20216  01A708  0EFA               	movlw	-6
 20217  01A70A  50E3               	movf	plusw1,w,c
 20218  01A70C  18DE               	xorwf	postinc2,w,c
 20219  01A70E  E105               	bnz	u7210
 20220  01A710  0EFB               	movlw	-5
 20221  01A712  50E3               	movf	plusw1,w,c
 20222  01A714  18DE               	xorwf	postinc2,w,c
 20223  01A716  B4D8               	btfsc	status,2,c
 20224  01A718  D002               	goto	l8786
 20225  01A71A                     u7210:
 20226  01A71A  9001               	bcf	btemp& (0+255),0,c
 20227  01A71C  D001               	goto	l2740
 20228  01A71E                     l8786:
 20229  01A71E  8001               	bsf	btemp& (0+255),0,c
 20230  01A720                     l2740:
 20231                           
 20232                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20233  01A720  0EF8               	movlw	248
 20234  01A722  26E1               	addwf	fsr1l,f,c
 20235  01A724  0EFF               	movlw	255
 20236  01A726  22E2               	addwfc	fsr1h,f,c
 20237  01A728  0012               	return		;funcret
 20238  01A72A                     __end_of___fleq:
 20239                           	opt callstack 0
 20240                           
 20241 ;; *************** function ___awmod *****************
 20242 ;; Defined at:
 20243 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20244 ;; Parameters:    Size  Location     Type
 20245 ;;  dividend        2  [STACK] int 
 20246 ;;  divisor         2  [STACK] int 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;  sign            1  [STACK] unsigned char 
 20249 ;;  counter         1  [STACK] unsigned char 
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  2  [STACK] int 
 20252 ;; Registers used:
 20253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20254 ;; Tracked objects:
 20255 ;;		On entry : 0/0
 20256 ;;		On exit  : 0/0
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20263 ;;Total ram usage:        0 bytes
 20264 ;; Hardware stack levels used:    1
 20265 ;; Hardware stack levels required when called:   15
 20266 ;; This function calls:
 20267 ;;		Nothing
 20268 ;; This function is called by:
 20269 ;;		_efgtoa
 20270 ;; This function uses a reentrant model
 20271 ;;
 20272                           
 20273                           	psect	text71
 20274  019C08                     __ptext71:
 20275                           	opt callstack 0
 20276  019C08                     ___awmod:
 20277                           	opt callstack 0
 20278                           
 20279                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20280  019C08  52E6               	movf	postinc1,f,c
 20281  019C0A  52E6               	movf	postinc1,f,c
 20282                           
 20283                           ;stkvar	_sign @ sp[(-2)+0]
 20284                           
 20285                           ;incstack = 0
 20286 ;; hardware stack exceeded
 20287  019C0C  0EFE               	movlw	-2
 20288  019C0E  6AE3               	clrf	plusw1,c
 20289                           
 20290                           ;stkvar	_dividend @ sp[(-2)+-2]
 20291  019C10  0EFD               	movlw	-3
 20292  019C12  AEE3               	btfss	plusw1,7,c
 20293  019C14  D009               	goto	l8744
 20294                           
 20295                           ;stkvar	_dividend @ sp[(-2)+-2]
 20296                           ;stkvar	_dividend @ sp[(-2)+-2]
 20297  019C16  0EFC               	movlw	-4
 20298  019C18  6CE3               	negf	plusw1,c
 20299  019C1A  0EFD               	movlw	-3
 20300  019C1C  1EE3               	comf	plusw1,f,c
 20301  019C1E  B0D8               	btfsc	status,0,c
 20302  019C20  2AE3               	incf	plusw1,f,c
 20303                           
 20304                           ;stkvar	_sign @ sp[(-2)+0]
 20305  019C22  0EFE               	movlw	-2
 20306  019C24  6AE3               	clrf	plusw1,c
 20307  019C26  2AE3               	incf	plusw1,f,c
 20308  019C28                     l8744:
 20309                           
 20310                           ;stkvar	_divisor @ sp[(-2)+-4]
 20311  019C28  0EFB               	movlw	-5
 20312  019C2A  AEE3               	btfss	plusw1,7,c
 20313  019C2C  D006               	goto	l8748
 20314                           
 20315                           ;stkvar	_divisor @ sp[(-2)+-4]
 20316                           ;stkvar	_divisor @ sp[(-2)+-4]
 20317  019C2E  0EFA               	movlw	-6
 20318  019C30  6CE3               	negf	plusw1,c
 20319  019C32  0EFB               	movlw	-5
 20320  019C34  1EE3               	comf	plusw1,f,c
 20321  019C36  B0D8               	btfsc	status,0,c
 20322  019C38  2AE3               	incf	plusw1,f,c
 20323  019C3A                     l8748:
 20324                           
 20325                           ;stkvar	_divisor @ sp[(-2)+-4]
 20326  019C3A  0EFA               	movlw	-6
 20327  019C3C  006F FF8C  F001    	movff	plusw1,btemp
 20328  019C42  0EFB               	movlw	-5
 20329  019C44  50E3               	movf	plusw1,w,c
 20330  019C46  1001               	iorwf	btemp^0,w,c
 20331  019C48  B4D8               	btfsc	status,2,c
 20332  019C4A  D053               	goto	u7170
 20333                           
 20334                           ;stkvar	_counter @ sp[(-2)+1]
 20335  019C4C  0EFF               	movlw	-1
 20336  019C4E  6AE3               	clrf	plusw1,c
 20337  019C50  D012               	goto	L23
 20338  019C52                     l8752:
 20339                           
 20340                           ;stkvar	_divisor @ sp[(-2)+-4]
 20341  019C52  0EFA               	movlw	-6
 20342  019C54  50E3               	movf	plusw1,w,c
 20343  019C56  90D8               	bcf	status,0,c
 20344  019C58  34E8               	rlcf	wreg,w,c
 20345  019C5A  6E01               	movwf	btemp^0,c
 20346  019C5C  0EFA               	movlw	-6
 20347  019C5E  0060  F007  FFE3   	movff	btemp,plusw1
 20348  019C64  0EFB               	movlw	-5
 20349  019C66  50E3               	movf	plusw1,w,c
 20350  019C68  34E8               	rlcf	wreg,w,c
 20351  019C6A  6E01               	movwf	btemp^0,c
 20352  019C6C  0EFB               	movlw	-5
 20353  019C6E  0060  F007  FFE3   	movff	btemp,plusw1
 20354                           
 20355                           ;stkvar	_counter @ sp[(-2)+1]
 20356  019C74  0EFF               	movlw	-1
 20357  019C76                     L23:
 20358  019C76  2AE3               	incf	plusw1,f,c
 20359                           
 20360                           ;stkvar	_divisor @ sp[(-2)+-4]
 20361  019C78  0EFB               	movlw	-5
 20362  019C7A  AEE3               	btfss	plusw1,7,c
 20363  019C7C  D7EA               	goto	l8752
 20364  019C7E                     u7150:
 20365                           
 20366                           ;stkvar	_divisor @ sp[(-2)+-4]
 20367  019C7E  0EFA               	movlw	-6
 20368  019C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 20369  019C86  0EFB               	movlw	-5
 20370  019C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 20371                           
 20372                           ;stkvar	_dividend @ sp[(-2)+-2]
 20373  019C8E  0EFC               	movlw	-4
 20374  019C90  006F FF8C  F009    	movff	plusw1,btemp+8
 20375  019C96  0EFD               	movlw	-3
 20376  019C98  006F FF8C  F00A    	movff	plusw1,btemp+9
 20377  019C9E  500B               	movf	(btemp+10)^0,w,c
 20378  019CA0  5C09               	subwf	(btemp+8)^0,w,c
 20379  019CA2  500C               	movf	(btemp+11)^0,w,c
 20380  019CA4  580A               	subwfb	(btemp+9)^0,w,c
 20381  019CA6  A0D8               	btfss	status,0,c
 20382  019CA8  D014               	goto	l8762
 20383                           
 20384                           ;stkvar	_divisor @ sp[(-2)+-4]
 20385                           ;stkvar	_dividend @ sp[(-2)+-2]
 20386  019CAA  0EFC               	movlw	-4
 20387  019CAC  50E3               	movf	plusw1,w,c
 20388  019CAE  6E01               	movwf	btemp^0,c
 20389  019CB0  0EFA               	movlw	-6
 20390  019CB2  50E3               	movf	plusw1,w,c
 20391  019CB4  5E01               	subwf	btemp^0,f,c
 20392  019CB6  0EFC               	movlw	-4
 20393  019CB8  0060  F007  FFE3   	movff	btemp,plusw1
 20394  019CBE  0EFD               	movlw	-3
 20395  019CC0  50E3               	movf	plusw1,w,c
 20396  019CC2  6E01               	movwf	btemp^0,c
 20397  019CC4  0EFB               	movlw	-5
 20398  019CC6  50E3               	movf	plusw1,w,c
 20399  019CC8  5A01               	subwfb	btemp^0,f,c
 20400  019CCA  0EFD               	movlw	-3
 20401  019CCC  0060  F007  FFE3   	movff	btemp,plusw1
 20402  019CD2                     l8762:
 20403                           
 20404                           ;stkvar	_divisor @ sp[(-2)+-4]
 20405  019CD2  90D8               	bcf	status,0,c
 20406  019CD4  0EFB               	movlw	-5
 20407  019CD6  32E3               	rrcf	plusw1,f,c
 20408  019CD8  0EFA               	movlw	-6
 20409  019CDA  32E3               	rrcf	plusw1,f,c
 20410                           
 20411                           ;stkvar	_counter @ sp[(-2)+1]
 20412  019CDC  0EFF               	movlw	-1
 20413  019CDE  50E3               	movf	plusw1,w,c
 20414  019CE0  6E01               	movwf	btemp^0,c
 20415  019CE2  0E01               	movlw	1
 20416  019CE4  5E01               	subwf	btemp^0,f,c
 20417  019CE6  0EFF               	movlw	-1
 20418  019CE8  0060  F007  FFE3   	movff	btemp,plusw1
 20419  019CEE  A4D8               	btfss	status,2,c
 20420  019CF0  D7C6               	goto	u7150
 20421  019CF2                     u7170:
 20422                           
 20423                           ;stkvar	_sign @ sp[(-2)+0]
 20424  019CF2  0EFE               	movlw	-2
 20425  019CF4  50E3               	movf	plusw1,w,c
 20426  019CF6  B4D8               	btfsc	status,2,c
 20427  019CF8  D006               	goto	l8770
 20428                           
 20429                           ;stkvar	_dividend @ sp[(-2)+-2]
 20430                           ;stkvar	_dividend @ sp[(-2)+-2]
 20431  019CFA  0EFC               	movlw	-4
 20432  019CFC  6CE3               	negf	plusw1,c
 20433  019CFE  0EFD               	movlw	-3
 20434  019D00  1EE3               	comf	plusw1,f,c
 20435  019D02  B0D8               	btfsc	status,0,c
 20436  019D04  2AE3               	incf	plusw1,f,c
 20437  019D06                     l8770:
 20438                           
 20439                           ;stkvar	_dividend @ sp[(-2)+-2]
 20440  019D06  0EFC               	movlw	-4
 20441  019D08  006F FF8C  F001    	movff	plusw1,btemp
 20442  019D0E  0EFD               	movlw	-3
 20443  019D10  006F FF8C  F002    	movff	plusw1,btemp+1
 20444                           
 20445                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20446  019D16  0EFA               	movlw	250
 20447  019D18  26E1               	addwf	fsr1l,f,c
 20448  019D1A  0EFF               	movlw	255
 20449  019D1C  22E2               	addwfc	fsr1h,f,c
 20450  019D1E  0012               	return		;funcret
 20451  019D20                     __end_of___awmod:
 20452                           	opt callstack 0
 20453                           
 20454 ;; *************** function ___awdiv *****************
 20455 ;; Defined at:
 20456 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  dividend        2  [STACK] int 
 20459 ;;  divisor         2  [STACK] int 
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;  quotient        2  [STACK] int 
 20462 ;;  sign            1  [STACK] unsigned char 
 20463 ;;  counter         1  [STACK] unsigned char 
 20464 ;; Return value:  Size  Location     Type
 20465 ;;                  2  [STACK] int 
 20466 ;; Registers used:
 20467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20468 ;; Tracked objects:
 20469 ;;		On entry : 0/0
 20470 ;;		On exit  : 0/0
 20471 ;;		Unchanged: 0/0
 20472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20477 ;;Total ram usage:        0 bytes
 20478 ;; Hardware stack levels used:    1
 20479 ;; Hardware stack levels required when called:   15
 20480 ;; This function calls:
 20481 ;;		Nothing
 20482 ;; This function is called by:
 20483 ;;		_efgtoa
 20484 ;; This function uses a reentrant model
 20485 ;;
 20486                           
 20487                           	psect	text72
 20488  0194DA                     __ptext72:
 20489                           	opt callstack 0
 20490  0194DA                     ___awdiv:
 20491                           	opt callstack 0
 20492                           
 20493                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20494  0194DA  52E6               	movf	postinc1,f,c
 20495  0194DC  52E6               	movf	postinc1,f,c
 20496  0194DE  52E6               	movf	postinc1,f,c
 20497  0194E0  52E6               	movf	postinc1,f,c
 20498                           
 20499                           ;stkvar	_sign @ sp[(-4)+2]
 20500                           
 20501                           ;incstack = 0
 20502 ;; hardware stack exceeded
 20503  0194E2  0EFE               	movlw	-2
 20504  0194E4  6AE3               	clrf	plusw1,c
 20505                           
 20506                           ;stkvar	_divisor @ sp[(-4)+-4]
 20507  0194E6  0EF9               	movlw	-7
 20508  0194E8  AEE3               	btfss	plusw1,7,c
 20509  0194EA  D009               	goto	l8698
 20510                           
 20511                           ;stkvar	_divisor @ sp[(-4)+-4]
 20512                           ;stkvar	_divisor @ sp[(-4)+-4]
 20513  0194EC  0EF8               	movlw	-8
 20514  0194EE  6CE3               	negf	plusw1,c
 20515  0194F0  0EF9               	movlw	-7
 20516  0194F2  1EE3               	comf	plusw1,f,c
 20517  0194F4  B0D8               	btfsc	status,0,c
 20518  0194F6  2AE3               	incf	plusw1,f,c
 20519                           
 20520                           ;stkvar	_sign @ sp[(-4)+2]
 20521  0194F8  0EFE               	movlw	-2
 20522  0194FA  6AE3               	clrf	plusw1,c
 20523  0194FC  2AE3               	incf	plusw1,f,c
 20524  0194FE                     l8698:
 20525                           
 20526                           ;stkvar	_dividend @ sp[(-4)+-2]
 20527  0194FE  0EFB               	movlw	-5
 20528  019500  AEE3               	btfss	plusw1,7,c
 20529  019502  D008               	goto	l8704
 20530                           
 20531                           ;stkvar	_dividend @ sp[(-4)+-2]
 20532                           ;stkvar	_dividend @ sp[(-4)+-2]
 20533  019504  0EFA               	movlw	-6
 20534  019506  6CE3               	negf	plusw1,c
 20535  019508  0EFB               	movlw	-5
 20536  01950A  1EE3               	comf	plusw1,f,c
 20537  01950C  B0D8               	btfsc	status,0,c
 20538  01950E  2AE3               	incf	plusw1,f,c
 20539                           
 20540                           ;stkvar	_sign @ sp[(-4)+2]
 20541  019510  0EFE               	movlw	-2
 20542  019512  70E3               	btg	plusw1,0,c
 20543  019514                     l8704:
 20544                           
 20545                           ;stkvar	_quotient @ sp[(-4)+0]
 20546  019514  0EFC               	movlw	-4
 20547  019516  6AE3               	clrf	plusw1,c
 20548  019518  0EFD               	movlw	-3
 20549  01951A  6AE3               	clrf	plusw1,c
 20550                           
 20551                           ;stkvar	_divisor @ sp[(-4)+-4]
 20552  01951C  0EF8               	movlw	-8
 20553  01951E  006F FF8C  F001    	movff	plusw1,btemp
 20554  019524  0EF9               	movlw	-7
 20555  019526  50E3               	movf	plusw1,w,c
 20556  019528  1001               	iorwf	btemp^0,w,c
 20557  01952A  B4D8               	btfsc	status,2,c
 20558  01952C  D066               	goto	u7100
 20559                           
 20560                           ;stkvar	_counter @ sp[(-4)+3]
 20561  01952E  0EFF               	movlw	-1
 20562  019530  6AE3               	clrf	plusw1,c
 20563  019532  D012               	goto	L24
 20564  019534                     l8710:
 20565                           
 20566                           ;stkvar	_divisor @ sp[(-4)+-4]
 20567  019534  0EF8               	movlw	-8
 20568  019536  50E3               	movf	plusw1,w,c
 20569  019538  90D8               	bcf	status,0,c
 20570  01953A  34E8               	rlcf	wreg,w,c
 20571  01953C  6E01               	movwf	btemp^0,c
 20572  01953E  0EF8               	movlw	-8
 20573  019540  0060  F007  FFE3   	movff	btemp,plusw1
 20574  019546  0EF9               	movlw	-7
 20575  019548  50E3               	movf	plusw1,w,c
 20576  01954A  34E8               	rlcf	wreg,w,c
 20577  01954C  6E01               	movwf	btemp^0,c
 20578  01954E  0EF9               	movlw	-7
 20579  019550  0060  F007  FFE3   	movff	btemp,plusw1
 20580                           
 20581                           ;stkvar	_counter @ sp[(-4)+3]
 20582  019556  0EFF               	movlw	-1
 20583  019558                     L24:
 20584  019558  2AE3               	incf	plusw1,f,c
 20585                           
 20586                           ;stkvar	_divisor @ sp[(-4)+-4]
 20587  01955A  0EF9               	movlw	-7
 20588  01955C  AEE3               	btfss	plusw1,7,c
 20589  01955E  D7EA               	goto	l8710
 20590  019560                     u7080:
 20591                           
 20592                           ;stkvar	_quotient @ sp[(-4)+0]
 20593  019560  0EFC               	movlw	-4
 20594  019562  50E3               	movf	plusw1,w,c
 20595  019564  90D8               	bcf	status,0,c
 20596  019566  34E8               	rlcf	wreg,w,c
 20597  019568  6E01               	movwf	btemp^0,c
 20598  01956A  0EFC               	movlw	-4
 20599  01956C  0060  F007  FFE3   	movff	btemp,plusw1
 20600  019572  0EFD               	movlw	-3
 20601  019574  50E3               	movf	plusw1,w,c
 20602  019576  34E8               	rlcf	wreg,w,c
 20603  019578  6E01               	movwf	btemp^0,c
 20604  01957A  0EFD               	movlw	-3
 20605  01957C  0060  F007  FFE3   	movff	btemp,plusw1
 20606                           
 20607                           ;stkvar	_divisor @ sp[(-4)+-4]
 20608  019582  0EF8               	movlw	-8
 20609  019584  006F FF8C  F00B    	movff	plusw1,btemp+10
 20610  01958A  0EF9               	movlw	-7
 20611  01958C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20612                           
 20613                           ;stkvar	_dividend @ sp[(-4)+-2]
 20614  019592  0EFA               	movlw	-6
 20615  019594  006F FF8C  F009    	movff	plusw1,btemp+8
 20616  01959A  0EFB               	movlw	-5
 20617  01959C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20618  0195A2  500B               	movf	(btemp+10)^0,w,c
 20619  0195A4  5C09               	subwf	(btemp+8)^0,w,c
 20620  0195A6  500C               	movf	(btemp+11)^0,w,c
 20621  0195A8  580A               	subwfb	(btemp+9)^0,w,c
 20622  0195AA  A0D8               	btfss	status,0,c
 20623  0195AC  D016               	goto	l8724
 20624                           
 20625                           ;stkvar	_divisor @ sp[(-4)+-4]
 20626                           ;stkvar	_dividend @ sp[(-4)+-2]
 20627  0195AE  0EFA               	movlw	-6
 20628  0195B0  50E3               	movf	plusw1,w,c
 20629  0195B2  6E01               	movwf	btemp^0,c
 20630  0195B4  0EF8               	movlw	-8
 20631  0195B6  50E3               	movf	plusw1,w,c
 20632  0195B8  5E01               	subwf	btemp^0,f,c
 20633  0195BA  0EFA               	movlw	-6
 20634  0195BC  0060  F007  FFE3   	movff	btemp,plusw1
 20635  0195C2  0EFB               	movlw	-5
 20636  0195C4  50E3               	movf	plusw1,w,c
 20637  0195C6  6E01               	movwf	btemp^0,c
 20638  0195C8  0EF9               	movlw	-7
 20639  0195CA  50E3               	movf	plusw1,w,c
 20640  0195CC  5A01               	subwfb	btemp^0,f,c
 20641  0195CE  0EFB               	movlw	-5
 20642  0195D0  0060  F007  FFE3   	movff	btemp,plusw1
 20643                           
 20644                           ;stkvar	_quotient @ sp[(-4)+0]
 20645  0195D6  0EFC               	movlw	-4
 20646  0195D8  80E3               	bsf	plusw1,0,c
 20647  0195DA                     l8724:
 20648                           
 20649                           ;stkvar	_divisor @ sp[(-4)+-4]
 20650  0195DA  90D8               	bcf	status,0,c
 20651  0195DC  0EF9               	movlw	-7
 20652  0195DE  32E3               	rrcf	plusw1,f,c
 20653  0195E0  0EF8               	movlw	-8
 20654  0195E2  32E3               	rrcf	plusw1,f,c
 20655                           
 20656                           ;stkvar	_counter @ sp[(-4)+3]
 20657  0195E4  0EFF               	movlw	-1
 20658  0195E6  50E3               	movf	plusw1,w,c
 20659  0195E8  6E01               	movwf	btemp^0,c
 20660  0195EA  0E01               	movlw	1
 20661  0195EC  5E01               	subwf	btemp^0,f,c
 20662  0195EE  0EFF               	movlw	-1
 20663  0195F0  0060  F007  FFE3   	movff	btemp,plusw1
 20664  0195F6  A4D8               	btfss	status,2,c
 20665  0195F8  D7B3               	goto	u7080
 20666  0195FA                     u7100:
 20667                           
 20668                           ;stkvar	_sign @ sp[(-4)+2]
 20669  0195FA  0EFE               	movlw	-2
 20670  0195FC  50E3               	movf	plusw1,w,c
 20671  0195FE  B4D8               	btfsc	status,2,c
 20672  019600  D006               	goto	l8732
 20673                           
 20674                           ;stkvar	_quotient @ sp[(-4)+0]
 20675                           ;stkvar	_quotient @ sp[(-4)+0]
 20676  019602  0EFC               	movlw	-4
 20677  019604  6CE3               	negf	plusw1,c
 20678  019606  0EFD               	movlw	-3
 20679  019608  1EE3               	comf	plusw1,f,c
 20680  01960A  B0D8               	btfsc	status,0,c
 20681  01960C  2AE3               	incf	plusw1,f,c
 20682  01960E                     l8732:
 20683                           
 20684                           ;stkvar	_quotient @ sp[(-4)+0]
 20685  01960E  0EFC               	movlw	-4
 20686  019610  006F FF8C  F001    	movff	plusw1,btemp
 20687  019616  0EFD               	movlw	-3
 20688  019618  006F FF8C  F002    	movff	plusw1,btemp+1
 20689                           
 20690                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20691  01961E  0EF8               	movlw	248
 20692  019620  26E1               	addwf	fsr1l,f,c
 20693  019622  0EFF               	movlw	255
 20694  019624  22E2               	addwfc	fsr1h,f,c
 20695  019626  0012               	return		;funcret
 20696  019628                     __end_of___awdiv:
 20697                           	opt callstack 0
 20698                           
 20699 ;; *************** function _dtoa *****************
 20700 ;; Defined at:
 20701 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20702 ;; Parameters:    Size  Location     Type
 20703 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20704 ;;		 -> f(6), NULL(0), 
 20705 ;;  d               8  [STACK] long long 
 20706 ;; Auto vars:     Size  Location     Type
 20707 ;;  n               8  [STACK] long long 
 20708 ;;  i               2  [STACK] int 
 20709 ;;  s               2  [STACK] int 
 20710 ;;  w               2  [STACK] int 
 20711 ;;  p               2  [STACK] int 
 20712 ;; Return value:  Size  Location     Type
 20713 ;;                  2  [STACK] int 
 20714 ;; Registers used:
 20715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20716 ;; Tracked objects:
 20717 ;;		On entry : 0/0
 20718 ;;		On exit  : 0/0
 20719 ;;		Unchanged: 0/0
 20720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20725 ;;Total ram usage:        0 bytes
 20726 ;; Hardware stack levels used:    1
 20727 ;; Hardware stack levels required when called:   20
 20728 ;; This function calls:
 20729 ;;		___aodiv
 20730 ;;		___aomod
 20731 ;;		_abs
 20732 ;;		_pad
 20733 ;; This function is called by:
 20734 ;;		_vfpfcnvrt
 20735 ;; This function uses a reentrant model
 20736 ;;
 20737                           
 20738                           	psect	text73
 20739  01583E                     __ptext73:
 20740                           	opt callstack 0
 20741  01583E                     _dtoa:
 20742                           	opt callstack 0
 20743                           
 20744                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20745  01583E  0E12               	movlw	18
 20746  015840  26E1               	addwf	fsr1l,f,c
 20747  015842  0E00               	movlw	0
 20748  015844  22E2               	addwfc	fsr1h,f,c
 20749                           
 20750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20751                           ;stkvar	_d @ sp[(-18)+-10]
 20752                           
 20753                           ;incstack = 0
 20754 ;; hardware stack exceeded
 20755  015846  0EE4               	movlw	228
 20756  015848  24E1               	addwf	fsr1l,w,c
 20757  01584A  6ED9               	movwf	fsr2l,c
 20758  01584C  0EFF               	movlw	255
 20759  01584E  20E2               	addwfc	fsr1h,w,c
 20760  015850  6EDA               	movwf	fsr2h,c
 20761                           
 20762                           ;stkvar	_n @ sp[(-18)+2]
 20763  015852  0E08               	movlw	8
 20764  015854  6E01               	movwf	btemp^0,c
 20765  015856  0EF0               	movlw	-16
 20766  015858                     us1104999:
 20767  015858  006F FF7B FFE3     	movff	postinc2,plusw1
 20768  01585E  28E8               	incf	wreg,w,c
 20769  015860  2E01               	decfsz	btemp^0,f,c
 20770  015862  D7FA               	bra	us1104999
 20771                           
 20772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20773                           ;stkvar	_n @ sp[(-18)+2]
 20774  015864  0EF7               	movlw	-9
 20775  015866  AEE3               	btfss	plusw1,7,c
 20776  015868  D002               	goto	u11050
 20777  01586A  0E01               	movlw	1
 20778  01586C  D001               	goto	u11060
 20779  01586E                     u11050:
 20780  01586E  0E00               	movlw	0
 20781  015870                     u11060:
 20782  015870  6E0B               	movwf	(btemp+10)^0,c
 20783  015872  6A0C               	clrf	(btemp+11)^0,c
 20784                           
 20785                           ;stkvar	_s @ sp[(-18)+12]
 20786  015874  0EFA               	movlw	-6
 20787  015876  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20788  01587C  0EFB               	movlw	-5
 20789  01587E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20790                           
 20791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20792                           ;stkvar	_s @ sp[(-18)+12]
 20793  015884  0EFA               	movlw	-6
 20794  015886  006F FF8C  F001    	movff	plusw1,btemp
 20795  01588C  0EFB               	movlw	-5
 20796  01588E  50E3               	movf	plusw1,w,c
 20797  015890  1001               	iorwf	btemp^0,w,c
 20798  015892  B4D8               	btfsc	status,2,c
 20799  015894  D025               	goto	u11080
 20800                           
 20801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20802                           ;stkvar	_n @ sp[(-18)+2]
 20803                           ;stkvar	_n @ sp[(-18)+2]
 20804  015896  0EF0               	movlw	-16
 20805  015898  6CE3               	negf	plusw1,c
 20806  01589A  0EF1               	movlw	-15
 20807  01589C  1EE3               	comf	plusw1,f,c
 20808  01589E  0EF2               	movlw	-14
 20809  0158A0  1EE3               	comf	plusw1,f,c
 20810  0158A2  0EF3               	movlw	-13
 20811  0158A4  1EE3               	comf	plusw1,f,c
 20812  0158A6  0EF4               	movlw	-12
 20813  0158A8  1EE3               	comf	plusw1,f,c
 20814  0158AA  0EF5               	movlw	-11
 20815  0158AC  1EE3               	comf	plusw1,f,c
 20816  0158AE  0EF6               	movlw	-10
 20817  0158B0  1EE3               	comf	plusw1,f,c
 20818  0158B2  0EF7               	movlw	-9
 20819  0158B4  1EE3               	comf	plusw1,f,c
 20820  0158B6  E314               	bnc	u11080
 20821  0158B8  0EF1               	movlw	-15
 20822  0158BA  2AE3               	incf	plusw1,f,c
 20823  0158BC  E311               	bnc	u11080
 20824  0158BE  0EF2               	movlw	-14
 20825  0158C0  2AE3               	incf	plusw1,f,c
 20826  0158C2  E30E               	bnc	u11080
 20827  0158C4  0EF3               	movlw	-13
 20828  0158C6  2AE3               	incf	plusw1,f,c
 20829  0158C8  E30B               	bnc	u11080
 20830  0158CA  0EF4               	movlw	-12
 20831  0158CC  2AE3               	incf	plusw1,f,c
 20832  0158CE  E308               	bnc	u11080
 20833  0158D0  0EF5               	movlw	-11
 20834  0158D2  2AE3               	incf	plusw1,f,c
 20835  0158D4  E305               	bnc	u11080
 20836  0158D6  0EF6               	movlw	-10
 20837  0158D8  2AE3               	incf	plusw1,f,c
 20838  0158DA  E302               	bnc	u11080
 20839  0158DC  0EF7               	movlw	-9
 20840  0158DE  2AE3               	incf	plusw1,f,c
 20841  0158E0                     u11080:
 20842                           
 20843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20844  0158E0  AE3D               	btfss	(_prec+1)^0,7,c
 20845                           
 20846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20847  0158E2  923E               	bcf	_flags^0,1,c
 20848                           
 20849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20850  0158E4  BE3D               	btfsc	(_prec+1)^0,7,c
 20851  0158E6  D005               	goto	u11100
 20852  0158E8  503D               	movf	(_prec+1)^0,w,c
 20853  0158EA  E110               	bnz	l12226
 20854  0158EC  043C               	decf	_prec^0,w,c
 20855  0158EE  B0D8               	btfsc	status,0,c
 20856  0158F0  D00D               	goto	l12226
 20857  0158F2                     u11100:
 20858  0158F2  0E01               	movlw	1
 20859  0158F4  6E0B               	movwf	(btemp+10)^0,c
 20860  0158F6  0E00               	movlw	0
 20861  0158F8  6E0C               	movwf	(btemp+11)^0,c
 20862                           
 20863                           ;stkvar	_p @ sp[(-18)+16]
 20864  0158FA  0EFE               	movlw	-2
 20865  0158FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20866  015902  0EFF               	movlw	-1
 20867  015904  0060  F033  FFE3   	movff	btemp+11,plusw1
 20868  01590A  D008               	goto	l2244
 20869  01590C                     l12226:
 20870                           
 20871                           ;stkvar	_p @ sp[(-18)+16]
 20872  01590C  0EFE               	movlw	-2
 20873  01590E  0060  F0F3  FFE3   	movff	_prec,plusw1
 20874  015914  0EFF               	movlw	-1
 20875  015916  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20876  01591C                     l2244:
 20877                           
 20878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20879                           ;stkvar	_w @ sp[(-18)+14]
 20880  01591C  0EFC               	movlw	-4
 20881  01591E  0060  F0EB  FFE3   	movff	_width,plusw1
 20882  015924  0EFD               	movlw	-3
 20883  015926  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20884                           
 20885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20886                           ;stkvar	_s @ sp[(-18)+12]
 20887  01592C  0EFA               	movlw	-6
 20888  01592E  006F FF8C  F001    	movff	plusw1,btemp
 20889  015934  0EFB               	movlw	-5
 20890  015936  50E3               	movf	plusw1,w,c
 20891  015938  1001               	iorwf	btemp^0,w,c
 20892  01593A  A4D8               	btfss	status,2,c
 20893  01593C  D002               	goto	u11120
 20894  01593E  A43E               	btfss	_flags^0,2,c
 20895  015940  D00A               	goto	l12234
 20896  015942                     u11120:
 20897                           
 20898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20899                           ;stkvar	_w @ sp[(-18)+14]
 20900  015942  50E1               	movf	fsr1l,w,c
 20901  015944  0FFC               	addlw	-4
 20902  015946  6ED9               	movwf	fsr2l,c
 20903  015948  50E2               	movf	fsr1h,w,c
 20904  01594A  6EDA               	movwf	fsr2h,c
 20905  01594C  0EFF               	movlw	255
 20906  01594E  22DA               	addwfc	fsr2h,f,c
 20907  015950  06DE               	decf	postinc2,f,c
 20908  015952  0E00               	movlw	0
 20909  015954  5ADD               	subwfb	postdec2,f,c
 20910  015956                     l12234:
 20911                           
 20912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20913  015956  0E4F               	movlw	79
 20914  015958  6E0B               	movwf	(btemp+10)^0,c
 20915  01595A  0E00               	movlw	0
 20916  01595C  6E0C               	movwf	(btemp+11)^0,c
 20917                           
 20918                           ;stkvar	_i @ sp[(-18)+10]
 20919  01595E  0EF8               	movlw	-8
 20920  015960  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20921  015966  0EF9               	movlw	-7
 20922  015968  0060  F033  FFE3   	movff	btemp+11,plusw1
 20923                           
 20924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20925  01596E  0102               	movlb	2	; () banked
 20926  015970  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20927                           
 20928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20929  015972  D109               	goto	l12248
 20930  015974                     l12238:
 20931                           
 20932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20933                           ;stkvar	_i @ sp[(-18)+10]
 20934  015974  50E1               	movf	fsr1l,w,c
 20935  015976  0FF8               	addlw	-8
 20936  015978  6ED9               	movwf	fsr2l,c
 20937  01597A  50E2               	movf	fsr1h,w,c
 20938  01597C  6EDA               	movwf	fsr2h,c
 20939  01597E  0EFF               	movlw	255
 20940  015980  22DA               	addwfc	fsr2h,f,c
 20941  015982  06DE               	decf	postinc2,f,c
 20942  015984  0E00               	movlw	0
 20943  015986  5ADD               	subwfb	postdec2,f,c
 20944                           
 20945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20946  015988  0E0A               	movlw	10
 20947  01598A  6EE6               	movwf	postinc1,c
 20948  01598C  0E00               	movlw	0
 20949  01598E  6EE6               	movwf	postinc1,c
 20950  015990  0E00               	movlw	0
 20951  015992  6EE6               	movwf	postinc1,c
 20952  015994  0E00               	movlw	0
 20953  015996  6EE6               	movwf	postinc1,c
 20954  015998  0E00               	movlw	0
 20955  01599A  6EE6               	movwf	postinc1,c
 20956  01599C  0E00               	movlw	0
 20957  01599E  6EE6               	movwf	postinc1,c
 20958  0159A0  0E00               	movlw	0
 20959  0159A2  6EE6               	movwf	postinc1,c
 20960  0159A4  0E00               	movlw	0
 20961  0159A6  6EE6               	movwf	postinc1,c
 20962                           
 20963                           ;stkvar	_n @ sp[(-26)+2]
 20964  0159A8  50E1               	movf	fsr1l,w,c
 20965  0159AA  0FE8               	addlw	-24
 20966  0159AC  6ED9               	movwf	fsr2l,c
 20967  0159AE  50E2               	movf	fsr1h,w,c
 20968  0159B0  6EDA               	movwf	fsr2h,c
 20969  0159B2  0EFF               	movlw	255
 20970  0159B4  22DA               	addwfc	fsr2h,f,c
 20971  0159B6  006F FF7B FFE6     	movff	postinc2,postinc1
 20972  0159BC  006F FF7B FFE6     	movff	postinc2,postinc1
 20973  0159C2  006F FF7B FFE6     	movff	postinc2,postinc1
 20974  0159C8  006F FF7B FFE6     	movff	postinc2,postinc1
 20975  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
 20976  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 20977  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 20978  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 20979  0159E6  EC2C  F0BF         	call	___aomod	;wreg free
 20980  0159EA  52E5               	movf	postdec1,f,c
 20981  0159EC  006F FF9C  F018    	movff	indf1,btemp+23
 20982  0159F2  52E5               	movf	postdec1,f,c
 20983  0159F4  006F FF9C  F017    	movff	indf1,btemp+22
 20984  0159FA  52E5               	movf	postdec1,f,c
 20985  0159FC  006F FF9C  F016    	movff	indf1,btemp+21
 20986  015A02  52E5               	movf	postdec1,f,c
 20987  015A04  006F FF9C  F015    	movff	indf1,btemp+20
 20988  015A0A  52E5               	movf	postdec1,f,c
 20989  015A0C  006F FF9C  F014    	movff	indf1,btemp+19
 20990  015A12  52E5               	movf	postdec1,f,c
 20991  015A14  006F FF9C  F013    	movff	indf1,btemp+18
 20992  015A1A  52E5               	movf	postdec1,f,c
 20993  015A1C  006F FF9C  F012    	movff	indf1,btemp+17
 20994  015A22  52E5               	movf	postdec1,f,c
 20995  015A24  006F FF9C  F011    	movff	indf1,btemp+16
 20996  015A2A  0EF8               	movlw	248
 20997  015A2C  26E1               	addwf	fsr1l,f,c
 20998  015A2E  0EFF               	movlw	255
 20999  015A30  22E2               	addwfc	fsr1h,f,c
 21000  015A32  0060  F044  F00B   	movff	btemp+16,btemp+10
 21001  015A38  0060  F048  F00C   	movff	btemp+17,btemp+11
 21002  015A3E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21003  015A44  0060  F033  FFE6   	movff	btemp+11,postinc1
 21004  015A4A  ECCD  F0DC         	call	_abs	;wreg free
 21005  015A4E  0E30               	movlw	48
 21006  015A50  2601               	addwf	btemp^0,f,c
 21007                           
 21008                           ;stkvar	_i @ sp[(-18)+10]
 21009  015A52  0EF8               	movlw	-8
 21010  015A54  006F FF8C  F00B    	movff	plusw1,btemp+10
 21011  015A5A  0EF9               	movlw	-7
 21012  015A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21013  015A62  0E97               	movlw	low _dbuf
 21014  015A64  240B               	addwf	(btemp+10)^0,w,c
 21015  015A66  6ED9               	movwf	fsr2l,c
 21016  015A68  0E02               	movlw	high _dbuf
 21017  015A6A  200C               	addwfc	(btemp+11)^0,w,c
 21018  015A6C  6EDA               	movwf	fsr2h,c
 21019  015A6E  0060  F007  FFDF   	movff	btemp,indf2
 21020                           
 21021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21022                           ;stkvar	_p @ sp[(-18)+16]
 21023  015A74  50E1               	movf	fsr1l,w,c
 21024  015A76  0FFE               	addlw	-2
 21025  015A78  6ED9               	movwf	fsr2l,c
 21026  015A7A  50E2               	movf	fsr1h,w,c
 21027  015A7C  6EDA               	movwf	fsr2h,c
 21028  015A7E  0EFF               	movlw	255
 21029  015A80  22DA               	addwfc	fsr2h,f,c
 21030  015A82  06DE               	decf	postinc2,f,c
 21031  015A84  0E00               	movlw	0
 21032  015A86  5ADD               	subwfb	postdec2,f,c
 21033                           
 21034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21035                           ;stkvar	_w @ sp[(-18)+14]
 21036  015A88  50E1               	movf	fsr1l,w,c
 21037  015A8A  0FFC               	addlw	-4
 21038  015A8C  6ED9               	movwf	fsr2l,c
 21039  015A8E  50E2               	movf	fsr1h,w,c
 21040  015A90  6EDA               	movwf	fsr2h,c
 21041  015A92  0EFF               	movlw	255
 21042  015A94  22DA               	addwfc	fsr2h,f,c
 21043  015A96  06DE               	decf	postinc2,f,c
 21044  015A98  0E00               	movlw	0
 21045  015A9A  5ADD               	subwfb	postdec2,f,c
 21046                           
 21047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21048  015A9C  0E0A               	movlw	10
 21049  015A9E  6EE6               	movwf	postinc1,c
 21050  015AA0  0E00               	movlw	0
 21051  015AA2  6EE6               	movwf	postinc1,c
 21052  015AA4  0E00               	movlw	0
 21053  015AA6  6EE6               	movwf	postinc1,c
 21054  015AA8  0E00               	movlw	0
 21055  015AAA  6EE6               	movwf	postinc1,c
 21056  015AAC  0E00               	movlw	0
 21057  015AAE  6EE6               	movwf	postinc1,c
 21058  015AB0  0E00               	movlw	0
 21059  015AB2  6EE6               	movwf	postinc1,c
 21060  015AB4  0E00               	movlw	0
 21061  015AB6  6EE6               	movwf	postinc1,c
 21062  015AB8  0E00               	movlw	0
 21063  015ABA  6EE6               	movwf	postinc1,c
 21064                           
 21065                           ;stkvar	_n @ sp[(-26)+2]
 21066  015ABC  50E1               	movf	fsr1l,w,c
 21067  015ABE  0FE8               	addlw	-24
 21068  015AC0  6ED9               	movwf	fsr2l,c
 21069  015AC2  50E2               	movf	fsr1h,w,c
 21070  015AC4  6EDA               	movwf	fsr2h,c
 21071  015AC6  0EFF               	movlw	255
 21072  015AC8  22DA               	addwfc	fsr2h,f,c
 21073  015ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 21074  015AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 21075  015AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 21076  015ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 21077  015AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 21078  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 21079  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 21080  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 21081  015AFA  EC8F  F0BB         	call	___aodiv	;wreg free
 21082  015AFE  52E5               	movf	postdec1,f,c
 21083  015B00  006F FF9C  F018    	movff	indf1,btemp+23
 21084  015B06  52E5               	movf	postdec1,f,c
 21085  015B08  006F FF9C  F017    	movff	indf1,btemp+22
 21086  015B0E  52E5               	movf	postdec1,f,c
 21087  015B10  006F FF9C  F016    	movff	indf1,btemp+21
 21088  015B16  52E5               	movf	postdec1,f,c
 21089  015B18  006F FF9C  F015    	movff	indf1,btemp+20
 21090  015B1E  52E5               	movf	postdec1,f,c
 21091  015B20  006F FF9C  F014    	movff	indf1,btemp+19
 21092  015B26  52E5               	movf	postdec1,f,c
 21093  015B28  006F FF9C  F013    	movff	indf1,btemp+18
 21094  015B2E  52E5               	movf	postdec1,f,c
 21095  015B30  006F FF9C  F012    	movff	indf1,btemp+17
 21096  015B36  52E5               	movf	postdec1,f,c
 21097  015B38  006F FF9C  F011    	movff	indf1,btemp+16
 21098  015B3E  0EF8               	movlw	248
 21099  015B40  26E1               	addwf	fsr1l,f,c
 21100  015B42  0EFF               	movlw	255
 21101  015B44  22E2               	addwfc	fsr1h,f,c
 21102                           
 21103                           ;stkvar	_n @ sp[(-18)+2]
 21104  015B46  0EF0               	movlw	-16
 21105  015B48  0060  F047  FFE3   	movff	btemp+16,plusw1
 21106  015B4E  0EF1               	movlw	-15
 21107  015B50  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21108  015B56  0EF2               	movlw	-14
 21109  015B58  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21110  015B5E  0EF3               	movlw	-13
 21111  015B60  0060  F053  FFE3   	movff	btemp+19,plusw1
 21112  015B66  0EF4               	movlw	-12
 21113  015B68  0060  F057  FFE3   	movff	btemp+20,plusw1
 21114  015B6E  0EF5               	movlw	-11
 21115  015B70  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21116  015B76  0EF6               	movlw	-10
 21117  015B78  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21118  015B7E  0EF7               	movlw	-9
 21119  015B80  0060  F063  FFE3   	movff	btemp+23,plusw1
 21120  015B86                     l12248:
 21121                           
 21122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21123                           ;stkvar	_i @ sp[(-18)+10]
 21124  015B86  0EF9               	movlw	-7
 21125  015B88  BEE3               	btfsc	plusw1,7,c
 21126  015B8A  D036               	goto	u11170
 21127  015B8C  0EF9               	movlw	-7
 21128  015B8E  50E3               	movf	plusw1,w,c
 21129  015B90  E104               	bnz	u11130
 21130  015B92  0EF8               	movlw	-8
 21131  015B94  04E3               	decf	plusw1,w,c
 21132  015B96  A0D8               	btfss	status,0,c
 21133  015B98  D02F               	goto	u11170
 21134  015B9A                     u11130:
 21135                           
 21136                           ;stkvar	_n @ sp[(-18)+2]
 21137  015B9A  0EF0               	movlw	-16
 21138  015B9C  50E3               	movf	plusw1,w,c
 21139  015B9E  E115               	bnz	u11141
 21140  015BA0  0EF1               	movlw	-15
 21141  015BA2  50E3               	movf	plusw1,w,c
 21142  015BA4  E112               	bnz	u11141
 21143  015BA6  0EF2               	movlw	-14
 21144  015BA8  50E3               	movf	plusw1,w,c
 21145  015BAA  E10F               	bnz	u11141
 21146  015BAC  0EF3               	movlw	-13
 21147  015BAE  50E3               	movf	plusw1,w,c
 21148  015BB0  E10C               	bnz	u11141
 21149  015BB2  0EF4               	movlw	-12
 21150  015BB4  50E3               	movf	plusw1,w,c
 21151  015BB6  E109               	bnz	u11141
 21152  015BB8  0EF5               	movlw	-11
 21153  015BBA  50E3               	movf	plusw1,w,c
 21154  015BBC  E106               	bnz	u11141
 21155  015BBE  0EF6               	movlw	-10
 21156  015BC0  50E3               	movf	plusw1,w,c
 21157  015BC2  E103               	bnz	u11141
 21158  015BC4  0EF7               	movlw	-9
 21159  015BC6  50E3               	movf	plusw1,w,c
 21160  015BC8  A4D8               	btfss	status,2,c
 21161  015BCA                     u11141:
 21162  015BCA  D6D4               	goto	l12238
 21163                           
 21164                           ;stkvar	_p @ sp[(-18)+16]
 21165  015BCC  0EFF               	movlw	-1
 21166  015BCE  BEE3               	btfsc	plusw1,7,c
 21167  015BD0  D007               	goto	u11150
 21168  015BD2  0EFF               	movlw	-1
 21169  015BD4  50E3               	movf	plusw1,w,c
 21170  015BD6  E103               	bnz	u11151
 21171  015BD8  0EFE               	movlw	-2
 21172  015BDA  04E3               	decf	plusw1,w,c
 21173  015BDC  B0D8               	btfsc	status,0,c
 21174  015BDE                     u11151:
 21175  015BDE  D6CA               	goto	l12238
 21176  015BE0                     u11150:
 21177                           
 21178                           ;stkvar	_w @ sp[(-18)+14]
 21179  015BE0  0EFD               	movlw	-3
 21180  015BE2  BEE3               	btfsc	plusw1,7,c
 21181  015BE4  D009               	goto	u11170
 21182  015BE6  0EFD               	movlw	-3
 21183  015BE8  50E3               	movf	plusw1,w,c
 21184  015BEA  E104               	bnz	u11160
 21185  015BEC  0EFC               	movlw	-4
 21186  015BEE  04E3               	decf	plusw1,w,c
 21187  015BF0  A0D8               	btfss	status,0,c
 21188  015BF2  D002               	goto	u11170
 21189  015BF4                     u11160:
 21190  015BF4  B23E               	btfsc	_flags^0,1,c
 21191  015BF6  D6BE               	goto	l12238
 21192  015BF8                     u11170:
 21193                           
 21194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21195                           ;stkvar	_s @ sp[(-18)+12]
 21196  015BF8  0EFA               	movlw	-6
 21197  015BFA  006F FF8C  F001    	movff	plusw1,btemp
 21198  015C00  0EFB               	movlw	-5
 21199  015C02  50E3               	movf	plusw1,w,c
 21200  015C04  1001               	iorwf	btemp^0,w,c
 21201  015C06  A4D8               	btfss	status,2,c
 21202  015C08  D002               	goto	u11190
 21203  015C0A  A43E               	btfss	_flags^0,2,c
 21204  015C0C  D033               	goto	l12272
 21205  015C0E                     u11190:
 21206                           
 21207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21208                           ;stkvar	_i @ sp[(-18)+10]
 21209  015C0E  50E1               	movf	fsr1l,w,c
 21210  015C10  0FF8               	addlw	-8
 21211  015C12  6ED9               	movwf	fsr2l,c
 21212  015C14  50E2               	movf	fsr1h,w,c
 21213  015C16  6EDA               	movwf	fsr2h,c
 21214  015C18  0EFF               	movlw	255
 21215  015C1A  22DA               	addwfc	fsr2h,f,c
 21216  015C1C  06DE               	decf	postinc2,f,c
 21217  015C1E  0E00               	movlw	0
 21218  015C20  5ADD               	subwfb	postdec2,f,c
 21219                           
 21220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21221                           ;stkvar	_s @ sp[(-18)+12]
 21222  015C22  0EFA               	movlw	-6
 21223  015C24  006F FF8C  F001    	movff	plusw1,btemp
 21224  015C2A  0EFB               	movlw	-5
 21225  015C2C  50E3               	movf	plusw1,w,c
 21226  015C2E  1001               	iorwf	btemp^0,w,c
 21227  015C30  A4D8               	btfss	status,2,c
 21228  015C32  D002               	goto	l12268
 21229  015C34  0E2B               	movlw	43
 21230  015C36  D001               	goto	L25
 21231  015C38                     l12268:
 21232  015C38  0E2D               	movlw	45
 21233  015C3A                     L25:
 21234  015C3A  6E0B               	movwf	(btemp+10)^0,c
 21235  015C3C  0E00               	movlw	0
 21236  015C3E  6E0C               	movwf	(btemp+11)^0,c
 21237                           
 21238                           ;stkvar	_dtoa$5731 @ sp[(-18)+0]
 21239  015C40  0EEE               	movlw	-18
 21240  015C42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21241  015C48  0EEF               	movlw	-17
 21242  015C4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21243                           
 21244                           ;stkvar	_dtoa$5731 @ sp[(-18)+0]
 21245                           ;stkvar	_i @ sp[(-18)+10]
 21246  015C50  0EF8               	movlw	-8
 21247  015C52  006F FF8C  F00B    	movff	plusw1,btemp+10
 21248  015C58  0EF9               	movlw	-7
 21249  015C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21250  015C60  0E97               	movlw	low _dbuf
 21251  015C62  240B               	addwf	(btemp+10)^0,w,c
 21252  015C64  6ED9               	movwf	fsr2l,c
 21253  015C66  0E02               	movlw	high _dbuf
 21254  015C68  200C               	addwfc	(btemp+11)^0,w,c
 21255  015C6A  6EDA               	movwf	fsr2h,c
 21256  015C6C  0EEE               	movlw	-18
 21257  015C6E  006F FF8F FFDF     	movff	plusw1,indf2
 21258  015C74                     l12272:
 21259                           
 21260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21261                           ;stkvar	_w @ sp[(-18)+14]
 21262  015C74  0EFC               	movlw	-4
 21263  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21264  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21265                           
 21266                           ;stkvar	_i @ sp[(-20)+10]
 21267  015C82  0E97               	movlw	low _dbuf
 21268  015C84  6E0B               	movwf	(btemp+10)^0,c
 21269  015C86  0E02               	movlw	high _dbuf
 21270  015C88  6E0C               	movwf	(btemp+11)^0,c
 21271  015C8A  0EF6               	movlw	-10
 21272  015C8C  50E3               	movf	plusw1,w,c
 21273  015C8E  260B               	addwf	(btemp+10)^0,f,c
 21274  015C90  0EF7               	movlw	-9
 21275  015C92  50E3               	movf	plusw1,w,c
 21276  015C94  220C               	addwfc	(btemp+11)^0,f,c
 21277  015C96  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21278  015C9C  0060  F033  FFE6   	movff	btemp+11,postinc1
 21279                           
 21280                           ;stkvar	_fp @ sp[(-22)+-2]
 21281  015CA2  0EE8               	movlw	-24
 21282  015CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 21283  015CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 21284  015CB0  EC90  F0CE         	call	_pad	;wreg free
 21285                           
 21286                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21287  015CB4  0EE4               	movlw	228
 21288  015CB6  26E1               	addwf	fsr1l,f,c
 21289  015CB8  0EFF               	movlw	255
 21290  015CBA  22E2               	addwfc	fsr1h,f,c
 21291  015CBC  0012               	return		;funcret
 21292  015CBE                     __end_of_dtoa:
 21293                           	opt callstack 0
 21294                           
 21295 ;; *************** function _abs *****************
 21296 ;; Defined at:
 21297 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21298 ;; Parameters:    Size  Location     Type
 21299 ;;  a               2  [STACK] int 
 21300 ;; Auto vars:     Size  Location     Type
 21301 ;;		None
 21302 ;; Return value:  Size  Location     Type
 21303 ;;                  2  [STACK] int 
 21304 ;; Registers used:
 21305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21306 ;; Tracked objects:
 21307 ;;		On entry : 0/2
 21308 ;;		On exit  : 0/0
 21309 ;;		Unchanged: 0/0
 21310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21315 ;;Total ram usage:        0 bytes
 21316 ;; Hardware stack levels used:    1
 21317 ;; Hardware stack levels required when called:   15
 21318 ;; This function calls:
 21319 ;;		Nothing
 21320 ;; This function is called by:
 21321 ;;		_dtoa
 21322 ;; This function uses a reentrant model
 21323 ;;
 21324                           
 21325                           	psect	text74
 21326  01B99A                     __ptext74:
 21327                           	opt callstack 0
 21328  01B99A                     _abs:
 21329                           	opt callstack 0
 21330                           
 21331                           ;stkvar	_a @ sp[(0)+-2]
 21332                           
 21333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21334                           ;incstack = 0
 21335 ;; hardware stack exceeded
 21336  01B99A  0EFF               	movlw	-1
 21337  01B99C  BEE3               	btfsc	plusw1,7,c
 21338  01B99E  D007               	goto	u6060
 21339  01B9A0  0EFF               	movlw	-1
 21340  01B9A2  50E3               	movf	plusw1,w,c
 21341  01B9A4  E112               	bnz	l8186
 21342  01B9A6  0EFE               	movlw	-2
 21343  01B9A8  04E3               	decf	plusw1,w,c
 21344  01B9AA  B0D8               	btfsc	status,0,c
 21345  01B9AC  D00E               	goto	l8186
 21346  01B9AE                     u6060:
 21347                           
 21348                           ;stkvar	_a @ sp[(0)+-2]
 21349  01B9AE  0EFE               	movlw	-2
 21350  01B9B0  006F FF8C  F001    	movff	plusw1,btemp
 21351  01B9B6  1E01               	comf	btemp^0,f,c
 21352  01B9B8  0EFF               	movlw	-1
 21353  01B9BA  006F FF8C  F002    	movff	plusw1,btemp+1
 21354  01B9C0  1E02               	comf	(btemp+1)^0,f,c
 21355  01B9C2  2A01               	incf	btemp^0,f,c
 21356  01B9C4  B4D8               	btfsc	status,2,c
 21357  01B9C6  2A02               	incf	(btemp+1)^0,f,c
 21358  01B9C8  D008               	goto	l3170
 21359  01B9CA                     l8186:
 21360                           
 21361                           ;stkvar	_a @ sp[(0)+-2]
 21362  01B9CA  0EFE               	movlw	-2
 21363  01B9CC  006F FF8C  F001    	movff	plusw1,btemp
 21364  01B9D2  0EFF               	movlw	-1
 21365  01B9D4  006F FF8C  F002    	movff	plusw1,btemp+1
 21366  01B9DA                     l3170:
 21367                           
 21368                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21369  01B9DA  52E5               	movf	postdec1,f,c
 21370  01B9DC  52E5               	movf	postdec1,f,c
 21371  01B9DE  0012               	return		;funcret
 21372  01B9E0                     __end_of_abs:
 21373                           	opt callstack 0
 21374                           
 21375 ;; *************** function ___aomod *****************
 21376 ;; Defined at:
 21377 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21378 ;; Parameters:    Size  Location     Type
 21379 ;;  dividend        8  [STACK] long long 
 21380 ;;  divisor         8  [STACK] long long 
 21381 ;; Auto vars:     Size  Location     Type
 21382 ;;  sign            1  [STACK] unsigned char 
 21383 ;;  counter         1  [STACK] unsigned char 
 21384 ;; Return value:  Size  Location     Type
 21385 ;;                  8  [STACK] long long 
 21386 ;; Registers used:
 21387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21388 ;; Tracked objects:
 21389 ;;		On entry : 0/2
 21390 ;;		On exit  : 0/0
 21391 ;;		Unchanged: 0/0
 21392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21397 ;;Total ram usage:        0 bytes
 21398 ;; Hardware stack levels used:    1
 21399 ;; Hardware stack levels required when called:   15
 21400 ;; This function calls:
 21401 ;;		Nothing
 21402 ;; This function is called by:
 21403 ;;		_dtoa
 21404 ;; This function uses a reentrant model
 21405 ;;
 21406                           
 21407                           	psect	text75
 21408  017E58                     __ptext75:
 21409                           	opt callstack 0
 21410  017E58                     ___aomod:
 21411                           	opt callstack 0
 21412                           
 21413                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21414  017E58  52E6               	movf	postinc1,f,c
 21415  017E5A  52E6               	movf	postinc1,f,c
 21416                           
 21417                           ;stkvar	_sign @ sp[(-2)+0]
 21418                           
 21419                           ;incstack = 0
 21420 ;; hardware stack exceeded
 21421  017E5C  0EFE               	movlw	-2
 21422  017E5E  6AE3               	clrf	plusw1,c
 21423                           
 21424                           ;stkvar	_dividend @ sp[(-2)+-8]
 21425  017E60  0EFD               	movlw	-3
 21426  017E62  AEE3               	btfss	plusw1,7,c
 21427  017E64  D028               	goto	l8344
 21428                           
 21429                           ;stkvar	_dividend @ sp[(-2)+-8]
 21430                           ;stkvar	_dividend @ sp[(-2)+-8]
 21431  017E66  0EF6               	movlw	-10
 21432  017E68  6CE3               	negf	plusw1,c
 21433  017E6A  0EF7               	movlw	-9
 21434  017E6C  1EE3               	comf	plusw1,f,c
 21435  017E6E  0EF8               	movlw	-8
 21436  017E70  1EE3               	comf	plusw1,f,c
 21437  017E72  0EF9               	movlw	-7
 21438  017E74  1EE3               	comf	plusw1,f,c
 21439  017E76  0EFA               	movlw	-6
 21440  017E78  1EE3               	comf	plusw1,f,c
 21441  017E7A  0EFB               	movlw	-5
 21442  017E7C  1EE3               	comf	plusw1,f,c
 21443  017E7E  0EFC               	movlw	-4
 21444  017E80  1EE3               	comf	plusw1,f,c
 21445  017E82  0EFD               	movlw	-3
 21446  017E84  1EE3               	comf	plusw1,f,c
 21447  017E86  E314               	bnc	u6490
 21448  017E88  0EF7               	movlw	-9
 21449  017E8A  2AE3               	incf	plusw1,f,c
 21450  017E8C  E311               	bnc	u6490
 21451  017E8E  0EF8               	movlw	-8
 21452  017E90  2AE3               	incf	plusw1,f,c
 21453  017E92  E30E               	bnc	u6490
 21454  017E94  0EF9               	movlw	-7
 21455  017E96  2AE3               	incf	plusw1,f,c
 21456  017E98  E30B               	bnc	u6490
 21457  017E9A  0EFA               	movlw	-6
 21458  017E9C  2AE3               	incf	plusw1,f,c
 21459  017E9E  E308               	bnc	u6490
 21460  017EA0  0EFB               	movlw	-5
 21461  017EA2  2AE3               	incf	plusw1,f,c
 21462  017EA4  E305               	bnc	u6490
 21463  017EA6  0EFC               	movlw	-4
 21464  017EA8  2AE3               	incf	plusw1,f,c
 21465  017EAA  E302               	bnc	u6490
 21466  017EAC  0EFD               	movlw	-3
 21467  017EAE  2AE3               	incf	plusw1,f,c
 21468  017EB0                     u6490:
 21469                           
 21470                           ;stkvar	_sign @ sp[(-2)+0]
 21471  017EB0  0EFE               	movlw	-2
 21472  017EB2  6AE3               	clrf	plusw1,c
 21473  017EB4  2AE3               	incf	plusw1,f,c
 21474  017EB6                     l8344:
 21475                           
 21476                           ;stkvar	_divisor @ sp[(-2)+-16]
 21477  017EB6  0EF5               	movlw	-11
 21478  017EB8  AEE3               	btfss	plusw1,7,c
 21479  017EBA  D025               	goto	u6510
 21480                           
 21481                           ;stkvar	_divisor @ sp[(-2)+-16]
 21482                           ;stkvar	_divisor @ sp[(-2)+-16]
 21483  017EBC  0EEE               	movlw	-18
 21484  017EBE  6CE3               	negf	plusw1,c
 21485  017EC0  0EEF               	movlw	-17
 21486  017EC2  1EE3               	comf	plusw1,f,c
 21487  017EC4  0EF0               	movlw	-16
 21488  017EC6  1EE3               	comf	plusw1,f,c
 21489  017EC8  0EF1               	movlw	-15
 21490  017ECA  1EE3               	comf	plusw1,f,c
 21491  017ECC  0EF2               	movlw	-14
 21492  017ECE  1EE3               	comf	plusw1,f,c
 21493  017ED0  0EF3               	movlw	-13
 21494  017ED2  1EE3               	comf	plusw1,f,c
 21495  017ED4  0EF4               	movlw	-12
 21496  017ED6  1EE3               	comf	plusw1,f,c
 21497  017ED8  0EF5               	movlw	-11
 21498  017EDA  1EE3               	comf	plusw1,f,c
 21499  017EDC  E314               	bnc	u6510
 21500  017EDE  0EEF               	movlw	-17
 21501  017EE0  2AE3               	incf	plusw1,f,c
 21502  017EE2  E311               	bnc	u6510
 21503  017EE4  0EF0               	movlw	-16
 21504  017EE6  2AE3               	incf	plusw1,f,c
 21505  017EE8  E30E               	bnc	u6510
 21506  017EEA  0EF1               	movlw	-15
 21507  017EEC  2AE3               	incf	plusw1,f,c
 21508  017EEE  E30B               	bnc	u6510
 21509  017EF0  0EF2               	movlw	-14
 21510  017EF2  2AE3               	incf	plusw1,f,c
 21511  017EF4  E308               	bnc	u6510
 21512  017EF6  0EF3               	movlw	-13
 21513  017EF8  2AE3               	incf	plusw1,f,c
 21514  017EFA  E305               	bnc	u6510
 21515  017EFC  0EF4               	movlw	-12
 21516  017EFE  2AE3               	incf	plusw1,f,c
 21517  017F00  E302               	bnc	u6510
 21518  017F02  0EF5               	movlw	-11
 21519  017F04  2AE3               	incf	plusw1,f,c
 21520  017F06                     u6510:
 21521                           
 21522                           ;stkvar	_divisor @ sp[(-2)+-16]
 21523  017F06  0EEE               	movlw	-18
 21524  017F08  50E3               	movf	plusw1,w,c
 21525  017F0A  E116               	bnz	u6520
 21526  017F0C  0EEF               	movlw	-17
 21527  017F0E  50E3               	movf	plusw1,w,c
 21528  017F10  E113               	bnz	u6520
 21529  017F12  0EF0               	movlw	-16
 21530  017F14  50E3               	movf	plusw1,w,c
 21531  017F16  E110               	bnz	u6520
 21532  017F18  0EF1               	movlw	-15
 21533  017F1A  50E3               	movf	plusw1,w,c
 21534  017F1C  E10D               	bnz	u6520
 21535  017F1E  0EF2               	movlw	-14
 21536  017F20  50E3               	movf	plusw1,w,c
 21537  017F22  E10A               	bnz	u6520
 21538  017F24  0EF3               	movlw	-13
 21539  017F26  50E3               	movf	plusw1,w,c
 21540  017F28  E107               	bnz	u6520
 21541  017F2A  0EF4               	movlw	-12
 21542  017F2C  50E3               	movf	plusw1,w,c
 21543  017F2E  E104               	bnz	u6520
 21544  017F30  0EF5               	movlw	-11
 21545  017F32  50E3               	movf	plusw1,w,c
 21546  017F34  B4D8               	btfsc	status,2,c
 21547  017F36  D075               	goto	u6550
 21548  017F38                     u6520:
 21549                           
 21550                           ;stkvar	_counter @ sp[(-2)+1]
 21551  017F38  0EFF               	movlw	-1
 21552  017F3A  6AE3               	clrf	plusw1,c
 21553  017F3C  D012               	goto	L26
 21554  017F3E                     l8352:
 21555                           
 21556                           ;stkvar	_divisor @ sp[(-2)+-16]
 21557  017F3E  90D8               	bcf	status,0,c
 21558  017F40  0EEE               	movlw	-18
 21559  017F42  36E3               	rlcf	plusw1,f,c
 21560  017F44  0EEF               	movlw	-17
 21561  017F46  36E3               	rlcf	plusw1,f,c
 21562  017F48  0EF0               	movlw	-16
 21563  017F4A  36E3               	rlcf	plusw1,f,c
 21564  017F4C  0EF1               	movlw	-15
 21565  017F4E  36E3               	rlcf	plusw1,f,c
 21566  017F50  0EF2               	movlw	-14
 21567  017F52  36E3               	rlcf	plusw1,f,c
 21568  017F54  0EF3               	movlw	-13
 21569  017F56  36E3               	rlcf	plusw1,f,c
 21570  017F58  0EF4               	movlw	-12
 21571  017F5A  36E3               	rlcf	plusw1,f,c
 21572  017F5C  0EF5               	movlw	-11
 21573  017F5E  36E3               	rlcf	plusw1,f,c
 21574                           
 21575                           ;stkvar	_counter @ sp[(-2)+1]
 21576  017F60  0EFF               	movlw	-1
 21577  017F62                     L26:
 21578  017F62  2AE3               	incf	plusw1,f,c
 21579                           
 21580                           ;stkvar	_divisor @ sp[(-2)+-16]
 21581  017F64  0EF5               	movlw	-11
 21582  017F66  AEE3               	btfss	plusw1,7,c
 21583  017F68  D7EA               	goto	l8352
 21584  017F6A                     u6530:
 21585                           
 21586                           ;stkvar	_divisor @ sp[(-2)+-16]
 21587                           ;stkvar	_dividend @ sp[(-2)+-8]
 21588  017F6A  50E1               	movf	fsr1l,w,c
 21589  017F6C  0FF6               	addlw	-10
 21590  017F6E  6ED9               	movwf	fsr2l,c
 21591  017F70  50E2               	movf	fsr1h,w,c
 21592  017F72  6EDA               	movwf	fsr2h,c
 21593  017F74  0EFF               	movlw	255
 21594  017F76  22DA               	addwfc	fsr2h,f,c
 21595  017F78  0EEE               	movlw	-18
 21596  017F7A  50E3               	movf	plusw1,w,c
 21597  017F7C  5CDE               	subwf	postinc2,w,c
 21598  017F7E  0EEF               	movlw	-17
 21599  017F80  50E3               	movf	plusw1,w,c
 21600  017F82  58DE               	subwfb	postinc2,w,c
 21601  017F84  0EF0               	movlw	-16
 21602  017F86  50E3               	movf	plusw1,w,c
 21603  017F88  58DE               	subwfb	postinc2,w,c
 21604  017F8A  0EF1               	movlw	-15
 21605  017F8C  50E3               	movf	plusw1,w,c
 21606  017F8E  58DE               	subwfb	postinc2,w,c
 21607  017F90  0EF2               	movlw	-14
 21608  017F92  50E3               	movf	plusw1,w,c
 21609  017F94  58DE               	subwfb	postinc2,w,c
 21610  017F96  0EF3               	movlw	-13
 21611  017F98  50E3               	movf	plusw1,w,c
 21612  017F9A  58DE               	subwfb	postinc2,w,c
 21613  017F9C  0EF4               	movlw	-12
 21614  017F9E  50E3               	movf	plusw1,w,c
 21615  017FA0  58DE               	subwfb	postinc2,w,c
 21616  017FA2  0EF5               	movlw	-11
 21617  017FA4  50E3               	movf	plusw1,w,c
 21618  017FA6  58DE               	subwfb	postinc2,w,c
 21619  017FA8  A0D8               	btfss	status,0,c
 21620  017FAA  D01F               	goto	l8360
 21621                           
 21622                           ;stkvar	_divisor @ sp[(-2)+-16]
 21623                           ;stkvar	_dividend @ sp[(-2)+-8]
 21624  017FAC  50E1               	movf	fsr1l,w,c
 21625  017FAE  0FF6               	addlw	-10
 21626  017FB0  6ED9               	movwf	fsr2l,c
 21627  017FB2  50E2               	movf	fsr1h,w,c
 21628  017FB4  6EDA               	movwf	fsr2h,c
 21629  017FB6  0EFF               	movlw	255
 21630  017FB8  22DA               	addwfc	fsr2h,f,c
 21631  017FBA  0EEE               	movlw	-18
 21632  017FBC  50E3               	movf	plusw1,w,c
 21633  017FBE  5EDE               	subwf	postinc2,f,c
 21634  017FC0  0EEF               	movlw	-17
 21635  017FC2  50E3               	movf	plusw1,w,c
 21636  017FC4  5ADE               	subwfb	postinc2,f,c
 21637  017FC6  0EF0               	movlw	-16
 21638  017FC8  50E3               	movf	plusw1,w,c
 21639  017FCA  5ADE               	subwfb	postinc2,f,c
 21640  017FCC  0EF1               	movlw	-15
 21641  017FCE  50E3               	movf	plusw1,w,c
 21642  017FD0  5ADE               	subwfb	postinc2,f,c
 21643  017FD2  0EF2               	movlw	-14
 21644  017FD4  50E3               	movf	plusw1,w,c
 21645  017FD6  5ADE               	subwfb	postinc2,f,c
 21646  017FD8  0EF3               	movlw	-13
 21647  017FDA  50E3               	movf	plusw1,w,c
 21648  017FDC  5ADE               	subwfb	postinc2,f,c
 21649  017FDE  0EF4               	movlw	-12
 21650  017FE0  50E3               	movf	plusw1,w,c
 21651  017FE2  5ADE               	subwfb	postinc2,f,c
 21652  017FE4  0EF5               	movlw	-11
 21653  017FE6  50E3               	movf	plusw1,w,c
 21654  017FE8  5ADE               	subwfb	postinc2,f,c
 21655  017FEA                     l8360:
 21656                           
 21657                           ;stkvar	_divisor @ sp[(-2)+-16]
 21658  017FEA  90D8               	bcf	status,0,c
 21659  017FEC  0EF5               	movlw	-11
 21660  017FEE  32E3               	rrcf	plusw1,f,c
 21661  017FF0  0EF4               	movlw	-12
 21662  017FF2  32E3               	rrcf	plusw1,f,c
 21663  017FF4  0EF3               	movlw	-13
 21664  017FF6  32E3               	rrcf	plusw1,f,c
 21665  017FF8  0EF2               	movlw	-14
 21666  017FFA  32E3               	rrcf	plusw1,f,c
 21667  017FFC  0EF1               	movlw	-15
 21668  017FFE  32E3               	rrcf	plusw1,f,c
 21669  018000  0EF0               	movlw	-16
 21670  018002  32E3               	rrcf	plusw1,f,c
 21671  018004  0EEF               	movlw	-17
 21672  018006  32E3               	rrcf	plusw1,f,c
 21673  018008  0EEE               	movlw	-18
 21674  01800A  32E3               	rrcf	plusw1,f,c
 21675                           
 21676                           ;stkvar	_counter @ sp[(-2)+1]
 21677  01800C  0EFF               	movlw	-1
 21678  01800E  50E3               	movf	plusw1,w,c
 21679  018010  6E01               	movwf	btemp^0,c
 21680  018012  0E01               	movlw	1
 21681  018014  5E01               	subwf	btemp^0,f,c
 21682  018016  0EFF               	movlw	-1
 21683  018018  0060  F007  FFE3   	movff	btemp,plusw1
 21684  01801E  A4D8               	btfss	status,2,c
 21685  018020  D7A4               	goto	u6530
 21686  018022                     u6550:
 21687                           
 21688                           ;stkvar	_sign @ sp[(-2)+0]
 21689  018022  0EFE               	movlw	-2
 21690  018024  50E3               	movf	plusw1,w,c
 21691  018026  B4D8               	btfsc	status,2,c
 21692  018028  D025               	goto	u6570
 21693                           
 21694                           ;stkvar	_dividend @ sp[(-2)+-8]
 21695                           ;stkvar	_dividend @ sp[(-2)+-8]
 21696  01802A  0EF6               	movlw	-10
 21697  01802C  6CE3               	negf	plusw1,c
 21698  01802E  0EF7               	movlw	-9
 21699  018030  1EE3               	comf	plusw1,f,c
 21700  018032  0EF8               	movlw	-8
 21701  018034  1EE3               	comf	plusw1,f,c
 21702  018036  0EF9               	movlw	-7
 21703  018038  1EE3               	comf	plusw1,f,c
 21704  01803A  0EFA               	movlw	-6
 21705  01803C  1EE3               	comf	plusw1,f,c
 21706  01803E  0EFB               	movlw	-5
 21707  018040  1EE3               	comf	plusw1,f,c
 21708  018042  0EFC               	movlw	-4
 21709  018044  1EE3               	comf	plusw1,f,c
 21710  018046  0EFD               	movlw	-3
 21711  018048  1EE3               	comf	plusw1,f,c
 21712  01804A  E314               	bnc	u6570
 21713  01804C  0EF7               	movlw	-9
 21714  01804E  2AE3               	incf	plusw1,f,c
 21715  018050  E311               	bnc	u6570
 21716  018052  0EF8               	movlw	-8
 21717  018054  2AE3               	incf	plusw1,f,c
 21718  018056  E30E               	bnc	u6570
 21719  018058  0EF9               	movlw	-7
 21720  01805A  2AE3               	incf	plusw1,f,c
 21721  01805C  E30B               	bnc	u6570
 21722  01805E  0EFA               	movlw	-6
 21723  018060  2AE3               	incf	plusw1,f,c
 21724  018062  E308               	bnc	u6570
 21725  018064  0EFB               	movlw	-5
 21726  018066  2AE3               	incf	plusw1,f,c
 21727  018068  E305               	bnc	u6570
 21728  01806A  0EFC               	movlw	-4
 21729  01806C  2AE3               	incf	plusw1,f,c
 21730  01806E  E302               	bnc	u6570
 21731  018070  0EFD               	movlw	-3
 21732  018072  2AE3               	incf	plusw1,f,c
 21733  018074                     u6570:
 21734                           
 21735                           ;stkvar	_dividend @ sp[(-2)+-8]
 21736  018074  0EF6               	movlw	246
 21737  018076  24E1               	addwf	fsr1l,w,c
 21738  018078  6ED9               	movwf	fsr2l,c
 21739  01807A  0EFF               	movlw	255
 21740  01807C  20E2               	addwfc	fsr1h,w,c
 21741  01807E  6EDA               	movwf	fsr2h,c
 21742                           
 21743                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21744  018080  0E08               	movlw	8
 21745  018082  6E01               	movwf	btemp^0,c
 21746  018084  0EF6               	movlw	-10
 21747  018086                     us658999:
 21748  018086  006F FF7B FFE3     	movff	postinc2,plusw1
 21749  01808C  28E8               	incf	wreg,w,c
 21750  01808E  2E01               	decfsz	btemp^0,f,c
 21751  018090  D7FA               	bra	us658999
 21752                           
 21753                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21754  018092  52E5               	movf	postdec1,f,c
 21755  018094  52E5               	movf	postdec1,f,c
 21756  018096  0012               	return		;funcret
 21757  018098                     __end_of___aomod:
 21758                           	opt callstack 0
 21759                           
 21760 ;; *************** function ___aodiv *****************
 21761 ;; Defined at:
 21762 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21763 ;; Parameters:    Size  Location     Type
 21764 ;;  dividend        8  [STACK] long long 
 21765 ;;  divisor         8  [STACK] long long 
 21766 ;; Auto vars:     Size  Location     Type
 21767 ;;  quotient        8  [STACK] long long 
 21768 ;;  sign            1  [STACK] unsigned char 
 21769 ;;  counter         1  [STACK] unsigned char 
 21770 ;; Return value:  Size  Location     Type
 21771 ;;                  8  [STACK] long long 
 21772 ;; Registers used:
 21773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21774 ;; Tracked objects:
 21775 ;;		On entry : 0/2
 21776 ;;		On exit  : 0/0
 21777 ;;		Unchanged: 0/0
 21778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21783 ;;Total ram usage:        0 bytes
 21784 ;; Hardware stack levels used:    1
 21785 ;; Hardware stack levels required when called:   15
 21786 ;; This function calls:
 21787 ;;		Nothing
 21788 ;; This function is called by:
 21789 ;;		_dtoa
 21790 ;; This function uses a reentrant model
 21791 ;;
 21792                           
 21793                           	psect	text76
 21794  01771E                     __ptext76:
 21795                           	opt callstack 0
 21796  01771E                     ___aodiv:
 21797                           	opt callstack 0
 21798                           
 21799                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21800  01771E  0E0A               	movlw	10
 21801  017720  26E1               	addwf	fsr1l,f,c
 21802  017722  0E00               	movlw	0
 21803  017724  22E2               	addwfc	fsr1h,f,c
 21804                           
 21805                           ;stkvar	_sign @ sp[(-10)+8]
 21806                           
 21807                           ;incstack = 0
 21808 ;; hardware stack exceeded
 21809  017726  0EFE               	movlw	-2
 21810  017728  6AE3               	clrf	plusw1,c
 21811                           
 21812                           ;stkvar	_divisor @ sp[(-10)+-16]
 21813  01772A  0EED               	movlw	-19
 21814  01772C  AEE3               	btfss	plusw1,7,c
 21815  01772E  D028               	goto	l8300
 21816                           
 21817                           ;stkvar	_divisor @ sp[(-10)+-16]
 21818                           ;stkvar	_divisor @ sp[(-10)+-16]
 21819  017730  0EE6               	movlw	-26
 21820  017732  6CE3               	negf	plusw1,c
 21821  017734  0EE7               	movlw	-25
 21822  017736  1EE3               	comf	plusw1,f,c
 21823  017738  0EE8               	movlw	-24
 21824  01773A  1EE3               	comf	plusw1,f,c
 21825  01773C  0EE9               	movlw	-23
 21826  01773E  1EE3               	comf	plusw1,f,c
 21827  017740  0EEA               	movlw	-22
 21828  017742  1EE3               	comf	plusw1,f,c
 21829  017744  0EEB               	movlw	-21
 21830  017746  1EE3               	comf	plusw1,f,c
 21831  017748  0EEC               	movlw	-20
 21832  01774A  1EE3               	comf	plusw1,f,c
 21833  01774C  0EED               	movlw	-19
 21834  01774E  1EE3               	comf	plusw1,f,c
 21835  017750  E314               	bnc	u6370
 21836  017752  0EE7               	movlw	-25
 21837  017754  2AE3               	incf	plusw1,f,c
 21838  017756  E311               	bnc	u6370
 21839  017758  0EE8               	movlw	-24
 21840  01775A  2AE3               	incf	plusw1,f,c
 21841  01775C  E30E               	bnc	u6370
 21842  01775E  0EE9               	movlw	-23
 21843  017760  2AE3               	incf	plusw1,f,c
 21844  017762  E30B               	bnc	u6370
 21845  017764  0EEA               	movlw	-22
 21846  017766  2AE3               	incf	plusw1,f,c
 21847  017768  E308               	bnc	u6370
 21848  01776A  0EEB               	movlw	-21
 21849  01776C  2AE3               	incf	plusw1,f,c
 21850  01776E  E305               	bnc	u6370
 21851  017770  0EEC               	movlw	-20
 21852  017772  2AE3               	incf	plusw1,f,c
 21853  017774  E302               	bnc	u6370
 21854  017776  0EED               	movlw	-19
 21855  017778  2AE3               	incf	plusw1,f,c
 21856  01777A                     u6370:
 21857                           
 21858                           ;stkvar	_sign @ sp[(-10)+8]
 21859  01777A  0EFE               	movlw	-2
 21860  01777C  6AE3               	clrf	plusw1,c
 21861  01777E  2AE3               	incf	plusw1,f,c
 21862  017780                     l8300:
 21863                           
 21864                           ;stkvar	_dividend @ sp[(-10)+-8]
 21865  017780  0EF5               	movlw	-11
 21866  017782  AEE3               	btfss	plusw1,7,c
 21867  017784  D027               	goto	l8306
 21868                           
 21869                           ;stkvar	_dividend @ sp[(-10)+-8]
 21870                           ;stkvar	_dividend @ sp[(-10)+-8]
 21871  017786  0EEE               	movlw	-18
 21872  017788  6CE3               	negf	plusw1,c
 21873  01778A  0EEF               	movlw	-17
 21874  01778C  1EE3               	comf	plusw1,f,c
 21875  01778E  0EF0               	movlw	-16
 21876  017790  1EE3               	comf	plusw1,f,c
 21877  017792  0EF1               	movlw	-15
 21878  017794  1EE3               	comf	plusw1,f,c
 21879  017796  0EF2               	movlw	-14
 21880  017798  1EE3               	comf	plusw1,f,c
 21881  01779A  0EF3               	movlw	-13
 21882  01779C  1EE3               	comf	plusw1,f,c
 21883  01779E  0EF4               	movlw	-12
 21884  0177A0  1EE3               	comf	plusw1,f,c
 21885  0177A2  0EF5               	movlw	-11
 21886  0177A4  1EE3               	comf	plusw1,f,c
 21887  0177A6  E314               	bnc	u6390
 21888  0177A8  0EEF               	movlw	-17
 21889  0177AA  2AE3               	incf	plusw1,f,c
 21890  0177AC  E311               	bnc	u6390
 21891  0177AE  0EF0               	movlw	-16
 21892  0177B0  2AE3               	incf	plusw1,f,c
 21893  0177B2  E30E               	bnc	u6390
 21894  0177B4  0EF1               	movlw	-15
 21895  0177B6  2AE3               	incf	plusw1,f,c
 21896  0177B8  E30B               	bnc	u6390
 21897  0177BA  0EF2               	movlw	-14
 21898  0177BC  2AE3               	incf	plusw1,f,c
 21899  0177BE  E308               	bnc	u6390
 21900  0177C0  0EF3               	movlw	-13
 21901  0177C2  2AE3               	incf	plusw1,f,c
 21902  0177C4  E305               	bnc	u6390
 21903  0177C6  0EF4               	movlw	-12
 21904  0177C8  2AE3               	incf	plusw1,f,c
 21905  0177CA  E302               	bnc	u6390
 21906  0177CC  0EF5               	movlw	-11
 21907  0177CE  2AE3               	incf	plusw1,f,c
 21908  0177D0                     u6390:
 21909                           
 21910                           ;stkvar	_sign @ sp[(-10)+8]
 21911  0177D0  0EFE               	movlw	-2
 21912  0177D2  70E3               	btg	plusw1,0,c
 21913  0177D4                     l8306:
 21914                           
 21915                           ;stkvar	_quotient @ sp[(-10)+0]
 21916  0177D4  0E07               	movlw	7
 21917  0177D6  6E01               	movwf	btemp^0,c
 21918  0177D8  0EF6               	movlw	-10
 21919  0177DA                     u6401:
 21920  0177DA  6AE3               	clrf	plusw1,c
 21921  0177DC  2AE8               	incf	wreg,f,c
 21922  0177DE  0601               	decf	btemp^0,f,c
 21923  0177E0  E2FC               	bc	u6401
 21924                           
 21925                           ;stkvar	_divisor @ sp[(-10)+-16]
 21926  0177E2  0EE6               	movlw	-26
 21927  0177E4  50E3               	movf	plusw1,w,c
 21928  0177E6  E116               	bnz	u6410
 21929  0177E8  0EE7               	movlw	-25
 21930  0177EA  50E3               	movf	plusw1,w,c
 21931  0177EC  E113               	bnz	u6410
 21932  0177EE  0EE8               	movlw	-24
 21933  0177F0  50E3               	movf	plusw1,w,c
 21934  0177F2  E110               	bnz	u6410
 21935  0177F4  0EE9               	movlw	-23
 21936  0177F6  50E3               	movf	plusw1,w,c
 21937  0177F8  E10D               	bnz	u6410
 21938  0177FA  0EEA               	movlw	-22
 21939  0177FC  50E3               	movf	plusw1,w,c
 21940  0177FE  E10A               	bnz	u6410
 21941  017800  0EEB               	movlw	-21
 21942  017802  50E3               	movf	plusw1,w,c
 21943  017804  E107               	bnz	u6410
 21944  017806  0EEC               	movlw	-20
 21945  017808  50E3               	movf	plusw1,w,c
 21946  01780A  E104               	bnz	u6410
 21947  01780C  0EED               	movlw	-19
 21948  01780E  50E3               	movf	plusw1,w,c
 21949  017810  B4D8               	btfsc	status,2,c
 21950  017812  D088               	goto	u6440
 21951  017814                     u6410:
 21952                           
 21953                           ;stkvar	_counter @ sp[(-10)+9]
 21954  017814  0EFF               	movlw	-1
 21955  017816  6AE3               	clrf	plusw1,c
 21956  017818  D012               	goto	L27
 21957  01781A                     l8312:
 21958                           
 21959                           ;stkvar	_divisor @ sp[(-10)+-16]
 21960  01781A  90D8               	bcf	status,0,c
 21961  01781C  0EE6               	movlw	-26
 21962  01781E  36E3               	rlcf	plusw1,f,c
 21963  017820  0EE7               	movlw	-25
 21964  017822  36E3               	rlcf	plusw1,f,c
 21965  017824  0EE8               	movlw	-24
 21966  017826  36E3               	rlcf	plusw1,f,c
 21967  017828  0EE9               	movlw	-23
 21968  01782A  36E3               	rlcf	plusw1,f,c
 21969  01782C  0EEA               	movlw	-22
 21970  01782E  36E3               	rlcf	plusw1,f,c
 21971  017830  0EEB               	movlw	-21
 21972  017832  36E3               	rlcf	plusw1,f,c
 21973  017834  0EEC               	movlw	-20
 21974  017836  36E3               	rlcf	plusw1,f,c
 21975  017838  0EED               	movlw	-19
 21976  01783A  36E3               	rlcf	plusw1,f,c
 21977                           
 21978                           ;stkvar	_counter @ sp[(-10)+9]
 21979  01783C  0EFF               	movlw	-1
 21980  01783E                     L27:
 21981  01783E  2AE3               	incf	plusw1,f,c
 21982                           
 21983                           ;stkvar	_divisor @ sp[(-10)+-16]
 21984  017840  0EED               	movlw	-19
 21985  017842  AEE3               	btfss	plusw1,7,c
 21986  017844  D7EA               	goto	l8312
 21987  017846                     u6420:
 21988                           
 21989                           ;stkvar	_quotient @ sp[(-10)+0]
 21990  017846  90D8               	bcf	status,0,c
 21991  017848  0EF6               	movlw	-10
 21992  01784A  36E3               	rlcf	plusw1,f,c
 21993  01784C  0EF7               	movlw	-9
 21994  01784E  36E3               	rlcf	plusw1,f,c
 21995  017850  0EF8               	movlw	-8
 21996  017852  36E3               	rlcf	plusw1,f,c
 21997  017854  0EF9               	movlw	-7
 21998  017856  36E3               	rlcf	plusw1,f,c
 21999  017858  0EFA               	movlw	-6
 22000  01785A  36E3               	rlcf	plusw1,f,c
 22001  01785C  0EFB               	movlw	-5
 22002  01785E  36E3               	rlcf	plusw1,f,c
 22003  017860  0EFC               	movlw	-4
 22004  017862  36E3               	rlcf	plusw1,f,c
 22005  017864  0EFD               	movlw	-3
 22006  017866  36E3               	rlcf	plusw1,f,c
 22007                           
 22008                           ;stkvar	_divisor @ sp[(-10)+-16]
 22009                           ;stkvar	_dividend @ sp[(-10)+-8]
 22010  017868  50E1               	movf	fsr1l,w,c
 22011  01786A  0FEE               	addlw	-18
 22012  01786C  6ED9               	movwf	fsr2l,c
 22013  01786E  50E2               	movf	fsr1h,w,c
 22014  017870  6EDA               	movwf	fsr2h,c
 22015  017872  0EFF               	movlw	255
 22016  017874  22DA               	addwfc	fsr2h,f,c
 22017  017876  0EE6               	movlw	-26
 22018  017878  50E3               	movf	plusw1,w,c
 22019  01787A  5CDE               	subwf	postinc2,w,c
 22020  01787C  0EE7               	movlw	-25
 22021  01787E  50E3               	movf	plusw1,w,c
 22022  017880  58DE               	subwfb	postinc2,w,c
 22023  017882  0EE8               	movlw	-24
 22024  017884  50E3               	movf	plusw1,w,c
 22025  017886  58DE               	subwfb	postinc2,w,c
 22026  017888  0EE9               	movlw	-23
 22027  01788A  50E3               	movf	plusw1,w,c
 22028  01788C  58DE               	subwfb	postinc2,w,c
 22029  01788E  0EEA               	movlw	-22
 22030  017890  50E3               	movf	plusw1,w,c
 22031  017892  58DE               	subwfb	postinc2,w,c
 22032  017894  0EEB               	movlw	-21
 22033  017896  50E3               	movf	plusw1,w,c
 22034  017898  58DE               	subwfb	postinc2,w,c
 22035  01789A  0EEC               	movlw	-20
 22036  01789C  50E3               	movf	plusw1,w,c
 22037  01789E  58DE               	subwfb	postinc2,w,c
 22038  0178A0  0EED               	movlw	-19
 22039  0178A2  50E3               	movf	plusw1,w,c
 22040  0178A4  58DE               	subwfb	postinc2,w,c
 22041  0178A6  A0D8               	btfss	status,0,c
 22042  0178A8  D021               	goto	l8324
 22043                           
 22044                           ;stkvar	_divisor @ sp[(-10)+-16]
 22045                           ;stkvar	_dividend @ sp[(-10)+-8]
 22046  0178AA  50E1               	movf	fsr1l,w,c
 22047  0178AC  0FEE               	addlw	-18
 22048  0178AE  6ED9               	movwf	fsr2l,c
 22049  0178B0  50E2               	movf	fsr1h,w,c
 22050  0178B2  6EDA               	movwf	fsr2h,c
 22051  0178B4  0EFF               	movlw	255
 22052  0178B6  22DA               	addwfc	fsr2h,f,c
 22053  0178B8  0EE6               	movlw	-26
 22054  0178BA  50E3               	movf	plusw1,w,c
 22055  0178BC  5EDE               	subwf	postinc2,f,c
 22056  0178BE  0EE7               	movlw	-25
 22057  0178C0  50E3               	movf	plusw1,w,c
 22058  0178C2  5ADE               	subwfb	postinc2,f,c
 22059  0178C4  0EE8               	movlw	-24
 22060  0178C6  50E3               	movf	plusw1,w,c
 22061  0178C8  5ADE               	subwfb	postinc2,f,c
 22062  0178CA  0EE9               	movlw	-23
 22063  0178CC  50E3               	movf	plusw1,w,c
 22064  0178CE  5ADE               	subwfb	postinc2,f,c
 22065  0178D0  0EEA               	movlw	-22
 22066  0178D2  50E3               	movf	plusw1,w,c
 22067  0178D4  5ADE               	subwfb	postinc2,f,c
 22068  0178D6  0EEB               	movlw	-21
 22069  0178D8  50E3               	movf	plusw1,w,c
 22070  0178DA  5ADE               	subwfb	postinc2,f,c
 22071  0178DC  0EEC               	movlw	-20
 22072  0178DE  50E3               	movf	plusw1,w,c
 22073  0178E0  5ADE               	subwfb	postinc2,f,c
 22074  0178E2  0EED               	movlw	-19
 22075  0178E4  50E3               	movf	plusw1,w,c
 22076  0178E6  5ADE               	subwfb	postinc2,f,c
 22077                           
 22078                           ;stkvar	_quotient @ sp[(-10)+0]
 22079  0178E8  0EF6               	movlw	-10
 22080  0178EA  80E3               	bsf	plusw1,0,c
 22081  0178EC                     l8324:
 22082                           
 22083                           ;stkvar	_divisor @ sp[(-10)+-16]
 22084  0178EC  90D8               	bcf	status,0,c
 22085  0178EE  0EED               	movlw	-19
 22086  0178F0  32E3               	rrcf	plusw1,f,c
 22087  0178F2  0EEC               	movlw	-20
 22088  0178F4  32E3               	rrcf	plusw1,f,c
 22089  0178F6  0EEB               	movlw	-21
 22090  0178F8  32E3               	rrcf	plusw1,f,c
 22091  0178FA  0EEA               	movlw	-22
 22092  0178FC  32E3               	rrcf	plusw1,f,c
 22093  0178FE  0EE9               	movlw	-23
 22094  017900  32E3               	rrcf	plusw1,f,c
 22095  017902  0EE8               	movlw	-24
 22096  017904  32E3               	rrcf	plusw1,f,c
 22097  017906  0EE7               	movlw	-25
 22098  017908  32E3               	rrcf	plusw1,f,c
 22099  01790A  0EE6               	movlw	-26
 22100  01790C  32E3               	rrcf	plusw1,f,c
 22101                           
 22102                           ;stkvar	_counter @ sp[(-10)+9]
 22103  01790E  0EFF               	movlw	-1
 22104  017910  50E3               	movf	plusw1,w,c
 22105  017912  6E01               	movwf	btemp^0,c
 22106  017914  0E01               	movlw	1
 22107  017916  5E01               	subwf	btemp^0,f,c
 22108  017918  0EFF               	movlw	-1
 22109  01791A  0060  F007  FFE3   	movff	btemp,plusw1
 22110  017920  A4D8               	btfss	status,2,c
 22111  017922  D791               	goto	u6420
 22112  017924                     u6440:
 22113                           
 22114                           ;stkvar	_sign @ sp[(-10)+8]
 22115  017924  0EFE               	movlw	-2
 22116  017926  50E3               	movf	plusw1,w,c
 22117  017928  B4D8               	btfsc	status,2,c
 22118  01792A  D025               	goto	u6460
 22119                           
 22120                           ;stkvar	_quotient @ sp[(-10)+0]
 22121                           ;stkvar	_quotient @ sp[(-10)+0]
 22122  01792C  0EF6               	movlw	-10
 22123  01792E  6CE3               	negf	plusw1,c
 22124  017930  0EF7               	movlw	-9
 22125  017932  1EE3               	comf	plusw1,f,c
 22126  017934  0EF8               	movlw	-8
 22127  017936  1EE3               	comf	plusw1,f,c
 22128  017938  0EF9               	movlw	-7
 22129  01793A  1EE3               	comf	plusw1,f,c
 22130  01793C  0EFA               	movlw	-6
 22131  01793E  1EE3               	comf	plusw1,f,c
 22132  017940  0EFB               	movlw	-5
 22133  017942  1EE3               	comf	plusw1,f,c
 22134  017944  0EFC               	movlw	-4
 22135  017946  1EE3               	comf	plusw1,f,c
 22136  017948  0EFD               	movlw	-3
 22137  01794A  1EE3               	comf	plusw1,f,c
 22138  01794C  E314               	bnc	u6460
 22139  01794E  0EF7               	movlw	-9
 22140  017950  2AE3               	incf	plusw1,f,c
 22141  017952  E311               	bnc	u6460
 22142  017954  0EF8               	movlw	-8
 22143  017956  2AE3               	incf	plusw1,f,c
 22144  017958  E30E               	bnc	u6460
 22145  01795A  0EF9               	movlw	-7
 22146  01795C  2AE3               	incf	plusw1,f,c
 22147  01795E  E30B               	bnc	u6460
 22148  017960  0EFA               	movlw	-6
 22149  017962  2AE3               	incf	plusw1,f,c
 22150  017964  E308               	bnc	u6460
 22151  017966  0EFB               	movlw	-5
 22152  017968  2AE3               	incf	plusw1,f,c
 22153  01796A  E305               	bnc	u6460
 22154  01796C  0EFC               	movlw	-4
 22155  01796E  2AE3               	incf	plusw1,f,c
 22156  017970  E302               	bnc	u6460
 22157  017972  0EFD               	movlw	-3
 22158  017974  2AE3               	incf	plusw1,f,c
 22159  017976                     u6460:
 22160                           
 22161                           ;stkvar	_quotient @ sp[(-10)+0]
 22162  017976  0EF6               	movlw	246
 22163  017978  24E1               	addwf	fsr1l,w,c
 22164  01797A  6ED9               	movwf	fsr2l,c
 22165  01797C  0EFF               	movlw	255
 22166  01797E  20E2               	addwfc	fsr1h,w,c
 22167  017980  6EDA               	movwf	fsr2h,c
 22168                           
 22169                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22170  017982  0E08               	movlw	8
 22171  017984  6E01               	movwf	btemp^0,c
 22172  017986  0EEE               	movlw	-18
 22173  017988                     us647999:
 22174  017988  006F FF7B FFE3     	movff	postinc2,plusw1
 22175  01798E  28E8               	incf	wreg,w,c
 22176  017990  2E01               	decfsz	btemp^0,f,c
 22177  017992  D7FA               	bra	us647999
 22178                           
 22179                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22180  017994  0EF6               	movlw	246
 22181  017996  26E1               	addwf	fsr1l,f,c
 22182  017998  0EFF               	movlw	255
 22183  01799A  22E2               	addwfc	fsr1h,f,c
 22184  01799C  0012               	return		;funcret
 22185  01799E                     __end_of___aodiv:
 22186                           	opt callstack 0
 22187                           
 22188 ;; *************** function _ctoa *****************
 22189 ;; Defined at:
 22190 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22193 ;;		 -> f(6), NULL(0), 
 22194 ;;  c               1  [STACK] unsigned char 
 22195 ;; Auto vars:     Size  Location     Type
 22196 ;;  w               2  [STACK] int 
 22197 ;;  l               2    0        int 
 22198 ;; Return value:  Size  Location     Type
 22199 ;;                  2  [STACK] int 
 22200 ;; Registers used:
 22201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22202 ;; Tracked objects:
 22203 ;;		On entry : 0/0
 22204 ;;		On exit  : 0/0
 22205 ;;		Unchanged: 0/0
 22206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22211 ;;Total ram usage:        0 bytes
 22212 ;; Hardware stack levels used:    1
 22213 ;; Hardware stack levels required when called:   20
 22214 ;; This function calls:
 22215 ;;		_pad
 22216 ;; This function is called by:
 22217 ;;		_vfpfcnvrt
 22218 ;; This function uses a reentrant model
 22219 ;;
 22220                           
 22221                           	psect	text77
 22222  01AF02                     __ptext77:
 22223                           	opt callstack 0
 22224  01AF02                     _ctoa:
 22225                           	opt callstack 0
 22226                           
 22227                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22228  01AF02  52E6               	movf	postinc1,f,c
 22229  01AF04  52E6               	movf	postinc1,f,c
 22230                           
 22231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22232                           
 22233                           ;incstack = 0
 22234 ;; hardware stack exceeded
 22235  01AF06  503A               	movf	_width^0,w,c
 22236  01AF08  103B               	iorwf	(_width+1)^0,w,c
 22237  01AF0A  A4D8               	btfss	status,2,c
 22238  01AF0C  D009               	goto	l12200
 22239                           
 22240                           ;stkvar	_w @ sp[(-2)+0]
 22241  01AF0E  0EFE               	movlw	-2
 22242  01AF10  0060  F0EB  FFE3   	movff	_width,plusw1
 22243  01AF16  0EFF               	movlw	-1
 22244  01AF18  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22245  01AF1E  D016               	goto	l12202
 22246  01AF20                     l12200:
 22247  01AF20  0EFF               	movlw	255
 22248  01AF22  6E0B               	movwf	(btemp+10)^0,c
 22249  01AF24  0EFF               	movlw	255
 22250  01AF26  6E0C               	movwf	(btemp+11)^0,c
 22251  01AF28  0060  F0E8  F009   	movff	_width,btemp+8
 22252  01AF2E  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22253  01AF34  500B               	movf	(btemp+10)^0,w,c
 22254  01AF36  2609               	addwf	(btemp+8)^0,f,c
 22255  01AF38  500C               	movf	(btemp+11)^0,w,c
 22256  01AF3A  220A               	addwfc	(btemp+9)^0,f,c
 22257                           
 22258                           ;stkvar	_w @ sp[(-2)+0]
 22259  01AF3C  0EFE               	movlw	-2
 22260  01AF3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22261  01AF44  0EFF               	movlw	-1
 22262  01AF46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22263  01AF4C                     l12202:
 22264                           
 22265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22266                           ;stkvar	_c @ sp[(-2)+-3]
 22267  01AF4C  0EFB               	movlw	-5
 22268  01AF4E  006F FF8C  F297    	movff	plusw1,_dbuf
 22269                           
 22270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22271  01AF54  0102               	movlb	2	; () banked
 22272  01AF56  6B98               	clrf	(_dbuf+1)& (0+255),b
 22273                           
 22274                           ; BSR set to: 2
 22275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22276                           ;stkvar	_w @ sp[(-2)+0]
 22277  01AF58  0EFE               	movlw	-2
 22278  01AF5A  006F FF8F FFE6     	movff	plusw1,postinc1
 22279  01AF60  006F FF8F FFE6     	movff	plusw1,postinc1
 22280  01AF66  0E97               	movlw	low _dbuf
 22281  01AF68  6EE6               	movwf	postinc1,c
 22282  01AF6A  0E02               	movlw	high _dbuf
 22283  01AF6C  6EE6               	movwf	postinc1,c
 22284                           
 22285                           ;stkvar	_fp @ sp[(-6)+-2]
 22286  01AF6E  0EF8               	movlw	-8
 22287  01AF70  006F FF8F FFE6     	movff	plusw1,postinc1
 22288  01AF76  006F FF8F FFE6     	movff	plusw1,postinc1
 22289  01AF7C  EC90  F0CE         	call	_pad	;wreg free
 22290                           
 22291                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22292  01AF80  0EFB               	movlw	251
 22293  01AF82  26E1               	addwf	fsr1l,f,c
 22294  01AF84  0EFF               	movlw	255
 22295  01AF86  22E2               	addwfc	fsr1h,f,c
 22296  01AF88  0012               	return		;funcret
 22297  01AF8A                     __end_of_ctoa:
 22298                           	opt callstack 0
 22299                           
 22300 ;; *************** function _pad *****************
 22301 ;; Defined at:
 22302 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22305 ;;		 -> f(6), NULL(0), 
 22306 ;;  buf             2  [STACK] PTR unsigned char 
 22307 ;;		 -> dbuf(80), 
 22308 ;;  p               2  [STACK] int 
 22309 ;; Auto vars:     Size  Location     Type
 22310 ;;  w               2  [STACK] int 
 22311 ;;  i               2  [STACK] int 
 22312 ;; Return value:  Size  Location     Type
 22313 ;;                  2  [STACK] int 
 22314 ;; Registers used:
 22315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22316 ;; Tracked objects:
 22317 ;;		On entry : 0/2
 22318 ;;		On exit  : 0/0
 22319 ;;		Unchanged: 0/0
 22320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22325 ;;Total ram usage:        0 bytes
 22326 ;; Hardware stack levels used:    1
 22327 ;; Hardware stack levels required when called:   19
 22328 ;; This function calls:
 22329 ;;		_fputc
 22330 ;;		_fputs
 22331 ;;		_strlen
 22332 ;; This function is called by:
 22333 ;;		_ctoa
 22334 ;;		_dtoa
 22335 ;;		_efgtoa
 22336 ;;		_utoa
 22337 ;;		_xtoa
 22338 ;; This function uses a reentrant model
 22339 ;;
 22340                           
 22341                           	psect	text78
 22342  019D20                     __ptext78:
 22343                           	opt callstack 0
 22344  019D20                     _pad:
 22345                           	opt callstack 0
 22346                           
 22347                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22348  019D20  52E6               	movf	postinc1,f,c
 22349  019D22  52E6               	movf	postinc1,f,c
 22350  019D24  52E6               	movf	postinc1,f,c
 22351  019D26  52E6               	movf	postinc1,f,c
 22352                           
 22353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22354                           
 22355                           ;incstack = 0
 22356 ;; hardware stack exceeded
 22357  019D28  A03E               	btfss	_flags^0,0,c
 22358  019D2A  D010               	goto	l12162
 22359                           
 22360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22361                           ;stkvar	_fp @ sp[(-4)+-2]
 22362  019D2C  0EFA               	movlw	-6
 22363  019D2E  006F FF8F FFE6     	movff	plusw1,postinc1
 22364  019D34  006F FF8F FFE6     	movff	plusw1,postinc1
 22365                           
 22366                           ;stkvar	_buf @ sp[(-6)+-4]
 22367  019D3A  0EF6               	movlw	-10
 22368  019D3C  006F FF8F FFE6     	movff	plusw1,postinc1
 22369  019D42  006F FF8F FFE6     	movff	plusw1,postinc1
 22370  019D48  ECA3  F0D6         	call	_fputs	;wreg free
 22371  019D4C                     l12162:
 22372                           
 22373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22374                           ;stkvar	_p @ sp[(-4)+-6]
 22375  019D4C  0EF7               	movlw	-9
 22376  019D4E  BEE3               	btfsc	plusw1,7,c
 22377  019D50  D011               	goto	l12166
 22378                           
 22379                           ;stkvar	_p @ sp[(-4)+-6]
 22380                           ;stkvar	_w @ sp[(-4)+0]
 22381  019D52  0EF6               	movlw	-10
 22382  019D54  006F FF8C  F001    	movff	plusw1,btemp
 22383  019D5A  0EFC               	movlw	-4
 22384  019D5C  0060  F007  FFE3   	movff	btemp,plusw1
 22385  019D62  0EF7               	movlw	-9
 22386  019D64  006F FF8C  F001    	movff	plusw1,btemp
 22387  019D6A  0EFD               	movlw	-3
 22388  019D6C  0060  F007  FFE3   	movff	btemp,plusw1
 22389  019D72  D004               	goto	l2224
 22390  019D74                     l12166:
 22391                           
 22392                           ;stkvar	_w @ sp[(-4)+0]
 22393  019D74  0EFC               	movlw	-4
 22394  019D76  6AE3               	clrf	plusw1,c
 22395  019D78  0EFD               	movlw	-3
 22396  019D7A  6AE3               	clrf	plusw1,c
 22397  019D7C                     l2224:
 22398                           
 22399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22400                           ;stkvar	_i @ sp[(-4)+2]
 22401  019D7C  0EFE               	movlw	-2
 22402  019D7E  6AE3               	clrf	plusw1,c
 22403  019D80  0EFF               	movlw	-1
 22404  019D82  6AE3               	clrf	plusw1,c
 22405                           
 22406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22407  019D84  D01E               	goto	l12172
 22408  019D86                     l12168:
 22409                           
 22410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22411                           ;stkvar	_fp @ sp[(-4)+-2]
 22412  019D86  0EFA               	movlw	-6
 22413  019D88  006F FF8F FFE6     	movff	plusw1,postinc1
 22414  019D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 22415  019D94  0E20               	movlw	32
 22416  019D96  6EE6               	movwf	postinc1,c
 22417  019D98  0E00               	movlw	0
 22418  019D9A  6EE6               	movwf	postinc1,c
 22419  019D9C  ECE6  F0CC         	call	_fputc	;wreg free
 22420                           
 22421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22422                           ;stkvar	_i @ sp[(-4)+2]
 22423  019DA0  0EFE               	movlw	-2
 22424  019DA2  50E3               	movf	plusw1,w,c
 22425  019DA4  0F01               	addlw	1
 22426  019DA6  6E01               	movwf	btemp^0,c
 22427  019DA8  0EFE               	movlw	-2
 22428  019DAA  0060  F007  FFE3   	movff	btemp,plusw1
 22429  019DB0  6A01               	clrf	btemp^0,c
 22430  019DB2  0EFF               	movlw	-1
 22431  019DB4  50E3               	movf	plusw1,w,c
 22432  019DB6  2001               	addwfc	btemp^0,w,c
 22433  019DB8  6E01               	movwf	btemp^0,c
 22434  019DBA  0EFF               	movlw	-1
 22435  019DBC  0060  F007  FFE3   	movff	btemp,plusw1
 22436  019DC2                     l12172:
 22437                           
 22438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22439                           ;stkvar	_w @ sp[(-4)+0]
 22440                           ;stkvar	_i @ sp[(-4)+2]
 22441  019DC2  50E1               	movf	fsr1l,w,c
 22442  019DC4  0FFE               	addlw	-2
 22443  019DC6  6ED9               	movwf	fsr2l,c
 22444  019DC8  50E2               	movf	fsr1h,w,c
 22445  019DCA  6EDA               	movwf	fsr2h,c
 22446  019DCC  0EFF               	movlw	255
 22447  019DCE  22DA               	addwfc	fsr2h,f,c
 22448  019DD0  0EFC               	movlw	-4
 22449  019DD2  50E3               	movf	plusw1,w,c
 22450  019DD4  5CDE               	subwf	postinc2,w,c
 22451  019DD6  50DE               	movf	postinc2,w,c
 22452  019DD8  0A80               	xorlw	128
 22453  019DDA  6E01               	movwf	btemp^0,c
 22454  019DDC  0EFD               	movlw	-3
 22455  019DDE  50E3               	movf	plusw1,w,c
 22456  019DE0  0A80               	xorlw	128
 22457  019DE2  5801               	subwfb	btemp^0,w,c
 22458  019DE4  A0D8               	btfss	status,0,c
 22459  019DE6  D7CF               	goto	l12168
 22460                           
 22461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22462  019DE8  B03E               	btfsc	_flags^0,0,c
 22463  019DEA  D010               	goto	l12176
 22464                           
 22465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22466                           ;stkvar	_fp @ sp[(-4)+-2]
 22467  019DEC  0EFA               	movlw	-6
 22468  019DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 22469  019DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 22470                           
 22471                           ;stkvar	_buf @ sp[(-6)+-4]
 22472  019DFA  0EF6               	movlw	-10
 22473  019DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 22474  019E02  006F FF8F FFE6     	movff	plusw1,postinc1
 22475  019E08  ECA3  F0D6         	call	_fputs	;wreg free
 22476  019E0C                     l12176:
 22477                           
 22478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22479                           ;stkvar	_w @ sp[(-4)+0]
 22480                           ;stkvar	_buf @ sp[(-4)+-4]
 22481  019E0C  0EF8               	movlw	-8
 22482  019E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 22483  019E14  006F FF8F FFE6     	movff	plusw1,postinc1
 22484  019E1A  EC52  F0D6         	call	_strlen	;wreg free
 22485  019E1E  0EFC               	movlw	-4
 22486  019E20  50E3               	movf	plusw1,w,c
 22487  019E22  2601               	addwf	btemp^0,f,c
 22488  019E24  0EFD               	movlw	-3
 22489  019E26  50E3               	movf	plusw1,w,c
 22490  019E28  2202               	addwfc	(btemp+1)^0,f,c
 22491                           
 22492                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22493  019E2A  0EF6               	movlw	246
 22494  019E2C  26E1               	addwf	fsr1l,f,c
 22495  019E2E  0EFF               	movlw	255
 22496  019E30  22E2               	addwfc	fsr1h,f,c
 22497  019E32  0012               	return		;funcret
 22498  019E34                     __end_of_pad:
 22499                           	opt callstack 0
 22500                           
 22501 ;; *************** function _strlen *****************
 22502 ;; Defined at:
 22503 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22504 ;; Parameters:    Size  Location     Type
 22505 ;;  s               2  [STACK] PTR const unsigned char 
 22506 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22507 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22508 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22509 ;;		 -> V(191), 
 22510 ;; Auto vars:     Size  Location     Type
 22511 ;;  a               2  [STACK] PTR const unsigned char 
 22512 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22513 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22514 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22515 ;;		 -> V(191), 
 22516 ;; Return value:  Size  Location     Type
 22517 ;;                  2  [STACK] unsigned int 
 22518 ;; Registers used:
 22519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22520 ;; Tracked objects:
 22521 ;;		On entry : 0/0
 22522 ;;		On exit  : 0/0
 22523 ;;		Unchanged: 0/0
 22524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22529 ;;Total ram usage:        0 bytes
 22530 ;; Hardware stack levels used:    1
 22531 ;; Hardware stack levels required when called:   15
 22532 ;; This function calls:
 22533 ;;		Nothing
 22534 ;; This function is called by:
 22535 ;;		_eaDogM_WriteString
 22536 ;;		_spinners
 22537 ;;		_calc_bsoc
 22538 ;;		_pad
 22539 ;;		_stoa
 22540 ;; This function uses a reentrant model
 22541 ;;
 22542                           
 22543                           	psect	text79
 22544  01ACA4                     __ptext79:
 22545                           	opt callstack 0
 22546  01ACA4                     _strlen:
 22547                           	opt callstack 0
 22548                           
 22549                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22550  01ACA4  52E6               	movf	postinc1,f,c
 22551  01ACA6  52E6               	movf	postinc1,f,c
 22552                           
 22553                           ;stkvar	_s @ sp[(-2)+-2]
 22554                           
 22555                           ;incstack = 0
 22556 ;; hardware stack exceeded
 22557  01ACA8  0EFC               	movlw	-4
 22558  01ACAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22559  01ACB0  0EFD               	movlw	-3
 22560  01ACB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22561                           
 22562                           ;stkvar	_a @ sp[(-2)+0]
 22563  01ACB8  0EFF               	movlw	-1
 22564  01ACBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22565  01ACC0  0EFE               	movlw	-2
 22566  01ACC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22567  01ACC8  D011               	goto	l7876
 22568  01ACCA                     l7874:
 22569                           
 22570                           ;stkvar	_s @ sp[(-2)+-2]
 22571  01ACCA  0EFC               	movlw	-4
 22572  01ACCC  50E3               	movf	plusw1,w,c
 22573  01ACCE  0F01               	addlw	1
 22574  01ACD0  6E01               	movwf	btemp^0,c
 22575  01ACD2  0EFC               	movlw	-4
 22576  01ACD4  0060  F007  FFE3   	movff	btemp,plusw1
 22577  01ACDA  6A01               	clrf	btemp^0,c
 22578  01ACDC  0EFD               	movlw	-3
 22579  01ACDE  50E3               	movf	plusw1,w,c
 22580  01ACE0  2001               	addwfc	btemp^0,w,c
 22581  01ACE2  6E01               	movwf	btemp^0,c
 22582  01ACE4  0EFD               	movlw	-3
 22583  01ACE6  0060  F007  FFE3   	movff	btemp,plusw1
 22584  01ACEC                     l7876:
 22585                           
 22586                           ;stkvar	_s @ sp[(-2)+-2]
 22587  01ACEC  0EFC               	movlw	-4
 22588  01ACEE  006F FF8F FFF6     	movff	plusw1,tblptrl
 22589  01ACF4  0EFD               	movlw	-3
 22590  01ACF6  006F FF8F FFF7     	movff	plusw1,tblptrh
 22591  01ACFC  0E00               	movlw	low (__mediumconst shr (0+16))
 22592  01ACFE  6EF8               	movwf	tblptru,c
 22593  01AD00  0E1F               	movlw	(high __ramtop+-1)
 22594  01AD02  64F7               	cpfsgt	tblptrh,c
 22595  01AD04  D003               	bra	u5487
 22596  01AD06  0008               	tblrd		*
 22597  01AD08  50F5               	movf	tablat,w,c
 22598  01AD0A  D007               	bra	u5480
 22599  01AD0C                     u5487:
 22600  01AD0C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22601  01AD12  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22602  01AD18  50EF               	movf	indf0,w,c
 22603  01AD1A                     u5480:
 22604  01AD1A  0900               	iorlw	0
 22605  01AD1C  A4D8               	btfss	status,2,c
 22606  01AD1E  D7D5               	goto	l7874
 22607                           
 22608                           ;stkvar	_a @ sp[(-2)+0]
 22609                           ;stkvar	_s @ sp[(-2)+-2]
 22610  01AD20  0EFC               	movlw	-4
 22611  01AD22  006F FF8C  F001    	movff	plusw1,btemp
 22612  01AD28  0EFD               	movlw	-3
 22613  01AD2A  006F FF8C  F002    	movff	plusw1,btemp+1
 22614  01AD30  0EFE               	movlw	-2
 22615  01AD32  50E3               	movf	plusw1,w,c
 22616  01AD34  5E01               	subwf	btemp^0,f,c
 22617  01AD36  0EFF               	movlw	-1
 22618  01AD38  50E3               	movf	plusw1,w,c
 22619  01AD3A  5A02               	subwfb	(btemp+1)^0,f,c
 22620                           
 22621                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22622  01AD3C  52E5               	movf	postdec1,f,c
 22623  01AD3E  52E5               	movf	postdec1,f,c
 22624  01AD40  52E5               	movf	postdec1,f,c
 22625  01AD42  52E5               	movf	postdec1,f,c
 22626  01AD44  0012               	return		;funcret
 22627  01AD46                     __end_of_strlen:
 22628                           	opt callstack 0
 22629                           
 22630 ;; *************** function _fputs *****************
 22631 ;; Defined at:
 22632 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22633 ;; Parameters:    Size  Location     Type
 22634 ;;  s               2  [STACK] PTR const unsigned char 
 22635 ;;		 -> dbuf(80), 
 22636 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22637 ;;		 -> f(6), NULL(0), 
 22638 ;; Auto vars:     Size  Location     Type
 22639 ;;  i               2  [STACK] int 
 22640 ;;  c               1  [STACK] unsigned char 
 22641 ;; Return value:  Size  Location     Type
 22642 ;;                  2  [STACK] int 
 22643 ;; Registers used:
 22644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22645 ;; Tracked objects:
 22646 ;;		On entry : 0/2
 22647 ;;		On exit  : 0/0
 22648 ;;		Unchanged: 0/0
 22649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22654 ;;Total ram usage:        0 bytes
 22655 ;; Hardware stack levels used:    1
 22656 ;; Hardware stack levels required when called:   18
 22657 ;; This function calls:
 22658 ;;		_fputc
 22659 ;; This function is called by:
 22660 ;;		_pad
 22661 ;; This function uses a reentrant model
 22662 ;;
 22663                           
 22664                           	psect	text80
 22665  01AD46                     __ptext80:
 22666                           	opt callstack 0
 22667  01AD46                     _fputs:
 22668                           	opt callstack 0
 22669                           
 22670                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22671  01AD46  52E6               	movf	postinc1,f,c
 22672  01AD48  52E6               	movf	postinc1,f,c
 22673  01AD4A  52E6               	movf	postinc1,f,c
 22674                           
 22675                           ;stkvar	_i @ sp[(-3)+0]
 22676                           
 22677                           ;incstack = 0
 22678 ;; hardware stack exceeded
 22679  01AD4C  0EFD               	movlw	-3
 22680  01AD4E  6AE3               	clrf	plusw1,c
 22681  01AD50  0EFE               	movlw	-2
 22682  01AD52  6AE3               	clrf	plusw1,c
 22683  01AD54  D01F               	goto	l12114
 22684  01AD56                     l12110:
 22685                           
 22686                           ;stkvar	_fp @ sp[(-3)+-4]
 22687  01AD56  0EF9               	movlw	-7
 22688  01AD58  006F FF8F FFE6     	movff	plusw1,postinc1
 22689  01AD5E  006F FF8F FFE6     	movff	plusw1,postinc1
 22690                           
 22691                           ;stkvar	_c @ sp[(-5)+2]
 22692  01AD64  0EFD               	movlw	-3
 22693  01AD66  50E3               	movf	plusw1,w,c
 22694  01AD68  6EE6               	movwf	postinc1,c
 22695  01AD6A  0E00               	movlw	0
 22696  01AD6C  6EE6               	movwf	postinc1,c
 22697  01AD6E  ECE6  F0CC         	call	_fputc	;wreg free
 22698                           
 22699                           ;stkvar	_i @ sp[(-3)+0]
 22700  01AD72  0EFD               	movlw	-3
 22701  01AD74  50E3               	movf	plusw1,w,c
 22702  01AD76  0F01               	addlw	1
 22703  01AD78  6E01               	movwf	btemp^0,c
 22704  01AD7A  0EFD               	movlw	-3
 22705  01AD7C  0060  F007  FFE3   	movff	btemp,plusw1
 22706  01AD82  6A01               	clrf	btemp^0,c
 22707  01AD84  0EFE               	movlw	-2
 22708  01AD86  50E3               	movf	plusw1,w,c
 22709  01AD88  2001               	addwfc	btemp^0,w,c
 22710  01AD8A  6E01               	movwf	btemp^0,c
 22711  01AD8C  0EFE               	movlw	-2
 22712  01AD8E  0060  F007  FFE3   	movff	btemp,plusw1
 22713  01AD94                     l12114:
 22714                           
 22715                           ;stkvar	_i @ sp[(-3)+0]
 22716  01AD94  0EFD               	movlw	-3
 22717  01AD96  006F FF8C  F00B    	movff	plusw1,btemp+10
 22718  01AD9C  0EFE               	movlw	-2
 22719  01AD9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22720                           
 22721                           ;stkvar	_s @ sp[(-3)+-2]
 22722  01ADA4  0EFB               	movlw	-5
 22723  01ADA6  006F FF8C  F009    	movff	plusw1,btemp+8
 22724  01ADAC  0EFC               	movlw	-4
 22725  01ADAE  006F FF8C  F00A    	movff	plusw1,btemp+9
 22726  01ADB4  500B               	movf	(btemp+10)^0,w,c
 22727  01ADB6  2409               	addwf	(btemp+8)^0,w,c
 22728  01ADB8  6ED9               	movwf	fsr2l,c
 22729  01ADBA  500C               	movf	(btemp+11)^0,w,c
 22730  01ADBC  200A               	addwfc	(btemp+9)^0,w,c
 22731  01ADBE  6EDA               	movwf	fsr2h,c
 22732  01ADC0  50DF               	movf	indf2,w,c
 22733  01ADC2  6E0C               	movwf	(btemp+11)^0,c
 22734                           
 22735                           ;stkvar	_c @ sp[(-3)+2]
 22736  01ADC4  0EFF               	movlw	-1
 22737  01ADC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22738  01ADCC  0EFF               	movlw	-1
 22739  01ADCE  50E3               	movf	plusw1,w,c
 22740  01ADD0  A4D8               	btfss	status,2,c
 22741  01ADD2  D7C1               	goto	l12110
 22742                           
 22743                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22744  01ADD4  0EF9               	movlw	249
 22745  01ADD6  26E1               	addwf	fsr1l,f,c
 22746  01ADD8  0EFF               	movlw	255
 22747  01ADDA  22E2               	addwfc	fsr1h,f,c
 22748  01ADDC  0012               	return		;funcret
 22749  01ADDE                     __end_of_fputs:
 22750                           	opt callstack 0
 22751                           
 22752 ;; *************** function _fputc *****************
 22753 ;; Defined at:
 22754 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22755 ;; Parameters:    Size  Location     Type
 22756 ;;  c               2  [STACK] int 
 22757 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22758 ;;		 -> f(6), NULL(0), 
 22759 ;; Auto vars:     Size  Location     Type
 22760 ;;		None
 22761 ;; Return value:  Size  Location     Type
 22762 ;;                  2  [STACK] int 
 22763 ;; Registers used:
 22764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22765 ;; Tracked objects:
 22766 ;;		On entry : 0/0
 22767 ;;		On exit  : 0/0
 22768 ;;		Unchanged: 0/0
 22769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22774 ;;Total ram usage:        0 bytes
 22775 ;; Hardware stack levels used:    1
 22776 ;; Hardware stack levels required when called:   17
 22777 ;; This function calls:
 22778 ;;		_putch
 22779 ;; This function is called by:
 22780 ;;		_pad
 22781 ;;		_stoa
 22782 ;;		_vfpfcnvrt
 22783 ;;		_fputs
 22784 ;; This function uses a reentrant model
 22785 ;;
 22786                           
 22787                           	psect	text81
 22788  0199CC                     __ptext81:
 22789                           	opt callstack 0
 22790  0199CC                     _fputc:
 22791                           	opt callstack 0
 22792                           
 22793                           ;stkvar	_fp @ sp[(0)+-4]
 22794                           
 22795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22796                           ;incstack = 0
 22797 ;; hardware stack exceeded
 22798  0199CC  0EFC               	movlw	-4
 22799  0199CE  006F FF8C  F001    	movff	plusw1,btemp
 22800  0199D4  0EFD               	movlw	-3
 22801  0199D6  50E3               	movf	plusw1,w,c
 22802  0199D8  1001               	iorwf	btemp^0,w,c
 22803  0199DA  B4D8               	btfsc	status,2,c
 22804  0199DC  D009               	goto	u10870
 22805                           
 22806                           ;stkvar	_fp @ sp[(0)+-4]
 22807  0199DE  0EFC               	movlw	-4
 22808  0199E0  006F FF8C  F001    	movff	plusw1,btemp
 22809  0199E6  0EFD               	movlw	-3
 22810  0199E8  50E3               	movf	plusw1,w,c
 22811  0199EA  1001               	iorwf	btemp^0,w,c
 22812  0199EC  A4D8               	btfss	status,2,c
 22813  0199EE  D006               	goto	l12098
 22814  0199F0                     u10870:
 22815                           
 22816                           ;stkvar	_c @ sp[(0)+-2]
 22817  0199F0  0EFE               	movlw	-2
 22818  0199F2  50E3               	movf	plusw1,w,c
 22819  0199F4  6EE6               	movwf	postinc1,c
 22820  0199F6  EC0E  F0E2         	call	_putch	;wreg free
 22821  0199FA  D075               	goto	l3270
 22822  0199FC                     l12098:
 22823                           
 22824                           ;stkvar	_fp @ sp[(0)+-4]
 22825  0199FC  0EFC               	movlw	-4
 22826  0199FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22827  019A04  0EFD               	movlw	-3
 22828  019A06  006F FF8C  F00C    	movff	plusw1,btemp+11
 22829  019A0C  0E04               	movlw	4
 22830  019A0E  240B               	addwf	(btemp+10)^0,w,c
 22831  019A10  6ED9               	movwf	fsr2l,c
 22832  019A12  0E00               	movlw	0
 22833  019A14  200C               	addwfc	(btemp+11)^0,w,c
 22834  019A16  6EDA               	movwf	fsr2h,c
 22835  019A18  50DE               	movf	postinc2,w,c
 22836  019A1A  10DE               	iorwf	postinc2,w,c
 22837  019A1C  B4D8               	btfsc	status,2,c
 22838  019A1E  D026               	goto	u10890
 22839                           
 22840                           ;stkvar	_fp @ sp[(0)+-4]
 22841  019A20  0EFC               	movlw	-4
 22842  019A22  006F FF8C  F00B    	movff	plusw1,btemp+10
 22843  019A28  0EFD               	movlw	-3
 22844  019A2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22845  019A30  0E04               	movlw	4
 22846  019A32  240B               	addwf	(btemp+10)^0,w,c
 22847  019A34  6ED9               	movwf	fsr2l,c
 22848  019A36  0E00               	movlw	0
 22849  019A38  200C               	addwfc	(btemp+11)^0,w,c
 22850  019A3A  6EDA               	movwf	fsr2h,c
 22851                           
 22852                           ;stkvar	_fp @ sp[(0)+-4]
 22853  019A3C  0EFC               	movlw	-4
 22854  019A3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22855  019A44  0EFD               	movlw	-3
 22856  019A46  006F FF8C  F00C    	movff	plusw1,btemp+11
 22857  019A4C  0E02               	movlw	2
 22858  019A4E  240B               	addwf	(btemp+10)^0,w,c
 22859  019A50  6EE9               	movwf	fsr0l,c
 22860  019A52  0E00               	movlw	0
 22861  019A54  200C               	addwfc	(btemp+11)^0,w,c
 22862  019A56  6EEA               	movwf	fsr0h,c
 22863  019A58  50DE               	movf	postinc2,w,c
 22864  019A5A  5CEE               	subwf	postinc0,w,c
 22865  019A5C  50EE               	movf	postinc0,w,c
 22866  019A5E  0A80               	xorlw	128
 22867  019A60  6E01               	movwf	btemp^0,c
 22868  019A62  50DE               	movf	postinc2,w,c
 22869  019A64  0A80               	xorlw	128
 22870  019A66  5801               	subwfb	btemp^0,w,c
 22871  019A68  B0D8               	btfsc	status,0,c
 22872  019A6A  D03D               	goto	l3270
 22873  019A6C                     u10890:
 22874                           
 22875                           ;stkvar	_c @ sp[(0)+-2]
 22876                           ;stkvar	_fp @ sp[(0)+-4]
 22877  019A6C  0EFC               	movlw	-4
 22878  019A6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22879  019A74  0EFD               	movlw	-3
 22880  019A76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22881  019A7C  0E02               	movlw	2
 22882  019A7E  240B               	addwf	(btemp+10)^0,w,c
 22883  019A80  6ED9               	movwf	fsr2l,c
 22884  019A82  0E00               	movlw	0
 22885  019A84  200C               	addwfc	(btemp+11)^0,w,c
 22886  019A86  6EDA               	movwf	fsr2h,c
 22887  019A88  006F FF78  F00B    	movff	postinc2,btemp+10
 22888  019A8E  006F FF74  F00C    	movff	postdec2,btemp+11
 22889                           
 22890                           ;stkvar	_fp @ sp[(0)+-4]
 22891  019A94  0EFC               	movlw	-4
 22892  019A96  006F FF8F FFD9     	movff	plusw1,fsr2l
 22893  019A9C  0EFD               	movlw	-3
 22894  019A9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 22895  019AA4  006F FF78  F009    	movff	postinc2,btemp+8
 22896  019AAA  006F FF74  F00A    	movff	postdec2,btemp+9
 22897  019AB0  500B               	movf	(btemp+10)^0,w,c
 22898  019AB2  2409               	addwf	(btemp+8)^0,w,c
 22899  019AB4  6ED9               	movwf	fsr2l,c
 22900  019AB6  500C               	movf	(btemp+11)^0,w,c
 22901  019AB8  200A               	addwfc	(btemp+9)^0,w,c
 22902  019ABA  6EDA               	movwf	fsr2h,c
 22903  019ABC  0EFE               	movlw	-2
 22904  019ABE  006F FF8F FFDF     	movff	plusw1,indf2
 22905                           
 22906                           ;stkvar	_fp @ sp[(0)+-4]
 22907  019AC4  0EFC               	movlw	-4
 22908  019AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22909  019ACC  0EFD               	movlw	-3
 22910  019ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22911  019AD4  0E02               	movlw	2
 22912  019AD6  240B               	addwf	(btemp+10)^0,w,c
 22913  019AD8  6ED9               	movwf	fsr2l,c
 22914  019ADA  0E00               	movlw	0
 22915  019ADC  200C               	addwfc	(btemp+11)^0,w,c
 22916  019ADE  6EDA               	movwf	fsr2h,c
 22917  019AE0  2ADE               	incf	postinc2,f,c
 22918  019AE2  0E00               	movlw	0
 22919  019AE4  22DD               	addwfc	postdec2,f,c
 22920  019AE6                     l3270:
 22921                           
 22922                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22923  019AE6  52E5               	movf	postdec1,f,c
 22924  019AE8  52E5               	movf	postdec1,f,c
 22925  019AEA  52E5               	movf	postdec1,f,c
 22926  019AEC  52E5               	movf	postdec1,f,c
 22927  019AEE  0012               	return		;funcret
 22928  019AF0                     __end_of_fputc:
 22929                           	opt callstack 0
 22930                           
 22931 ;; *************** function _putch *****************
 22932 ;; Defined at:
 22933 ;;		line 421 in file "eadog.c"
 22934 ;; Parameters:    Size  Location     Type
 22935 ;;  c               1  [STACK] unsigned char 
 22936 ;; Auto vars:     Size  Location     Type
 22937 ;;		None
 22938 ;; Return value:  Size  Location     Type
 22939 ;;                  1  [STACK] void 
 22940 ;; Registers used:
 22941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22942 ;; Tracked objects:
 22943 ;;		On entry : 0/0
 22944 ;;		On exit  : 0/0
 22945 ;;		Unchanged: 0/0
 22946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22951 ;;Total ram usage:        0 bytes
 22952 ;; Hardware stack levels used:    1
 22953 ;; Hardware stack levels required when called:   16
 22954 ;; This function calls:
 22955 ;;		_ringBufS_put_dma
 22956 ;; This function is called by:
 22957 ;;		_fputc
 22958 ;; This function uses a reentrant model
 22959 ;;
 22960                           
 22961                           	psect	text82
 22962  01C41C                     __ptext82:
 22963                           	opt callstack 0
 22964  01C41C                     _putch:
 22965                           	opt callstack 0
 22966                           
 22967                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22968                           ;stkvar	_c @ sp[(0)+-1]
 22969                           
 22970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22971                           ;incstack = 0
 22972 ;; hardware stack exceeded
 22973  01C41C  0EFF               	movlw	-1
 22974  01C41E  50E3               	movf	plusw1,w,c
 22975  01C420  6EE6               	movwf	postinc1,c
 22976  01C422  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22977  01C428  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22978  01C42E  EC56  F0D5         	call	_ringBufS_put_dma	;wreg free
 22979                           
 22980                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22981  01C432  52E5               	movf	postdec1,f,c
 22982  01C434  0012               	return		;funcret
 22983  01C436                     __end_of_putch:
 22984                           	opt callstack 0
 22985                           
 22986 ;; *************** function _ringBufS_put_dma *****************
 22987 ;; Defined at:
 22988 ;;		line 67 in file "ringbufs.c"
 22989 ;; Parameters:    Size  Location     Type
 22990 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22991 ;;		 -> ring_buf1(67), 
 22992 ;;  c               1  [STACK] const unsigned char 
 22993 ;; Auto vars:     Size  Location     Type
 22994 ;;		None
 22995 ;; Return value:  Size  Location     Type
 22996 ;;                  1  [STACK] void 
 22997 ;; Registers used:
 22998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22999 ;; Tracked objects:
 23000 ;;		On entry : 0/0
 23001 ;;		On exit  : 0/0
 23002 ;;		Unchanged: 0/0
 23003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23008 ;;Total ram usage:        0 bytes
 23009 ;; Hardware stack levels used:    1
 23010 ;; Hardware stack levels required when called:   15
 23011 ;; This function calls:
 23012 ;;		Nothing
 23013 ;; This function is called by:
 23014 ;;		_putch
 23015 ;; This function uses a reentrant model
 23016 ;;
 23017                           
 23018                           	psect	text83
 23019  01AAAC                     __ptext83:
 23020                           	opt callstack 0
 23021  01AAAC                     _ringBufS_put_dma:
 23022                           	opt callstack 0
 23023                           
 23024                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23025                           ;stkvar	__this @ sp[(0)+-2]
 23026                           
 23027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23028                           ;incstack = 0
 23029 ;; hardware stack exceeded
 23030  01AAAC  0EFE               	movlw	-2
 23031  01AAAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23032  01AAB4  0EFF               	movlw	-1
 23033  01AAB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23034  01AABC  0E42               	movlw	66
 23035  01AABE  240B               	addwf	(btemp+10)^0,w,c
 23036  01AAC0  6ED9               	movwf	fsr2l,c
 23037  01AAC2  0E00               	movlw	0
 23038  01AAC4  200C               	addwfc	(btemp+11)^0,w,c
 23039  01AAC6  6EDA               	movwf	fsr2h,c
 23040  01AAC8  0E40               	movlw	64
 23041  01AACA  60DF               	cpfslt	indf2,c
 23042  01AACC  D040               	goto	l1597
 23043                           
 23044                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23045                           ;stkvar	_c @ sp[(0)+-3]
 23046                           ;stkvar	__this @ sp[(0)+-2]
 23047  01AACE  0EFE               	movlw	-2
 23048  01AAD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23049  01AAD6  0EFF               	movlw	-1
 23050  01AAD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23051  01AADE  0E40               	movlw	64
 23052  01AAE0  240B               	addwf	(btemp+10)^0,w,c
 23053  01AAE2  6ED9               	movwf	fsr2l,c
 23054  01AAE4  0E00               	movlw	0
 23055  01AAE6  200C               	addwfc	(btemp+11)^0,w,c
 23056  01AAE8  6EDA               	movwf	fsr2h,c
 23057  01AAEA  50DF               	movf	indf2,w,c
 23058  01AAEC  6E0C               	movwf	(btemp+11)^0,c
 23059                           
 23060                           ;stkvar	__this @ sp[(0)+-2]
 23061  01AAEE  0EFE               	movlw	-2
 23062  01AAF0  006F FF8C  F009    	movff	plusw1,btemp+8
 23063  01AAF6  0EFF               	movlw	-1
 23064  01AAF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23065  01AAFE  500C               	movf	(btemp+11)^0,w,c
 23066  01AB00  2409               	addwf	(btemp+8)^0,w,c
 23067  01AB02  6ED9               	movwf	fsr2l,c
 23068  01AB04  0E00               	movlw	0
 23069  01AB06  200A               	addwfc	(btemp+9)^0,w,c
 23070  01AB08  6EDA               	movwf	fsr2h,c
 23071  01AB0A  0EFD               	movlw	-3
 23072  01AB0C  006F FF8F FFDF     	movff	plusw1,indf2
 23073                           
 23074                           ;ringbufs.c: 71:   ++_this->head;
 23075                           ;stkvar	__this @ sp[(0)+-2]
 23076  01AB12  0EFE               	movlw	-2
 23077  01AB14  006F FF8C  F00B    	movff	plusw1,btemp+10
 23078  01AB1A  0EFF               	movlw	-1
 23079  01AB1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23080  01AB22  0E40               	movlw	64
 23081  01AB24  240B               	addwf	(btemp+10)^0,w,c
 23082  01AB26  6ED9               	movwf	fsr2l,c
 23083  01AB28  0E00               	movlw	0
 23084  01AB2A  200C               	addwfc	(btemp+11)^0,w,c
 23085  01AB2C  6EDA               	movwf	fsr2h,c
 23086  01AB2E  2ADF               	incf	indf2,f,c
 23087                           
 23088                           ;ringbufs.c: 72:   ++_this->count;
 23089                           ;stkvar	__this @ sp[(0)+-2]
 23090  01AB30  0EFE               	movlw	-2
 23091  01AB32  006F FF8C  F00B    	movff	plusw1,btemp+10
 23092  01AB38  0EFF               	movlw	-1
 23093  01AB3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23094  01AB40  0E42               	movlw	66
 23095  01AB42  240B               	addwf	(btemp+10)^0,w,c
 23096  01AB44  6ED9               	movwf	fsr2l,c
 23097  01AB46  0E00               	movlw	0
 23098  01AB48  200C               	addwfc	(btemp+11)^0,w,c
 23099  01AB4A  6EDA               	movwf	fsr2h,c
 23100  01AB4C  2ADF               	incf	indf2,f,c
 23101  01AB4E                     l1597:
 23102                           
 23103                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23104  01AB4E  52E5               	movf	postdec1,f,c
 23105  01AB50  52E5               	movf	postdec1,f,c
 23106  01AB52  52E5               	movf	postdec1,f,c
 23107  01AB54  0012               	return		;funcret
 23108  01AB56                     __end_of_ringBufS_put_dma:
 23109                           	opt callstack 0
 23110                           
 23111 ;; *************** function _atoi *****************
 23112 ;; Defined at:
 23113 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23114 ;; Parameters:    Size  Location     Type
 23115 ;;  s               2  [STACK] PTR const unsigned char 
 23116 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 23117 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23118 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23119 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23120 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23121 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23122 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 23123 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23124 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23125 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23126 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23127 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23128 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23129 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23130 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23131 ;; Auto vars:     Size  Location     Type
 23132 ;;  n               2  [STACK] int 
 23133 ;;  neg             2  [STACK] int 
 23134 ;; Return value:  Size  Location     Type
 23135 ;;                  2  [STACK] int 
 23136 ;; Registers used:
 23137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23138 ;; Tracked objects:
 23139 ;;		On entry : 0/0
 23140 ;;		On exit  : 0/0
 23141 ;;		Unchanged: 0/0
 23142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23147 ;;Total ram usage:        0 bytes
 23148 ;; Hardware stack levels used:    1
 23149 ;; Hardware stack levels required when called:   16
 23150 ;; This function calls:
 23151 ;;		_isdigit
 23152 ;;		_isspace
 23153 ;; This function is called by:
 23154 ;;		_vfpfcnvrt
 23155 ;; This function uses a reentrant model
 23156 ;;
 23157                           
 23158                           	psect	text84
 23159  01799E                     __ptext84:
 23160                           	opt callstack 0
 23161  01799E                     _atoi:
 23162                           	opt callstack 0
 23163                           
 23164                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23165  01799E  0E09               	movlw	9
 23166  0179A0  26E1               	addwf	fsr1l,f,c
 23167  0179A2  0E00               	movlw	0
 23168  0179A4  22E2               	addwfc	fsr1h,f,c
 23169                           
 23170                           ;stkvar	_n @ sp[(-9)+5]
 23171                           
 23172                           ;incstack = 0
 23173 ;; hardware stack exceeded
 23174  0179A6  0EFC               	movlw	-4
 23175  0179A8  6AE3               	clrf	plusw1,c
 23176  0179AA  0EFD               	movlw	-3
 23177  0179AC  6AE3               	clrf	plusw1,c
 23178                           
 23179                           ;stkvar	_neg @ sp[(-9)+7]
 23180  0179AE  0EFE               	movlw	-2
 23181  0179B0  6AE3               	clrf	plusw1,c
 23182  0179B2  0EFF               	movlw	-1
 23183  0179B4  6AE3               	clrf	plusw1,c
 23184  0179B6  D011               	goto	l9500
 23185  0179B8                     l9498:
 23186                           
 23187                           ;stkvar	_s @ sp[(-9)+-2]
 23188  0179B8  0EF5               	movlw	-11
 23189  0179BA  50E3               	movf	plusw1,w,c
 23190  0179BC  0F01               	addlw	1
 23191  0179BE  6E01               	movwf	btemp^0,c
 23192  0179C0  0EF5               	movlw	-11
 23193  0179C2  0060  F007  FFE3   	movff	btemp,plusw1
 23194  0179C8  6A01               	clrf	btemp^0,c
 23195  0179CA  0EF6               	movlw	-10
 23196  0179CC  50E3               	movf	plusw1,w,c
 23197  0179CE  2001               	addwfc	btemp^0,w,c
 23198  0179D0  6E01               	movwf	btemp^0,c
 23199  0179D2  0EF6               	movlw	-10
 23200  0179D4  0060  F007  FFE3   	movff	btemp,plusw1
 23201  0179DA                     l9500:
 23202                           
 23203                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23204  0179DA  0EFB               	movlw	-5
 23205  0179DC  6AE3               	clrf	plusw1,c
 23206  0179DE  2AE3               	incf	plusw1,f,c
 23207                           
 23208                           ;stkvar	_s @ sp[(-9)+-2]
 23209  0179E0  50E1               	movf	fsr1l,w,c
 23210  0179E2  0FF5               	addlw	-11
 23211  0179E4  6ED9               	movwf	fsr2l,c
 23212  0179E6  50E2               	movf	fsr1h,w,c
 23213  0179E8  6EDA               	movwf	fsr2h,c
 23214  0179EA  0EFF               	movlw	255
 23215  0179EC  22DA               	addwfc	fsr2h,f,c
 23216  0179EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 23217  0179F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 23218  0179FA                     	if	0	;tblptru may be non-zero
 23219  0179FA                     	endif
 23220  0179FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23221  0179FA  0E00               	movlw	low (__mediumconst shr (0+16))
 23222  0179FC  6EF8               	movwf	tblptru,c
 23223  0179FE                     	endif
 23224  0179FE  0008               	tblrd		*
 23225  017A00  50F5               	movf	tablat,w,c
 23226  017A02  0A20               	xorlw	32
 23227  017A04  B4D8               	btfsc	status,2,c
 23228  017A06  D023               	goto	l9508
 23229  017A08  0EF7               	movlw	247
 23230  017A0A  6E0B               	movwf	(btemp+10)^0,c
 23231  017A0C  0EFF               	movlw	255
 23232  017A0E  6E0C               	movwf	(btemp+11)^0,c
 23233                           
 23234                           ;stkvar	_s @ sp[(-9)+-2]
 23235  017A10  50E1               	movf	fsr1l,w,c
 23236  017A12  0FF5               	addlw	-11
 23237  017A14  6ED9               	movwf	fsr2l,c
 23238  017A16  50E2               	movf	fsr1h,w,c
 23239  017A18  6EDA               	movwf	fsr2h,c
 23240  017A1A  0EFF               	movlw	255
 23241  017A1C  22DA               	addwfc	fsr2h,f,c
 23242  017A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 23243  017A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 23244  017A2A                     	if	0	;tblptru may be non-zero
 23245  017A2A                     	endif
 23246  017A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23247  017A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 23248  017A2C  6EF8               	movwf	tblptru,c
 23249  017A2E                     	endif
 23250  017A2E  0008               	tblrd		*
 23251  017A30  50F5               	movf	tablat,w,c
 23252  017A32  6E09               	movwf	(btemp+8)^0,c
 23253  017A34  6A0A               	clrf	(btemp+9)^0,c
 23254  017A36  500B               	movf	(btemp+10)^0,w,c
 23255  017A38  2609               	addwf	(btemp+8)^0,f,c
 23256  017A3A  500C               	movf	(btemp+11)^0,w,c
 23257  017A3C  220A               	addwfc	(btemp+9)^0,f,c
 23258  017A3E  500A               	movf	(btemp+9)^0,w,c
 23259  017A40  E104               	bnz	u8600
 23260  017A42  0E05               	movlw	5
 23261  017A44  5C09               	subwf	(btemp+8)^0,w,c
 23262  017A46  A0D8               	btfss	status,0,c
 23263  017A48  D002               	goto	l9508
 23264  017A4A                     u8600:
 23265                           
 23266                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23267  017A4A  0EFB               	movlw	-5
 23268  017A4C  6AE3               	clrf	plusw1,c
 23269  017A4E                     l9508:
 23270                           
 23271                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23272  017A4E  0EFB               	movlw	-5
 23273  017A50  50E3               	movf	plusw1,w,c
 23274  017A52  6E0B               	movwf	(btemp+10)^0,c
 23275  017A54  6A0C               	clrf	(btemp+11)^0,c
 23276                           
 23277                           ;stkvar	_atoi$6313 @ sp[(-9)+2]
 23278  017A56  0EF9               	movlw	-7
 23279  017A58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23280  017A5E  0EFA               	movlw	-6
 23281  017A60  0060  F033  FFE3   	movff	btemp+11,plusw1
 23282                           
 23283                           ;stkvar	_atoi$6313 @ sp[(-9)+2]
 23284  017A66  0EF9               	movlw	-7
 23285  017A68  006F FF8C  F001    	movff	plusw1,btemp
 23286  017A6E  0EFA               	movlw	-6
 23287  017A70  50E3               	movf	plusw1,w,c
 23288  017A72  1001               	iorwf	btemp^0,w,c
 23289  017A74  B4D8               	btfsc	status,2,c
 23290  017A76  D01F               	goto	l9518
 23291  017A78  D79F               	goto	l9498
 23292  017A7A                     l9514:
 23293  017A7A  0E01               	movlw	1
 23294  017A7C  6E0B               	movwf	(btemp+10)^0,c
 23295  017A7E  0E00               	movlw	0
 23296  017A80  6E0C               	movwf	(btemp+11)^0,c
 23297                           
 23298                           ;stkvar	_neg @ sp[(-9)+7]
 23299  017A82  0EFE               	movlw	-2
 23300  017A84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23301  017A8A  0EFF               	movlw	-1
 23302  017A8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23303  017A92                     l9516:
 23304                           
 23305                           ;stkvar	_s @ sp[(-9)+-2]
 23306  017A92  0EF5               	movlw	-11
 23307  017A94  50E3               	movf	plusw1,w,c
 23308  017A96  0F01               	addlw	1
 23309  017A98  6E01               	movwf	btemp^0,c
 23310  017A9A  0EF5               	movlw	-11
 23311  017A9C  0060  F007  FFE3   	movff	btemp,plusw1
 23312  017AA2  6A01               	clrf	btemp^0,c
 23313  017AA4  0EF6               	movlw	-10
 23314  017AA6  50E3               	movf	plusw1,w,c
 23315  017AA8  2001               	addwfc	btemp^0,w,c
 23316  017AAA  6E01               	movwf	btemp^0,c
 23317  017AAC  0EF6               	movlw	-10
 23318  017AAE  0060  F007  FFE3   	movff	btemp,plusw1
 23319  017AB4  D053               	goto	l9524
 23320  017AB6                     l9518:
 23321                           
 23322                           ;stkvar	_s @ sp[(-9)+-2]
 23323  017AB6  50E1               	movf	fsr1l,w,c
 23324  017AB8  0FF5               	addlw	-11
 23325  017ABA  6ED9               	movwf	fsr2l,c
 23326  017ABC  50E2               	movf	fsr1h,w,c
 23327  017ABE  6EDA               	movwf	fsr2h,c
 23328  017AC0  0EFF               	movlw	255
 23329  017AC2  22DA               	addwfc	fsr2h,f,c
 23330  017AC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 23331  017ACA  006F FF77 FFF7     	movff	postdec2,tblptrh
 23332  017AD0                     	if	0	;tblptru may be non-zero
 23333  017AD0                     	endif
 23334  017AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23335  017AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23336  017AD2  6EF8               	movwf	tblptru,c
 23337  017AD4                     	endif
 23338  017AD4  0008               	tblrd		*
 23339  017AD6  50F5               	movf	tablat,w,c
 23340  017AD8  6E0B               	movwf	(btemp+10)^0,c
 23341  017ADA  6A0C               	clrf	(btemp+11)^0,c
 23342                           
 23343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23344                           ; Switch size 1, requested type "simple"
 23345                           ; Number of cases is 1, Range of values is 0 to 0
 23346                           ; switch strategies available:
 23347                           ; Name         Instructions Cycles
 23348                           ; simple_byte            4     3 (average)
 23349                           ;	Chosen strategy is simple_byte
 23350  017ADC  500C               	movf	(btemp+11)^0,w,c
 23351  017ADE  0A00               	xorlw	0	; case 0
 23352  017AE0  A4D8               	btfss	status,2,c
 23353  017AE2  D03C               	goto	l9524
 23354                           
 23355                           ; Switch size 1, requested type "simple"
 23356                           ; Number of cases is 2, Range of values is 43 to 45
 23357                           ; switch strategies available:
 23358                           ; Name         Instructions Cycles
 23359                           ; simple_byte            7     4 (average)
 23360                           ;	Chosen strategy is simple_byte
 23361  017AE4  500B               	movf	(btemp+10)^0,w,c
 23362  017AE6  0A2B               	xorlw	43	; case 43
 23363  017AE8  B4D8               	btfsc	status,2,c
 23364  017AEA  D7D3               	goto	l9516
 23365  017AEC  0A06               	xorlw	6	; case 45
 23366  017AEE  B4D8               	btfsc	status,2,c
 23367  017AF0  D7C4               	goto	l9514
 23368  017AF2  D034               	goto	l9524
 23369  017AF4                     l9520:
 23370                           
 23371                           ;stkvar	_n @ sp[(-9)+5]
 23372  017AF4  0EFC               	movlw	-4
 23373  017AF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23374  017AFC  0EFD               	movlw	-3
 23375  017AFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23376  017B04  0E0A               	movlw	10
 23377  017B06  020B               	mulwf	(btemp+10)^0,c
 23378  017B08  006F FFCC  F009    	movff	prodl,btemp+8
 23379  017B0E  006F FFD0  F00A    	movff	prodh,btemp+9
 23380  017B14  020C               	mulwf	(btemp+11)^0,c
 23381  017B16  50F3               	movf	prodl,w,c
 23382  017B18  260A               	addwf	(btemp+9)^0,f,c
 23383                           
 23384                           ;stkvar	_s @ sp[(-9)+-2]
 23385  017B1A  50E1               	movf	fsr1l,w,c
 23386  017B1C  0FF5               	addlw	-11
 23387  017B1E  6ED9               	movwf	fsr2l,c
 23388  017B20  50E2               	movf	fsr1h,w,c
 23389  017B22  6EDA               	movwf	fsr2h,c
 23390  017B24  0EFF               	movlw	255
 23391  017B26  22DA               	addwfc	fsr2h,f,c
 23392  017B28  006F FF7B FFF6     	movff	postinc2,tblptrl
 23393  017B2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 23394  017B34                     	if	0	;tblptru may be non-zero
 23395  017B34                     	endif
 23396  017B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23397  017B34  0E00               	movlw	low (__mediumconst shr (0+16))
 23398  017B36  6EF8               	movwf	tblptru,c
 23399  017B38                     	endif
 23400  017B38  0008               	tblrd		*
 23401  017B3A  50F5               	movf	tablat,w,c
 23402  017B3C  5E09               	subwf	(btemp+8)^0,f,c
 23403  017B3E  0E00               	movlw	0
 23404  017B40  5A0A               	subwfb	(btemp+9)^0,f,c
 23405  017B42  0E30               	movlw	48
 23406  017B44  2609               	addwf	(btemp+8)^0,f,c
 23407  017B46  0E00               	movlw	0
 23408  017B48  220A               	addwfc	(btemp+9)^0,f,c
 23409                           
 23410                           ;stkvar	_n @ sp[(-9)+5]
 23411  017B4A  0EFC               	movlw	-4
 23412  017B4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23413  017B52  0EFD               	movlw	-3
 23414  017B54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23415  017B5A  D79B               	goto	l9516
 23416  017B5C                     l9524:
 23417  017B5C  0ED0               	movlw	208
 23418  017B5E  6E0B               	movwf	(btemp+10)^0,c
 23419  017B60  0EFF               	movlw	255
 23420  017B62  6E0C               	movwf	(btemp+11)^0,c
 23421                           
 23422                           ;stkvar	_s @ sp[(-9)+-2]
 23423  017B64  50E1               	movf	fsr1l,w,c
 23424  017B66  0FF5               	addlw	-11
 23425  017B68  6ED9               	movwf	fsr2l,c
 23426  017B6A  50E2               	movf	fsr1h,w,c
 23427  017B6C  6EDA               	movwf	fsr2h,c
 23428  017B6E  0EFF               	movlw	255
 23429  017B70  22DA               	addwfc	fsr2h,f,c
 23430  017B72  006F FF7B FFF6     	movff	postinc2,tblptrl
 23431  017B78  006F FF77 FFF7     	movff	postdec2,tblptrh
 23432  017B7E                     	if	0	;tblptru may be non-zero
 23433  017B7E                     	endif
 23434  017B7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23435  017B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 23436  017B80  6EF8               	movwf	tblptru,c
 23437  017B82                     	endif
 23438  017B82  0008               	tblrd		*
 23439  017B84  50F5               	movf	tablat,w,c
 23440  017B86  6E09               	movwf	(btemp+8)^0,c
 23441  017B88  6A0A               	clrf	(btemp+9)^0,c
 23442  017B8A  500B               	movf	(btemp+10)^0,w,c
 23443  017B8C  2609               	addwf	(btemp+8)^0,f,c
 23444  017B8E  500C               	movf	(btemp+11)^0,w,c
 23445  017B90  220A               	addwfc	(btemp+9)^0,f,c
 23446  017B92  500A               	movf	(btemp+9)^0,w,c
 23447  017B94  E106               	bnz	u8620
 23448  017B96  0E0A               	movlw	10
 23449  017B98  5C09               	subwf	(btemp+8)^0,w,c
 23450  017B9A  B0D8               	btfsc	status,0,c
 23451  017B9C  D002               	goto	u8620
 23452  017B9E  0E01               	movlw	1
 23453  017BA0  D001               	goto	u8630
 23454  017BA2                     u8620:
 23455  017BA2  0E00               	movlw	0
 23456  017BA4                     u8630:
 23457  017BA4  6E0B               	movwf	(btemp+10)^0,c
 23458  017BA6  6A0C               	clrf	(btemp+11)^0,c
 23459                           
 23460                           ;stkvar	_atoi$6315 @ sp[(-9)+0]
 23461  017BA8  0EF7               	movlw	-9
 23462  017BAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23463  017BB0  0EF8               	movlw	-8
 23464  017BB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23465                           
 23466                           ;stkvar	_atoi$6315 @ sp[(-9)+0]
 23467  017BB8  0EF7               	movlw	-9
 23468  017BBA  006F FF8C  F001    	movff	plusw1,btemp
 23469  017BC0  0EF8               	movlw	-8
 23470  017BC2  50E3               	movf	plusw1,w,c
 23471  017BC4  1001               	iorwf	btemp^0,w,c
 23472  017BC6  A4D8               	btfss	status,2,c
 23473  017BC8  D795               	goto	l9520
 23474                           
 23475                           ;stkvar	_neg @ sp[(-9)+7]
 23476  017BCA  0EFE               	movlw	-2
 23477  017BCC  006F FF8C  F001    	movff	plusw1,btemp
 23478  017BD2  0EFF               	movlw	-1
 23479  017BD4  50E3               	movf	plusw1,w,c
 23480  017BD6  1001               	iorwf	btemp^0,w,c
 23481  017BD8  A4D8               	btfss	status,2,c
 23482  017BDA  D00E               	goto	l9534
 23483                           
 23484                           ;stkvar	_n @ sp[(-9)+5]
 23485  017BDC  0EFC               	movlw	-4
 23486  017BDE  006F FF8C  F001    	movff	plusw1,btemp
 23487  017BE4  1E01               	comf	btemp^0,f,c
 23488  017BE6  0EFD               	movlw	-3
 23489  017BE8  006F FF8C  F002    	movff	plusw1,btemp+1
 23490  017BEE  1E02               	comf	(btemp+1)^0,f,c
 23491  017BF0  2A01               	incf	btemp^0,f,c
 23492  017BF2  B4D8               	btfsc	status,2,c
 23493  017BF4  2A02               	incf	(btemp+1)^0,f,c
 23494  017BF6  D008               	goto	l3201
 23495  017BF8                     l9534:
 23496                           
 23497                           ;stkvar	_n @ sp[(-9)+5]
 23498  017BF8  0EFC               	movlw	-4
 23499  017BFA  006F FF8C  F001    	movff	plusw1,btemp
 23500  017C00  0EFD               	movlw	-3
 23501  017C02  006F FF8C  F002    	movff	plusw1,btemp+1
 23502  017C08                     l3201:
 23503                           
 23504                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23505  017C08  0EF5               	movlw	245
 23506  017C0A  26E1               	addwf	fsr1l,f,c
 23507  017C0C  0EFF               	movlw	255
 23508  017C0E  22E2               	addwfc	fsr1h,f,c
 23509  017C10  0012               	return		;funcret
 23510  017C12                     __end_of_atoi:
 23511                           	opt callstack 0
 23512                           
 23513 ;; *************** function _isspace *****************
 23514 ;; Defined at:
 23515 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23516 ;; Parameters:    Size  Location     Type
 23517 ;;  c               2  [STACK] int 
 23518 ;; Auto vars:     Size  Location     Type
 23519 ;;		None
 23520 ;; Return value:  Size  Location     Type
 23521 ;;                  2  [STACK] int 
 23522 ;; Registers used:
 23523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23524 ;; Tracked objects:
 23525 ;;		On entry : 0/0
 23526 ;;		On exit  : 0/0
 23527 ;;		Unchanged: 0/0
 23528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;Total ram usage:        0 bytes
 23534 ;; Hardware stack levels used:    1
 23535 ;; Hardware stack levels required when called:   15
 23536 ;; This function calls:
 23537 ;;		Nothing
 23538 ;; This function is called by:
 23539 ;;		_atoi
 23540 ;; This function uses a reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text85
 23544  01B6AE                     __ptext85:
 23545                           	opt callstack 0
 23546  01B6AE                     _isspace:
 23547                           	opt callstack 0
 23548                           
 23549                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23550  01B6AE  52E6               	movf	postinc1,f,c
 23551                           
 23552                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23553                           
 23554                           ;incstack = 0
 23555 ;; hardware stack exceeded
 23556  01B6B0  0EFF               	movlw	-1
 23557  01B6B2  6AE3               	clrf	plusw1,c
 23558  01B6B4  2AE3               	incf	plusw1,f,c
 23559                           
 23560                           ;stkvar	_c @ sp[(-1)+-2]
 23561  01B6B6  0EFD               	movlw	-3
 23562  01B6B8  006F FF8C  F001    	movff	plusw1,btemp
 23563  01B6BE  0E20               	movlw	32
 23564  01B6C0  1801               	xorwf	btemp^0,w,c
 23565  01B6C2  E104               	bnz	u7490
 23566  01B6C4  0EFE               	movlw	-2
 23567  01B6C6  50E3               	movf	plusw1,w,c
 23568  01B6C8  B4D8               	btfsc	status,2,c
 23569  01B6CA  D012               	goto	l8918
 23570  01B6CC                     u7490:
 23571                           
 23572                           ;stkvar	_c @ sp[(-1)+-2]
 23573  01B6CC  0EFD               	movlw	-3
 23574  01B6CE  50E3               	movf	plusw1,w,c
 23575  01B6D0  0FF7               	addlw	247
 23576  01B6D2  6E0B               	movwf	(btemp+10)^0,c
 23577  01B6D4  0EFE               	movlw	-2
 23578  01B6D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23579  01B6DC  0EFF               	movlw	255
 23580  01B6DE  220C               	addwfc	(btemp+11)^0,f,c
 23581  01B6E0  500C               	movf	(btemp+11)^0,w,c
 23582  01B6E2  E104               	bnz	u7500
 23583  01B6E4  0E05               	movlw	5
 23584  01B6E6  5C0B               	subwf	(btemp+10)^0,w,c
 23585  01B6E8  A0D8               	btfss	status,0,c
 23586  01B6EA  D002               	goto	l8918
 23587  01B6EC                     u7500:
 23588                           
 23589                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23590  01B6EC  0EFF               	movlw	-1
 23591  01B6EE  6AE3               	clrf	plusw1,c
 23592  01B6F0                     l8918:
 23593                           
 23594                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23595  01B6F0  0EFF               	movlw	-1
 23596  01B6F2  50E3               	movf	plusw1,w,c
 23597  01B6F4  6E01               	movwf	btemp^0,c
 23598  01B6F6  6A02               	clrf	(btemp+1)^0,c
 23599                           
 23600                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23601  01B6F8  52E5               	movf	postdec1,f,c
 23602  01B6FA  52E5               	movf	postdec1,f,c
 23603  01B6FC  52E5               	movf	postdec1,f,c
 23604  01B6FE  0012               	return		;funcret
 23605  01B700                     __end_of_isspace:
 23606                           	opt callstack 0
 23607                           
 23608 ;; *************** function _isdigit *****************
 23609 ;; Defined at:
 23610 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23611 ;; Parameters:    Size  Location     Type
 23612 ;;  c               2  [STACK] int 
 23613 ;; Auto vars:     Size  Location     Type
 23614 ;;		None
 23615 ;; Return value:  Size  Location     Type
 23616 ;;                  2  [STACK] int 
 23617 ;; Registers used:
 23618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23619 ;; Tracked objects:
 23620 ;;		On entry : 0/0
 23621 ;;		On exit  : 0/0
 23622 ;;		Unchanged: 0/0
 23623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23628 ;;Total ram usage:        0 bytes
 23629 ;; Hardware stack levels used:    1
 23630 ;; Hardware stack levels required when called:   15
 23631 ;; This function calls:
 23632 ;;		Nothing
 23633 ;; This function is called by:
 23634 ;;		_vfpfcnvrt
 23635 ;;		_atoi
 23636 ;; This function uses a reentrant model
 23637 ;;
 23638                           
 23639                           	psect	text86
 23640  01BEA0                     __ptext86:
 23641                           	opt callstack 0
 23642  01BEA0                     _isdigit:
 23643                           	opt callstack 0
 23644                           
 23645                           ;stkvar	_c @ sp[(0)+-2]
 23646                           
 23647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23648                           ;incstack = 0
 23649 ;; hardware stack exceeded
 23650  01BEA0  0EFE               	movlw	-2
 23651  01BEA2  50E3               	movf	plusw1,w,c
 23652  01BEA4  0FD0               	addlw	208
 23653  01BEA6  6E0B               	movwf	(btemp+10)^0,c
 23654  01BEA8  0EFF               	movlw	-1
 23655  01BEAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23656  01BEB0  0EFF               	movlw	255
 23657  01BEB2  220C               	addwfc	(btemp+11)^0,f,c
 23658  01BEB4  500C               	movf	(btemp+11)^0,w,c
 23659  01BEB6  E106               	bnz	u6340
 23660  01BEB8  0E0A               	movlw	10
 23661  01BEBA  5C0B               	subwf	(btemp+10)^0,w,c
 23662  01BEBC  B0D8               	btfsc	status,0,c
 23663  01BEBE  D002               	goto	u6340
 23664  01BEC0  0E01               	movlw	1
 23665  01BEC2  D001               	goto	u6350
 23666  01BEC4                     u6340:
 23667  01BEC4  0E00               	movlw	0
 23668  01BEC6                     u6350:
 23669  01BEC6  6E01               	movwf	btemp^0,c
 23670  01BEC8  6A02               	clrf	(btemp+1)^0,c
 23671                           
 23672                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23673  01BECA  52E5               	movf	postdec1,f,c
 23674  01BECC  52E5               	movf	postdec1,f,c
 23675  01BECE  0012               	return		;funcret
 23676  01BED0                     __end_of_isdigit:
 23677                           	opt callstack 0
 23678                           
 23679 ;; *************** function _set_vterm *****************
 23680 ;; Defined at:
 23681 ;;		line 107 in file "mconfig.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;  vterm           1  [STACK] const unsigned char 
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;		None
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  1  [STACK] unsigned char 
 23688 ;; Registers used:
 23689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23690 ;; Tracked objects:
 23691 ;;		On entry : 0/1
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23699 ;;Total ram usage:        0 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:   15
 23702 ;; This function calls:
 23703 ;;		Nothing
 23704 ;; This function is called by:
 23705 ;;		_main
 23706 ;;		_check_help
 23707 ;; This function uses a reentrant model
 23708 ;;
 23709                           
 23710                           	psect	text87
 23711  01C3C2                     __ptext87:
 23712                           	opt callstack 0
 23713  01C3C2                     _set_vterm:
 23714                           	opt callstack 15
 23715                           
 23716                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23717                           ;stkvar	_vterm @ sp[(0)+-1]
 23718                           
 23719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23720                           ;incstack = 0
 23721  01C3C2  0EFF               	movlw	-1
 23722  01C3C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23723  01C3CA  0E03               	movlw	3
 23724  01C3CC  160C               	andwf	(btemp+11)^0,f,c
 23725  01C3CE  EE22  F20A         	lfsr	2,_D+480
 23726  01C3D2  50DF               	movf	223,w,c
 23727  01C3D4  180C               	xorwf	(btemp+11)^0,w,c
 23728  01C3D6  0BFE               	andlw	-2
 23729  01C3D8  180C               	xorwf	(btemp+11)^0,w,c
 23730  01C3DA  6EDF               	movwf	223,c
 23731                           
 23732                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23733  01C3DC  52E5               	movf	postdec1,f,c
 23734  01C3DE  0012               	return		;funcret
 23735  01C3E0                     __end_of_set_vterm:
 23736                           	opt callstack 0
 23737                           
 23738 ;; *************** function _set_temp_display_help *****************
 23739 ;; Defined at:
 23740 ;;		line 211 in file "mconfig.c"
 23741 ;; Parameters:    Size  Location     Type
 23742 ;;  new_response    1  [STACK] const enum E16509
 23743 ;; Auto vars:     Size  Location     Type
 23744 ;;		None
 23745 ;; Return value:  Size  Location     Type
 23746 ;;                  1  [STACK] enum E16509
 23747 ;; Registers used:
 23748 ;;		wreg, fsr1l, fsr1h
 23749 ;; Tracked objects:
 23750 ;;		On entry : 0/1
 23751 ;;		On exit  : 3F/1
 23752 ;;		Unchanged: 0/0
 23753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23758 ;;Total ram usage:        0 bytes
 23759 ;; Hardware stack levels used:    1
 23760 ;; Hardware stack levels required when called:   15
 23761 ;; This function calls:
 23762 ;;		Nothing
 23763 ;; This function is called by:
 23764 ;;		_check_help
 23765 ;; This function uses a reentrant model
 23766 ;;
 23767                           
 23768                           	psect	text88
 23769  01C50A                     __ptext88:
 23770                           	opt callstack 0
 23771  01C50A                     _set_temp_display_help:
 23772                           	opt callstack 14
 23773                           
 23774                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23775                           
 23776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23777                           ;incstack = 0
 23778  01C50A  0101               	movlb	1	; () banked
 23779  01C50C  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23780                           
 23781                           ; BSR set to: 1
 23782                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23783                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23784  01C50E  0EFF               	movlw	-1
 23785  01C510  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23786                           
 23787                           ; BSR set to: 1
 23788                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23789  01C516  52E5               	movf	postdec1,f,c
 23790  01C518  0012               	return		;funcret
 23791  01C51A                     __end_of_set_temp_display_help:
 23792                           	opt callstack 0
 23793                           
 23794 ;; *************** function _set_display_info *****************
 23795 ;; Defined at:
 23796 ;;		line 200 in file "mconfig.c"
 23797 ;; Parameters:    Size  Location     Type
 23798 ;;  new_response    1  [STACK] const enum E16509
 23799 ;; Auto vars:     Size  Location     Type
 23800 ;;		None
 23801 ;; Return value:  Size  Location     Type
 23802 ;;                  1  [STACK] enum E16994
 23803 ;; Registers used:
 23804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23805 ;; Tracked objects:
 23806 ;;		On entry : 0/1
 23807 ;;		On exit  : 0/0
 23808 ;;		Unchanged: 0/0
 23809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23814 ;;Total ram usage:        0 bytes
 23815 ;; Hardware stack levels used:    1
 23816 ;; Hardware stack levels required when called:   16
 23817 ;; This function calls:
 23818 ;;		_TimerDone
 23819 ;; This function is called by:
 23820 ;;		_main
 23821 ;;		_check_help
 23822 ;; This function uses a reentrant model
 23823 ;;
 23824                           
 23825                           	psect	text89
 23826  01C3E0                     __ptext89:
 23827                           	opt callstack 0
 23828  01C3E0                     _set_display_info:
 23829                           	opt callstack 14
 23830                           
 23831                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23832                           
 23833                           ; BSR set to: 1
 23834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23835                           ;incstack = 0
 23836  01C3E0  0E07               	movlw	7
 23837  01C3E2  6EE6               	movwf	postinc1,c
 23838  01C3E4  ECEB  F0DF         	call	_TimerDone	;wreg free
 23839  01C3E8  5001               	movf	btemp^0,w,c
 23840  01C3EA  B4D8               	btfsc	status,2,c
 23841  01C3EC  D006               	goto	l1732
 23842                           
 23843                           ;mconfig.c: 205:   old_info = V.response.info;
 23844  01C3EE  0101               	movlb	1	; () banked
 23845  01C3F0  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23846                           
 23847                           ; BSR set to: 1
 23848                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23849                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23850  01C3F2  0EFF               	movlw	-1
 23851  01C3F4  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23852  01C3FA                     l1732:
 23853                           
 23854                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23855  01C3FA  52E5               	movf	postdec1,f,c
 23856  01C3FC  0012               	return		;funcret
 23857  01C3FE                     __end_of_set_display_info:
 23858                           	opt callstack 0
 23859                           
 23860 ;; *************** function _mode_lamp_dim *****************
 23861 ;; Defined at:
 23862 ;;		line 13 in file "mconfig.c"
 23863 ;; Parameters:    Size  Location     Type
 23864 ;;  level           2  [STACK] const unsigned short 
 23865 ;; Auto vars:     Size  Location     Type
 23866 ;;		None
 23867 ;; Return value:  Size  Location     Type
 23868 ;;                  1  [STACK] void 
 23869 ;; Registers used:
 23870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23871 ;; Tracked objects:
 23872 ;;		On entry : 0/1
 23873 ;;		On exit  : 0/0
 23874 ;;		Unchanged: 0/0
 23875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23880 ;;Total ram usage:        0 bytes
 23881 ;; Hardware stack levels used:    1
 23882 ;; Hardware stack levels required when called:   16
 23883 ;; This function calls:
 23884 ;;		_PWM8_LoadDutyValue
 23885 ;; This function is called by:
 23886 ;;		_main
 23887 ;;		_check_help
 23888 ;; This function uses a reentrant model
 23889 ;;
 23890                           
 23891                           	psect	text90
 23892  01C452                     __ptext90:
 23893                           	opt callstack 0
 23894  01C452                     _mode_lamp_dim:
 23895                           	opt callstack 14
 23896                           
 23897                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23898                           ;stkvar	_level @ sp[(0)+-2]
 23899                           
 23900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23901                           ;incstack = 0
 23902  01C452  0EFE               	movlw	-2
 23903  01C454  006F FF8F FFE6     	movff	plusw1,postinc1
 23904  01C45A  006F FF8F FFE6     	movff	plusw1,postinc1
 23905  01C460  EC35  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23906                           
 23907                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23908  01C464  52E5               	movf	postdec1,f,c
 23909  01C466  52E5               	movf	postdec1,f,c
 23910  01C468  0012               	return		;funcret
 23911  01C46A                     __end_of_mode_lamp_dim:
 23912                           	opt callstack 0
 23913                           
 23914 ;; *************** function _mode_lamp_bright *****************
 23915 ;; Defined at:
 23916 ;;		line 18 in file "mconfig.c"
 23917 ;; Parameters:    Size  Location     Type
 23918 ;;		None
 23919 ;; Auto vars:     Size  Location     Type
 23920 ;;		None
 23921 ;; Return value:  Size  Location     Type
 23922 ;;                  1  [STACK] void 
 23923 ;; Registers used:
 23924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23925 ;; Tracked objects:
 23926 ;;		On entry : 0/0
 23927 ;;		On exit  : 0/0
 23928 ;;		Unchanged: 0/0
 23929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;Total ram usage:        0 bytes
 23935 ;; Hardware stack levels used:    1
 23936 ;; Hardware stack levels required when called:   16
 23937 ;; This function calls:
 23938 ;;		_PWM8_LoadDutyValue
 23939 ;; This function is called by:
 23940 ;;		_check_help
 23941 ;; This function uses a reentrant model
 23942 ;;
 23943                           
 23944                           	psect	text91
 23945  01C538                     __ptext91:
 23946                           	opt callstack 0
 23947  01C538                     _mode_lamp_bright:
 23948                           	opt callstack 13
 23949                           
 23950                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23951                           
 23952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23953                           ;incstack = 0
 23954  01C538  0E2C               	movlw	44
 23955  01C53A  6EE6               	movwf	postinc1,c
 23956  01C53C  0E01               	movlw	1
 23957  01C53E  6EE6               	movwf	postinc1,c
 23958  01C540  EC35  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23959                           
 23960                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23961  01C544  0012               	return		;funcret
 23962  01C546                     __end_of_mode_lamp_bright:
 23963                           	opt callstack 0
 23964                           
 23965 ;; *************** function _PWM8_LoadDutyValue *****************
 23966 ;; Defined at:
 23967 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23968 ;; Parameters:    Size  Location     Type
 23969 ;;  dutyValue       2  [STACK] unsigned short 
 23970 ;; Auto vars:     Size  Location     Type
 23971 ;;		None
 23972 ;; Return value:  Size  Location     Type
 23973 ;;                  1  [STACK] void 
 23974 ;; Registers used:
 23975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23976 ;; Tracked objects:
 23977 ;;		On entry : 0/1
 23978 ;;		On exit  : 0/0
 23979 ;;		Unchanged: 0/0
 23980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23985 ;;Total ram usage:        0 bytes
 23986 ;; Hardware stack levels used:    1
 23987 ;; Hardware stack levels required when called:   15
 23988 ;; This function calls:
 23989 ;;		Nothing
 23990 ;; This function is called by:
 23991 ;;		_mode_lamp_dim
 23992 ;;		_mode_lamp_bright
 23993 ;; This function uses a reentrant model
 23994 ;;
 23995                           
 23996                           	psect	text92
 23997  01BA6A                     __ptext92:
 23998                           	opt callstack 0
 23999  01BA6A                     _PWM8_LoadDutyValue:
 24000                           	opt callstack 14
 24001                           
 24002                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24003                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24004                           
 24005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24006                           ;incstack = 0
 24007  01BA6A  0EFE               	movlw	-2
 24008  01BA6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24009  01BA72  0EFF               	movlw	-1
 24010  01BA74  006F FF8C  F00C    	movff	plusw1,btemp+11
 24011  01BA7A  90D8               	bcf	status,0,c
 24012  01BA7C  320C               	rrcf	(btemp+11)^0,f,c
 24013  01BA7E  320B               	rrcf	(btemp+10)^0,f,c
 24014  01BA80  90D8               	bcf	status,0,c
 24015  01BA82  320C               	rrcf	(btemp+11)^0,f,c
 24016  01BA84  320B               	rrcf	(btemp+10)^0,f,c
 24017  01BA86  500B               	movf	(btemp+10)^0,w,c
 24018  01BA88  6E61               	movwf	97,c	;volatile
 24019                           
 24020                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24021                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24022  01BA8A  0EFE               	movlw	-2
 24023  01BA8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24024  01BA92  0E03               	movlw	3
 24025  01BA94  160C               	andwf	(btemp+11)^0,f,c
 24026  01BA96  0E06               	movlw	6
 24027  01BA98  6E01               	movwf	btemp^0,c
 24028  01BA9A                     u9445:
 24029  01BA9A  90D8               	bcf	status,0,c
 24030  01BA9C  360C               	rlcf	(btemp+11)^0,f,c
 24031  01BA9E  2E01               	decfsz	btemp^0,f,c
 24032  01BAA0  D7FC               	goto	u9445
 24033  01BAA2  500C               	movf	(btemp+11)^0,w,c
 24034  01BAA4  6E60               	movwf	96,c	;volatile
 24035                           
 24036                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24037  01BAA6  52E5               	movf	postdec1,f,c
 24038  01BAA8  52E5               	movf	postdec1,f,c
 24039  01BAAA  0012               	return		;funcret
 24040  01BAAC                     __end_of_PWM8_LoadDutyValue:
 24041                           	opt callstack 0
 24042                           
 24043 ;; *************** function _help_button *****************
 24044 ;; Defined at:
 24045 ;;		line 26 in file "mconfig.c"
 24046 ;; Parameters:    Size  Location     Type
 24047 ;;		None
 24048 ;; Auto vars:     Size  Location     Type
 24049 ;;		None
 24050 ;; Return value:  Size  Location     Type
 24051 ;;                  1  [STACK] _Bool 
 24052 ;; Registers used:
 24053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24054 ;; Tracked objects:
 24055 ;;		On entry : 0/1
 24056 ;;		On exit  : 0/0
 24057 ;;		Unchanged: 0/0
 24058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24063 ;;Total ram usage:        0 bytes
 24064 ;; Hardware stack levels used:    1
 24065 ;; Hardware stack levels required when called:   16
 24066 ;; This function calls:
 24067 ;;		_StartTimer
 24068 ;;		_TimerDone
 24069 ;; This function is called by:
 24070 ;;		_check_help
 24071 ;; This function uses a reentrant model
 24072 ;;
 24073                           
 24074                           	psect	text93
 24075  01BC64                     __ptext93:
 24076                           	opt callstack 0
 24077  01BC64                     _help_button:
 24078                           	opt callstack 13
 24079                           
 24080                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24081                           
 24082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24083                           ;incstack = 0
 24084  01BC64  B0CB               	btfsc	203,0,c	;volatile
 24085  01BC66  D00C               	goto	l1675
 24086                           
 24087                           ;mconfig.c: 29:   V.help = 1;
 24088  01BC68  0101               	movlb	1	; () banked
 24089  01BC6A  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24090                           
 24091                           ; BSR set to: 1
 24092                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24093  01BC6C  0E08               	movlw	8
 24094  01BC6E  6EE6               	movwf	postinc1,c
 24095  01BC70  ECEB  F0DF         	call	_TimerDone	;wreg free
 24096  01BC74  5001               	movf	btemp^0,w,c
 24097  01BC76  B4D8               	btfsc	status,2,c
 24098  01BC78  D003               	goto	l1675
 24099                           
 24100                           ;mconfig.c: 31:    return 1;
 24101  01BC7A  0E01               	movlw	1
 24102  01BC7C  6E01               	movwf	btemp^0,c
 24103  01BC7E  0012               	return	
 24104  01BC80                     l1675:
 24105                           
 24106                           ;mconfig.c: 34:  if (!V.help)
 24107  01BC80  0101               	movlb	1	; () banked
 24108  01BC82  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24109  01BC84  D008               	goto	l10646
 24110                           
 24111                           ; BSR set to: 1
 24112                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24113  01BC86  0E2C               	movlw	44
 24114  01BC88  6EE6               	movwf	postinc1,c
 24115  01BC8A  0E01               	movlw	1
 24116  01BC8C  6EE6               	movwf	postinc1,c
 24117  01BC8E  0E08               	movlw	8
 24118  01BC90  6EE6               	movwf	postinc1,c
 24119  01BC92  EC96  F0DD         	call	_StartTimer	;wreg free
 24120  01BC96                     l10646:
 24121                           
 24122                           ;mconfig.c: 37:  return 0;
 24123  01BC96  0E00               	movlw	0
 24124  01BC98  6E01               	movwf	btemp^0,c
 24125                           
 24126                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24127  01BC9A  0012               	return		;funcret
 24128  01BC9C                     __end_of_help_button:
 24129                           	opt callstack 0
 24130                           
 24131 ;; *************** function _TimerDone *****************
 24132 ;; Defined at:
 24133 ;;		line 20 in file "timers.c"
 24134 ;; Parameters:    Size  Location     Type
 24135 ;;  timer           1  [STACK] const unsigned char 
 24136 ;; Auto vars:     Size  Location     Type
 24137 ;;		None
 24138 ;; Return value:  Size  Location     Type
 24139 ;;                  1  [STACK] _Bool 
 24140 ;; Registers used:
 24141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24142 ;; Tracked objects:
 24143 ;;		On entry : 0/1
 24144 ;;		On exit  : 0/0
 24145 ;;		Unchanged: 0/0
 24146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;Total ram usage:        0 bytes
 24152 ;; Hardware stack levels used:    1
 24153 ;; Hardware stack levels required when called:   15
 24154 ;; This function calls:
 24155 ;;		Nothing
 24156 ;; This function is called by:
 24157 ;;		_main
 24158 ;;		_WaitMs
 24159 ;;		_help_button
 24160 ;;		_check_help
 24161 ;;		_set_display_info
 24162 ;;		_update_adc_result
 24163 ;;		_esr_check
 24164 ;; This function uses a reentrant model
 24165 ;;
 24166                           
 24167                           	psect	text94
 24168  01BFD6                     __ptext94:
 24169                           	opt callstack 0
 24170  01BFD6                     _TimerDone:
 24171                           	opt callstack 14
 24172                           
 24173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24174                           ;incstack = 0
 24175  01BFD6  0004               	clrwdt		;# 
 24176                           
 24177                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24178                           ;stkvar	_timer @ sp[(0)+-1]
 24179  01BFD8  0EFF               	movlw	-1
 24180  01BFDA  50E3               	movf	plusw1,w,c
 24181  01BFDC  0D02               	mullw	2
 24182  01BFDE  0E7D               	movlw	low _tickCount
 24183  01BFE0  24F3               	addwf	243,w,c
 24184  01BFE2  6ED9               	movwf	fsr2l,c
 24185  01BFE4  0E02               	movlw	high _tickCount
 24186  01BFE6  20F4               	addwfc	prodh,w,c
 24187  01BFE8  6EDA               	movwf	fsr2h,c
 24188  01BFEA  50DE               	movf	postinc2,w,c
 24189  01BFEC  10DE               	iorwf	postinc2,w,c
 24190  01BFEE  A4D8               	btfss	status,2,c
 24191  01BFF0  D002               	goto	l9932
 24192                           
 24193                           ;timers.c: 24:   return 1;
 24194  01BFF2  0E01               	movlw	1
 24195  01BFF4  D001               	goto	L28
 24196  01BFF6                     l9932:
 24197                           
 24198                           ;timers.c: 26:  return 0;
 24199  01BFF6  0E00               	movlw	0
 24200  01BFF8                     L28:
 24201  01BFF8  6E01               	movwf	btemp^0,c
 24202                           
 24203                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24204  01BFFA  52E5               	movf	postdec1,f,c
 24205  01BFFC  0012               	return		;funcret
 24206  01BFFE                     __end_of_TimerDone:
 24207                           	opt callstack 0
 24208                           
 24209 ;; *************** function _StartTimer *****************
 24210 ;; Defined at:
 24211 ;;		line 12 in file "timers.c"
 24212 ;; Parameters:    Size  Location     Type
 24213 ;;  timer           1  [STACK] const unsigned char 
 24214 ;;  count           2  [STACK] const unsigned short 
 24215 ;; Auto vars:     Size  Location     Type
 24216 ;;		None
 24217 ;; Return value:  Size  Location     Type
 24218 ;;                  1  [STACK] void 
 24219 ;; Registers used:
 24220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24221 ;; Tracked objects:
 24222 ;;		On entry : 0/0
 24223 ;;		On exit  : 0/0
 24224 ;;		Unchanged: 0/0
 24225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24230 ;;Total ram usage:        0 bytes
 24231 ;; Hardware stack levels used:    1
 24232 ;; Hardware stack levels required when called:   15
 24233 ;; This function calls:
 24234 ;;		Nothing
 24235 ;; This function is called by:
 24236 ;;		_main
 24237 ;;		_WaitMs
 24238 ;;		_help_button
 24239 ;;		_check_help
 24240 ;;		_update_adc_result
 24241 ;;		_calc_bsoc
 24242 ;;		_esr_check
 24243 ;; This function uses a reentrant model
 24244 ;;
 24245                           
 24246                           	psect	text95
 24247  01BB2C                     __ptext95:
 24248                           	opt callstack 0
 24249  01BB2C                     _StartTimer:
 24250                           	opt callstack 0
 24251                           
 24252                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24253                           ;stkvar	_count @ sp[(0)+-3]
 24254                           
 24255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24256                           ;incstack = 0
 24257 ;; hardware stack exceeded
 24258  01BB2C  0EFD               	movlw	-3
 24259  01BB2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24260  01BB34  0EFE               	movlw	-2
 24261  01BB36  006F FF8C  F00C    	movff	plusw1,btemp+11
 24262  01BB3C  90D8               	bcf	status,0,c
 24263  01BB3E  340B               	rlcf	(btemp+10)^0,w,c
 24264  01BB40  6E09               	movwf	(btemp+8)^0,c
 24265  01BB42  340C               	rlcf	(btemp+11)^0,w,c
 24266  01BB44  6E0A               	movwf	(btemp+9)^0,c
 24267                           
 24268                           ;stkvar	_timer @ sp[(0)+-1]
 24269  01BB46  0EFF               	movlw	-1
 24270  01BB48  50E3               	movf	plusw1,w,c
 24271  01BB4A  0D02               	mullw	2
 24272  01BB4C  0E7D               	movlw	low _tickCount
 24273  01BB4E  24F3               	addwf	243,w,c
 24274  01BB50  6ED9               	movwf	fsr2l,c
 24275  01BB52  0E02               	movlw	high _tickCount
 24276  01BB54  20F4               	addwfc	prodh,w,c
 24277  01BB56  6EDA               	movwf	fsr2h,c
 24278  01BB58  0060  F027  FFDE   	movff	btemp+8,postinc2
 24279  01BB5E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24280                           
 24281                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24282  01BB64  52E5               	movf	postdec1,f,c
 24283  01BB66  52E5               	movf	postdec1,f,c
 24284  01BB68  52E5               	movf	postdec1,f,c
 24285  01BB6A  0012               	return		;funcret
 24286  01BB6C                     __end_of_StartTimer:
 24287                           	opt callstack 0
 24288                           
 24289 ;; *************** function _display_info *****************
 24290 ;; Defined at:
 24291 ;;		line 190 in file "mconfig.c"
 24292 ;; Parameters:    Size  Location     Type
 24293 ;;		None
 24294 ;; Auto vars:     Size  Location     Type
 24295 ;;		None
 24296 ;; Return value:  Size  Location     Type
 24297 ;;                  1  [STACK] enum E16509
 24298 ;; Registers used:
 24299 ;;		btemp
 24300 ;; Tracked objects:
 24301 ;;		On entry : 0/1
 24302 ;;		On exit  : 0/0
 24303 ;;		Unchanged: 0/0
 24304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24309 ;;Total ram usage:        0 bytes
 24310 ;; Hardware stack levels used:    1
 24311 ;; Hardware stack levels required when called:   15
 24312 ;; This function calls:
 24313 ;;		Nothing
 24314 ;; This function is called by:
 24315 ;;		_check_help
 24316 ;; This function uses a reentrant model
 24317 ;;
 24318                           
 24319                           	psect	text96
 24320  01C5BA                     __ptext96:
 24321                           	opt callstack 0
 24322  01C5BA                     _display_info:
 24323                           	opt callstack 14
 24324                           
 24325                           ;mconfig.c: 192:  return V.response.info;
 24326                           
 24327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24328                           ;incstack = 0
 24329  01C5BA  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24330                           
 24331                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24332  01C5C0  0012               	return		;funcret
 24333  01C5C2                     __end_of_display_info:
 24334                           	opt callstack 0
 24335                           
 24336 ;; *************** function _display_help *****************
 24337 ;; Defined at:
 24338 ;;		line 195 in file "mconfig.c"
 24339 ;; Parameters:    Size  Location     Type
 24340 ;;		None
 24341 ;; Auto vars:     Size  Location     Type
 24342 ;;		None
 24343 ;; Return value:  Size  Location     Type
 24344 ;;                  1  [STACK] enum E16509
 24345 ;; Registers used:
 24346 ;;		btemp
 24347 ;; Tracked objects:
 24348 ;;		On entry : 3F/1
 24349 ;;		On exit  : 0/0
 24350 ;;		Unchanged: 0/0
 24351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;Total ram usage:        0 bytes
 24357 ;; Hardware stack levels used:    1
 24358 ;; Hardware stack levels required when called:   15
 24359 ;; This function calls:
 24360 ;;		Nothing
 24361 ;; This function is called by:
 24362 ;;		_check_help
 24363 ;; This function uses a reentrant model
 24364 ;;
 24365                           
 24366                           	psect	text97
 24367  01C5C2                     __ptext97:
 24368                           	opt callstack 0
 24369  01C5C2                     _display_help:
 24370                           	opt callstack 14
 24371                           
 24372                           ;mconfig.c: 197:  return V.response.help_temp;
 24373                           
 24374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24375                           ;incstack = 0
 24376  01C5C2  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24377                           
 24378                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24379  01C5C8  0012               	return		;funcret
 24380  01C5CA                     __end_of_display_help:
 24381                           	opt callstack 0
 24382                           
 24383 ;; *************** function _check_enter_button *****************
 24384 ;; Defined at:
 24385 ;;		line 42 in file "hid.c"
 24386 ;; Parameters:    Size  Location     Type
 24387 ;;  h               2  [STACK] PTR struct H_data
 24388 ;;		 -> H(7), 
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;		None
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1  [STACK] _Bool 
 24393 ;; Registers used:
 24394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24395 ;; Tracked objects:
 24396 ;;		On entry : 0/0
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24404 ;;Total ram usage:        0 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:   15
 24407 ;; This function calls:
 24408 ;;		Nothing
 24409 ;; This function is called by:
 24410 ;;		_main
 24411 ;; This function uses a reentrant model
 24412 ;;
 24413                           
 24414                           	psect	text98
 24415  01B202                     __ptext98:
 24416                           	opt callstack 0
 24417  01B202                     _check_enter_button:
 24418                           	opt callstack 15
 24419                           
 24420                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24421                           ;stkvar	_h @ sp[(0)+-2]
 24422                           
 24423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24424                           ;incstack = 0
 24425  01B202  0EFE               	movlw	-2
 24426  01B204  006F FF8C  F00B    	movff	plusw1,btemp+10
 24427  01B20A  0EFF               	movlw	-1
 24428  01B20C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24429  01B212  0E04               	movlw	4
 24430  01B214  240B               	addwf	(btemp+10)^0,w,c
 24431  01B216  6ED9               	movwf	fsr2l,c
 24432  01B218  0E00               	movlw	0
 24433  01B21A  200C               	addwfc	(btemp+11)^0,w,c
 24434  01B21C  6EDA               	movwf	fsr2h,c
 24435  01B21E  50DF               	movf	indf2,w,c
 24436  01B220  A4D8               	btfss	status,2,c
 24437  01B222  D023               	goto	l13298
 24438                           
 24439                           ;stkvar	_h @ sp[(0)+-2]
 24440  01B224  0EFE               	movlw	-2
 24441  01B226  006F FF8C  F00B    	movff	plusw1,btemp+10
 24442  01B22C  0EFF               	movlw	-1
 24443  01B22E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24444  01B234  0E05               	movlw	5
 24445  01B236  240B               	addwf	(btemp+10)^0,w,c
 24446  01B238  6ED9               	movwf	fsr2l,c
 24447  01B23A  0E00               	movlw	0
 24448  01B23C  200C               	addwfc	(btemp+11)^0,w,c
 24449  01B23E  6EDA               	movwf	fsr2h,c
 24450  01B240  50DF               	movf	indf2,w,c
 24451  01B242  A4D8               	btfss	status,2,c
 24452  01B244  D012               	goto	l13298
 24453                           
 24454                           ;hid.c: 45:   h->wait_enter = 1;
 24455                           ;stkvar	_h @ sp[(0)+-2]
 24456  01B246  0EFE               	movlw	-2
 24457  01B248  006F FF8C  F00B    	movff	plusw1,btemp+10
 24458  01B24E  0EFF               	movlw	-1
 24459  01B250  006F FF8C  F00C    	movff	plusw1,btemp+11
 24460  01B256  0E04               	movlw	4
 24461  01B258  240B               	addwf	(btemp+10)^0,w,c
 24462  01B25A  6ED9               	movwf	fsr2l,c
 24463  01B25C  0E00               	movlw	0
 24464  01B25E  200C               	addwfc	(btemp+11)^0,w,c
 24465  01B260  6EDA               	movwf	fsr2h,c
 24466  01B262  0E01               	movlw	1
 24467  01B264  6EDF               	movwf	indf2,c
 24468                           
 24469                           ;hid.c: 46:   return 1;
 24470  01B266  0E01               	movlw	1
 24471  01B268  D001               	goto	L29
 24472  01B26A                     l13298:
 24473                           
 24474                           ;hid.c: 48:  return 0;
 24475  01B26A  0E00               	movlw	0
 24476  01B26C                     L29:
 24477  01B26C  6E01               	movwf	btemp^0,c
 24478                           
 24479                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24480  01B26E  52E5               	movf	postdec1,f,c
 24481  01B270  52E5               	movf	postdec1,f,c
 24482  01B272  0012               	return		;funcret
 24483  01B274                     __end_of_check_enter_button:
 24484                           	opt callstack 0
 24485                           
 24486 ;; *************** function _calc_ror_data *****************
 24487 ;; Defined at:
 24488 ;;		line 102 in file "mbmc.c"
 24489 ;; Parameters:    Size  Location     Type
 24490 ;;		None
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;		None
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1  [STACK] void 
 24495 ;; Registers used:
 24496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/39
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24506 ;;Total ram usage:        0 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:   18
 24509 ;; This function calls:
 24510 ;;		___flge
 24511 ;;		___flsub
 24512 ;;		_conv_raw_result
 24513 ;;		_fabsf
 24514 ;; This function is called by:
 24515 ;;		_main
 24516 ;; This function uses a reentrant model
 24517 ;;
 24518                           
 24519                           	psect	text99
 24520  018D9C                     __ptext99:
 24521                           	opt callstack 0
 24522  018D9C                     _calc_ror_data:
 24523                           	opt callstack 12
 24524                           
 24525                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24526                           
 24527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24528                           ;incstack = 0
 24529  018D9C  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24530  018DA2  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24531  018DA8  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24532  018DAE  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24533  018DB4  0E00               	movlw	0
 24534  018DB6  6EE6               	movwf	postinc1,c
 24535  018DB8  0E00               	movlw	0
 24536  018DBA  6EE6               	movwf	postinc1,c
 24537  018DBC  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24538  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 24539  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24540  018DCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24541  018DD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24542  018DD8  ECF0  F0DC         	call	___flsub	;wreg free
 24543  018DDC  0060  F007  FFE6   	movff	btemp,postinc1
 24544  018DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24545  018DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24546  018DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24547  018DF4  ECA9  F0D4         	call	_fabsf	;wreg free
 24548  018DF8  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24549  018DFE  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24550  018E04  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24551  018E0A  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24552                           
 24553                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24554  018E10  0E00               	movlw	0
 24555  018E12  6EE6               	movwf	postinc1,c
 24556  018E14  0E00               	movlw	0
 24557  018E16  6EE6               	movwf	postinc1,c
 24558  018E18  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24559  018E1C  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24560  018E22  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24561  018E28  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24562  018E2E  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24563                           
 24564                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24565  018E34  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24566  018E3A  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24567  018E40  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24568  018E46  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24569  018E4C  0E00               	movlw	0
 24570  018E4E  6EE6               	movwf	postinc1,c
 24571  018E50  0E04               	movlw	4
 24572  018E52  6EE6               	movwf	postinc1,c
 24573  018E54  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24574  018E58  0060  F007  FFE6   	movff	btemp,postinc1
 24575  018E5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24576  018E64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24577  018E6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24578  018E70  ECF0  F0DC         	call	___flsub	;wreg free
 24579  018E74  0060  F007  FFE6   	movff	btemp,postinc1
 24580  018E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24581  018E80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24582  018E86  0060  F013  FFE6   	movff	btemp+3,postinc1
 24583  018E8C  ECA9  F0D4         	call	_fabsf	;wreg free
 24584  018E90  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24585  018E96  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24586  018E9C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24587  018EA2  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24588                           
 24589                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24590  018EA8  0EE7               	movlw	231
 24591  018EAA  6EE6               	movwf	postinc1,c
 24592  018EAC  0E1D               	movlw	29
 24593  018EAE  6EE6               	movwf	postinc1,c
 24594  018EB0  0EA7               	movlw	167
 24595  018EB2  6EE6               	movwf	postinc1,c
 24596  018EB4  0E3B               	movlw	59
 24597  018EB6  6EE6               	movwf	postinc1,c
 24598  018EB8  EE21  F36B         	lfsr	2,_C+108	;volatile
 24599  018EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 24600  018EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 24601  018EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 24602  018ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 24603  018ED4  EC0A  F0C9         	call	___flge	;wreg free
 24604  018ED8  B001               	btfsc	btemp& (0+255),0,c
 24605  018EDA  D010               	goto	l11112
 24606                           
 24607                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24608  018EDC  0EB0               	movlw	176
 24609  018EDE  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24610  018EE4  0E03               	movlw	3
 24611  018EE6  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24612  018EEC  0E67               	movlw	103
 24613  018EEE  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24614  018EF4  0E3C               	movlw	60
 24615  018EF6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24616  018EFC                     l11112:
 24617                           
 24618                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24619  018EFC  0E00               	movlw	0
 24620  018EFE  6EE6               	movwf	postinc1,c
 24621  018F00  0E04               	movlw	4
 24622  018F02  6EE6               	movwf	postinc1,c
 24623  018F04  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24624  018F08  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24625  018F0E  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24626  018F14  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24627  018F1A  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24628                           
 24629                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24630  018F20  0012               	return		;funcret
 24631  018F22                     __end_of_calc_ror_data:
 24632                           	opt callstack 0
 24633                           
 24634 ;; *************** function _fabsf *****************
 24635 ;; Defined at:
 24636 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;  x               4  [STACK] float 
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;  u               4  [STACK] struct .
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  4  [STACK] float 
 24643 ;; Registers used:
 24644 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/0
 24647 ;;		On exit  : 0/0
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24654 ;;Total ram usage:        0 bytes
 24655 ;; Hardware stack levels used:    1
 24656 ;; Hardware stack levels required when called:   15
 24657 ;; This function calls:
 24658 ;;		Nothing
 24659 ;; This function is called by:
 24660 ;;		_main
 24661 ;;		_calc_ror_data
 24662 ;;		_calc_bsoc
 24663 ;;		_esr_check
 24664 ;; This function uses a reentrant model
 24665 ;;
 24666                           
 24667                           	psect	text100
 24668  01A952                     __ptext100:
 24669                           	opt callstack 0
 24670  01A952                     _fabsf:
 24671                           	opt callstack 0
 24672                           
 24673                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24674  01A952  52E6               	movf	postinc1,f,c
 24675  01A954  52E6               	movf	postinc1,f,c
 24676  01A956  52E6               	movf	postinc1,f,c
 24677  01A958  52E6               	movf	postinc1,f,c
 24678                           
 24679                           ;incstack = 0
 24680 ;; hardware stack exceeded
 24681  01A95A  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24682  01A960  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24683  01A966  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24684  01A96C  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24685                           
 24686                           ;stkvar	_u @ sp[(-4)+0]
 24687  01A972  0EFC               	movlw	-4
 24688  01A974  0060  F027  FFE3   	movff	btemp+8,plusw1
 24689  01A97A  0EFD               	movlw	-3
 24690  01A97C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24691  01A982  0EFE               	movlw	-2
 24692  01A984  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24693  01A98A  0EFF               	movlw	-1
 24694  01A98C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24695                           
 24696                           ;stkvar	_x @ sp[(-4)+-4]
 24697  01A992  0EF8               	movlw	-8
 24698  01A994  006F FF8C  F009    	movff	plusw1,btemp+8
 24699  01A99A  0EF9               	movlw	-7
 24700  01A99C  006F FF8C  F00A    	movff	plusw1,btemp+9
 24701  01A9A2  0EFA               	movlw	-6
 24702  01A9A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24703  01A9AA  0EFB               	movlw	-5
 24704  01A9AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24705                           
 24706                           ;stkvar	_u @ sp[(-4)+0]
 24707  01A9B2  0EFC               	movlw	-4
 24708  01A9B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 24709  01A9BA  0EFD               	movlw	-3
 24710  01A9BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24711  01A9C2  0EFE               	movlw	-2
 24712  01A9C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24713  01A9CA  0EFF               	movlw	-1
 24714  01A9CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24715                           
 24716                           ;stkvar	_u @ sp[(-4)+0]
 24717  01A9D2  0EFF               	movlw	-1
 24718  01A9D4  9EE3               	bcf	plusw1,7,c
 24719                           
 24720                           ;stkvar	_u @ sp[(-4)+0]
 24721  01A9D6  0EFC               	movlw	-4
 24722  01A9D8  006F FF8C  F001    	movff	plusw1,btemp
 24723  01A9DE  0EFD               	movlw	-3
 24724  01A9E0  006F FF8C  F002    	movff	plusw1,btemp+1
 24725  01A9E6  0EFE               	movlw	-2
 24726  01A9E8  006F FF8C  F003    	movff	plusw1,btemp+2
 24727  01A9EE  0EFF               	movlw	-1
 24728  01A9F0  006F FF8C  F004    	movff	plusw1,btemp+3
 24729                           
 24730                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24731  01A9F6  0EF8               	movlw	248
 24732  01A9F8  26E1               	addwf	fsr1l,f,c
 24733  01A9FA  0EFF               	movlw	255
 24734  01A9FC  22E2               	addwfc	fsr1h,f,c
 24735  01A9FE  0012               	return		;funcret
 24736  01AA00                     __end_of_fabsf:
 24737                           	opt callstack 0
 24738                           
 24739 ;; *************** function _conv_raw_result *****************
 24740 ;; Defined at:
 24741 ;;		line 122 in file "daq.c"
 24742 ;; Parameters:    Size  Location     Type
 24743 ;;  chan            1  [STACK] const enum E16590
 24744 ;;  to_what         1  [STACK] const enum E16652
 24745 ;; Auto vars:     Size  Location     Type
 24746 ;;		None
 24747 ;; Return value:  Size  Location     Type
 24748 ;;                  4  [STACK] float 
 24749 ;; Registers used:
 24750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24751 ;; Tracked objects:
 24752 ;;		On entry : 0/39
 24753 ;;		On exit  : 0/0
 24754 ;;		Unchanged: 0/0
 24755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;Total ram usage:        0 bytes
 24761 ;; Hardware stack levels used:    1
 24762 ;; Hardware stack levels required when called:   17
 24763 ;; This function calls:
 24764 ;;		___fladd
 24765 ;;		___fldiv
 24766 ;;		___flmul
 24767 ;;		___flsub
 24768 ;;		___xxtofl
 24769 ;;		_get_raw_result
 24770 ;;		_nanf
 24771 ;; This function is called by:
 24772 ;;		_main
 24773 ;;		_convert_adc_data
 24774 ;;		_calc_ror_data
 24775 ;;		_check_day_time
 24776 ;;		_init_bsoc
 24777 ;;		_esr_check
 24778 ;; This function uses a reentrant model
 24779 ;;
 24780                           
 24781                           	psect	text101
 24782  01532A                     __ptext101:
 24783                           	opt callstack 0
 24784  01532A                     _conv_raw_result:
 24785                           	opt callstack 0
 24786                           
 24787                           ;daq.c: 122: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 123: {;daq.c: 125:  switch (to_what) {
 24788                           
 24789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24790                           ;incstack = 0
 24791 ;; hardware stack exceeded
 24792  01532A  D276               	goto	l9914
 24793  01532C                     l9860:
 24794                           
 24795                           ;daq.c: 127:   if (!(0b0011110001110111 >> chan & 0x1))
 24796                           ;stkvar	_chan @ sp[(0)+-1]
 24797  01532C  0EFF               	movlw	-1
 24798  01532E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24799  015334  0E77               	movlw	119
 24800  015336  6E09               	movwf	(btemp+8)^0,c
 24801  015338  0E3C               	movlw	60
 24802  01533A  6E0A               	movwf	(btemp+9)^0,c
 24803  01533C  2A0C               	incf	(btemp+11)^0,f,c
 24804  01533E  D003               	goto	u9164
 24805  015340                     u9165:
 24806  015340  340A               	rlcf	(btemp+9)^0,w,c
 24807  015342  320A               	rrcf	(btemp+9)^0,f,c
 24808  015344  3209               	rrcf	(btemp+8)^0,f,c
 24809  015346                     u9164:
 24810  015346  2E0C               	decfsz	(btemp+11)^0,f,c
 24811  015348  D7FB               	goto	u9165
 24812  01534A  B009               	btfsc	(btemp+8)^0,0,c
 24813  01534C  D007               	goto	l9866
 24814                           
 24815                           ;daq.c: 128:    return nanf("");
 24816  01534E  0E49               	movlw	low (STR_64+120)
 24817  015350  6EE6               	movwf	postinc1,c
 24818  015352  0EFC               	movlw	high (STR_64+120)
 24819  015354  6EE6               	movwf	postinc1,c
 24820  015356  EC6F  F0DA         	call	_nanf	;wreg free
 24821  01535A  D26E               	goto	l1816
 24822  01535C                     l9866:
 24823                           
 24824                           ;daq.c: 130:   if (0b0000000000000011 >> chan & 0x1) {
 24825                           ;stkvar	_chan @ sp[(0)+-1]
 24826  01535C  0EFF               	movlw	-1
 24827  01535E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24828  015364  0E03               	movlw	3
 24829  015366  6E09               	movwf	(btemp+8)^0,c
 24830  015368  0E00               	movlw	0
 24831  01536A  6E0A               	movwf	(btemp+9)^0,c
 24832  01536C  2A0C               	incf	(btemp+11)^0,f,c
 24833  01536E  D003               	goto	u9184
 24834  015370                     u9185:
 24835  015370  340A               	rlcf	(btemp+9)^0,w,c
 24836  015372  320A               	rrcf	(btemp+9)^0,f,c
 24837  015374  3209               	rrcf	(btemp+8)^0,f,c
 24838  015376                     u9184:
 24839  015376  2E0C               	decfsz	(btemp+11)^0,f,c
 24840  015378  D7FB               	goto	u9185
 24841  01537A  A009               	btfss	(btemp+8)^0,0,c
 24842  01537C  D11F               	goto	l9880
 24843                           
 24844                           ;daq.c: 131:    if (0b0000000000000001 >> chan & 0x1) {
 24845                           ;stkvar	_chan @ sp[(0)+-1]
 24846  01537E  0EFF               	movlw	-1
 24847  015380  006F FF8C  F00C    	movff	plusw1,btemp+11
 24848  015386  0E01               	movlw	1
 24849  015388  6E09               	movwf	(btemp+8)^0,c
 24850  01538A  0E00               	movlw	0
 24851  01538C  6E0A               	movwf	(btemp+9)^0,c
 24852  01538E  2A0C               	incf	(btemp+11)^0,f,c
 24853  015390  D003               	goto	u9204
 24854  015392                     u9205:
 24855  015392  340A               	rlcf	(btemp+9)^0,w,c
 24856  015394  320A               	rrcf	(btemp+9)^0,f,c
 24857  015396  3209               	rrcf	(btemp+8)^0,f,c
 24858  015398                     u9204:
 24859  015398  2E0C               	decfsz	(btemp+11)^0,f,c
 24860  01539A  D7FB               	goto	u9205
 24861  01539C  A009               	btfss	(btemp+8)^0,0,c
 24862  01539E  D087               	goto	l9876
 24863                           
 24864                           ;daq.c: 132:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24865  0153A0  0060  F367  FFE6   	movff	_R+42,postinc1
 24866  0153A6  0060  F36B  FFE6   	movff	_R+43,postinc1
 24867  0153AC  0060  F36F  FFE6   	movff	_R+44,postinc1
 24868  0153B2  0060  F373  FFE6   	movff	_R+45,postinc1
 24869  0153B8  0E7B               	movlw	123
 24870  0153BA  6EE6               	movwf	postinc1,c
 24871  0153BC  0E14               	movlw	20
 24872  0153BE  6EE6               	movwf	postinc1,c
 24873  0153C0  0EAE               	movlw	174
 24874  0153C2  6EE6               	movwf	postinc1,c
 24875  0153C4  0E3D               	movlw	61
 24876  0153C6  6EE6               	movwf	postinc1,c
 24877  0153C8  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24878  0153CE  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24879  0153D4  0E00               	movlw	0
 24880  0153D6  BE0A               	btfsc	(btemp+9)^0,7,c
 24881  0153D8  0EFF               	movlw	255
 24882  0153DA  6E0B               	movwf	(btemp+10)^0,c
 24883  0153DC  6E0C               	movwf	(btemp+11)^0,c
 24884  0153DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 24885  0153E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24886  0153EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24887  0153F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 24888  0153F6  0E01               	movlw	1
 24889  0153F8  6EE6               	movwf	postinc1,c
 24890  0153FA  EC65  F0C2         	call	___xxtofl	;wreg free
 24891  0153FE  0060  F007  FFE6   	movff	btemp,postinc1
 24892  015404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24893  01540A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24894  015410  0060  F013  FFE6   	movff	btemp+3,postinc1
 24895                           
 24896                           ;stkvar	_chan @ sp[(-12)+-1]
 24897  015416  0EF3               	movlw	-13
 24898  015418  50E3               	movf	plusw1,w,c
 24899  01541A  6EE6               	movwf	postinc1,c
 24900  01541C  ECFF  F0E1         	call	_get_raw_result	;wreg free
 24901  015420  0060  F004  F00B   	movff	btemp,btemp+10
 24902  015426  0060  F008  F00C   	movff	btemp+1,btemp+11
 24903  01542C  500B               	movf	(btemp+10)^0,w,c
 24904  01542E  6E05               	movwf	(btemp+4)^0,c
 24905  015430  500C               	movf	(btemp+11)^0,w,c
 24906  015432  6E06               	movwf	(btemp+5)^0,c
 24907  015434  6A07               	clrf	(btemp+6)^0,c
 24908  015436  6A08               	clrf	(btemp+7)^0,c
 24909  015438  0060  F017  FFE6   	movff	btemp+4,postinc1
 24910  01543E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24911  015444  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24912  01544A  0060  F023  FFE6   	movff	btemp+7,postinc1
 24913  015450  0E00               	movlw	0
 24914  015452  6EE6               	movwf	postinc1,c
 24915  015454  EC65  F0C2         	call	___xxtofl	;wreg free
 24916  015458  0060  F007  FFE6   	movff	btemp,postinc1
 24917  01545E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24918  015464  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24919  01546A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24920  015470  ECF0  F0DC         	call	___flsub	;wreg free
 24921  015474  0060  F007  FFE6   	movff	btemp,postinc1
 24922  01547A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24923  015480  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24924  015486  0060  F013  FFE6   	movff	btemp+3,postinc1
 24925  01548C  ECE5  F09E         	call	___flmul	;wreg free
 24926  015490  0060  F007  FFE6   	movff	btemp,postinc1
 24927  015496  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24928  01549C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24929  0154A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24930  0154A8  ECFA  F0A2         	call	___fladd	;wreg free
 24931  0154AC  D1C5               	goto	l1816
 24932  0154AE                     l9876:
 24933                           
 24934                           ;daq.c: 134:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24935  0154AE  0060  F377  FFE6   	movff	_R+46,postinc1
 24936  0154B4  0060  F37B  FFE6   	movff	_R+47,postinc1
 24937  0154BA  0060  F37F  FFE6   	movff	_R+48,postinc1
 24938  0154C0  0060  F383  FFE6   	movff	_R+49,postinc1
 24939  0154C6  0E29               	movlw	41
 24940  0154C8  6EE6               	movwf	postinc1,c
 24941  0154CA  0E5C               	movlw	92
 24942  0154CC  6EE6               	movwf	postinc1,c
 24943  0154CE  0E0F               	movlw	15
 24944  0154D0  6EE6               	movwf	postinc1,c
 24945  0154D2  0E3D               	movlw	61
 24946  0154D4  6EE6               	movwf	postinc1,c
 24947  0154D6  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24948  0154DC  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24949  0154E2  0E00               	movlw	0
 24950  0154E4  BE0A               	btfsc	(btemp+9)^0,7,c
 24951  0154E6  0EFF               	movlw	255
 24952  0154E8  6E0B               	movwf	(btemp+10)^0,c
 24953  0154EA  6E0C               	movwf	(btemp+11)^0,c
 24954  0154EC  0060  F027  FFE6   	movff	btemp+8,postinc1
 24955  0154F2  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24956  0154F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24957  0154FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 24958  015504  0E01               	movlw	1
 24959  015506  6EE6               	movwf	postinc1,c
 24960  015508  EC65  F0C2         	call	___xxtofl	;wreg free
 24961  01550C  0060  F007  FFE6   	movff	btemp,postinc1
 24962  015512  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24963  015518  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24964  01551E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24965                           
 24966                           ;stkvar	_chan @ sp[(-12)+-1]
 24967  015524  0EF3               	movlw	-13
 24968  015526  50E3               	movf	plusw1,w,c
 24969  015528  6EE6               	movwf	postinc1,c
 24970  01552A  ECFF  F0E1         	call	_get_raw_result	;wreg free
 24971  01552E  0060  F004  F00B   	movff	btemp,btemp+10
 24972  015534  0060  F008  F00C   	movff	btemp+1,btemp+11
 24973  01553A  500B               	movf	(btemp+10)^0,w,c
 24974  01553C  6E05               	movwf	(btemp+4)^0,c
 24975  01553E  500C               	movf	(btemp+11)^0,w,c
 24976  015540  6E06               	movwf	(btemp+5)^0,c
 24977  015542  6A07               	clrf	(btemp+6)^0,c
 24978  015544  6A08               	clrf	(btemp+7)^0,c
 24979  015546  0060  F017  FFE6   	movff	btemp+4,postinc1
 24980  01554C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24981  015552  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24982  015558  0060  F023  FFE6   	movff	btemp+7,postinc1
 24983  01555E  0E00               	movlw	0
 24984  015560  6EE6               	movwf	postinc1,c
 24985  015562  EC65  F0C2         	call	___xxtofl	;wreg free
 24986  015566  0060  F007  FFE6   	movff	btemp,postinc1
 24987  01556C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24988  015572  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24989  015578  0060  F013  FFE6   	movff	btemp+3,postinc1
 24990  01557E  ECF0  F0DC         	call	___flsub	;wreg free
 24991  015582  0060  F007  FFE6   	movff	btemp,postinc1
 24992  015588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24993  01558E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24994  015594  0060  F013  FFE6   	movff	btemp+3,postinc1
 24995  01559A  ECE5  F09E         	call	___flmul	;wreg free
 24996  01559E  0060  F007  FFE6   	movff	btemp,postinc1
 24997  0155A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24998  0155AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24999  0155B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 25000  0155B6  ECFA  F0A2         	call	___fladd	;wreg free
 25001  0155BA  D13E               	goto	l1816
 25002  0155BC                     l9880:
 25003                           
 25004                           ;daq.c: 137:    if (0b0000100000000000 >> chan & 0x1) {
 25005                           ;stkvar	_chan @ sp[(0)+-1]
 25006  0155BC  0EFF               	movlw	-1
 25007  0155BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25008  0155C4  0E00               	movlw	0
 25009  0155C6  6E09               	movwf	(btemp+8)^0,c
 25010  0155C8  0E08               	movlw	8
 25011  0155CA  6E0A               	movwf	(btemp+9)^0,c
 25012  0155CC  2A0C               	incf	(btemp+11)^0,f,c
 25013  0155CE  D003               	goto	u9224
 25014  0155D0                     u9225:
 25015  0155D0  340A               	rlcf	(btemp+9)^0,w,c
 25016  0155D2  320A               	rrcf	(btemp+9)^0,f,c
 25017  0155D4  3209               	rrcf	(btemp+8)^0,f,c
 25018  0155D6                     u9224:
 25019  0155D6  2E0C               	decfsz	(btemp+11)^0,f,c
 25020  0155D8  D7FB               	goto	u9225
 25021  0155DA  A009               	btfss	(btemp+8)^0,0,c
 25022  0155DC  D008               	goto	l9888
 25023                           
 25024                           ;daq.c: 138:     return 25.0;
 25025  0155DE  0E00               	movlw	0
 25026  0155E0  6E01               	movwf	btemp^0,c
 25027  0155E2  0E00               	movlw	0
 25028  0155E4  6E02               	movwf	(btemp+1)^0,c
 25029  0155E6  0EC8               	movlw	200
 25030  0155E8  6E03               	movwf	(btemp+2)^0,c
 25031  0155EA  0E41               	movlw	65
 25032  0155EC  D113               	goto	L30
 25033  0155EE                     l9888:
 25034                           
 25035                           ;daq.c: 140:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25036  0155EE  0E00               	movlw	0
 25037  0155F0  6EE6               	movwf	postinc1,c
 25038  0155F2  0E00               	movlw	0
 25039  0155F4  6EE6               	movwf	postinc1,c
 25040  0155F6  0E7A               	movlw	122
 25041  0155F8  6EE6               	movwf	postinc1,c
 25042  0155FA  0E44               	movlw	68
 25043  0155FC  6EE6               	movwf	postinc1,c
 25044  0155FE  0E61               	movlw	97
 25045  015600  6EE6               	movwf	postinc1,c
 25046  015602  0E03               	movlw	3
 25047  015604  6EE6               	movwf	postinc1,c
 25048  015606  0E84               	movlw	132
 25049  015608  6EE6               	movwf	postinc1,c
 25050  01560A  0E40               	movlw	64
 25051  01560C  6EE6               	movwf	postinc1,c
 25052                           
 25053                           ;stkvar	_chan @ sp[(-8)+-1]
 25054  01560E  0EF7               	movlw	-9
 25055  015610  50E3               	movf	plusw1,w,c
 25056  015612  6EE6               	movwf	postinc1,c
 25057  015614  ECFF  F0E1         	call	_get_raw_result	;wreg free
 25058  015618  0060  F004  F00B   	movff	btemp,btemp+10
 25059  01561E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25060  015624  500B               	movf	(btemp+10)^0,w,c
 25061  015626  6E05               	movwf	(btemp+4)^0,c
 25062  015628  500C               	movf	(btemp+11)^0,w,c
 25063  01562A  6E06               	movwf	(btemp+5)^0,c
 25064  01562C  6A07               	clrf	(btemp+6)^0,c
 25065  01562E  6A08               	clrf	(btemp+7)^0,c
 25066  015630  0060  F017  FFE6   	movff	btemp+4,postinc1
 25067  015636  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25068  01563C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25069  015642  0060  F023  FFE6   	movff	btemp+7,postinc1
 25070  015648  0E00               	movlw	0
 25071  01564A  6EE6               	movwf	postinc1,c
 25072  01564C  EC65  F0C2         	call	___xxtofl	;wreg free
 25073  015650  0060  F007  FFE6   	movff	btemp,postinc1
 25074  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25075  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25076  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 25077  015668  ECE5  F09E         	call	___flmul	;wreg free
 25078  01566C  0060  F007  FFE6   	movff	btemp,postinc1
 25079  015672  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25080  015678  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25081  01567E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25082  015684  ECD8  F0A6         	call	___fldiv	;wreg free
 25083  015688  D0D7               	goto	l1816
 25084  01568A                     l9892:
 25085                           
 25086                           ;daq.c: 145:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25087                           ;stkvar	_chan @ sp[(0)+-1]
 25088  01568A  0EFF               	movlw	-1
 25089  01568C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25090  015692  0E03               	movlw	3
 25091  015694  6E09               	movwf	(btemp+8)^0,c
 25092  015696  0E00               	movlw	0
 25093  015698  6E0A               	movwf	(btemp+9)^0,c
 25094  01569A  2A0C               	incf	(btemp+11)^0,f,c
 25095  01569C  D003               	goto	u9244
 25096  01569E                     u9245:
 25097  01569E  340A               	rlcf	(btemp+9)^0,w,c
 25098  0156A0  320A               	rrcf	(btemp+9)^0,f,c
 25099  0156A2  3209               	rrcf	(btemp+8)^0,f,c
 25100  0156A4                     u9244:
 25101  0156A4  2E0C               	decfsz	(btemp+11)^0,f,c
 25102  0156A6  D7FB               	goto	u9245
 25103  0156A8  B009               	btfsc	(btemp+8)^0,0,c
 25104  0156AA  D011               	goto	u9270
 25105                           
 25106                           ;stkvar	_chan @ sp[(0)+-1]
 25107  0156AC  0EFF               	movlw	-1
 25108  0156AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25109  0156B4  0E00               	movlw	0
 25110  0156B6  6E09               	movwf	(btemp+8)^0,c
 25111  0156B8  0E08               	movlw	8
 25112  0156BA  6E0A               	movwf	(btemp+9)^0,c
 25113  0156BC  2A0C               	incf	(btemp+11)^0,f,c
 25114  0156BE  D003               	goto	u9264
 25115  0156C0                     u9265:
 25116  0156C0  340A               	rlcf	(btemp+9)^0,w,c
 25117  0156C2  320A               	rrcf	(btemp+9)^0,f,c
 25118  0156C4  3209               	rrcf	(btemp+8)^0,f,c
 25119  0156C6                     u9264:
 25120  0156C6  2E0C               	decfsz	(btemp+11)^0,f,c
 25121  0156C8  D7FB               	goto	u9265
 25122  0156CA  A009               	btfss	(btemp+8)^0,0,c
 25123  0156CC  D04E               	goto	l9900
 25124  0156CE                     u9270:
 25125                           
 25126                           ;daq.c: 146:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25127  0156CE  0E00               	movlw	0
 25128  0156D0  6EE6               	movwf	postinc1,c
 25129  0156D2  0E00               	movlw	0
 25130  0156D4  6EE6               	movwf	postinc1,c
 25131  0156D6  0E7A               	movlw	122
 25132  0156D8  6EE6               	movwf	postinc1,c
 25133  0156DA  0E44               	movlw	68
 25134  0156DC  6EE6               	movwf	postinc1,c
 25135  0156DE  0E00               	movlw	0
 25136  0156E0  6EE6               	movwf	postinc1,c
 25137  0156E2  0E00               	movlw	0
 25138  0156E4  6EE6               	movwf	postinc1,c
 25139  0156E6  0E20               	movlw	32
 25140  0156E8  6EE6               	movwf	postinc1,c
 25141  0156EA  0E3F               	movlw	63
 25142  0156EC  6EE6               	movwf	postinc1,c
 25143                           
 25144                           ;stkvar	_chan @ sp[(-8)+-1]
 25145  0156EE  0EF7               	movlw	-9
 25146  0156F0  50E3               	movf	plusw1,w,c
 25147  0156F2  6EE6               	movwf	postinc1,c
 25148  0156F4  ECFF  F0E1         	call	_get_raw_result	;wreg free
 25149  0156F8  0060  F004  F00B   	movff	btemp,btemp+10
 25150  0156FE  0060  F008  F00C   	movff	btemp+1,btemp+11
 25151  015704  500B               	movf	(btemp+10)^0,w,c
 25152  015706  6E05               	movwf	(btemp+4)^0,c
 25153  015708  500C               	movf	(btemp+11)^0,w,c
 25154  01570A  6E06               	movwf	(btemp+5)^0,c
 25155  01570C  6A07               	clrf	(btemp+6)^0,c
 25156  01570E  6A08               	clrf	(btemp+7)^0,c
 25157  015710  0060  F017  FFE6   	movff	btemp+4,postinc1
 25158  015716  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25159  01571C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25160  015722  0060  F023  FFE6   	movff	btemp+7,postinc1
 25161  015728  0E00               	movlw	0
 25162  01572A  6EE6               	movwf	postinc1,c
 25163  01572C  EC65  F0C2         	call	___xxtofl	;wreg free
 25164  015730  0060  F007  FFE6   	movff	btemp,postinc1
 25165  015736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25166  01573C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25167  015742  0060  F013  FFE6   	movff	btemp+3,postinc1
 25168  015748  ECE5  F09E         	call	___flmul	;wreg free
 25169  01574C  0060  F007  FFE6   	movff	btemp,postinc1
 25170  015752  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25171  015758  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25172  01575E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25173  015764  ECD8  F0A6         	call	___fldiv	;wreg free
 25174  015768  D067               	goto	l1816
 25175  01576A                     l9900:
 25176                           
 25177                           ;daq.c: 148:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25178  01576A  0E00               	movlw	0
 25179  01576C  6EE6               	movwf	postinc1,c
 25180  01576E  0E00               	movlw	0
 25181  015770  6EE6               	movwf	postinc1,c
 25182  015772  0E7A               	movlw	122
 25183  015774  6EE6               	movwf	postinc1,c
 25184  015776  0E44               	movlw	68
 25185  015778  6EE6               	movwf	postinc1,c
 25186  01577A  0E61               	movlw	97
 25187  01577C  6EE6               	movwf	postinc1,c
 25188  01577E  0E03               	movlw	3
 25189  015780  6EE6               	movwf	postinc1,c
 25190  015782  0E84               	movlw	132
 25191  015784  6EE6               	movwf	postinc1,c
 25192  015786  0E40               	movlw	64
 25193  015788  6EE6               	movwf	postinc1,c
 25194                           
 25195                           ;stkvar	_chan @ sp[(-8)+-1]
 25196  01578A  0EF7               	movlw	-9
 25197  01578C  50E3               	movf	plusw1,w,c
 25198  01578E  6EE6               	movwf	postinc1,c
 25199  015790  ECFF  F0E1         	call	_get_raw_result	;wreg free
 25200  015794  0060  F004  F00B   	movff	btemp,btemp+10
 25201  01579A  0060  F008  F00C   	movff	btemp+1,btemp+11
 25202  0157A0  500B               	movf	(btemp+10)^0,w,c
 25203  0157A2  6E05               	movwf	(btemp+4)^0,c
 25204  0157A4  500C               	movf	(btemp+11)^0,w,c
 25205  0157A6  6E06               	movwf	(btemp+5)^0,c
 25206  0157A8  6A07               	clrf	(btemp+6)^0,c
 25207  0157AA  6A08               	clrf	(btemp+7)^0,c
 25208  0157AC  0060  F017  FFE6   	movff	btemp+4,postinc1
 25209  0157B2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25210  0157B8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25211  0157BE  0060  F023  FFE6   	movff	btemp+7,postinc1
 25212  0157C4  0E00               	movlw	0
 25213  0157C6  6EE6               	movwf	postinc1,c
 25214  0157C8  EC65  F0C2         	call	___xxtofl	;wreg free
 25215  0157CC  0060  F007  FFE6   	movff	btemp,postinc1
 25216  0157D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25217  0157D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25218  0157DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25219  0157E4  ECE5  F09E         	call	___flmul	;wreg free
 25220  0157E8  0060  F007  FFE6   	movff	btemp,postinc1
 25221  0157EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25222  0157F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25223  0157FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 25224  015800  ECD8  F0A6         	call	___fldiv	;wreg free
 25225  015804  D019               	goto	l1816
 25226  015806                     l9906:
 25227                           
 25228                           ;daq.c: 151:   return 0.0;
 25229  015806  0E00               	movlw	0
 25230  015808  6E01               	movwf	btemp^0,c
 25231  01580A  0E00               	movlw	0
 25232  01580C  6E02               	movwf	(btemp+1)^0,c
 25233  01580E  0E00               	movlw	0
 25234  015810  6E03               	movwf	(btemp+2)^0,c
 25235  015812  0E00               	movlw	0
 25236  015814                     L30:
 25237  015814  6E04               	movwf	(btemp+3)^0,c
 25238  015816  D010               	goto	l1816
 25239  015818                     l9914:
 25240                           
 25241                           ;stkvar	_to_what @ sp[(0)+-2]
 25242  015818  0EFE               	movlw	-2
 25243  01581A  50E3               	movf	plusw1,w,c
 25244  01581C  6E0B               	movwf	(btemp+10)^0,c
 25245  01581E  6A0C               	clrf	(btemp+11)^0,c
 25246                           
 25247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25248                           ; Switch size 1, requested type "simple"
 25249                           ; Number of cases is 1, Range of values is 0 to 0
 25250                           ; switch strategies available:
 25251                           ; Name         Instructions Cycles
 25252                           ; simple_byte            4     3 (average)
 25253                           ;	Chosen strategy is simple_byte
 25254  015820  500C               	movf	(btemp+11)^0,w,c
 25255  015822  0A00               	xorlw	0	; case 0
 25256  015824  A4D8               	btfss	status,2,c
 25257  015826  D7EF               	goto	l9906
 25258                           
 25259                           ; Switch size 1, requested type "simple"
 25260                           ; Number of cases is 2, Range of values is 0 to 1
 25261                           ; switch strategies available:
 25262                           ; Name         Instructions Cycles
 25263                           ; simple_byte            7     4 (average)
 25264                           ;	Chosen strategy is simple_byte
 25265  015828  500B               	movf	(btemp+10)^0,w,c
 25266  01582A  0A00               	xorlw	0	; case 0
 25267  01582C  B4D8               	btfsc	status,2,c
 25268  01582E  D57E               	goto	l9860
 25269  015830  0A01               	xorlw	1	; case 1
 25270  015832  B4D8               	btfsc	status,2,c
 25271  015834  D72A               	goto	l9892
 25272  015836  D7E7               	goto	l9906
 25273  015838                     l1816:
 25274                           
 25275                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25276  015838  52E5               	movf	postdec1,f,c
 25277  01583A  52E5               	movf	postdec1,f,c
 25278  01583C  0012               	return		;funcret
 25279  01583E                     __end_of_conv_raw_result:
 25280                           	opt callstack 0
 25281                           
 25282 ;; *************** function _nanf *****************
 25283 ;; Defined at:
 25284 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25285 ;; Parameters:    Size  Location     Type
 25286 ;;  s               2  [STACK] PTR const unsigned char 
 25287 ;;		 -> STR_101(1), STR_63(1), 
 25288 ;; Auto vars:     Size  Location     Type
 25289 ;;  u               4  [STACK] struct .
 25290 ;; Return value:  Size  Location     Type
 25291 ;;                  4  [STACK] float 
 25292 ;; Registers used:
 25293 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25294 ;; Tracked objects:
 25295 ;;		On entry : 0/39
 25296 ;;		On exit  : 0/0
 25297 ;;		Unchanged: 0/0
 25298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25303 ;;Total ram usage:        0 bytes
 25304 ;; Hardware stack levels used:    1
 25305 ;; Hardware stack levels required when called:   15
 25306 ;; This function calls:
 25307 ;;		Nothing
 25308 ;; This function is called by:
 25309 ;;		_conv_raw_result
 25310 ;; This function uses a reentrant model
 25311 ;;
 25312                           
 25313                           	psect	text102
 25314  01B4DE                     __ptext102:
 25315                           	opt callstack 0
 25316  01B4DE                     _nanf:
 25317                           	opt callstack 0
 25318                           
 25319                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25320  01B4DE  52E6               	movf	postinc1,f,c
 25321  01B4E0  52E6               	movf	postinc1,f,c
 25322  01B4E2  52E6               	movf	postinc1,f,c
 25323  01B4E4  52E6               	movf	postinc1,f,c
 25324                           
 25325                           ;incstack = 0
 25326 ;; hardware stack exceeded
 25327  01B4E6  0EFF               	movlw	255
 25328  01B4E8  6E09               	movwf	(btemp+8)^0,c
 25329  01B4EA  0EFF               	movlw	255
 25330  01B4EC  6E0A               	movwf	(btemp+9)^0,c
 25331  01B4EE  0EFF               	movlw	255
 25332  01B4F0  6E0B               	movwf	(btemp+10)^0,c
 25333  01B4F2  0E7F               	movlw	127
 25334  01B4F4  6E0C               	movwf	(btemp+11)^0,c
 25335                           
 25336                           ;stkvar	_u @ sp[(-4)+0]
 25337  01B4F6  0EFC               	movlw	-4
 25338  01B4F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25339  01B4FE  0EFD               	movlw	-3
 25340  01B500  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25341  01B506  0EFE               	movlw	-2
 25342  01B508  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25343  01B50E  0EFF               	movlw	-1
 25344  01B510  0060  F033  FFE3   	movff	btemp+11,plusw1
 25345                           
 25346                           ;stkvar	_u @ sp[(-4)+0]
 25347  01B516  0EFC               	movlw	-4
 25348  01B518  006F FF8C  F001    	movff	plusw1,btemp
 25349  01B51E  0EFD               	movlw	-3
 25350  01B520  006F FF8C  F002    	movff	plusw1,btemp+1
 25351  01B526  0EFE               	movlw	-2
 25352  01B528  006F FF8C  F003    	movff	plusw1,btemp+2
 25353  01B52E  0EFF               	movlw	-1
 25354  01B530  006F FF8C  F004    	movff	plusw1,btemp+3
 25355                           
 25356                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25357  01B536  0EFA               	movlw	250
 25358  01B538  26E1               	addwf	fsr1l,f,c
 25359  01B53A  0EFF               	movlw	255
 25360  01B53C  22E2               	addwfc	fsr1h,f,c
 25361  01B53E  0012               	return		;funcret
 25362  01B540                     __end_of_nanf:
 25363                           	opt callstack 0
 25364                           
 25365 ;; *************** function _get_raw_result *****************
 25366 ;; Defined at:
 25367 ;;		line 114 in file "daq.c"
 25368 ;; Parameters:    Size  Location     Type
 25369 ;;  index           1  [STACK] const enum E16590
 25370 ;; Auto vars:     Size  Location     Type
 25371 ;;		None
 25372 ;; Return value:  Size  Location     Type
 25373 ;;                  2  [STACK] unsigned short 
 25374 ;; Registers used:
 25375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25376 ;; Tracked objects:
 25377 ;;		On entry : 0/1
 25378 ;;		On exit  : 0/0
 25379 ;;		Unchanged: 0/0
 25380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;Total ram usage:        0 bytes
 25386 ;; Hardware stack levels used:    1
 25387 ;; Hardware stack levels required when called:   15
 25388 ;; This function calls:
 25389 ;;		Nothing
 25390 ;; This function is called by:
 25391 ;;		_main
 25392 ;;		_conv_raw_result
 25393 ;; This function uses a reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text103
 25397  01C3FE                     __ptext103:
 25398                           	opt callstack 0
 25399  01C3FE                     _get_raw_result:
 25400                           	opt callstack 0
 25401                           
 25402                           ;daq.c: 114: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 115: {;daq.c
      +                          : 116:  return R.raw_adc[index];
 25403                           ;stkvar	_index @ sp[(0)+-1]
 25404                           
 25405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25406                           ;incstack = 0
 25407 ;; hardware stack exceeded
 25408  01C3FE  0EFF               	movlw	-1
 25409  01C400  50E3               	movf	plusw1,w,c
 25410  01C402  0D02               	mullw	2
 25411  01C404  50F3               	movf	243,w,c
 25412  01C406  0FAF               	addlw	low _R
 25413  01C408  6ED9               	movwf	fsr2l,c
 25414  01C40A  6ADA               	clrf	fsr2h,c
 25415  01C40C  006F FF78  F001    	movff	postinc2,btemp
 25416  01C412  006F FF74  F002    	movff	postdec2,btemp+1
 25417                           
 25418                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25419  01C418  52E5               	movf	postdec1,f,c
 25420  01C41A  0012               	return		;funcret
 25421  01C41C                     __end_of_get_raw_result:
 25422                           	opt callstack 0
 25423                           
 25424 ;; *************** function ___xxtofl *****************
 25425 ;; Defined at:
 25426 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25427 ;; Parameters:    Size  Location     Type
 25428 ;;  sign            1  [STACK] unsigned char 
 25429 ;;  val             4  [STACK] long 
 25430 ;; Auto vars:     Size  Location     Type
 25431 ;;  arg             4  [STACK] unsigned long 
 25432 ;;  exp             1  [STACK] unsigned char 
 25433 ;; Return value:  Size  Location     Type
 25434 ;;                  4  [STACK] unsigned char 
 25435 ;; Registers used:
 25436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25437 ;; Tracked objects:
 25438 ;;		On entry : 0/0
 25439 ;;		On exit  : 0/0
 25440 ;;		Unchanged: 0/0
 25441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;Total ram usage:        0 bytes
 25447 ;; Hardware stack levels used:    1
 25448 ;; Hardware stack levels required when called:   15
 25449 ;; This function calls:
 25450 ;;		Nothing
 25451 ;; This function is called by:
 25452 ;;		_conv_raw_result
 25453 ;;		_init_bsoc
 25454 ;; This function uses a reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text104
 25458  0184CA                     __ptext104:
 25459                           	opt callstack 0
 25460  0184CA                     ___xxtofl:
 25461                           	opt callstack 0
 25462                           
 25463                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25464  0184CA  0E05               	movlw	5
 25465  0184CC  26E1               	addwf	fsr1l,f,c
 25466  0184CE  0E00               	movlw	0
 25467  0184D0  22E2               	addwfc	fsr1h,f,c
 25468                           
 25469                           ;stkvar	_sign @ sp[(-5)+-1]
 25470                           
 25471                           ;incstack = 0
 25472 ;; hardware stack exceeded
 25473  0184D2  0EFA               	movlw	-6
 25474  0184D4  50E3               	movf	plusw1,w,c
 25475  0184D6  B4D8               	btfsc	status,2,c
 25476  0184D8  D01D               	goto	l9808
 25477                           
 25478                           ;stkvar	_val @ sp[(-5)+-5]
 25479  0184DA  0EF9               	movlw	-7
 25480  0184DC  AEE3               	btfss	plusw1,7,c
 25481  0184DE  D01A               	goto	l9808
 25482                           
 25483                           ;stkvar	_val @ sp[(-5)+-5]
 25484  0184E0  0EF6               	movlw	-10
 25485  0184E2  006F FF8C  F009    	movff	plusw1,btemp+8
 25486  0184E8  0EF7               	movlw	-9
 25487  0184EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25488  0184F0  0EF8               	movlw	-8
 25489  0184F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25490  0184F8  0EF9               	movlw	-7
 25491  0184FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25492  018500  1E09               	comf	(btemp+8)^0,f,c
 25493  018502  1E0A               	comf	(btemp+9)^0,f,c
 25494  018504  1E0B               	comf	(btemp+10)^0,f,c
 25495  018506  1E0C               	comf	(btemp+11)^0,f,c
 25496  018508  2A09               	incf	(btemp+8)^0,f,c
 25497  01850A  0E00               	movlw	0
 25498  01850C  220A               	addwfc	(btemp+9)^0,f,c
 25499  01850E  220B               	addwfc	(btemp+10)^0,f,c
 25500  018510  220C               	addwfc	(btemp+11)^0,f,c
 25501  018512  D010               	goto	L31
 25502  018514                     l9808:
 25503                           
 25504                           ;stkvar	_val @ sp[(-5)+-5]
 25505  018514  0EF6               	movlw	-10
 25506  018516  006F FF8C  F009    	movff	plusw1,btemp+8
 25507  01851C  0EF7               	movlw	-9
 25508  01851E  006F FF8C  F00A    	movff	plusw1,btemp+9
 25509  018524  0EF8               	movlw	-8
 25510  018526  006F FF8C  F00B    	movff	plusw1,btemp+10
 25511  01852C  0EF9               	movlw	-7
 25512  01852E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25513  018534                     L31:
 25514                           
 25515                           ;stkvar	_arg @ sp[(-5)+0]
 25516  018534  0EFB               	movlw	-5
 25517  018536  0060  F027  FFE3   	movff	btemp+8,plusw1
 25518  01853C  0EFC               	movlw	-4
 25519  01853E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25520  018544  0EFD               	movlw	-3
 25521  018546  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25522  01854C  0EFE               	movlw	-2
 25523  01854E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25524                           
 25525                           ;stkvar	_val @ sp[(-5)+-5]
 25526  018554  0EF6               	movlw	-10
 25527  018556  50E3               	movf	plusw1,w,c
 25528  018558  E113               	bnz	l9816
 25529  01855A  0EF7               	movlw	-9
 25530  01855C  50E3               	movf	plusw1,w,c
 25531  01855E  E110               	bnz	l9816
 25532  018560  0EF8               	movlw	-8
 25533  018562  50E3               	movf	plusw1,w,c
 25534  018564  E10D               	bnz	l9816
 25535  018566  0EF9               	movlw	-7
 25536  018568  50E3               	movf	plusw1,w,c
 25537  01856A  A4D8               	btfss	status,2,c
 25538  01856C  D009               	goto	l9816
 25539  01856E  0E00               	movlw	0
 25540  018570  6E01               	movwf	btemp^0,c
 25541  018572  0E00               	movlw	0
 25542  018574  6E02               	movwf	(btemp+1)^0,c
 25543  018576  0E00               	movlw	0
 25544  018578  6E03               	movwf	(btemp+2)^0,c
 25545  01857A  0E00               	movlw	0
 25546  01857C  6E04               	movwf	(btemp+3)^0,c
 25547  01857E  D0A2               	goto	l3139
 25548  018580                     l9816:
 25549  018580  0E96               	movlw	150
 25550  018582  6E0C               	movwf	(btemp+11)^0,c
 25551                           
 25552                           ;stkvar	_exp @ sp[(-5)+4]
 25553  018584  0EFF               	movlw	-1
 25554  018586  0060  F033  FFE3   	movff	btemp+11,plusw1
 25555  01858C  D00B               	goto	l9820
 25556  01858E                     l9818:
 25557                           
 25558                           ;stkvar	_exp @ sp[(-5)+4]
 25559  01858E  0EFF               	movlw	-1
 25560  018590  2AE3               	incf	plusw1,f,c
 25561                           
 25562                           ;stkvar	_arg @ sp[(-5)+0]
 25563  018592  90D8               	bcf	status,0,c
 25564  018594  0EFE               	movlw	-2
 25565  018596  32E3               	rrcf	plusw1,f,c
 25566  018598  0EFD               	movlw	-3
 25567  01859A  32E3               	rrcf	plusw1,f,c
 25568  01859C  0EFC               	movlw	-4
 25569  01859E  32E3               	rrcf	plusw1,f,c
 25570  0185A0  0EFB               	movlw	-5
 25571  0185A2  32E3               	rrcf	plusw1,f,c
 25572  0185A4                     l9820:
 25573                           
 25574                           ;stkvar	_arg @ sp[(-5)+0]
 25575  0185A4  50E1               	movf	fsr1l,w,c
 25576  0185A6  0FFB               	addlw	-5
 25577  0185A8  6ED9               	movwf	fsr2l,c
 25578  0185AA  50E2               	movf	fsr1h,w,c
 25579  0185AC  6EDA               	movwf	fsr2h,c
 25580  0185AE  0EFF               	movlw	255
 25581  0185B0  22DA               	addwfc	fsr2h,f,c
 25582  0185B2  52DE               	movf	postinc2,f,c
 25583  0185B4  52DE               	movf	postinc2,f,c
 25584  0185B6  52DE               	movf	postinc2,f,c
 25585  0185B8  0EFE               	movlw	254
 25586  0185BA  14DD               	andwf	postdec2,w,c
 25587  0185BC  B4D8               	btfsc	status,2,c
 25588  0185BE  D018               	goto	l9828
 25589  0185C0  D7E6               	goto	l9818
 25590  0185C2                     l9822:
 25591                           
 25592                           ;stkvar	_exp @ sp[(-5)+4]
 25593  0185C2  0EFF               	movlw	-1
 25594  0185C4  2AE3               	incf	plusw1,f,c
 25595                           
 25596                           ;stkvar	_arg @ sp[(-5)+0]
 25597  0185C6  50E1               	movf	fsr1l,w,c
 25598  0185C8  0FFB               	addlw	-5
 25599  0185CA  6ED9               	movwf	fsr2l,c
 25600  0185CC  50E2               	movf	fsr1h,w,c
 25601  0185CE  6EDA               	movwf	fsr2h,c
 25602  0185D0  0EFF               	movlw	255
 25603  0185D2  22DA               	addwfc	fsr2h,f,c
 25604  0185D4  2ADE               	incf	postinc2,f,c
 25605  0185D6  0E00               	movlw	0
 25606  0185D8  22DE               	addwfc	postinc2,f,c
 25607  0185DA  22DE               	addwfc	postinc2,f,c
 25608  0185DC  22DE               	addwfc	postinc2,f,c
 25609                           
 25610                           ;stkvar	_arg @ sp[(-5)+0]
 25611  0185DE  90D8               	bcf	status,0,c
 25612  0185E0  0EFE               	movlw	-2
 25613  0185E2  32E3               	rrcf	plusw1,f,c
 25614  0185E4  0EFD               	movlw	-3
 25615  0185E6  32E3               	rrcf	plusw1,f,c
 25616  0185E8  0EFC               	movlw	-4
 25617  0185EA  32E3               	rrcf	plusw1,f,c
 25618  0185EC  0EFB               	movlw	-5
 25619  0185EE  32E3               	rrcf	plusw1,f,c
 25620  0185F0                     l9828:
 25621                           
 25622                           ;stkvar	_arg @ sp[(-5)+0]
 25623  0185F0  50E1               	movf	fsr1l,w,c
 25624  0185F2  0FFB               	addlw	-5
 25625  0185F4  6ED9               	movwf	fsr2l,c
 25626  0185F6  50E2               	movf	fsr1h,w,c
 25627  0185F8  6EDA               	movwf	fsr2h,c
 25628  0185FA  0EFF               	movlw	255
 25629  0185FC  22DA               	addwfc	fsr2h,f,c
 25630  0185FE  52DE               	movf	postinc2,f,c
 25631  018600  52DE               	movf	postinc2,f,c
 25632  018602  52DE               	movf	postinc2,f,c
 25633  018604  0EFF               	movlw	255
 25634  018606  14DD               	andwf	postdec2,w,c
 25635  018608  B4D8               	btfsc	status,2,c
 25636  01860A  D00C               	goto	l9832
 25637  01860C  D7DA               	goto	l9822
 25638  01860E                     l9830:
 25639                           
 25640                           ;stkvar	_exp @ sp[(-5)+4]
 25641  01860E  0EFF               	movlw	-1
 25642  018610  06E3               	decf	plusw1,f,c
 25643                           
 25644                           ;stkvar	_arg @ sp[(-5)+0]
 25645  018612  90D8               	bcf	status,0,c
 25646  018614  0EFB               	movlw	-5
 25647  018616  36E3               	rlcf	plusw1,f,c
 25648  018618  0EFC               	movlw	-4
 25649  01861A  36E3               	rlcf	plusw1,f,c
 25650  01861C  0EFD               	movlw	-3
 25651  01861E  36E3               	rlcf	plusw1,f,c
 25652  018620  0EFE               	movlw	-2
 25653  018622  36E3               	rlcf	plusw1,f,c
 25654  018624                     l9832:
 25655                           
 25656                           ;stkvar	_arg @ sp[(-5)+0]
 25657  018624  0EFD               	movlw	-3
 25658  018626  BEE3               	btfsc	plusw1,7,c
 25659  018628  D007               	goto	u9120
 25660                           
 25661                           ;stkvar	_exp @ sp[(-5)+4]
 25662  01862A  0EFF               	movlw	-1
 25663  01862C  006F FF8C  F001    	movff	plusw1,btemp
 25664  018632  0E02               	movlw	2
 25665  018634  6001               	cpfslt	btemp^0,c
 25666  018636  D7EB               	goto	l9830
 25667  018638                     u9120:
 25668                           
 25669                           ;stkvar	_exp @ sp[(-5)+4]
 25670  018638  0EFF               	movlw	-1
 25671  01863A  B0E3               	btfsc	plusw1,0,c
 25672  01863C  D002               	goto	l9840
 25673                           
 25674                           ;stkvar	_arg @ sp[(-5)+0]
 25675  01863E  0EFD               	movlw	-3
 25676  018640  9EE3               	bcf	plusw1,7,c
 25677  018642                     l9840:
 25678                           
 25679                           ;stkvar	_exp @ sp[(-5)+4]
 25680  018642  50E1               	movf	fsr1l,w,c
 25681  018644  0FFF               	addlw	-1
 25682  018646  6ED9               	movwf	fsr2l,c
 25683  018648  50E2               	movf	fsr1h,w,c
 25684  01864A  6EDA               	movwf	fsr2h,c
 25685  01864C  0EFF               	movlw	255
 25686  01864E  22DA               	addwfc	fsr2h,f,c
 25687  018650  90D8               	bcf	status,0,c
 25688  018652  32DF               	rrcf	indf2,f,c
 25689                           
 25690                           ;stkvar	_exp @ sp[(-5)+4]
 25691  018654  0EFF               	movlw	-1
 25692  018656  006F FF8C  F00C    	movff	plusw1,btemp+11
 25693  01865C  0060  F030  F005   	movff	btemp+11,btemp+4
 25694  018662  6A06               	clrf	(btemp+5)^0,c
 25695  018664  6A07               	clrf	(btemp+6)^0,c
 25696  018666  6A08               	clrf	(btemp+7)^0,c
 25697  018668  0060  F014  F008   	movff	btemp+4,btemp+7
 25698  01866E  6A07               	clrf	(btemp+6)^0,c
 25699  018670  6A06               	clrf	(btemp+5)^0,c
 25700  018672  6A05               	clrf	(btemp+4)^0,c
 25701                           
 25702                           ;stkvar	_arg @ sp[(-5)+0]
 25703  018674  50E1               	movf	fsr1l,w,c
 25704  018676  0FFB               	addlw	-5
 25705  018678  6ED9               	movwf	fsr2l,c
 25706  01867A  50E2               	movf	fsr1h,w,c
 25707  01867C  6EDA               	movwf	fsr2h,c
 25708  01867E  0EFF               	movlw	255
 25709  018680  22DA               	addwfc	fsr2h,f,c
 25710  018682  5005               	movf	(btemp+4)^0,w,c
 25711  018684  12DE               	iorwf	postinc2,f,c
 25712  018686  5006               	movf	(btemp+5)^0,w,c
 25713  018688  12DE               	iorwf	postinc2,f,c
 25714  01868A  5007               	movf	(btemp+6)^0,w,c
 25715  01868C  12DE               	iorwf	postinc2,f,c
 25716  01868E  5008               	movf	(btemp+7)^0,w,c
 25717  018690  12DE               	iorwf	postinc2,f,c
 25718                           
 25719                           ;stkvar	_sign @ sp[(-5)+-1]
 25720  018692  0EFA               	movlw	-6
 25721  018694  50E3               	movf	plusw1,w,c
 25722  018696  B4D8               	btfsc	status,2,c
 25723  018698  D005               	goto	l9850
 25724                           
 25725                           ;stkvar	_val @ sp[(-5)+-5]
 25726  01869A  0EF9               	movlw	-7
 25727  01869C  AEE3               	btfss	plusw1,7,c
 25728  01869E  D002               	goto	l9850
 25729                           
 25730                           ;stkvar	_arg @ sp[(-5)+0]
 25731  0186A0  0EFE               	movlw	-2
 25732  0186A2  8EE3               	bsf	plusw1,7,c
 25733  0186A4                     l9850:
 25734                           
 25735                           ;stkvar	_arg @ sp[(-5)+0]
 25736  0186A4  0EFB               	movlw	-5
 25737  0186A6  006F FF8C  F001    	movff	plusw1,btemp
 25738  0186AC  0EFC               	movlw	-4
 25739  0186AE  006F FF8C  F002    	movff	plusw1,btemp+1
 25740  0186B4  0EFD               	movlw	-3
 25741  0186B6  006F FF8C  F003    	movff	plusw1,btemp+2
 25742  0186BC  0EFE               	movlw	-2
 25743  0186BE  006F FF8C  F004    	movff	plusw1,btemp+3
 25744  0186C4                     l3139:
 25745                           
 25746                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25747  0186C4  0EF6               	movlw	246
 25748  0186C6  26E1               	addwf	fsr1l,f,c
 25749  0186C8  0EFF               	movlw	255
 25750  0186CA  22E2               	addwfc	fsr1h,f,c
 25751  0186CC  0012               	return		;funcret
 25752  0186CE                     __end_of___xxtofl:
 25753                           	opt callstack 0
 25754                           
 25755 ;; *************** function ___fldiv *****************
 25756 ;; Defined at:
 25757 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25758 ;; Parameters:    Size  Location     Type
 25759 ;;  b               4  [STACK] unsigned char 
 25760 ;;  a               4  [STACK] unsigned char 
 25761 ;; Auto vars:     Size  Location     Type
 25762 ;;  grs             4  [STACK] unsigned long 
 25763 ;;  rem             4  [STACK] unsigned long 
 25764 ;;  new_exp         2  [STACK] short 
 25765 ;;  aexp            1  [STACK] unsigned char 
 25766 ;;  bexp            1  [STACK] unsigned char 
 25767 ;;  sign            1  [STACK] unsigned char 
 25768 ;; Return value:  Size  Location     Type
 25769 ;;                  4  [STACK] unsigned char 
 25770 ;; Registers used:
 25771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25772 ;; Tracked objects:
 25773 ;;		On entry : 0/0
 25774 ;;		On exit  : 0/0
 25775 ;;		Unchanged: 0/0
 25776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25781 ;;Total ram usage:        0 bytes
 25782 ;; Hardware stack levels used:    1
 25783 ;; Hardware stack levels required when called:   15
 25784 ;; This function calls:
 25785 ;;		Nothing
 25786 ;; This function is called by:
 25787 ;;		_conv_raw_result
 25788 ;;		_convert_dac_raw
 25789 ;;		_calc_bsoc
 25790 ;;		_init_bsoc
 25791 ;;		_esr_check
 25792 ;;		_efgtoa
 25793 ;; This function uses a reentrant model
 25794 ;;
 25795                           
 25796                           	psect	text105
 25797  014DB0                     __ptext105:
 25798                           	opt callstack 0
 25799  014DB0                     ___fldiv:
 25800                           	opt callstack 0
 25801                           
 25802                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25803  014DB0  0E0D               	movlw	13
 25804  014DB2  26E1               	addwf	fsr1l,f,c
 25805  014DB4  0E00               	movlw	0
 25806  014DB6  22E2               	addwfc	fsr1h,f,c
 25807                           
 25808                           ;stkvar	_b @ sp[(-13)+-4]
 25809                           
 25810                           ;incstack = 0
 25811 ;; hardware stack exceeded
 25812  014DB8  0EF2               	movlw	242
 25813  014DBA  24E1               	addwf	fsr1l,w,c
 25814  014DBC  6ED9               	movwf	fsr2l,c
 25815  014DBE  0EFF               	movlw	255
 25816  014DC0  20E2               	addwfc	fsr1h,w,c
 25817  014DC2  6EDA               	movwf	fsr2h,c
 25818  014DC4  50DF               	movf	indf2,w,c
 25819  014DC6  6E0C               	movwf	(btemp+11)^0,c
 25820  014DC8  0E80               	movlw	128
 25821  014DCA  160C               	andwf	(btemp+11)^0,f,c
 25822                           
 25823                           ;stkvar	_sign @ sp[(-13)+12]
 25824  014DCC  0EFF               	movlw	-1
 25825  014DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25826                           
 25827                           ;stkvar	_b @ sp[(-13)+-4]
 25828  014DD4  0EF2               	movlw	242
 25829  014DD6  24E1               	addwf	fsr1l,w,c
 25830  014DD8  6ED9               	movwf	fsr2l,c
 25831  014DDA  0EFF               	movlw	255
 25832  014DDC  20E2               	addwfc	fsr1h,w,c
 25833  014DDE  6EDA               	movwf	fsr2h,c
 25834  014DE0  50DF               	movf	indf2,w,c
 25835  014DE2  6E0C               	movwf	(btemp+11)^0,c
 25836  014DE4  90D8               	bcf	status,0,c
 25837  014DE6  340C               	rlcf	(btemp+11)^0,w,c
 25838  014DE8  6E0B               	movwf	(btemp+10)^0,c
 25839                           
 25840                           ;stkvar	_bexp @ sp[(-13)+11]
 25841  014DEA  0EFE               	movlw	-2
 25842  014DEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25843                           
 25844                           ;stkvar	_b @ sp[(-13)+-4]
 25845  014DF2  0EF1               	movlw	241
 25846  014DF4  24E1               	addwf	fsr1l,w,c
 25847  014DF6  6ED9               	movwf	fsr2l,c
 25848  014DF8  0EFF               	movlw	255
 25849  014DFA  20E2               	addwfc	fsr1h,w,c
 25850  014DFC  6EDA               	movwf	fsr2h,c
 25851  014DFE  AEDF               	btfss	indf2,7,c
 25852  014E00  D002               	goto	l8380
 25853                           
 25854                           ;stkvar	_bexp @ sp[(-13)+11]
 25855  014E02  0EFE               	movlw	-2
 25856  014E04  80E3               	bsf	plusw1,0,c
 25857  014E06                     l8380:
 25858                           
 25859                           ;stkvar	_bexp @ sp[(-13)+11]
 25860  014E06  0EFE               	movlw	-2
 25861  014E08  50E3               	movf	plusw1,w,c
 25862  014E0A  B4D8               	btfsc	status,2,c
 25863  014E0C  D027               	goto	l8390
 25864                           
 25865                           ;stkvar	_bexp @ sp[(-13)+11]
 25866  014E0E  0EFE               	movlw	-2
 25867  014E10  28E3               	incf	plusw1,w,c
 25868  014E12  A4D8               	btfss	status,2,c
 25869  014E14  D018               	goto	l8386
 25870  014E16  0E00               	movlw	0
 25871  014E18  6E09               	movwf	(btemp+8)^0,c
 25872  014E1A  0E00               	movlw	0
 25873  014E1C  6E0A               	movwf	(btemp+9)^0,c
 25874  014E1E  0E00               	movlw	0
 25875  014E20  6E0B               	movwf	(btemp+10)^0,c
 25876  014E22  0E00               	movlw	0
 25877  014E24  6E0C               	movwf	(btemp+11)^0,c
 25878                           
 25879                           ;stkvar	_b @ sp[(-13)+-4]
 25880  014E26  0EEF               	movlw	-17
 25881  014E28  0060  F027  FFE3   	movff	btemp+8,plusw1
 25882  014E2E  0EF0               	movlw	-16
 25883  014E30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25884  014E36  0EF1               	movlw	-15
 25885  014E38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25886  014E3E  0EF2               	movlw	-14
 25887  014E40  0060  F033  FFE3   	movff	btemp+11,plusw1
 25888  014E46                     l8386:
 25889                           
 25890                           ;stkvar	_b @ sp[(-13)+-4]
 25891  014E46  0EF1               	movlw	-15
 25892  014E48  8EE3               	bsf	plusw1,7,c
 25893                           
 25894                           ;stkvar	_b @ sp[(-13)+-4]
 25895  014E4A  0EF2               	movlw	242
 25896  014E4C  24E1               	addwf	fsr1l,w,c
 25897  014E4E  6ED9               	movwf	fsr2l,c
 25898  014E50  0EFF               	movlw	255
 25899  014E52  20E2               	addwfc	fsr1h,w,c
 25900  014E54  6EDA               	movwf	fsr2h,c
 25901  014E56  0E00               	movlw	0
 25902  014E58  6EDF               	movwf	indf2,c
 25903  014E5A  D018               	goto	l8392
 25904  014E5C                     l8390:
 25905  014E5C  0E00               	movlw	0
 25906  014E5E  6E09               	movwf	(btemp+8)^0,c
 25907  014E60  0E00               	movlw	0
 25908  014E62  6E0A               	movwf	(btemp+9)^0,c
 25909  014E64  0E00               	movlw	0
 25910  014E66  6E0B               	movwf	(btemp+10)^0,c
 25911  014E68  0E00               	movlw	0
 25912  014E6A  6E0C               	movwf	(btemp+11)^0,c
 25913                           
 25914                           ;stkvar	_b @ sp[(-13)+-4]
 25915  014E6C  0EEF               	movlw	-17
 25916  014E6E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25917  014E74  0EF0               	movlw	-16
 25918  014E76  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25919  014E7C  0EF1               	movlw	-15
 25920  014E7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25921  014E84  0EF2               	movlw	-14
 25922  014E86  0060  F033  FFE3   	movff	btemp+11,plusw1
 25923  014E8C                     l8392:
 25924                           
 25925                           ;stkvar	_a @ sp[(-13)+-8]
 25926  014E8C  0EEE               	movlw	238
 25927  014E8E  24E1               	addwf	fsr1l,w,c
 25928  014E90  6ED9               	movwf	fsr2l,c
 25929  014E92  0EFF               	movlw	255
 25930  014E94  20E2               	addwfc	fsr1h,w,c
 25931  014E96  6EDA               	movwf	fsr2h,c
 25932  014E98  50DF               	movf	indf2,w,c
 25933  014E9A  6E0C               	movwf	(btemp+11)^0,c
 25934  014E9C  0E80               	movlw	128
 25935  014E9E  160C               	andwf	(btemp+11)^0,f,c
 25936                           
 25937                           ;stkvar	_sign @ sp[(-13)+12]
 25938  014EA0  50E1               	movf	fsr1l,w,c
 25939  014EA2  0FFF               	addlw	-1
 25940  014EA4  6ED9               	movwf	fsr2l,c
 25941  014EA6  50E2               	movf	fsr1h,w,c
 25942  014EA8  6EDA               	movwf	fsr2h,c
 25943  014EAA  0EFF               	movlw	255
 25944  014EAC  22DA               	addwfc	fsr2h,f,c
 25945  014EAE  500C               	movf	(btemp+11)^0,w,c
 25946  014EB0  1ADF               	xorwf	indf2,f,c
 25947                           
 25948                           ;stkvar	_a @ sp[(-13)+-8]
 25949  014EB2  0EEE               	movlw	238
 25950  014EB4  24E1               	addwf	fsr1l,w,c
 25951  014EB6  6ED9               	movwf	fsr2l,c
 25952  014EB8  0EFF               	movlw	255
 25953  014EBA  20E2               	addwfc	fsr1h,w,c
 25954  014EBC  6EDA               	movwf	fsr2h,c
 25955  014EBE  50DF               	movf	indf2,w,c
 25956  014EC0  6E0C               	movwf	(btemp+11)^0,c
 25957  014EC2  90D8               	bcf	status,0,c
 25958  014EC4  340C               	rlcf	(btemp+11)^0,w,c
 25959  014EC6  6E0B               	movwf	(btemp+10)^0,c
 25960                           
 25961                           ;stkvar	_aexp @ sp[(-13)+10]
 25962  014EC8  0EFD               	movlw	-3
 25963  014ECA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25964                           
 25965                           ;stkvar	_a @ sp[(-13)+-8]
 25966  014ED0  0EED               	movlw	237
 25967  014ED2  24E1               	addwf	fsr1l,w,c
 25968  014ED4  6ED9               	movwf	fsr2l,c
 25969  014ED6  0EFF               	movlw	255
 25970  014ED8  20E2               	addwfc	fsr1h,w,c
 25971  014EDA  6EDA               	movwf	fsr2h,c
 25972  014EDC  AEDF               	btfss	indf2,7,c
 25973  014EDE  D002               	goto	l8400
 25974                           
 25975                           ;stkvar	_aexp @ sp[(-13)+10]
 25976  014EE0  0EFD               	movlw	-3
 25977  014EE2  80E3               	bsf	plusw1,0,c
 25978  014EE4                     l8400:
 25979                           
 25980                           ;stkvar	_aexp @ sp[(-13)+10]
 25981  014EE4  0EFD               	movlw	-3
 25982  014EE6  50E3               	movf	plusw1,w,c
 25983  014EE8  B4D8               	btfsc	status,2,c
 25984  014EEA  D027               	goto	l8410
 25985                           
 25986                           ;stkvar	_aexp @ sp[(-13)+10]
 25987  014EEC  0EFD               	movlw	-3
 25988  014EEE  28E3               	incf	plusw1,w,c
 25989  014EF0  A4D8               	btfss	status,2,c
 25990  014EF2  D018               	goto	l8406
 25991  014EF4  0E00               	movlw	0
 25992  014EF6  6E09               	movwf	(btemp+8)^0,c
 25993  014EF8  0E00               	movlw	0
 25994  014EFA  6E0A               	movwf	(btemp+9)^0,c
 25995  014EFC  0E00               	movlw	0
 25996  014EFE  6E0B               	movwf	(btemp+10)^0,c
 25997  014F00  0E00               	movlw	0
 25998  014F02  6E0C               	movwf	(btemp+11)^0,c
 25999                           
 26000                           ;stkvar	_a @ sp[(-13)+-8]
 26001  014F04  0EEB               	movlw	-21
 26002  014F06  0060  F027  FFE3   	movff	btemp+8,plusw1
 26003  014F0C  0EEC               	movlw	-20
 26004  014F0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26005  014F14  0EED               	movlw	-19
 26006  014F16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26007  014F1C  0EEE               	movlw	-18
 26008  014F1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26009  014F24                     l8406:
 26010                           
 26011                           ;stkvar	_a @ sp[(-13)+-8]
 26012  014F24  0EED               	movlw	-19
 26013  014F26  8EE3               	bsf	plusw1,7,c
 26014                           
 26015                           ;stkvar	_a @ sp[(-13)+-8]
 26016  014F28  0EEE               	movlw	238
 26017  014F2A  24E1               	addwf	fsr1l,w,c
 26018  014F2C  6ED9               	movwf	fsr2l,c
 26019  014F2E  0EFF               	movlw	255
 26020  014F30  20E2               	addwfc	fsr1h,w,c
 26021  014F32  6EDA               	movwf	fsr2h,c
 26022  014F34  0E00               	movlw	0
 26023  014F36  6EDF               	movwf	indf2,c
 26024  014F38  D018               	goto	l8412
 26025  014F3A                     l8410:
 26026  014F3A  0E00               	movlw	0
 26027  014F3C  6E09               	movwf	(btemp+8)^0,c
 26028  014F3E  0E00               	movlw	0
 26029  014F40  6E0A               	movwf	(btemp+9)^0,c
 26030  014F42  0E00               	movlw	0
 26031  014F44  6E0B               	movwf	(btemp+10)^0,c
 26032  014F46  0E00               	movlw	0
 26033  014F48  6E0C               	movwf	(btemp+11)^0,c
 26034                           
 26035                           ;stkvar	_a @ sp[(-13)+-8]
 26036  014F4A  0EEB               	movlw	-21
 26037  014F4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26038  014F52  0EEC               	movlw	-20
 26039  014F54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26040  014F5A  0EED               	movlw	-19
 26041  014F5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26042  014F62  0EEE               	movlw	-18
 26043  014F64  0060  F033  FFE3   	movff	btemp+11,plusw1
 26044  014F6A                     l8412:
 26045                           
 26046                           ;stkvar	_a @ sp[(-13)+-8]
 26047  014F6A  0EEB               	movlw	-21
 26048  014F6C  50E3               	movf	plusw1,w,c
 26049  014F6E  E139               	bnz	l8424
 26050  014F70  0EEC               	movlw	-20
 26051  014F72  50E3               	movf	plusw1,w,c
 26052  014F74  E136               	bnz	l8424
 26053  014F76  0EED               	movlw	-19
 26054  014F78  50E3               	movf	plusw1,w,c
 26055  014F7A  E133               	bnz	l8424
 26056  014F7C  0EEE               	movlw	-18
 26057  014F7E  50E3               	movf	plusw1,w,c
 26058  014F80  A4D8               	btfss	status,2,c
 26059  014F82  D02F               	goto	l8424
 26060                           
 26061                           ;stkvar	_b @ sp[(-13)+-4]
 26062  014F84  0EEF               	movlw	-17
 26063  014F86  6AE3               	clrf	plusw1,c
 26064  014F88  0EF0               	movlw	-16
 26065  014F8A  6AE3               	clrf	plusw1,c
 26066  014F8C  0EF1               	movlw	-15
 26067  014F8E  6AE3               	clrf	plusw1,c
 26068  014F90  0EF2               	movlw	-14
 26069  014F92  6AE3               	clrf	plusw1,c
 26070                           
 26071                           ;stkvar	_b @ sp[(-13)+-4]
 26072  014F94  0EF1               	movlw	241
 26073  014F96  24E1               	addwf	fsr1l,w,c
 26074  014F98  6ED9               	movwf	fsr2l,c
 26075  014F9A  0EFF               	movlw	255
 26076  014F9C  20E2               	addwfc	fsr1h,w,c
 26077  014F9E  6EDA               	movwf	fsr2h,c
 26078  014FA0  0E80               	movlw	128
 26079  014FA2  12DE               	iorwf	postinc2,f,c
 26080  014FA4  0E7F               	movlw	127
 26081  014FA6  12DD               	iorwf	postdec2,f,c
 26082  014FA8                     l8418:
 26083                           
 26084                           ;stkvar	_sign @ sp[(-13)+12]
 26085  014FA8  0EFF               	movlw	-1
 26086  014FAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26087                           
 26088                           ;stkvar	_b @ sp[(-13)+-4]
 26089  014FB0  0EF2               	movlw	242
 26090  014FB2  24E1               	addwf	fsr1l,w,c
 26091  014FB4  6ED9               	movwf	fsr2l,c
 26092  014FB6  0EFF               	movlw	255
 26093  014FB8  20E2               	addwfc	fsr1h,w,c
 26094  014FBA  6EDA               	movwf	fsr2h,c
 26095  014FBC  500C               	movf	(btemp+11)^0,w,c
 26096  014FBE  12DF               	iorwf	indf2,f,c
 26097                           
 26098                           ;stkvar	_b @ sp[(-13)+-4]
 26099  014FC0  0EEF               	movlw	-17
 26100  014FC2  006F FF8C  F001    	movff	plusw1,btemp
 26101  014FC8  0EF0               	movlw	-16
 26102  014FCA  006F FF8C  F002    	movff	plusw1,btemp+1
 26103  014FD0  0EF1               	movlw	-15
 26104  014FD2  006F FF8C  F003    	movff	plusw1,btemp+2
 26105  014FD8  0EF2               	movlw	-14
 26106  014FDA  006F FF8C  F004    	movff	plusw1,btemp+3
 26107  014FE0  D19F               	goto	l3063
 26108  014FE2                     l8424:
 26109                           
 26110                           ;stkvar	_bexp @ sp[(-13)+11]
 26111  014FE2  0EFE               	movlw	-2
 26112  014FE4  50E3               	movf	plusw1,w,c
 26113  014FE6  A4D8               	btfss	status,2,c
 26114  014FE8  D009               	goto	l8432
 26115  014FEA  0E00               	movlw	0
 26116  014FEC  6E01               	movwf	btemp^0,c
 26117  014FEE  0E00               	movlw	0
 26118  014FF0  6E02               	movwf	(btemp+1)^0,c
 26119  014FF2  0E00               	movlw	0
 26120  014FF4  6E03               	movwf	(btemp+2)^0,c
 26121  014FF6  0E00               	movlw	0
 26122  014FF8  6E04               	movwf	(btemp+3)^0,c
 26123  014FFA  D192               	goto	l3063
 26124  014FFC                     l8432:
 26125                           
 26126                           ;stkvar	_bexp @ sp[(-13)+11]
 26127  014FFC  0EFE               	movlw	-2
 26128  014FFE  50E3               	movf	plusw1,w,c
 26129  015000  6E0B               	movwf	(btemp+10)^0,c
 26130  015002  6A0C               	clrf	(btemp+11)^0,c
 26131                           
 26132                           ;stkvar	_aexp @ sp[(-13)+10]
 26133  015004  0EFD               	movlw	-3
 26134  015006  50E3               	movf	plusw1,w,c
 26135  015008  5E0B               	subwf	(btemp+10)^0,f,c
 26136  01500A  0E00               	movlw	0
 26137  01500C  5A0C               	subwfb	(btemp+11)^0,f,c
 26138  01500E  0E7F               	movlw	127
 26139  015010  260B               	addwf	(btemp+10)^0,f,c
 26140  015012  0E00               	movlw	0
 26141  015014  220C               	addwfc	(btemp+11)^0,f,c
 26142                           
 26143                           ;stkvar	_new_exp @ sp[(-13)+8]
 26144  015016  0EFB               	movlw	-5
 26145  015018  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26146  01501E  0EFC               	movlw	-4
 26147  015020  0060  F033  FFE3   	movff	btemp+11,plusw1
 26148                           
 26149                           ;stkvar	_b @ sp[(-13)+-4]
 26150  015026  0EEF               	movlw	-17
 26151  015028  006F FF8C  F009    	movff	plusw1,btemp+8
 26152  01502E  0EF0               	movlw	-16
 26153  015030  006F FF8C  F00A    	movff	plusw1,btemp+9
 26154  015036  0EF1               	movlw	-15
 26155  015038  006F FF8C  F00B    	movff	plusw1,btemp+10
 26156  01503E  0EF2               	movlw	-14
 26157  015040  006F FF8C  F00C    	movff	plusw1,btemp+11
 26158                           
 26159                           ;stkvar	_rem @ sp[(-13)+4]
 26160  015046  0EF7               	movlw	-9
 26161  015048  0060  F027  FFE3   	movff	btemp+8,plusw1
 26162  01504E  0EF8               	movlw	-8
 26163  015050  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26164  015056  0EF9               	movlw	-7
 26165  015058  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26166  01505E  0EFA               	movlw	-6
 26167  015060  0060  F033  FFE3   	movff	btemp+11,plusw1
 26168                           
 26169                           ;stkvar	_b @ sp[(-13)+-4]
 26170  015066  0EEF               	movlw	-17
 26171  015068  6AE3               	clrf	plusw1,c
 26172  01506A  0EF0               	movlw	-16
 26173  01506C  6AE3               	clrf	plusw1,c
 26174  01506E  0EF1               	movlw	-15
 26175  015070  6AE3               	clrf	plusw1,c
 26176  015072  0EF2               	movlw	-14
 26177  015074  6AE3               	clrf	plusw1,c
 26178                           
 26179                           ;stkvar	_grs @ sp[(-13)+0]
 26180  015076  0EF3               	movlw	-13
 26181  015078  6AE3               	clrf	plusw1,c
 26182  01507A  0EF4               	movlw	-12
 26183  01507C  6AE3               	clrf	plusw1,c
 26184  01507E  0EF5               	movlw	-11
 26185  015080  6AE3               	clrf	plusw1,c
 26186  015082  0EF6               	movlw	-10
 26187  015084  6AE3               	clrf	plusw1,c
 26188                           
 26189                           ;stkvar	_aexp @ sp[(-13)+10]
 26190  015086  0EFD               	movlw	-3
 26191  015088  6AE3               	clrf	plusw1,c
 26192  01508A  D050               	goto	l8460
 26193  01508C                     l8442:
 26194                           
 26195                           ;stkvar	_aexp @ sp[(-13)+10]
 26196  01508C  0EFD               	movlw	-3
 26197  01508E  50E3               	movf	plusw1,w,c
 26198  015090  B4D8               	btfsc	status,2,c
 26199  015092  D020               	goto	l8452
 26200                           
 26201                           ;stkvar	_rem @ sp[(-13)+4]
 26202  015094  90D8               	bcf	status,0,c
 26203  015096  0EF7               	movlw	-9
 26204  015098  36E3               	rlcf	plusw1,f,c
 26205  01509A  0EF8               	movlw	-8
 26206  01509C  36E3               	rlcf	plusw1,f,c
 26207  01509E  0EF9               	movlw	-7
 26208  0150A0  36E3               	rlcf	plusw1,f,c
 26209  0150A2  0EFA               	movlw	-6
 26210  0150A4  36E3               	rlcf	plusw1,f,c
 26211                           
 26212                           ;stkvar	_b @ sp[(-13)+-4]
 26213  0150A6  90D8               	bcf	status,0,c
 26214  0150A8  0EEF               	movlw	-17
 26215  0150AA  36E3               	rlcf	plusw1,f,c
 26216  0150AC  0EF0               	movlw	-16
 26217  0150AE  36E3               	rlcf	plusw1,f,c
 26218  0150B0  0EF1               	movlw	-15
 26219  0150B2  36E3               	rlcf	plusw1,f,c
 26220  0150B4  0EF2               	movlw	-14
 26221  0150B6  36E3               	rlcf	plusw1,f,c
 26222                           
 26223                           ;stkvar	_grs @ sp[(-13)+0]
 26224  0150B8  0EF6               	movlw	-10
 26225  0150BA  AEE3               	btfss	plusw1,7,c
 26226  0150BC  D002               	goto	l8450
 26227                           
 26228                           ;stkvar	_b @ sp[(-13)+-4]
 26229  0150BE  0EEF               	movlw	-17
 26230  0150C0  80E3               	bsf	plusw1,0,c
 26231  0150C2                     l8450:
 26232                           
 26233                           ;stkvar	_grs @ sp[(-13)+0]
 26234  0150C2  90D8               	bcf	status,0,c
 26235  0150C4  0EF3               	movlw	-13
 26236  0150C6  36E3               	rlcf	plusw1,f,c
 26237  0150C8  0EF4               	movlw	-12
 26238  0150CA  36E3               	rlcf	plusw1,f,c
 26239  0150CC  0EF5               	movlw	-11
 26240  0150CE  36E3               	rlcf	plusw1,f,c
 26241  0150D0  0EF6               	movlw	-10
 26242  0150D2  36E3               	rlcf	plusw1,f,c
 26243  0150D4                     l8452:
 26244                           
 26245                           ;stkvar	_a @ sp[(-13)+-8]
 26246                           ;stkvar	_rem @ sp[(-13)+4]
 26247  0150D4  50E1               	movf	fsr1l,w,c
 26248  0150D6  0FF7               	addlw	-9
 26249  0150D8  6ED9               	movwf	fsr2l,c
 26250  0150DA  50E2               	movf	fsr1h,w,c
 26251  0150DC  6EDA               	movwf	fsr2h,c
 26252  0150DE  0EFF               	movlw	255
 26253  0150E0  22DA               	addwfc	fsr2h,f,c
 26254  0150E2  0EEB               	movlw	-21
 26255  0150E4  50E3               	movf	plusw1,w,c
 26256  0150E6  5CDE               	subwf	postinc2,w,c
 26257  0150E8  0EEC               	movlw	-20
 26258  0150EA  50E3               	movf	plusw1,w,c
 26259  0150EC  58DE               	subwfb	postinc2,w,c
 26260  0150EE  0EED               	movlw	-19
 26261  0150F0  50E3               	movf	plusw1,w,c
 26262  0150F2  58DE               	subwfb	postinc2,w,c
 26263  0150F4  0EEE               	movlw	-18
 26264  0150F6  50E3               	movf	plusw1,w,c
 26265  0150F8  58DE               	subwfb	postinc2,w,c
 26266  0150FA  A0D8               	btfss	status,0,c
 26267  0150FC  D015               	goto	l8458
 26268                           
 26269                           ;stkvar	_grs @ sp[(-13)+0]
 26270  0150FE  0EF6               	movlw	-10
 26271  015100  8CE3               	bsf	plusw1,6,c
 26272                           
 26273                           ;stkvar	_a @ sp[(-13)+-8]
 26274                           ;stkvar	_rem @ sp[(-13)+4]
 26275  015102  50E1               	movf	fsr1l,w,c
 26276  015104  0FF7               	addlw	-9
 26277  015106  6ED9               	movwf	fsr2l,c
 26278  015108  50E2               	movf	fsr1h,w,c
 26279  01510A  6EDA               	movwf	fsr2h,c
 26280  01510C  0EFF               	movlw	255
 26281  01510E  22DA               	addwfc	fsr2h,f,c
 26282  015110  0EEB               	movlw	-21
 26283  015112  50E3               	movf	plusw1,w,c
 26284  015114  5EDE               	subwf	postinc2,f,c
 26285  015116  0EEC               	movlw	-20
 26286  015118  50E3               	movf	plusw1,w,c
 26287  01511A  5ADE               	subwfb	postinc2,f,c
 26288  01511C  0EED               	movlw	-19
 26289  01511E  50E3               	movf	plusw1,w,c
 26290  015120  5ADE               	subwfb	postinc2,f,c
 26291  015122  0EEE               	movlw	-18
 26292  015124  50E3               	movf	plusw1,w,c
 26293  015126  5ADE               	subwfb	postinc2,f,c
 26294  015128                     l8458:
 26295                           
 26296                           ;stkvar	_aexp @ sp[(-13)+10]
 26297  015128  0EFD               	movlw	-3
 26298  01512A  2AE3               	incf	plusw1,f,c
 26299  01512C                     l8460:
 26300                           
 26301                           ;stkvar	_aexp @ sp[(-13)+10]
 26302  01512C  0EFD               	movlw	-3
 26303  01512E  006F FF8C  F001    	movff	plusw1,btemp
 26304  015134  0E19               	movlw	25
 26305  015136  6401               	cpfsgt	btemp^0,c
 26306  015138  D7A9               	goto	l8442
 26307                           
 26308                           ;stkvar	_rem @ sp[(-13)+4]
 26309  01513A  0EF7               	movlw	-9
 26310  01513C  50E3               	movf	plusw1,w,c
 26311  01513E  E10A               	bnz	u6710
 26312  015140  0EF8               	movlw	-8
 26313  015142  50E3               	movf	plusw1,w,c
 26314  015144  E107               	bnz	u6710
 26315  015146  0EF9               	movlw	-7
 26316  015148  50E3               	movf	plusw1,w,c
 26317  01514A  E104               	bnz	u6710
 26318  01514C  0EFA               	movlw	-6
 26319  01514E  50E3               	movf	plusw1,w,c
 26320  015150  B4D8               	btfsc	status,2,c
 26321  015152  D024               	goto	l8476
 26322  015154                     u6710:
 26323                           
 26324                           ;stkvar	_grs @ sp[(-13)+0]
 26325  015154  0EF3               	movlw	-13
 26326  015156  80E3               	bsf	plusw1,0,c
 26327  015158  D021               	goto	l8476
 26328  01515A                     l8466:
 26329                           
 26330                           ;stkvar	_b @ sp[(-13)+-4]
 26331  01515A  90D8               	bcf	status,0,c
 26332  01515C  0EEF               	movlw	-17
 26333  01515E  36E3               	rlcf	plusw1,f,c
 26334  015160  0EF0               	movlw	-16
 26335  015162  36E3               	rlcf	plusw1,f,c
 26336  015164  0EF1               	movlw	-15
 26337  015166  36E3               	rlcf	plusw1,f,c
 26338  015168  0EF2               	movlw	-14
 26339  01516A  36E3               	rlcf	plusw1,f,c
 26340                           
 26341                           ;stkvar	_grs @ sp[(-13)+0]
 26342  01516C  0EF6               	movlw	-10
 26343  01516E  AEE3               	btfss	plusw1,7,c
 26344  015170  D002               	goto	l8472
 26345                           
 26346                           ;stkvar	_b @ sp[(-13)+-4]
 26347  015172  0EEF               	movlw	-17
 26348  015174  80E3               	bsf	plusw1,0,c
 26349  015176                     l8472:
 26350                           
 26351                           ;stkvar	_grs @ sp[(-13)+0]
 26352  015176  90D8               	bcf	status,0,c
 26353  015178  0EF3               	movlw	-13
 26354  01517A  36E3               	rlcf	plusw1,f,c
 26355  01517C  0EF4               	movlw	-12
 26356  01517E  36E3               	rlcf	plusw1,f,c
 26357  015180  0EF5               	movlw	-11
 26358  015182  36E3               	rlcf	plusw1,f,c
 26359  015184  0EF6               	movlw	-10
 26360  015186  36E3               	rlcf	plusw1,f,c
 26361                           
 26362                           ;stkvar	_new_exp @ sp[(-13)+8]
 26363  015188  50E1               	movf	fsr1l,w,c
 26364  01518A  0FFB               	addlw	-5
 26365  01518C  6ED9               	movwf	fsr2l,c
 26366  01518E  50E2               	movf	fsr1h,w,c
 26367  015190  6EDA               	movwf	fsr2h,c
 26368  015192  0EFF               	movlw	255
 26369  015194  22DA               	addwfc	fsr2h,f,c
 26370  015196  06DE               	decf	postinc2,f,c
 26371  015198  0E00               	movlw	0
 26372  01519A  5ADD               	subwfb	postdec2,f,c
 26373  01519C                     l8476:
 26374                           
 26375                           ;stkvar	_b @ sp[(-13)+-4]
 26376  01519C  0EF1               	movlw	-15
 26377  01519E  AEE3               	btfss	plusw1,7,c
 26378  0151A0  D7DC               	goto	l8466
 26379                           
 26380                           ;stkvar	_aexp @ sp[(-13)+10]
 26381  0151A2  0EFD               	movlw	-3
 26382  0151A4  6AE3               	clrf	plusw1,c
 26383                           
 26384                           ;stkvar	_grs @ sp[(-13)+0]
 26385  0151A6  0EF6               	movlw	-10
 26386  0151A8  AEE3               	btfss	plusw1,7,c
 26387  0151AA  D020               	goto	l8490
 26388                           
 26389                           ;stkvar	_grs @ sp[(-13)+0]
 26390  0151AC  50E1               	movf	fsr1l,w,c
 26391  0151AE  0FF3               	addlw	-13
 26392  0151B0  6ED9               	movwf	fsr2l,c
 26393  0151B2  50E2               	movf	fsr1h,w,c
 26394  0151B4  6EDA               	movwf	fsr2h,c
 26395  0151B6  0EFF               	movlw	255
 26396  0151B8  22DA               	addwfc	fsr2h,f,c
 26397  0151BA  0EFF               	movlw	255
 26398  0151BC  14DE               	andwf	postinc2,w,c
 26399  0151BE  6E09               	movwf	(btemp+8)^0,c
 26400  0151C0  0EFF               	movlw	255
 26401  0151C2  14DE               	andwf	postinc2,w,c
 26402  0151C4  6E0A               	movwf	(btemp+9)^0,c
 26403  0151C6  0EFF               	movlw	255
 26404  0151C8  14DE               	andwf	postinc2,w,c
 26405  0151CA  6E0B               	movwf	(btemp+10)^0,c
 26406  0151CC  0E7F               	movlw	127
 26407  0151CE  14DE               	andwf	postinc2,w,c
 26408  0151D0  6E0C               	movwf	(btemp+11)^0,c
 26409  0151D2  5009               	movf	(btemp+8)^0,w,c
 26410  0151D4  100A               	iorwf	(btemp+9)^0,w,c
 26411  0151D6  100B               	iorwf	(btemp+10)^0,w,c
 26412  0151D8  100C               	iorwf	(btemp+11)^0,w,c
 26413  0151DA  B4D8               	btfsc	status,2,c
 26414  0151DC  D004               	goto	l8486
 26415  0151DE                     u6750:
 26416                           
 26417                           ;stkvar	_aexp @ sp[(-13)+10]
 26418  0151DE  0EFD               	movlw	-3
 26419  0151E0  6AE3               	clrf	plusw1,c
 26420  0151E2  2AE3               	incf	plusw1,f,c
 26421  0151E4  D003               	goto	l8490
 26422  0151E6                     l8486:
 26423                           
 26424                           ;stkvar	_b @ sp[(-13)+-4]
 26425  0151E6  0EEF               	movlw	-17
 26426  0151E8  B0E3               	btfsc	plusw1,0,c
 26427  0151EA  D7F9               	goto	u6750
 26428  0151EC                     l8490:
 26429                           
 26430                           ;stkvar	_aexp @ sp[(-13)+10]
 26431  0151EC  0EFD               	movlw	-3
 26432  0151EE  50E3               	movf	plusw1,w,c
 26433  0151F0  B4D8               	btfsc	status,2,c
 26434  0151F2  D036               	goto	l8500
 26435                           
 26436                           ;stkvar	_b @ sp[(-13)+-4]
 26437  0151F4  50E1               	movf	fsr1l,w,c
 26438  0151F6  0FEF               	addlw	-17
 26439  0151F8  6ED9               	movwf	fsr2l,c
 26440  0151FA  50E2               	movf	fsr1h,w,c
 26441  0151FC  6EDA               	movwf	fsr2h,c
 26442  0151FE  0EFF               	movlw	255
 26443  015200  22DA               	addwfc	fsr2h,f,c
 26444  015202  2ADE               	incf	postinc2,f,c
 26445  015204  0E00               	movlw	0
 26446  015206  22DE               	addwfc	postinc2,f,c
 26447  015208  22DE               	addwfc	postinc2,f,c
 26448  01520A  22DE               	addwfc	postinc2,f,c
 26449                           
 26450                           ;stkvar	_b @ sp[(-13)+-4]
 26451  01520C  0EF2               	movlw	-14
 26452  01520E  A0E3               	btfss	plusw1,0,c
 26453  015210  D027               	goto	l8500
 26454  015212  0E01               	movlw	1
 26455  015214  6E0C               	movwf	(btemp+11)^0,c
 26456                           
 26457                           ;stkvar	_b @ sp[(-13)+-4]
 26458  015216  50E1               	movf	fsr1l,w,c
 26459  015218  0FEF               	addlw	-17
 26460  01521A  6ED9               	movwf	fsr2l,c
 26461  01521C  50E2               	movf	fsr1h,w,c
 26462  01521E  6EDA               	movwf	fsr2h,c
 26463  015220  0EFF               	movlw	255
 26464  015222  22DA               	addwfc	fsr2h,f,c
 26465  015224  280C               	incf	(btemp+11)^0,w,c
 26466  015226  52DE               	movf	postinc2,f,c
 26467  015228  D008               	goto	u6790
 26468  01522A                     u6795:
 26469  01522A  52DE               	movf	postinc2,f,c
 26470  01522C  90D8               	bcf	status,0,c
 26471  01522E  BEDC               	btfsc	preinc2,7,c
 26472  015230  80D8               	bsf	status,0,c
 26473  015232  32DD               	rrcf	postdec2,f,c
 26474  015234  32DD               	rrcf	postdec2,f,c
 26475  015236  32DD               	rrcf	postdec2,f,c
 26476  015238  32DE               	rrcf	postinc2,f,c
 26477  01523A                     u6790:
 26478  01523A  2EE8               	decfsz	wreg,f,c
 26479  01523C  D7F6               	goto	u6795
 26480                           
 26481                           ;stkvar	_new_exp @ sp[(-13)+8]
 26482  01523E  0EFB               	movlw	-5
 26483  015240  50E3               	movf	plusw1,w,c
 26484  015242  0F01               	addlw	1
 26485  015244  6E01               	movwf	btemp^0,c
 26486  015246  0EFB               	movlw	-5
 26487  015248  0060  F007  FFE3   	movff	btemp,plusw1
 26488  01524E  6A01               	clrf	btemp^0,c
 26489  015250  0EFC               	movlw	-4
 26490  015252  50E3               	movf	plusw1,w,c
 26491  015254  2001               	addwfc	btemp^0,w,c
 26492  015256  6E01               	movwf	btemp^0,c
 26493  015258  0EFC               	movlw	-4
 26494  01525A  0060  F007  FFE3   	movff	btemp,plusw1
 26495  015260                     l8500:
 26496                           
 26497                           ;stkvar	_new_exp @ sp[(-13)+8]
 26498  015260  0EFC               	movlw	-4
 26499  015262  BEE3               	btfsc	plusw1,7,c
 26500  015264  D01B               	goto	l8506
 26501  015266  0EFC               	movlw	-4
 26502  015268  50E3               	movf	plusw1,w,c
 26503  01526A  E104               	bnz	u6800
 26504  01526C  0EFB               	movlw	-5
 26505  01526E  28E3               	incf	plusw1,w,c
 26506  015270  A0D8               	btfss	status,0,c
 26507  015272  D014               	goto	l8506
 26508  015274                     u6800:
 26509  015274  0EFF               	movlw	255
 26510  015276  6E0B               	movwf	(btemp+10)^0,c
 26511  015278  0E00               	movlw	0
 26512  01527A  6E0C               	movwf	(btemp+11)^0,c
 26513                           
 26514                           ;stkvar	_new_exp @ sp[(-13)+8]
 26515  01527C  0EFB               	movlw	-5
 26516  01527E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26517  015284  0EFC               	movlw	-4
 26518  015286  0060  F033  FFE3   	movff	btemp+11,plusw1
 26519                           
 26520                           ;stkvar	_b @ sp[(-13)+-4]
 26521  01528C  0EEF               	movlw	-17
 26522  01528E  6AE3               	clrf	plusw1,c
 26523  015290  0EF0               	movlw	-16
 26524  015292  6AE3               	clrf	plusw1,c
 26525  015294  0EF1               	movlw	-15
 26526  015296  6AE3               	clrf	plusw1,c
 26527  015298  0EF2               	movlw	-14
 26528  01529A  6AE3               	clrf	plusw1,c
 26529  01529C                     l8506:
 26530                           
 26531                           ;stkvar	_new_exp @ sp[(-13)+8]
 26532  01529C  0EFC               	movlw	-4
 26533  01529E  BEE3               	btfsc	plusw1,7,c
 26534  0152A0  D007               	goto	u6810
 26535  0152A2  0EFC               	movlw	-4
 26536  0152A4  50E3               	movf	plusw1,w,c
 26537  0152A6  E112               	bnz	l8512
 26538  0152A8  0EFB               	movlw	-5
 26539  0152AA  04E3               	decf	plusw1,w,c
 26540  0152AC  B0D8               	btfsc	status,0,c
 26541  0152AE  D00E               	goto	l8512
 26542  0152B0                     u6810:
 26543                           
 26544                           ;stkvar	_new_exp @ sp[(-13)+8]
 26545  0152B0  0EFB               	movlw	-5
 26546  0152B2  6AE3               	clrf	plusw1,c
 26547  0152B4  0EFC               	movlw	-4
 26548  0152B6  6AE3               	clrf	plusw1,c
 26549                           
 26550                           ;stkvar	_b @ sp[(-13)+-4]
 26551  0152B8  0EEF               	movlw	-17
 26552  0152BA  6AE3               	clrf	plusw1,c
 26553  0152BC  0EF0               	movlw	-16
 26554  0152BE  6AE3               	clrf	plusw1,c
 26555  0152C0  0EF1               	movlw	-15
 26556  0152C2  6AE3               	clrf	plusw1,c
 26557  0152C4  0EF2               	movlw	-14
 26558  0152C6  6AE3               	clrf	plusw1,c
 26559                           
 26560                           ;stkvar	_sign @ sp[(-13)+12]
 26561  0152C8  0EFF               	movlw	-1
 26562  0152CA  6AE3               	clrf	plusw1,c
 26563  0152CC                     l8512:
 26564                           
 26565                           ;stkvar	_new_exp @ sp[(-13)+8]
 26566                           ;stkvar	_bexp @ sp[(-13)+11]
 26567  0152CC  0EFB               	movlw	-5
 26568  0152CE  006F FF8C  F001    	movff	plusw1,btemp
 26569  0152D4  0EFE               	movlw	-2
 26570  0152D6  0060  F007  FFE3   	movff	btemp,plusw1
 26571                           
 26572                           ;stkvar	_bexp @ sp[(-13)+11]
 26573  0152DC  0EFE               	movlw	-2
 26574  0152DE  A0E3               	btfss	plusw1,0,c
 26575  0152E0  D009               	goto	l8518
 26576                           
 26577                           ;stkvar	_b @ sp[(-13)+-4]
 26578  0152E2  0EF1               	movlw	241
 26579  0152E4  24E1               	addwf	fsr1l,w,c
 26580  0152E6  6ED9               	movwf	fsr2l,c
 26581  0152E8  0EFF               	movlw	255
 26582  0152EA  20E2               	addwfc	fsr1h,w,c
 26583  0152EC  6EDA               	movwf	fsr2h,c
 26584  0152EE  0E00               	movlw	0
 26585  0152F0  8EDB               	bsf	plusw2,7,c
 26586  0152F2  D008               	goto	l8520
 26587  0152F4                     l8518:
 26588                           
 26589                           ;stkvar	_b @ sp[(-13)+-4]
 26590  0152F4  0EF1               	movlw	241
 26591  0152F6  24E1               	addwf	fsr1l,w,c
 26592  0152F8  6ED9               	movwf	fsr2l,c
 26593  0152FA  0EFF               	movlw	255
 26594  0152FC  20E2               	addwfc	fsr1h,w,c
 26595  0152FE  6EDA               	movwf	fsr2h,c
 26596  015300  0E7F               	movlw	127
 26597  015302  16DF               	andwf	indf2,f,c
 26598  015304                     l8520:
 26599                           
 26600                           ;stkvar	_b @ sp[(-13)+-4]
 26601  015304  0EF2               	movlw	242
 26602  015306  24E1               	addwf	fsr1l,w,c
 26603  015308  6ED9               	movwf	fsr2l,c
 26604  01530A  0EFF               	movlw	255
 26605  01530C  20E2               	addwfc	fsr1h,w,c
 26606  01530E  6EDA               	movwf	fsr2h,c
 26607                           
 26608                           ;stkvar	_bexp @ sp[(-13)+11]
 26609  015310  0EFE               	movlw	-2
 26610  015312  006F FF8C  F00C    	movff	plusw1,btemp+11
 26611  015318  90D8               	bcf	status,0,c
 26612  01531A  300C               	rrcf	(btemp+11)^0,w,c
 26613  01531C  6EDF               	movwf	indf2,c
 26614  01531E  D644               	goto	l8418
 26615  015320                     l3063:
 26616                           
 26617                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26618  015320  0EEB               	movlw	235
 26619  015322  26E1               	addwf	fsr1l,f,c
 26620  015324  0EFF               	movlw	255
 26621  015326  22E2               	addwfc	fsr1h,f,c
 26622  015328  0012               	return		;funcret
 26623  01532A                     __end_of___fldiv:
 26624                           	opt callstack 0
 26625                           
 26626 ;; *************** function ___flge *****************
 26627 ;; Defined at:
 26628 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26629 ;; Parameters:    Size  Location     Type
 26630 ;;  ff1             4  [STACK] unsigned char 
 26631 ;;  ff2             4  [STACK] unsigned char 
 26632 ;; Auto vars:     Size  Location     Type
 26633 ;;		None
 26634 ;; Return value:  Size  Location     Type
 26635 ;;		None               void
 26636 ;; Registers used:
 26637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26638 ;; Tracked objects:
 26639 ;;		On entry : 0/0
 26640 ;;		On exit  : 0/0
 26641 ;;		Unchanged: 0/0
 26642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26647 ;;Total ram usage:        0 bytes
 26648 ;; Hardware stack levels used:    1
 26649 ;; Hardware stack levels required when called:   15
 26650 ;; This function calls:
 26651 ;;		Nothing
 26652 ;; This function is called by:
 26653 ;;		_main
 26654 ;;		_convert_dac_raw
 26655 ;;		_calc_ror_data
 26656 ;;		_check_day_time
 26657 ;;		_calc_bsoc
 26658 ;;		_efgtoa
 26659 ;; This function uses a reentrant model
 26660 ;;
 26661                           
 26662                           	psect	text106
 26663  019214                     __ptext106:
 26664                           	opt callstack 0
 26665  019214                     ___flge:
 26666                           	opt callstack 0
 26667                           
 26668                           ;stkvar	_ff1 @ sp[(0)+-4]
 26669                           
 26670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26671                           ;incstack = 0
 26672 ;; hardware stack exceeded
 26673  019214  50E1               	movf	fsr1l,w,c
 26674  019216  0FFC               	addlw	-4
 26675  019218  6ED9               	movwf	fsr2l,c
 26676  01921A  50E2               	movf	fsr1h,w,c
 26677  01921C  6EDA               	movwf	fsr2h,c
 26678  01921E  0EFF               	movlw	255
 26679  019220  22DA               	addwfc	fsr2h,f,c
 26680  019222  0E00               	movlw	0
 26681  019224  14DE               	andwf	postinc2,w,c
 26682  019226  6E09               	movwf	(btemp+8)^0,c
 26683  019228  0E00               	movlw	0
 26684  01922A  14DE               	andwf	postinc2,w,c
 26685  01922C  6E0A               	movwf	(btemp+9)^0,c
 26686  01922E  0E80               	movlw	128
 26687  019230  14DE               	andwf	postinc2,w,c
 26688  019232  6E0B               	movwf	(btemp+10)^0,c
 26689  019234  0E7F               	movlw	127
 26690  019236  14DE               	andwf	postinc2,w,c
 26691  019238  6E0C               	movwf	(btemp+11)^0,c
 26692  01923A  5009               	movf	(btemp+8)^0,w,c
 26693  01923C  100A               	iorwf	(btemp+9)^0,w,c
 26694  01923E  100B               	iorwf	(btemp+10)^0,w,c
 26695  019240  100C               	iorwf	(btemp+11)^0,w,c
 26696  019242  A4D8               	btfss	status,2,c
 26697  019244  D008               	goto	l8794
 26698                           
 26699                           ;stkvar	_ff1 @ sp[(0)+-4]
 26700  019246  0EFC               	movlw	-4
 26701  019248  6AE3               	clrf	plusw1,c
 26702  01924A  0EFD               	movlw	-3
 26703  01924C  6AE3               	clrf	plusw1,c
 26704  01924E  0EFE               	movlw	-2
 26705  019250  6AE3               	clrf	plusw1,c
 26706  019252  0EFF               	movlw	-1
 26707  019254  6AE3               	clrf	plusw1,c
 26708  019256                     l8794:
 26709                           
 26710                           ;stkvar	_ff2 @ sp[(0)+-8]
 26711  019256  50E1               	movf	fsr1l,w,c
 26712  019258  0FF8               	addlw	-8
 26713  01925A  6ED9               	movwf	fsr2l,c
 26714  01925C  50E2               	movf	fsr1h,w,c
 26715  01925E  6EDA               	movwf	fsr2h,c
 26716  019260  0EFF               	movlw	255
 26717  019262  22DA               	addwfc	fsr2h,f,c
 26718  019264  0E00               	movlw	0
 26719  019266  14DE               	andwf	postinc2,w,c
 26720  019268  6E09               	movwf	(btemp+8)^0,c
 26721  01926A  0E00               	movlw	0
 26722  01926C  14DE               	andwf	postinc2,w,c
 26723  01926E  6E0A               	movwf	(btemp+9)^0,c
 26724  019270  0E80               	movlw	128
 26725  019272  14DE               	andwf	postinc2,w,c
 26726  019274  6E0B               	movwf	(btemp+10)^0,c
 26727  019276  0E7F               	movlw	127
 26728  019278  14DE               	andwf	postinc2,w,c
 26729  01927A  6E0C               	movwf	(btemp+11)^0,c
 26730  01927C  5009               	movf	(btemp+8)^0,w,c
 26731  01927E  100A               	iorwf	(btemp+9)^0,w,c
 26732  019280  100B               	iorwf	(btemp+10)^0,w,c
 26733  019282  100C               	iorwf	(btemp+11)^0,w,c
 26734  019284  A4D8               	btfss	status,2,c
 26735  019286  D008               	goto	l2744
 26736                           
 26737                           ;stkvar	_ff2 @ sp[(0)+-8]
 26738  019288  0EF8               	movlw	-8
 26739  01928A  6AE3               	clrf	plusw1,c
 26740  01928C  0EF9               	movlw	-7
 26741  01928E  6AE3               	clrf	plusw1,c
 26742  019290  0EFA               	movlw	-6
 26743  019292  6AE3               	clrf	plusw1,c
 26744  019294  0EFB               	movlw	-5
 26745  019296  6AE3               	clrf	plusw1,c
 26746  019298                     l2744:
 26747                           
 26748                           ;stkvar	_ff1 @ sp[(0)+-4]
 26749  019298  0EFF               	movlw	-1
 26750  01929A  AEE3               	btfss	plusw1,7,c
 26751  01929C  D024               	goto	l8800
 26752                           
 26753                           ;stkvar	_ff1 @ sp[(0)+-4]
 26754  01929E  0E00               	movlw	0
 26755  0192A0  6E09               	movwf	(btemp+8)^0,c
 26756  0192A2  0E00               	movlw	0
 26757  0192A4  6E0A               	movwf	(btemp+9)^0,c
 26758  0192A6  0E00               	movlw	0
 26759  0192A8  6E0B               	movwf	(btemp+10)^0,c
 26760  0192AA  0E80               	movlw	128
 26761  0192AC  6E0C               	movwf	(btemp+11)^0,c
 26762  0192AE  0EFC               	movlw	-4
 26763  0192B0  50E3               	movf	plusw1,w,c
 26764  0192B2  5E09               	subwf	(btemp+8)^0,f,c
 26765  0192B4  0EFD               	movlw	-3
 26766  0192B6  50E3               	movf	plusw1,w,c
 26767  0192B8  5A0A               	subwfb	(btemp+9)^0,f,c
 26768  0192BA  0EFE               	movlw	-2
 26769  0192BC  50E3               	movf	plusw1,w,c
 26770  0192BE  5A0B               	subwfb	(btemp+10)^0,f,c
 26771  0192C0  0EFF               	movlw	-1
 26772  0192C2  50E3               	movf	plusw1,w,c
 26773  0192C4  5A0C               	subwfb	(btemp+11)^0,f,c
 26774                           
 26775                           ;stkvar	_ff1 @ sp[(0)+-4]
 26776  0192C6  0EFC               	movlw	-4
 26777  0192C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 26778  0192CE  0EFD               	movlw	-3
 26779  0192D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26780  0192D6  0EFE               	movlw	-2
 26781  0192D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26782  0192DE  0EFF               	movlw	-1
 26783  0192E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26784  0192E6                     l8800:
 26785                           
 26786                           ;stkvar	_ff2 @ sp[(0)+-8]
 26787  0192E6  0EFB               	movlw	-5
 26788  0192E8  AEE3               	btfss	plusw1,7,c
 26789  0192EA  D024               	goto	l8804
 26790                           
 26791                           ;stkvar	_ff2 @ sp[(0)+-8]
 26792  0192EC  0E00               	movlw	0
 26793  0192EE  6E09               	movwf	(btemp+8)^0,c
 26794  0192F0  0E00               	movlw	0
 26795  0192F2  6E0A               	movwf	(btemp+9)^0,c
 26796  0192F4  0E00               	movlw	0
 26797  0192F6  6E0B               	movwf	(btemp+10)^0,c
 26798  0192F8  0E80               	movlw	128
 26799  0192FA  6E0C               	movwf	(btemp+11)^0,c
 26800  0192FC  0EF8               	movlw	-8
 26801  0192FE  50E3               	movf	plusw1,w,c
 26802  019300  5E09               	subwf	(btemp+8)^0,f,c
 26803  019302  0EF9               	movlw	-7
 26804  019304  50E3               	movf	plusw1,w,c
 26805  019306  5A0A               	subwfb	(btemp+9)^0,f,c
 26806  019308  0EFA               	movlw	-6
 26807  01930A  50E3               	movf	plusw1,w,c
 26808  01930C  5A0B               	subwfb	(btemp+10)^0,f,c
 26809  01930E  0EFB               	movlw	-5
 26810  019310  50E3               	movf	plusw1,w,c
 26811  019312  5A0C               	subwfb	(btemp+11)^0,f,c
 26812                           
 26813                           ;stkvar	_ff2 @ sp[(0)+-8]
 26814  019314  0EF8               	movlw	-8
 26815  019316  0060  F027  FFE3   	movff	btemp+8,plusw1
 26816  01931C  0EF9               	movlw	-7
 26817  01931E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26818  019324  0EFA               	movlw	-6
 26819  019326  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26820  01932C  0EFB               	movlw	-5
 26821  01932E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26822  019334                     l8804:
 26823                           
 26824                           ;stkvar	_ff1 @ sp[(0)+-4]
 26825  019334  0EFF               	movlw	-1
 26826  019336  7EE3               	btg	plusw1,7,c
 26827                           
 26828                           ;stkvar	_ff2 @ sp[(0)+-8]
 26829  019338  0EFB               	movlw	-5
 26830  01933A  7EE3               	btg	plusw1,7,c
 26831                           
 26832                           ;stkvar	_ff2 @ sp[(0)+-8]
 26833                           ;stkvar	_ff1 @ sp[(0)+-4]
 26834  01933C  50E1               	movf	fsr1l,w,c
 26835  01933E  0FFC               	addlw	-4
 26836  019340  6ED9               	movwf	fsr2l,c
 26837  019342  50E2               	movf	fsr1h,w,c
 26838  019344  6EDA               	movwf	fsr2h,c
 26839  019346  0EFF               	movlw	255
 26840  019348  22DA               	addwfc	fsr2h,f,c
 26841  01934A  0EF8               	movlw	-8
 26842  01934C  50E3               	movf	plusw1,w,c
 26843  01934E  5CDE               	subwf	postinc2,w,c
 26844  019350  0EF9               	movlw	-7
 26845  019352  50E3               	movf	plusw1,w,c
 26846  019354  58DE               	subwfb	postinc2,w,c
 26847  019356  0EFA               	movlw	-6
 26848  019358  50E3               	movf	plusw1,w,c
 26849  01935A  58DE               	subwfb	postinc2,w,c
 26850  01935C  0EFB               	movlw	-5
 26851  01935E  50E3               	movf	plusw1,w,c
 26852  019360  58DE               	subwfb	postinc2,w,c
 26853  019362  B0D8               	btfsc	status,0,c
 26854  019364  D002               	goto	l8812
 26855  019366  9001               	bcf	btemp& (0+255),0,c
 26856  019368  D001               	goto	l2751
 26857  01936A                     l8812:
 26858  01936A  8001               	bsf	btemp& (0+255),0,c
 26859  01936C                     l2751:
 26860                           
 26861                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26862  01936C  0EF8               	movlw	248
 26863  01936E  26E1               	addwf	fsr1l,f,c
 26864  019370  0EFF               	movlw	255
 26865  019372  22E2               	addwfc	fsr1h,f,c
 26866  019374  0012               	return		;funcret
 26867  019376                     __end_of___flge:
 26868                           	opt callstack 0
 26869                           
 26870 ;; *************** function _calc_model_data *****************
 26871 ;; Defined at:
 26872 ;;		line 67 in file "mbmc.c"
 26873 ;; Parameters:    Size  Location     Type
 26874 ;;		None
 26875 ;; Auto vars:     Size  Location     Type
 26876 ;;		None
 26877 ;; Return value:  Size  Location     Type
 26878 ;;                  1  [STACK] void 
 26879 ;; Registers used:
 26880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26881 ;; Tracked objects:
 26882 ;;		On entry : 0/1
 26883 ;;		On exit  : 3F/39
 26884 ;;		Unchanged: 0/0
 26885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26890 ;;Total ram usage:        0 bytes
 26891 ;; Hardware stack levels used:    1
 26892 ;; Hardware stack levels required when called:   18
 26893 ;; This function calls:
 26894 ;;		___fladd
 26895 ;;		___flmul
 26896 ;;		___flsub
 26897 ;;		_lp_filter
 26898 ;;		_start_bsoc
 26899 ;;		_stop_bsoc
 26900 ;; This function is called by:
 26901 ;;		_main
 26902 ;; This function uses a reentrant model
 26903 ;;
 26904                           
 26905                           	psect	text107
 26906  015CBE                     __ptext107:
 26907                           	opt callstack 0
 26908  015CBE                     _calc_model_data:
 26909                           	opt callstack 12
 26910                           
 26911                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26912                           
 26913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26914                           ;incstack = 0
 26915  015CBE  ECF2  F0E2         	call	_stop_bsoc	;wreg free
 26916                           
 26917                           ; BSR set to: 57
 26918                           ;mbmc.c: 72:  if (!V.calib) {
 26919  015CC2  0101               	movlb	1	; () banked
 26920  015CC4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26921  015CC6  A4D8               	btfss	status,2,c
 26922  015CC8  D219               	goto	l11278
 26923                           
 26924                           ; BSR set to: 1
 26925                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26926  015CCA  EE21  F2FF         	lfsr	2,_C
 26927  015CCE  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26928  015CD4  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26929  015CDA  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26930  015CE0  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26931                           
 26932                           ; BSR set to: 1
 26933                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26934  015CE6  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26935  015CEC  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26936  015CF2  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26937  015CF8  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26938  015CFE  EE21  F343         	lfsr	2,_C+68	;volatile
 26939  015D02  006F FF7B FFE6     	movff	postinc2,postinc1
 26940  015D08  006F FF7B FFE6     	movff	postinc2,postinc1
 26941  015D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26942  015D14  006F FF7B FFE6     	movff	postinc2,postinc1
 26943  015D1A  ECF0  F0DC         	call	___flsub	;wreg free
 26944  015D1E  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26945  015D24  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26946  015D2A  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26947  015D30  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26948                           
 26949                           ;mbmc.c: 75:   bcror = C.c_bat;
 26950  015D36  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26951  015D3A  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26952  015D3E  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26953  015D42  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26954                           
 26955                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26956  015D46  EE21  F303         	lfsr	2,_C+4	;volatile
 26957  015D4A  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26958  015D50  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26959  015D56  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26960  015D5C  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26961                           
 26962                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26963  015D62  EE21  F30F         	lfsr	2,_C+16	;volatile
 26964  015D66  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26965  015D6C  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26966  015D72  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26967  015D78  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26968                           
 26969                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26970  015D7E  EE21  F333         	lfsr	2,_C+52	;volatile
 26971  015D82  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26972  015D88  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26973  015D8E  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26974  015D94  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26975                           
 26976                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26977  015D9A  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26978  015DA0  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26979  015DA6  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26980  015DAC  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26981  015DB2  EE21  F353         	lfsr	2,_C+84	;volatile
 26982  015DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26983  015DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26984  015DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 26985  015DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 26986  015DCE  ECF0  F0DC         	call	___flsub	;wreg free
 26987  015DD2  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26988  015DD8  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26989  015DDE  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26990  015DE4  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26991                           
 26992                           ;mbmc.c: 80:   bvror = C.v_bat;
 26993  015DEA  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 26994  015DEE  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26995  015DF2  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26996  015DF6  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26997                           
 26998                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26999  015DFA  EE21  F313         	lfsr	2,_C+20	;volatile
 27000  015DFE  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27001  015E04  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27002  015E0A  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27003  015E10  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27004                           
 27005                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27006  015E16  EE21  F307         	lfsr	2,_C+8	;volatile
 27007  015E1A  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27008  015E20  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27009  015E26  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27010  015E2C  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27011                           
 27012                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27013  015E32  EE21  F32F         	lfsr	2,_C+48	;volatile
 27014  015E36  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27015  015E3C  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27016  015E42  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27017  015E48  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27018                           
 27019                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27020  015E4E  0E01               	movlw	1
 27021  015E50  6EE6               	movwf	postinc1,c
 27022  015E52  0E10               	movlw	16
 27023  015E54  6EE6               	movwf	postinc1,c
 27024  015E56  EE21  F2FF         	lfsr	2,_C
 27025  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 27026  015E60  006F FF7B FFE6     	movff	postinc2,postinc1
 27027  015E66  006F FF7B FFE6     	movff	postinc2,postinc1
 27028  015E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27029  015E72  EE21  F303         	lfsr	2,_C+4	;volatile
 27030  015E76  006F FF7B FFE6     	movff	postinc2,postinc1
 27031  015E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 27032  015E82  006F FF7B FFE6     	movff	postinc2,postinc1
 27033  015E88  006F FF7B FFE6     	movff	postinc2,postinc1
 27034  015E8E  ECF0  F0DC         	call	___flsub	;wreg free
 27035  015E92  0060  F007  FFE6   	movff	btemp,postinc1
 27036  015E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27037  015E9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27038  015EA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27039  015EAA  EC55  F0C4         	call	_lp_filter	;wreg free
 27040  015EAE  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27041  015EB4  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27042  015EBA  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27043  015EC0  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27044                           
 27045                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27046  015EC6  0E01               	movlw	1
 27047  015EC8  6EE6               	movwf	postinc1,c
 27048  015ECA  0E11               	movlw	17
 27049  015ECC  6EE6               	movwf	postinc1,c
 27050  015ECE  EE21  F353         	lfsr	2,_C+84	;volatile
 27051  015ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 27052  015ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 27053  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27054  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27055  015EEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27056  015EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27057  015EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27058  015EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27059  015F00  006F FF7B FFE6     	movff	postinc2,postinc1
 27060  015F06  ECE5  F09E         	call	___flmul	;wreg free
 27061  015F0A  0060  F007  FFE6   	movff	btemp,postinc1
 27062  015F10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27063  015F16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27064  015F1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27065  015F22  EC55  F0C4         	call	_lp_filter	;wreg free
 27066  015F26  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27067  015F2C  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27068  015F32  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27069  015F38  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27070                           
 27071                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27072  015F3E  0E01               	movlw	1
 27073  015F40  6EE6               	movwf	postinc1,c
 27074  015F42  0E12               	movlw	18
 27075  015F44  6EE6               	movwf	postinc1,c
 27076  015F46  EE21  F34F         	lfsr	2,_C+80	;volatile
 27077  015F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27078  015F50  006F FF7B FFE6     	movff	postinc2,postinc1
 27079  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 27080  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 27081  015F62  EE21  F347         	lfsr	2,_C+72	;volatile
 27082  015F66  006F FF7B FFE6     	movff	postinc2,postinc1
 27083  015F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27084  015F72  006F FF7B FFE6     	movff	postinc2,postinc1
 27085  015F78  006F FF7B FFE6     	movff	postinc2,postinc1
 27086  015F7E  ECE5  F09E         	call	___flmul	;wreg free
 27087  015F82  0060  F007  FFE6   	movff	btemp,postinc1
 27088  015F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27089  015F8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27090  015F94  0060  F013  FFE6   	movff	btemp+3,postinc1
 27091  015F9A  EC55  F0C4         	call	_lp_filter	;wreg free
 27092  015F9E  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27093  015FA4  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27094  015FAA  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27095  015FB0  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27096                           
 27097                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27098  015FB6  0E01               	movlw	1
 27099  015FB8  6EE6               	movwf	postinc1,c
 27100  015FBA  0E13               	movlw	19
 27101  015FBC  6EE6               	movwf	postinc1,c
 27102  015FBE  0E00               	movlw	0
 27103  015FC0  6EE6               	movwf	postinc1,c
 27104  015FC2  0E00               	movlw	0
 27105  015FC4  6EE6               	movwf	postinc1,c
 27106  015FC6  0E60               	movlw	96
 27107  015FC8  6EE6               	movwf	postinc1,c
 27108  015FCA  0EC1               	movlw	193
 27109  015FCC  6EE6               	movwf	postinc1,c
 27110  015FCE  EE21  F363         	lfsr	2,_C+100	;volatile
 27111  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 27112  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 27113  015FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27114  015FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27115  015FEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27116  015FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27117  015FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27118  015FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27119  016000  006F FF7B FFE6     	movff	postinc2,postinc1
 27120  016006  ECE5  F09E         	call	___flmul	;wreg free
 27121  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 27122  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27123  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27124  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27125  016022  ECFA  F0A2         	call	___fladd	;wreg free
 27126  016026  0060  F007  FFE6   	movff	btemp,postinc1
 27127  01602C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27128  016032  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27129  016038  0060  F013  FFE6   	movff	btemp+3,postinc1
 27130  01603E  EC55  F0C4         	call	_lp_filter	;wreg free
 27131  016042  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27132  016048  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27133  01604E  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27134  016054  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27135                           
 27136                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27137  01605A  0E01               	movlw	1
 27138  01605C  6EE6               	movwf	postinc1,c
 27139  01605E  0E14               	movlw	20
 27140  016060  6EE6               	movwf	postinc1,c
 27141  016062  EE21  F353         	lfsr	2,_C+84	;volatile
 27142  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 27143  01606C  006F FF7B FFE6     	movff	postinc2,postinc1
 27144  016072  006F FF7B FFE6     	movff	postinc2,postinc1
 27145  016078  006F FF7B FFE6     	movff	postinc2,postinc1
 27146  01607E  EE21  F343         	lfsr	2,_C+68	;volatile
 27147  016082  006F FF7B FFE6     	movff	postinc2,postinc1
 27148  016088  006F FF7B FFE6     	movff	postinc2,postinc1
 27149  01608E  006F FF7B FFE6     	movff	postinc2,postinc1
 27150  016094  006F FF7B FFE6     	movff	postinc2,postinc1
 27151  01609A  ECE5  F09E         	call	___flmul	;wreg free
 27152  01609E  0060  F007  FFE6   	movff	btemp,postinc1
 27153  0160A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27154  0160AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27155  0160B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27156  0160B6  EC55  F0C4         	call	_lp_filter	;wreg free
 27157  0160BA  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27158  0160C0  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27159  0160C6  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27160  0160CC  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27161                           
 27162                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27163  0160D2  EE21  F377         	lfsr	2,_C+120	;volatile
 27164  0160D6  0E03               	movlw	3
 27165  0160D8  AEDB               	btfss	plusw2,7,c
 27166  0160DA  D010               	goto	l11278
 27167                           
 27168                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27169  0160DC  0E17               	movlw	23
 27170  0160DE  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27171  0160E4  0EB7               	movlw	183
 27172  0160E6  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27173  0160EC  0ED1               	movlw	209
 27174  0160EE  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27175  0160F4  0E38               	movlw	56
 27176  0160F6  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27177  0160FC                     l11278:
 27178                           
 27179                           ;mbmc.c: 95:  start_bsoc();
 27180  0160FC  EC81  F0E1         	call	_start_bsoc	;wreg free
 27181                           
 27182                           ; BSR set to: 57
 27183                           ;mbmc.c: 96:  C.update = 1;
 27184  016100  0E01               	movlw	1
 27185  016102  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27186                           
 27187                           ; BSR set to: 57
 27188                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27189  016108  0012               	return		;funcret
 27190  01610A                     __end_of_calc_model_data:
 27191                           	opt callstack 0
 27192                           
 27193 ;; *************** function _stop_bsoc *****************
 27194 ;; Defined at:
 27195 ;;		line 129 in file "bsoc.c"
 27196 ;; Parameters:    Size  Location     Type
 27197 ;;		None
 27198 ;; Auto vars:     Size  Location     Type
 27199 ;;		None
 27200 ;; Return value:  Size  Location     Type
 27201 ;;                  1  [STACK] void 
 27202 ;; Registers used:
 27203 ;;		None
 27204 ;; Tracked objects:
 27205 ;;		On entry : 0/1
 27206 ;;		On exit  : 3F/39
 27207 ;;		Unchanged: 0/0
 27208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27213 ;;Total ram usage:        0 bytes
 27214 ;; Hardware stack levels used:    1
 27215 ;; Hardware stack levels required when called:   15
 27216 ;; This function calls:
 27217 ;;		Nothing
 27218 ;; This function is called by:
 27219 ;;		_calc_model_data
 27220 ;; This function uses a reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text108
 27224  01C5E4                     __ptext108:
 27225                           	opt callstack 0
 27226  01C5E4                     _stop_bsoc:
 27227                           	opt callstack 14
 27228                           
 27229                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 27230                           
 27231                           ; BSR set to: 57
 27232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27233                           ;incstack = 0
 27234  01C5E4  0139               	movlb	57	; () banked
 27235  01C5E6  9D96               	bcf	150,6,b	;volatile
 27236                           
 27237                           ; BSR set to: 57
 27238                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27239  01C5E8  0012               	return		;funcret
 27240  01C5EA                     __end_of_stop_bsoc:
 27241                           	opt callstack 0
 27242                           
 27243 ;; *************** function _start_bsoc *****************
 27244 ;; Defined at:
 27245 ;;		line 120 in file "bsoc.c"
 27246 ;; Parameters:    Size  Location     Type
 27247 ;;		None
 27248 ;; Auto vars:     Size  Location     Type
 27249 ;;		None
 27250 ;; Return value:  Size  Location     Type
 27251 ;;                  1  [STACK] void 
 27252 ;; Registers used:
 27253 ;;		wreg, status,2, status,0, btemp+11
 27254 ;; Tracked objects:
 27255 ;;		On entry : 0/1
 27256 ;;		On exit  : 3F/39
 27257 ;;		Unchanged: 0/0
 27258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27263 ;;Total ram usage:        0 bytes
 27264 ;; Hardware stack levels used:    1
 27265 ;; Hardware stack levels required when called:   15
 27266 ;; This function calls:
 27267 ;;		Nothing
 27268 ;; This function is called by:
 27269 ;;		_calc_model_data
 27270 ;; This function uses a reentrant model
 27271 ;;
 27272                           
 27273                           	psect	text109
 27274  01C302                     __ptext109:
 27275                           	opt callstack 0
 27276  01C302                     _start_bsoc:
 27277                           	opt callstack 14
 27278                           
 27279                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 27280                           
 27281                           ; BSR set to: 57
 27282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27283                           ;incstack = 0
 27284  01C302  0139               	movlb	57	; () banked
 27285  01C304  8D96               	bsf	150,6,b	;volatile
 27286                           
 27287                           ; BSR set to: 57
 27288  01C306  A4BE               	btfss	190,2,c	;volatile
 27289  01C308  D002               	goto	u9760
 27290  01C30A  0E01               	movlw	1
 27291  01C30C  D001               	goto	u9766
 27292  01C30E                     u9760:
 27293  01C30E  0E00               	movlw	0
 27294  01C310                     u9766:
 27295  01C310  0AFF               	xorlw	255
 27296  01C312  6E0C               	movwf	(btemp+11)^0,c
 27297  01C314  460C               	rlncf	(btemp+11)^0,f,c
 27298  01C316  460C               	rlncf	(btemp+11)^0,f,c
 27299  01C318  50BE               	movf	190,w,c	;volatile
 27300  01C31A  180C               	xorwf	(btemp+11)^0,w,c
 27301  01C31C  0BFB               	andlw	-5
 27302  01C31E  180C               	xorwf	(btemp+11)^0,w,c
 27303  01C320  6EBE               	movwf	190,c	;volatile
 27304                           
 27305                           ; BSR set to: 57
 27306                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27307  01C322  0012               	return		;funcret
 27308  01C324                     __end_of_start_bsoc:
 27309                           	opt callstack 0
 27310                           
 27311 ;; *************** function _lp_filter *****************
 27312 ;; Defined at:
 27313 ;;		line 29 in file "mbmc.c"
 27314 ;; Parameters:    Size  Location     Type
 27315 ;;  new             4  [STACK] const float 
 27316 ;;  bn              1  [STACK] const unsigned char 
 27317 ;;  slow            1  [STACK] const char 
 27318 ;; Auto vars:     Size  Location     Type
 27319 ;;  lp_speed        4  [STACK] float 
 27320 ;; Return value:  Size  Location     Type
 27321 ;;                  4  [STACK] float 
 27322 ;; Registers used:
 27323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27324 ;; Tracked objects:
 27325 ;;		On entry : 0/1
 27326 ;;		On exit  : 0/0
 27327 ;;		Unchanged: 0/0
 27328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27333 ;;Total ram usage:        0 bytes
 27334 ;; Hardware stack levels used:    1
 27335 ;; Hardware stack levels required when called:   17
 27336 ;; This function calls:
 27337 ;;		___fladd
 27338 ;;		___flmul
 27339 ;;		___flsub
 27340 ;; This function is called by:
 27341 ;;		_main
 27342 ;;		_convert_adc_data
 27343 ;;		_calc_model_data
 27344 ;; This function uses a reentrant model
 27345 ;;
 27346                           
 27347                           	psect	text110
 27348  0188AA                     __ptext110:
 27349                           	opt callstack 0
 27350  0188AA                     _lp_filter:
 27351                           	opt callstack 0
 27352                           
 27353                           ; BSR set to: 57
 27354                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27355  0188AA  52E6               	movf	postinc1,f,c
 27356  0188AC  52E6               	movf	postinc1,f,c
 27357  0188AE  52E6               	movf	postinc1,f,c
 27358  0188B0  52E6               	movf	postinc1,f,c
 27359                           
 27360                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27361                           ;stkvar	_bn @ sp[(-4)+-5]
 27362                           
 27363                           ;incstack = 0
 27364  0188B2  0EF7               	movlw	-9
 27365  0188B4  006F FF8C  F001    	movff	plusw1,btemp
 27366  0188BA  0E14               	movlw	20
 27367  0188BC  6401               	cpfsgt	btemp^0,c
 27368  0188BE  D011               	goto	l10596
 27369  0188C0                     u9620:
 27370                           
 27371                           ;mbmc.c: 35:   return new;
 27372                           ;stkvar	_new @ sp[(-4)+-4]
 27373  0188C0  0EF8               	movlw	-8
 27374  0188C2  006F FF8C  F001    	movff	plusw1,btemp
 27375  0188C8  0EF9               	movlw	-7
 27376  0188CA  006F FF8C  F002    	movff	plusw1,btemp+1
 27377  0188D0  0EFA               	movlw	-6
 27378  0188D2  006F FF8C  F003    	movff	plusw1,btemp+2
 27379  0188D8  0EFB               	movlw	-5
 27380  0188DA  006F FF8C  F004    	movff	plusw1,btemp+3
 27381  0188E0  D0BD               	goto	l1918
 27382  0188E2                     l10596:
 27383                           
 27384                           ;mbmc.c: 37:  if (slow == (-1)) {
 27385                           ;stkvar	_slow @ sp[(-4)+-6]
 27386  0188E2  0EF6               	movlw	-10
 27387  0188E4  28E3               	incf	plusw1,w,c
 27388  0188E6  A4D8               	btfss	status,2,c
 27389  0188E8  D012               	goto	l10604
 27390                           
 27391                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27392                           ;stkvar	_bn @ sp[(-4)+-5]
 27393  0188EA  0EF7               	movlw	-9
 27394  0188EC  50E3               	movf	plusw1,w,c
 27395  0188EE  0D04               	mullw	4
 27396  0188F0  0E00               	movlw	low lp_filter@smooth
 27397  0188F2  24F3               	addwf	243,w,c
 27398  0188F4  6ED9               	movwf	fsr2l,c
 27399  0188F6  0E02               	movlw	high lp_filter@smooth
 27400  0188F8  20F4               	addwfc	prodh,w,c
 27401  0188FA  6EDA               	movwf	fsr2h,c
 27402  0188FC  0E00               	movlw	0
 27403  0188FE  6EDE               	movwf	postinc2,c
 27404  018900  0E00               	movlw	0
 27405  018902  6EDE               	movwf	postinc2,c
 27406  018904  0E00               	movlw	0
 27407  018906  6EDE               	movwf	postinc2,c
 27408  018908  0E00               	movlw	0
 27409  01890A  6EDD               	movwf	postdec2,c
 27410  01890C  D7D9               	goto	u9620
 27411  01890E                     l10604:
 27412                           
 27413                           ;mbmc.c: 42:  if (slow) {
 27414                           ;stkvar	_slow @ sp[(-4)+-6]
 27415  01890E  0EF6               	movlw	-10
 27416  018910  50E3               	movf	plusw1,w,c
 27417  018912  B4D8               	btfsc	status,2,c
 27418  018914  D006               	goto	l10608
 27419                           
 27420                           ;mbmc.c: 43:   lp_speed = 0.033;
 27421  018916  0E02               	movlw	2
 27422  018918  6E09               	movwf	(btemp+8)^0,c
 27423  01891A  0E2B               	movlw	43
 27424  01891C  6E0A               	movwf	(btemp+9)^0,c
 27425  01891E  0E07               	movlw	7
 27426  018920  D005               	goto	L32
 27427  018922                     l10608:
 27428                           
 27429                           ;mbmc.c: 45:   lp_speed = 0.066;
 27430  018922  0E02               	movlw	2
 27431  018924  6E09               	movwf	(btemp+8)^0,c
 27432  018926  0E2B               	movlw	43
 27433  018928  6E0A               	movwf	(btemp+9)^0,c
 27434  01892A  0E87               	movlw	135
 27435  01892C                     L32:
 27436  01892C  6E0B               	movwf	(btemp+10)^0,c
 27437  01892E  0E3D               	movlw	61
 27438  018930  6E0C               	movwf	(btemp+11)^0,c
 27439                           
 27440                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27441  018932  0EFC               	movlw	-4
 27442  018934  0060  F027  FFE3   	movff	btemp+8,plusw1
 27443  01893A  0EFD               	movlw	-3
 27444  01893C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27445  018942  0EFE               	movlw	-2
 27446  018944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27447  01894A  0EFF               	movlw	-1
 27448  01894C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27449                           
 27450                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27451                           ;stkvar	_bn @ sp[(-4)+-5]
 27452  018952  0EF7               	movlw	-9
 27453  018954  50E3               	movf	plusw1,w,c
 27454  018956  0D04               	mullw	4
 27455  018958  0E00               	movlw	low lp_filter@smooth
 27456  01895A  24F3               	addwf	243,w,c
 27457  01895C  6ED9               	movwf	fsr2l,c
 27458  01895E  0E02               	movlw	high lp_filter@smooth
 27459  018960  20F4               	addwfc	prodh,w,c
 27460  018962  6EDA               	movwf	fsr2h,c
 27461  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 27462  01896A  006F FF7B FFE6     	movff	postinc2,postinc1
 27463  018970  006F FF7B FFE6     	movff	postinc2,postinc1
 27464  018976  006F FF7B FFE6     	movff	postinc2,postinc1
 27465                           
 27466                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27467  01897C  0EF8               	movlw	-8
 27468  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
 27469  018984  006F FF8F FFE6     	movff	plusw1,postinc1
 27470  01898A  006F FF8F FFE6     	movff	plusw1,postinc1
 27471  018990  006F FF8F FFE6     	movff	plusw1,postinc1
 27472                           
 27473                           ;stkvar	_bn @ sp[(-12)+-5]
 27474  018996  0EEF               	movlw	-17
 27475  018998  50E3               	movf	plusw1,w,c
 27476  01899A  0D04               	mullw	4
 27477  01899C  0E00               	movlw	low lp_filter@smooth
 27478  01899E  24F3               	addwf	243,w,c
 27479  0189A0  6ED9               	movwf	fsr2l,c
 27480  0189A2  0E02               	movlw	high lp_filter@smooth
 27481  0189A4  20F4               	addwfc	prodh,w,c
 27482  0189A6  6EDA               	movwf	fsr2h,c
 27483  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27484  0189AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27485  0189B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27486  0189BA  006F FF7B FFE6     	movff	postinc2,postinc1
 27487                           
 27488                           ;stkvar	_new @ sp[(-16)+-4]
 27489  0189C0  0EEC               	movlw	-20
 27490  0189C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27491  0189C8  006F FF8F FFE6     	movff	plusw1,postinc1
 27492  0189CE  006F FF8F FFE6     	movff	plusw1,postinc1
 27493  0189D4  006F FF8F FFE6     	movff	plusw1,postinc1
 27494  0189DA  ECF0  F0DC         	call	___flsub	;wreg free
 27495  0189DE  0060  F007  FFE6   	movff	btemp,postinc1
 27496  0189E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27497  0189EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27498  0189F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27499  0189F6  ECE5  F09E         	call	___flmul	;wreg free
 27500  0189FA  0060  F007  FFE6   	movff	btemp,postinc1
 27501  018A00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27502  018A06  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27503  018A0C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27504  018A12  ECFA  F0A2         	call	___fladd	;wreg free
 27505                           
 27506                           ;stkvar	_bn @ sp[(-4)+-5]
 27507  018A16  0EF7               	movlw	-9
 27508  018A18  50E3               	movf	plusw1,w,c
 27509  018A1A  0D04               	mullw	4
 27510  018A1C  0E00               	movlw	low lp_filter@smooth
 27511  018A1E  24F3               	addwf	243,w,c
 27512  018A20  6ED9               	movwf	fsr2l,c
 27513  018A22  0E02               	movlw	high lp_filter@smooth
 27514  018A24  20F4               	addwfc	prodh,w,c
 27515  018A26  6EDA               	movwf	fsr2h,c
 27516  018A28  0060  F007  FFDE   	movff	btemp,postinc2
 27517  018A2E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27518  018A34  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27519  018A3A  0060  F013  FFDD   	movff	btemp+3,postdec2
 27520  018A40  52DD               	movf	postdec2,f,c
 27521  018A42  52DD               	movf	postdec2,f,c
 27522  018A44  006F FF78  F001    	movff	postinc2,btemp
 27523  018A4A  006F FF78  F002    	movff	postinc2,btemp+1
 27524  018A50  006F FF78  F003    	movff	postinc2,btemp+2
 27525  018A56  006F FF78  F004    	movff	postinc2,btemp+3
 27526  018A5C                     l1918:
 27527                           
 27528                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27529  018A5C  0EF6               	movlw	246
 27530  018A5E  26E1               	addwf	fsr1l,f,c
 27531  018A60  0EFF               	movlw	255
 27532  018A62  22E2               	addwfc	fsr1h,f,c
 27533  018A64  0012               	return		;funcret
 27534  018A66                     __end_of_lp_filter:
 27535                           	opt callstack 0
 27536                           
 27537 ;; *************** function ___flsub *****************
 27538 ;; Defined at:
 27539 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27540 ;; Parameters:    Size  Location     Type
 27541 ;;  b               4  [STACK] float 
 27542 ;;  a               4  [STACK] float 
 27543 ;; Auto vars:     Size  Location     Type
 27544 ;;		None
 27545 ;; Return value:  Size  Location     Type
 27546 ;;                  4  [STACK] float 
 27547 ;; Registers used:
 27548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27549 ;; Tracked objects:
 27550 ;;		On entry : 0/0
 27551 ;;		On exit  : 0/0
 27552 ;;		Unchanged: 0/0
 27553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27558 ;;Total ram usage:        0 bytes
 27559 ;; Hardware stack levels used:    1
 27560 ;; Hardware stack levels required when called:   16
 27561 ;; This function calls:
 27562 ;;		___fladd
 27563 ;; This function is called by:
 27564 ;;		_conv_raw_result
 27565 ;;		_lp_filter
 27566 ;;		_calc_model_data
 27567 ;;		_calc_ror_data
 27568 ;;		_esr_check
 27569 ;;		_efgtoa
 27570 ;; This function uses a reentrant model
 27571 ;;
 27572                           
 27573                           	psect	text111
 27574  01B9E0                     __ptext111:
 27575                           	opt callstack 0
 27576  01B9E0                     ___flsub:
 27577                           	opt callstack 0
 27578                           
 27579                           ;stkvar	_a @ sp[(0)+-8]
 27580                           
 27581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27582                           ;incstack = 0
 27583 ;; hardware stack exceeded
 27584  01B9E0  0EFB               	movlw	-5
 27585  01B9E2  7EE3               	btg	plusw1,7,c
 27586                           
 27587                           ;stkvar	_a @ sp[(0)+-8]
 27588  01B9E4  0EF8               	movlw	-8
 27589  01B9E6  006F FF8F FFE6     	movff	plusw1,postinc1
 27590  01B9EC  006F FF8F FFE6     	movff	plusw1,postinc1
 27591  01B9F2  006F FF8F FFE6     	movff	plusw1,postinc1
 27592  01B9F8  006F FF8F FFE6     	movff	plusw1,postinc1
 27593                           
 27594                           ;stkvar	_b @ sp[(-4)+-4]
 27595  01B9FE  0EF8               	movlw	-8
 27596  01BA00  006F FF8F FFE6     	movff	plusw1,postinc1
 27597  01BA06  006F FF8F FFE6     	movff	plusw1,postinc1
 27598  01BA0C  006F FF8F FFE6     	movff	plusw1,postinc1
 27599  01BA12  006F FF8F FFE6     	movff	plusw1,postinc1
 27600  01BA18  ECFA  F0A2         	call	___fladd	;wreg free
 27601                           
 27602                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27603  01BA1C  0EF8               	movlw	248
 27604  01BA1E  26E1               	addwf	fsr1l,f,c
 27605  01BA20  0EFF               	movlw	255
 27606  01BA22  22E2               	addwfc	fsr1h,f,c
 27607  01BA24  0012               	return		;funcret
 27608  01BA26                     __end_of___flsub:
 27609                           	opt callstack 0
 27610                           
 27611 ;; *************** function ___fladd *****************
 27612 ;; Defined at:
 27613 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27614 ;; Parameters:    Size  Location     Type
 27615 ;;  b               4  [STACK] float 
 27616 ;;  a               4  [STACK] float 
 27617 ;; Auto vars:     Size  Location     Type
 27618 ;;  grs             1  [STACK] unsigned char 
 27619 ;;  bexp            1  [STACK] unsigned char 
 27620 ;;  aexp            1  [STACK] unsigned char 
 27621 ;;  signs           1  [STACK] unsigned char 
 27622 ;; Return value:  Size  Location     Type
 27623 ;;                  4  [STACK] unsigned char 
 27624 ;; Registers used:
 27625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27626 ;; Tracked objects:
 27627 ;;		On entry : 0/0
 27628 ;;		On exit  : 0/0
 27629 ;;		Unchanged: 0/0
 27630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27635 ;;Total ram usage:        0 bytes
 27636 ;; Hardware stack levels used:    1
 27637 ;; Hardware stack levels required when called:   15
 27638 ;; This function calls:
 27639 ;;		Nothing
 27640 ;; This function is called by:
 27641 ;;		_main
 27642 ;;		_conv_raw_result
 27643 ;;		_lp_filter
 27644 ;;		_calc_model_data
 27645 ;;		_efgtoa
 27646 ;;		___asfladd
 27647 ;;		___flsub
 27648 ;; This function uses a reentrant model
 27649 ;;
 27650                           
 27651                           	psect	text112
 27652  0145F4                     __ptext112:
 27653                           	opt callstack 0
 27654  0145F4                     ___fladd:
 27655                           	opt callstack 0
 27656                           
 27657                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27658  0145F4  52E6               	movf	postinc1,f,c
 27659  0145F6  52E6               	movf	postinc1,f,c
 27660  0145F8  52E6               	movf	postinc1,f,c
 27661  0145FA  52E6               	movf	postinc1,f,c
 27662                           
 27663                           ;stkvar	_b @ sp[(-4)+-4]
 27664                           
 27665                           ;incstack = 0
 27666 ;; hardware stack exceeded
 27667  0145FC  0EFB               	movlw	251
 27668  0145FE  24E1               	addwf	fsr1l,w,c
 27669  014600  6ED9               	movwf	fsr2l,c
 27670  014602  0EFF               	movlw	255
 27671  014604  20E2               	addwfc	fsr1h,w,c
 27672  014606  6EDA               	movwf	fsr2h,c
 27673  014608  50DF               	movf	indf2,w,c
 27674  01460A  6E0C               	movwf	(btemp+11)^0,c
 27675  01460C  0E80               	movlw	128
 27676  01460E  160C               	andwf	(btemp+11)^0,f,c
 27677                           
 27678                           ;stkvar	_signs @ sp[(-4)+3]
 27679  014610  0EFF               	movlw	-1
 27680  014612  0060  F033  FFE3   	movff	btemp+11,plusw1
 27681                           
 27682                           ;stkvar	_b @ sp[(-4)+-4]
 27683  014618  0EFB               	movlw	251
 27684  01461A  24E1               	addwf	fsr1l,w,c
 27685  01461C  6ED9               	movwf	fsr2l,c
 27686  01461E  0EFF               	movlw	255
 27687  014620  20E2               	addwfc	fsr1h,w,c
 27688  014622  6EDA               	movwf	fsr2h,c
 27689  014624  50DF               	movf	indf2,w,c
 27690  014626  6E0C               	movwf	(btemp+11)^0,c
 27691  014628  90D8               	bcf	status,0,c
 27692  01462A  340C               	rlcf	(btemp+11)^0,w,c
 27693  01462C  6E0B               	movwf	(btemp+10)^0,c
 27694                           
 27695                           ;stkvar	_bexp @ sp[(-4)+1]
 27696  01462E  0EFD               	movlw	-3
 27697  014630  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27698                           
 27699                           ;stkvar	_b @ sp[(-4)+-4]
 27700  014636  0EFA               	movlw	250
 27701  014638  24E1               	addwf	fsr1l,w,c
 27702  01463A  6ED9               	movwf	fsr2l,c
 27703  01463C  0EFF               	movlw	255
 27704  01463E  20E2               	addwfc	fsr1h,w,c
 27705  014640  6EDA               	movwf	fsr2h,c
 27706  014642  AEDF               	btfss	indf2,7,c
 27707  014644  D002               	goto	l7902
 27708                           
 27709                           ;stkvar	_bexp @ sp[(-4)+1]
 27710  014646  0EFD               	movlw	-3
 27711  014648  80E3               	bsf	plusw1,0,c
 27712  01464A                     l7902:
 27713                           
 27714                           ;stkvar	_bexp @ sp[(-4)+1]
 27715  01464A  0EFD               	movlw	-3
 27716  01464C  50E3               	movf	plusw1,w,c
 27717  01464E  B4D8               	btfsc	status,2,c
 27718  014650  D027               	goto	l7912
 27719                           
 27720                           ;stkvar	_bexp @ sp[(-4)+1]
 27721  014652  0EFD               	movlw	-3
 27722  014654  28E3               	incf	plusw1,w,c
 27723  014656  A4D8               	btfss	status,2,c
 27724  014658  D018               	goto	l7908
 27725  01465A  0E00               	movlw	0
 27726  01465C  6E09               	movwf	(btemp+8)^0,c
 27727  01465E  0E00               	movlw	0
 27728  014660  6E0A               	movwf	(btemp+9)^0,c
 27729  014662  0E00               	movlw	0
 27730  014664  6E0B               	movwf	(btemp+10)^0,c
 27731  014666  0E00               	movlw	0
 27732  014668  6E0C               	movwf	(btemp+11)^0,c
 27733                           
 27734                           ;stkvar	_b @ sp[(-4)+-4]
 27735  01466A  0EF8               	movlw	-8
 27736  01466C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27737  014672  0EF9               	movlw	-7
 27738  014674  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27739  01467A  0EFA               	movlw	-6
 27740  01467C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27741  014682  0EFB               	movlw	-5
 27742  014684  0060  F033  FFE3   	movff	btemp+11,plusw1
 27743  01468A                     l7908:
 27744                           
 27745                           ;stkvar	_b @ sp[(-4)+-4]
 27746  01468A  0EFA               	movlw	-6
 27747  01468C  8EE3               	bsf	plusw1,7,c
 27748                           
 27749                           ;stkvar	_b @ sp[(-4)+-4]
 27750  01468E  0EFB               	movlw	251
 27751  014690  24E1               	addwf	fsr1l,w,c
 27752  014692  6ED9               	movwf	fsr2l,c
 27753  014694  0EFF               	movlw	255
 27754  014696  20E2               	addwfc	fsr1h,w,c
 27755  014698  6EDA               	movwf	fsr2h,c
 27756  01469A  0E00               	movlw	0
 27757  01469C  6EDF               	movwf	indf2,c
 27758  01469E  D018               	goto	l7914
 27759  0146A0                     l7912:
 27760  0146A0  0E00               	movlw	0
 27761  0146A2  6E09               	movwf	(btemp+8)^0,c
 27762  0146A4  0E00               	movlw	0
 27763  0146A6  6E0A               	movwf	(btemp+9)^0,c
 27764  0146A8  0E00               	movlw	0
 27765  0146AA  6E0B               	movwf	(btemp+10)^0,c
 27766  0146AC  0E00               	movlw	0
 27767  0146AE  6E0C               	movwf	(btemp+11)^0,c
 27768                           
 27769                           ;stkvar	_b @ sp[(-4)+-4]
 27770  0146B0  0EF8               	movlw	-8
 27771  0146B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27772  0146B8  0EF9               	movlw	-7
 27773  0146BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27774  0146C0  0EFA               	movlw	-6
 27775  0146C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27776  0146C8  0EFB               	movlw	-5
 27777  0146CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27778  0146D0                     l7914:
 27779                           
 27780                           ;stkvar	_a @ sp[(-4)+-8]
 27781  0146D0  0EF7               	movlw	247
 27782  0146D2  24E1               	addwf	fsr1l,w,c
 27783  0146D4  6ED9               	movwf	fsr2l,c
 27784  0146D6  0EFF               	movlw	255
 27785  0146D8  20E2               	addwfc	fsr1h,w,c
 27786  0146DA  6EDA               	movwf	fsr2h,c
 27787  0146DC  50DF               	movf	indf2,w,c
 27788  0146DE  6E0C               	movwf	(btemp+11)^0,c
 27789  0146E0  0E80               	movlw	128
 27790  0146E2  160C               	andwf	(btemp+11)^0,f,c
 27791                           
 27792                           ;stkvar	_aexp @ sp[(-4)+2]
 27793  0146E4  0EFE               	movlw	-2
 27794  0146E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27795                           
 27796                           ;stkvar	_signs @ sp[(-4)+3]
 27797                           ;stkvar	_aexp @ sp[(-4)+2]
 27798  0146EC  50E1               	movf	fsr1l,w,c
 27799  0146EE  0FFE               	addlw	-2
 27800  0146F0  6ED9               	movwf	fsr2l,c
 27801  0146F2  50E2               	movf	fsr1h,w,c
 27802  0146F4  6EDA               	movwf	fsr2h,c
 27803  0146F6  0EFF               	movlw	255
 27804  0146F8  22DA               	addwfc	fsr2h,f,c
 27805  0146FA  0EFF               	movlw	-1
 27806  0146FC  50E3               	movf	plusw1,w,c
 27807  0146FE  18DE               	xorwf	postinc2,w,c
 27808  014700  B4D8               	btfsc	status,2,c
 27809  014702  D002               	goto	l7920
 27810                           
 27811                           ;stkvar	_signs @ sp[(-4)+3]
 27812  014704  0EFF               	movlw	-1
 27813  014706  8CE3               	bsf	plusw1,6,c
 27814  014708                     l7920:
 27815                           
 27816                           ;stkvar	_a @ sp[(-4)+-8]
 27817  014708  0EF7               	movlw	247
 27818  01470A  24E1               	addwf	fsr1l,w,c
 27819  01470C  6ED9               	movwf	fsr2l,c
 27820  01470E  0EFF               	movlw	255
 27821  014710  20E2               	addwfc	fsr1h,w,c
 27822  014712  6EDA               	movwf	fsr2h,c
 27823  014714  50DF               	movf	indf2,w,c
 27824  014716  6E0C               	movwf	(btemp+11)^0,c
 27825  014718  90D8               	bcf	status,0,c
 27826  01471A  340C               	rlcf	(btemp+11)^0,w,c
 27827  01471C  6E0B               	movwf	(btemp+10)^0,c
 27828                           
 27829                           ;stkvar	_aexp @ sp[(-4)+2]
 27830  01471E  0EFE               	movlw	-2
 27831  014720  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27832                           
 27833                           ;stkvar	_a @ sp[(-4)+-8]
 27834  014726  0EF6               	movlw	246
 27835  014728  24E1               	addwf	fsr1l,w,c
 27836  01472A  6ED9               	movwf	fsr2l,c
 27837  01472C  0EFF               	movlw	255
 27838  01472E  20E2               	addwfc	fsr1h,w,c
 27839  014730  6EDA               	movwf	fsr2h,c
 27840  014732  AEDF               	btfss	indf2,7,c
 27841  014734  D002               	goto	l7926
 27842                           
 27843                           ;stkvar	_aexp @ sp[(-4)+2]
 27844  014736  0EFE               	movlw	-2
 27845  014738  80E3               	bsf	plusw1,0,c
 27846  01473A                     l7926:
 27847                           
 27848                           ;stkvar	_aexp @ sp[(-4)+2]
 27849  01473A  0EFE               	movlw	-2
 27850  01473C  50E3               	movf	plusw1,w,c
 27851  01473E  B4D8               	btfsc	status,2,c
 27852  014740  D027               	goto	l7936
 27853                           
 27854                           ;stkvar	_aexp @ sp[(-4)+2]
 27855  014742  0EFE               	movlw	-2
 27856  014744  28E3               	incf	plusw1,w,c
 27857  014746  A4D8               	btfss	status,2,c
 27858  014748  D018               	goto	l7932
 27859  01474A  0E00               	movlw	0
 27860  01474C  6E09               	movwf	(btemp+8)^0,c
 27861  01474E  0E00               	movlw	0
 27862  014750  6E0A               	movwf	(btemp+9)^0,c
 27863  014752  0E00               	movlw	0
 27864  014754  6E0B               	movwf	(btemp+10)^0,c
 27865  014756  0E00               	movlw	0
 27866  014758  6E0C               	movwf	(btemp+11)^0,c
 27867                           
 27868                           ;stkvar	_a @ sp[(-4)+-8]
 27869  01475A  0EF4               	movlw	-12
 27870  01475C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27871  014762  0EF5               	movlw	-11
 27872  014764  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27873  01476A  0EF6               	movlw	-10
 27874  01476C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27875  014772  0EF7               	movlw	-9
 27876  014774  0060  F033  FFE3   	movff	btemp+11,plusw1
 27877  01477A                     l7932:
 27878                           
 27879                           ;stkvar	_a @ sp[(-4)+-8]
 27880  01477A  0EF6               	movlw	-10
 27881  01477C  8EE3               	bsf	plusw1,7,c
 27882                           
 27883                           ;stkvar	_a @ sp[(-4)+-8]
 27884  01477E  0EF7               	movlw	247
 27885  014780  24E1               	addwf	fsr1l,w,c
 27886  014782  6ED9               	movwf	fsr2l,c
 27887  014784  0EFF               	movlw	255
 27888  014786  20E2               	addwfc	fsr1h,w,c
 27889  014788  6EDA               	movwf	fsr2h,c
 27890  01478A  0E00               	movlw	0
 27891  01478C  6EDF               	movwf	indf2,c
 27892  01478E  D018               	goto	l7938
 27893  014790                     l7936:
 27894  014790  0E00               	movlw	0
 27895  014792  6E09               	movwf	(btemp+8)^0,c
 27896  014794  0E00               	movlw	0
 27897  014796  6E0A               	movwf	(btemp+9)^0,c
 27898  014798  0E00               	movlw	0
 27899  01479A  6E0B               	movwf	(btemp+10)^0,c
 27900  01479C  0E00               	movlw	0
 27901  01479E  6E0C               	movwf	(btemp+11)^0,c
 27902                           
 27903                           ;stkvar	_a @ sp[(-4)+-8]
 27904  0147A0  0EF4               	movlw	-12
 27905  0147A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27906  0147A8  0EF5               	movlw	-11
 27907  0147AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27908  0147B0  0EF6               	movlw	-10
 27909  0147B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27910  0147B8  0EF7               	movlw	-9
 27911  0147BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27912  0147C0                     l7938:
 27913                           
 27914                           ;stkvar	_bexp @ sp[(-4)+1]
 27915                           ;stkvar	_aexp @ sp[(-4)+2]
 27916  0147C0  50E1               	movf	fsr1l,w,c
 27917  0147C2  0FFE               	addlw	-2
 27918  0147C4  6ED9               	movwf	fsr2l,c
 27919  0147C6  50E2               	movf	fsr1h,w,c
 27920  0147C8  6EDA               	movwf	fsr2h,c
 27921  0147CA  0EFF               	movlw	255
 27922  0147CC  22DA               	addwfc	fsr2h,f,c
 27923  0147CE  0EFD               	movlw	-3
 27924  0147D0  50E3               	movf	plusw1,w,c
 27925  0147D2  5CDE               	subwf	postinc2,w,c
 27926  0147D4  B0D8               	btfsc	status,0,c
 27927  0147D6  D0A4               	goto	l7974
 27928                           
 27929                           ;stkvar	_signs @ sp[(-4)+3]
 27930  0147D8  0EFF               	movlw	-1
 27931  0147DA  ACE3               	btfss	plusw1,6,c
 27932  0147DC  D002               	goto	l7944
 27933                           
 27934                           ;stkvar	_signs @ sp[(-4)+3]
 27935  0147DE  0EFF               	movlw	-1
 27936  0147E0  7EE3               	btg	plusw1,7,c
 27937  0147E2                     l7944:
 27938                           
 27939                           ;stkvar	_bexp @ sp[(-4)+1]
 27940                           ;stkvar	_grs @ sp[(-4)+0]
 27941  0147E2  0EFD               	movlw	-3
 27942  0147E4  006F FF8C  F001    	movff	plusw1,btemp
 27943  0147EA  0EFC               	movlw	-4
 27944  0147EC  0060  F007  FFE3   	movff	btemp,plusw1
 27945                           
 27946                           ;stkvar	_aexp @ sp[(-4)+2]
 27947                           ;stkvar	_bexp @ sp[(-4)+1]
 27948  0147F2  0EFE               	movlw	-2
 27949  0147F4  006F FF8C  F001    	movff	plusw1,btemp
 27950  0147FA  0EFD               	movlw	-3
 27951  0147FC  0060  F007  FFE3   	movff	btemp,plusw1
 27952                           
 27953                           ;stkvar	_grs @ sp[(-4)+0]
 27954                           ;stkvar	_aexp @ sp[(-4)+2]
 27955  014802  0EFC               	movlw	-4
 27956  014804  006F FF8C  F001    	movff	plusw1,btemp
 27957  01480A  0EFE               	movlw	-2
 27958  01480C  0060  F007  FFE3   	movff	btemp,plusw1
 27959                           
 27960                           ;stkvar	_b @ sp[(-4)+-4]
 27961                           ;stkvar	_grs @ sp[(-4)+0]
 27962  014812  0EF8               	movlw	-8
 27963  014814  006F FF8C  F001    	movff	plusw1,btemp
 27964  01481A  0EFC               	movlw	-4
 27965  01481C  0060  F007  FFE3   	movff	btemp,plusw1
 27966                           
 27967                           ;stkvar	_a @ sp[(-4)+-8]
 27968                           ;stkvar	_b @ sp[(-4)+-4]
 27969  014822  0EF4               	movlw	-12
 27970  014824  006F FF8C  F001    	movff	plusw1,btemp
 27971  01482A  0EF8               	movlw	-8
 27972  01482C  0060  F007  FFE3   	movff	btemp,plusw1
 27973                           
 27974                           ;stkvar	_grs @ sp[(-4)+0]
 27975                           ;stkvar	_a @ sp[(-4)+-8]
 27976  014832  0EFC               	movlw	-4
 27977  014834  006F FF8C  F001    	movff	plusw1,btemp
 27978  01483A  0EF4               	movlw	-12
 27979  01483C  0060  F007  FFE3   	movff	btemp,plusw1
 27980                           
 27981                           ;stkvar	_b @ sp[(-4)+-4]
 27982  014842  0EF9               	movlw	249
 27983  014844  24E1               	addwf	fsr1l,w,c
 27984  014846  6ED9               	movwf	fsr2l,c
 27985  014848  0EFF               	movlw	255
 27986  01484A  20E2               	addwfc	fsr1h,w,c
 27987  01484C  6EDA               	movwf	fsr2h,c
 27988  01484E  50DF               	movf	indf2,w,c
 27989  014850  6E0C               	movwf	(btemp+11)^0,c
 27990                           
 27991                           ;stkvar	_grs @ sp[(-4)+0]
 27992  014852  0EFC               	movlw	-4
 27993  014854  0060  F033  FFE3   	movff	btemp+11,plusw1
 27994                           
 27995                           ;stkvar	_a @ sp[(-4)+-8]
 27996  01485A  0EF5               	movlw	245
 27997  01485C  24E1               	addwf	fsr1l,w,c
 27998  01485E  6ED9               	movwf	fsr2l,c
 27999  014860  0EFF               	movlw	255
 28000  014862  20E2               	addwfc	fsr1h,w,c
 28001  014864  6EDA               	movwf	fsr2h,c
 28002                           
 28003                           ;stkvar	_b @ sp[(-4)+-4]
 28004  014866  0EF9               	movlw	249
 28005  014868  24E1               	addwf	fsr1l,w,c
 28006  01486A  6EE9               	movwf	fsr0l,c
 28007  01486C  0EFF               	movlw	255
 28008  01486E  20E2               	addwfc	fsr1h,w,c
 28009  014870  6EEA               	movwf	fsr0h,c
 28010  014872  006F FF7F FFEF     	movff	indf2,indf0
 28011                           
 28012                           ;stkvar	_grs @ sp[(-4)+0]
 28013                           ;stkvar	_a @ sp[(-4)+-8]
 28014  014878  0EF5               	movlw	245
 28015  01487A  24E1               	addwf	fsr1l,w,c
 28016  01487C  6ED9               	movwf	fsr2l,c
 28017  01487E  0EFF               	movlw	255
 28018  014880  20E2               	addwfc	fsr1h,w,c
 28019  014882  6EDA               	movwf	fsr2h,c
 28020  014884  0EFC               	movlw	-4
 28021  014886  006F FF8F FFDF     	movff	plusw1,indf2
 28022                           
 28023                           ;stkvar	_b @ sp[(-4)+-4]
 28024  01488C  0EFA               	movlw	250
 28025  01488E  24E1               	addwf	fsr1l,w,c
 28026  014890  6ED9               	movwf	fsr2l,c
 28027  014892  0EFF               	movlw	255
 28028  014894  20E2               	addwfc	fsr1h,w,c
 28029  014896  6EDA               	movwf	fsr2h,c
 28030  014898  50DF               	movf	indf2,w,c
 28031  01489A  6E0C               	movwf	(btemp+11)^0,c
 28032                           
 28033                           ;stkvar	_grs @ sp[(-4)+0]
 28034  01489C  0EFC               	movlw	-4
 28035  01489E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28036                           
 28037                           ;stkvar	_a @ sp[(-4)+-8]
 28038  0148A4  0EF6               	movlw	246
 28039  0148A6  24E1               	addwf	fsr1l,w,c
 28040  0148A8  6ED9               	movwf	fsr2l,c
 28041  0148AA  0EFF               	movlw	255
 28042  0148AC  20E2               	addwfc	fsr1h,w,c
 28043  0148AE  6EDA               	movwf	fsr2h,c
 28044                           
 28045                           ;stkvar	_b @ sp[(-4)+-4]
 28046  0148B0  0EFA               	movlw	250
 28047  0148B2  24E1               	addwf	fsr1l,w,c
 28048  0148B4  6EE9               	movwf	fsr0l,c
 28049  0148B6  0EFF               	movlw	255
 28050  0148B8  20E2               	addwfc	fsr1h,w,c
 28051  0148BA  6EEA               	movwf	fsr0h,c
 28052  0148BC  006F FF7F FFEF     	movff	indf2,indf0
 28053                           
 28054                           ;stkvar	_grs @ sp[(-4)+0]
 28055                           ;stkvar	_a @ sp[(-4)+-8]
 28056  0148C2  0EF6               	movlw	246
 28057  0148C4  24E1               	addwf	fsr1l,w,c
 28058  0148C6  6ED9               	movwf	fsr2l,c
 28059  0148C8  0EFF               	movlw	255
 28060  0148CA  20E2               	addwfc	fsr1h,w,c
 28061  0148CC  6EDA               	movwf	fsr2h,c
 28062  0148CE  0EFC               	movlw	-4
 28063  0148D0  006F FF8F FFDF     	movff	plusw1,indf2
 28064                           
 28065                           ;stkvar	_b @ sp[(-4)+-4]
 28066  0148D6  0EFB               	movlw	251
 28067  0148D8  24E1               	addwf	fsr1l,w,c
 28068  0148DA  6ED9               	movwf	fsr2l,c
 28069  0148DC  0EFF               	movlw	255
 28070  0148DE  20E2               	addwfc	fsr1h,w,c
 28071  0148E0  6EDA               	movwf	fsr2h,c
 28072  0148E2  50DF               	movf	indf2,w,c
 28073  0148E4  6E0C               	movwf	(btemp+11)^0,c
 28074                           
 28075                           ;stkvar	_grs @ sp[(-4)+0]
 28076  0148E6  0EFC               	movlw	-4
 28077  0148E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28078                           
 28079                           ;stkvar	_a @ sp[(-4)+-8]
 28080  0148EE  0EF7               	movlw	247
 28081  0148F0  24E1               	addwf	fsr1l,w,c
 28082  0148F2  6ED9               	movwf	fsr2l,c
 28083  0148F4  0EFF               	movlw	255
 28084  0148F6  20E2               	addwfc	fsr1h,w,c
 28085  0148F8  6EDA               	movwf	fsr2h,c
 28086                           
 28087                           ;stkvar	_b @ sp[(-4)+-4]
 28088  0148FA  0EFB               	movlw	251
 28089  0148FC  24E1               	addwf	fsr1l,w,c
 28090  0148FE  6EE9               	movwf	fsr0l,c
 28091  014900  0EFF               	movlw	255
 28092  014902  20E2               	addwfc	fsr1h,w,c
 28093  014904  6EEA               	movwf	fsr0h,c
 28094  014906  006F FF7F FFEF     	movff	indf2,indf0
 28095                           
 28096                           ;stkvar	_grs @ sp[(-4)+0]
 28097                           ;stkvar	_a @ sp[(-4)+-8]
 28098  01490C  0EF7               	movlw	247
 28099  01490E  24E1               	addwf	fsr1l,w,c
 28100  014910  6ED9               	movwf	fsr2l,c
 28101  014912  0EFF               	movlw	255
 28102  014914  20E2               	addwfc	fsr1h,w,c
 28103  014916  6EDA               	movwf	fsr2h,c
 28104  014918  0EFC               	movlw	-4
 28105  01491A  006F FF8F FFDF     	movff	plusw1,indf2
 28106  014920                     l7974:
 28107                           
 28108                           ;stkvar	_grs @ sp[(-4)+0]
 28109  014920  0EFC               	movlw	-4
 28110  014922  6AE3               	clrf	plusw1,c
 28111                           
 28112                           ;stkvar	_aexp @ sp[(-4)+2]
 28113  014924  0EFE               	movlw	-2
 28114  014926  50E3               	movf	plusw1,w,c
 28115  014928  6E0B               	movwf	(btemp+10)^0,c
 28116  01492A  6A0C               	clrf	(btemp+11)^0,c
 28117                           
 28118                           ;stkvar	_bexp @ sp[(-4)+1]
 28119  01492C  0EFD               	movlw	-3
 28120  01492E  50E3               	movf	plusw1,w,c
 28121  014930  5E0B               	subwf	(btemp+10)^0,f,c
 28122  014932  0E00               	movlw	0
 28123  014934  5A0C               	subwfb	(btemp+11)^0,f,c
 28124  014936  BE0C               	btfsc	(btemp+11)^0,7,c
 28125  014938  D062               	goto	l7998
 28126  01493A  500C               	movf	(btemp+11)^0,w,c
 28127  01493C  E104               	bnz	u5620
 28128  01493E  0E1A               	movlw	26
 28129  014940  5C0B               	subwf	(btemp+10)^0,w,c
 28130  014942  A0D8               	btfss	status,0,c
 28131  014944  D05C               	goto	l7998
 28132  014946                     u5620:
 28133                           
 28134                           ;stkvar	_b @ sp[(-4)+-4]
 28135  014946  0EF8               	movlw	-8
 28136  014948  50E3               	movf	plusw1,w,c
 28137  01494A  E10A               	bnz	u5631
 28138  01494C  0EF9               	movlw	-7
 28139  01494E  50E3               	movf	plusw1,w,c
 28140  014950  E107               	bnz	u5631
 28141  014952  0EFA               	movlw	-6
 28142  014954  50E3               	movf	plusw1,w,c
 28143  014956  E104               	bnz	u5631
 28144  014958  0EFB               	movlw	-5
 28145  01495A  50E3               	movf	plusw1,w,c
 28146  01495C  B4D8               	btfsc	status,2,c
 28147  01495E  D003               	goto	u5630
 28148  014960                     u5631:
 28149  014960  6A0C               	clrf	(btemp+11)^0,c
 28150  014962  2A0C               	incf	(btemp+11)^0,f,c
 28151  014964  D001               	goto	u5648
 28152  014966                     u5630:
 28153  014966  6A0C               	clrf	(btemp+11)^0,c
 28154  014968                     u5648:
 28155                           
 28156                           ;stkvar	_grs @ sp[(-4)+0]
 28157  014968  0EFC               	movlw	-4
 28158  01496A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28159                           
 28160                           ;stkvar	_b @ sp[(-4)+-4]
 28161  014970  0EF8               	movlw	-8
 28162  014972  6AE3               	clrf	plusw1,c
 28163  014974  0EF9               	movlw	-7
 28164  014976  6AE3               	clrf	plusw1,c
 28165  014978  0EFA               	movlw	-6
 28166  01497A  6AE3               	clrf	plusw1,c
 28167  01497C  0EFB               	movlw	-5
 28168  01497E  6AE3               	clrf	plusw1,c
 28169                           
 28170                           ;stkvar	_aexp @ sp[(-4)+2]
 28171                           ;stkvar	_bexp @ sp[(-4)+1]
 28172  014980  0EFE               	movlw	-2
 28173  014982  006F FF8C  F001    	movff	plusw1,btemp
 28174  014988  0EFD               	movlw	-3
 28175  01498A  0060  F007  FFE3   	movff	btemp,plusw1
 28176  014990  D042               	goto	u5680
 28177  014992                     l7984:
 28178                           
 28179                           ;stkvar	_grs @ sp[(-4)+0]
 28180  014992  0EFC               	movlw	-4
 28181  014994  A0E3               	btfss	plusw1,0,c
 28182  014996  D00D               	goto	l7988
 28183                           
 28184                           ;stkvar	_grs @ sp[(-4)+0]
 28185  014998  0EFC               	movlw	-4
 28186  01499A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28187  0149A0  90D8               	bcf	status,0,c
 28188  0149A2  320C               	rrcf	(btemp+11)^0,f,c
 28189  0149A4  0E01               	movlw	1
 28190  0149A6  120C               	iorwf	(btemp+11)^0,f,c
 28191                           
 28192                           ;stkvar	_grs @ sp[(-4)+0]
 28193  0149A8  0EFC               	movlw	-4
 28194  0149AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28195  0149B0  D009               	goto	l7990
 28196  0149B2                     l7988:
 28197                           
 28198                           ;stkvar	_grs @ sp[(-4)+0]
 28199  0149B2  50E1               	movf	fsr1l,w,c
 28200  0149B4  0FFC               	addlw	-4
 28201  0149B6  6ED9               	movwf	fsr2l,c
 28202  0149B8  50E2               	movf	fsr1h,w,c
 28203  0149BA  6EDA               	movwf	fsr2h,c
 28204  0149BC  0EFF               	movlw	255
 28205  0149BE  22DA               	addwfc	fsr2h,f,c
 28206  0149C0  90D8               	bcf	status,0,c
 28207  0149C2  32DF               	rrcf	indf2,f,c
 28208  0149C4                     l7990:
 28209                           
 28210                           ;stkvar	_b @ sp[(-4)+-4]
 28211  0149C4  0EF8               	movlw	-8
 28212  0149C6  A0E3               	btfss	plusw1,0,c
 28213  0149C8  D002               	goto	l7994
 28214                           
 28215                           ;stkvar	_grs @ sp[(-4)+0]
 28216  0149CA  0EFC               	movlw	-4
 28217  0149CC  8EE3               	bsf	plusw1,7,c
 28218  0149CE                     l7994:
 28219  0149CE  0E01               	movlw	1
 28220  0149D0  6E0C               	movwf	(btemp+11)^0,c
 28221                           
 28222                           ;stkvar	_b @ sp[(-4)+-4]
 28223  0149D2  50E1               	movf	fsr1l,w,c
 28224  0149D4  0FF8               	addlw	-8
 28225  0149D6  6ED9               	movwf	fsr2l,c
 28226  0149D8  50E2               	movf	fsr1h,w,c
 28227  0149DA  6EDA               	movwf	fsr2h,c
 28228  0149DC  0EFF               	movlw	255
 28229  0149DE  22DA               	addwfc	fsr2h,f,c
 28230  0149E0  280C               	incf	(btemp+11)^0,w,c
 28231  0149E2  52DE               	movf	postinc2,f,c
 28232  0149E4  D008               	goto	u5670
 28233  0149E6                     u5675:
 28234  0149E6  52DE               	movf	postinc2,f,c
 28235  0149E8  90D8               	bcf	status,0,c
 28236  0149EA  BEDC               	btfsc	preinc2,7,c
 28237  0149EC  80D8               	bsf	status,0,c
 28238  0149EE  32DD               	rrcf	postdec2,f,c
 28239  0149F0  32DD               	rrcf	postdec2,f,c
 28240  0149F2  32DD               	rrcf	postdec2,f,c
 28241  0149F4  32DE               	rrcf	postinc2,f,c
 28242  0149F6                     u5670:
 28243  0149F6  2EE8               	decfsz	wreg,f,c
 28244  0149F8  D7F6               	goto	u5675
 28245                           
 28246                           ;stkvar	_bexp @ sp[(-4)+1]
 28247  0149FA  0EFD               	movlw	-3
 28248  0149FC  2AE3               	incf	plusw1,f,c
 28249  0149FE                     l7998:
 28250                           
 28251                           ;stkvar	_aexp @ sp[(-4)+2]
 28252                           ;stkvar	_bexp @ sp[(-4)+1]
 28253  0149FE  50E1               	movf	fsr1l,w,c
 28254  014A00  0FFD               	addlw	-3
 28255  014A02  6ED9               	movwf	fsr2l,c
 28256  014A04  50E2               	movf	fsr1h,w,c
 28257  014A06  6EDA               	movwf	fsr2h,c
 28258  014A08  0EFF               	movlw	255
 28259  014A0A  22DA               	addwfc	fsr2h,f,c
 28260  014A0C  0EFE               	movlw	-2
 28261  014A0E  50E3               	movf	plusw1,w,c
 28262  014A10  5CDE               	subwf	postinc2,w,c
 28263  014A12  A0D8               	btfss	status,0,c
 28264  014A14  D7BE               	goto	l7984
 28265  014A16                     u5680:
 28266                           
 28267                           ;stkvar	_signs @ sp[(-4)+3]
 28268  014A16  0EFF               	movlw	-1
 28269  014A18  BCE3               	btfsc	plusw1,6,c
 28270  014A1A  D066               	goto	l8026
 28271                           
 28272                           ;stkvar	_bexp @ sp[(-4)+1]
 28273  014A1C  0EFD               	movlw	-3
 28274  014A1E  50E3               	movf	plusw1,w,c
 28275  014A20  B4D8               	btfsc	status,2,c
 28276  014A22  D0F2               	goto	u5780
 28277                           
 28278                           ;stkvar	_a @ sp[(-4)+-8]
 28279                           ;stkvar	_b @ sp[(-4)+-4]
 28280  014A24  0EF8               	movlw	-8
 28281  014A26  50E3               	movf	plusw1,w,c
 28282  014A28  6E01               	movwf	btemp^0,c
 28283  014A2A  0EF4               	movlw	-12
 28284  014A2C  50E3               	movf	plusw1,w,c
 28285  014A2E  2601               	addwf	btemp^0,f,c
 28286  014A30  0EF8               	movlw	-8
 28287  014A32  0060  F007  FFE3   	movff	btemp,plusw1
 28288  014A38  0EF9               	movlw	-7
 28289  014A3A  50E3               	movf	plusw1,w,c
 28290  014A3C  6E01               	movwf	btemp^0,c
 28291  014A3E  0EF5               	movlw	-11
 28292  014A40  50E3               	movf	plusw1,w,c
 28293  014A42  2201               	addwfc	btemp^0,f,c
 28294  014A44  0EF9               	movlw	-7
 28295  014A46  0060  F007  FFE3   	movff	btemp,plusw1
 28296  014A4C  0EFA               	movlw	-6
 28297  014A4E  50E3               	movf	plusw1,w,c
 28298  014A50  6E01               	movwf	btemp^0,c
 28299  014A52  0EF6               	movlw	-10
 28300  014A54  50E3               	movf	plusw1,w,c
 28301  014A56  2201               	addwfc	btemp^0,f,c
 28302  014A58  0EFA               	movlw	-6
 28303  014A5A  0060  F007  FFE3   	movff	btemp,plusw1
 28304  014A60  0EFB               	movlw	-5
 28305  014A62  50E3               	movf	plusw1,w,c
 28306  014A64  6E01               	movwf	btemp^0,c
 28307  014A66  0EF7               	movlw	-9
 28308  014A68  50E3               	movf	plusw1,w,c
 28309  014A6A  2201               	addwfc	btemp^0,f,c
 28310  014A6C  0EFB               	movlw	-5
 28311  014A6E  0060  F007  FFE3   	movff	btemp,plusw1
 28312                           
 28313                           ;stkvar	_b @ sp[(-4)+-4]
 28314  014A74  0EFB               	movlw	-5
 28315  014A76  A0E3               	btfss	plusw1,0,c
 28316  014A78  D101               	goto	u5820
 28317                           
 28318                           ;stkvar	_grs @ sp[(-4)+0]
 28319  014A7A  0EFC               	movlw	-4
 28320  014A7C  A0E3               	btfss	plusw1,0,c
 28321  014A7E  D00D               	goto	l8016
 28322                           
 28323                           ;stkvar	_grs @ sp[(-4)+0]
 28324  014A80  0EFC               	movlw	-4
 28325  014A82  006F FF8C  F00C    	movff	plusw1,btemp+11
 28326  014A88  90D8               	bcf	status,0,c
 28327  014A8A  320C               	rrcf	(btemp+11)^0,f,c
 28328  014A8C  0E01               	movlw	1
 28329  014A8E  120C               	iorwf	(btemp+11)^0,f,c
 28330                           
 28331                           ;stkvar	_grs @ sp[(-4)+0]
 28332  014A90  0EFC               	movlw	-4
 28333  014A92  0060  F033  FFE3   	movff	btemp+11,plusw1
 28334  014A98  D009               	goto	l8018
 28335  014A9A                     l8016:
 28336                           
 28337                           ;stkvar	_grs @ sp[(-4)+0]
 28338  014A9A  50E1               	movf	fsr1l,w,c
 28339  014A9C  0FFC               	addlw	-4
 28340  014A9E  6ED9               	movwf	fsr2l,c
 28341  014AA0  50E2               	movf	fsr1h,w,c
 28342  014AA2  6EDA               	movwf	fsr2h,c
 28343  014AA4  0EFF               	movlw	255
 28344  014AA6  22DA               	addwfc	fsr2h,f,c
 28345  014AA8  90D8               	bcf	status,0,c
 28346  014AAA  32DF               	rrcf	indf2,f,c
 28347  014AAC                     l8018:
 28348                           
 28349                           ;stkvar	_b @ sp[(-4)+-4]
 28350  014AAC  0EF8               	movlw	-8
 28351  014AAE  A0E3               	btfss	plusw1,0,c
 28352  014AB0  D002               	goto	l8022
 28353                           
 28354                           ;stkvar	_grs @ sp[(-4)+0]
 28355  014AB2  0EFC               	movlw	-4
 28356  014AB4  8EE3               	bsf	plusw1,7,c
 28357  014AB6                     l8022:
 28358  014AB6  0E01               	movlw	1
 28359  014AB8  6E0C               	movwf	(btemp+11)^0,c
 28360                           
 28361                           ;stkvar	_b @ sp[(-4)+-4]
 28362  014ABA  50E1               	movf	fsr1l,w,c
 28363  014ABC  0FF8               	addlw	-8
 28364  014ABE  6ED9               	movwf	fsr2l,c
 28365  014AC0  50E2               	movf	fsr1h,w,c
 28366  014AC2  6EDA               	movwf	fsr2h,c
 28367  014AC4  0EFF               	movlw	255
 28368  014AC6  22DA               	addwfc	fsr2h,f,c
 28369  014AC8  280C               	incf	(btemp+11)^0,w,c
 28370  014ACA  52DE               	movf	postinc2,f,c
 28371  014ACC  D008               	goto	u5740
 28372  014ACE                     u5745:
 28373  014ACE  52DE               	movf	postinc2,f,c
 28374  014AD0  90D8               	bcf	status,0,c
 28375  014AD2  BEDC               	btfsc	preinc2,7,c
 28376  014AD4  80D8               	bsf	status,0,c
 28377  014AD6  32DD               	rrcf	postdec2,f,c
 28378  014AD8  32DD               	rrcf	postdec2,f,c
 28379  014ADA  32DD               	rrcf	postdec2,f,c
 28380  014ADC  32DE               	rrcf	postinc2,f,c
 28381  014ADE                     u5740:
 28382  014ADE  2EE8               	decfsz	wreg,f,c
 28383  014AE0  D7F6               	goto	u5745
 28384                           
 28385                           ;stkvar	_bexp @ sp[(-4)+1]
 28386  014AE2  0EFD               	movlw	-3
 28387  014AE4  2AE3               	incf	plusw1,f,c
 28388  014AE6  D0CA               	goto	u5820
 28389  014AE8                     l8026:
 28390                           
 28391                           ;stkvar	_a @ sp[(-4)+-8]
 28392                           ;stkvar	_b @ sp[(-4)+-4]
 28393  014AE8  50E1               	movf	fsr1l,w,c
 28394  014AEA  0FF8               	addlw	-8
 28395  014AEC  6ED9               	movwf	fsr2l,c
 28396  014AEE  50E2               	movf	fsr1h,w,c
 28397  014AF0  6EDA               	movwf	fsr2h,c
 28398  014AF2  0EFF               	movlw	255
 28399  014AF4  22DA               	addwfc	fsr2h,f,c
 28400  014AF6  0EF4               	movlw	-12
 28401  014AF8  50E3               	movf	plusw1,w,c
 28402  014AFA  5CDE               	subwf	postinc2,w,c
 28403  014AFC  0EF5               	movlw	-11
 28404  014AFE  50E3               	movf	plusw1,w,c
 28405  014B00  58DE               	subwfb	postinc2,w,c
 28406  014B02  0EF6               	movlw	-10
 28407  014B04  50E3               	movf	plusw1,w,c
 28408  014B06  58DE               	subwfb	postinc2,w,c
 28409  014B08  50DE               	movf	postinc2,w,c
 28410  014B0A  0A80               	xorlw	128
 28411  014B0C  6E01               	movwf	btemp^0,c
 28412  014B0E  0EF7               	movlw	-9
 28413  014B10  50E3               	movf	plusw1,w,c
 28414  014B12  0A80               	xorlw	128
 28415  014B14  5801               	subwfb	btemp^0,w,c
 28416  014B16  B0D8               	btfsc	status,0,c
 28417  014B18  D053               	goto	l8038
 28418                           
 28419                           ;stkvar	_b @ sp[(-4)+-4]
 28420                           ;stkvar	_a @ sp[(-4)+-8]
 28421  014B1A  0EF4               	movlw	-12
 28422  014B1C  006F FF8C  F009    	movff	plusw1,btemp+8
 28423  014B22  0EF5               	movlw	-11
 28424  014B24  006F FF8C  F00A    	movff	plusw1,btemp+9
 28425  014B2A  0EF6               	movlw	-10
 28426  014B2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28427  014B32  0EF7               	movlw	-9
 28428  014B34  006F FF8C  F00C    	movff	plusw1,btemp+11
 28429  014B3A  0EF8               	movlw	-8
 28430  014B3C  50E3               	movf	plusw1,w,c
 28431  014B3E  5E09               	subwf	(btemp+8)^0,f,c
 28432  014B40  0EF9               	movlw	-7
 28433  014B42  50E3               	movf	plusw1,w,c
 28434  014B44  5A0A               	subwfb	(btemp+9)^0,f,c
 28435  014B46  0EFA               	movlw	-6
 28436  014B48  50E3               	movf	plusw1,w,c
 28437  014B4A  5A0B               	subwfb	(btemp+10)^0,f,c
 28438  014B4C  0EFB               	movlw	-5
 28439  014B4E  50E3               	movf	plusw1,w,c
 28440  014B50  5A0C               	subwfb	(btemp+11)^0,f,c
 28441  014B52  0EFF               	movlw	255
 28442  014B54  2409               	addwf	(btemp+8)^0,w,c
 28443  014B56  6E05               	movwf	(btemp+4)^0,c
 28444  014B58  0EFF               	movlw	255
 28445  014B5A  200A               	addwfc	(btemp+9)^0,w,c
 28446  014B5C  6E06               	movwf	(btemp+5)^0,c
 28447  014B5E  0EFF               	movlw	255
 28448  014B60  200B               	addwfc	(btemp+10)^0,w,c
 28449  014B62  6E07               	movwf	(btemp+6)^0,c
 28450  014B64  0EFF               	movlw	255
 28451  014B66  200C               	addwfc	(btemp+11)^0,w,c
 28452  014B68  6E08               	movwf	(btemp+7)^0,c
 28453                           
 28454                           ;stkvar	_b @ sp[(-4)+-4]
 28455  014B6A  0EF8               	movlw	-8
 28456  014B6C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28457  014B72  0EF9               	movlw	-7
 28458  014B74  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28459  014B7A  0EFA               	movlw	-6
 28460  014B7C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28461  014B82  0EFB               	movlw	-5
 28462  014B84  0060  F023  FFE3   	movff	btemp+7,plusw1
 28463                           
 28464                           ;stkvar	_signs @ sp[(-4)+3]
 28465  014B8A  0EFF               	movlw	-1
 28466  014B8C  7EE3               	btg	plusw1,7,c
 28467                           
 28468                           ;stkvar	_grs @ sp[(-4)+0]
 28469  014B8E  0EFC               	movlw	-4
 28470  014B90  50E3               	movf	plusw1,w,c
 28471  014B92  0800               	sublw	0
 28472  014B94  6E0C               	movwf	(btemp+11)^0,c
 28473                           
 28474                           ;stkvar	_grs @ sp[(-4)+0]
 28475  014B96  0EFC               	movlw	-4
 28476  014B98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28477                           
 28478                           ;stkvar	_grs @ sp[(-4)+0]
 28479  014B9E  0EFC               	movlw	-4
 28480  014BA0  50E3               	movf	plusw1,w,c
 28481  014BA2  A4D8               	btfss	status,2,c
 28482  014BA4  D020               	goto	l8040
 28483                           
 28484                           ;stkvar	_b @ sp[(-4)+-4]
 28485  014BA6  50E1               	movf	fsr1l,w,c
 28486  014BA8  0FF8               	addlw	-8
 28487  014BAA  6ED9               	movwf	fsr2l,c
 28488  014BAC  50E2               	movf	fsr1h,w,c
 28489  014BAE  6EDA               	movwf	fsr2h,c
 28490  014BB0  0EFF               	movlw	255
 28491  014BB2  22DA               	addwfc	fsr2h,f,c
 28492  014BB4  2ADE               	incf	postinc2,f,c
 28493  014BB6  0E00               	movlw	0
 28494  014BB8  22DE               	addwfc	postinc2,f,c
 28495  014BBA  22DE               	addwfc	postinc2,f,c
 28496  014BBC  22DE               	addwfc	postinc2,f,c
 28497  014BBE  D013               	goto	l8040
 28498  014BC0                     l8038:
 28499                           
 28500                           ;stkvar	_a @ sp[(-4)+-8]
 28501                           ;stkvar	_b @ sp[(-4)+-4]
 28502  014BC0  50E1               	movf	fsr1l,w,c
 28503  014BC2  0FF8               	addlw	-8
 28504  014BC4  6ED9               	movwf	fsr2l,c
 28505  014BC6  50E2               	movf	fsr1h,w,c
 28506  014BC8  6EDA               	movwf	fsr2h,c
 28507  014BCA  0EFF               	movlw	255
 28508  014BCC  22DA               	addwfc	fsr2h,f,c
 28509  014BCE  0EF4               	movlw	-12
 28510  014BD0  50E3               	movf	plusw1,w,c
 28511  014BD2  5EDE               	subwf	postinc2,f,c
 28512  014BD4  0EF5               	movlw	-11
 28513  014BD6  50E3               	movf	plusw1,w,c
 28514  014BD8  5ADE               	subwfb	postinc2,f,c
 28515  014BDA  0EF6               	movlw	-10
 28516  014BDC  50E3               	movf	plusw1,w,c
 28517  014BDE  5ADE               	subwfb	postinc2,f,c
 28518  014BE0  0EF7               	movlw	-9
 28519  014BE2  50E3               	movf	plusw1,w,c
 28520  014BE4  5ADE               	subwfb	postinc2,f,c
 28521  014BE6                     l8040:
 28522                           
 28523                           ;stkvar	_b @ sp[(-4)+-4]
 28524  014BE6  0EF8               	movlw	-8
 28525  014BE8  50E3               	movf	plusw1,w,c
 28526  014BEA  E145               	bnz	l8062
 28527  014BEC  0EF9               	movlw	-7
 28528  014BEE  50E3               	movf	plusw1,w,c
 28529  014BF0  E142               	bnz	l8062
 28530  014BF2  0EFA               	movlw	-6
 28531  014BF4  50E3               	movf	plusw1,w,c
 28532  014BF6  E13F               	bnz	l8062
 28533  014BF8  0EFB               	movlw	-5
 28534  014BFA  50E3               	movf	plusw1,w,c
 28535  014BFC  A4D8               	btfss	status,2,c
 28536  014BFE  D03B               	goto	l8062
 28537                           
 28538                           ;stkvar	_grs @ sp[(-4)+0]
 28539  014C00  0EFC               	movlw	-4
 28540  014C02  50E3               	movf	plusw1,w,c
 28541  014C04  A4D8               	btfss	status,2,c
 28542  014C06  D037               	goto	l8062
 28543  014C08                     u5780:
 28544  014C08  0E00               	movlw	0
 28545  014C0A  6E01               	movwf	btemp^0,c
 28546  014C0C  0E00               	movlw	0
 28547  014C0E  6E02               	movwf	(btemp+1)^0,c
 28548  014C10  0E00               	movlw	0
 28549  014C12  6E03               	movwf	(btemp+2)^0,c
 28550  014C14  0E00               	movlw	0
 28551  014C16  6E04               	movwf	(btemp+3)^0,c
 28552  014C18  D0C6               	goto	l3018
 28553  014C1A                     l8048:
 28554                           
 28555                           ;stkvar	_b @ sp[(-4)+-4]
 28556  014C1A  90D8               	bcf	status,0,c
 28557  014C1C  0EF8               	movlw	-8
 28558  014C1E  36E3               	rlcf	plusw1,f,c
 28559  014C20  0EF9               	movlw	-7
 28560  014C22  36E3               	rlcf	plusw1,f,c
 28561  014C24  0EFA               	movlw	-6
 28562  014C26  36E3               	rlcf	plusw1,f,c
 28563  014C28  0EFB               	movlw	-5
 28564  014C2A  36E3               	rlcf	plusw1,f,c
 28565                           
 28566                           ;stkvar	_grs @ sp[(-4)+0]
 28567  014C2C  0EFC               	movlw	-4
 28568  014C2E  AEE3               	btfss	plusw1,7,c
 28569  014C30  D002               	goto	l3030
 28570                           
 28571                           ;stkvar	_b @ sp[(-4)+-4]
 28572  014C32  0EF8               	movlw	-8
 28573  014C34  80E3               	bsf	plusw1,0,c
 28574  014C36                     l3030:
 28575                           
 28576                           ;stkvar	_grs @ sp[(-4)+0]
 28577  014C36  0EFC               	movlw	-4
 28578  014C38  A0E3               	btfss	plusw1,0,c
 28579  014C3A  D00E               	goto	l8056
 28580                           
 28581                           ;stkvar	_grs @ sp[(-4)+0]
 28582  014C3C  0EFC               	movlw	-4
 28583  014C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28584  014C44  90D8               	bcf	status,0,c
 28585  014C46  340C               	rlcf	(btemp+11)^0,w,c
 28586  014C48  6E0B               	movwf	(btemp+10)^0,c
 28587  014C4A  0E01               	movlw	1
 28588  014C4C  120B               	iorwf	(btemp+10)^0,f,c
 28589                           
 28590                           ;stkvar	_grs @ sp[(-4)+0]
 28591  014C4E  0EFC               	movlw	-4
 28592  014C50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28593  014C56  D009               	goto	l8058
 28594  014C58                     l8056:
 28595                           
 28596                           ;stkvar	_grs @ sp[(-4)+0]
 28597  014C58  50E1               	movf	fsr1l,w,c
 28598  014C5A  0FFC               	addlw	-4
 28599  014C5C  6ED9               	movwf	fsr2l,c
 28600  014C5E  50E2               	movf	fsr1h,w,c
 28601  014C60  6EDA               	movwf	fsr2h,c
 28602  014C62  0EFF               	movlw	255
 28603  014C64  22DA               	addwfc	fsr2h,f,c
 28604  014C66  90D8               	bcf	status,0,c
 28605  014C68  36DF               	rlcf	indf2,f,c
 28606  014C6A                     l8058:
 28607                           
 28608                           ;stkvar	_bexp @ sp[(-4)+1]
 28609  014C6A  0EFD               	movlw	-3
 28610  014C6C  50E3               	movf	plusw1,w,c
 28611  014C6E  B4D8               	btfsc	status,2,c
 28612  014C70  D002               	goto	l8062
 28613                           
 28614                           ;stkvar	_bexp @ sp[(-4)+1]
 28615  014C72  0EFD               	movlw	-3
 28616  014C74  06E3               	decf	plusw1,f,c
 28617  014C76                     l8062:
 28618                           
 28619                           ;stkvar	_b @ sp[(-4)+-4]
 28620  014C76  0EFA               	movlw	-6
 28621  014C78  AEE3               	btfss	plusw1,7,c
 28622  014C7A  D7CF               	goto	l8048
 28623  014C7C                     u5820:
 28624                           
 28625                           ;stkvar	_aexp @ sp[(-4)+2]
 28626  014C7C  0EFE               	movlw	-2
 28627  014C7E  6AE3               	clrf	plusw1,c
 28628                           
 28629                           ;stkvar	_grs @ sp[(-4)+0]
 28630  014C80  0EFC               	movlw	-4
 28631  014C82  AEE3               	btfss	plusw1,7,c
 28632  014C84  D00F               	goto	l8076
 28633                           
 28634                           ;stkvar	_grs @ sp[(-4)+0]
 28635  014C86  0EFC               	movlw	-4
 28636  014C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28637  014C8E  0E7F               	movlw	127
 28638  014C90  160C               	andwf	(btemp+11)^0,f,c
 28639  014C92  B4D8               	btfsc	status,2,c
 28640  014C94  D004               	goto	l8072
 28641  014C96                     u5840:
 28642                           
 28643                           ;stkvar	_aexp @ sp[(-4)+2]
 28644  014C96  0EFE               	movlw	-2
 28645  014C98  6AE3               	clrf	plusw1,c
 28646  014C9A  2AE3               	incf	plusw1,f,c
 28647  014C9C  D003               	goto	l8076
 28648  014C9E                     l8072:
 28649                           
 28650                           ;stkvar	_b @ sp[(-4)+-4]
 28651  014C9E  0EF8               	movlw	-8
 28652  014CA0  B0E3               	btfsc	plusw1,0,c
 28653  014CA2  D7F9               	goto	u5840
 28654  014CA4                     l8076:
 28655                           
 28656                           ;stkvar	_aexp @ sp[(-4)+2]
 28657  014CA4  0EFE               	movlw	-2
 28658  014CA6  50E3               	movf	plusw1,w,c
 28659  014CA8  B4D8               	btfsc	status,2,c
 28660  014CAA  D02B               	goto	l8088
 28661                           
 28662                           ;stkvar	_b @ sp[(-4)+-4]
 28663  014CAC  50E1               	movf	fsr1l,w,c
 28664  014CAE  0FF8               	addlw	-8
 28665  014CB0  6ED9               	movwf	fsr2l,c
 28666  014CB2  50E2               	movf	fsr1h,w,c
 28667  014CB4  6EDA               	movwf	fsr2h,c
 28668  014CB6  0EFF               	movlw	255
 28669  014CB8  22DA               	addwfc	fsr2h,f,c
 28670  014CBA  2ADE               	incf	postinc2,f,c
 28671  014CBC  0E00               	movlw	0
 28672  014CBE  22DE               	addwfc	postinc2,f,c
 28673  014CC0  22DE               	addwfc	postinc2,f,c
 28674  014CC2  22DE               	addwfc	postinc2,f,c
 28675                           
 28676                           ;stkvar	_b @ sp[(-4)+-4]
 28677  014CC4  0EFB               	movlw	-5
 28678  014CC6  A0E3               	btfss	plusw1,0,c
 28679  014CC8  D01C               	goto	l8088
 28680  014CCA  0E01               	movlw	1
 28681  014CCC  6E0C               	movwf	(btemp+11)^0,c
 28682                           
 28683                           ;stkvar	_b @ sp[(-4)+-4]
 28684  014CCE  50E1               	movf	fsr1l,w,c
 28685  014CD0  0FF8               	addlw	-8
 28686  014CD2  6ED9               	movwf	fsr2l,c
 28687  014CD4  50E2               	movf	fsr1h,w,c
 28688  014CD6  6EDA               	movwf	fsr2h,c
 28689  014CD8  0EFF               	movlw	255
 28690  014CDA  22DA               	addwfc	fsr2h,f,c
 28691  014CDC  280C               	incf	(btemp+11)^0,w,c
 28692  014CDE  52DE               	movf	postinc2,f,c
 28693  014CE0  D008               	goto	u5880
 28694  014CE2                     u5885:
 28695  014CE2  52DE               	movf	postinc2,f,c
 28696  014CE4  90D8               	bcf	status,0,c
 28697  014CE6  BEDC               	btfsc	preinc2,7,c
 28698  014CE8  80D8               	bsf	status,0,c
 28699  014CEA  32DD               	rrcf	postdec2,f,c
 28700  014CEC  32DD               	rrcf	postdec2,f,c
 28701  014CEE  32DD               	rrcf	postdec2,f,c
 28702  014CF0  32DE               	rrcf	postinc2,f,c
 28703  014CF2                     u5880:
 28704  014CF2  2EE8               	decfsz	wreg,f,c
 28705  014CF4  D7F6               	goto	u5885
 28706                           
 28707                           ;stkvar	_bexp @ sp[(-4)+1]
 28708  014CF6  0EFD               	movlw	-3
 28709  014CF8  28E3               	incf	plusw1,w,c
 28710  014CFA  B4D8               	btfsc	status,2,c
 28711  014CFC  D002               	goto	l8088
 28712                           
 28713                           ;stkvar	_bexp @ sp[(-4)+1]
 28714  014CFE  0EFD               	movlw	-3
 28715  014D00  2AE3               	incf	plusw1,f,c
 28716  014D02                     l8088:
 28717                           
 28718                           ;stkvar	_bexp @ sp[(-4)+1]
 28719  014D02  0EFD               	movlw	-3
 28720  014D04  28E3               	incf	plusw1,w,c
 28721  014D06  B4D8               	btfsc	status,2,c
 28722  014D08  D004               	goto	u5910
 28723                           
 28724                           ;stkvar	_bexp @ sp[(-4)+1]
 28725  014D0A  0EFD               	movlw	-3
 28726  014D0C  50E3               	movf	plusw1,w,c
 28727  014D0E  A4D8               	btfss	status,2,c
 28728  014D10  D00E               	goto	l8098
 28729  014D12                     u5910:
 28730                           
 28731                           ;stkvar	_b @ sp[(-4)+-4]
 28732  014D12  0EF8               	movlw	-8
 28733  014D14  6AE3               	clrf	plusw1,c
 28734  014D16  0EF9               	movlw	-7
 28735  014D18  6AE3               	clrf	plusw1,c
 28736  014D1A  0EFA               	movlw	-6
 28737  014D1C  6AE3               	clrf	plusw1,c
 28738  014D1E  0EFB               	movlw	-5
 28739  014D20  6AE3               	clrf	plusw1,c
 28740                           
 28741                           ;stkvar	_bexp @ sp[(-4)+1]
 28742  014D22  0EFD               	movlw	-3
 28743  014D24  50E3               	movf	plusw1,w,c
 28744  014D26  A4D8               	btfss	status,2,c
 28745  014D28  D002               	goto	l8098
 28746                           
 28747                           ;stkvar	_signs @ sp[(-4)+3]
 28748  014D2A  0EFF               	movlw	-1
 28749  014D2C  6AE3               	clrf	plusw1,c
 28750  014D2E                     l8098:
 28751                           
 28752                           ;stkvar	_bexp @ sp[(-4)+1]
 28753  014D2E  0EFD               	movlw	-3
 28754  014D30  A0E3               	btfss	plusw1,0,c
 28755  014D32  D009               	goto	l8102
 28756                           
 28757                           ;stkvar	_b @ sp[(-4)+-4]
 28758  014D34  0EFA               	movlw	250
 28759  014D36  24E1               	addwf	fsr1l,w,c
 28760  014D38  6ED9               	movwf	fsr2l,c
 28761  014D3A  0EFF               	movlw	255
 28762  014D3C  20E2               	addwfc	fsr1h,w,c
 28763  014D3E  6EDA               	movwf	fsr2h,c
 28764  014D40  0E00               	movlw	0
 28765  014D42  8EDB               	bsf	plusw2,7,c
 28766  014D44  D008               	goto	l8104
 28767  014D46                     l8102:
 28768                           
 28769                           ;stkvar	_b @ sp[(-4)+-4]
 28770  014D46  0EFA               	movlw	250
 28771  014D48  24E1               	addwf	fsr1l,w,c
 28772  014D4A  6ED9               	movwf	fsr2l,c
 28773  014D4C  0EFF               	movlw	255
 28774  014D4E  20E2               	addwfc	fsr1h,w,c
 28775  014D50  6EDA               	movwf	fsr2h,c
 28776  014D52  0E7F               	movlw	127
 28777  014D54  16DF               	andwf	indf2,f,c
 28778  014D56                     l8104:
 28779                           
 28780                           ;stkvar	_b @ sp[(-4)+-4]
 28781  014D56  0EFB               	movlw	251
 28782  014D58  24E1               	addwf	fsr1l,w,c
 28783  014D5A  6ED9               	movwf	fsr2l,c
 28784  014D5C  0EFF               	movlw	255
 28785  014D5E  20E2               	addwfc	fsr1h,w,c
 28786  014D60  6EDA               	movwf	fsr2h,c
 28787                           
 28788                           ;stkvar	_bexp @ sp[(-4)+1]
 28789  014D62  0EFD               	movlw	-3
 28790  014D64  006F FF8C  F00C    	movff	plusw1,btemp+11
 28791  014D6A  90D8               	bcf	status,0,c
 28792  014D6C  300C               	rrcf	(btemp+11)^0,w,c
 28793  014D6E  6EDF               	movwf	indf2,c
 28794                           
 28795                           ;stkvar	_signs @ sp[(-4)+3]
 28796  014D70  0EFF               	movlw	-1
 28797  014D72  AEE3               	btfss	plusw1,7,c
 28798  014D74  D008               	goto	l8110
 28799                           
 28800                           ;stkvar	_b @ sp[(-4)+-4]
 28801  014D76  0EFB               	movlw	251
 28802  014D78  24E1               	addwf	fsr1l,w,c
 28803  014D7A  6ED9               	movwf	fsr2l,c
 28804  014D7C  0EFF               	movlw	255
 28805  014D7E  20E2               	addwfc	fsr1h,w,c
 28806  014D80  6EDA               	movwf	fsr2h,c
 28807  014D82  0E00               	movlw	0
 28808  014D84  8EDB               	bsf	plusw2,7,c
 28809  014D86                     l8110:
 28810                           
 28811                           ;stkvar	_b @ sp[(-4)+-4]
 28812  014D86  0EF8               	movlw	-8
 28813  014D88  006F FF8C  F001    	movff	plusw1,btemp
 28814  014D8E  0EF9               	movlw	-7
 28815  014D90  006F FF8C  F002    	movff	plusw1,btemp+1
 28816  014D96  0EFA               	movlw	-6
 28817  014D98  006F FF8C  F003    	movff	plusw1,btemp+2
 28818  014D9E  0EFB               	movlw	-5
 28819  014DA0  006F FF8C  F004    	movff	plusw1,btemp+3
 28820  014DA6                     l3018:
 28821                           
 28822                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28823  014DA6  0EF4               	movlw	244
 28824  014DA8  26E1               	addwf	fsr1l,f,c
 28825  014DAA  0EFF               	movlw	255
 28826  014DAC  22E2               	addwfc	fsr1h,f,c
 28827  014DAE  0012               	return		;funcret
 28828  014DB0                     __end_of___fladd:
 28829                           	opt callstack 0
 28830                           
 28831 ;; *************** function ___flmul *****************
 28832 ;; Defined at:
 28833 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28834 ;; Parameters:    Size  Location     Type
 28835 ;;  b               4  [STACK] unsigned char 
 28836 ;;  a               4  [STACK] unsigned char 
 28837 ;; Auto vars:     Size  Location     Type
 28838 ;;  prod            4  [STACK] struct .
 28839 ;;  grs             4  [STACK] unsigned long 
 28840 ;;  temp            2  [STACK] struct .
 28841 ;;  bexp            1  [STACK] unsigned char 
 28842 ;;  aexp            1  [STACK] unsigned char 
 28843 ;;  sign            1  [STACK] unsigned char 
 28844 ;; Return value:  Size  Location     Type
 28845 ;;                  4  [STACK] unsigned char 
 28846 ;; Registers used:
 28847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28848 ;; Tracked objects:
 28849 ;;		On entry : 0/0
 28850 ;;		On exit  : 0/0
 28851 ;;		Unchanged: 0/0
 28852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28857 ;;Total ram usage:        0 bytes
 28858 ;; Hardware stack levels used:    1
 28859 ;; Hardware stack levels required when called:   15
 28860 ;; This function calls:
 28861 ;;		Nothing
 28862 ;; This function is called by:
 28863 ;;		_conv_raw_result
 28864 ;;		_lp_filter
 28865 ;;		_calc_model_data
 28866 ;;		_calc_bsoc
 28867 ;;		_init_bsoc
 28868 ;;		_efgtoa
 28869 ;; This function uses a reentrant model
 28870 ;;
 28871                           
 28872                           	psect	text113
 28873  013DCA                     __ptext113:
 28874                           	opt callstack 0
 28875  013DCA                     ___flmul:
 28876                           	opt callstack 0
 28877                           
 28878                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28879  013DCA  0E0D               	movlw	13
 28880  013DCC  26E1               	addwf	fsr1l,f,c
 28881  013DCE  0E00               	movlw	0
 28882  013DD0  22E2               	addwfc	fsr1h,f,c
 28883                           
 28884                           ;stkvar	_b @ sp[(-13)+-4]
 28885                           
 28886                           ;incstack = 0
 28887 ;; hardware stack exceeded
 28888  013DD2  0EF2               	movlw	242
 28889  013DD4  24E1               	addwf	fsr1l,w,c
 28890  013DD6  6ED9               	movwf	fsr2l,c
 28891  013DD8  0EFF               	movlw	255
 28892  013DDA  20E2               	addwfc	fsr1h,w,c
 28893  013DDC  6EDA               	movwf	fsr2h,c
 28894  013DDE  50DF               	movf	indf2,w,c
 28895  013DE0  6E0C               	movwf	(btemp+11)^0,c
 28896  013DE2  0E80               	movlw	128
 28897  013DE4  160C               	andwf	(btemp+11)^0,f,c
 28898                           
 28899                           ;stkvar	_sign @ sp[(-13)+12]
 28900  013DE6  0EFF               	movlw	-1
 28901  013DE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28902                           
 28903                           ;stkvar	_b @ sp[(-13)+-4]
 28904  013DEE  0EF2               	movlw	242
 28905  013DF0  24E1               	addwf	fsr1l,w,c
 28906  013DF2  6ED9               	movwf	fsr2l,c
 28907  013DF4  0EFF               	movlw	255
 28908  013DF6  20E2               	addwfc	fsr1h,w,c
 28909  013DF8  6EDA               	movwf	fsr2h,c
 28910  013DFA  50DF               	movf	indf2,w,c
 28911  013DFC  6E0C               	movwf	(btemp+11)^0,c
 28912  013DFE  90D8               	bcf	status,0,c
 28913  013E00  340C               	rlcf	(btemp+11)^0,w,c
 28914  013E02  6E0B               	movwf	(btemp+10)^0,c
 28915                           
 28916                           ;stkvar	_bexp @ sp[(-13)+10]
 28917  013E04  0EFD               	movlw	-3
 28918  013E06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28919                           
 28920                           ;stkvar	_b @ sp[(-13)+-4]
 28921  013E0C  0EF1               	movlw	241
 28922  013E0E  24E1               	addwf	fsr1l,w,c
 28923  013E10  6ED9               	movwf	fsr2l,c
 28924  013E12  0EFF               	movlw	255
 28925  013E14  20E2               	addwfc	fsr1h,w,c
 28926  013E16  6EDA               	movwf	fsr2h,c
 28927  013E18  AEDF               	btfss	indf2,7,c
 28928  013E1A  D002               	goto	l8536
 28929                           
 28930                           ;stkvar	_bexp @ sp[(-13)+10]
 28931  013E1C  0EFD               	movlw	-3
 28932  013E1E  80E3               	bsf	plusw1,0,c
 28933  013E20                     l8536:
 28934                           
 28935                           ;stkvar	_bexp @ sp[(-13)+10]
 28936  013E20  0EFD               	movlw	-3
 28937  013E22  50E3               	movf	plusw1,w,c
 28938  013E24  B4D8               	btfsc	status,2,c
 28939  013E26  D01F               	goto	l8544
 28940                           
 28941                           ;stkvar	_bexp @ sp[(-13)+10]
 28942  013E28  0EFD               	movlw	-3
 28943  013E2A  28E3               	incf	plusw1,w,c
 28944  013E2C  A4D8               	btfss	status,2,c
 28945  013E2E  D018               	goto	l8542
 28946  013E30  0E00               	movlw	0
 28947  013E32  6E09               	movwf	(btemp+8)^0,c
 28948  013E34  0E00               	movlw	0
 28949  013E36  6E0A               	movwf	(btemp+9)^0,c
 28950  013E38  0E00               	movlw	0
 28951  013E3A  6E0B               	movwf	(btemp+10)^0,c
 28952  013E3C  0E00               	movlw	0
 28953  013E3E  6E0C               	movwf	(btemp+11)^0,c
 28954                           
 28955                           ;stkvar	_b @ sp[(-13)+-4]
 28956  013E40  0EEF               	movlw	-17
 28957  013E42  0060  F027  FFE3   	movff	btemp+8,plusw1
 28958  013E48  0EF0               	movlw	-16
 28959  013E4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28960  013E50  0EF1               	movlw	-15
 28961  013E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28962  013E58  0EF2               	movlw	-14
 28963  013E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28964  013E60                     l8542:
 28965                           
 28966                           ;stkvar	_b @ sp[(-13)+-4]
 28967  013E60  0EF1               	movlw	-15
 28968  013E62  8EE3               	bsf	plusw1,7,c
 28969  013E64  D018               	goto	l8546
 28970  013E66                     l8544:
 28971  013E66  0E00               	movlw	0
 28972  013E68  6E09               	movwf	(btemp+8)^0,c
 28973  013E6A  0E00               	movlw	0
 28974  013E6C  6E0A               	movwf	(btemp+9)^0,c
 28975  013E6E  0E00               	movlw	0
 28976  013E70  6E0B               	movwf	(btemp+10)^0,c
 28977  013E72  0E00               	movlw	0
 28978  013E74  6E0C               	movwf	(btemp+11)^0,c
 28979                           
 28980                           ;stkvar	_b @ sp[(-13)+-4]
 28981  013E76  0EEF               	movlw	-17
 28982  013E78  0060  F027  FFE3   	movff	btemp+8,plusw1
 28983  013E7E  0EF0               	movlw	-16
 28984  013E80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28985  013E86  0EF1               	movlw	-15
 28986  013E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28987  013E8E  0EF2               	movlw	-14
 28988  013E90  0060  F033  FFE3   	movff	btemp+11,plusw1
 28989  013E96                     l8546:
 28990                           
 28991                           ;stkvar	_a @ sp[(-13)+-8]
 28992  013E96  0EEE               	movlw	238
 28993  013E98  24E1               	addwf	fsr1l,w,c
 28994  013E9A  6ED9               	movwf	fsr2l,c
 28995  013E9C  0EFF               	movlw	255
 28996  013E9E  20E2               	addwfc	fsr1h,w,c
 28997  013EA0  6EDA               	movwf	fsr2h,c
 28998  013EA2  50DF               	movf	indf2,w,c
 28999  013EA4  6E0C               	movwf	(btemp+11)^0,c
 29000  013EA6  0E80               	movlw	128
 29001  013EA8  160C               	andwf	(btemp+11)^0,f,c
 29002                           
 29003                           ;stkvar	_sign @ sp[(-13)+12]
 29004  013EAA  50E1               	movf	fsr1l,w,c
 29005  013EAC  0FFF               	addlw	-1
 29006  013EAE  6ED9               	movwf	fsr2l,c
 29007  013EB0  50E2               	movf	fsr1h,w,c
 29008  013EB2  6EDA               	movwf	fsr2h,c
 29009  013EB4  0EFF               	movlw	255
 29010  013EB6  22DA               	addwfc	fsr2h,f,c
 29011  013EB8  500C               	movf	(btemp+11)^0,w,c
 29012  013EBA  1ADF               	xorwf	indf2,f,c
 29013                           
 29014                           ;stkvar	_a @ sp[(-13)+-8]
 29015  013EBC  0EEE               	movlw	238
 29016  013EBE  24E1               	addwf	fsr1l,w,c
 29017  013EC0  6ED9               	movwf	fsr2l,c
 29018  013EC2  0EFF               	movlw	255
 29019  013EC4  20E2               	addwfc	fsr1h,w,c
 29020  013EC6  6EDA               	movwf	fsr2h,c
 29021  013EC8  50DF               	movf	indf2,w,c
 29022  013ECA  6E0C               	movwf	(btemp+11)^0,c
 29023  013ECC  90D8               	bcf	status,0,c
 29024  013ECE  340C               	rlcf	(btemp+11)^0,w,c
 29025  013ED0  6E0B               	movwf	(btemp+10)^0,c
 29026                           
 29027                           ;stkvar	_aexp @ sp[(-13)+11]
 29028  013ED2  0EFE               	movlw	-2
 29029  013ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29030                           
 29031                           ;stkvar	_a @ sp[(-13)+-8]
 29032  013EDA  0EED               	movlw	237
 29033  013EDC  24E1               	addwf	fsr1l,w,c
 29034  013EDE  6ED9               	movwf	fsr2l,c
 29035  013EE0  0EFF               	movlw	255
 29036  013EE2  20E2               	addwfc	fsr1h,w,c
 29037  013EE4  6EDA               	movwf	fsr2h,c
 29038  013EE6  AEDF               	btfss	indf2,7,c
 29039  013EE8  D002               	goto	l8554
 29040                           
 29041                           ;stkvar	_aexp @ sp[(-13)+11]
 29042  013EEA  0EFE               	movlw	-2
 29043  013EEC  80E3               	bsf	plusw1,0,c
 29044  013EEE                     l8554:
 29045                           
 29046                           ;stkvar	_aexp @ sp[(-13)+11]
 29047  013EEE  0EFE               	movlw	-2
 29048  013EF0  50E3               	movf	plusw1,w,c
 29049  013EF2  B4D8               	btfsc	status,2,c
 29050  013EF4  D01F               	goto	l8562
 29051                           
 29052                           ;stkvar	_aexp @ sp[(-13)+11]
 29053  013EF6  0EFE               	movlw	-2
 29054  013EF8  28E3               	incf	plusw1,w,c
 29055  013EFA  A4D8               	btfss	status,2,c
 29056  013EFC  D018               	goto	l8560
 29057  013EFE  0E00               	movlw	0
 29058  013F00  6E09               	movwf	(btemp+8)^0,c
 29059  013F02  0E00               	movlw	0
 29060  013F04  6E0A               	movwf	(btemp+9)^0,c
 29061  013F06  0E00               	movlw	0
 29062  013F08  6E0B               	movwf	(btemp+10)^0,c
 29063  013F0A  0E00               	movlw	0
 29064  013F0C  6E0C               	movwf	(btemp+11)^0,c
 29065                           
 29066                           ;stkvar	_a @ sp[(-13)+-8]
 29067  013F0E  0EEB               	movlw	-21
 29068  013F10  0060  F027  FFE3   	movff	btemp+8,plusw1
 29069  013F16  0EEC               	movlw	-20
 29070  013F18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29071  013F1E  0EED               	movlw	-19
 29072  013F20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29073  013F26  0EEE               	movlw	-18
 29074  013F28  0060  F033  FFE3   	movff	btemp+11,plusw1
 29075  013F2E                     l8560:
 29076                           
 29077                           ;stkvar	_a @ sp[(-13)+-8]
 29078  013F2E  0EED               	movlw	-19
 29079  013F30  8EE3               	bsf	plusw1,7,c
 29080  013F32  D018               	goto	l8564
 29081  013F34                     l8562:
 29082  013F34  0E00               	movlw	0
 29083  013F36  6E09               	movwf	(btemp+8)^0,c
 29084  013F38  0E00               	movlw	0
 29085  013F3A  6E0A               	movwf	(btemp+9)^0,c
 29086  013F3C  0E00               	movlw	0
 29087  013F3E  6E0B               	movwf	(btemp+10)^0,c
 29088  013F40  0E00               	movlw	0
 29089  013F42  6E0C               	movwf	(btemp+11)^0,c
 29090                           
 29091                           ;stkvar	_a @ sp[(-13)+-8]
 29092  013F44  0EEB               	movlw	-21
 29093  013F46  0060  F027  FFE3   	movff	btemp+8,plusw1
 29094  013F4C  0EEC               	movlw	-20
 29095  013F4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29096  013F54  0EED               	movlw	-19
 29097  013F56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29098  013F5C  0EEE               	movlw	-18
 29099  013F5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29100  013F64                     l8564:
 29101                           
 29102                           ;stkvar	_aexp @ sp[(-13)+11]
 29103  013F64  0EFE               	movlw	-2
 29104  013F66  50E3               	movf	plusw1,w,c
 29105  013F68  B4D8               	btfsc	status,2,c
 29106  013F6A  D004               	goto	u6900
 29107                           
 29108                           ;stkvar	_bexp @ sp[(-13)+10]
 29109  013F6C  0EFD               	movlw	-3
 29110  013F6E  50E3               	movf	plusw1,w,c
 29111  013F70  A4D8               	btfss	status,2,c
 29112  013F72  D009               	goto	l8572
 29113  013F74                     u6900:
 29114  013F74  0E00               	movlw	0
 29115  013F76  6E01               	movwf	btemp^0,c
 29116  013F78  0E00               	movlw	0
 29117  013F7A  6E02               	movwf	(btemp+1)^0,c
 29118  013F7C  0E00               	movlw	0
 29119  013F7E  6E03               	movwf	(btemp+2)^0,c
 29120  013F80  0E00               	movlw	0
 29121  013F82  6E04               	movwf	(btemp+3)^0,c
 29122  013F84  D332               	goto	l3099
 29123  013F86                     l8572:
 29124                           
 29125                           ;stkvar	_b @ sp[(-13)+-4]
 29126  013F86  0EEF               	movlw	-17
 29127  013F88  006F FF8C  F00C    	movff	plusw1,btemp+11
 29128                           
 29129                           ;stkvar	_a @ sp[(-13)+-8]
 29130  013F8E  0EED               	movlw	237
 29131  013F90  24E1               	addwf	fsr1l,w,c
 29132  013F92  6ED9               	movwf	fsr2l,c
 29133  013F94  0EFF               	movlw	255
 29134  013F96  20E2               	addwfc	fsr1h,w,c
 29135  013F98  6EDA               	movwf	fsr2h,c
 29136  013F9A  50DF               	movf	indf2,w,c
 29137  013F9C  020C               	mulwf	(btemp+11)^0,c
 29138                           
 29139                           ;stkvar	_temp @ sp[(-13)+8]
 29140  013F9E  0EFB               	movlw	-5
 29141  013FA0  006F FFCF FFE3     	movff	prodl,plusw1
 29142  013FA6  0EFC               	movlw	-4
 29143  013FA8  006F FFD3 FFE3     	movff	prodh,plusw1
 29144                           
 29145                           ;stkvar	_temp @ sp[(-13)+8]
 29146  013FAE  0EFB               	movlw	-5
 29147  013FB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29148  013FB6  0060  F030  F005   	movff	btemp+11,btemp+4
 29149  013FBC  6A06               	clrf	(btemp+5)^0,c
 29150  013FBE  6A07               	clrf	(btemp+6)^0,c
 29151  013FC0  6A08               	clrf	(btemp+7)^0,c
 29152                           
 29153                           ;stkvar	_grs @ sp[(-13)+4]
 29154  013FC2  0EF7               	movlw	-9
 29155  013FC4  0060  F017  FFE3   	movff	btemp+4,plusw1
 29156  013FCA  0EF8               	movlw	-8
 29157  013FCC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29158  013FD2  0EF9               	movlw	-7
 29159  013FD4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29160  013FDA  0EFA               	movlw	-6
 29161  013FDC  0060  F023  FFE3   	movff	btemp+7,plusw1
 29162                           
 29163                           ;stkvar	_temp @ sp[(-13)+8]
 29164  013FE2  0EFC               	movlw	252
 29165  013FE4  24E1               	addwf	fsr1l,w,c
 29166  013FE6  6ED9               	movwf	fsr2l,c
 29167  013FE8  0EFF               	movlw	255
 29168  013FEA  20E2               	addwfc	fsr1h,w,c
 29169  013FEC  6EDA               	movwf	fsr2h,c
 29170  013FEE  50DF               	movf	indf2,w,c
 29171  013FF0  6E0C               	movwf	(btemp+11)^0,c
 29172  013FF2  0060  F030  F005   	movff	btemp+11,btemp+4
 29173  013FF8  6A06               	clrf	(btemp+5)^0,c
 29174  013FFA  6A07               	clrf	(btemp+6)^0,c
 29175  013FFC  6A08               	clrf	(btemp+7)^0,c
 29176                           
 29177                           ;stkvar	_prod @ sp[(-13)+0]
 29178  013FFE  0EF3               	movlw	-13
 29179  014000  0060  F017  FFE3   	movff	btemp+4,plusw1
 29180  014006  0EF4               	movlw	-12
 29181  014008  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29182  01400E  0EF5               	movlw	-11
 29183  014010  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29184  014016  0EF6               	movlw	-10
 29185  014018  0060  F023  FFE3   	movff	btemp+7,plusw1
 29186                           
 29187                           ;stkvar	_b @ sp[(-13)+-4]
 29188  01401E  0EF0               	movlw	240
 29189  014020  24E1               	addwf	fsr1l,w,c
 29190  014022  6ED9               	movwf	fsr2l,c
 29191  014024  0EFF               	movlw	255
 29192  014026  20E2               	addwfc	fsr1h,w,c
 29193  014028  6EDA               	movwf	fsr2h,c
 29194  01402A  50DF               	movf	indf2,w,c
 29195  01402C  6E0C               	movwf	(btemp+11)^0,c
 29196                           
 29197                           ;stkvar	_a @ sp[(-13)+-8]
 29198  01402E  0EEC               	movlw	236
 29199  014030  24E1               	addwf	fsr1l,w,c
 29200  014032  6ED9               	movwf	fsr2l,c
 29201  014034  0EFF               	movlw	255
 29202  014036  20E2               	addwfc	fsr1h,w,c
 29203  014038  6EDA               	movwf	fsr2h,c
 29204  01403A  50DF               	movf	indf2,w,c
 29205  01403C  020C               	mulwf	(btemp+11)^0,c
 29206                           
 29207                           ;stkvar	_temp @ sp[(-13)+8]
 29208  01403E  0EFB               	movlw	-5
 29209  014040  006F FFCF FFE3     	movff	prodl,plusw1
 29210  014046  0EFC               	movlw	-4
 29211  014048  006F FFD3 FFE3     	movff	prodh,plusw1
 29212                           
 29213                           ;stkvar	_grs @ sp[(-13)+4]
 29214  01404E  50E1               	movf	fsr1l,w,c
 29215  014050  0FF7               	addlw	-9
 29216  014052  6ED9               	movwf	fsr2l,c
 29217  014054  50E2               	movf	fsr1h,w,c
 29218  014056  6EDA               	movwf	fsr2h,c
 29219  014058  0EFF               	movlw	255
 29220  01405A  22DA               	addwfc	fsr2h,f,c
 29221                           
 29222                           ;stkvar	_temp @ sp[(-13)+8]
 29223  01405C  0EFB               	movlw	-5
 29224  01405E  50E3               	movf	plusw1,w,c
 29225  014060  26DE               	addwf	postinc2,f,c
 29226  014062  0E00               	movlw	0
 29227  014064  22DE               	addwfc	postinc2,f,c
 29228  014066  22DE               	addwfc	postinc2,f,c
 29229  014068  22DE               	addwfc	postinc2,f,c
 29230                           
 29231                           ;stkvar	_prod @ sp[(-13)+0]
 29232  01406A  50E1               	movf	fsr1l,w,c
 29233  01406C  0FF3               	addlw	-13
 29234  01406E  6ED9               	movwf	fsr2l,c
 29235  014070  50E2               	movf	fsr1h,w,c
 29236  014072  6EDA               	movwf	fsr2h,c
 29237  014074  0EFF               	movlw	255
 29238  014076  22DA               	addwfc	fsr2h,f,c
 29239                           
 29240                           ;stkvar	_temp @ sp[(-13)+8]
 29241  014078  0EFC               	movlw	252
 29242  01407A  24E1               	addwf	fsr1l,w,c
 29243  01407C  6EE9               	movwf	fsr0l,c
 29244  01407E  0EFF               	movlw	255
 29245  014080  20E2               	addwfc	fsr1h,w,c
 29246  014082  6EEA               	movwf	fsr0h,c
 29247  014084  50EF               	movf	indf0,w,c
 29248  014086  26DE               	addwf	postinc2,f,c
 29249  014088  0E00               	movlw	0
 29250  01408A  22DE               	addwfc	postinc2,f,c
 29251  01408C  22DE               	addwfc	postinc2,f,c
 29252  01408E  22DE               	addwfc	postinc2,f,c
 29253                           
 29254                           ;stkvar	_b @ sp[(-13)+-4]
 29255  014090  0EF1               	movlw	241
 29256  014092  24E1               	addwf	fsr1l,w,c
 29257  014094  6ED9               	movwf	fsr2l,c
 29258  014096  0EFF               	movlw	255
 29259  014098  20E2               	addwfc	fsr1h,w,c
 29260  01409A  6EDA               	movwf	fsr2h,c
 29261  01409C  50DF               	movf	indf2,w,c
 29262  01409E  6E0C               	movwf	(btemp+11)^0,c
 29263                           
 29264                           ;stkvar	_a @ sp[(-13)+-8]
 29265  0140A0  0EEB               	movlw	-21
 29266  0140A2  50E3               	movf	plusw1,w,c
 29267  0140A4  020C               	mulwf	(btemp+11)^0,c
 29268                           
 29269                           ;stkvar	_temp @ sp[(-13)+8]
 29270  0140A6  0EFB               	movlw	-5
 29271  0140A8  006F FFCF FFE3     	movff	prodl,plusw1
 29272  0140AE  0EFC               	movlw	-4
 29273  0140B0  006F FFD3 FFE3     	movff	prodh,plusw1
 29274                           
 29275                           ;stkvar	_grs @ sp[(-13)+4]
 29276  0140B6  50E1               	movf	fsr1l,w,c
 29277  0140B8  0FF7               	addlw	-9
 29278  0140BA  6ED9               	movwf	fsr2l,c
 29279  0140BC  50E2               	movf	fsr1h,w,c
 29280  0140BE  6EDA               	movwf	fsr2h,c
 29281  0140C0  0EFF               	movlw	255
 29282  0140C2  22DA               	addwfc	fsr2h,f,c
 29283                           
 29284                           ;stkvar	_temp @ sp[(-13)+8]
 29285  0140C4  0EFB               	movlw	-5
 29286  0140C6  50E3               	movf	plusw1,w,c
 29287  0140C8  26DE               	addwf	postinc2,f,c
 29288  0140CA  0E00               	movlw	0
 29289  0140CC  22DE               	addwfc	postinc2,f,c
 29290  0140CE  22DE               	addwfc	postinc2,f,c
 29291  0140D0  22DE               	addwfc	postinc2,f,c
 29292                           
 29293                           ;stkvar	_prod @ sp[(-13)+0]
 29294  0140D2  50E1               	movf	fsr1l,w,c
 29295  0140D4  0FF3               	addlw	-13
 29296  0140D6  6ED9               	movwf	fsr2l,c
 29297  0140D8  50E2               	movf	fsr1h,w,c
 29298  0140DA  6EDA               	movwf	fsr2h,c
 29299  0140DC  0EFF               	movlw	255
 29300  0140DE  22DA               	addwfc	fsr2h,f,c
 29301                           
 29302                           ;stkvar	_temp @ sp[(-13)+8]
 29303  0140E0  0EFC               	movlw	252
 29304  0140E2  24E1               	addwf	fsr1l,w,c
 29305  0140E4  6EE9               	movwf	fsr0l,c
 29306  0140E6  0EFF               	movlw	255
 29307  0140E8  20E2               	addwfc	fsr1h,w,c
 29308  0140EA  6EEA               	movwf	fsr0h,c
 29309  0140EC  50EF               	movf	indf0,w,c
 29310  0140EE  26DE               	addwf	postinc2,f,c
 29311  0140F0  0E00               	movlw	0
 29312  0140F2  22DE               	addwfc	postinc2,f,c
 29313  0140F4  22DE               	addwfc	postinc2,f,c
 29314  0140F6  22DE               	addwfc	postinc2,f,c
 29315                           
 29316                           ;stkvar	_grs @ sp[(-13)+4]
 29317  0140F8  50E1               	movf	fsr1l,w,c
 29318  0140FA  0FF7               	addlw	-9
 29319  0140FC  6ED9               	movwf	fsr2l,c
 29320  0140FE  50E2               	movf	fsr1h,w,c
 29321  014100  6EDA               	movwf	fsr2h,c
 29322  014102  0EFF               	movlw	255
 29323  014104  22DA               	addwfc	fsr2h,f,c
 29324  014106  0E08               	movlw	8
 29325  014108                     u6915:
 29326  014108  90D8               	bcf	status,0,c
 29327  01410A  36DE               	rlcf	postinc2,f,c
 29328  01410C  36DE               	rlcf	postinc2,f,c
 29329  01410E  36DE               	rlcf	postinc2,f,c
 29330  014110  36DD               	rlcf	postdec2,f,c
 29331  014112  52DD               	movf	postdec2,f,c
 29332  014114  52DD               	movf	postdec2,f,c
 29333  014116  2EE8               	decfsz	wreg,f,c
 29334  014118  D7F7               	goto	u6915
 29335                           
 29336                           ;stkvar	_b @ sp[(-13)+-4]
 29337  01411A  0EF0               	movlw	240
 29338  01411C  24E1               	addwf	fsr1l,w,c
 29339  01411E  6ED9               	movwf	fsr2l,c
 29340  014120  0EFF               	movlw	255
 29341  014122  20E2               	addwfc	fsr1h,w,c
 29342  014124  6EDA               	movwf	fsr2h,c
 29343  014126  50DF               	movf	indf2,w,c
 29344  014128  6E0C               	movwf	(btemp+11)^0,c
 29345                           
 29346                           ;stkvar	_a @ sp[(-13)+-8]
 29347  01412A  0EEB               	movlw	-21
 29348  01412C  50E3               	movf	plusw1,w,c
 29349  01412E  020C               	mulwf	(btemp+11)^0,c
 29350                           
 29351                           ;stkvar	_temp @ sp[(-13)+8]
 29352  014130  0EFB               	movlw	-5
 29353  014132  006F FFCF FFE3     	movff	prodl,plusw1
 29354  014138  0EFC               	movlw	-4
 29355  01413A  006F FFD3 FFE3     	movff	prodh,plusw1
 29356                           
 29357                           ;stkvar	_temp @ sp[(-13)+8]
 29358  014140  0EFB               	movlw	-5
 29359  014142  006F FF8C  F00B    	movff	plusw1,btemp+10
 29360  014148  0EFC               	movlw	-4
 29361  01414A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29362                           
 29363                           ;stkvar	_grs @ sp[(-13)+4]
 29364  014150  50E1               	movf	fsr1l,w,c
 29365  014152  0FF7               	addlw	-9
 29366  014154  6ED9               	movwf	fsr2l,c
 29367  014156  50E2               	movf	fsr1h,w,c
 29368  014158  6EDA               	movwf	fsr2h,c
 29369  01415A  0EFF               	movlw	255
 29370  01415C  22DA               	addwfc	fsr2h,f,c
 29371  01415E  500B               	movf	(btemp+10)^0,w,c
 29372  014160  26DE               	addwf	postinc2,f,c
 29373  014162  500C               	movf	(btemp+11)^0,w,c
 29374  014164  22DE               	addwfc	postinc2,f,c
 29375  014166  0E00               	movlw	0
 29376  014168  22DE               	addwfc	postinc2,f,c
 29377  01416A  22DE               	addwfc	postinc2,f,c
 29378                           
 29379                           ;stkvar	_b @ sp[(-13)+-4]
 29380  01416C  0EEF               	movlw	-17
 29381  01416E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29382                           
 29383                           ;stkvar	_a @ sp[(-13)+-8]
 29384  014174  0EEC               	movlw	236
 29385  014176  24E1               	addwf	fsr1l,w,c
 29386  014178  6ED9               	movwf	fsr2l,c
 29387  01417A  0EFF               	movlw	255
 29388  01417C  20E2               	addwfc	fsr1h,w,c
 29389  01417E  6EDA               	movwf	fsr2h,c
 29390  014180  50DF               	movf	indf2,w,c
 29391  014182  020C               	mulwf	(btemp+11)^0,c
 29392                           
 29393                           ;stkvar	_temp @ sp[(-13)+8]
 29394  014184  0EFB               	movlw	-5
 29395  014186  006F FFCF FFE3     	movff	prodl,plusw1
 29396  01418C  0EFC               	movlw	-4
 29397  01418E  006F FFD3 FFE3     	movff	prodh,plusw1
 29398                           
 29399                           ;stkvar	_temp @ sp[(-13)+8]
 29400  014194  0EFB               	movlw	-5
 29401  014196  006F FF8C  F00B    	movff	plusw1,btemp+10
 29402  01419C  0EFC               	movlw	-4
 29403  01419E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29404                           
 29405                           ;stkvar	_grs @ sp[(-13)+4]
 29406  0141A4  50E1               	movf	fsr1l,w,c
 29407  0141A6  0FF7               	addlw	-9
 29408  0141A8  6ED9               	movwf	fsr2l,c
 29409  0141AA  50E2               	movf	fsr1h,w,c
 29410  0141AC  6EDA               	movwf	fsr2h,c
 29411  0141AE  0EFF               	movlw	255
 29412  0141B0  22DA               	addwfc	fsr2h,f,c
 29413  0141B2  500B               	movf	(btemp+10)^0,w,c
 29414  0141B4  26DE               	addwf	postinc2,f,c
 29415  0141B6  500C               	movf	(btemp+11)^0,w,c
 29416  0141B8  22DE               	addwfc	postinc2,f,c
 29417  0141BA  0E00               	movlw	0
 29418  0141BC  22DE               	addwfc	postinc2,f,c
 29419  0141BE  22DE               	addwfc	postinc2,f,c
 29420                           
 29421                           ;stkvar	_grs @ sp[(-13)+4]
 29422  0141C0  50E1               	movf	fsr1l,w,c
 29423  0141C2  0FF7               	addlw	-9
 29424  0141C4  6ED9               	movwf	fsr2l,c
 29425  0141C6  50E2               	movf	fsr1h,w,c
 29426  0141C8  6EDA               	movwf	fsr2h,c
 29427  0141CA  0EFF               	movlw	255
 29428  0141CC  22DA               	addwfc	fsr2h,f,c
 29429  0141CE  0E08               	movlw	8
 29430  0141D0                     u6925:
 29431  0141D0  90D8               	bcf	status,0,c
 29432  0141D2  36DE               	rlcf	postinc2,f,c
 29433  0141D4  36DE               	rlcf	postinc2,f,c
 29434  0141D6  36DE               	rlcf	postinc2,f,c
 29435  0141D8  36DD               	rlcf	postdec2,f,c
 29436  0141DA  52DD               	movf	postdec2,f,c
 29437  0141DC  52DD               	movf	postdec2,f,c
 29438  0141DE  2EE8               	decfsz	wreg,f,c
 29439  0141E0  D7F7               	goto	u6925
 29440                           
 29441                           ;stkvar	_b @ sp[(-13)+-4]
 29442  0141E2  0EEF               	movlw	-17
 29443  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29444                           
 29445                           ;stkvar	_a @ sp[(-13)+-8]
 29446  0141EA  0EEB               	movlw	-21
 29447  0141EC  50E3               	movf	plusw1,w,c
 29448  0141EE  020C               	mulwf	(btemp+11)^0,c
 29449                           
 29450                           ;stkvar	_temp @ sp[(-13)+8]
 29451  0141F0  0EFB               	movlw	-5
 29452  0141F2  006F FFCF FFE3     	movff	prodl,plusw1
 29453  0141F8  0EFC               	movlw	-4
 29454  0141FA  006F FFD3 FFE3     	movff	prodh,plusw1
 29455                           
 29456                           ;stkvar	_temp @ sp[(-13)+8]
 29457  014200  0EFB               	movlw	-5
 29458  014202  006F FF8C  F00B    	movff	plusw1,btemp+10
 29459  014208  0EFC               	movlw	-4
 29460  01420A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29461                           
 29462                           ;stkvar	_grs @ sp[(-13)+4]
 29463  014210  50E1               	movf	fsr1l,w,c
 29464  014212  0FF7               	addlw	-9
 29465  014214  6ED9               	movwf	fsr2l,c
 29466  014216  50E2               	movf	fsr1h,w,c
 29467  014218  6EDA               	movwf	fsr2h,c
 29468  01421A  0EFF               	movlw	255
 29469  01421C  22DA               	addwfc	fsr2h,f,c
 29470  01421E  500B               	movf	(btemp+10)^0,w,c
 29471  014220  26DE               	addwf	postinc2,f,c
 29472  014222  500C               	movf	(btemp+11)^0,w,c
 29473  014224  22DE               	addwfc	postinc2,f,c
 29474  014226  0E00               	movlw	0
 29475  014228  22DE               	addwfc	postinc2,f,c
 29476  01422A  22DE               	addwfc	postinc2,f,c
 29477                           
 29478                           ;stkvar	_b @ sp[(-13)+-4]
 29479  01422C  0EF0               	movlw	240
 29480  01422E  24E1               	addwf	fsr1l,w,c
 29481  014230  6ED9               	movwf	fsr2l,c
 29482  014232  0EFF               	movlw	255
 29483  014234  20E2               	addwfc	fsr1h,w,c
 29484  014236  6EDA               	movwf	fsr2h,c
 29485  014238  50DF               	movf	indf2,w,c
 29486  01423A  6E0C               	movwf	(btemp+11)^0,c
 29487                           
 29488                           ;stkvar	_a @ sp[(-13)+-8]
 29489  01423C  0EED               	movlw	237
 29490  01423E  24E1               	addwf	fsr1l,w,c
 29491  014240  6ED9               	movwf	fsr2l,c
 29492  014242  0EFF               	movlw	255
 29493  014244  20E2               	addwfc	fsr1h,w,c
 29494  014246  6EDA               	movwf	fsr2h,c
 29495  014248  50DF               	movf	indf2,w,c
 29496  01424A  020C               	mulwf	(btemp+11)^0,c
 29497                           
 29498                           ;stkvar	_temp @ sp[(-13)+8]
 29499  01424C  0EFB               	movlw	-5
 29500  01424E  006F FFCF FFE3     	movff	prodl,plusw1
 29501  014254  0EFC               	movlw	-4
 29502  014256  006F FFD3 FFE3     	movff	prodh,plusw1
 29503                           
 29504                           ;stkvar	_temp @ sp[(-13)+8]
 29505  01425C  0EFB               	movlw	-5
 29506  01425E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29507  014264  0EFC               	movlw	-4
 29508  014266  006F FF8C  F00C    	movff	plusw1,btemp+11
 29509                           
 29510                           ;stkvar	_prod @ sp[(-13)+0]
 29511  01426C  50E1               	movf	fsr1l,w,c
 29512  01426E  0FF3               	addlw	-13
 29513  014270  6ED9               	movwf	fsr2l,c
 29514  014272  50E2               	movf	fsr1h,w,c
 29515  014274  6EDA               	movwf	fsr2h,c
 29516  014276  0EFF               	movlw	255
 29517  014278  22DA               	addwfc	fsr2h,f,c
 29518  01427A  500B               	movf	(btemp+10)^0,w,c
 29519  01427C  26DE               	addwf	postinc2,f,c
 29520  01427E  500C               	movf	(btemp+11)^0,w,c
 29521  014280  22DE               	addwfc	postinc2,f,c
 29522  014282  0E00               	movlw	0
 29523  014284  22DE               	addwfc	postinc2,f,c
 29524  014286  22DE               	addwfc	postinc2,f,c
 29525                           
 29526                           ;stkvar	_b @ sp[(-13)+-4]
 29527  014288  0EF1               	movlw	241
 29528  01428A  24E1               	addwf	fsr1l,w,c
 29529  01428C  6ED9               	movwf	fsr2l,c
 29530  01428E  0EFF               	movlw	255
 29531  014290  20E2               	addwfc	fsr1h,w,c
 29532  014292  6EDA               	movwf	fsr2h,c
 29533  014294  50DF               	movf	indf2,w,c
 29534  014296  6E0C               	movwf	(btemp+11)^0,c
 29535                           
 29536                           ;stkvar	_a @ sp[(-13)+-8]
 29537  014298  0EEC               	movlw	236
 29538  01429A  24E1               	addwf	fsr1l,w,c
 29539  01429C  6ED9               	movwf	fsr2l,c
 29540  01429E  0EFF               	movlw	255
 29541  0142A0  20E2               	addwfc	fsr1h,w,c
 29542  0142A2  6EDA               	movwf	fsr2h,c
 29543  0142A4  50DF               	movf	indf2,w,c
 29544  0142A6  020C               	mulwf	(btemp+11)^0,c
 29545                           
 29546                           ;stkvar	_temp @ sp[(-13)+8]
 29547  0142A8  0EFB               	movlw	-5
 29548  0142AA  006F FFCF FFE3     	movff	prodl,plusw1
 29549  0142B0  0EFC               	movlw	-4
 29550  0142B2  006F FFD3 FFE3     	movff	prodh,plusw1
 29551                           
 29552                           ;stkvar	_temp @ sp[(-13)+8]
 29553  0142B8  0EFB               	movlw	-5
 29554  0142BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 29555  0142C0  0EFC               	movlw	-4
 29556  0142C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 29557                           
 29558                           ;stkvar	_prod @ sp[(-13)+0]
 29559  0142C8  50E1               	movf	fsr1l,w,c
 29560  0142CA  0FF3               	addlw	-13
 29561  0142CC  6ED9               	movwf	fsr2l,c
 29562  0142CE  50E2               	movf	fsr1h,w,c
 29563  0142D0  6EDA               	movwf	fsr2h,c
 29564  0142D2  0EFF               	movlw	255
 29565  0142D4  22DA               	addwfc	fsr2h,f,c
 29566  0142D6  500B               	movf	(btemp+10)^0,w,c
 29567  0142D8  26DE               	addwf	postinc2,f,c
 29568  0142DA  500C               	movf	(btemp+11)^0,w,c
 29569  0142DC  22DE               	addwfc	postinc2,f,c
 29570  0142DE  0E00               	movlw	0
 29571  0142E0  22DE               	addwfc	postinc2,f,c
 29572  0142E2  22DE               	addwfc	postinc2,f,c
 29573                           
 29574                           ;stkvar	_b @ sp[(-13)+-4]
 29575  0142E4  0EF1               	movlw	241
 29576  0142E6  24E1               	addwf	fsr1l,w,c
 29577  0142E8  6ED9               	movwf	fsr2l,c
 29578  0142EA  0EFF               	movlw	255
 29579  0142EC  20E2               	addwfc	fsr1h,w,c
 29580  0142EE  6EDA               	movwf	fsr2h,c
 29581  0142F0  50DF               	movf	indf2,w,c
 29582  0142F2  6E0C               	movwf	(btemp+11)^0,c
 29583                           
 29584                           ;stkvar	_a @ sp[(-13)+-8]
 29585  0142F4  0EED               	movlw	237
 29586  0142F6  24E1               	addwf	fsr1l,w,c
 29587  0142F8  6ED9               	movwf	fsr2l,c
 29588  0142FA  0EFF               	movlw	255
 29589  0142FC  20E2               	addwfc	fsr1h,w,c
 29590  0142FE  6EDA               	movwf	fsr2h,c
 29591  014300  50DF               	movf	indf2,w,c
 29592  014302  020C               	mulwf	(btemp+11)^0,c
 29593                           
 29594                           ;stkvar	_temp @ sp[(-13)+8]
 29595  014304  0EFB               	movlw	-5
 29596  014306  006F FFCF FFE3     	movff	prodl,plusw1
 29597  01430C  0EFC               	movlw	-4
 29598  01430E  006F FFD3 FFE3     	movff	prodh,plusw1
 29599                           
 29600                           ;stkvar	_temp @ sp[(-13)+8]
 29601  014314  0EFB               	movlw	-5
 29602  014316  006F FF8C  F00B    	movff	plusw1,btemp+10
 29603  01431C  0EFC               	movlw	-4
 29604  01431E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29605  014324  500B               	movf	(btemp+10)^0,w,c
 29606  014326  6E05               	movwf	(btemp+4)^0,c
 29607  014328  500C               	movf	(btemp+11)^0,w,c
 29608  01432A  6E06               	movwf	(btemp+5)^0,c
 29609  01432C  6A07               	clrf	(btemp+6)^0,c
 29610  01432E  6A08               	clrf	(btemp+7)^0,c
 29611  014330  0060  F01C  F008   	movff	btemp+6,btemp+7
 29612  014336  0060  F018  F007   	movff	btemp+5,btemp+6
 29613  01433C  0060  F014  F006   	movff	btemp+4,btemp+5
 29614  014342  6A05               	clrf	(btemp+4)^0,c
 29615                           
 29616                           ;stkvar	_prod @ sp[(-13)+0]
 29617  014344  50E1               	movf	fsr1l,w,c
 29618  014346  0FF3               	addlw	-13
 29619  014348  6ED9               	movwf	fsr2l,c
 29620  01434A  50E2               	movf	fsr1h,w,c
 29621  01434C  6EDA               	movwf	fsr2h,c
 29622  01434E  0EFF               	movlw	255
 29623  014350  22DA               	addwfc	fsr2h,f,c
 29624  014352  5005               	movf	(btemp+4)^0,w,c
 29625  014354  26DE               	addwf	postinc2,f,c
 29626  014356  5006               	movf	(btemp+5)^0,w,c
 29627  014358  22DE               	addwfc	postinc2,f,c
 29628  01435A  5007               	movf	(btemp+6)^0,w,c
 29629  01435C  22DE               	addwfc	postinc2,f,c
 29630  01435E  5008               	movf	(btemp+7)^0,w,c
 29631  014360  22DE               	addwfc	postinc2,f,c
 29632                           
 29633                           ;stkvar	_prod @ sp[(-13)+0]
 29634  014362  50E1               	movf	fsr1l,w,c
 29635  014364  0FF3               	addlw	-13
 29636  014366  6ED9               	movwf	fsr2l,c
 29637  014368  50E2               	movf	fsr1h,w,c
 29638  01436A  6EDA               	movwf	fsr2h,c
 29639  01436C  0EFF               	movlw	255
 29640  01436E  22DA               	addwfc	fsr2h,f,c
 29641                           
 29642                           ;stkvar	_grs @ sp[(-13)+4]
 29643  014370  0EFA               	movlw	250
 29644  014372  24E1               	addwf	fsr1l,w,c
 29645  014374  6EE9               	movwf	fsr0l,c
 29646  014376  0EFF               	movlw	255
 29647  014378  20E2               	addwfc	fsr1h,w,c
 29648  01437A  6EEA               	movwf	fsr0h,c
 29649  01437C  50EF               	movf	indf0,w,c
 29650  01437E  26DE               	addwf	postinc2,f,c
 29651  014380  0E00               	movlw	0
 29652  014382  22DE               	addwfc	postinc2,f,c
 29653  014384  22DE               	addwfc	postinc2,f,c
 29654  014386  22DE               	addwfc	postinc2,f,c
 29655                           
 29656                           ;stkvar	_grs @ sp[(-13)+4]
 29657  014388  50E1               	movf	fsr1l,w,c
 29658  01438A  0FF7               	addlw	-9
 29659  01438C  6ED9               	movwf	fsr2l,c
 29660  01438E  50E2               	movf	fsr1h,w,c
 29661  014390  6EDA               	movwf	fsr2h,c
 29662  014392  0EFF               	movlw	255
 29663  014394  22DA               	addwfc	fsr2h,f,c
 29664  014396  0E08               	movlw	8
 29665  014398                     u6935:
 29666  014398  90D8               	bcf	status,0,c
 29667  01439A  36DE               	rlcf	postinc2,f,c
 29668  01439C  36DE               	rlcf	postinc2,f,c
 29669  01439E  36DE               	rlcf	postinc2,f,c
 29670  0143A0  36DD               	rlcf	postdec2,f,c
 29671  0143A2  52DD               	movf	postdec2,f,c
 29672  0143A4  52DD               	movf	postdec2,f,c
 29673  0143A6  2EE8               	decfsz	wreg,f,c
 29674  0143A8  D7F7               	goto	u6935
 29675  0143AA  0E82               	movlw	130
 29676  0143AC  6E0B               	movwf	(btemp+10)^0,c
 29677  0143AE  0EFF               	movlw	255
 29678  0143B0  6E0C               	movwf	(btemp+11)^0,c
 29679                           
 29680                           ;stkvar	_bexp @ sp[(-13)+10]
 29681  0143B2  0EFD               	movlw	-3
 29682  0143B4  50E3               	movf	plusw1,w,c
 29683  0143B6  6E09               	movwf	(btemp+8)^0,c
 29684  0143B8  6A0A               	clrf	(btemp+9)^0,c
 29685                           
 29686                           ;stkvar	_aexp @ sp[(-13)+11]
 29687  0143BA  0EFE               	movlw	-2
 29688  0143BC  50E3               	movf	plusw1,w,c
 29689  0143BE  2609               	addwf	(btemp+8)^0,f,c
 29690  0143C0  0E00               	movlw	0
 29691  0143C2  220A               	addwfc	(btemp+9)^0,f,c
 29692  0143C4  500B               	movf	(btemp+10)^0,w,c
 29693  0143C6  2609               	addwf	(btemp+8)^0,f,c
 29694  0143C8  500C               	movf	(btemp+11)^0,w,c
 29695  0143CA  220A               	addwfc	(btemp+9)^0,f,c
 29696                           
 29697                           ;stkvar	_temp @ sp[(-13)+8]
 29698  0143CC  0EFB               	movlw	-5
 29699  0143CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29700  0143D4  0EFC               	movlw	-4
 29701  0143D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29702  0143DC  D021               	goto	l8634
 29703  0143DE                     l8624:
 29704                           
 29705                           ;stkvar	_prod @ sp[(-13)+0]
 29706  0143DE  90D8               	bcf	status,0,c
 29707  0143E0  0EF3               	movlw	-13
 29708  0143E2  36E3               	rlcf	plusw1,f,c
 29709  0143E4  0EF4               	movlw	-12
 29710  0143E6  36E3               	rlcf	plusw1,f,c
 29711  0143E8  0EF5               	movlw	-11
 29712  0143EA  36E3               	rlcf	plusw1,f,c
 29713  0143EC  0EF6               	movlw	-10
 29714  0143EE  36E3               	rlcf	plusw1,f,c
 29715                           
 29716                           ;stkvar	_grs @ sp[(-13)+4]
 29717  0143F0  0EFA               	movlw	-6
 29718  0143F2  AEE3               	btfss	plusw1,7,c
 29719  0143F4  D002               	goto	l8630
 29720                           
 29721                           ;stkvar	_prod @ sp[(-13)+0]
 29722  0143F6  0EF3               	movlw	-13
 29723  0143F8  80E3               	bsf	plusw1,0,c
 29724  0143FA                     l8630:
 29725                           
 29726                           ;stkvar	_grs @ sp[(-13)+4]
 29727  0143FA  90D8               	bcf	status,0,c
 29728  0143FC  0EF7               	movlw	-9
 29729  0143FE  36E3               	rlcf	plusw1,f,c
 29730  014400  0EF8               	movlw	-8
 29731  014402  36E3               	rlcf	plusw1,f,c
 29732  014404  0EF9               	movlw	-7
 29733  014406  36E3               	rlcf	plusw1,f,c
 29734  014408  0EFA               	movlw	-6
 29735  01440A  36E3               	rlcf	plusw1,f,c
 29736                           
 29737                           ;stkvar	_temp @ sp[(-13)+8]
 29738  01440C  50E1               	movf	fsr1l,w,c
 29739  01440E  0FFB               	addlw	-5
 29740  014410  6ED9               	movwf	fsr2l,c
 29741  014412  50E2               	movf	fsr1h,w,c
 29742  014414  6EDA               	movwf	fsr2h,c
 29743  014416  0EFF               	movlw	255
 29744  014418  22DA               	addwfc	fsr2h,f,c
 29745  01441A  06DE               	decf	postinc2,f,c
 29746  01441C  0E00               	movlw	0
 29747  01441E  5ADD               	subwfb	postdec2,f,c
 29748  014420                     l8634:
 29749                           
 29750                           ;stkvar	_prod @ sp[(-13)+0]
 29751  014420  0EF5               	movlw	-11
 29752  014422  AEE3               	btfss	plusw1,7,c
 29753  014424  D7DC               	goto	l8624
 29754                           
 29755                           ;stkvar	_aexp @ sp[(-13)+11]
 29756  014426  0EFE               	movlw	-2
 29757  014428  6AE3               	clrf	plusw1,c
 29758                           
 29759                           ;stkvar	_grs @ sp[(-13)+4]
 29760  01442A  0EFA               	movlw	-6
 29761  01442C  AEE3               	btfss	plusw1,7,c
 29762  01442E  D020               	goto	l8648
 29763                           
 29764                           ;stkvar	_grs @ sp[(-13)+4]
 29765  014430  50E1               	movf	fsr1l,w,c
 29766  014432  0FF7               	addlw	-9
 29767  014434  6ED9               	movwf	fsr2l,c
 29768  014436  50E2               	movf	fsr1h,w,c
 29769  014438  6EDA               	movwf	fsr2h,c
 29770  01443A  0EFF               	movlw	255
 29771  01443C  22DA               	addwfc	fsr2h,f,c
 29772  01443E  0EFF               	movlw	255
 29773  014440  14DE               	andwf	postinc2,w,c
 29774  014442  6E09               	movwf	(btemp+8)^0,c
 29775  014444  0EFF               	movlw	255
 29776  014446  14DE               	andwf	postinc2,w,c
 29777  014448  6E0A               	movwf	(btemp+9)^0,c
 29778  01444A  0EFF               	movlw	255
 29779  01444C  14DE               	andwf	postinc2,w,c
 29780  01444E  6E0B               	movwf	(btemp+10)^0,c
 29781  014450  0E7F               	movlw	127
 29782  014452  14DE               	andwf	postinc2,w,c
 29783  014454  6E0C               	movwf	(btemp+11)^0,c
 29784  014456  5009               	movf	(btemp+8)^0,w,c
 29785  014458  100A               	iorwf	(btemp+9)^0,w,c
 29786  01445A  100B               	iorwf	(btemp+10)^0,w,c
 29787  01445C  100C               	iorwf	(btemp+11)^0,w,c
 29788  01445E  B4D8               	btfsc	status,2,c
 29789  014460  D004               	goto	l8644
 29790  014462                     u6970:
 29791                           
 29792                           ;stkvar	_aexp @ sp[(-13)+11]
 29793  014462  0EFE               	movlw	-2
 29794  014464  6AE3               	clrf	plusw1,c
 29795  014466  2AE3               	incf	plusw1,f,c
 29796  014468  D003               	goto	l8648
 29797  01446A                     l8644:
 29798                           
 29799                           ;stkvar	_prod @ sp[(-13)+0]
 29800  01446A  0EF3               	movlw	-13
 29801  01446C  B0E3               	btfsc	plusw1,0,c
 29802  01446E  D7F9               	goto	u6970
 29803  014470                     l8648:
 29804                           
 29805                           ;stkvar	_aexp @ sp[(-13)+11]
 29806  014470  0EFE               	movlw	-2
 29807  014472  50E3               	movf	plusw1,w,c
 29808  014474  B4D8               	btfsc	status,2,c
 29809  014476  D036               	goto	l8658
 29810                           
 29811                           ;stkvar	_prod @ sp[(-13)+0]
 29812  014478  50E1               	movf	fsr1l,w,c
 29813  01447A  0FF3               	addlw	-13
 29814  01447C  6ED9               	movwf	fsr2l,c
 29815  01447E  50E2               	movf	fsr1h,w,c
 29816  014480  6EDA               	movwf	fsr2h,c
 29817  014482  0EFF               	movlw	255
 29818  014484  22DA               	addwfc	fsr2h,f,c
 29819  014486  2ADE               	incf	postinc2,f,c
 29820  014488  0E00               	movlw	0
 29821  01448A  22DE               	addwfc	postinc2,f,c
 29822  01448C  22DE               	addwfc	postinc2,f,c
 29823  01448E  22DE               	addwfc	postinc2,f,c
 29824                           
 29825                           ;stkvar	_prod @ sp[(-13)+0]
 29826  014490  0EF6               	movlw	-10
 29827  014492  A0E3               	btfss	plusw1,0,c
 29828  014494  D027               	goto	l8658
 29829  014496  0E01               	movlw	1
 29830  014498  6E0C               	movwf	(btemp+11)^0,c
 29831                           
 29832                           ;stkvar	_prod @ sp[(-13)+0]
 29833  01449A  50E1               	movf	fsr1l,w,c
 29834  01449C  0FF3               	addlw	-13
 29835  01449E  6ED9               	movwf	fsr2l,c
 29836  0144A0  50E2               	movf	fsr1h,w,c
 29837  0144A2  6EDA               	movwf	fsr2h,c
 29838  0144A4  0EFF               	movlw	255
 29839  0144A6  22DA               	addwfc	fsr2h,f,c
 29840  0144A8  280C               	incf	(btemp+11)^0,w,c
 29841  0144AA  52DE               	movf	postinc2,f,c
 29842  0144AC  D008               	goto	u7010
 29843  0144AE                     u7015:
 29844  0144AE  52DE               	movf	postinc2,f,c
 29845  0144B0  90D8               	bcf	status,0,c
 29846  0144B2  BEDC               	btfsc	preinc2,7,c
 29847  0144B4  80D8               	bsf	status,0,c
 29848  0144B6  32DD               	rrcf	postdec2,f,c
 29849  0144B8  32DD               	rrcf	postdec2,f,c
 29850  0144BA  32DD               	rrcf	postdec2,f,c
 29851  0144BC  32DE               	rrcf	postinc2,f,c
 29852  0144BE                     u7010:
 29853  0144BE  2EE8               	decfsz	wreg,f,c
 29854  0144C0  D7F6               	goto	u7015
 29855                           
 29856                           ;stkvar	_temp @ sp[(-13)+8]
 29857  0144C2  0EFB               	movlw	-5
 29858  0144C4  50E3               	movf	plusw1,w,c
 29859  0144C6  0F01               	addlw	1
 29860  0144C8  6E01               	movwf	btemp^0,c
 29861  0144CA  0EFB               	movlw	-5
 29862  0144CC  0060  F007  FFE3   	movff	btemp,plusw1
 29863  0144D2  6A01               	clrf	btemp^0,c
 29864  0144D4  0EFC               	movlw	-4
 29865  0144D6  50E3               	movf	plusw1,w,c
 29866  0144D8  2001               	addwfc	btemp^0,w,c
 29867  0144DA  6E01               	movwf	btemp^0,c
 29868  0144DC  0EFC               	movlw	-4
 29869  0144DE  0060  F007  FFE3   	movff	btemp,plusw1
 29870  0144E4                     l8658:
 29871                           
 29872                           ;stkvar	_temp @ sp[(-13)+8]
 29873  0144E4  0EFC               	movlw	-4
 29874  0144E6  BEE3               	btfsc	plusw1,7,c
 29875  0144E8  D020               	goto	l8662
 29876  0144EA  0EFC               	movlw	-4
 29877  0144EC  50E3               	movf	plusw1,w,c
 29878  0144EE  E104               	bnz	u7020
 29879  0144F0  0EFB               	movlw	-5
 29880  0144F2  28E3               	incf	plusw1,w,c
 29881  0144F4  A0D8               	btfss	status,0,c
 29882  0144F6  D019               	goto	l8662
 29883  0144F8                     u7020:
 29884  0144F8  0E00               	movlw	0
 29885  0144FA  6E09               	movwf	(btemp+8)^0,c
 29886  0144FC  0E00               	movlw	0
 29887  0144FE  6E0A               	movwf	(btemp+9)^0,c
 29888  014500  0E80               	movlw	128
 29889  014502  6E0B               	movwf	(btemp+10)^0,c
 29890  014504  0E7F               	movlw	127
 29891  014506  6E0C               	movwf	(btemp+11)^0,c
 29892                           
 29893                           ;stkvar	_prod @ sp[(-13)+0]
 29894  014508  0EF3               	movlw	-13
 29895  01450A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29896  014510  0EF4               	movlw	-12
 29897  014512  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29898  014518  0EF5               	movlw	-11
 29899  01451A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29900  014520  0EF6               	movlw	-10
 29901  014522  0060  F033  FFE3   	movff	btemp+11,plusw1
 29902  014528  D044               	goto	l8678
 29903  01452A                     l8662:
 29904                           
 29905                           ;stkvar	_temp @ sp[(-13)+8]
 29906  01452A  0EFC               	movlw	-4
 29907  01452C  BEE3               	btfsc	plusw1,7,c
 29908  01452E  D007               	goto	u7030
 29909  014530  0EFC               	movlw	-4
 29910  014532  50E3               	movf	plusw1,w,c
 29911  014534  E10F               	bnz	l8668
 29912  014536  0EFB               	movlw	-5
 29913  014538  04E3               	decf	plusw1,w,c
 29914  01453A  B0D8               	btfsc	status,0,c
 29915  01453C  D00B               	goto	l8668
 29916  01453E                     u7030:
 29917                           
 29918                           ;stkvar	_prod @ sp[(-13)+0]
 29919  01453E  0EF3               	movlw	-13
 29920  014540  6AE3               	clrf	plusw1,c
 29921  014542  0EF4               	movlw	-12
 29922  014544  6AE3               	clrf	plusw1,c
 29923  014546  0EF5               	movlw	-11
 29924  014548  6AE3               	clrf	plusw1,c
 29925  01454A  0EF6               	movlw	-10
 29926  01454C  6AE3               	clrf	plusw1,c
 29927                           
 29928                           ;stkvar	_sign @ sp[(-13)+12]
 29929  01454E  0EFF               	movlw	-1
 29930  014550  6AE3               	clrf	plusw1,c
 29931  014552  D02F               	goto	l8678
 29932  014554                     l8668:
 29933                           
 29934                           ;stkvar	_temp @ sp[(-13)+8]
 29935                           ;stkvar	_bexp @ sp[(-13)+10]
 29936  014554  0EFB               	movlw	-5
 29937  014556  006F FF8C  F001    	movff	plusw1,btemp
 29938  01455C  0EFD               	movlw	-3
 29939  01455E  0060  F007  FFE3   	movff	btemp,plusw1
 29940                           
 29941                           ;stkvar	_prod @ sp[(-13)+0]
 29942  014564  50E1               	movf	fsr1l,w,c
 29943  014566  0FF3               	addlw	-13
 29944  014568  6ED9               	movwf	fsr2l,c
 29945  01456A  50E2               	movf	fsr1h,w,c
 29946  01456C  6EDA               	movwf	fsr2h,c
 29947  01456E  0EFF               	movlw	255
 29948  014570  22DA               	addwfc	fsr2h,f,c
 29949  014572  0EFF               	movlw	255
 29950  014574  16DE               	andwf	postinc2,f,c
 29951  014576  0EFF               	movlw	255
 29952  014578  16DE               	andwf	postinc2,f,c
 29953  01457A  0E7F               	movlw	127
 29954  01457C  16DE               	andwf	postinc2,f,c
 29955  01457E  0E00               	movlw	0
 29956  014580  16DE               	andwf	postinc2,f,c
 29957                           
 29958                           ;stkvar	_bexp @ sp[(-13)+10]
 29959  014582  0EFD               	movlw	-3
 29960  014584  A0E3               	btfss	plusw1,0,c
 29961  014586  D008               	goto	l8676
 29962                           
 29963                           ;stkvar	_prod @ sp[(-13)+0]
 29964  014588  0EF5               	movlw	245
 29965  01458A  24E1               	addwf	fsr1l,w,c
 29966  01458C  6ED9               	movwf	fsr2l,c
 29967  01458E  0EFF               	movlw	255
 29968  014590  20E2               	addwfc	fsr1h,w,c
 29969  014592  6EDA               	movwf	fsr2h,c
 29970  014594  0E00               	movlw	0
 29971  014596  8EDB               	bsf	plusw2,7,c
 29972  014598                     l8676:
 29973                           
 29974                           ;stkvar	_prod @ sp[(-13)+0]
 29975  014598  0EF6               	movlw	246
 29976  01459A  24E1               	addwf	fsr1l,w,c
 29977  01459C  6ED9               	movwf	fsr2l,c
 29978  01459E  0EFF               	movlw	255
 29979  0145A0  20E2               	addwfc	fsr1h,w,c
 29980  0145A2  6EDA               	movwf	fsr2h,c
 29981                           
 29982                           ;stkvar	_bexp @ sp[(-13)+10]
 29983  0145A4  0EFD               	movlw	-3
 29984  0145A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29985  0145AC  90D8               	bcf	status,0,c
 29986  0145AE  300C               	rrcf	(btemp+11)^0,w,c
 29987  0145B0  6EDF               	movwf	indf2,c
 29988  0145B2                     l8678:
 29989                           
 29990                           ;stkvar	_sign @ sp[(-13)+12]
 29991  0145B2  0EFF               	movlw	-1
 29992  0145B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29993                           
 29994                           ;stkvar	_prod @ sp[(-13)+0]
 29995  0145BA  0EF6               	movlw	246
 29996  0145BC  24E1               	addwf	fsr1l,w,c
 29997  0145BE  6ED9               	movwf	fsr2l,c
 29998  0145C0  0EFF               	movlw	255
 29999  0145C2  20E2               	addwfc	fsr1h,w,c
 30000  0145C4  6EDA               	movwf	fsr2h,c
 30001  0145C6  500C               	movf	(btemp+11)^0,w,c
 30002  0145C8  12DF               	iorwf	indf2,f,c
 30003                           
 30004                           ;stkvar	_prod @ sp[(-13)+0]
 30005  0145CA  0EF3               	movlw	-13
 30006  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 30007  0145D2  0EF4               	movlw	-12
 30008  0145D4  006F FF8C  F002    	movff	plusw1,btemp+1
 30009  0145DA  0EF5               	movlw	-11
 30010  0145DC  006F FF8C  F003    	movff	plusw1,btemp+2
 30011  0145E2  0EF6               	movlw	-10
 30012  0145E4  006F FF8C  F004    	movff	plusw1,btemp+3
 30013  0145EA                     l3099:
 30014                           
 30015                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30016  0145EA  0EEB               	movlw	235
 30017  0145EC  26E1               	addwf	fsr1l,f,c
 30018  0145EE  0EFF               	movlw	255
 30019  0145F0  22E2               	addwfc	fsr1h,f,c
 30020  0145F2  0012               	return		;funcret
 30021  0145F4                     __end_of___flmul:
 30022                           	opt callstack 0
 30023                           
 30024 ;; *************** function _SYSTEM_Initialize *****************
 30025 ;; Defined at:
 30026 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;		None
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;		None
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1  [STACK] void 
 30033 ;; Registers used:
 30034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30035 ;; Tracked objects:
 30036 ;;		On entry : 0/0
 30037 ;;		On exit  : 3F/3C
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30044 ;;Total ram usage:        0 bytes
 30045 ;; Hardware stack levels used:    1
 30046 ;; Hardware stack levels required when called:   17
 30047 ;; This function calls:
 30048 ;;		_ADCC_Initialize
 30049 ;;		_CLKREF_Initialize
 30050 ;;		_DMA1_Initialize
 30051 ;;		_DMA2_Initialize
 30052 ;;		_EXT_INT_Initialize
 30053 ;;		_FVR_Initialize
 30054 ;;		_INTERRUPT_Initialize
 30055 ;;		_OSCILLATOR_Initialize
 30056 ;;		_PIN_MANAGER_Initialize
 30057 ;;		_PMD_Initialize
 30058 ;;		_PWM8_Initialize
 30059 ;;		_SPI1_Initialize
 30060 ;;		_TMR2_Initialize
 30061 ;;		_TMR3_Initialize
 30062 ;;		_TMR5_Initialize
 30063 ;;		_TMR6_Initialize
 30064 ;;		_UART1_Initialize
 30065 ;;		_UART2_Initialize
 30066 ;; This function is called by:
 30067 ;;		_main
 30068 ;; This function uses a reentrant model
 30069 ;;
 30070                           
 30071                           	psect	text114
 30072  01B7EA                     __ptext114:
 30073                           	opt callstack 0
 30074  01B7EA                     _SYSTEM_Initialize:
 30075                           	opt callstack 13
 30076                           
 30077                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30078                           
 30079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30080                           ;incstack = 0
 30081  01B7EA  ECD9  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 30082                           
 30083                           ; BSR set to: 57
 30084                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30085  01B7EE  EC62  F0E2         	call	_PMD_Initialize	;wreg free
 30086                           
 30087                           ; BSR set to: 57
 30088                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30089  01B7F2  EC38  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30090                           
 30091                           ; BSR set to: 58
 30092                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30093  01B7F6  EC57  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30094                           
 30095                           ; BSR set to: 57
 30096                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30097  01B7FA  ECE5  F0E2         	call	_FVR_Initialize	;wreg free
 30098                           
 30099                           ; BSR set to: 62
 30100                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30101  01B7FE  EC6F  F0D9         	call	_ADCC_Initialize	;wreg free
 30102                           
 30103                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 30104  01B802  EC35  F0E2         	call	_TMR2_Initialize	;wreg free
 30105                           
 30106                           ; BSR set to: 57
 30107                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 30108  01B806  EC4C  F0E2         	call	_PWM8_Initialize	;wreg free
 30109                           
 30110                           ; BSR set to: 63
 30111                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30112  01B80A  ECEE  F0DE         	call	_EXT_INT_Initialize	;wreg free
 30113                           
 30114                           ; BSR set to: 57
 30115                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30116  01B80E  ECC2  F0DF         	call	_TMR6_Initialize	;wreg free
 30117                           
 30118                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30119  01B812  EC86  F0DC         	call	_TMR3_Initialize	;wreg free
 30120                           
 30121                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30122  01B816  EC62  F0DC         	call	_TMR5_Initialize	;wreg free
 30123                           
 30124                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30125  01B81A  EC3E  F0DC         	call	_UART1_Initialize	;wreg free
 30126                           
 30127                           ; BSR set to: 57
 30128                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30129  01B81E  ECA0  F0DA         	call	_UART2_Initialize	;wreg free
 30130                           
 30131                           ; BSR set to: 57
 30132                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30133  01B822  EC41  F0E2         	call	_SPI1_Initialize	;wreg free
 30134                           
 30135                           ; BSR set to: 61
 30136                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30137  01B826  EC2A  F0DB         	call	_DMA2_Initialize	;wreg free
 30138                           
 30139                           ; BSR set to: 59
 30140                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30141  01B82A  EC3A  F0D9         	call	_DMA1_Initialize	;wreg free
 30142                           
 30143                           ; BSR set to: 59
 30144                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30145  01B82E  ECB9  F0E2         	call	_CLKREF_Initialize	;wreg free
 30146                           
 30147                           ; BSR set to: 60
 30148                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30149  01B832  0012               	return		;funcret
 30150  01B834                     __end_of_SYSTEM_Initialize:
 30151                           	opt callstack 0
 30152                           
 30153 ;; *************** function _UART2_Initialize *****************
 30154 ;; Defined at:
 30155 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30156 ;; Parameters:    Size  Location     Type
 30157 ;;		None
 30158 ;; Auto vars:     Size  Location     Type
 30159 ;;		None
 30160 ;; Return value:  Size  Location     Type
 30161 ;;                  1  [STACK] void 
 30162 ;; Registers used:
 30163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30164 ;; Tracked objects:
 30165 ;;		On entry : 3F/39
 30166 ;;		On exit  : 3F/39
 30167 ;;		Unchanged: 0/0
 30168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30173 ;;Total ram usage:        0 bytes
 30174 ;; Hardware stack levels used:    1
 30175 ;; Hardware stack levels required when called:   16
 30176 ;; This function calls:
 30177 ;;		_UART2_SetRxInterruptHandler
 30178 ;;		_UART2_SetTxInterruptHandler
 30179 ;; This function is called by:
 30180 ;;		_SYSTEM_Initialize
 30181 ;; This function uses a reentrant model
 30182 ;;
 30183                           
 30184                           	psect	text115
 30185  01B540                     __ptext115:
 30186                           	opt callstack 0
 30187  01B540                     _UART2_Initialize:
 30188                           	opt callstack 13
 30189                           
 30190                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30191                           
 30192                           ; BSR set to: 60
 30193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30194                           ;incstack = 0
 30195  01B540  0139               	movlb	57	; () banked
 30196  01B542  9596               	bcf	150,2,b	;volatile
 30197                           
 30198                           ; BSR set to: 57
 30199                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30200  01B544  0E66               	movlw	low _UART2_Receive_ISR
 30201  01B546  6EE6               	movwf	postinc1,c
 30202  01B548  0EC3               	movlw	high _UART2_Receive_ISR
 30203  01B54A  6EE6               	movwf	postinc1,c
 30204  01B54C  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30205  01B54E  6EE6               	movwf	postinc1,c
 30206  01B550  EC13  F0E0         	call	_UART2_SetRxInterruptHandler	;wreg free
 30207                           
 30208                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30209  01B554  0139               	movlb	57	; () banked
 30210  01B556  9796               	bcf	150,3,b	;volatile
 30211                           
 30212                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30213  01B558  0E58               	movlw	low _UART2_Transmit_ISR
 30214  01B55A  6EE6               	movwf	postinc1,c
 30215  01B55C  0EBF               	movlw	high _UART2_Transmit_ISR
 30216  01B55E  6EE6               	movwf	postinc1,c
 30217  01B560  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30218  01B562  6EE6               	movwf	postinc1,c
 30219  01B564  ECFF  F0DF         	call	_UART2_SetTxInterruptHandler	;wreg free
 30220                           
 30221                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30222  01B568  013D               	movlb	61	; () banked
 30223  01B56A  6BD4               	clrf	212,b	;volatile
 30224                           
 30225                           ; BSR set to: 61
 30226                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30227  01B56C  6BD6               	clrf	214,b	;volatile
 30228                           
 30229                           ; BSR set to: 61
 30230                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30231  01B56E  6BD8               	clrf	216,b	;volatile
 30232                           
 30233                           ; BSR set to: 61
 30234                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30235  01B570  0EB0               	movlw	176
 30236  01B572  6FDA               	movwf	218,b	;volatile
 30237                           
 30238                           ; BSR set to: 61
 30239                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30240  01B574  0E80               	movlw	128
 30241  01B576  6FDB               	movwf	219,b	;volatile
 30242                           
 30243                           ; BSR set to: 61
 30244                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30245  01B578  6BDC               	clrf	220,b	;volatile
 30246                           
 30247                           ; BSR set to: 61
 30248                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30249  01B57A  0E82               	movlw	130
 30250  01B57C  6FDD               	movwf	221,b	;volatile
 30251                           
 30252                           ; BSR set to: 61
 30253                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30254  01B57E  0E06               	movlw	6
 30255  01B580  6FDE               	movwf	222,b	;volatile
 30256                           
 30257                           ; BSR set to: 61
 30258                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30259  01B582  6BDF               	clrf	223,b	;volatile
 30260                           
 30261                           ; BSR set to: 61
 30262                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30263  01B584  6BE0               	clrf	224,b	;volatile
 30264                           
 30265                           ; BSR set to: 61
 30266                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30267  01B586  6BE1               	clrf	225,b	;volatile
 30268                           
 30269                           ; BSR set to: 61
 30270                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30271  01B588  6BE2               	clrf	226,b	;volatile
 30272                           
 30273                           ; BSR set to: 61
 30274                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30275  01B58A  0100               	movlb	0	; () banked
 30276  01B58C  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30277                           
 30278                           ; BSR set to: 0
 30279                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30280  01B58E  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30281                           
 30282                           ; BSR set to: 0
 30283                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30284  01B590  0E40               	movlw	64
 30285  01B592  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30286                           
 30287                           ; BSR set to: 0
 30288                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30289  01B594  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30290                           
 30291                           ; BSR set to: 0
 30292                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30293  01B596  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30294                           
 30295                           ; BSR set to: 0
 30296                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30297  01B598  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30298                           
 30299                           ; BSR set to: 0
 30300                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30301  01B59A  0139               	movlb	57	; () banked
 30302  01B59C  8596               	bsf	150,2,b	;volatile
 30303                           
 30304                           ; BSR set to: 57
 30305                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30306  01B59E  0012               	return		;funcret
 30307  01B5A0                     __end_of_UART2_Initialize:
 30308                           	opt callstack 0
 30309                           
 30310 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30311 ;; Defined at:
 30312 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30313 ;; Parameters:    Size  Location     Type
 30314 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30315 ;;		 -> UART2_Transmit_ISR(1), 
 30316 ;; Auto vars:     Size  Location     Type
 30317 ;;		None
 30318 ;; Return value:  Size  Location     Type
 30319 ;;                  1  [STACK] void 
 30320 ;; Registers used:
 30321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30322 ;; Tracked objects:
 30323 ;;		On entry : 3F/39
 30324 ;;		On exit  : 0/0
 30325 ;;		Unchanged: 0/0
 30326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30331 ;;Total ram usage:        0 bytes
 30332 ;; Hardware stack levels used:    1
 30333 ;; Hardware stack levels required when called:   15
 30334 ;; This function calls:
 30335 ;;		Nothing
 30336 ;; This function is called by:
 30337 ;;		_UART2_Initialize
 30338 ;; This function uses a reentrant model
 30339 ;;
 30340                           
 30341                           	psect	text116
 30342  01BFFE                     __ptext116:
 30343                           	opt callstack 0
 30344  01BFFE                     _UART2_SetTxInterruptHandler:
 30345                           	opt callstack 13
 30346                           
 30347                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30348                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30349                           
 30350                           ; BSR set to: 57
 30351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30352                           ;incstack = 0
 30353  01BFFE  50E1               	movf	fsr1l,w,c
 30354  01C000  0FFD               	addlw	-3
 30355  01C002  6ED9               	movwf	fsr2l,c
 30356  01C004  50E2               	movf	fsr1h,w,c
 30357  01C006  6EDA               	movwf	fsr2h,c
 30358  01C008  0EFF               	movlw	255
 30359  01C00A  22DA               	addwfc	fsr2h,f,c
 30360  01C00C  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30361  01C012  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30362  01C018  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30363                           
 30364                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30365  01C01E  52E5               	movf	postdec1,f,c
 30366  01C020  52E5               	movf	postdec1,f,c
 30367  01C022  52E5               	movf	postdec1,f,c
 30368  01C024  0012               	return		;funcret
 30369  01C026                     __end_of_UART2_SetTxInterruptHandler:
 30370                           	opt callstack 0
 30371                           
 30372 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30373 ;; Defined at:
 30374 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30375 ;; Parameters:    Size  Location     Type
 30376 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30377 ;;		 -> UART2_Receive_ISR(1), 
 30378 ;; Auto vars:     Size  Location     Type
 30379 ;;		None
 30380 ;; Return value:  Size  Location     Type
 30381 ;;                  1  [STACK] void 
 30382 ;; Registers used:
 30383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30384 ;; Tracked objects:
 30385 ;;		On entry : 3F/39
 30386 ;;		On exit  : 0/0
 30387 ;;		Unchanged: 0/0
 30388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30393 ;;Total ram usage:        0 bytes
 30394 ;; Hardware stack levels used:    1
 30395 ;; Hardware stack levels required when called:   15
 30396 ;; This function calls:
 30397 ;;		Nothing
 30398 ;; This function is called by:
 30399 ;;		_UART2_Initialize
 30400 ;; This function uses a reentrant model
 30401 ;;
 30402                           
 30403                           	psect	text117
 30404  01C026                     __ptext117:
 30405                           	opt callstack 0
 30406  01C026                     _UART2_SetRxInterruptHandler:
 30407                           	opt callstack 13
 30408                           
 30409                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30410                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30411                           
 30412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30413                           ;incstack = 0
 30414  01C026  50E1               	movf	fsr1l,w,c
 30415  01C028  0FFD               	addlw	-3
 30416  01C02A  6ED9               	movwf	fsr2l,c
 30417  01C02C  50E2               	movf	fsr1h,w,c
 30418  01C02E  6EDA               	movwf	fsr2h,c
 30419  01C030  0EFF               	movlw	255
 30420  01C032  22DA               	addwfc	fsr2h,f,c
 30421  01C034  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30422  01C03A  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30423  01C040  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30424                           
 30425                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30426  01C046  52E5               	movf	postdec1,f,c
 30427  01C048  52E5               	movf	postdec1,f,c
 30428  01C04A  52E5               	movf	postdec1,f,c
 30429  01C04C  0012               	return		;funcret
 30430  01C04E                     __end_of_UART2_SetRxInterruptHandler:
 30431                           	opt callstack 0
 30432                           
 30433 ;; *************** function _UART1_Initialize *****************
 30434 ;; Defined at:
 30435 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30436 ;; Parameters:    Size  Location     Type
 30437 ;;		None
 30438 ;; Auto vars:     Size  Location     Type
 30439 ;;		None
 30440 ;; Return value:  Size  Location     Type
 30441 ;;                  1  [STACK] void 
 30442 ;; Registers used:
 30443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30444 ;; Tracked objects:
 30445 ;;		On entry : 0/39
 30446 ;;		On exit  : 3F/39
 30447 ;;		Unchanged: 0/0
 30448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30453 ;;Total ram usage:        0 bytes
 30454 ;; Hardware stack levels used:    1
 30455 ;; Hardware stack levels required when called:   16
 30456 ;; This function calls:
 30457 ;;		_UART1_SetRxInterruptHandler
 30458 ;; This function is called by:
 30459 ;;		_SYSTEM_Initialize
 30460 ;; This function uses a reentrant model
 30461 ;;
 30462                           
 30463                           	psect	text118
 30464  01B87C                     __ptext118:
 30465                           	opt callstack 0
 30466  01B87C                     _UART1_Initialize:
 30467                           	opt callstack 13
 30468                           
 30469                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30470                           
 30471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30472                           ;incstack = 0
 30473  01B87C  0139               	movlb	57	; () banked
 30474  01B87E  9793               	bcf	147,3,b	;volatile
 30475                           
 30476                           ; BSR set to: 57
 30477                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30478  01B880  0E24               	movlw	low _UART1_Receive_ISR
 30479  01B882  6EE6               	movwf	postinc1,c
 30480  01B884  0EC3               	movlw	high _UART1_Receive_ISR
 30481  01B886  6EE6               	movwf	postinc1,c
 30482  01B888  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30483  01B88A  6EE6               	movwf	postinc1,c
 30484  01B88C  EC27  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30485                           
 30486                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30487  01B890  013D               	movlb	61	; () banked
 30488  01B892  6BEC               	clrf	236,b	;volatile
 30489                           
 30490                           ; BSR set to: 61
 30491                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30492  01B894  6BED               	clrf	237,b	;volatile
 30493                           
 30494                           ; BSR set to: 61
 30495                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30496  01B896  6BEE               	clrf	238,b	;volatile
 30497                           
 30498                           ; BSR set to: 61
 30499                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30500  01B898  6BEF               	clrf	239,b	;volatile
 30501                           
 30502                           ; BSR set to: 61
 30503                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30504  01B89A  6BF0               	clrf	240,b	;volatile
 30505                           
 30506                           ; BSR set to: 61
 30507                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30508  01B89C  6BF1               	clrf	241,b	;volatile
 30509                           
 30510                           ; BSR set to: 61
 30511                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30512  01B89E  0EB0               	movlw	176
 30513  01B8A0  6FF2               	movwf	242,b	;volatile
 30514                           
 30515                           ; BSR set to: 61
 30516                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30517  01B8A2  0E80               	movlw	128
 30518  01B8A4  6FF3               	movwf	243,b	;volatile
 30519                           
 30520                           ; BSR set to: 61
 30521                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30522  01B8A6  6BF4               	clrf	244,b	;volatile
 30523                           
 30524                           ; BSR set to: 61
 30525                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30526  01B8A8  0E8A               	movlw	138
 30527  01B8AA  6FF5               	movwf	245,b	;volatile
 30528                           
 30529                           ; BSR set to: 61
 30530                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30531  01B8AC  6BF6               	clrf	246,b	;volatile
 30532                           
 30533                           ; BSR set to: 61
 30534                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30535  01B8AE  6BF7               	clrf	247,b	;volatile
 30536                           
 30537                           ; BSR set to: 61
 30538                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30539  01B8B0  6BF8               	clrf	248,b	;volatile
 30540                           
 30541                           ; BSR set to: 61
 30542                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30543  01B8B2  6BF9               	clrf	249,b	;volatile
 30544                           
 30545                           ; BSR set to: 61
 30546                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30547  01B8B4  6BFA               	clrf	250,b	;volatile
 30548                           
 30549                           ; BSR set to: 61
 30550                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30551  01B8B6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30552                           
 30553                           ; BSR set to: 61
 30554                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30555  01B8B8  0100               	movlb	0	; () banked
 30556  01B8BA  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30557                           
 30558                           ; BSR set to: 0
 30559                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30560  01B8BC  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30561                           
 30562                           ; BSR set to: 0
 30563                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30564  01B8BE  0139               	movlb	57	; () banked
 30565  01B8C0  8793               	bsf	147,3,b	;volatile
 30566                           
 30567                           ; BSR set to: 57
 30568                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30569  01B8C2  0012               	return		;funcret
 30570  01B8C4                     __end_of_UART1_Initialize:
 30571                           	opt callstack 0
 30572                           
 30573 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30574 ;; Defined at:
 30575 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30576 ;; Parameters:    Size  Location     Type
 30577 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30578 ;;		 -> UART1_Receive_ISR(1), 
 30579 ;; Auto vars:     Size  Location     Type
 30580 ;;		None
 30581 ;; Return value:  Size  Location     Type
 30582 ;;                  1  [STACK] void 
 30583 ;; Registers used:
 30584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30585 ;; Tracked objects:
 30586 ;;		On entry : 3F/39
 30587 ;;		On exit  : 0/0
 30588 ;;		Unchanged: 0/0
 30589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30594 ;;Total ram usage:        0 bytes
 30595 ;; Hardware stack levels used:    1
 30596 ;; Hardware stack levels required when called:   15
 30597 ;; This function calls:
 30598 ;;		Nothing
 30599 ;; This function is called by:
 30600 ;;		_UART1_Initialize
 30601 ;; This function uses a reentrant model
 30602 ;;
 30603                           
 30604                           	psect	text119
 30605  01C04E                     __ptext119:
 30606                           	opt callstack 0
 30607  01C04E                     _UART1_SetRxInterruptHandler:
 30608                           	opt callstack 13
 30609                           
 30610                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30611                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30612                           
 30613                           ; BSR set to: 57
 30614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30615                           ;incstack = 0
 30616  01C04E  50E1               	movf	fsr1l,w,c
 30617  01C050  0FFD               	addlw	-3
 30618  01C052  6ED9               	movwf	fsr2l,c
 30619  01C054  50E2               	movf	fsr1h,w,c
 30620  01C056  6EDA               	movwf	fsr2h,c
 30621  01C058  0EFF               	movlw	255
 30622  01C05A  22DA               	addwfc	fsr2h,f,c
 30623  01C05C  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30624  01C062  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30625  01C068  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30626                           
 30627                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30628  01C06E  52E5               	movf	postdec1,f,c
 30629  01C070  52E5               	movf	postdec1,f,c
 30630  01C072  52E5               	movf	postdec1,f,c
 30631  01C074  0012               	return		;funcret
 30632  01C076                     __end_of_UART1_SetRxInterruptHandler:
 30633                           	opt callstack 0
 30634                           
 30635 ;; *************** function _TMR6_Initialize *****************
 30636 ;; Defined at:
 30637 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30638 ;; Parameters:    Size  Location     Type
 30639 ;;		None
 30640 ;; Auto vars:     Size  Location     Type
 30641 ;;		None
 30642 ;; Return value:  Size  Location     Type
 30643 ;;                  1  [STACK] void 
 30644 ;; Registers used:
 30645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30646 ;; Tracked objects:
 30647 ;;		On entry : 3F/39
 30648 ;;		On exit  : 0/0
 30649 ;;		Unchanged: 0/0
 30650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30655 ;;Total ram usage:        0 bytes
 30656 ;; Hardware stack levels used:    1
 30657 ;; Hardware stack levels required when called:   16
 30658 ;; This function calls:
 30659 ;;		_TMR6_SetInterruptHandler
 30660 ;; This function is called by:
 30661 ;;		_SYSTEM_Initialize
 30662 ;; This function uses a reentrant model
 30663 ;;
 30664                           
 30665                           	psect	text120
 30666  01BF84                     __ptext120:
 30667                           	opt callstack 0
 30668  01BF84                     _TMR6_Initialize:
 30669                           	opt callstack 13
 30670                           
 30671                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30672                           
 30673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30674                           ;incstack = 0
 30675  01BF84  0E01               	movlw	1
 30676  01BF86  6E96               	movwf	150,c	;volatile
 30677                           
 30678                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30679  01BF88  6A95               	clrf	149,c	;volatile
 30680                           
 30681                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30682  01BF8A  6A97               	clrf	151,c	;volatile
 30683                           
 30684                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30685  01BF8C  0E7C               	movlw	124
 30686  01BF8E  6E93               	movwf	147,c	;volatile
 30687                           
 30688                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30689  01BF90  6A92               	clrf	146,c	;volatile
 30690                           
 30691                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30692  01BF92  0139               	movlb	57	; () banked
 30693  01BF94  91A9               	bcf	169,0,b	;volatile
 30694                           
 30695                           ; BSR set to: 57
 30696                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30697  01BF96  8199               	bsf	153,0,b	;volatile
 30698                           
 30699                           ; BSR set to: 57
 30700                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30701  01BF98  0E52               	movlw	low _TMR6_DefaultInterruptHandler
 30702  01BF9A  6EE6               	movwf	postinc1,c
 30703  01BF9C  0EB7               	movlw	high _TMR6_DefaultInterruptHandler
 30704  01BF9E  6EE6               	movwf	postinc1,c
 30705  01BFA0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30706  01BFA2  6EE6               	movwf	postinc1,c
 30707  01BFA4  EC3B  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30708                           
 30709                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30710  01BFA8  0EE0               	movlw	224
 30711  01BFAA  6E94               	movwf	148,c	;volatile
 30712                           
 30713                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30714  01BFAC  0012               	return		;funcret
 30715  01BFAE                     __end_of_TMR6_Initialize:
 30716                           	opt callstack 0
 30717                           
 30718 ;; *************** function _TMR6_SetInterruptHandler *****************
 30719 ;; Defined at:
 30720 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30721 ;; Parameters:    Size  Location     Type
 30722 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30723 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30724 ;; Auto vars:     Size  Location     Type
 30725 ;;		None
 30726 ;; Return value:  Size  Location     Type
 30727 ;;                  1  [STACK] void 
 30728 ;; Registers used:
 30729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30730 ;; Tracked objects:
 30731 ;;		On entry : 3F/39
 30732 ;;		On exit  : 0/0
 30733 ;;		Unchanged: 0/0
 30734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30739 ;;Total ram usage:        0 bytes
 30740 ;; Hardware stack levels used:    1
 30741 ;; Hardware stack levels required when called:   15
 30742 ;; This function calls:
 30743 ;;		Nothing
 30744 ;; This function is called by:
 30745 ;;		_TMR6_Initialize
 30746 ;; This function uses a reentrant model
 30747 ;;
 30748                           
 30749                           	psect	text121
 30750  01C076                     __ptext121:
 30751                           	opt callstack 0
 30752  01C076                     _TMR6_SetInterruptHandler:
 30753                           	opt callstack 13
 30754                           
 30755                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30756                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30757                           
 30758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30759                           ;incstack = 0
 30760  01C076  50E1               	movf	fsr1l,w,c
 30761  01C078  0FFD               	addlw	-3
 30762  01C07A  6ED9               	movwf	fsr2l,c
 30763  01C07C  50E2               	movf	fsr1h,w,c
 30764  01C07E  6EDA               	movwf	fsr2h,c
 30765  01C080  0EFF               	movlw	255
 30766  01C082  22DA               	addwfc	fsr2h,f,c
 30767  01C084  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30768  01C08A  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30769  01C090  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30770                           
 30771                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30772  01C096  52E5               	movf	postdec1,f,c
 30773  01C098  52E5               	movf	postdec1,f,c
 30774  01C09A  52E5               	movf	postdec1,f,c
 30775  01C09C  0012               	return		;funcret
 30776  01C09E                     __end_of_TMR6_SetInterruptHandler:
 30777                           	opt callstack 0
 30778                           
 30779 ;; *************** function _TMR5_Initialize *****************
 30780 ;; Defined at:
 30781 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30782 ;; Parameters:    Size  Location     Type
 30783 ;;		None
 30784 ;; Auto vars:     Size  Location     Type
 30785 ;;		None
 30786 ;; Return value:  Size  Location     Type
 30787 ;;                  1  [STACK] void 
 30788 ;; Registers used:
 30789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30790 ;; Tracked objects:
 30791 ;;		On entry : 0/39
 30792 ;;		On exit  : 0/0
 30793 ;;		Unchanged: 0/0
 30794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30799 ;;Total ram usage:        0 bytes
 30800 ;; Hardware stack levels used:    1
 30801 ;; Hardware stack levels required when called:   16
 30802 ;; This function calls:
 30803 ;;		_TMR5_SetInterruptHandler
 30804 ;; This function is called by:
 30805 ;;		_SYSTEM_Initialize
 30806 ;; This function uses a reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text122
 30810  01B8C4                     __ptext122:
 30811                           	opt callstack 0
 30812  01B8C4                     _TMR5_Initialize:
 30813                           	opt callstack 13
 30814                           
 30815                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30816                           
 30817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30818                           ;incstack = 0
 30819  01B8C4  6A9B               	clrf	155,c	;volatile
 30820                           
 30821                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30822  01B8C6  6A9C               	clrf	156,c	;volatile
 30823                           
 30824                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30825  01B8C8  0E01               	movlw	1
 30826  01B8CA  6E9D               	movwf	157,c	;volatile
 30827                           
 30828                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30829  01B8CC  0E63               	movlw	99
 30830  01B8CE  6E99               	movwf	153,c	;volatile
 30831                           
 30832                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30833  01B8D0  0EC0               	movlw	192
 30834  01B8D2  6E98               	movwf	152,c	;volatile
 30835                           
 30836                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30837  01B8D4  5098               	movf	152,w,c	;volatile
 30838  01B8D6  006F FE64  F001    	movff	16281,btemp	;volatile
 30839  01B8DC  6A02               	clrf	(btemp+1)^0,c
 30840  01B8DE  0060  F004  F002   	movff	btemp,btemp+1
 30841  01B8E4  6A01               	clrf	btemp^0,c
 30842  01B8E6  1001               	iorwf	btemp^0,w,c
 30843  01B8E8  0100               	movlb	0	; () banked
 30844  01B8EA  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30845  01B8EC  5002               	movf	(btemp+1)^0,w,c
 30846  01B8EE  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30847                           
 30848                           ; BSR set to: 0
 30849                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30850  01B8F0  0139               	movlb	57	; () banked
 30851  01B8F2  9DA8               	bcf	168,6,b	;volatile
 30852                           
 30853                           ; BSR set to: 57
 30854                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30855  01B8F4  8D98               	bsf	152,6,b	;volatile
 30856                           
 30857                           ; BSR set to: 57
 30858                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30859  01B8F6  0E9C               	movlw	low _TMR5_DefaultInterruptHandler
 30860  01B8F8  6EE6               	movwf	postinc1,c
 30861  01B8FA  0EBC               	movlw	high _TMR5_DefaultInterruptHandler
 30862  01B8FC  6EE6               	movwf	postinc1,c
 30863  01B8FE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30864  01B900  6EE6               	movwf	postinc1,c
 30865  01B902  EC4F  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30866                           
 30867                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30868  01B906  0E31               	movlw	49
 30869  01B908  6E9A               	movwf	154,c	;volatile
 30870                           
 30871                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30872  01B90A  0012               	return		;funcret
 30873  01B90C                     __end_of_TMR5_Initialize:
 30874                           	opt callstack 0
 30875                           
 30876 ;; *************** function _TMR5_SetInterruptHandler *****************
 30877 ;; Defined at:
 30878 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30879 ;; Parameters:    Size  Location     Type
 30880 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30881 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30882 ;; Auto vars:     Size  Location     Type
 30883 ;;		None
 30884 ;; Return value:  Size  Location     Type
 30885 ;;                  1  [STACK] void 
 30886 ;; Registers used:
 30887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30888 ;; Tracked objects:
 30889 ;;		On entry : 3F/39
 30890 ;;		On exit  : 0/0
 30891 ;;		Unchanged: 0/0
 30892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30897 ;;Total ram usage:        0 bytes
 30898 ;; Hardware stack levels used:    1
 30899 ;; Hardware stack levels required when called:   15
 30900 ;; This function calls:
 30901 ;;		Nothing
 30902 ;; This function is called by:
 30903 ;;		_TMR5_Initialize
 30904 ;; This function uses a reentrant model
 30905 ;;
 30906                           
 30907                           	psect	text123
 30908  01C09E                     __ptext123:
 30909                           	opt callstack 0
 30910  01C09E                     _TMR5_SetInterruptHandler:
 30911                           	opt callstack 13
 30912                           
 30913                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30914                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30915                           
 30916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30917                           ;incstack = 0
 30918  01C09E  50E1               	movf	fsr1l,w,c
 30919  01C0A0  0FFD               	addlw	-3
 30920  01C0A2  6ED9               	movwf	fsr2l,c
 30921  01C0A4  50E2               	movf	fsr1h,w,c
 30922  01C0A6  6EDA               	movwf	fsr2h,c
 30923  01C0A8  0EFF               	movlw	255
 30924  01C0AA  22DA               	addwfc	fsr2h,f,c
 30925  01C0AC  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30926  01C0B2  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30927  01C0B8  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30928                           
 30929                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30930  01C0BE  52E5               	movf	postdec1,f,c
 30931  01C0C0  52E5               	movf	postdec1,f,c
 30932  01C0C2  52E5               	movf	postdec1,f,c
 30933  01C0C4  0012               	return		;funcret
 30934  01C0C6                     __end_of_TMR5_SetInterruptHandler:
 30935                           	opt callstack 0
 30936                           
 30937 ;; *************** function _TMR3_Initialize *****************
 30938 ;; Defined at:
 30939 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30940 ;; Parameters:    Size  Location     Type
 30941 ;;		None
 30942 ;; Auto vars:     Size  Location     Type
 30943 ;;		None
 30944 ;; Return value:  Size  Location     Type
 30945 ;;                  1  [STACK] void 
 30946 ;; Registers used:
 30947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30948 ;; Tracked objects:
 30949 ;;		On entry : 0/39
 30950 ;;		On exit  : 0/0
 30951 ;;		Unchanged: 0/0
 30952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30957 ;;Total ram usage:        0 bytes
 30958 ;; Hardware stack levels used:    1
 30959 ;; Hardware stack levels required when called:   16
 30960 ;; This function calls:
 30961 ;;		_TMR3_SetInterruptHandler
 30962 ;; This function is called by:
 30963 ;;		_SYSTEM_Initialize
 30964 ;; This function uses a reentrant model
 30965 ;;
 30966                           
 30967                           	psect	text124
 30968  01B90C                     __ptext124:
 30969                           	opt callstack 0
 30970  01B90C                     _TMR3_Initialize:
 30971                           	opt callstack 13
 30972                           
 30973                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30974                           
 30975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30976                           ;incstack = 0
 30977  01B90C  6AA7               	clrf	167,c	;volatile
 30978                           
 30979                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30980  01B90E  6AA8               	clrf	168,c	;volatile
 30981                           
 30982                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30983  01B910  0E01               	movlw	1
 30984  01B912  6EA9               	movwf	169,c	;volatile
 30985                           
 30986                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30987  01B914  0E3C               	movlw	60
 30988  01B916  6EA5               	movwf	165,c	;volatile
 30989                           
 30990                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30991  01B918  0EB0               	movlw	176
 30992  01B91A  6EA4               	movwf	164,c	;volatile
 30993                           
 30994                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30995  01B91C  50A4               	movf	164,w,c	;volatile
 30996  01B91E  006F FE94  F001    	movff	16293,btemp	;volatile
 30997  01B924  6A02               	clrf	(btemp+1)^0,c
 30998  01B926  0060  F004  F002   	movff	btemp,btemp+1
 30999  01B92C  6A01               	clrf	btemp^0,c
 31000  01B92E  1001               	iorwf	btemp^0,w,c
 31001  01B930  0100               	movlb	0	; () banked
 31002  01B932  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31003  01B934  5002               	movf	(btemp+1)^0,w,c
 31004  01B936  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31005                           
 31006                           ; BSR set to: 0
 31007                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31008  01B938  0139               	movlb	57	; () banked
 31009  01B93A  9DA6               	bcf	166,6,b	;volatile
 31010                           
 31011                           ; BSR set to: 57
 31012                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31013  01B93C  8D96               	bsf	150,6,b	;volatile
 31014                           
 31015                           ; BSR set to: 57
 31016                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31017  01B93E  0EF4               	movlw	low _TMR3_DefaultInterruptHandler
 31018  01B940  6EE6               	movwf	postinc1,c
 31019  01B942  0EC5               	movlw	high _TMR3_DefaultInterruptHandler
 31020  01B944  6EE6               	movwf	postinc1,c
 31021  01B946  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31022  01B948  6EE6               	movwf	postinc1,c
 31023  01B94A  EC63  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 31024                           
 31025                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31026  01B94E  0E31               	movlw	49
 31027  01B950  6EA6               	movwf	166,c	;volatile
 31028                           
 31029                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31030  01B952  0012               	return		;funcret
 31031  01B954                     __end_of_TMR3_Initialize:
 31032                           	opt callstack 0
 31033                           
 31034 ;; *************** function _TMR3_SetInterruptHandler *****************
 31035 ;; Defined at:
 31036 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31037 ;; Parameters:    Size  Location     Type
 31038 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31039 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31040 ;; Auto vars:     Size  Location     Type
 31041 ;;		None
 31042 ;; Return value:  Size  Location     Type
 31043 ;;                  1  [STACK] void 
 31044 ;; Registers used:
 31045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31046 ;; Tracked objects:
 31047 ;;		On entry : 0/0
 31048 ;;		On exit  : 0/0
 31049 ;;		Unchanged: 0/0
 31050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31055 ;;Total ram usage:        0 bytes
 31056 ;; Hardware stack levels used:    1
 31057 ;; Hardware stack levels required when called:   15
 31058 ;; This function calls:
 31059 ;;		Nothing
 31060 ;; This function is called by:
 31061 ;;		_TMR3_Initialize
 31062 ;;		_init_bsoc
 31063 ;; This function uses a reentrant model
 31064 ;;
 31065                           
 31066                           	psect	text125
 31067  01C0C6                     __ptext125:
 31068                           	opt callstack 0
 31069  01C0C6                     _TMR3_SetInterruptHandler:
 31070                           	opt callstack 14
 31071                           
 31072                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31073                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31074                           
 31075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31076                           ;incstack = 0
 31077  01C0C6  50E1               	movf	fsr1l,w,c
 31078  01C0C8  0FFD               	addlw	-3
 31079  01C0CA  6ED9               	movwf	fsr2l,c
 31080  01C0CC  50E2               	movf	fsr1h,w,c
 31081  01C0CE  6EDA               	movwf	fsr2h,c
 31082  01C0D0  0EFF               	movlw	255
 31083  01C0D2  22DA               	addwfc	fsr2h,f,c
 31084  01C0D4  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31085  01C0DA  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31086  01C0E0  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31087                           
 31088                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31089  01C0E6  52E5               	movf	postdec1,f,c
 31090  01C0E8  52E5               	movf	postdec1,f,c
 31091  01C0EA  52E5               	movf	postdec1,f,c
 31092  01C0EC  0012               	return		;funcret
 31093  01C0EE                     __end_of_TMR3_SetInterruptHandler:
 31094                           	opt callstack 0
 31095                           
 31096 ;; *************** function _TMR2_Initialize *****************
 31097 ;; Defined at:
 31098 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31099 ;; Parameters:    Size  Location     Type
 31100 ;;		None
 31101 ;; Auto vars:     Size  Location     Type
 31102 ;;		None
 31103 ;; Return value:  Size  Location     Type
 31104 ;;                  1  [STACK] void 
 31105 ;; Registers used:
 31106 ;;		wreg, status,2
 31107 ;; Tracked objects:
 31108 ;;		On entry : 0/3E
 31109 ;;		On exit  : 3F/39
 31110 ;;		Unchanged: 0/0
 31111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31116 ;;Total ram usage:        0 bytes
 31117 ;; Hardware stack levels used:    1
 31118 ;; Hardware stack levels required when called:   15
 31119 ;; This function calls:
 31120 ;;		Nothing
 31121 ;; This function is called by:
 31122 ;;		_SYSTEM_Initialize
 31123 ;; This function uses a reentrant model
 31124 ;;
 31125                           
 31126                           	psect	text126
 31127  01C46A                     __ptext126:
 31128                           	opt callstack 0
 31129  01C46A                     _TMR2_Initialize:
 31130                           	opt callstack 14
 31131                           
 31132                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31133                           
 31134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31135                           ;incstack = 0
 31136  01C46A  0E01               	movlw	1
 31137  01C46C  6EAE               	movwf	174,c	;volatile
 31138                           
 31139                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31140  01C46E  6AAD               	clrf	173,c	;volatile
 31141                           
 31142                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31143  01C470  6AAF               	clrf	175,c	;volatile
 31144                           
 31145                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31146  01C472  0E63               	movlw	99
 31147  01C474  6EAB               	movwf	171,c	;volatile
 31148                           
 31149                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31150  01C476  6AAA               	clrf	170,c	;volatile
 31151                           
 31152                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31153  01C478  0139               	movlb	57	; () banked
 31154  01C47A  95A4               	bcf	164,2,b	;volatile
 31155                           
 31156                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31157  01C47C  0EC0               	movlw	192
 31158  01C47E  6EAC               	movwf	172,c	;volatile
 31159                           
 31160                           ; BSR set to: 57
 31161                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31162  01C480  0012               	return		;funcret
 31163  01C482                     __end_of_TMR2_Initialize:
 31164                           	opt callstack 0
 31165                           
 31166 ;; *************** function _SPI1_Initialize *****************
 31167 ;; Defined at:
 31168 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31169 ;; Parameters:    Size  Location     Type
 31170 ;;		None
 31171 ;; Auto vars:     Size  Location     Type
 31172 ;;		None
 31173 ;; Return value:  Size  Location     Type
 31174 ;;                  1  [STACK] void 
 31175 ;; Registers used:
 31176 ;;		wreg, status,2
 31177 ;; Tracked objects:
 31178 ;;		On entry : 3F/39
 31179 ;;		On exit  : 3F/3D
 31180 ;;		Unchanged: 0/0
 31181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31186 ;;Total ram usage:        0 bytes
 31187 ;; Hardware stack levels used:    1
 31188 ;; Hardware stack levels required when called:   15
 31189 ;; This function calls:
 31190 ;;		Nothing
 31191 ;; This function is called by:
 31192 ;;		_SYSTEM_Initialize
 31193 ;; This function uses a reentrant model
 31194 ;;
 31195                           
 31196                           	psect	text127
 31197  01C482                     __ptext127:
 31198                           	opt callstack 0
 31199  01C482                     _SPI1_Initialize:
 31200                           	opt callstack 14
 31201                           
 31202                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31203                           
 31204                           ; BSR set to: 57
 31205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31206                           ;incstack = 0
 31207  01C482  0E40               	movlw	64
 31208  01C484  013D               	movlb	61	; () banked
 31209  01C486  6F15               	movwf	21,b	;volatile
 31210                           
 31211                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31212  01C488  0E03               	movlw	3
 31213  01C48A  6F16               	movwf	22,b	;volatile
 31214                           
 31215                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31216  01C48C  0E4F               	movlw	79
 31217  01C48E  6F19               	movwf	25,b	;volatile
 31218                           
 31219                           ; BSR set to: 61
 31220                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31221  01C490  6B1C               	clrf	28,b	;volatile
 31222                           
 31223                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31224  01C492  0E83               	movlw	131
 31225  01C494  6F14               	movwf	20,b	;volatile
 31226                           
 31227                           ; BSR set to: 61
 31228                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31229  01C496  0012               	return		;funcret
 31230  01C498                     __end_of_SPI1_Initialize:
 31231                           	opt callstack 0
 31232                           
 31233 ;; *************** function _PWM8_Initialize *****************
 31234 ;; Defined at:
 31235 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31236 ;; Parameters:    Size  Location     Type
 31237 ;;		None
 31238 ;; Auto vars:     Size  Location     Type
 31239 ;;		None
 31240 ;; Return value:  Size  Location     Type
 31241 ;;                  1  [STACK] void 
 31242 ;; Registers used:
 31243 ;;		wreg, status,2
 31244 ;; Tracked objects:
 31245 ;;		On entry : 3F/39
 31246 ;;		On exit  : 3F/3F
 31247 ;;		Unchanged: 0/0
 31248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31253 ;;Total ram usage:        0 bytes
 31254 ;; Hardware stack levels used:    1
 31255 ;; Hardware stack levels required when called:   15
 31256 ;; This function calls:
 31257 ;;		Nothing
 31258 ;; This function is called by:
 31259 ;;		_SYSTEM_Initialize
 31260 ;; This function uses a reentrant model
 31261 ;;
 31262                           
 31263                           	psect	text128
 31264  01C498                     __ptext128:
 31265                           	opt callstack 0
 31266  01C498                     _PWM8_Initialize:
 31267                           	opt callstack 14
 31268                           
 31269                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31270                           
 31271                           ; BSR set to: 61
 31272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31273                           ;incstack = 0
 31274  01C498  0E80               	movlw	128
 31275  01C49A  6E62               	movwf	98,c	;volatile
 31276                           
 31277                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31278  01C49C  6A61               	clrf	97,c	;volatile
 31279                           
 31280                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31281  01C49E  0E40               	movlw	64
 31282  01C4A0  6E60               	movwf	96,c	;volatile
 31283                           
 31284                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31285  01C4A2  013F               	movlb	63	; () banked
 31286  01C4A4  515F               	movf	95,w,b	;volatile
 31287  01C4A6  0B3F               	andlw	-193
 31288  01C4A8  0940               	iorlw	64
 31289  01C4AA  6F5F               	movwf	95,b	;volatile
 31290                           
 31291                           ; BSR set to: 63
 31292                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31293  01C4AC  0012               	return		;funcret
 31294  01C4AE                     __end_of_PWM8_Initialize:
 31295                           	opt callstack 0
 31296                           
 31297 ;; *************** function _PMD_Initialize *****************
 31298 ;; Defined at:
 31299 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31300 ;; Parameters:    Size  Location     Type
 31301 ;;		None
 31302 ;; Auto vars:     Size  Location     Type
 31303 ;;		None
 31304 ;; Return value:  Size  Location     Type
 31305 ;;                  1  [STACK] void 
 31306 ;; Registers used:
 31307 ;;		None
 31308 ;; Tracked objects:
 31309 ;;		On entry : 3F/39
 31310 ;;		On exit  : 3F/39
 31311 ;;		Unchanged: 0/0
 31312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31317 ;;Total ram usage:        0 bytes
 31318 ;; Hardware stack levels used:    1
 31319 ;; Hardware stack levels required when called:   15
 31320 ;; This function calls:
 31321 ;;		Nothing
 31322 ;; This function is called by:
 31323 ;;		_SYSTEM_Initialize
 31324 ;; This function uses a reentrant model
 31325 ;;
 31326                           
 31327                           	psect	text129
 31328  01C4C4                     __ptext129:
 31329                           	opt callstack 0
 31330  01C4C4                     _PMD_Initialize:
 31331                           	opt callstack 14
 31332                           
 31333                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31334                           
 31335                           ; BSR set to: 63
 31336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31337                           ;incstack = 0
 31338  01C4C4  0139               	movlb	57	; () banked
 31339  01C4C6  6BC0               	clrf	192,b	;volatile
 31340                           
 31341                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31342  01C4C8  6BC1               	clrf	193,b	;volatile
 31343                           
 31344                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31345  01C4CA  6BC2               	clrf	194,b	;volatile
 31346                           
 31347                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31348  01C4CC  6BC3               	clrf	195,b	;volatile
 31349                           
 31350                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31351  01C4CE  6BC4               	clrf	196,b	;volatile
 31352                           
 31353                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31354  01C4D0  6BC5               	clrf	197,b	;volatile
 31355                           
 31356                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31357  01C4D2  6BC6               	clrf	198,b	;volatile
 31358                           
 31359                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31360  01C4D4  6BC7               	clrf	199,b	;volatile
 31361                           
 31362                           ; BSR set to: 57
 31363                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31364  01C4D6  0012               	return		;funcret
 31365  01C4D8                     __end_of_PMD_Initialize:
 31366                           	opt callstack 0
 31367                           
 31368 ;; *************** function _PIN_MANAGER_Initialize *****************
 31369 ;; Defined at:
 31370 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31371 ;; Parameters:    Size  Location     Type
 31372 ;;		None
 31373 ;; Auto vars:     Size  Location     Type
 31374 ;;		None
 31375 ;; Return value:  Size  Location     Type
 31376 ;;                  1  [STACK] void 
 31377 ;; Registers used:
 31378 ;;		wreg, status,2
 31379 ;; Tracked objects:
 31380 ;;		On entry : 3F/39
 31381 ;;		On exit  : 3F/3A
 31382 ;;		Unchanged: 0/0
 31383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31388 ;;Total ram usage:        0 bytes
 31389 ;; Hardware stack levels used:    1
 31390 ;; Hardware stack levels required when called:   15
 31391 ;; This function calls:
 31392 ;;		Nothing
 31393 ;; This function is called by:
 31394 ;;		_SYSTEM_Initialize
 31395 ;; This function uses a reentrant model
 31396 ;;
 31397                           
 31398                           	psect	text130
 31399  01AE70                     __ptext130:
 31400                           	opt callstack 0
 31401  01AE70                     _PIN_MANAGER_Initialize:
 31402                           	opt callstack 14
 31403                           
 31404                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31405                           
 31406                           ; BSR set to: 57
 31407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31408                           ;incstack = 0
 31409  01AE70  0E07               	movlw	7
 31410  01AE72  6EBE               	movwf	190,c	;volatile
 31411                           
 31412                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31413  01AE74  6ABD               	clrf	189,c	;volatile
 31414                           
 31415                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31416  01AE76  6ABA               	clrf	186,c	;volatile
 31417                           
 31418                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31419  01AE78  0E23               	movlw	35
 31420  01AE7A  6EBF               	movwf	191,c	;volatile
 31421                           
 31422                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31423  01AE7C  6ABB               	clrf	187,c	;volatile
 31424                           
 31425                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31426  01AE7E  0E07               	movlw	7
 31427  01AE80  6EBC               	movwf	188,c	;volatile
 31428                           
 31429                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31430  01AE82  6AC6               	clrf	198,c	;volatile
 31431                           
 31432                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31433  01AE84  0E0C               	movlw	12
 31434  01AE86  6EC7               	movwf	199,c	;volatile
 31435                           
 31436                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31437  01AE88  68C2               	setf	194,c	;volatile
 31438                           
 31439                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31440  01AE8A  0EBF               	movlw	191
 31441  01AE8C  6EC3               	movwf	195,c	;volatile
 31442                           
 31443                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31444  01AE8E  0E90               	movlw	144
 31445  01AE90  6EC4               	movwf	196,c	;volatile
 31446                           
 31447                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31448  01AE92  0E0C               	movlw	12
 31449  01AE94  6EC5               	movwf	197,c	;volatile
 31450                           
 31451                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31452  01AE96  013A               	movlb	58	; () banked
 31453  01AE98  6B70               	clrf	112,b	;volatile
 31454                           
 31455                           ; BSR set to: 58
 31456                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31457  01AE9A  6B60               	clrf	96,b	;volatile
 31458                           
 31459                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31460  01AE9C  0E3C               	movlw	60
 31461  01AE9E  6F50               	movwf	80,b	;volatile
 31462                           
 31463                           ; BSR set to: 58
 31464                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31465  01AEA0  6B80               	clrf	128,b	;volatile
 31466                           
 31467                           ; BSR set to: 58
 31468                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31469  01AEA2  6B90               	clrf	144,b	;volatile
 31470                           
 31471                           ; BSR set to: 58
 31472                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31473  01AEA4  6940               	setf	64,b	;volatile
 31474                           
 31475                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31476  01AEA6  0E0C               	movlw	12
 31477  01AEA8  6F71               	movwf	113,b	;volatile
 31478                           
 31479                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31480  01AEAA  0E0C               	movlw	12
 31481  01AEAC  6F91               	movwf	145,b	;volatile
 31482                           
 31483                           ; BSR set to: 58
 31484                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31485  01AEAE  6B81               	clrf	129,b	;volatile
 31486                           
 31487                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31488  01AEB0  0E83               	movlw	131
 31489  01AEB2  6F51               	movwf	81,b	;volatile
 31490                           
 31491                           ; BSR set to: 58
 31492                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31493  01AEB4  6B41               	clrf	65,b	;volatile
 31494                           
 31495                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31496  01AEB6  0E97               	movlw	151
 31497  01AEB8  6F61               	movwf	97,b	;volatile
 31498                           
 31499                           ; BSR set to: 58
 31500                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31501  01AEBA  6B82               	clrf	130,b	;volatile
 31502                           
 31503                           ; BSR set to: 58
 31504                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31505  01AEBC  6B92               	clrf	146,b	;volatile
 31506                           
 31507                           ; BSR set to: 58
 31508                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31509  01AEBE  6B42               	clrf	66,b	;volatile
 31510                           
 31511                           ; BSR set to: 58
 31512                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31513  01AEC0  6B52               	clrf	82,b	;volatile
 31514                           
 31515                           ; BSR set to: 58
 31516                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31517  01AEC2  6B62               	clrf	98,b	;volatile
 31518                           
 31519                           ; BSR set to: 58
 31520                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31521  01AEC4  6B72               	clrf	114,b	;volatile
 31522                           
 31523                           ; BSR set to: 58
 31524                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31525  01AEC6  6943               	setf	67,b	;volatile
 31526                           
 31527                           ; BSR set to: 58
 31528                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31529  01AEC8  6953               	setf	83,b	;volatile
 31530                           
 31531                           ; BSR set to: 58
 31532                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31533  01AECA  6963               	setf	99,b	;volatile
 31534                           
 31535                           ; BSR set to: 58
 31536                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31537  01AECC  6973               	setf	115,b	;volatile
 31538                           
 31539                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31540  01AECE  0E07               	movlw	7
 31541  01AED0  6F83               	movwf	131,b	;volatile
 31542                           
 31543                           ; BSR set to: 58
 31544                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31545  01AED2  6993               	setf	147,b	;volatile
 31546                           
 31547                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31548  01AED4  0E0F               	movlw	15
 31549  01AED6  6FE8               	movwf	232,b	;volatile
 31550                           
 31551                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31552  01AED8  0E13               	movlw	19
 31553  01AEDA  6FDE               	movwf	222,b	;volatile
 31554                           
 31555                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31556  01AEDC  0E16               	movlw	22
 31557  01AEDE  6F0E               	movwf	14,b	;volatile
 31558                           
 31559                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31560  01AEE0  0E1E               	movlw	30
 31561  01AEE2  6F13               	movwf	19,b	;volatile
 31562                           
 31563                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31564  01AEE4  0E08               	movlw	8
 31565  01AEE6  6FC0               	movwf	192,b	;volatile
 31566                           
 31567                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31568  01AEE8  0E10               	movlw	16
 31569  01AEEA  6F19               	movwf	25,b	;volatile
 31570                           
 31571                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31572  01AEEC  0E09               	movlw	9
 31573  01AEEE  6FC1               	movwf	193,b	;volatile
 31574                           
 31575                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31576  01AEF0  0E1F               	movlw	31
 31577  01AEF2  6F15               	movwf	21,b	;volatile
 31578                           
 31579                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31580  01AEF4  0E13               	movlw	19
 31581  01AEF6  6F16               	movwf	22,b	;volatile
 31582                           
 31583                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31584  01AEF8  0E17               	movlw	23
 31585  01AEFA  6FE5               	movwf	229,b	;volatile
 31586                           
 31587                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31588  01AEFC  0E14               	movlw	20
 31589  01AEFE  6FDF               	movwf	223,b	;volatile
 31590                           
 31591                           ; BSR set to: 58
 31592                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31593  01AF00  0012               	return		;funcret
 31594  01AF02                     __end_of_PIN_MANAGER_Initialize:
 31595                           	opt callstack 0
 31596                           
 31597 ;; *************** function _OSCILLATOR_Initialize *****************
 31598 ;; Defined at:
 31599 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31600 ;; Parameters:    Size  Location     Type
 31601 ;;		None
 31602 ;; Auto vars:     Size  Location     Type
 31603 ;;		None
 31604 ;; Return value:  Size  Location     Type
 31605 ;;                  1  [STACK] void 
 31606 ;; Registers used:
 31607 ;;		wreg, status,2
 31608 ;; Tracked objects:
 31609 ;;		On entry : 3F/3A
 31610 ;;		On exit  : 3F/39
 31611 ;;		Unchanged: 0/0
 31612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31617 ;;Total ram usage:        0 bytes
 31618 ;; Hardware stack levels used:    1
 31619 ;; Hardware stack levels required when called:   15
 31620 ;; This function calls:
 31621 ;;		Nothing
 31622 ;; This function is called by:
 31623 ;;		_SYSTEM_Initialize
 31624 ;; This function uses a reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text131
 31628  01C4AE                     __ptext131:
 31629                           	opt callstack 0
 31630  01C4AE                     _OSCILLATOR_Initialize:
 31631                           	opt callstack 14
 31632                           
 31633                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31634                           
 31635                           ; BSR set to: 58
 31636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31637                           ;incstack = 0
 31638  01C4AE  0E20               	movlw	32
 31639  01C4B0  0139               	movlb	57	; () banked
 31640  01C4B2  6FD9               	movwf	217,b	;volatile
 31641                           
 31642                           ; BSR set to: 57
 31643                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31644  01C4B4  6BDB               	clrf	219,b	;volatile
 31645                           
 31646                           ; BSR set to: 57
 31647                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31648  01C4B6  6BDD               	clrf	221,b	;volatile
 31649                           
 31650                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31651  01C4B8  0E02               	movlw	2
 31652  01C4BA  6FDF               	movwf	223,b	;volatile
 31653                           
 31654                           ; BSR set to: 57
 31655                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31656  01C4BC  6BDE               	clrf	222,b	;volatile
 31657  01C4BE                     l169:
 31658                           
 31659                           ; BSR set to: 57
 31660                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31661  01C4BE  B1DC               	btfsc	220,0,b	;volatile
 31662  01C4C0  0012               	return	
 31663  01C4C2  D7FD               	goto	l169
 31664  01C4C4                     __end_of_OSCILLATOR_Initialize:
 31665                           	opt callstack 0
 31666                           
 31667 ;; *************** function _INTERRUPT_Initialize *****************
 31668 ;; Defined at:
 31669 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31670 ;; Parameters:    Size  Location     Type
 31671 ;;		None
 31672 ;; Auto vars:     Size  Location     Type
 31673 ;;  state           1  [STACK] _Bool 
 31674 ;; Return value:  Size  Location     Type
 31675 ;;                  1  [STACK] void 
 31676 ;; Registers used:
 31677 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31678 ;; Tracked objects:
 31679 ;;		On entry : 0/0
 31680 ;;		On exit  : 3F/39
 31681 ;;		Unchanged: 0/0
 31682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31687 ;;Total ram usage:        0 bytes
 31688 ;; Hardware stack levels used:    1
 31689 ;; Hardware stack levels required when called:   15
 31690 ;; This function calls:
 31691 ;;		Nothing
 31692 ;; This function is called by:
 31693 ;;		_SYSTEM_Initialize
 31694 ;; This function uses a reentrant model
 31695 ;;
 31696                           
 31697                           	psect	text132
 31698  01B3B2                     __ptext132:
 31699                           	opt callstack 0
 31700  01B3B2                     _INTERRUPT_Initialize:
 31701                           	opt callstack 0
 31702                           
 31703                           ; BSR set to: 57
 31704                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31705  01B3B2  52E6               	movf	postinc1,f,c
 31706                           
 31707                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31708                           
 31709                           ;incstack = 0
 31710  01B3B4  8AD2               	bsf	210,5,c	;volatile
 31711                           
 31712                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31713  01B3B6  AED2               	btfss	16338,7,c	;volatile
 31714  01B3B8  D003               	goto	u9500
 31715  01B3BA  6A0C               	clrf	(btemp+11)^0,c
 31716  01B3BC  2A0C               	incf	(btemp+11)^0,f,c
 31717  01B3BE  D001               	goto	u9518
 31718  01B3C0                     u9500:
 31719  01B3C0  6A0C               	clrf	(btemp+11)^0,c
 31720  01B3C2                     u9518:
 31721                           
 31722                           ;stkvar	_state @ sp[(-1)+0]
 31723  01B3C2  0EFF               	movlw	-1
 31724  01B3C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31725                           
 31726                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31727  01B3CA  9ED2               	bcf	16338,7,c	;volatile
 31728                           
 31729                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31730  01B3CC  0E55               	movlw	85
 31731  01B3CE  6ED4               	movwf	212,c	;volatile
 31732                           
 31733                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31734  01B3D0  0EAA               	movlw	170
 31735  01B3D2  6ED4               	movwf	212,c	;volatile
 31736                           
 31737                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31738  01B3D4  90D4               	bcf	212,0,c	;volatile
 31739                           
 31740                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31741  01B3D6  0138               	movlb	56	; () banked
 31742  01B3D8  6B9F               	clrf	159,b	;volatile
 31743                           
 31744                           ; BSR set to: 56
 31745                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31746  01B3DA  6B9E               	clrf	158,b	;volatile
 31747                           
 31748                           ; BSR set to: 56
 31749                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31750  01B3DC  0E08               	movlw	8
 31751  01B3DE  6F9D               	movwf	157,b	;volatile
 31752                           
 31753                           ; BSR set to: 56
 31754                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31755  01B3E0  0E55               	movlw	85
 31756  01B3E2  6ED4               	movwf	212,c	;volatile
 31757                           
 31758                           ; BSR set to: 56
 31759                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31760  01B3E4  0EAA               	movlw	170
 31761  01B3E6  6ED4               	movwf	212,c	;volatile
 31762                           
 31763                           ; BSR set to: 56
 31764                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31765  01B3E8  80D4               	bsf	212,0,c	;volatile
 31766                           
 31767                           ; BSR set to: 56
 31768                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31769                           ;stkvar	_state @ sp[(-1)+0]
 31770  01B3EA  0EFF               	movlw	-1
 31771  01B3EC  B0E3               	btfsc	plusw1,0,c
 31772  01B3EE  D002               	bra	u9525
 31773  01B3F0  9ED2               	bcf	16338,7,c	;volatile
 31774  01B3F2  D001               	bra	u9526
 31775  01B3F4                     u9525:
 31776  01B3F4  8ED2               	bsf	16338,7,c	;volatile
 31777  01B3F6                     u9526:
 31778                           
 31779                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31780  01B3F6  0139               	movlb	57	; () banked
 31781  01B3F8  8782               	bsf	130,3,b	;volatile
 31782                           
 31783                           ; BSR set to: 57
 31784                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31785  01B3FA  8382               	bsf	130,1,b	;volatile
 31786                           
 31787                           ; BSR set to: 57
 31788                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31789  01B3FC  8182               	bsf	130,0,b	;volatile
 31790                           
 31791                           ; BSR set to: 57
 31792                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31793  01B3FE  8582               	bsf	130,2,b	;volatile
 31794                           
 31795                           ; BSR set to: 57
 31796                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31797  01B400  8786               	bsf	134,3,b	;volatile
 31798                           
 31799                           ; BSR set to: 57
 31800                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31801  01B402  8586               	bsf	134,2,b	;volatile
 31802                           
 31803                           ; BSR set to: 57
 31804                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31805  01B404  8783               	bsf	131,3,b	;volatile
 31806                           
 31807                           ; BSR set to: 57
 31808                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31809  01B406  8181               	bsf	129,0,b	;volatile
 31810                           
 31811                           ; BSR set to: 57
 31812                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31813  01B408  9185               	bcf	133,0,b	;volatile
 31814                           
 31815                           ; BSR set to: 57
 31816                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31817  01B40A  8189               	bsf	137,0,b	;volatile
 31818                           
 31819                           ; BSR set to: 57
 31820                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31821  01B40C  9D88               	bcf	136,6,b	;volatile
 31822                           
 31823                           ; BSR set to: 57
 31824                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31825  01B40E  9D86               	bcf	134,6,b	;volatile
 31826                           
 31827                           ; BSR set to: 57
 31828                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31829  01B410  8581               	bsf	129,2,b	;volatile
 31830                           
 31831                           ; BSR set to: 57
 31832                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31833  01B412  8781               	bsf	129,3,b	;volatile
 31834                           
 31835                           ; BSR set to: 57
 31836                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31837  01B414  52E5               	movf	postdec1,f,c
 31838  01B416  0012               	return		;funcret
 31839  01B418                     __end_of_INTERRUPT_Initialize:
 31840                           	opt callstack 0
 31841                           
 31842 ;; *************** function _FVR_Initialize *****************
 31843 ;; Defined at:
 31844 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31845 ;; Parameters:    Size  Location     Type
 31846 ;;		None
 31847 ;; Auto vars:     Size  Location     Type
 31848 ;;		None
 31849 ;; Return value:  Size  Location     Type
 31850 ;;                  1  [STACK] void 
 31851 ;; Registers used:
 31852 ;;		wreg, status,2
 31853 ;; Tracked objects:
 31854 ;;		On entry : 3F/39
 31855 ;;		On exit  : 3F/3E
 31856 ;;		Unchanged: 0/0
 31857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31862 ;;Total ram usage:        0 bytes
 31863 ;; Hardware stack levels used:    1
 31864 ;; Hardware stack levels required when called:   15
 31865 ;; This function calls:
 31866 ;;		Nothing
 31867 ;; This function is called by:
 31868 ;;		_SYSTEM_Initialize
 31869 ;; This function uses a reentrant model
 31870 ;;
 31871                           
 31872                           	psect	text133
 31873  01C5CA                     __ptext133:
 31874                           	opt callstack 0
 31875  01C5CA                     _FVR_Initialize:
 31876                           	opt callstack 14
 31877                           
 31878                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31879                           
 31880                           ; BSR set to: 57
 31881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31882                           ;incstack = 0
 31883  01C5CA  0EAF               	movlw	175
 31884  01C5CC  013E               	movlb	62	; () banked
 31885  01C5CE  6FC1               	movwf	193,b	;volatile
 31886                           
 31887                           ; BSR set to: 62
 31888                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31889  01C5D0  0012               	return		;funcret
 31890  01C5D2                     __end_of_FVR_Initialize:
 31891                           	opt callstack 0
 31892                           
 31893 ;; *************** function _EXT_INT_Initialize *****************
 31894 ;; Defined at:
 31895 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31896 ;; Parameters:    Size  Location     Type
 31897 ;;		None
 31898 ;; Auto vars:     Size  Location     Type
 31899 ;;		None
 31900 ;; Return value:  Size  Location     Type
 31901 ;;                  1  [STACK] void 
 31902 ;; Registers used:
 31903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31904 ;; Tracked objects:
 31905 ;;		On entry : 3F/3F
 31906 ;;		On exit  : 3F/39
 31907 ;;		Unchanged: 0/0
 31908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31913 ;;Total ram usage:        0 bytes
 31914 ;; Hardware stack levels used:    1
 31915 ;; Hardware stack levels required when called:   16
 31916 ;; This function calls:
 31917 ;;		_INT0_SetInterruptHandler
 31918 ;;		_INT1_SetInterruptHandler
 31919 ;; This function is called by:
 31920 ;;		_SYSTEM_Initialize
 31921 ;; This function uses a reentrant model
 31922 ;;
 31923                           
 31924                           	psect	text134
 31925  01BDDC                     __ptext134:
 31926                           	opt callstack 0
 31927  01BDDC                     _EXT_INT_Initialize:
 31928                           	opt callstack 13
 31929                           
 31930                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31931                           
 31932                           ; BSR set to: 62
 31933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31934                           ;incstack = 0
 31935  01BDDC  0139               	movlb	57	; () banked
 31936  01BDDE  91A1               	bcf	161,0,b	;volatile
 31937                           
 31938                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31939  01BDE0  90D2               	bcf	210,0,c	;volatile
 31940                           
 31941                           ; BSR set to: 57
 31942                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31943  01BDE2  0EF6               	movlw	low _INT0_DefaultInterruptHandler
 31944  01BDE4  6EE6               	movwf	postinc1,c
 31945  01BDE6  0EC5               	movlw	high _INT0_DefaultInterruptHandler
 31946  01BDE8  6EE6               	movwf	postinc1,c
 31947  01BDEA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31948  01BDEC  6EE6               	movwf	postinc1,c
 31949  01BDEE  EC8B  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 31950                           
 31951                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31952  01BDF2  0139               	movlb	57	; () banked
 31953  01BDF4  8191               	bsf	145,0,b	;volatile
 31954                           
 31955                           ; BSR set to: 57
 31956                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31957  01BDF6  91A5               	bcf	165,0,b	;volatile
 31958                           
 31959                           ; BSR set to: 57
 31960                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31961  01BDF8  92D2               	bcf	210,1,c	;volatile
 31962                           
 31963                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31964  01BDFA  0EF2               	movlw	low _INT1_DefaultInterruptHandler
 31965  01BDFC  6EE6               	movwf	postinc1,c
 31966  01BDFE  0EC5               	movlw	high _INT1_DefaultInterruptHandler
 31967  01BE00  6EE6               	movwf	postinc1,c
 31968  01BE02  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31969  01BE04  6EE6               	movwf	postinc1,c
 31970  01BE06  EC77  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 31971                           
 31972                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31973  01BE0A  0139               	movlb	57	; () banked
 31974  01BE0C  8195               	bsf	149,0,b	;volatile
 31975                           
 31976                           ; BSR set to: 57
 31977                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31978  01BE0E  0012               	return		;funcret
 31979  01BE10                     __end_of_EXT_INT_Initialize:
 31980                           	opt callstack 0
 31981                           
 31982 ;; *************** function _INT1_SetInterruptHandler *****************
 31983 ;; Defined at:
 31984 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31985 ;; Parameters:    Size  Location     Type
 31986 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31987 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31988 ;; Auto vars:     Size  Location     Type
 31989 ;;		None
 31990 ;; Return value:  Size  Location     Type
 31991 ;;                  1  [STACK] void 
 31992 ;; Registers used:
 31993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31994 ;; Tracked objects:
 31995 ;;		On entry : 3F/39
 31996 ;;		On exit  : 0/0
 31997 ;;		Unchanged: 0/0
 31998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32003 ;;Total ram usage:        0 bytes
 32004 ;; Hardware stack levels used:    1
 32005 ;; Hardware stack levels required when called:   15
 32006 ;; This function calls:
 32007 ;;		Nothing
 32008 ;; This function is called by:
 32009 ;;		_EXT_INT_Initialize
 32010 ;;		_start_switch_handler
 32011 ;; This function uses a reentrant model
 32012 ;;
 32013                           
 32014                           	psect	text135
 32015  01C0EE                     __ptext135:
 32016                           	opt callstack 0
 32017  01C0EE                     _INT1_SetInterruptHandler:
 32018                           	opt callstack 14
 32019                           
 32020                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32021                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32022                           
 32023                           ; BSR set to: 57
 32024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32025                           ;incstack = 0
 32026  01C0EE  50E1               	movf	fsr1l,w,c
 32027  01C0F0  0FFD               	addlw	-3
 32028  01C0F2  6ED9               	movwf	fsr2l,c
 32029  01C0F4  50E2               	movf	fsr1h,w,c
 32030  01C0F6  6EDA               	movwf	fsr2h,c
 32031  01C0F8  0EFF               	movlw	255
 32032  01C0FA  22DA               	addwfc	fsr2h,f,c
 32033  01C0FC  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32034  01C102  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32035  01C108  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32036                           
 32037                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32038  01C10E  52E5               	movf	postdec1,f,c
 32039  01C110  52E5               	movf	postdec1,f,c
 32040  01C112  52E5               	movf	postdec1,f,c
 32041  01C114  0012               	return		;funcret
 32042  01C116                     __end_of_INT1_SetInterruptHandler:
 32043                           	opt callstack 0
 32044                           
 32045 ;; *************** function _INT0_SetInterruptHandler *****************
 32046 ;; Defined at:
 32047 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32048 ;; Parameters:    Size  Location     Type
 32049 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32050 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32051 ;; Auto vars:     Size  Location     Type
 32052 ;;		None
 32053 ;; Return value:  Size  Location     Type
 32054 ;;                  1  [STACK] void 
 32055 ;; Registers used:
 32056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32057 ;; Tracked objects:
 32058 ;;		On entry : 3F/39
 32059 ;;		On exit  : 0/0
 32060 ;;		Unchanged: 0/0
 32061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32066 ;;Total ram usage:        0 bytes
 32067 ;; Hardware stack levels used:    1
 32068 ;; Hardware stack levels required when called:   15
 32069 ;; This function calls:
 32070 ;;		Nothing
 32071 ;; This function is called by:
 32072 ;;		_EXT_INT_Initialize
 32073 ;; This function uses a reentrant model
 32074 ;;
 32075                           
 32076                           	psect	text136
 32077  01C116                     __ptext136:
 32078                           	opt callstack 0
 32079  01C116                     _INT0_SetInterruptHandler:
 32080                           	opt callstack 13
 32081                           
 32082                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32083                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32084                           
 32085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32086                           ;incstack = 0
 32087  01C116  50E1               	movf	fsr1l,w,c
 32088  01C118  0FFD               	addlw	-3
 32089  01C11A  6ED9               	movwf	fsr2l,c
 32090  01C11C  50E2               	movf	fsr1h,w,c
 32091  01C11E  6EDA               	movwf	fsr2h,c
 32092  01C120  0EFF               	movlw	255
 32093  01C122  22DA               	addwfc	fsr2h,f,c
 32094  01C124  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32095  01C12A  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32096  01C130  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32097                           
 32098                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32099  01C136  52E5               	movf	postdec1,f,c
 32100  01C138  52E5               	movf	postdec1,f,c
 32101  01C13A  52E5               	movf	postdec1,f,c
 32102  01C13C  0012               	return		;funcret
 32103  01C13E                     __end_of_INT0_SetInterruptHandler:
 32104                           	opt callstack 0
 32105                           
 32106 ;; *************** function _DMA2_Initialize *****************
 32107 ;; Defined at:
 32108 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32109 ;; Parameters:    Size  Location     Type
 32110 ;;		None
 32111 ;; Auto vars:     Size  Location     Type
 32112 ;;		None
 32113 ;; Return value:  Size  Location     Type
 32114 ;;                  1  [STACK] void 
 32115 ;; Registers used:
 32116 ;;		wreg, status,2
 32117 ;; Tracked objects:
 32118 ;;		On entry : 3F/3D
 32119 ;;		On exit  : 3F/3B
 32120 ;;		Unchanged: 0/0
 32121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32126 ;;Total ram usage:        0 bytes
 32127 ;; Hardware stack levels used:    1
 32128 ;; Hardware stack levels required when called:   15
 32129 ;; This function calls:
 32130 ;;		Nothing
 32131 ;; This function is called by:
 32132 ;;		_SYSTEM_Initialize
 32133 ;; This function uses a reentrant model
 32134 ;;
 32135                           
 32136                           	psect	text137
 32137  01B654                     __ptext137:
 32138                           	opt callstack 0
 32139  01B654                     _DMA2_Initialize:
 32140                           	opt callstack 14
 32141                           
 32142                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32143                           
 32144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32145                           ;incstack = 0
 32146  01B654  0E00               	movlw	0
 32147  01B656  013B               	movlb	59	; () banked
 32148  01B658  6FD9               	movwf	217,b	;volatile
 32149  01B65A  0E10               	movlw	16
 32150  01B65C  6FDA               	movwf	218,b	;volatile
 32151  01B65E  0E00               	movlw	0
 32152  01B660  6FDB               	movwf	219,b	;volatile
 32153                           
 32154                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32155  01B662  0E3F               	movlw	63
 32156  01B664  6FD1               	movwf	209,b	;volatile
 32157  01B666  0EBB               	movlw	187
 32158  01B668  6FD0               	movwf	208,b	;volatile
 32159                           
 32160                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32161  01B66A  0E03               	movlw	3
 32162  01B66C  6FDD               	movwf	221,b	;volatile
 32163                           
 32164                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32165  01B66E  0E00               	movlw	0
 32166  01B670  6FD8               	movwf	216,b	;volatile
 32167  01B672  0E01               	movlw	1
 32168  01B674  6FD7               	movwf	215,b	;volatile
 32169                           
 32170                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32171  01B676  0E00               	movlw	0
 32172  01B678  6FCF               	movwf	207,b	;volatile
 32173  01B67A  0E01               	movlw	1
 32174  01B67C  6FCE               	movwf	206,b	;volatile
 32175                           
 32176                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32177  01B67E  0E1C               	movlw	28
 32178  01B680  6FDF               	movwf	223,b	;volatile
 32179                           
 32180                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32181  01B682  0E3D               	movlw	61
 32182  01B684  6FDE               	movwf	222,b	;volatile
 32183                           
 32184                           ; BSR set to: 59
 32185                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32186  01B686  0139               	movlb	57	; () banked
 32187  01B688  97A5               	bcf	165,3,b	;volatile
 32188                           
 32189                           ; BSR set to: 57
 32190                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32191  01B68A  95A5               	bcf	165,2,b	;volatile
 32192                           
 32193                           ; BSR set to: 57
 32194                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32195  01B68C  9BA5               	bcf	165,5,b	;volatile
 32196                           
 32197                           ; BSR set to: 57
 32198                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32199  01B68E  99A5               	bcf	165,4,b	;volatile
 32200                           
 32201                           ; BSR set to: 57
 32202                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32203  01B690  9795               	bcf	149,3,b	;volatile
 32204                           
 32205                           ; BSR set to: 57
 32206                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32207  01B692  9595               	bcf	149,2,b	;volatile
 32208                           
 32209                           ; BSR set to: 57
 32210                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32211  01B694  9B95               	bcf	149,5,b	;volatile
 32212                           
 32213                           ; BSR set to: 57
 32214                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32215  01B696  9995               	bcf	149,4,b	;volatile
 32216  01B698  9ED2               	bcf	16338,7,c	;# 
 32217  01B69A  0139               	banksel	14831	;# 
 32218  01B69C  0E55               	movlw	85	;# 
 32219  01B69E  6FEF               	movwf	14831,b	;# 
 32220  01B6A0  0EAA               	movlw	170	;# 
 32221  01B6A2  6FEF               	movwf	14831,b	;# 
 32222  01B6A4  81EF               	bsf	14831,0,b	;# 
 32223  01B6A6  8ED2               	bsf	16338,7,c	;# 
 32224                           
 32225                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32226  01B6A8  013B               	movlb	59	; () banked
 32227  01B6AA  6BDC               	clrf	220,b	;volatile
 32228                           
 32229                           ; BSR set to: 59
 32230                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32231  01B6AC  0012               	return		;funcret
 32232  01B6AE                     __end_of_DMA2_Initialize:
 32233                           	opt callstack 0
 32234                           
 32235 ;; *************** function _DMA1_Initialize *****************
 32236 ;; Defined at:
 32237 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32238 ;; Parameters:    Size  Location     Type
 32239 ;;		None
 32240 ;; Auto vars:     Size  Location     Type
 32241 ;;		None
 32242 ;; Return value:  Size  Location     Type
 32243 ;;                  1  [STACK] void 
 32244 ;; Registers used:
 32245 ;;		wreg, status,2
 32246 ;; Tracked objects:
 32247 ;;		On entry : 3F/3B
 32248 ;;		On exit  : 3F/3B
 32249 ;;		Unchanged: 0/0
 32250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32255 ;;Total ram usage:        0 bytes
 32256 ;; Hardware stack levels used:    1
 32257 ;; Hardware stack levels required when called:   15
 32258 ;; This function calls:
 32259 ;;		Nothing
 32260 ;; This function is called by:
 32261 ;;		_SYSTEM_Initialize
 32262 ;; This function uses a reentrant model
 32263 ;;
 32264                           
 32265                           	psect	text138
 32266  01B274                     __ptext138:
 32267                           	opt callstack 0
 32268  01B274                     _DMA1_Initialize:
 32269                           	opt callstack 14
 32270                           
 32271                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32272                           
 32273                           ; BSR set to: 59
 32274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32275                           ;incstack = 0
 32276  01B274  0E00               	movlw	0
 32277  01B276  013B               	movlb	59	; () banked
 32278  01B278  6FF9               	movwf	249,b	;volatile
 32279  01B27A  0E10               	movlw	16
 32280  01B27C  6FFA               	movwf	250,b	;volatile
 32281  01B27E  0E00               	movlw	0
 32282  01B280  6FFB               	movwf	251,b	;volatile
 32283                           
 32284                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32285  01B282  0E3D               	movlw	61
 32286  01B284  6FF1               	movwf	241,b	;volatile
 32287  01B286  0E11               	movlw	17
 32288  01B288  6FF0               	movwf	240,b	;volatile
 32289                           
 32290                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32291  01B28A  0E03               	movlw	3
 32292  01B28C  6FFD               	movwf	253,b	;volatile
 32293                           
 32294                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32295  01B28E  0E00               	movlw	0
 32296  01B290  6FF8               	movwf	248,b	;volatile
 32297  01B292  0E01               	movlw	1
 32298  01B294  6FF7               	movwf	247,b	;volatile
 32299                           
 32300                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32301  01B296  0E00               	movlw	0
 32302  01B298  6FEF               	movwf	239,b	;volatile
 32303  01B29A  0E01               	movlw	1
 32304  01B29C  6FEE               	movwf	238,b	;volatile
 32305                           
 32306                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32307  01B29E  0E15               	movlw	21
 32308  01B2A0  6FFF               	movwf	255,b	;volatile
 32309                           
 32310                           ; BSR set to: 59
 32311                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32312  01B2A2  6BFE               	clrf	254,b	;volatile
 32313                           
 32314                           ; BSR set to: 59
 32315                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32316  01B2A4  0139               	movlb	57	; () banked
 32317  01B2A6  93A2               	bcf	162,1,b	;volatile
 32318                           
 32319                           ; BSR set to: 57
 32320                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32321  01B2A8  91A2               	bcf	162,0,b	;volatile
 32322                           
 32323                           ; BSR set to: 57
 32324                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32325  01B2AA  97A2               	bcf	162,3,b	;volatile
 32326                           
 32327                           ; BSR set to: 57
 32328                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32329  01B2AC  95A2               	bcf	162,2,b	;volatile
 32330                           
 32331                           ; BSR set to: 57
 32332                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32333  01B2AE  8392               	bsf	146,1,b	;volatile
 32334                           
 32335                           ; BSR set to: 57
 32336                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32337  01B2B0  8192               	bsf	146,0,b	;volatile
 32338                           
 32339                           ; BSR set to: 57
 32340                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32341  01B2B2  8792               	bsf	146,3,b	;volatile
 32342                           
 32343                           ; BSR set to: 57
 32344                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32345  01B2B4  8592               	bsf	146,2,b	;volatile
 32346                           
 32347                           ; BSR set to: 57
 32348                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32349  01B2B6  6BF1               	clrf	241,b	;volatile
 32350                           
 32351                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32352  01B2B8  0E01               	movlw	1
 32353  01B2BA  6FF2               	movwf	242,b	;volatile
 32354                           
 32355                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32356  01B2BC  0E04               	movlw	4
 32357  01B2BE  6FF3               	movwf	243,b	;volatile
 32358                           
 32359                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32360  01B2C0  0E02               	movlw	2
 32361  01B2C2  6FF4               	movwf	244,b	;volatile
 32362                           
 32363                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32364  01B2C4  0E03               	movlw	3
 32365  01B2C6  6FF7               	movwf	247,b	;volatile
 32366  01B2C8  9ED2               	bcf	16338,7,c	;# 
 32367  01B2CA  0139               	banksel	14831	;# 
 32368  01B2CC  0E55               	movlw	85	;# 
 32369  01B2CE  6FEF               	movwf	14831,b	;# 
 32370  01B2D0  0EAA               	movlw	170	;# 
 32371  01B2D2  6FEF               	movwf	14831,b	;# 
 32372  01B2D4  81EF               	bsf	14831,0,b	;# 
 32373  01B2D6  8ED2               	bsf	16338,7,c	;# 
 32374                           
 32375                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32376  01B2D8  013B               	movlb	59	; () banked
 32377  01B2DA  6BFC               	clrf	252,b	;volatile
 32378                           
 32379                           ; BSR set to: 59
 32380                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32381  01B2DC  0012               	return		;funcret
 32382  01B2DE                     __end_of_DMA1_Initialize:
 32383                           	opt callstack 0
 32384                           
 32385 ;; *************** function _CLKREF_Initialize *****************
 32386 ;; Defined at:
 32387 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32388 ;; Parameters:    Size  Location     Type
 32389 ;;		None
 32390 ;; Auto vars:     Size  Location     Type
 32391 ;;		None
 32392 ;; Return value:  Size  Location     Type
 32393 ;;                  1  [STACK] void 
 32394 ;; Registers used:
 32395 ;;		wreg, status,2
 32396 ;; Tracked objects:
 32397 ;;		On entry : 3F/3B
 32398 ;;		On exit  : 3F/3C
 32399 ;;		Unchanged: 0/0
 32400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32405 ;;Total ram usage:        0 bytes
 32406 ;; Hardware stack levels used:    1
 32407 ;; Hardware stack levels required when called:   15
 32408 ;; This function calls:
 32409 ;;		Nothing
 32410 ;; This function is called by:
 32411 ;;		_SYSTEM_Initialize
 32412 ;; This function uses a reentrant model
 32413 ;;
 32414                           
 32415                           	psect	text139
 32416  01C572                     __ptext139:
 32417                           	opt callstack 0
 32418  01C572                     _CLKREF_Initialize:
 32419                           	opt callstack 14
 32420                           
 32421                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32422                           
 32423                           ; BSR set to: 59
 32424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32425                           ;incstack = 0
 32426  01C572  013C               	movlb	60	; () banked
 32427  01C574  6BE6               	clrf	230,b	;volatile
 32428                           
 32429                           ; BSR set to: 60
 32430                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32431  01C576  0E94               	movlw	148
 32432  01C578  6FE5               	movwf	229,b	;volatile
 32433                           
 32434                           ; BSR set to: 60
 32435                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32436  01C57A  0012               	return		;funcret
 32437  01C57C                     __end_of_CLKREF_Initialize:
 32438                           	opt callstack 0
 32439                           
 32440 ;; *************** function _ADCC_Initialize *****************
 32441 ;; Defined at:
 32442 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32443 ;; Parameters:    Size  Location     Type
 32444 ;;		None
 32445 ;; Auto vars:     Size  Location     Type
 32446 ;;		None
 32447 ;; Return value:  Size  Location     Type
 32448 ;;                  1  [STACK] void 
 32449 ;; Registers used:
 32450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32451 ;; Tracked objects:
 32452 ;;		On entry : 3F/3E
 32453 ;;		On exit  : 0/0
 32454 ;;		Unchanged: 0/0
 32455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32460 ;;Total ram usage:        0 bytes
 32461 ;; Hardware stack levels used:    1
 32462 ;; Hardware stack levels required when called:   16
 32463 ;; This function calls:
 32464 ;;		_ADCC_SetADIInterruptHandler
 32465 ;;		_ADCC_SetADTIInterruptHandler
 32466 ;; This function is called by:
 32467 ;;		_SYSTEM_Initialize
 32468 ;; This function uses a reentrant model
 32469 ;;
 32470                           
 32471                           	psect	text140
 32472  01B2DE                     __ptext140:
 32473                           	opt callstack 0
 32474  01B2DE                     _ADCC_Initialize:
 32475                           	opt callstack 13
 32476                           
 32477                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32478                           
 32479                           ; BSR set to: 60
 32480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32481                           ;incstack = 0
 32482  01B2DE  013E               	movlb	62	; () banked
 32483  01B2E0  6BDE               	clrf	222,b	;volatile
 32484                           
 32485                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32486  01B2E2  6BDF               	clrf	223,b	;volatile
 32487                           
 32488                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32489  01B2E4  6BE0               	clrf	224,b	;volatile
 32490                           
 32491                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32492  01B2E6  6BE1               	clrf	225,b	;volatile
 32493                           
 32494                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32495  01B2E8  6BE4               	clrf	228,b	;volatile
 32496                           
 32497                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32498  01B2EA  6BE5               	clrf	229,b	;volatile
 32499                           
 32500                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32501  01B2EC  6BEA               	clrf	234,b	;volatile
 32502                           
 32503                           ; BSR set to: 62
 32504                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32505  01B2EE  0E40               	movlw	64
 32506  01B2F0  6FEC               	movwf	236,b	;volatile
 32507                           
 32508                           ; BSR set to: 62
 32509                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32510  01B2F2  6BF1               	clrf	241,b	;volatile
 32511                           
 32512                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32513  01B2F4  0E20               	movlw	32
 32514  01B2F6  6FF3               	movwf	243,b	;volatile
 32515                           
 32516                           ; BSR set to: 62
 32517                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32518  01B2F8  6BF4               	clrf	244,b	;volatile
 32519                           
 32520                           ; BSR set to: 62
 32521                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32522  01B2FA  6BF5               	clrf	245,b	;volatile
 32523                           
 32524                           ; BSR set to: 62
 32525                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32526  01B2FC  6BF6               	clrf	246,b	;volatile
 32527                           
 32528                           ; BSR set to: 62
 32529                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32530  01B2FE  6BF7               	clrf	247,b	;volatile
 32531                           
 32532                           ; BSR set to: 62
 32533                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32534  01B300  6BF9               	clrf	249,b	;volatile
 32535                           
 32536                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32537  01B302  0E5B               	movlw	91
 32538  01B304  6FFA               	movwf	250,b	;volatile
 32539                           
 32540                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32541  01B306  0E27               	movlw	39
 32542  01B308  6FFB               	movwf	251,b	;volatile
 32543                           
 32544                           ; BSR set to: 62
 32545                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32546  01B30A  6BFC               	clrf	252,b	;volatile
 32547                           
 32548                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32549  01B30C  0E02               	movlw	2
 32550  01B30E  6FFD               	movwf	253,b	;volatile
 32551                           
 32552                           ; BSR set to: 62
 32553                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32554  01B310  6BFE               	clrf	254,b	;volatile
 32555                           
 32556                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32557  01B312  0E07               	movlw	7
 32558  01B314  6FFF               	movwf	255,b	;volatile
 32559                           
 32560                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32561  01B316  0E84               	movlw	132
 32562  01B318  6FF8               	movwf	248,b	;volatile
 32563                           
 32564                           ; BSR set to: 62
 32565                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32566  01B31A  0139               	movlb	57	; () banked
 32567  01B31C  95A1               	bcf	161,2,b	;volatile
 32568                           
 32569                           ; BSR set to: 57
 32570                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32571  01B31E  8591               	bsf	145,2,b	;volatile
 32572                           
 32573                           ; BSR set to: 57
 32574                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32575  01B320  0EF8               	movlw	low _ADCC_DefaultInterruptHandler
 32576  01B322  6EE6               	movwf	postinc1,c
 32577  01B324  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32578  01B326  6EE6               	movwf	postinc1,c
 32579  01B328  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32580  01B32A  6EE6               	movwf	postinc1,c
 32581  01B32C  ECB3  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32582                           
 32583                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32584  01B330  0139               	movlb	57	; () banked
 32585  01B332  97A1               	bcf	161,3,b	;volatile
 32586                           
 32587                           ; BSR set to: 57
 32588                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32589  01B334  8791               	bsf	145,3,b	;volatile
 32590                           
 32591                           ; BSR set to: 57
 32592                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32593  01B336  0EF8               	movlw	low _ADCC_DefaultInterruptHandler
 32594  01B338  6EE6               	movwf	postinc1,c
 32595  01B33A  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32596  01B33C  6EE6               	movwf	postinc1,c
 32597  01B33E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32598  01B340  6EE6               	movwf	postinc1,c
 32599  01B342  EC9F  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32600                           
 32601                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32602  01B346  0012               	return		;funcret
 32603  01B348                     __end_of_ADCC_Initialize:
 32604                           	opt callstack 0
 32605                           
 32606 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32607 ;; Defined at:
 32608 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32609 ;; Parameters:    Size  Location     Type
 32610 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32611 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32612 ;; Auto vars:     Size  Location     Type
 32613 ;;		None
 32614 ;; Return value:  Size  Location     Type
 32615 ;;                  1  [STACK] void 
 32616 ;; Registers used:
 32617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32618 ;; Tracked objects:
 32619 ;;		On entry : 0/0
 32620 ;;		On exit  : 0/0
 32621 ;;		Unchanged: 0/0
 32622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32627 ;;Total ram usage:        0 bytes
 32628 ;; Hardware stack levels used:    1
 32629 ;; Hardware stack levels required when called:   15
 32630 ;; This function calls:
 32631 ;;		Nothing
 32632 ;; This function is called by:
 32633 ;;		_ADCC_Initialize
 32634 ;;		_start_adc_scan
 32635 ;; This function uses a reentrant model
 32636 ;;
 32637                           
 32638                           	psect	text141
 32639  01C13E                     __ptext141:
 32640                           	opt callstack 0
 32641  01C13E                     _ADCC_SetADTIInterruptHandler:
 32642                           	opt callstack 14
 32643                           
 32644                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32645                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32646                           
 32647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32648                           ;incstack = 0
 32649  01C13E  50E1               	movf	fsr1l,w,c
 32650  01C140  0FFD               	addlw	-3
 32651  01C142  6ED9               	movwf	fsr2l,c
 32652  01C144  50E2               	movf	fsr1h,w,c
 32653  01C146  6EDA               	movwf	fsr2h,c
 32654  01C148  0EFF               	movlw	255
 32655  01C14A  22DA               	addwfc	fsr2h,f,c
 32656  01C14C  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32657  01C152  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32658  01C158  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32659                           
 32660                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32661  01C15E  52E5               	movf	postdec1,f,c
 32662  01C160  52E5               	movf	postdec1,f,c
 32663  01C162  52E5               	movf	postdec1,f,c
 32664  01C164  0012               	return		;funcret
 32665  01C166                     __end_of_ADCC_SetADTIInterruptHandler:
 32666                           	opt callstack 0
 32667                           
 32668 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32669 ;; Defined at:
 32670 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32671 ;; Parameters:    Size  Location     Type
 32672 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32673 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32674 ;; Auto vars:     Size  Location     Type
 32675 ;;		None
 32676 ;; Return value:  Size  Location     Type
 32677 ;;                  1  [STACK] void 
 32678 ;; Registers used:
 32679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32680 ;; Tracked objects:
 32681 ;;		On entry : 6/0
 32682 ;;		On exit  : 0/0
 32683 ;;		Unchanged: 0/0
 32684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32689 ;;Total ram usage:        0 bytes
 32690 ;; Hardware stack levels used:    1
 32691 ;; Hardware stack levels required when called:   15
 32692 ;; This function calls:
 32693 ;;		Nothing
 32694 ;; This function is called by:
 32695 ;;		_ADCC_Initialize
 32696 ;;		_start_adc_scan
 32697 ;; This function uses a reentrant model
 32698 ;;
 32699                           
 32700                           	psect	text142
 32701  01C166                     __ptext142:
 32702                           	opt callstack 0
 32703  01C166                     _ADCC_SetADIInterruptHandler:
 32704                           	opt callstack 14
 32705                           
 32706                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32707                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32708                           
 32709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32710                           ;incstack = 0
 32711  01C166  50E1               	movf	fsr1l,w,c
 32712  01C168  0FFD               	addlw	-3
 32713  01C16A  6ED9               	movwf	fsr2l,c
 32714  01C16C  50E2               	movf	fsr1h,w,c
 32715  01C16E  6EDA               	movwf	fsr2h,c
 32716  01C170  0EFF               	movlw	255
 32717  01C172  22DA               	addwfc	fsr2h,f,c
 32718  01C174  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32719  01C17A  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32720  01C180  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32721                           
 32722                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32723  01C186  52E5               	movf	postdec1,f,c
 32724  01C188  52E5               	movf	postdec1,f,c
 32725  01C18A  52E5               	movf	postdec1,f,c
 32726  01C18C  0012               	return		;funcret
 32727  01C18E                     __end_of_ADCC_SetADIInterruptHandler:
 32728                           	opt callstack 0
 32729                           
 32730 ;; *************** function _INT1_ISR *****************
 32731 ;; Defined at:
 32732 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32733 ;; Parameters:    Size  Location     Type
 32734 ;;		None
 32735 ;; Auto vars:     Size  Location     Type
 32736 ;;		None
 32737 ;; Return value:  Size  Location     Type
 32738 ;;                  1    wreg      void 
 32739 ;; Registers used:
 32740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32741 ;; Tracked objects:
 32742 ;;		On entry : 0/0
 32743 ;;		On exit  : 0/0
 32744 ;;		Unchanged: 0/0
 32745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32750 ;;Total ram usage:        4 bytes
 32751 ;; Hardware stack levels used:    1
 32752 ;; Hardware stack levels required when called:    5
 32753 ;; This function calls:
 32754 ;;		_INT1_CallBack
 32755 ;; This function is called by:
 32756 ;;		Interrupt level 1
 32757 ;; This function uses a non-reentrant model
 32758 ;;
 32759                           
 32760                           	psect	text143
 32761  01BBEC                     __ptext143:
 32762                           	opt callstack 0
 32763  01BBEC                     _INT1_ISR:
 32764                           	opt callstack 11
 32765                           
 32766                           ;incstack = 0
 32767  01BBEC  006F FF60  F027    	movff	status,??_INT1_ISR
 32768  01BBF2  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32769  01BBF8  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32770  01BBFE  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32771  01BC04  EE16  F0AF         	lfsr	1,___intlo_sp
 32772                           
 32773                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32774  01BC08  0139               	movlb	57	; () banked
 32775  01BC0A  91A5               	bcf	165,0,b	;volatile
 32776                           
 32777                           ; BSR set to: 57
 32778                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32779  01BC0C  EC16  F0E1         	call	_INT1_CallBack	;wreg free
 32780  01BC10  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32781  01BC16  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32782  01BC1C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32783  01BC22  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32784  01BC28  0011               	retfie		f
 32785  01BC2A                     __end_of_INT1_ISR:
 32786                           	opt callstack 0
 32787                           
 32788 ;; *************** function _INT1_CallBack *****************
 32789 ;; Defined at:
 32790 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32791 ;; Parameters:    Size  Location     Type
 32792 ;;		None
 32793 ;; Auto vars:     Size  Location     Type
 32794 ;;		None
 32795 ;; Return value:  Size  Location     Type
 32796 ;;                  1  [STACK] void 
 32797 ;; Registers used:
 32798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32799 ;; Tracked objects:
 32800 ;;		On entry : 3F/39
 32801 ;;		On exit  : 0/0
 32802 ;;		Unchanged: 0/0
 32803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32808 ;;Total ram usage:        0 bytes
 32809 ;; Hardware stack levels used:    1
 32810 ;; Hardware stack levels required when called:    4
 32811 ;; This function calls:
 32812 ;;		Absolute function
 32813 ;;		_INT1_DefaultInterruptHandler
 32814 ;;		_switch_handler
 32815 ;; This function is called by:
 32816 ;;		_INT1_ISR
 32817 ;; This function uses a reentrant model
 32818 ;;
 32819                           
 32820                           	psect	text144
 32821  01C22C                     __ptext144:
 32822                           	opt callstack 0
 32823  01C22C                     _INT1_CallBack:
 32824                           	opt callstack 11
 32825                           
 32826                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32827                           
 32828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32829                           ;incstack = 0
 32830  01C22C  0100               	movlb	0	; () banked
 32831  01C22E  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32832  01C230  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32833  01C232  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32834  01C234  B4D8               	btfsc	status,2,c
 32835  01C236  0012               	return	
 32836                           
 32837                           ; BSR set to: 0
 32838                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32839  01C238  D801               	call	u1009_28
 32840  01C23A  0012               	return	
 32841  01C23C                     u1009_28:
 32842  01C23C  0005               	push	
 32843  01C23E  6EFA               	movwf	pclath,c
 32844  01C240  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32845  01C242  6EFD               	movwf	tosl,c
 32846  01C244  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32847  01C246  6EFE               	movwf	tosh,c
 32848  01C248  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32849  01C24A  6EFF               	movwf	tosu,c
 32850  01C24C  50FA               	movf	pclath,w,c
 32851  01C24E  0012               	return		;indir
 32852  01C250                     __end_of_INT1_CallBack:
 32853                           	opt callstack 0
 32854                           
 32855 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32856 ;; Defined at:
 32857 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32858 ;; Parameters:    Size  Location     Type
 32859 ;;		None
 32860 ;; Auto vars:     Size  Location     Type
 32861 ;;		None
 32862 ;; Return value:  Size  Location     Type
 32863 ;;                  1  [STACK] void 
 32864 ;; Registers used:
 32865 ;;		None
 32866 ;; Tracked objects:
 32867 ;;		On entry : 3F/0
 32868 ;;		On exit  : 0/0
 32869 ;;		Unchanged: 0/0
 32870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32875 ;;Total ram usage:        0 bytes
 32876 ;; Hardware stack levels used:    1
 32877 ;; Hardware stack levels required when called:    3
 32878 ;; This function calls:
 32879 ;;		Nothing
 32880 ;; This function is called by:
 32881 ;;		_EXT_INT_Initialize
 32882 ;;		_INT1_CallBack
 32883 ;; This function uses a reentrant model
 32884 ;;
 32885                           
 32886                           	psect	text145
 32887  01C5F2                     __ptext145:
 32888                           	opt callstack 0
 32889  01C5F2                     _INT1_DefaultInterruptHandler:
 32890                           	opt callstack 11
 32891                           
 32892                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32893                           
 32894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32895                           ;incstack = 0
 32896  01C5F2  0012               	return		;funcret
 32897  01C5F4                     __end_of_INT1_DefaultInterruptHandler:
 32898                           	opt callstack 0
 32899                           
 32900 ;; *************** function _switch_handler *****************
 32901 ;; Defined at:
 32902 ;;		line 58 in file "dio.c"
 32903 ;; Parameters:    Size  Location     Type
 32904 ;;		None
 32905 ;; Auto vars:     Size  Location     Type
 32906 ;;  i               1  [STACK] unsigned char 
 32907 ;;  sw_value        1  [STACK] unsigned char 
 32908 ;; Return value:  Size  Location     Type
 32909 ;;                  1  [STACK] void 
 32910 ;; Registers used:
 32911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32912 ;; Tracked objects:
 32913 ;;		On entry : 3F/0
 32914 ;;		On exit  : 0/0
 32915 ;;		Unchanged: 0/0
 32916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32921 ;;Total ram usage:        0 bytes
 32922 ;; Hardware stack levels used:    1
 32923 ;; Hardware stack levels required when called:    3
 32924 ;; This function calls:
 32925 ;;		Nothing
 32926 ;; This function is called by:
 32927 ;;		_start_switch_handler
 32928 ;;		_INT1_CallBack
 32929 ;; This function uses a reentrant model
 32930 ;;
 32931                           
 32932                           	psect	text146
 32933  019768                     __ptext146:
 32934                           	opt callstack 0
 32935  019768                     _switch_handler:
 32936                           	opt callstack 0
 32937                           
 32938                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32939  019768  52E6               	movf	postinc1,f,c
 32940  01976A  52E6               	movf	postinc1,f,c
 32941                           
 32942                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32943                           ;stkvar	_i @ sp[(-2)+0]
 32944                           
 32945                           ;incstack = 0
 32946  01976C  0EFE               	movlw	-2
 32947  01976E  6AE3               	clrf	plusw1,c
 32948  019770  9ABF               	bcf	191,5,c	;volatile
 32949                           
 32950                           ;dio.c: 72:  __nop();
 32951  019772  F000               	nop	
 32952                           
 32953                           ;dio.c: 73:  __nop();
 32954  019774  F000               	nop	
 32955                           
 32956                           ;dio.c: 74:  __nop();
 32957  019776  F000               	nop	
 32958                           
 32959                           ;dio.c: 75:  __nop();
 32960  019778  F000               	nop	
 32961                           
 32962                           ;dio.c: 76:  __nop();
 32963  01977A  F000               	nop	
 32964                           
 32965                           ;dio.c: 77:  __nop();
 32966  01977C  F000               	nop	
 32967  01977E  D013               	goto	l10774
 32968  019780                     l10762:
 32969                           
 32970                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32971  019780  A6CF               	btfss	207,3,c	;volatile
 32972  019782  D00B               	goto	u978_20
 32973  019784  D007               	goto	u978_21
 32974  019786                     u977_28:
 32975                           
 32976                           ;stkvar	_sw_value @ sp[(-2)+1]
 32977  019786  0EFF               	movlw	-1
 32978  019788  0060  F033  FFE3   	movff	btemp+11,plusw1
 32979                           
 32980                           ;dio.c: 83:    break;
 32981  01978E  D021               	goto	l10776
 32982  019790                     l10764:
 32983                           
 32984                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32985  019790  A4CF               	btfss	207,2,c	;volatile
 32986  019792  D003               	goto	u978_20
 32987  019794                     u978_21:
 32988  019794  6A0C               	clrf	(btemp+11)^0,c
 32989  019796  2A0C               	incf	(btemp+11)^0,f,c
 32990  019798  D7F6               	goto	u977_28
 32991  01979A                     u978_20:
 32992  01979A  6A0C               	clrf	(btemp+11)^0,c
 32993  01979C  D7F4               	goto	u977_28
 32994  01979E                     l10766:
 32995                           
 32996                           ;dio.c: 88:    sw_value = 1;
 32997                           ;stkvar	_sw_value @ sp[(-2)+1]
 32998  01979E  0EFF               	movlw	-1
 32999  0197A0  6AE3               	clrf	plusw1,c
 33000  0197A2  2AE3               	incf	plusw1,f,c
 33001                           
 33002                           ;dio.c: 89:    break;
 33003  0197A4  D016               	goto	l10776
 33004  0197A6                     l10774:
 33005                           
 33006                           ;stkvar	_i @ sp[(-2)+0]
 33007  0197A6  0EFE               	movlw	-2
 33008  0197A8  50E3               	movf	plusw1,w,c
 33009  0197AA  6E0B               	movwf	(btemp+10)^0,c
 33010  0197AC  6A0C               	clrf	(btemp+11)^0,c
 33011                           
 33012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33013                           ; Switch size 1, requested type "simple"
 33014                           ; Number of cases is 1, Range of values is 0 to 0
 33015                           ; switch strategies available:
 33016                           ; Name         Instructions Cycles
 33017                           ; simple_byte            4     3 (average)
 33018                           ;	Chosen strategy is simple_byte
 33019  0197AE  500C               	movf	(btemp+11)^0,w,c
 33020  0197B0  0A00               	xorlw	0	; case 0
 33021  0197B2  A4D8               	btfss	status,2,c
 33022  0197B4  D7F4               	goto	l10766
 33023                           
 33024                           ; Switch size 1, requested type "simple"
 33025                           ; Number of cases is 4, Range of values is 0 to 3
 33026                           ; switch strategies available:
 33027                           ; Name         Instructions Cycles
 33028                           ; simple_byte           13     7 (average)
 33029                           ;	Chosen strategy is simple_byte
 33030  0197B6  500B               	movf	(btemp+10)^0,w,c
 33031  0197B8  0A00               	xorlw	0	; case 0
 33032  0197BA  B4D8               	btfsc	status,2,c
 33033  0197BC  D7F0               	goto	l10766
 33034  0197BE  0A01               	xorlw	1	; case 1
 33035  0197C0  B4D8               	btfsc	status,2,c
 33036  0197C2  D7ED               	goto	l10766
 33037  0197C4  0A03               	xorlw	3	; case 2
 33038  0197C6  B4D8               	btfsc	status,2,c
 33039  0197C8  D7E3               	goto	l10764
 33040  0197CA  0A01               	xorlw	1	; case 3
 33041  0197CC  B4D8               	btfsc	status,2,c
 33042  0197CE  D7D8               	goto	l10762
 33043  0197D0  D7E6               	goto	l10766
 33044  0197D2                     l10776:
 33045                           
 33046                           ;dio.c: 99:   if (sw_value) {
 33047                           ;stkvar	_sw_value @ sp[(-2)+1]
 33048  0197D2  0EFF               	movlw	-1
 33049  0197D4  50E3               	movf	plusw1,w,c
 33050  0197D6  B4D8               	btfsc	status,2,c
 33051  0197D8  D018               	goto	l10782
 33052                           
 33053                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 33054                           ;stkvar	_i @ sp[(-2)+0]
 33055  0197DA  0EFE               	movlw	-2
 33056  0197DC  50E3               	movf	plusw1,w,c
 33057  0197DE  0D05               	mullw	5
 33058  0197E0  0E54               	movlw	low _S
 33059  0197E2  24F3               	addwf	243,w,c
 33060  0197E4  6ED9               	movwf	fsr2l,c
 33061  0197E6  0E02               	movlw	high _S
 33062  0197E8  20F4               	addwfc	prodh,w,c
 33063  0197EA  6EDA               	movwf	fsr2h,c
 33064  0197EC  04DE               	decf	postinc2,w,c
 33065  0197EE  A4D8               	btfss	status,2,c
 33066  0197F0  D049               	goto	l10790
 33067                           
 33068                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 33069                           ;stkvar	_i @ sp[(-2)+0]
 33070  0197F2  0EFE               	movlw	-2
 33071  0197F4  50E3               	movf	plusw1,w,c
 33072  0197F6  0D05               	mullw	5
 33073  0197F8  0E54               	movlw	low _S
 33074  0197FA  24F3               	addwf	243,w,c
 33075  0197FC  6ED9               	movwf	fsr2l,c
 33076  0197FE  0E02               	movlw	high _S
 33077  019800  20F4               	addwfc	prodh,w,c
 33078  019802  6EDA               	movwf	fsr2h,c
 33079  019804  0E00               	movlw	0
 33080  019806  6EDF               	movwf	indf2,c
 33081  019808  D03D               	goto	l10790
 33082  01980A                     l10782:
 33083                           
 33084                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 33085                           ;stkvar	_i @ sp[(-2)+0]
 33086  01980A  0EFE               	movlw	-2
 33087  01980C  50E3               	movf	plusw1,w,c
 33088  01980E  0D05               	mullw	5
 33089  019810  0E54               	movlw	low _S
 33090  019812  24F3               	addwf	243,w,c
 33091  019814  6ED9               	movwf	fsr2l,c
 33092  019816  0E02               	movlw	high _S
 33093  019818  20F4               	addwfc	prodh,w,c
 33094  01981A  6EDA               	movwf	fsr2h,c
 33095  01981C  50DF               	movf	indf2,w,c
 33096  01981E  A4D8               	btfss	status,2,c
 33097  019820  D031               	goto	l10790
 33098                           
 33099                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 33100                           ;stkvar	_i @ sp[(-2)+0]
 33101  019822  0EFE               	movlw	-2
 33102  019824  50E3               	movf	plusw1,w,c
 33103  019826  0D05               	mullw	5
 33104  019828  0E54               	movlw	low _S
 33105  01982A  24F3               	addwf	243,w,c
 33106  01982C  6ED9               	movwf	fsr2l,c
 33107  01982E  0E02               	movlw	high _S
 33108  019830  20F4               	addwfc	prodh,w,c
 33109  019832  6EDA               	movwf	fsr2h,c
 33110  019834  0E01               	movlw	1
 33111  019836  6EDF               	movwf	indf2,c
 33112                           
 33113                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 33114  019838  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33115                           
 33116                           ;stkvar	_i @ sp[(-2)+0]
 33117  01983C  0EFE               	movlw	-2
 33118  01983E  50E3               	movf	plusw1,w,c
 33119  019840  0D05               	mullw	5
 33120  019842  0E55               	movlw	low (_S+1)
 33121  019844  24F3               	addwf	243,w,c
 33122  019846  6EE9               	movwf	fsr0l,c
 33123  019848  0E02               	movlw	high (_S+1)
 33124  01984A  20F4               	addwfc	prodh,w,c
 33125  01984C  6EEA               	movwf	fsr0h,c
 33126  01984E  006F FF7B FFEE     	movff	postinc2,postinc0
 33127  019854  006F FF7B FFEE     	movff	postinc2,postinc0
 33128  01985A  006F FF7B FFEE     	movff	postinc2,postinc0
 33129  019860  006F FF7B FFEE     	movff	postinc2,postinc0
 33130                           
 33131                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 33132                           ;stkvar	_i @ sp[(-2)+0]
 33133  019866  0EFE               	movlw	-2
 33134  019868  006F FF8C  F00C    	movff	plusw1,btemp+11
 33135  01986E  0E01               	movlw	1
 33136  019870  6E0B               	movwf	(btemp+10)^0,c
 33137  019872  2A0C               	incf	(btemp+11)^0,f,c
 33138  019874  D002               	goto	u982_24
 33139  019876                     u982_25:
 33140  019876  90D8               	bcf	status,0,c
 33141  019878  360B               	rlcf	(btemp+10)^0,f,c
 33142  01987A                     u982_24:
 33143  01987A  2E0C               	decfsz	(btemp+11)^0,f,c
 33144  01987C  D7FC               	goto	u982_25
 33145  01987E  500B               	movf	(btemp+10)^0,w,c
 33146  019880  0102               	movlb	2	; () banked
 33147  019882  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33148  019884                     l10790:
 33149                           
 33150                           ;dio.c: 110:  } while (++i < 4);
 33151                           ;stkvar	_i @ sp[(-2)+0]
 33152  019884  0EFE               	movlw	-2
 33153  019886  2AE3               	incf	plusw1,f,c
 33154  019888  0EFE               	movlw	-2
 33155  01988A  006F FF8C  F001    	movff	plusw1,btemp
 33156  019890  0E03               	movlw	3
 33157  019892  6401               	cpfsgt	btemp^0,c
 33158  019894  D788               	goto	l10774
 33159                           
 33160                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 33161  019896  8ABF               	bsf	191,5,c	;volatile
 33162                           
 33163                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33164  019898  52E5               	movf	postdec1,f,c
 33165  01989A  52E5               	movf	postdec1,f,c
 33166  01989C  0012               	return		;funcret
 33167  01989E                     __end_of_switch_handler:
 33168                           	opt callstack 0
 33169                           
 33170 ;; *************** function _TMR5_ISR *****************
 33171 ;; Defined at:
 33172 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33173 ;; Parameters:    Size  Location     Type
 33174 ;;		None
 33175 ;; Auto vars:     Size  Location     Type
 33176 ;;		None
 33177 ;; Return value:  Size  Location     Type
 33178 ;;                  1    wreg      void 
 33179 ;; Registers used:
 33180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33181 ;; Tracked objects:
 33182 ;;		On entry : 0/0
 33183 ;;		On exit  : 3F/0
 33184 ;;		Unchanged: 0/0
 33185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33188 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33189 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33190 ;;Total ram usage:       15 bytes
 33191 ;; Hardware stack levels used:    1
 33192 ;; Hardware stack levels required when called:    9
 33193 ;; This function calls:
 33194 ;;		_TMR5_CallBack
 33195 ;;		_TMR5_WriteTimer
 33196 ;; This function is called by:
 33197 ;;		Interrupt level 1
 33198 ;; This function uses a non-reentrant model
 33199 ;;
 33200                           
 33201                           	psect	text147
 33202  01A230                     __ptext147:
 33203                           	opt callstack 0
 33204  01A230                     _TMR5_ISR:
 33205                           	opt callstack 7
 33206                           
 33207                           ;incstack = 0
 33208  01A230  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33209  01A236  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33210  01A23C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33211  01A242  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33212  01A248  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33213  01A24E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33214  01A254  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33215  01A25A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33216  01A260  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33217  01A266  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33218  01A26C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33219  01A272  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33220  01A278  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33221  01A27E  EE16  F0AF         	lfsr	1,___intlo_sp
 33222                           
 33223                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33224  01A282  0139               	movlb	57	; () banked
 33225  01A284  9DA8               	bcf	168,6,b	;volatile
 33226                           
 33227                           ; BSR set to: 57
 33228                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33229  01A286  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33230  01A28C  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33231  01A292  ECB6  F0DD         	call	_TMR5_WriteTimer	;wreg free
 33232                           
 33233                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33234  01A296  0101               	movlb	1	; () banked
 33235  01A298  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33236  01A29A  6E2B               	movwf	??_TMR5_ISR^0,c
 33237  01A29C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33238  01A29E  0E05               	movlw	5
 33239  01A2A0  262B               	addwf	??_TMR5_ISR^0,f,c
 33240  01A2A2  0E00               	movlw	0
 33241  01A2A4  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33242  01A2A6  0100               	movlb	0	; () banked
 33243  01A2A8  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33244  01A2AA  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33245  01A2AC  502B               	movf	??_TMR5_ISR^0,w,c
 33246  01A2AE  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33247  01A2B0  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33248  01A2B2  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33249  01A2B4  A0D8               	btfss	status,0,c
 33250  01A2B6  D005               	goto	i1l1019
 33251                           
 33252                           ; BSR set to: 0
 33253                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33254  01A2B8  EC28  F0E1         	call	_TMR5_CallBack	;wreg free
 33255                           
 33256                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33257  01A2BC  0100               	movlb	0	; () banked
 33258  01A2BE  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33259  01A2C0  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33260  01A2C2                     i1l1019:
 33261                           
 33262                           ; BSR set to: 0
 33263  01A2C2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33264  01A2C8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33265  01A2CE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33266  01A2D4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33267  01A2DA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33268  01A2E0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33269  01A2E6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33270  01A2EC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33271  01A2F2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33272  01A2F8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33273  01A2FE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33274  01A304  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33275  01A30A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33276  01A310  0011               	retfie		f
 33277  01A312                     __end_of_TMR5_ISR:
 33278                           	opt callstack 0
 33279                           
 33280 ;; *************** function _TMR5_WriteTimer *****************
 33281 ;; Defined at:
 33282 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33283 ;; Parameters:    Size  Location     Type
 33284 ;;  timerVal        2  [STACK] unsigned short 
 33285 ;; Auto vars:     Size  Location     Type
 33286 ;;		None
 33287 ;; Return value:  Size  Location     Type
 33288 ;;                  1  [STACK] void 
 33289 ;; Registers used:
 33290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33291 ;; Tracked objects:
 33292 ;;		On entry : 3F/39
 33293 ;;		On exit  : 0/0
 33294 ;;		Unchanged: 0/0
 33295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33300 ;;Total ram usage:        0 bytes
 33301 ;; Hardware stack levels used:    1
 33302 ;; Hardware stack levels required when called:    3
 33303 ;; This function calls:
 33304 ;;		Nothing
 33305 ;; This function is called by:
 33306 ;;		_TMR5_ISR
 33307 ;; This function uses a reentrant model
 33308 ;;
 33309                           
 33310                           	psect	text148
 33311  01BB6C                     __ptext148:
 33312                           	opt callstack 0
 33313  01BB6C                     _TMR5_WriteTimer:
 33314                           	opt callstack 12
 33315                           
 33316                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33317                           
 33318                           ; BSR set to: 0
 33319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33320                           ;incstack = 0
 33321  01BB6C  A49A               	btfss	154,2,c	;volatile
 33322  01BB6E  D00F               	goto	l10994
 33323                           
 33324                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33325  01BB70  909A               	bcf	154,0,c	;volatile
 33326                           
 33327                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33328                           ;stkvar	_timerVal @ sp[(0)+-2]
 33329  01BB72  0EFF               	movlw	255
 33330  01BB74  24E1               	addwf	fsr1l,w,c
 33331  01BB76  6ED9               	movwf	fsr2l,c
 33332  01BB78  0EFF               	movlw	255
 33333  01BB7A  20E2               	addwfc	fsr1h,w,c
 33334  01BB7C  6EDA               	movwf	fsr2h,c
 33335  01BB7E  50DF               	movf	indf2,w,c
 33336  01BB80  6E99               	movwf	153,c	;volatile
 33337                           
 33338                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33339                           ;stkvar	_timerVal @ sp[(0)+-2]
 33340  01BB82  0EFE               	movlw	-2
 33341  01BB84  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33342                           
 33343                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33344  01BB8A  809A               	bsf	154,0,c	;volatile
 33345                           
 33346                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33347  01BB8C  D00C               	goto	l1002
 33348  01BB8E                     l10994:
 33349                           
 33350                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33351                           ;stkvar	_timerVal @ sp[(0)+-2]
 33352  01BB8E  0EFF               	movlw	255
 33353  01BB90  24E1               	addwf	fsr1l,w,c
 33354  01BB92  6ED9               	movwf	fsr2l,c
 33355  01BB94  0EFF               	movlw	255
 33356  01BB96  20E2               	addwfc	fsr1h,w,c
 33357  01BB98  6EDA               	movwf	fsr2h,c
 33358  01BB9A  50DF               	movf	indf2,w,c
 33359  01BB9C  6E99               	movwf	153,c	;volatile
 33360                           
 33361                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33362                           ;stkvar	_timerVal @ sp[(0)+-2]
 33363  01BB9E  0EFE               	movlw	-2
 33364  01BBA0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33365  01BBA6                     l1002:
 33366                           
 33367                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33368  01BBA6  52E5               	movf	postdec1,f,c
 33369  01BBA8  52E5               	movf	postdec1,f,c
 33370  01BBAA  0012               	return		;funcret
 33371  01BBAC                     __end_of_TMR5_WriteTimer:
 33372                           	opt callstack 0
 33373                           
 33374 ;; *************** function _TMR5_CallBack *****************
 33375 ;; Defined at:
 33376 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33377 ;; Parameters:    Size  Location     Type
 33378 ;;		None
 33379 ;; Auto vars:     Size  Location     Type
 33380 ;;		None
 33381 ;; Return value:  Size  Location     Type
 33382 ;;                  1  [STACK] void 
 33383 ;; Registers used:
 33384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33385 ;; Tracked objects:
 33386 ;;		On entry : 3F/0
 33387 ;;		On exit  : 0/0
 33388 ;;		Unchanged: 0/0
 33389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33394 ;;Total ram usage:        0 bytes
 33395 ;; Hardware stack levels used:    1
 33396 ;; Hardware stack levels required when called:    8
 33397 ;; This function calls:
 33398 ;;		Absolute function
 33399 ;;		_TMR5_DefaultInterruptHandler
 33400 ;; This function is called by:
 33401 ;;		_TMR5_ISR
 33402 ;; This function uses a reentrant model
 33403 ;;
 33404                           
 33405                           	psect	text149
 33406  01C250                     __ptext149:
 33407                           	opt callstack 0
 33408  01C250                     _TMR5_CallBack:
 33409                           	opt callstack 7
 33410                           
 33411                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33412                           
 33413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33414                           ;incstack = 0
 33415  01C250  0100               	movlb	0	; () banked
 33416  01C252  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33417  01C254  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33418  01C256  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33419  01C258  B4D8               	btfsc	status,2,c
 33420  01C25A  0012               	return	
 33421                           
 33422                           ; BSR set to: 0
 33423                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33424  01C25C  D801               	call	u1018_28
 33425  01C25E  0012               	return	
 33426  01C260                     u1018_28:
 33427  01C260  0005               	push	
 33428  01C262  6EFA               	movwf	pclath,c
 33429  01C264  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33430  01C266  6EFD               	movwf	tosl,c
 33431  01C268  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33432  01C26A  6EFE               	movwf	tosh,c
 33433  01C26C  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33434  01C26E  6EFF               	movwf	tosu,c
 33435  01C270  50FA               	movf	pclath,w,c
 33436  01C272  0012               	return		;indir
 33437  01C274                     __end_of_TMR5_CallBack:
 33438                           	opt callstack 0
 33439                           
 33440 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33441 ;; Defined at:
 33442 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33443 ;; Parameters:    Size  Location     Type
 33444 ;;		None
 33445 ;; Auto vars:     Size  Location     Type
 33446 ;;		None
 33447 ;; Return value:  Size  Location     Type
 33448 ;;                  1  [STACK] void 
 33449 ;; Registers used:
 33450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33451 ;; Tracked objects:
 33452 ;;		On entry : 3F/0
 33453 ;;		On exit  : 0/0
 33454 ;;		Unchanged: 0/0
 33455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33460 ;;Total ram usage:        0 bytes
 33461 ;; Hardware stack levels used:    1
 33462 ;; Hardware stack levels required when called:    7
 33463 ;; This function calls:
 33464 ;;		_check_day_time
 33465 ;; This function is called by:
 33466 ;;		_TMR5_Initialize
 33467 ;;		_TMR5_CallBack
 33468 ;; This function uses a reentrant model
 33469 ;;
 33470                           
 33471                           	psect	text150
 33472  01BC9C                     __ptext150:
 33473                           	opt callstack 0
 33474  01BC9C                     _TMR5_DefaultInterruptHandler:
 33475                           	opt callstack 7
 33476                           
 33477                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33478                           
 33479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33480                           ;incstack = 0
 33481  01BC9C  A0BE               	btfss	190,0,c	;volatile
 33482  01BC9E  D002               	goto	u956_20
 33483  01BCA0  0E01               	movlw	1
 33484  01BCA2  D001               	goto	u956_26
 33485  01BCA4                     u956_20:
 33486  01BCA4  0E00               	movlw	0
 33487  01BCA6                     u956_26:
 33488  01BCA6  0AFF               	xorlw	255
 33489  01BCA8  6E0C               	movwf	(btemp+11)^0,c
 33490  01BCAA  50BE               	movf	190,w,c	;volatile
 33491  01BCAC  180C               	xorwf	(btemp+11)^0,w,c
 33492  01BCAE  0BFE               	andlw	-2
 33493  01BCB0  180C               	xorwf	(btemp+11)^0,w,c
 33494  01BCB2  6EBE               	movwf	190,c	;volatile
 33495                           
 33496                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33497  01BCB4  0E01               	movlw	1
 33498  01BCB6  0101               	movlb	1	; () banked
 33499  01BCB8  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33500  01BCBA  0E00               	movlw	0
 33501  01BCBC  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33502  01BCBE  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33503  01BCC0  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33504                           
 33505                           ; BSR set to: 1
 33506                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33507  01BCC2  0E01               	movlw	1
 33508  01BCC4  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33509  01BCC6  0E00               	movlw	0
 33510  01BCC8  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33511  01BCCA  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33512  01BCCC  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33513                           
 33514                           ; BSR set to: 1
 33515                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33516  01BCCE  EC33  F0C5         	call	_check_day_time	;wreg free
 33517                           
 33518                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33519  01BCD2  0012               	return		;funcret
 33520  01BCD4                     __end_of_TMR5_DefaultInterruptHandler:
 33521                           	opt callstack 0
 33522                           
 33523 ;; *************** function _check_day_time *****************
 33524 ;; Defined at:
 33525 ;;		line 165 in file "mbmc.c"
 33526 ;; Parameters:    Size  Location     Type
 33527 ;;		None
 33528 ;; Auto vars:     Size  Location     Type
 33529 ;;  light           4  [STACK] float 
 33530 ;; Return value:  Size  Location     Type
 33531 ;;                  1  [STACK] _Bool 
 33532 ;; Registers used:
 33533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33534 ;; Tracked objects:
 33535 ;;		On entry : 3F/1
 33536 ;;		On exit  : 0/0
 33537 ;;		Unchanged: 0/0
 33538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33543 ;;Total ram usage:        0 bytes
 33544 ;; Hardware stack levels used:    1
 33545 ;; Hardware stack levels required when called:    6
 33546 ;; This function calls:
 33547 ;;		___flge
 33548 ;;		_conv_raw_result
 33549 ;;		_get_ac_charger_relay
 33550 ;;		_set_ac_charger_relay
 33551 ;; This function is called by:
 33552 ;;		_TMR5_DefaultInterruptHandler
 33553 ;; This function uses a reentrant model
 33554 ;;
 33555                           
 33556                           	psect	text151
 33557  018A66                     __ptext151:
 33558                           	opt callstack 0
 33559  018A66                     _check_day_time:
 33560                           	opt callstack 0
 33561                           
 33562                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33563  018A66  52E6               	movf	postinc1,f,c
 33564  018A68  52E6               	movf	postinc1,f,c
 33565  018A6A  52E6               	movf	postinc1,f,c
 33566  018A6C  52E6               	movf	postinc1,f,c
 33567                           
 33568                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33569                           
 33570                           ;incstack = 0
 33571  018A6E  0E00               	movlw	0
 33572  018A70  6EE6               	movwf	postinc1,c
 33573  018A72  0E0D               	movlw	13
 33574  018A74  6EE6               	movwf	postinc1,c
 33575  018A76  EC95  F0A9         	call	_conv_raw_result	;wreg free
 33576                           
 33577                           ;stkvar	_light @ sp[(-4)+0]
 33578  018A7A  0EFC               	movlw	-4
 33579  018A7C  0060  F007  FFE3   	movff	btemp,plusw1
 33580  018A82  0EFD               	movlw	-3
 33581  018A84  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33582  018A8A  0EFE               	movlw	-2
 33583  018A8C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33584  018A92  0EFF               	movlw	-1
 33585  018A94  0060  F013  FFE3   	movff	btemp+3,plusw1
 33586                           
 33587                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33588  018A9A  2A41               	incf	check_day_time@day_delay^0,f,c
 33589  018A9C  0441               	decf	check_day_time@day_delay^0,w,c
 33590  018A9E  A4D8               	btfss	status,2,c
 33591  018AA0  D0A9               	goto	l1982
 33592  018AA2  0101               	movlb	1	; () banked
 33593  018AA4  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33594  018AA6  B4D8               	btfsc	status,2,c
 33595  018AA8  D0A5               	goto	l1982
 33596                           
 33597                           ; BSR set to: 1
 33598                           ;mbmc.c: 173:   if (C.soc > 3) {
 33599  018AAA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33600  018AAE  0E01               	movlw	1
 33601  018AB0  50DB               	movf	plusw2,w,c
 33602  018AB2  E104               	bnz	u935_20
 33603  018AB4  0E04               	movlw	4
 33604  018AB6  5CDE               	subwf	postinc2,w,c
 33605  018AB8  A0D8               	btfss	status,0,c
 33606  018ABA  D073               	goto	l10032
 33607  018ABC                     u935_20:
 33608                           
 33609                           ; BSR set to: 1
 33610                           ;mbmc.c: 174:    if (!C.day) {
 33611  018ABC  EE22  F021         	lfsr	2,_C+290	;volatile
 33612  018AC0  50DF               	movf	indf2,w,c
 33613  018AC2  A4D8               	btfss	status,2,c
 33614  018AC4  D035               	goto	l10020
 33615                           
 33616                           ; BSR set to: 1
 33617                           ;mbmc.c: 175:     if (light > 22.0) {
 33618                           ;stkvar	_light @ sp[(-4)+0]
 33619  018AC6  0EFC               	movlw	-4
 33620  018AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 33621  018ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 33622  018AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 33623  018ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 33624  018AE0  0E00               	movlw	0
 33625  018AE2  6EE6               	movwf	postinc1,c
 33626  018AE4  0E00               	movlw	0
 33627  018AE6  6EE6               	movwf	postinc1,c
 33628  018AE8  0EB0               	movlw	176
 33629  018AEA  6EE6               	movwf	postinc1,c
 33630  018AEC  0E41               	movlw	65
 33631  018AEE  6EE6               	movwf	postinc1,c
 33632  018AF0  EC0A  F0C9         	call	___flge	;wreg free
 33633  018AF4  B001               	btfsc	btemp& (0+255),0,c
 33634  018AF6  D07E               	goto	l1982
 33635                           
 33636                           ;mbmc.c: 176:      C.day = 1;
 33637  018AF8  0E01               	movlw	1
 33638  018AFA  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33639                           
 33640                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33641  018B00  EE20  F188         	lfsr	2,_V+129	;volatile
 33642  018B04  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33643  018B0A  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33644  018B10  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33645  018B16  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33646                           
 33647                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33648  018B1C  ECA3  F0E2         	call	_get_ac_charger_relay	;wreg free
 33649  018B20  5001               	movf	btemp^0,w,c
 33650  018B22  B4D8               	btfsc	status,2,c
 33651  018B24  D06B               	goto	l1978
 33652                           
 33653                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33654  018B26  0E00               	movlw	0
 33655  018B28  6EE6               	movwf	postinc1,c
 33656  018B2A  EC8D  F0E2         	call	_set_ac_charger_relay	;wreg free
 33657  018B2E  D066               	goto	l1978
 33658  018B30                     l10020:
 33659                           
 33660                           ; BSR set to: 1
 33661                           ;mbmc.c: 184:     if (light < 12.0) {
 33662  018B30  0E00               	movlw	0
 33663  018B32  6EE6               	movwf	postinc1,c
 33664  018B34  0E00               	movlw	0
 33665  018B36  6EE6               	movwf	postinc1,c
 33666  018B38  0E40               	movlw	64
 33667  018B3A  6EE6               	movwf	postinc1,c
 33668  018B3C  0E41               	movlw	65
 33669  018B3E  6EE6               	movwf	postinc1,c
 33670                           
 33671                           ;stkvar	_light @ sp[(-8)+0]
 33672  018B40  0EF8               	movlw	-8
 33673  018B42  006F FF8F FFE6     	movff	plusw1,postinc1
 33674  018B48  006F FF8F FFE6     	movff	plusw1,postinc1
 33675  018B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 33676  018B54  006F FF8F FFE6     	movff	plusw1,postinc1
 33677  018B5A  EC0A  F0C9         	call	___flge	;wreg free
 33678  018B5E  B001               	btfsc	btemp& (0+255),0,c
 33679  018B60  D049               	goto	l1982
 33680                           
 33681                           ;mbmc.c: 185:      C.day = 0;
 33682  018B62  0E00               	movlw	0
 33683  018B64  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33684                           
 33685                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33686  018B6A  EE20  F188         	lfsr	2,_V+129	;volatile
 33687  018B6E  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33688  018B74  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33689  018B7A  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33690  018B80  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33691                           
 33692                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 33693  018B86  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33694  018B8A  0E01               	movlw	1
 33695  018B8C  50DB               	movf	plusw2,w,c
 33696  018B8E  E136               	bnz	l1978
 33697  018B90  0E14               	movlw	20
 33698  018B92  5CDE               	subwf	postinc2,w,c
 33699  018B94  B0D8               	btfsc	status,0,c
 33700  018B96  D032               	goto	l1978
 33701                           
 33702                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33703  018B98  0E01               	movlw	1
 33704  018B9A  6EE6               	movwf	postinc1,c
 33705  018B9C  EC8D  F0E2         	call	_set_ac_charger_relay	;wreg free
 33706  018BA0  D02D               	goto	l1978
 33707  018BA2                     l10032:
 33708                           
 33709                           ; BSR set to: 1
 33710                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33711  018BA2  EE21  F377         	lfsr	2,_C+120	;volatile
 33712  018BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33713  018BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33714  018BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 33715  018BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 33716  018BBE  EE21  F37B         	lfsr	2,_C+124	;volatile
 33717  018BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 33718  018BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 33719  018BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 33720  018BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 33721  018BDA  EC0A  F0C9         	call	___flge	;wreg free
 33722  018BDE  B001               	btfsc	btemp& (0+255),0,c
 33723  018BE0  D009               	goto	l1982
 33724                           
 33725                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33726  018BE2  ECA3  F0E2         	call	_get_ac_charger_relay	;wreg free
 33727  018BE6  5001               	movf	btemp^0,w,c
 33728  018BE8  A4D8               	btfss	status,2,c
 33729  018BEA  D004               	goto	l1982
 33730                           
 33731                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33732  018BEC  0E01               	movlw	1
 33733  018BEE  6EE6               	movwf	postinc1,c
 33734  018BF0  EC8D  F0E2         	call	_set_ac_charger_relay	;wreg free
 33735  018BF4                     l1982:
 33736                           
 33737                           ;mbmc.c: 204:  if (day_delay >= 240)
 33738  018BF4  0EEF               	movlw	239
 33739  018BF6  6441               	cpfsgt	check_day_time@day_delay^0,c
 33740  018BF8  D001               	goto	l1978
 33741                           
 33742                           ;mbmc.c: 205:   day_delay = 0;
 33743  018BFA  6A41               	clrf	check_day_time@day_delay^0,c
 33744  018BFC                     l1978:
 33745                           
 33746                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33747  018BFC  52E5               	movf	postdec1,f,c
 33748  018BFE  52E5               	movf	postdec1,f,c
 33749  018C00  52E5               	movf	postdec1,f,c
 33750  018C02  52E5               	movf	postdec1,f,c
 33751  018C04  0012               	return		;funcret
 33752  018C06                     __end_of_check_day_time:
 33753                           	opt callstack 0
 33754                           
 33755 ;; *************** function _set_ac_charger_relay *****************
 33756 ;; Defined at:
 33757 ;;		line 135 in file "mbmc.c"
 33758 ;; Parameters:    Size  Location     Type
 33759 ;;  mode            1  [STACK] const _Bool 
 33760 ;; Auto vars:     Size  Location     Type
 33761 ;;		None
 33762 ;; Return value:  Size  Location     Type
 33763 ;;                  1  [STACK] void 
 33764 ;; Registers used:
 33765 ;;		wreg, fsr1l, fsr1h
 33766 ;; Tracked objects:
 33767 ;;		On entry : 0/1
 33768 ;;		On exit  : 0/0
 33769 ;;		Unchanged: 0/0
 33770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33775 ;;Total ram usage:        0 bytes
 33776 ;; Hardware stack levels used:    1
 33777 ;; Hardware stack levels required when called:    3
 33778 ;; This function calls:
 33779 ;;		Nothing
 33780 ;; This function is called by:
 33781 ;;		_check_day_time
 33782 ;; This function uses a reentrant model
 33783 ;;
 33784                           
 33785                           	psect	text152
 33786  01C51A                     __ptext152:
 33787                           	opt callstack 0
 33788  01C51A                     _set_ac_charger_relay:
 33789                           	opt callstack 9
 33790                           
 33791                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33792                           ;stkvar	_mode @ sp[(0)+-1]
 33793                           
 33794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33795                           ;incstack = 0
 33796  01C51A  0EFF               	movlw	-1
 33797  01C51C  B0E3               	btfsc	plusw1,0,c
 33798  01C51E  D002               	bra	u930_25
 33799  01C520  9CBD               	bcf	189,6,c	;volatile
 33800  01C522  D001               	bra	u930_26
 33801  01C524                     u930_25:
 33802  01C524  8CBD               	bsf	189,6,c	;volatile
 33803  01C526                     u930_26:
 33804                           
 33805                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33806  01C526  52E5               	movf	postdec1,f,c
 33807  01C528  0012               	return		;funcret
 33808  01C52A                     __end_of_set_ac_charger_relay:
 33809                           	opt callstack 0
 33810                           
 33811 ;; *************** function _get_ac_charger_relay *****************
 33812 ;; Defined at:
 33813 ;;		line 140 in file "mbmc.c"
 33814 ;; Parameters:    Size  Location     Type
 33815 ;;		None
 33816 ;; Auto vars:     Size  Location     Type
 33817 ;;		None
 33818 ;; Return value:  Size  Location     Type
 33819 ;;                  1  [STACK] _Bool 
 33820 ;; Registers used:
 33821 ;;		btemp
 33822 ;; Tracked objects:
 33823 ;;		On entry : 0/1
 33824 ;;		On exit  : 0/0
 33825 ;;		Unchanged: 0/0
 33826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33831 ;;Total ram usage:        0 bytes
 33832 ;; Hardware stack levels used:    1
 33833 ;; Hardware stack levels required when called:    3
 33834 ;; This function calls:
 33835 ;;		Nothing
 33836 ;; This function is called by:
 33837 ;;		_check_day_time
 33838 ;;		_calc_bsoc
 33839 ;; This function uses a reentrant model
 33840 ;;
 33841                           
 33842                           	psect	text153
 33843  01C546                     __ptext153:
 33844                           	opt callstack 0
 33845  01C546                     _get_ac_charger_relay:
 33846                           	opt callstack 10
 33847                           
 33848                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33849                           
 33850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33851                           ;incstack = 0
 33852  01C546  ACBD               	btfss	189,6,c	;volatile
 33853  01C548  D003               	goto	u949_20
 33854  01C54A  6A01               	clrf	btemp^0,c
 33855  01C54C  2A01               	incf	btemp^0,f,c
 33856  01C54E  0012               	return	
 33857  01C550                     u949_20:
 33858  01C550  6A01               	clrf	btemp^0,c
 33859                           
 33860                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33861  01C552  0012               	return		;funcret
 33862  01C554                     __end_of_get_ac_charger_relay:
 33863                           	opt callstack 0
 33864                           
 33865 ;; *************** function _TMR3_ISR *****************
 33866 ;; Defined at:
 33867 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33868 ;; Parameters:    Size  Location     Type
 33869 ;;		None
 33870 ;; Auto vars:     Size  Location     Type
 33871 ;;		None
 33872 ;; Return value:  Size  Location     Type
 33873 ;;                  1    wreg      void 
 33874 ;; Registers used:
 33875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33876 ;; Tracked objects:
 33877 ;;		On entry : 0/0
 33878 ;;		On exit  : 3F/0
 33879 ;;		Unchanged: 0/0
 33880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33883 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33884 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33885 ;;Total ram usage:       25 bytes
 33886 ;; Hardware stack levels used:    1
 33887 ;; Hardware stack levels required when called:   14
 33888 ;; This function calls:
 33889 ;;		_TMR3_CallBack
 33890 ;;		_TMR3_WriteTimer
 33891 ;; This function is called by:
 33892 ;;		Interrupt level 1
 33893 ;; This function uses a non-reentrant model
 33894 ;;
 33895                           
 33896                           	psect	text154
 33897  019378                     __ptext154:
 33898                           	opt callstack 0
 33899  019378                     _TMR3_ISR:
 33900                           	opt callstack 2
 33901                           
 33902                           ;incstack = 0
 33903  019378  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33904  01937E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33905  019384  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33906  01938A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33907  019390  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33908  019396  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33909  01939C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33910  0193A2  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33911  0193A8  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33912  0193AE  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33913  0193B4  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33914  0193BA  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33915  0193C0  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33916  0193C6  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33917  0193CC  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33918  0193D2  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33919  0193D8  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33920  0193DE  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33921  0193E4  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33922  0193EA  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33923  0193F0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33924  0193F6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33925  0193FC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33926  019402  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33927  019408  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33928  01940E  EE16  F0AF         	lfsr	1,___intlo_sp
 33929                           
 33930                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33931  019412  0139               	movlb	57	; () banked
 33932  019414  9DA6               	bcf	166,6,b	;volatile
 33933                           
 33934                           ; BSR set to: 57
 33935                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33936  019416  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33937  01941C  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33938  019422  ECD6  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33939                           
 33940                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33941  019426  0100               	movlb	0	; () banked
 33942  019428  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33943  01942A  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33944  01942C  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33945  01942E  E104               	bnz	i1u1278_20
 33946  019430  0E28               	movlw	40
 33947  019432  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33948  019434  A0D8               	btfss	status,0,c
 33949  019436  D005               	goto	i1l1207
 33950  019438                     i1u1278_20:
 33951                           
 33952                           ; BSR set to: 0
 33953                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33954  019438  EC3A  F0E1         	call	_TMR3_CallBack	;wreg free
 33955                           
 33956                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33957  01943C  0100               	movlb	0	; () banked
 33958  01943E  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33959  019440  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33960  019442                     i1l1207:
 33961                           
 33962                           ; BSR set to: 0
 33963  019442  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33964  019448  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33965  01944E  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33966  019454  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33967  01945A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33968  019460  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33969  019466  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33970  01946C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33971  019472  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33972  019478  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33973  01947E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33974  019484  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33975  01948A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33976  019490  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33977  019496  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33978  01949C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33979  0194A2  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33980  0194A8  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33981  0194AE  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33982  0194B4  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33983  0194BA  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33984  0194C0  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33985  0194C6  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33986  0194CC  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33987  0194D2  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33988  0194D8  0011               	retfie		f
 33989  0194DA                     __end_of_TMR3_ISR:
 33990                           	opt callstack 0
 33991                           
 33992 ;; *************** function _TMR3_WriteTimer *****************
 33993 ;; Defined at:
 33994 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33995 ;; Parameters:    Size  Location     Type
 33996 ;;  timerVal        2  [STACK] unsigned short 
 33997 ;; Auto vars:     Size  Location     Type
 33998 ;;		None
 33999 ;; Return value:  Size  Location     Type
 34000 ;;                  1  [STACK] void 
 34001 ;; Registers used:
 34002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34003 ;; Tracked objects:
 34004 ;;		On entry : 3F/39
 34005 ;;		On exit  : 0/0
 34006 ;;		Unchanged: 0/0
 34007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34012 ;;Total ram usage:        0 bytes
 34013 ;; Hardware stack levels used:    1
 34014 ;; Hardware stack levels required when called:    3
 34015 ;; This function calls:
 34016 ;;		Nothing
 34017 ;; This function is called by:
 34018 ;;		_TMR3_ISR
 34019 ;; This function uses a reentrant model
 34020 ;;
 34021                           
 34022                           	psect	text155
 34023  01BBAC                     __ptext155:
 34024                           	opt callstack 0
 34025  01BBAC                     _TMR3_WriteTimer:
 34026                           	opt callstack 12
 34027                           
 34028                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34029                           
 34030                           ; BSR set to: 0
 34031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34032                           ;incstack = 0
 34033  01BBAC  A4A6               	btfss	166,2,c	;volatile
 34034  01BBAE  D00F               	goto	l11012
 34035                           
 34036                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34037  01BBB0  90A6               	bcf	166,0,c	;volatile
 34038                           
 34039                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34040                           ;stkvar	_timerVal @ sp[(0)+-2]
 34041  01BBB2  0EFF               	movlw	255
 34042  01BBB4  24E1               	addwf	fsr1l,w,c
 34043  01BBB6  6ED9               	movwf	fsr2l,c
 34044  01BBB8  0EFF               	movlw	255
 34045  01BBBA  20E2               	addwfc	fsr1h,w,c
 34046  01BBBC  6EDA               	movwf	fsr2h,c
 34047  01BBBE  50DF               	movf	indf2,w,c
 34048  01BBC0  6EA5               	movwf	165,c	;volatile
 34049                           
 34050                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34051                           ;stkvar	_timerVal @ sp[(0)+-2]
 34052  01BBC2  0EFE               	movlw	-2
 34053  01BBC4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34054                           
 34055                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34056  01BBCA  80A6               	bsf	166,0,c	;volatile
 34057                           
 34058                           ;mcc_generated_files/tmr3.c: 141:     }
 34059  01BBCC  D00C               	goto	l1190
 34060  01BBCE                     l11012:
 34061                           
 34062                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34063                           ;stkvar	_timerVal @ sp[(0)+-2]
 34064  01BBCE  0EFF               	movlw	255
 34065  01BBD0  24E1               	addwf	fsr1l,w,c
 34066  01BBD2  6ED9               	movwf	fsr2l,c
 34067  01BBD4  0EFF               	movlw	255
 34068  01BBD6  20E2               	addwfc	fsr1h,w,c
 34069  01BBD8  6EDA               	movwf	fsr2h,c
 34070  01BBDA  50DF               	movf	indf2,w,c
 34071  01BBDC  6EA5               	movwf	165,c	;volatile
 34072                           
 34073                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34074                           ;stkvar	_timerVal @ sp[(0)+-2]
 34075  01BBDE  0EFE               	movlw	-2
 34076  01BBE0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34077  01BBE6                     l1190:
 34078                           
 34079                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34080  01BBE6  52E5               	movf	postdec1,f,c
 34081  01BBE8  52E5               	movf	postdec1,f,c
 34082  01BBEA  0012               	return		;funcret
 34083  01BBEC                     __end_of_TMR3_WriteTimer:
 34084                           	opt callstack 0
 34085                           
 34086 ;; *************** function _TMR3_CallBack *****************
 34087 ;; Defined at:
 34088 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34089 ;; Parameters:    Size  Location     Type
 34090 ;;		None
 34091 ;; Auto vars:     Size  Location     Type
 34092 ;;		None
 34093 ;; Return value:  Size  Location     Type
 34094 ;;                  1  [STACK] void 
 34095 ;; Registers used:
 34096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34097 ;; Tracked objects:
 34098 ;;		On entry : 3F/0
 34099 ;;		On exit  : 0/0
 34100 ;;		Unchanged: 0/0
 34101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34106 ;;Total ram usage:        0 bytes
 34107 ;; Hardware stack levels used:    1
 34108 ;; Hardware stack levels required when called:   13
 34109 ;; This function calls:
 34110 ;;		Absolute function
 34111 ;;		_TMR3_DefaultInterruptHandler
 34112 ;;		_calc_bsoc
 34113 ;; This function is called by:
 34114 ;;		_TMR3_ISR
 34115 ;; This function uses a reentrant model
 34116 ;;
 34117                           
 34118                           	psect	text156
 34119  01C274                     __ptext156:
 34120                           	opt callstack 0
 34121  01C274                     _TMR3_CallBack:
 34122                           	opt callstack 2
 34123                           
 34124                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34125                           
 34126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34127                           ;incstack = 0
 34128  01C274  0100               	movlb	0	; () banked
 34129  01C276  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34130  01C278  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34131  01C27A  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34132  01C27C  B4D8               	btfsc	status,2,c
 34133  01C27E  0012               	return	
 34134                           
 34135                           ; BSR set to: 0
 34136                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34137  01C280  D801               	call	u1265_28
 34138  01C282  0012               	return	
 34139  01C284                     u1265_28:
 34140  01C284  0005               	push	
 34141  01C286  6EFA               	movwf	pclath,c
 34142  01C288  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34143  01C28A  6EFD               	movwf	tosl,c
 34144  01C28C  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34145  01C28E  6EFE               	movwf	tosh,c
 34146  01C290  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34147  01C292  6EFF               	movwf	tosu,c
 34148  01C294  50FA               	movf	pclath,w,c
 34149  01C296  0012               	return		;indir
 34150  01C298                     __end_of_TMR3_CallBack:
 34151                           	opt callstack 0
 34152                           
 34153 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34154 ;; Defined at:
 34155 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34156 ;; Parameters:    Size  Location     Type
 34157 ;;		None
 34158 ;; Auto vars:     Size  Location     Type
 34159 ;;		None
 34160 ;; Return value:  Size  Location     Type
 34161 ;;                  1  [STACK] void 
 34162 ;; Registers used:
 34163 ;;		None
 34164 ;; Tracked objects:
 34165 ;;		On entry : 3F/0
 34166 ;;		On exit  : 0/0
 34167 ;;		Unchanged: 0/0
 34168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34173 ;;Total ram usage:        0 bytes
 34174 ;; Hardware stack levels used:    1
 34175 ;; Hardware stack levels required when called:    3
 34176 ;; This function calls:
 34177 ;;		Nothing
 34178 ;; This function is called by:
 34179 ;;		_TMR3_Initialize
 34180 ;;		_TMR3_CallBack
 34181 ;; This function uses a reentrant model
 34182 ;;
 34183                           
 34184                           	psect	text157
 34185  01C5F4                     __ptext157:
 34186                           	opt callstack 0
 34187  01C5F4                     _TMR3_DefaultInterruptHandler:
 34188                           	opt callstack 11
 34189                           
 34190                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34191                           
 34192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34193                           ;incstack = 0
 34194  01C5F4  0012               	return		;funcret
 34195  01C5F6                     __end_of_TMR3_DefaultInterruptHandler:
 34196                           	opt callstack 0
 34197                           
 34198 ;; *************** function _calc_bsoc *****************
 34199 ;; Defined at:
 34200 ;;		line 39 in file "bsoc.c"
 34201 ;; Parameters:    Size  Location     Type
 34202 ;;		None
 34203 ;; Auto vars:     Size  Location     Type
 34204 ;;  adj             4  [STACK] float 
 34205 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34206 ;;		 -> port_data(512), 
 34207 ;; Return value:  Size  Location     Type
 34208 ;;                  1  [STACK] void 
 34209 ;; Registers used:
 34210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34211 ;; Tracked objects:
 34212 ;;		On entry : 3F/0
 34213 ;;		On exit  : 5/1
 34214 ;;		Unchanged: 0/0
 34215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34220 ;;Total ram usage:        0 bytes
 34221 ;; Hardware stack levels used:    1
 34222 ;; Hardware stack levels required when called:   12
 34223 ;; This function calls:
 34224 ;;		_StartTimer
 34225 ;;		___asfladd
 34226 ;;		___fldiv
 34227 ;;		___flge
 34228 ;;		___flmul
 34229 ;;		___flneg
 34230 ;;		___fltol
 34231 ;;		_fabsf
 34232 ;;		_get_ac_charger_relay
 34233 ;;		_port_data_dma_ptr
 34234 ;;		_send_port_data_dma
 34235 ;;		_sprintf
 34236 ;;		_strlen
 34237 ;; This function is called by:
 34238 ;;		_init_bsoc
 34239 ;;		_TMR3_CallBack
 34240 ;; This function uses a reentrant model
 34241 ;;
 34242                           
 34243                           	psect	text158
 34244  013394                     __ptext158:
 34245                           	opt callstack 0
 34246  013394                     _calc_bsoc:
 34247                           	opt callstack 0
 34248                           
 34249                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34250  013394  0E06               	movlw	6
 34251  013396  26E1               	addwf	fsr1l,f,c
 34252  013398  0E00               	movlw	0
 34253  01339A  22E2               	addwfc	fsr1h,f,c
 34254                           
 34255                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34256                           
 34257                           ;incstack = 0
 34258  01339C  0E00               	movlw	0
 34259  01339E  6E09               	movwf	(btemp+8)^0,c
 34260  0133A0  0E00               	movlw	0
 34261  0133A2  6E0A               	movwf	(btemp+9)^0,c
 34262  0133A4  0E80               	movlw	128
 34263  0133A6  6E0B               	movwf	(btemp+10)^0,c
 34264  0133A8  0E3F               	movlw	63
 34265  0133AA  6E0C               	movwf	(btemp+11)^0,c
 34266                           
 34267                           ;stkvar	_adj @ sp[(-6)+0]
 34268  0133AC  0EFA               	movlw	-6
 34269  0133AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 34270  0133B4  0EFB               	movlw	-5
 34271  0133B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34272  0133BC  0EFC               	movlw	-4
 34273  0133BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34274  0133C4  0EFD               	movlw	-3
 34275  0133C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 34276  0133CC  82BE               	bsf	190,1,c	;volatile
 34277                           
 34278                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34279  0133CE  0E00               	movlw	0
 34280  0133D0  6EE6               	movwf	postinc1,c
 34281  0133D2  0E00               	movlw	0
 34282  0133D4  6EE6               	movwf	postinc1,c
 34283  0133D6  0E61               	movlw	97
 34284  0133D8  6EE6               	movwf	postinc1,c
 34285  0133DA  0E45               	movlw	69
 34286  0133DC  6EE6               	movwf	postinc1,c
 34287  0133DE  EE21  F343         	lfsr	2,_C+68	;volatile
 34288  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34289  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34290  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34291  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34292  0133FA  ECD8  F0A6         	call	___fldiv	;wreg free
 34293  0133FE  0060  F007  FFE6   	movff	btemp,postinc1
 34294  013404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34295  01340A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34296  013410  0060  F013  FFE6   	movff	btemp+3,postinc1
 34297  013416  0E8F               	movlw	low (_C+144)
 34298  013418  6EE6               	movwf	postinc1,c
 34299  01341A  0E07               	movlw	high (_C+144)
 34300  01341C  6EE6               	movwf	postinc1,c
 34301  01341E  ECC5  F0D8         	call	___asfladd	;wreg free
 34302                           
 34303                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34304  013422  EE21  F38F         	lfsr	2,_C+144	;volatile
 34305  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34306  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34307  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34308  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 34309  01343E  EE21  F38B         	lfsr	2,_C+140	;volatile
 34310  013442  006F FF7B FFE6     	movff	postinc2,postinc1
 34311  013448  006F FF7B FFE6     	movff	postinc2,postinc1
 34312  01344E  006F FF7B FFE6     	movff	postinc2,postinc1
 34313  013454  006F FF7B FFE6     	movff	postinc2,postinc1
 34314  01345A  EC0A  F0C9         	call	___flge	;wreg free
 34315  01345E  B001               	btfsc	btemp& (0+255),0,c
 34316  013460  D00E               	goto	l13116
 34317                           
 34318                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34319  013462  EE21  F38B         	lfsr	2,_C+140	;volatile
 34320  013466  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34321  01346C  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34322  013472  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34323  013478  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34324  01347E                     l13116:
 34325                           
 34326                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34327  01347E  0ECD               	movlw	205
 34328  013480  6EE6               	movwf	postinc1,c
 34329  013482  0ECC               	movlw	204
 34330  013484  6EE6               	movwf	postinc1,c
 34331  013486  0ECC               	movlw	204
 34332  013488  6EE6               	movwf	postinc1,c
 34333  01348A  0E3D               	movlw	61
 34334  01348C  6EE6               	movwf	postinc1,c
 34335  01348E  EE21  F38F         	lfsr	2,_C+144	;volatile
 34336  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34337  013498  006F FF7B FFE6     	movff	postinc2,postinc1
 34338  01349E  006F FF7B FFE6     	movff	postinc2,postinc1
 34339  0134A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34340  0134AA  EC0A  F0C9         	call	___flge	;wreg free
 34341  0134AE  B001               	btfsc	btemp& (0+255),0,c
 34342  0134B0  D010               	goto	l13120
 34343                           
 34344                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34345  0134B2  0ECD               	movlw	205
 34346  0134B4  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34347  0134BA  0ECC               	movlw	204
 34348  0134BC  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34349  0134C2  0ECC               	movlw	204
 34350  0134C4  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34351  0134CA  0E3D               	movlw	61
 34352  0134CC  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34353  0134D2                     l13120:
 34354                           
 34355                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34356  0134D2  EE21  F343         	lfsr	2,_C+68	;volatile
 34357  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34358  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34359  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34360  0134E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34361  0134EE  0E0A               	movlw	10
 34362  0134F0  6EE6               	movwf	postinc1,c
 34363  0134F2  0ED7               	movlw	215
 34364  0134F4  6EE6               	movwf	postinc1,c
 34365  0134F6  0E23               	movlw	35
 34366  0134F8  6EE6               	movwf	postinc1,c
 34367  0134FA  0E3C               	movlw	60
 34368  0134FC  6EE6               	movwf	postinc1,c
 34369  0134FE  EC0A  F0C9         	call	___flge	;wreg free
 34370  013502  B001               	btfsc	btemp& (0+255),0,c
 34371  013504  D01C               	goto	l13124
 34372                           
 34373                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34374  013506  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34375  01350C  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34376  013512  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34377  013518  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34378                           
 34379                           ;stkvar	_adj @ sp[(-6)+0]
 34380  01351E  0EFA               	movlw	-6
 34381  013520  0060  F027  FFE3   	movff	btemp+8,plusw1
 34382  013526  0EFB               	movlw	-5
 34383  013528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34384  01352E  0EFC               	movlw	-4
 34385  013530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34386  013536  0EFD               	movlw	-3
 34387  013538  0060  F033  FFE3   	movff	btemp+11,plusw1
 34388  01353E                     l13124:
 34389                           
 34390                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34391  01353E  0E0A               	movlw	10
 34392  013540  6EE6               	movwf	postinc1,c
 34393  013542  0ED7               	movlw	215
 34394  013544  6EE6               	movwf	postinc1,c
 34395  013546  0E23               	movlw	35
 34396  013548  6EE6               	movwf	postinc1,c
 34397  01354A  0E3C               	movlw	60
 34398  01354C  6EE6               	movwf	postinc1,c
 34399  01354E  EE21  F343         	lfsr	2,_C+68	;volatile
 34400  013552  006F FF7B FFE6     	movff	postinc2,postinc1
 34401  013558  006F FF7B FFE6     	movff	postinc2,postinc1
 34402  01355E  006F FF7B FFE6     	movff	postinc2,postinc1
 34403  013564  006F FF7B FFE6     	movff	postinc2,postinc1
 34404  01356A  EC0A  F0C9         	call	___flge	;wreg free
 34405  01356E  B001               	btfsc	btemp& (0+255),0,c
 34406  013570  D01C               	goto	l13128
 34407                           
 34408                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34409  013572  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34410  013578  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34411  01357E  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34412  013584  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34413                           
 34414                           ;stkvar	_adj @ sp[(-6)+0]
 34415  01358A  0EFA               	movlw	-6
 34416  01358C  0060  F027  FFE3   	movff	btemp+8,plusw1
 34417  013592  0EFB               	movlw	-5
 34418  013594  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34419  01359A  0EFC               	movlw	-4
 34420  01359C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34421  0135A2  0EFD               	movlw	-3
 34422  0135A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 34423  0135AA                     l13128:
 34424                           
 34425                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34426  0135AA  0E00               	movlw	0
 34427  0135AC  6EE6               	movwf	postinc1,c
 34428  0135AE  0E00               	movlw	0
 34429  0135B0  6EE6               	movwf	postinc1,c
 34430  0135B2  0E61               	movlw	97
 34431  0135B4  6EE6               	movwf	postinc1,c
 34432  0135B6  0E45               	movlw	69
 34433  0135B8  6EE6               	movwf	postinc1,c
 34434                           
 34435                           ;stkvar	_adj @ sp[(-10)+0]
 34436  0135BA  0EF6               	movlw	-10
 34437  0135BC  006F FF8F FFE6     	movff	plusw1,postinc1
 34438  0135C2  006F FF8F FFE6     	movff	plusw1,postinc1
 34439  0135C8  006F FF8F FFE6     	movff	plusw1,postinc1
 34440  0135CE  006F FF8F FFE6     	movff	plusw1,postinc1
 34441  0135D4  EE21  F343         	lfsr	2,_C+68	;volatile
 34442  0135D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34443  0135DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34444  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 34445  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 34446  0135F0  ECE5  F09E         	call	___flmul	;wreg free
 34447  0135F4  0060  F007  FFE6   	movff	btemp,postinc1
 34448  0135FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34449  013600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34450  013606  0060  F013  FFE6   	movff	btemp+3,postinc1
 34451  01360C  ECD8  F0A6         	call	___fldiv	;wreg free
 34452  013610  0060  F007  FFE6   	movff	btemp,postinc1
 34453  013616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34454  01361C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34455  013622  0060  F013  FFE6   	movff	btemp+3,postinc1
 34456  013628  0E8F               	movlw	low (_C+144)
 34457  01362A  6EE6               	movwf	postinc1,c
 34458  01362C  0E07               	movlw	high (_C+144)
 34459  01362E  6EE6               	movwf	postinc1,c
 34460  013630  ECC5  F0D8         	call	___asfladd	;wreg free
 34461                           
 34462                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34463  013634  EE21  F38F         	lfsr	2,_C+144	;volatile
 34464  013638  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34465  01363E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34466  013644  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34467  01364A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34468                           
 34469                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34470  013650  EE21  F39B         	lfsr	2,_C+156	;volatile
 34471  013654  006F FF7B FFE6     	movff	postinc2,postinc1
 34472  01365A  006F FF7B FFE6     	movff	postinc2,postinc1
 34473  013660  006F FF7B FFE6     	movff	postinc2,postinc1
 34474  013666  006F FF7B FFE6     	movff	postinc2,postinc1
 34475  01366C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34476  013670  006F FF7B FFE6     	movff	postinc2,postinc1
 34477  013676  006F FF7B FFE6     	movff	postinc2,postinc1
 34478  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 34479  013682  006F FF7B FFE6     	movff	postinc2,postinc1
 34480  013688  EC0A  F0C9         	call	___flge	;wreg free
 34481  01368C  B001               	btfsc	btemp& (0+255),0,c
 34482  01368E  D00E               	goto	l13136
 34483                           
 34484                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34485  013690  EE21  F38B         	lfsr	2,_C+140	;volatile
 34486  013694  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34487  01369A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34488  0136A0  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34489  0136A6  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34490  0136AC                     l13136:
 34491                           
 34492                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34493  0136AC  0ECD               	movlw	205
 34494  0136AE  6EE6               	movwf	postinc1,c
 34495  0136B0  0ECC               	movlw	204
 34496  0136B2  6EE6               	movwf	postinc1,c
 34497  0136B4  0ECC               	movlw	204
 34498  0136B6  6EE6               	movwf	postinc1,c
 34499  0136B8  0E3D               	movlw	61
 34500  0136BA  6EE6               	movwf	postinc1,c
 34501  0136BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 34502  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34503  0136C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34504  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34505  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34506  0136D8  EC0A  F0C9         	call	___flge	;wreg free
 34507  0136DC  B001               	btfsc	btemp& (0+255),0,c
 34508  0136DE  D010               	goto	l13140
 34509                           
 34510                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34511  0136E0  0ECD               	movlw	205
 34512  0136E2  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34513  0136E8  0ECC               	movlw	204
 34514  0136EA  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34515  0136F0  0ECC               	movlw	204
 34516  0136F2  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34517  0136F8  0E3D               	movlw	61
 34518  0136FA  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34519  013700                     l13140:
 34520                           
 34521                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34522  013700  0E00               	movlw	0
 34523  013702  6EE6               	movwf	postinc1,c
 34524  013704  0E00               	movlw	0
 34525  013706  6EE6               	movwf	postinc1,c
 34526  013708  0E61               	movlw	97
 34527  01370A  6EE6               	movwf	postinc1,c
 34528  01370C  0E45               	movlw	69
 34529  01370E  6EE6               	movwf	postinc1,c
 34530  013710  EE21  F347         	lfsr	2,_C+72	;volatile
 34531  013714  006F FF7B FFE6     	movff	postinc2,postinc1
 34532  01371A  006F FF7B FFE6     	movff	postinc2,postinc1
 34533  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 34534  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 34535  01372C  ECD8  F0A6         	call	___fldiv	;wreg free
 34536  013730  0060  F007  FFE6   	movff	btemp,postinc1
 34537  013736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34538  01373C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34539  013742  0060  F013  FFE6   	movff	btemp+3,postinc1
 34540  013748  0E93               	movlw	low (_C+148)
 34541  01374A  6EE6               	movwf	postinc1,c
 34542  01374C  0E07               	movlw	high (_C+148)
 34543  01374E  6EE6               	movwf	postinc1,c
 34544  013750  ECC5  F0D8         	call	___asfladd	;wreg free
 34545                           
 34546                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34547  013754  0E00               	movlw	0
 34548  013756  6EE6               	movwf	postinc1,c
 34549  013758  0E00               	movlw	0
 34550  01375A  6EE6               	movwf	postinc1,c
 34551  01375C  0E61               	movlw	97
 34552  01375E  6EE6               	movwf	postinc1,c
 34553  013760  0E45               	movlw	69
 34554  013762  6EE6               	movwf	postinc1,c
 34555  013764  EE21  F37B         	lfsr	2,_C+124	;volatile
 34556  013768  006F FF7B FFE6     	movff	postinc2,postinc1
 34557  01376E  006F FF7B FFE6     	movff	postinc2,postinc1
 34558  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 34559  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 34560  013780  ECD8  F0A6         	call	___fldiv	;wreg free
 34561  013784  0060  F007  FFE6   	movff	btemp,postinc1
 34562  01378A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34563  013790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34564  013796  0060  F013  FFE6   	movff	btemp+3,postinc1
 34565  01379C  0EA7               	movlw	low (_C+168)
 34566  01379E  6EE6               	movwf	postinc1,c
 34567  0137A0  0E07               	movlw	high (_C+168)
 34568  0137A2  6EE6               	movwf	postinc1,c
 34569  0137A4  ECC5  F0D8         	call	___asfladd	;wreg free
 34570                           
 34571                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34572  0137A8  0E00               	movlw	0
 34573  0137AA  6EE6               	movwf	postinc1,c
 34574  0137AC  0E00               	movlw	0
 34575  0137AE  6EE6               	movwf	postinc1,c
 34576  0137B0  0E61               	movlw	97
 34577  0137B2  6EE6               	movwf	postinc1,c
 34578  0137B4  0E45               	movlw	69
 34579  0137B6  6EE6               	movwf	postinc1,c
 34580  0137B8  EE21  F377         	lfsr	2,_C+120	;volatile
 34581  0137BC  006F FF7B FFE6     	movff	postinc2,postinc1
 34582  0137C2  006F FF7B FFE6     	movff	postinc2,postinc1
 34583  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 34584  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 34585  0137D4  ECD8  F0A6         	call	___fldiv	;wreg free
 34586  0137D8  0060  F007  FFE6   	movff	btemp,postinc1
 34587  0137DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34588  0137E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34589  0137EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34590  0137F0  0EAB               	movlw	low (_C+172)
 34591  0137F2  6EE6               	movwf	postinc1,c
 34592  0137F4  0E07               	movlw	high (_C+172)
 34593  0137F6  6EE6               	movwf	postinc1,c
 34594  0137F8  ECC5  F0D8         	call	___asfladd	;wreg free
 34595                           
 34596                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34597  0137FC  0E00               	movlw	0
 34598  0137FE  6EE6               	movwf	postinc1,c
 34599  013800  0E00               	movlw	0
 34600  013802  6EE6               	movwf	postinc1,c
 34601  013804  0E61               	movlw	97
 34602  013806  6EE6               	movwf	postinc1,c
 34603  013808  0E45               	movlw	69
 34604  01380A  6EE6               	movwf	postinc1,c
 34605  01380C  EE21  F373         	lfsr	2,_C+116	;volatile
 34606  013810  006F FF7B FFE6     	movff	postinc2,postinc1
 34607  013816  006F FF7B FFE6     	movff	postinc2,postinc1
 34608  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 34609  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 34610  013828  ECD8  F0A6         	call	___fldiv	;wreg free
 34611  01382C  0060  F007  FFE6   	movff	btemp,postinc1
 34612  013832  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34613  013838  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34614  01383E  0060  F013  FFE6   	movff	btemp+3,postinc1
 34615  013844  0EAF               	movlw	low (_C+176)
 34616  013846  6EE6               	movwf	postinc1,c
 34617  013848  0E07               	movlw	high (_C+176)
 34618  01384A  6EE6               	movwf	postinc1,c
 34619  01384C  ECC5  F0D8         	call	___asfladd	;wreg free
 34620                           
 34621                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34622  013850  EE21  F37F         	lfsr	2,_C+128	;volatile
 34623  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34624  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34625  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34626  013866  006F FF7B FFE6     	movff	postinc2,postinc1
 34627  01386C  0E00               	movlw	0
 34628  01386E  6EE6               	movwf	postinc1,c
 34629  013870  0E00               	movlw	0
 34630  013872  6EE6               	movwf	postinc1,c
 34631  013874  0E00               	movlw	0
 34632  013876  6EE6               	movwf	postinc1,c
 34633  013878  0E00               	movlw	0
 34634  01387A  6EE6               	movwf	postinc1,c
 34635  01387C  EC0A  F0C9         	call	___flge	;wreg free
 34636  013880  B001               	btfsc	btemp& (0+255),0,c
 34637  013882  D02A               	goto	l13146
 34638                           
 34639                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34640  013884  0E00               	movlw	0
 34641  013886  6EE6               	movwf	postinc1,c
 34642  013888  0E00               	movlw	0
 34643  01388A  6EE6               	movwf	postinc1,c
 34644  01388C  0E61               	movlw	97
 34645  01388E  6EE6               	movwf	postinc1,c
 34646  013890  0E45               	movlw	69
 34647  013892  6EE6               	movwf	postinc1,c
 34648  013894  EE21  F37F         	lfsr	2,_C+128	;volatile
 34649  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 34650  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 34651  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34652  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 34653  0138B0  ECD8  F0A6         	call	___fldiv	;wreg free
 34654  0138B4  0060  F007  FFE6   	movff	btemp,postinc1
 34655  0138BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34656  0138C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34657  0138C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 34658  0138CC  0E9F               	movlw	low (_C+160)
 34659  0138CE  6EE6               	movwf	postinc1,c
 34660  0138D0  0E07               	movlw	high (_C+160)
 34661  0138D2  6EE6               	movwf	postinc1,c
 34662  0138D4  ECC5  F0D8         	call	___asfladd	;wreg free
 34663  0138D8                     l13146:
 34664                           
 34665                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34666  0138D8  EE21  F37F         	lfsr	2,_C+128	;volatile
 34667  0138DC  0E03               	movlw	3
 34668  0138DE  AEDB               	btfss	plusw2,7,c
 34669  0138E0  D038               	goto	l13150
 34670                           
 34671                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34672  0138E2  0E00               	movlw	0
 34673  0138E4  6EE6               	movwf	postinc1,c
 34674  0138E6  0E00               	movlw	0
 34675  0138E8  6EE6               	movwf	postinc1,c
 34676  0138EA  0E61               	movlw	97
 34677  0138EC  6EE6               	movwf	postinc1,c
 34678  0138EE  0E45               	movlw	69
 34679  0138F0  6EE6               	movwf	postinc1,c
 34680  0138F2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34681  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 34682  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 34683  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 34684  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 34685  01390E  ECD8  F0A6         	call	___fldiv	;wreg free
 34686  013912  0060  F007  FFE6   	movff	btemp,postinc1
 34687  013918  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34688  01391E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34689  013924  0060  F013  FFE6   	movff	btemp+3,postinc1
 34690  01392A  ECA9  F0D4         	call	_fabsf	;wreg free
 34691  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 34692  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34693  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34694  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 34695  013946  0EA3               	movlw	low (_C+164)
 34696  013948  6EE6               	movwf	postinc1,c
 34697  01394A  0E07               	movlw	high (_C+164)
 34698  01394C  6EE6               	movwf	postinc1,c
 34699  01394E  ECC5  F0D8         	call	___asfladd	;wreg free
 34700  013952                     l13150:
 34701                           
 34702                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34703  013952  0E00               	movlw	0
 34704  013954  6EE6               	movwf	postinc1,c
 34705  013956  0E00               	movlw	0
 34706  013958  6EE6               	movwf	postinc1,c
 34707  01395A  0EC8               	movlw	200
 34708  01395C  6EE6               	movwf	postinc1,c
 34709  01395E  0E42               	movlw	66
 34710  013960  6EE6               	movwf	postinc1,c
 34711  013962  EE21  F38B         	lfsr	2,_C+140	;volatile
 34712  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 34713  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 34714  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 34715  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 34716  01397E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34717  013982  006F FF7B FFE6     	movff	postinc2,postinc1
 34718  013988  006F FF7B FFE6     	movff	postinc2,postinc1
 34719  01398E  006F FF7B FFE6     	movff	postinc2,postinc1
 34720  013994  006F FF7B FFE6     	movff	postinc2,postinc1
 34721  01399A  ECD8  F0A6         	call	___fldiv	;wreg free
 34722  01399E  0060  F007  FFE6   	movff	btemp,postinc1
 34723  0139A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34724  0139AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34725  0139B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34726  0139B6  ECE5  F09E         	call	___flmul	;wreg free
 34727  0139BA  0060  F007  FFE6   	movff	btemp,postinc1
 34728  0139C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34729  0139C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34730  0139CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 34731  0139D2  EC51  F0C8         	call	___fltol	;wreg free
 34732  0139D6  0060  F004  F00B   	movff	btemp,btemp+10
 34733  0139DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 34734  0139E2  0E01               	movlw	1
 34735  0139E4  260B               	addwf	(btemp+10)^0,f,c
 34736  0139E6  0E00               	movlw	0
 34737  0139E8  220C               	addwfc	(btemp+11)^0,f,c
 34738  0139EA  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34739  0139F0  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34740                           
 34741                           ;bsoc.c: 76:  if (C.soc > 100)
 34742  0139F6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34743  0139FA  0E01               	movlw	1
 34744  0139FC  50DB               	movf	plusw2,w,c
 34745  0139FE  E104               	bnz	u1258_20
 34746  013A00  0E65               	movlw	101
 34747  013A02  5CDE               	subwf	postinc2,w,c
 34748  013A04  A0D8               	btfss	status,0,c
 34749  013A06  D008               	goto	l13156
 34750  013A08                     u1258_20:
 34751                           
 34752                           ;bsoc.c: 77:   C.soc = 100;
 34753  013A08  0E64               	movlw	100
 34754  013A0A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34755  013A10  0E00               	movlw	0
 34756  013A12  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34757  013A18                     l13156:
 34758                           
 34759                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34760  013A18  EE21  F343         	lfsr	2,_C+68	;volatile
 34761  013A1C  0E03               	movlw	3
 34762  013A1E  AEDB               	btfss	plusw2,7,c
 34763  013A20  D047               	goto	l2119
 34764                           
 34765                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34766  013A22  EE21  F343         	lfsr	2,_C+68	;volatile
 34767  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 34768  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34769  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 34770  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 34771  013A3E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34772  013A42  006F FF7B FFE6     	movff	postinc2,postinc1
 34773  013A48  006F FF7B FFE6     	movff	postinc2,postinc1
 34774  013A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34775  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
 34776  013A5A  ECD8  F0A6         	call	___fldiv	;wreg free
 34777  013A5E  0060  F007  FFE6   	movff	btemp,postinc1
 34778  013A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34779  013A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34780  013A70  0060  F013  FFE6   	movff	btemp+3,postinc1
 34781  013A76  EC1A  F0DC         	call	___flneg	;wreg free
 34782  013A7A  0060  F007  FFE6   	movff	btemp,postinc1
 34783  013A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34784  013A86  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34785  013A8C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34786  013A92  EC51  F0C8         	call	___fltol	;wreg free
 34787  013A96  0060  F004  F00B   	movff	btemp,btemp+10
 34788  013A9C  0060  F008  F00C   	movff	btemp+1,btemp+11
 34789  013AA2  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34790  013AA8  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34791                           
 34792                           ;bsoc.c: 81:  } else {
 34793  013AAE  D008               	goto	l13160
 34794  013AB0                     l2119:
 34795                           
 34796                           ;bsoc.c: 82:   C.runtime = 99;
 34797  013AB0  0E63               	movlw	99
 34798  013AB2  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34799  013AB8  0E00               	movlw	0
 34800  013ABA  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34801  013AC0                     l13160:
 34802                           
 34803                           ;bsoc.c: 84:  if (C.runtime > 99)
 34804  013AC0  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34805  013AC4  0E01               	movlw	1
 34806  013AC6  50DB               	movf	plusw2,w,c
 34807  013AC8  E104               	bnz	u1260_20
 34808  013ACA  0E64               	movlw	100
 34809  013ACC  5CDE               	subwf	postinc2,w,c
 34810  013ACE  A0D8               	btfss	status,0,c
 34811  013AD0  D008               	goto	l13164
 34812  013AD2                     u1260_20:
 34813                           
 34814                           ;bsoc.c: 85:   C.runtime = 99;
 34815  013AD2  0E63               	movlw	99
 34816  013AD4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34817  013ADA  0E00               	movlw	0
 34818  013ADC  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34819  013AE2                     l13164:
 34820                           
 34821                           ;bsoc.c: 87:  V.lowint_count++;
 34822  013AE2  0E01               	movlw	1
 34823  013AE4  0101               	movlb	1	; () banked
 34824  013AE6  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34825  013AE8  0E00               	movlw	0
 34826  013AEA  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34827  013AEC  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34828  013AEE  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34829                           
 34830                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34831  013AF0  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34832  013AF2  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34833  013AF4  A4D8               	btfss	status,2,c
 34834  013AF6  D15B               	goto	l13176
 34835                           
 34836                           ; BSR set to: 1
 34837  013AF8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34838  013AFA  B4D8               	btfsc	status,2,c
 34839  013AFC  D158               	goto	l13176
 34840                           
 34841                           ; BSR set to: 1
 34842                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34843  013AFE  ECBE  F0E2         	call	_port_data_dma_ptr	;wreg free
 34844                           
 34845                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34846  013B02  0EFF               	movlw	-1
 34847  013B04  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34848  013B0A  0EFE               	movlw	-2
 34849  013B0C  0060  F007  FFE3   	movff	btemp,plusw1
 34850                           
 34851                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34852  013B12  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34853  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34854  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34855  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34856  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34857  013B2E  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34858  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34859  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34860  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34861  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34862  013B4A  EE21  F39B         	lfsr	2,_C+156	;volatile
 34863  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34866  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34867  013B66  EE22  F026         	lfsr	2,_C+295	;volatile
 34868  013B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34869  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 34870  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34871  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34872  013B82  EE22  F022         	lfsr	2,_C+291	;volatile
 34873  013B86  006F FF7B FFE6     	movff	postinc2,postinc1
 34874  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34875  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 34876  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 34877  013B9E  EE22  F021         	lfsr	2,_C+290	;volatile
 34878  013BA2  50DF               	movf	indf2,w,c
 34879  013BA4  6EE6               	movwf	postinc1,c
 34880  013BA6  0E00               	movlw	0
 34881  013BA8  6EE6               	movwf	postinc1,c
 34882  013BAA  ECA3  F0E2         	call	_get_ac_charger_relay	;wreg free
 34883  013BAE  5001               	movf	btemp^0,w,c
 34884  013BB0  6EE6               	movwf	postinc1,c
 34885  013BB2  0E00               	movlw	0
 34886  013BB4  6EE6               	movwf	postinc1,c
 34887  013BB6  EE21  F367         	lfsr	2,_C+104	;volatile
 34888  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34889  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34890  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34891  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34892  013BD2  EE21  F387         	lfsr	2,_C+136	;volatile
 34893  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34894  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34895  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34896  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34897  013BEE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34898  013BF2  006F FF78  F00B    	movff	postinc2,btemp+10
 34899  013BF8  006F FF74  F00C    	movff	postdec2,btemp+11
 34900  013BFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34901  013C04  0060  F033  FFE6   	movff	btemp+11,postinc1
 34902  013C0A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34903  013C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 34904  013C14  006F FF74  F00C    	movff	postdec2,btemp+11
 34905  013C1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34906  013C20  0060  F033  FFE6   	movff	btemp+11,postinc1
 34907  013C26  EE21  F393         	lfsr	2,_C+148	;volatile
 34908  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34909  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34910  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34911  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34912  013C42  EE21  F38F         	lfsr	2,_C+144	;volatile
 34913  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34914  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34915  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34916  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34917  013C5E  EE21  F377         	lfsr	2,_C+120	;volatile
 34918  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34919  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34920  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34921  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34922  013C7A  EE21  F373         	lfsr	2,_C+116	;volatile
 34923  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34924  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34925  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34926  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34927  013C96  EE21  F37B         	lfsr	2,_C+124	;volatile
 34928  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34929  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34930  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34931  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34932  013CB2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34933  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34934  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34935  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34936  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34937  013CCE  EE21  F363         	lfsr	2,_C+100	;volatile
 34938  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34939  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34940  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34941  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34942  013CEA  EE21  F34B         	lfsr	2,_C+76	;volatile
 34943  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34944  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34945  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34946  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 34947  013D06  EE21  F34F         	lfsr	2,_C+80	;volatile
 34948  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34949  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 34950  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 34951  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34952  013D22  EE21  F353         	lfsr	2,_C+84	;volatile
 34953  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34954  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34955  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34956  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34957  013D3E  0060  F623  FFE6   	movff	_V+129,postinc1
 34958  013D44  0060  F627  FFE6   	movff	_V+130,postinc1
 34959  013D4A  0060  F62B  FFE6   	movff	_V+131,postinc1
 34960  013D50  0060  F62F  FFE6   	movff	_V+132,postinc1
 34961  013D56  0E31               	movlw	49
 34962  013D58  6EE6               	movwf	postinc1,c
 34963  013D5A  0E00               	movlw	0
 34964  013D5C  6EE6               	movwf	postinc1,c
 34965  013D5E  0ED1               	movlw	low STR_64
 34966  013D60  6EE6               	movwf	postinc1,c
 34967  013D62  0EFB               	movlw	high STR_64
 34968  013D64  6EE6               	movwf	postinc1,c
 34969                           
 34970                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34971  013D66  0EAA               	movlw	-86
 34972  013D68  006F FF8F FFE6     	movff	plusw1,postinc1
 34973  013D6E  006F FF8F FFE6     	movff	plusw1,postinc1
 34974  013D74  0E56               	movlw	86
 34975  013D76  6EE6               	movwf	postinc1,c
 34976  013D78  ECA2  F0CF         	call	_sprintf	;wreg free
 34977                           
 34978                           ; BSR set to: 0
 34979                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34980  013D7C  0E7D               	movlw	125
 34981  013D7E  6EE6               	movwf	postinc1,c
 34982  013D80  0E00               	movlw	0
 34983  013D82  6EE6               	movwf	postinc1,c
 34984  013D84  0E0A               	movlw	10
 34985  013D86  6EE6               	movwf	postinc1,c
 34986  013D88  EC96  F0DD         	call	_StartTimer	;wreg free
 34987                           
 34988                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34989                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34990  013D8C  0EFE               	movlw	-2
 34991  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 34992  013D94  006F FF8F FFE6     	movff	plusw1,postinc1
 34993  013D9A  EC52  F0D6         	call	_strlen	;wreg free
 34994  013D9E  0060  F007  FFE6   	movff	btemp,postinc1
 34995  013DA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34996  013DAA  EC80  F0DB         	call	_send_port_data_dma	;wreg free
 34997  013DAE                     l13176:
 34998                           
 34999                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 35000  013DAE  0E09               	movlw	9
 35001  013DB0  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 35002  013DB2  D001               	goto	l2123
 35003                           
 35004                           ;bsoc.c: 101:   log_update_wait = 0;
 35005  013DB4  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35006  013DB6                     l2123:
 35007                           
 35008                           ;bsoc.c: 103:  C.update = 0;
 35009  013DB6  0E00               	movlw	0
 35010  013DB8  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35011                           
 35012                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 35013  013DBE  92BE               	bcf	190,1,c	;volatile
 35014                           
 35015                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35016  013DC0  0EFA               	movlw	250
 35017  013DC2  26E1               	addwf	fsr1l,f,c
 35018  013DC4  0EFF               	movlw	255
 35019  013DC6  22E2               	addwfc	fsr1h,f,c
 35020  013DC8  0012               	return		;funcret
 35021  013DCA                     __end_of_calc_bsoc:
 35022                           	opt callstack 0
 35023                           
 35024 ;; *************** function _send_port_data_dma *****************
 35025 ;; Defined at:
 35026 ;;		line 398 in file "eadog.c"
 35027 ;; Parameters:    Size  Location     Type
 35028 ;;  dsize           2  [STACK] unsigned short 
 35029 ;; Auto vars:     Size  Location     Type
 35030 ;;		None
 35031 ;; Return value:  Size  Location     Type
 35032 ;;                  1  [STACK] void 
 35033 ;; Registers used:
 35034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35035 ;; Tracked objects:
 35036 ;;		On entry : 0/0
 35037 ;;		On exit  : 3F/3B
 35038 ;;		Unchanged: 0/0
 35039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35044 ;;Total ram usage:        0 bytes
 35045 ;; Hardware stack levels used:    1
 35046 ;; Hardware stack levels required when called:    3
 35047 ;; This function calls:
 35048 ;;		Nothing
 35049 ;; This function is called by:
 35050 ;;		_calc_bsoc
 35051 ;; This function uses a reentrant model
 35052 ;;
 35053                           
 35054                           	psect	text159
 35055  01B700                     __ptext159:
 35056                           	opt callstack 0
 35057  01B700                     _send_port_data_dma:
 35058                           	opt callstack 10
 35059                           
 35060                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35061                           ;stkvar	_dsize @ sp[(0)+-2]
 35062                           
 35063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35064                           ;incstack = 0
 35065  01B700  0EFE               	movlw	-2
 35066  01B702  04E3               	decf	plusw1,w,c
 35067  01B704  0EFF               	movlw	-1
 35068  01B706  006F FF8C  F001    	movff	plusw1,btemp
 35069  01B70C  0E02               	movlw	2
 35070  01B70E  5A01               	subwfb	btemp^0,f,c
 35071  01B710  A0D8               	btfss	status,0,c
 35072  01B712  D00C               	goto	l10142
 35073                           
 35074                           ;eadog.c: 401:   dsize = 512;
 35075  01B714  0E00               	movlw	0
 35076  01B716  6E0B               	movwf	(btemp+10)^0,c
 35077  01B718  0E02               	movlw	2
 35078  01B71A  6E0C               	movwf	(btemp+11)^0,c
 35079                           
 35080                           ;stkvar	_dsize @ sp[(0)+-2]
 35081  01B71C  0EFE               	movlw	-2
 35082  01B71E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35083  01B724  0EFF               	movlw	-1
 35084  01B726  0060  F033  FFE3   	movff	btemp+11,plusw1
 35085  01B72C                     l10142:
 35086                           
 35087                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35088  01B72C  013B               	movlb	59	; () banked
 35089  01B72E  9FDC               	bcf	220,7,b	;volatile
 35090                           
 35091                           ; BSR set to: 59
 35092                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35093                           ;stkvar	_dsize @ sp[(0)+-2]
 35094  01B730  0EFE               	movlw	-2
 35095  01B732  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35096  01B738  0EFF               	movlw	-1
 35097  01B73A  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35098                           
 35099                           ; BSR set to: 59
 35100                           ;eadog.c: 405:  DMA2DSZ = 1;
 35101  01B740  0E00               	movlw	0
 35102  01B742  6FCF               	movwf	207,b	;volatile
 35103  01B744  0E01               	movlw	1
 35104  01B746  6FCE               	movwf	206,b	;volatile
 35105                           
 35106                           ; BSR set to: 59
 35107                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35108  01B748  8FDC               	bsf	220,7,b	;volatile
 35109                           
 35110                           ; BSR set to: 59
 35111                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35112  01B74A  8DDC               	bsf	220,6,b	;volatile
 35113                           
 35114                           ; BSR set to: 59
 35115                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35116  01B74C  52E5               	movf	postdec1,f,c
 35117  01B74E  52E5               	movf	postdec1,f,c
 35118  01B750  0012               	return		;funcret
 35119  01B752                     __end_of_send_port_data_dma:
 35120                           	opt callstack 0
 35121                           
 35122 ;; *************** function _port_data_dma_ptr *****************
 35123 ;; Defined at:
 35124 ;;		line 413 in file "eadog.c"
 35125 ;; Parameters:    Size  Location     Type
 35126 ;;		None
 35127 ;; Auto vars:     Size  Location     Type
 35128 ;;		None
 35129 ;; Return value:  Size  Location     Type
 35130 ;;                  2  [STACK] PTR unsigned char 
 35131 ;; Registers used:
 35132 ;;		wreg, status,2, status,0, btemp, btemp+1
 35133 ;; Tracked objects:
 35134 ;;		On entry : 3F/1
 35135 ;;		On exit  : 0/0
 35136 ;;		Unchanged: 0/0
 35137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35142 ;;Total ram usage:        0 bytes
 35143 ;; Hardware stack levels used:    1
 35144 ;; Hardware stack levels required when called:    3
 35145 ;; This function calls:
 35146 ;;		Nothing
 35147 ;; This function is called by:
 35148 ;;		_calc_bsoc
 35149 ;; This function uses a reentrant model
 35150 ;;
 35151                           
 35152                           	psect	text160
 35153  01C57C                     __ptext160:
 35154                           	opt callstack 0
 35155  01C57C                     _port_data_dma_ptr:
 35156                           	opt callstack 10
 35157                           
 35158                           ;eadog.c: 415:  return port_data;
 35159                           
 35160                           ; BSR set to: 59
 35161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35162                           ;incstack = 0
 35163  01C57C  0EFF               	movlw	low _port_data
 35164  01C57E  6E01               	movwf	btemp^0,c
 35165  01C580  0E04               	movlw	high _port_data
 35166  01C582  6E02               	movwf	(btemp+1)^0,c
 35167                           
 35168                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35169  01C584  0012               	return		;funcret
 35170  01C586                     __end_of_port_data_dma_ptr:
 35171                           	opt callstack 0
 35172                           
 35173 ;; *************** function ___asfladd *****************
 35174 ;; Defined at:
 35175 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35176 ;; Parameters:    Size  Location     Type
 35177 ;;  f1p             2  [STACK] PTR 
 35178 ;;		 -> C(299), 
 35179 ;;  f2              4  [STACK] PTR 
 35180 ;; Auto vars:     Size  Location     Type
 35181 ;;		None
 35182 ;; Return value:  Size  Location     Type
 35183 ;;                  4  [STACK] PTR 
 35184 ;; Registers used:
 35185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35186 ;; Tracked objects:
 35187 ;;		On entry : 0/0
 35188 ;;		On exit  : 0/0
 35189 ;;		Unchanged: 0/0
 35190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35195 ;;Total ram usage:        0 bytes
 35196 ;; Hardware stack levels used:    1
 35197 ;; Hardware stack levels required when called:    4
 35198 ;; This function calls:
 35199 ;;		___fladd
 35200 ;; This function is called by:
 35201 ;;		_calc_bsoc
 35202 ;; This function uses a reentrant model
 35203 ;;
 35204                           
 35205                           	psect	text161
 35206  01B18A                     __ptext161:
 35207                           	opt callstack 0
 35208  01B18A                     ___asfladd:
 35209                           	opt callstack 9
 35210                           
 35211                           ;	Return value of ___asfladd is never used
 35212                           ;stkvar	_f2 @ sp[(0)+-6]
 35213                           
 35214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35215                           ;incstack = 0
 35216  01B18A  0EFA               	movlw	-6
 35217  01B18C  006F FF8F FFE6     	movff	plusw1,postinc1
 35218  01B192  006F FF8F FFE6     	movff	plusw1,postinc1
 35219  01B198  006F FF8F FFE6     	movff	plusw1,postinc1
 35220  01B19E  006F FF8F FFE6     	movff	plusw1,postinc1
 35221                           
 35222                           ;stkvar	_f1p @ sp[(-4)+-2]
 35223  01B1A4  0EFA               	movlw	-6
 35224  01B1A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 35225  01B1AC  0EFB               	movlw	-5
 35226  01B1AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 35227  01B1B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35228  01B1BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35229  01B1C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35230  01B1C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35231  01B1CC  ECFA  F0A2         	call	___fladd	;wreg free
 35232                           
 35233                           ;stkvar	_f1p @ sp[(0)+-2]
 35234  01B1D0  0EFE               	movlw	-2
 35235  01B1D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 35236  01B1D8  0EFF               	movlw	-1
 35237  01B1DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 35238  01B1E0  0060  F007  FFDE   	movff	btemp,postinc2
 35239  01B1E6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35240  01B1EC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35241  01B1F2  0060  F013  FFDE   	movff	btemp+3,postinc2
 35242                           
 35243                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35244  01B1F8  0EFA               	movlw	250
 35245  01B1FA  26E1               	addwf	fsr1l,f,c
 35246  01B1FC  0EFF               	movlw	255
 35247  01B1FE  22E2               	addwfc	fsr1h,f,c
 35248  01B200  0012               	return		;funcret
 35249  01B202                     __end_of___asfladd:
 35250                           	opt callstack 0
 35251                           
 35252 ;; *************** function _INT0_ISR *****************
 35253 ;; Defined at:
 35254 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35255 ;; Parameters:    Size  Location     Type
 35256 ;;		None
 35257 ;; Auto vars:     Size  Location     Type
 35258 ;;		None
 35259 ;; Return value:  Size  Location     Type
 35260 ;;                  1    wreg      void 
 35261 ;; Registers used:
 35262 ;;		wreg, status,2, status,0, pclath, tosl
 35263 ;; Tracked objects:
 35264 ;;		On entry : 0/0
 35265 ;;		On exit  : 0/0
 35266 ;;		Unchanged: 0/0
 35267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35272 ;;Total ram usage:        0 bytes
 35273 ;; Hardware stack levels used:    1
 35274 ;; Hardware stack levels required when called:    2
 35275 ;; This function calls:
 35276 ;;		_INT0_CallBack
 35277 ;; This function is called by:
 35278 ;;		Interrupt level 2
 35279 ;; This function uses a non-reentrant model
 35280 ;;
 35281                           
 35282                           	psect	text162
 35283  01C554                     __ptext162:
 35284                           	opt callstack 0
 35285  01C554                     _INT0_ISR:
 35286                           	opt callstack 2
 35287                           
 35288                           ;incstack = 0
 35289  01C554  EE14  F15E         	lfsr	1,___inthi_sp
 35290                           
 35291                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35292  01C558  0139               	movlb	57	; () banked
 35293  01C55A  91A1               	bcf	161,0,b	;volatile
 35294                           
 35295                           ; BSR set to: 57
 35296                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35297  01C55C  EC4C  F0E1         	call	_INT0_CallBack	;wreg free
 35298  01C560  0011               	retfie		f
 35299  01C562                     __end_of_INT0_ISR:
 35300                           	opt callstack 0
 35301                           
 35302 ;; *************** function _INT0_CallBack *****************
 35303 ;; Defined at:
 35304 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35305 ;; Parameters:    Size  Location     Type
 35306 ;;		None
 35307 ;; Auto vars:     Size  Location     Type
 35308 ;;		None
 35309 ;; Return value:  Size  Location     Type
 35310 ;;                  1  [STACK] void 
 35311 ;; Registers used:
 35312 ;;		wreg, status,2, status,0, pclath, tosl
 35313 ;; Tracked objects:
 35314 ;;		On entry : 3F/39
 35315 ;;		On exit  : 0/0
 35316 ;;		Unchanged: 0/0
 35317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35322 ;;Total ram usage:        0 bytes
 35323 ;; Hardware stack levels used:    1
 35324 ;; Hardware stack levels required when called:    1
 35325 ;; This function calls:
 35326 ;;		Absolute function
 35327 ;;		_INT0_DefaultInterruptHandler
 35328 ;; This function is called by:
 35329 ;;		_INT0_ISR
 35330 ;; This function uses a reentrant model
 35331 ;;
 35332                           
 35333                           	psect	text163
 35334  01C298                     __ptext163:
 35335                           	opt callstack 0
 35336  01C298                     _INT0_CallBack:
 35337                           	opt callstack 2
 35338                           
 35339                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35340                           
 35341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35342                           ;incstack = 0
 35343  01C298  0100               	movlb	0	; () banked
 35344  01C29A  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35345  01C29C  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35346  01C29E  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35347  01C2A0  B4D8               	btfsc	status,2,c
 35348  01C2A2  0012               	return	
 35349                           
 35350                           ; BSR set to: 0
 35351                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35352  01C2A4  D801               	call	u1007_48
 35353  01C2A6  0012               	return	
 35354  01C2A8                     u1007_48:
 35355  01C2A8  0005               	push	
 35356  01C2AA  6EFA               	movwf	pclath,c
 35357  01C2AC  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35358  01C2AE  6EFD               	movwf	tosl,c
 35359  01C2B0  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35360  01C2B2  6EFE               	movwf	tosh,c
 35361  01C2B4  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35362  01C2B6  6EFF               	movwf	tosu,c
 35363  01C2B8  50FA               	movf	pclath,w,c
 35364  01C2BA  0012               	return		;indir
 35365  01C2BC                     __end_of_INT0_CallBack:
 35366                           	opt callstack 0
 35367                           
 35368 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35369 ;; Defined at:
 35370 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35371 ;; Parameters:    Size  Location     Type
 35372 ;;		None
 35373 ;; Auto vars:     Size  Location     Type
 35374 ;;		None
 35375 ;; Return value:  Size  Location     Type
 35376 ;;                  1  [STACK] void 
 35377 ;; Registers used:
 35378 ;;		None
 35379 ;; Tracked objects:
 35380 ;;		On entry : 3F/0
 35381 ;;		On exit  : 0/0
 35382 ;;		Unchanged: 0/0
 35383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35388 ;;Total ram usage:        0 bytes
 35389 ;; Hardware stack levels used:    1
 35390 ;; This function calls:
 35391 ;;		Nothing
 35392 ;; This function is called by:
 35393 ;;		_EXT_INT_Initialize
 35394 ;;		_INT0_CallBack
 35395 ;; This function uses a reentrant model
 35396 ;;
 35397                           
 35398                           	psect	text164
 35399  01C5F6                     __ptext164:
 35400                           	opt callstack 0
 35401  01C5F6                     _INT0_DefaultInterruptHandler:
 35402                           	opt callstack 2
 35403                           
 35404                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35405                           
 35406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35407                           ;incstack = 0
 35408  01C5F6  0012               	return		;funcret
 35409  01C5F8                     __end_of_INT0_DefaultInterruptHandler:
 35410                           	opt callstack 0
 35411                           
 35412 ;; *************** function _Default_ISR *****************
 35413 ;; Defined at:
 35414 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35415 ;; Parameters:    Size  Location     Type
 35416 ;;		None
 35417 ;; Auto vars:     Size  Location     Type
 35418 ;;		None
 35419 ;; Return value:  Size  Location     Type
 35420 ;;                  1    wreg      void 
 35421 ;; Registers used:
 35422 ;;		None
 35423 ;; Tracked objects:
 35424 ;;		On entry : 0/0
 35425 ;;		On exit  : 0/0
 35426 ;;		Unchanged: 0/0
 35427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35432 ;;Total ram usage:        0 bytes
 35433 ;; Hardware stack levels used:    1
 35434 ;; This function calls:
 35435 ;;		Nothing
 35436 ;; This function is called by:
 35437 ;;		Interrupt level 2
 35438 ;; This function uses a non-reentrant model
 35439 ;;
 35440                           
 35441                           	psect	text165
 35442  01C5EC                     __ptext165:
 35443                           	opt callstack 0
 35444  01C5EC                     _Default_ISR:
 35445                           	opt callstack 4
 35446                           
 35447                           ;incstack = 0
 35448  01C5EC  EE14  F15E         	lfsr	1,___inthi_sp
 35449  01C5F0  0011               	retfie		f
 35450  01C5F2                     __end_of_Default_ISR:
 35451                           	opt callstack 0
 35452                           
 35453 ;; *************** function _ADCC_ISR *****************
 35454 ;; Defined at:
 35455 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35456 ;; Parameters:    Size  Location     Type
 35457 ;;		None
 35458 ;; Auto vars:     Size  Location     Type
 35459 ;;		None
 35460 ;; Return value:  Size  Location     Type
 35461 ;;                  1    wreg      void 
 35462 ;; Registers used:
 35463 ;;		wreg, status,2, status,0, pclath, tosl
 35464 ;; Tracked objects:
 35465 ;;		On entry : 0/0
 35466 ;;		On exit  : 0/0
 35467 ;;		Unchanged: 0/0
 35468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35473 ;;Total ram usage:        0 bytes
 35474 ;; Hardware stack levels used:    1
 35475 ;; Hardware stack levels required when called:    1
 35476 ;; This function calls:
 35477 ;;		Absolute function
 35478 ;;		_ADCC_DefaultInterruptHandler
 35479 ;;		_adc_int_handler
 35480 ;; This function is called by:
 35481 ;;		Interrupt level 2
 35482 ;; This function uses a non-reentrant model
 35483 ;;
 35484                           
 35485                           	psect	text166
 35486  01BF2C                     __ptext166:
 35487                           	opt callstack 0
 35488  01BF2C                     _ADCC_ISR:
 35489                           	opt callstack 3
 35490                           
 35491                           ;incstack = 0
 35492  01BF2C  EE14  F15E         	lfsr	1,___inthi_sp
 35493                           
 35494                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35495  01BF30  0139               	movlb	57	; () banked
 35496  01BF32  95A1               	bcf	161,2,b	;volatile
 35497                           
 35498                           ; BSR set to: 57
 35499                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35500  01BF34  0100               	movlb	0	; () banked
 35501  01BF36  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35502  01BF38  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35503  01BF3A  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35504  01BF3C  B4D8               	btfsc	status,2,c
 35505  01BF3E  0011               	retfie		f
 35506                           
 35507                           ; BSR set to: 0
 35508                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35509  01BF40  D801               	call	i2u1052_48
 35510  01BF42  0011               	retfie		f
 35511  01BF44                     i2u1052_48:
 35512  01BF44  0005               	push	
 35513  01BF46  6EFA               	movwf	pclath,c
 35514  01BF48  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35515  01BF4A  6EFD               	movwf	tosl,c
 35516  01BF4C  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35517  01BF4E  6EFE               	movwf	tosh,c
 35518  01BF50  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35519  01BF52  6EFF               	movwf	tosu,c
 35520  01BF54  50FA               	movf	pclath,w,c
 35521  01BF56  0012               	return		;indir
 35522  01BF58                     __end_of_ADCC_ISR:
 35523                           	opt callstack 0
 35524                           
 35525 ;; *************** function _adc_int_t_handler *****************
 35526 ;; Defined at:
 35527 ;;		line 170 in file "daq.c"
 35528 ;; Parameters:    Size  Location     Type
 35529 ;;		None
 35530 ;; Auto vars:     Size  Location     Type
 35531 ;;		None
 35532 ;; Return value:  Size  Location     Type
 35533 ;;                  1  [STACK] void 
 35534 ;; Registers used:
 35535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35536 ;; Tracked objects:
 35537 ;;		On entry : 3F/0
 35538 ;;		On exit  : 1/0
 35539 ;;		Unchanged: 0/0
 35540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35545 ;;Total ram usage:        0 bytes
 35546 ;; Hardware stack levels used:    1
 35547 ;; Hardware stack levels required when called:    1
 35548 ;; This function calls:
 35549 ;;		_ADCC_DischargeSampleCapacitor
 35550 ;;		_ADCC_StartConversion
 35551 ;; This function is called by:
 35552 ;;		_start_adc_scan
 35553 ;;		_ADCC_ThresholdISR
 35554 ;; This function uses a reentrant model
 35555 ;;
 35556                           
 35557                           	psect	text167
 35558  01B092                     __ptext167:
 35559                           	opt callstack 0
 35560  01B092                     _adc_int_t_handler:
 35561                           	opt callstack 2
 35562                           
 35563                           ;daq.c: 175:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35564                           
 35565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35566                           ;incstack = 0
 35567  01B092  013E               	movlb	62	; () banked
 35568  01B094  51E6               	movf	230,w,b	;volatile
 35569  01B096  006F FB9C  F001    	movff	16103,btemp	;volatile
 35570  01B09C  6A02               	clrf	(btemp+1)^0,c
 35571  01B09E  0060  F004  F002   	movff	btemp,btemp+1
 35572  01B0A4  6A01               	clrf	btemp^0,c
 35573  01B0A6  2601               	addwf	btemp^0,f,c
 35574  01B0A8  0E00               	movlw	0
 35575  01B0AA  2202               	addwfc	(btemp+1)^0,f,c
 35576  01B0AC  0100               	movlb	0	; () banked
 35577  01B0AE  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35578  01B0B0  0D02               	mullw	2
 35579  01B0B2  50F3               	movf	243,w,c
 35580  01B0B4  0FAF               	addlw	low _R
 35581  01B0B6  6ED9               	movwf	fsr2l,c
 35582  01B0B8  6ADA               	clrf	fsr2h,c
 35583  01B0BA  0060  F007  FFDE   	movff	btemp,postinc2
 35584  01B0C0  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35585  01B0C6                     l11428:
 35586                           
 35587                           ;daq.c: 177:   if (++R.scan_index > 0XD) {
 35588  01B0C6  0100               	movlb	0	; () banked
 35589  01B0C8  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35590  01B0CA  0E0D               	movlw	13
 35591  01B0CC  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35592  01B0CE  D003               	goto	l11434
 35593                           
 35594                           ; BSR set to: 0
 35595                           ;daq.c: 178:    R.done = 1;
 35596  01B0D0  0E01               	movlw	1
 35597  01B0D2  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35598  01B0D4  0012               	return	
 35599  01B0D6                     l11434:
 35600                           
 35601                           ; BSR set to: 0
 35602                           ;daq.c: 184:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35603  01B0D6  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35604  01B0DC  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35605  01B0E0  006F FF78  F009    	movff	postinc2,btemp+8
 35606  01B0E6  006F FF74  F00A    	movff	postdec2,btemp+9
 35607  01B0EC  2A0C               	incf	(btemp+11)^0,f,c
 35608  01B0EE  D003               	goto	u1049_44
 35609  01B0F0                     u1049_45:
 35610  01B0F0  90D8               	bcf	status,0,c
 35611  01B0F2  320A               	rrcf	(btemp+9)^0,f,c
 35612  01B0F4  3209               	rrcf	(btemp+8)^0,f,c
 35613  01B0F6                     u1049_44:
 35614  01B0F6  2E0C               	decfsz	(btemp+11)^0,f,c
 35615  01B0F8  D7FB               	goto	u1049_45
 35616  01B0FA  A009               	btfss	(btemp+8)^0,0,c
 35617  01B0FC  D7E4               	goto	l11428
 35618                           
 35619                           ;daq.c: 185:  ADCC_DischargeSampleCapacitor();
 35620  01B0FE  ECD5  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35621                           
 35622                           ; BSR set to: 62
 35623                           ;daq.c: 186:  ADCC_StartConversion(R.scan_index & 0xf);
 35624  01B102  0100               	movlb	0	; () banked
 35625  01B104  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35626  01B106  0B0F               	andlw	15
 35627  01B108  6EE6               	movwf	postinc1,c
 35628  01B10A  EC6C  F0E2         	call	_ADCC_StartConversion	;wreg free
 35629                           
 35630                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35631  01B10E  0012               	return		;funcret
 35632  01B110                     __end_of_adc_int_t_handler:
 35633                           	opt callstack 0
 35634                           
 35635 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35636 ;; Defined at:
 35637 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35638 ;; Parameters:    Size  Location     Type
 35639 ;;		None
 35640 ;; Auto vars:     Size  Location     Type
 35641 ;;		None
 35642 ;; Return value:  Size  Location     Type
 35643 ;;                  1  [STACK] void 
 35644 ;; Registers used:
 35645 ;;		None
 35646 ;; Tracked objects:
 35647 ;;		On entry : 3F/0
 35648 ;;		On exit  : 0/0
 35649 ;;		Unchanged: 0/0
 35650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35655 ;;Total ram usage:        0 bytes
 35656 ;; Hardware stack levels used:    1
 35657 ;; This function calls:
 35658 ;;		Nothing
 35659 ;; This function is called by:
 35660 ;;		_ADCC_Initialize
 35661 ;;		_ADCC_ISR
 35662 ;;		_ADCC_ThresholdISR
 35663 ;; This function uses a reentrant model
 35664 ;;
 35665                           
 35666                           	psect	text168
 35667  01C5F8                     __ptext168:
 35668                           	opt callstack 0
 35669  01C5F8                     _ADCC_DefaultInterruptHandler:
 35670                           	opt callstack 3
 35671                           
 35672                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35673                           
 35674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35675                           ;incstack = 0
 35676  01C5F8  0012               	return		;funcret
 35677  01C5FA                     __end_of_ADCC_DefaultInterruptHandler:
 35678                           	opt callstack 0
 35679                           
 35680 ;; *************** function _adc_int_handler *****************
 35681 ;; Defined at:
 35682 ;;		line 160 in file "daq.c"
 35683 ;; Parameters:    Size  Location     Type
 35684 ;;		None
 35685 ;; Auto vars:     Size  Location     Type
 35686 ;;		None
 35687 ;; Return value:  Size  Location     Type
 35688 ;;                  1  [STACK] void 
 35689 ;; Registers used:
 35690 ;;		None
 35691 ;; Tracked objects:
 35692 ;;		On entry : 3F/0
 35693 ;;		On exit  : 0/0
 35694 ;;		Unchanged: 0/0
 35695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35700 ;;Total ram usage:        0 bytes
 35701 ;; Hardware stack levels used:    1
 35702 ;; This function calls:
 35703 ;;		Nothing
 35704 ;; This function is called by:
 35705 ;;		_start_adc_scan
 35706 ;;		_ADCC_ISR
 35707 ;; This function uses a reentrant model
 35708 ;;
 35709                           
 35710                           	psect	text169
 35711  01C5FA                     __ptext169:
 35712                           	opt callstack 0
 35713  01C5FA                     _adc_int_handler:
 35714                           	opt callstack 3
 35715                           
 35716                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35717                           
 35718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35719                           ;incstack = 0
 35720  01C5FA  0012               	return		;funcret
 35721  01C5FC                     __end_of_adc_int_handler:
 35722                           	opt callstack 0
 35723                           
 35724 ;; *************** function _ADCC_ThresholdISR *****************
 35725 ;; Defined at:
 35726 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35727 ;; Parameters:    Size  Location     Type
 35728 ;;		None
 35729 ;; Auto vars:     Size  Location     Type
 35730 ;;		None
 35731 ;; Return value:  Size  Location     Type
 35732 ;;                  1    wreg      void 
 35733 ;; Registers used:
 35734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35735 ;; Tracked objects:
 35736 ;;		On entry : 0/0
 35737 ;;		On exit  : 0/0
 35738 ;;		Unchanged: 0/0
 35739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35742 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35743 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35744 ;;Total ram usage:        5 bytes
 35745 ;; Hardware stack levels used:    1
 35746 ;; Hardware stack levels required when called:    2
 35747 ;; This function calls:
 35748 ;;		Absolute function
 35749 ;;		_ADCC_DefaultInterruptHandler
 35750 ;;		_adc_int_t_handler
 35751 ;; This function is called by:
 35752 ;;		Interrupt level 2
 35753 ;; This function uses a non-reentrant model
 35754 ;;
 35755                           
 35756                           	psect	text170
 35757  01B348                     __ptext170:
 35758                           	opt callstack 0
 35759  01B348                     _ADCC_ThresholdISR:
 35760                           	opt callstack 2
 35761                           
 35762                           ;incstack = 0
 35763  01B348  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35764  01B34E  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35765  01B354  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35766  01B35A  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35767  01B360  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35768  01B366  EE14  F15E         	lfsr	1,___inthi_sp
 35769                           
 35770                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35771  01B36A  0139               	movlb	57	; () banked
 35772  01B36C  97A1               	bcf	161,3,b	;volatile
 35773                           
 35774                           ; BSR set to: 57
 35775                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35776  01B36E  0100               	movlb	0	; () banked
 35777  01B370  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35778  01B372  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35779  01B374  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35780  01B376  B4D8               	btfsc	status,2,c
 35781  01B378  D00C               	goto	i2u1054_49
 35782                           
 35783                           ; BSR set to: 0
 35784                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35785  01B37A  D801               	call	i2u1054_48
 35786  01B37C  D00A               	goto	i2u1054_49
 35787  01B37E                     i2u1054_48:
 35788  01B37E  0005               	push	
 35789  01B380  6EFA               	movwf	pclath,c
 35790  01B382  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35791  01B384  6EFD               	movwf	tosl,c
 35792  01B386  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35793  01B388  6EFE               	movwf	tosh,c
 35794  01B38A  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35795  01B38C  6EFF               	movwf	tosu,c
 35796  01B38E  50FA               	movf	pclath,w,c
 35797  01B390  0012               	return		;indir
 35798  01B392                     i2u1054_49:
 35799  01B392  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35800  01B398  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35801  01B39E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35802  01B3A4  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35803  01B3AA  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35804  01B3B0  0011               	retfie		f
 35805  01B3B2                     __end_of_ADCC_ThresholdISR:
 35806                           	opt callstack 0
 35807                           
 35808 ;; *************** function _UART1_rx_vect_isr *****************
 35809 ;; Defined at:
 35810 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35811 ;; Parameters:    Size  Location     Type
 35812 ;;		None
 35813 ;; Auto vars:     Size  Location     Type
 35814 ;;		None
 35815 ;; Return value:  Size  Location     Type
 35816 ;;                  1    wreg      void 
 35817 ;; Registers used:
 35818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35819 ;; Tracked objects:
 35820 ;;		On entry : 0/0
 35821 ;;		On exit  : 0/0
 35822 ;;		Unchanged: 0/0
 35823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35828 ;;Total ram usage:        0 bytes
 35829 ;; Hardware stack levels used:    1
 35830 ;; Hardware stack levels required when called:    1
 35831 ;; This function calls:
 35832 ;;		Absolute function
 35833 ;;		_UART1_Receive_ISR
 35834 ;; This function is called by:
 35835 ;;		Interrupt level 2
 35836 ;; This function uses a non-reentrant model
 35837 ;;
 35838                           
 35839                           	psect	text171
 35840  01C190                     __ptext171:
 35841                           	opt callstack 0
 35842  01C190                     _UART1_rx_vect_isr:
 35843                           	opt callstack 3
 35844                           
 35845                           ;incstack = 0
 35846  01C190  EE14  F15E         	lfsr	1,___inthi_sp
 35847                           
 35848                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35849  01C194  0100               	movlb	0	; () banked
 35850  01C196  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35851  01C198  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35852  01C19A  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35853  01C19C  B4D8               	btfsc	status,2,c
 35854  01C19E  0011               	retfie		f
 35855                           
 35856                           ; BSR set to: 0
 35857                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35858  01C1A0  D801               	call	i2u1056_48
 35859  01C1A2  0011               	retfie		f
 35860  01C1A4                     i2u1056_48:
 35861  01C1A4  0005               	push	
 35862  01C1A6  6EFA               	movwf	pclath,c
 35863  01C1A8  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35864  01C1AA  6EFD               	movwf	tosl,c
 35865  01C1AC  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35866  01C1AE  6EFE               	movwf	tosh,c
 35867  01C1B0  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35868  01C1B2  6EFF               	movwf	tosu,c
 35869  01C1B4  50FA               	movf	pclath,w,c
 35870  01C1B6  0012               	return		;indir
 35871  01C1B8                     __end_of_UART1_rx_vect_isr:
 35872                           	opt callstack 0
 35873                           
 35874 ;; *************** function _UART1_Receive_ISR *****************
 35875 ;; Defined at:
 35876 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35877 ;; Parameters:    Size  Location     Type
 35878 ;;		None
 35879 ;; Auto vars:     Size  Location     Type
 35880 ;;		None
 35881 ;; Return value:  Size  Location     Type
 35882 ;;                  1  [STACK] void 
 35883 ;; Registers used:
 35884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35885 ;; Tracked objects:
 35886 ;;		On entry : 3F/0
 35887 ;;		On exit  : 3F/0
 35888 ;;		Unchanged: 0/0
 35889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35894 ;;Total ram usage:        0 bytes
 35895 ;; Hardware stack levels used:    1
 35896 ;; This function calls:
 35897 ;;		Nothing
 35898 ;; This function is called by:
 35899 ;;		_UART1_Initialize
 35900 ;;		_UART1_rx_vect_isr
 35901 ;; This function uses a reentrant model
 35902 ;;
 35903                           
 35904                           	psect	text172
 35905  01C324                     __ptext172:
 35906                           	opt callstack 0
 35907  01C324                     _UART1_Receive_ISR:
 35908                           	opt callstack 3
 35909                           
 35910                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35911                           
 35912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35913                           ;incstack = 0
 35914  01C324  0ED9               	movlw	low _uart1RxBuffer
 35915  01C326  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35916  01C328  6ED9               	movwf	fsr2l,c
 35917  01C32A  6ADA               	clrf	fsr2h,c
 35918  01C32C  0E01               	movlw	high _uart1RxBuffer
 35919  01C32E  22DA               	addwfc	fsr2h,f,c
 35920  01C330  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35921  01C336  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35922                           
 35923                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35924  01C338  0E07               	movlw	7
 35925  01C33A  6447               	cpfsgt	_uart1RxHead^0,c
 35926  01C33C  D001               	goto	l10956
 35927                           
 35928                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35929  01C33E  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35930  01C340                     l10956:
 35931                           
 35932                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35933  01C340  0100               	movlb	0	; () banked
 35934  01C342  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35935                           
 35936                           ; BSR set to: 0
 35937                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35938  01C344  0012               	return		;funcret
 35939  01C346                     __end_of_UART1_Receive_ISR:
 35940                           	opt callstack 0
 35941                           
 35942 ;; *************** function _UART2_tx_vect_isr *****************
 35943 ;; Defined at:
 35944 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35945 ;; Parameters:    Size  Location     Type
 35946 ;;		None
 35947 ;; Auto vars:     Size  Location     Type
 35948 ;;		None
 35949 ;; Return value:  Size  Location     Type
 35950 ;;                  1    wreg      void 
 35951 ;; Registers used:
 35952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35953 ;; Tracked objects:
 35954 ;;		On entry : 0/0
 35955 ;;		On exit  : 0/0
 35956 ;;		Unchanged: 0/0
 35957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35962 ;;Total ram usage:        0 bytes
 35963 ;; Hardware stack levels used:    1
 35964 ;; Hardware stack levels required when called:    1
 35965 ;; This function calls:
 35966 ;;		Absolute function
 35967 ;;		_UART2_Transmit_ISR
 35968 ;; This function is called by:
 35969 ;;		Interrupt level 2
 35970 ;; This function uses a non-reentrant model
 35971 ;;
 35972                           
 35973                           	psect	text173
 35974  01C1B8                     __ptext173:
 35975                           	opt callstack 0
 35976  01C1B8                     _UART2_tx_vect_isr:
 35977                           	opt callstack 3
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;incstack = 0
 35981  01C1B8  EE14  F15E         	lfsr	1,___inthi_sp
 35982                           
 35983                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35984  01C1BC  0100               	movlb	0	; () banked
 35985  01C1BE  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35986  01C1C0  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35987  01C1C2  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35988  01C1C4  B4D8               	btfsc	status,2,c
 35989  01C1C6  0011               	retfie		f
 35990                           
 35991                           ; BSR set to: 0
 35992                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35993  01C1C8  D801               	call	i2u1058_48
 35994  01C1CA  0011               	retfie		f
 35995  01C1CC                     i2u1058_48:
 35996  01C1CC  0005               	push	
 35997  01C1CE  6EFA               	movwf	pclath,c
 35998  01C1D0  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35999  01C1D2  6EFD               	movwf	tosl,c
 36000  01C1D4  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36001  01C1D6  6EFE               	movwf	tosh,c
 36002  01C1D8  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36003  01C1DA  6EFF               	movwf	tosu,c
 36004  01C1DC  50FA               	movf	pclath,w,c
 36005  01C1DE  0012               	return		;indir
 36006  01C1E0                     __end_of_UART2_tx_vect_isr:
 36007                           	opt callstack 0
 36008                           
 36009 ;; *************** function _UART2_Transmit_ISR *****************
 36010 ;; Defined at:
 36011 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36012 ;; Parameters:    Size  Location     Type
 36013 ;;		None
 36014 ;; Auto vars:     Size  Location     Type
 36015 ;;		None
 36016 ;; Return value:  Size  Location     Type
 36017 ;;                  1  [STACK] void 
 36018 ;; Registers used:
 36019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36020 ;; Tracked objects:
 36021 ;;		On entry : 3F/0
 36022 ;;		On exit  : 3B/39
 36023 ;;		Unchanged: 0/0
 36024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36029 ;;Total ram usage:        0 bytes
 36030 ;; Hardware stack levels used:    1
 36031 ;; This function calls:
 36032 ;;		Nothing
 36033 ;; This function is called by:
 36034 ;;		_UART2_Initialize
 36035 ;;		_UART2_tx_vect_isr
 36036 ;; This function uses a reentrant model
 36037 ;;
 36038                           
 36039                           	psect	text174
 36040  01BF58                     __ptext174:
 36041                           	opt callstack 0
 36042  01BF58                     _UART2_Transmit_ISR:
 36043                           	opt callstack 3
 36044                           
 36045                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36046                           
 36047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36048                           ;incstack = 0
 36049  01BF58  0E40               	movlw	64
 36050  01BF5A  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36051  01BF5C  D010               	goto	l673
 36052                           
 36053                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36054  01BF5E  0E00               	movlw	low _uart2TxBuffer
 36055  01BF60  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36056  01BF62  6ED9               	movwf	fsr2l,c
 36057  01BF64  6ADA               	clrf	fsr2h,c
 36058  01BF66  0E03               	movlw	high _uart2TxBuffer
 36059  01BF68  22DA               	addwfc	fsr2h,f,c
 36060  01BF6A  50DF               	movf	indf2,w,c
 36061  01BF6C  013D               	movlb	61	; () banked
 36062  01BF6E  6FD2               	movwf	210,b	;volatile
 36063                           
 36064                           ; BSR set to: 61
 36065  01BF70  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36066                           
 36067                           ; BSR set to: 61
 36068                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36069  01BF72  0E3F               	movlw	63
 36070  01BF74  6446               	cpfsgt	_uart2TxTail^0,c
 36071  01BF76  D001               	goto	l10968
 36072                           
 36073                           ; BSR set to: 61
 36074                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36075  01BF78  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36076  01BF7A                     l10968:
 36077                           
 36078                           ; BSR set to: 61
 36079                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36080  01BF7A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36081                           
 36082                           ;mcc_generated_files/uart2.c: 224:     }
 36083  01BF7C  0012               	return	
 36084  01BF7E                     l673:
 36085                           
 36086                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36087  01BF7E  0139               	movlb	57	; () banked
 36088  01BF80  9796               	bcf	150,3,b	;volatile
 36089                           
 36090                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36091  01BF82  0012               	return		;funcret
 36092  01BF84                     __end_of_UART2_Transmit_ISR:
 36093                           	opt callstack 0
 36094                           
 36095 ;; *************** function _UART2_rx_vect_isr *****************
 36096 ;; Defined at:
 36097 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36098 ;; Parameters:    Size  Location     Type
 36099 ;;		None
 36100 ;; Auto vars:     Size  Location     Type
 36101 ;;		None
 36102 ;; Return value:  Size  Location     Type
 36103 ;;                  1    wreg      void 
 36104 ;; Registers used:
 36105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36106 ;; Tracked objects:
 36107 ;;		On entry : 0/0
 36108 ;;		On exit  : 0/0
 36109 ;;		Unchanged: 0/0
 36110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36115 ;;Total ram usage:        0 bytes
 36116 ;; Hardware stack levels used:    1
 36117 ;; Hardware stack levels required when called:    1
 36118 ;; This function calls:
 36119 ;;		Absolute function
 36120 ;;		_UART2_Receive_ISR
 36121 ;; This function is called by:
 36122 ;;		Interrupt level 2
 36123 ;; This function uses a non-reentrant model
 36124 ;;
 36125                           
 36126                           	psect	text175
 36127  01C1E0                     __ptext175:
 36128                           	opt callstack 0
 36129  01C1E0                     _UART2_rx_vect_isr:
 36130                           	opt callstack 3
 36131                           
 36132                           ;incstack = 0
 36133  01C1E0  EE14  F15E         	lfsr	1,___inthi_sp
 36134                           
 36135                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36136  01C1E4  0100               	movlb	0	; () banked
 36137  01C1E6  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36138  01C1E8  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36139  01C1EA  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36140  01C1EC  B4D8               	btfsc	status,2,c
 36141  01C1EE  0011               	retfie		f
 36142                           
 36143                           ; BSR set to: 0
 36144                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36145  01C1F0  D801               	call	i2u1060_48
 36146  01C1F2  0011               	retfie		f
 36147  01C1F4                     i2u1060_48:
 36148  01C1F4  0005               	push	
 36149  01C1F6  6EFA               	movwf	pclath,c
 36150  01C1F8  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36151  01C1FA  6EFD               	movwf	tosl,c
 36152  01C1FC  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36153  01C1FE  6EFE               	movwf	tosh,c
 36154  01C200  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36155  01C202  6EFF               	movwf	tosu,c
 36156  01C204  50FA               	movf	pclath,w,c
 36157  01C206  0012               	return		;indir
 36158  01C208                     __end_of_UART2_rx_vect_isr:
 36159                           	opt callstack 0
 36160                           
 36161 ;; *************** function _UART2_Receive_ISR *****************
 36162 ;; Defined at:
 36163 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36164 ;; Parameters:    Size  Location     Type
 36165 ;;		None
 36166 ;; Auto vars:     Size  Location     Type
 36167 ;;		None
 36168 ;; Return value:  Size  Location     Type
 36169 ;;                  1  [STACK] void 
 36170 ;; Registers used:
 36171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36172 ;; Tracked objects:
 36173 ;;		On entry : 3F/0
 36174 ;;		On exit  : 3F/0
 36175 ;;		Unchanged: 0/0
 36176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36181 ;;Total ram usage:        0 bytes
 36182 ;; Hardware stack levels used:    1
 36183 ;; This function calls:
 36184 ;;		Nothing
 36185 ;; This function is called by:
 36186 ;;		_UART2_Initialize
 36187 ;;		_UART2_rx_vect_isr
 36188 ;; This function uses a reentrant model
 36189 ;;
 36190                           
 36191                           	psect	text176
 36192  01C366                     __ptext176:
 36193                           	opt callstack 0
 36194  01C366                     _UART2_Receive_ISR:
 36195                           	opt callstack 3
 36196                           
 36197                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36198                           
 36199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36200                           ;incstack = 0
 36201  01C366  0E00               	movlw	low _uart2RxBuffer
 36202  01C368  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36203  01C36A  6ED9               	movwf	fsr2l,c
 36204  01C36C  6ADA               	clrf	fsr2h,c
 36205  01C36E  0E04               	movlw	high _uart2RxBuffer
 36206  01C370  22DA               	addwfc	fsr2h,f,c
 36207  01C372  006F F743 FFDF     	movff	15824,indf2	;volatile
 36208  01C378  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36209                           
 36210                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36211  01C37A  2844               	incf	_uart2RxHead^0,w,c
 36212  01C37C  B4D8               	btfsc	status,2,c
 36213                           
 36214                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36215  01C37E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36216                           
 36217                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36218  01C380  0100               	movlb	0	; () banked
 36219  01C382  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36220                           
 36221                           ; BSR set to: 0
 36222                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36223  01C384  0012               	return		;funcret
 36224  01C386                     __end_of_UART2_Receive_ISR:
 36225                           	opt callstack 0
 36226                           
 36227 ;; *************** function _TMR6_ISR *****************
 36228 ;; Defined at:
 36229 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36230 ;; Parameters:    Size  Location     Type
 36231 ;;		None
 36232 ;; Auto vars:     Size  Location     Type
 36233 ;;		None
 36234 ;; Return value:  Size  Location     Type
 36235 ;;                  1    wreg      void 
 36236 ;; Registers used:
 36237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36238 ;; Tracked objects:
 36239 ;;		On entry : 0/0
 36240 ;;		On exit  : 0/0
 36241 ;;		Unchanged: 0/0
 36242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36247 ;;Total ram usage:        1 bytes
 36248 ;; Hardware stack levels used:    1
 36249 ;; Hardware stack levels required when called:    2
 36250 ;; This function calls:
 36251 ;;		_TMR6_CallBack
 36252 ;; This function is called by:
 36253 ;;		Interrupt level 2
 36254 ;; This function uses a non-reentrant model
 36255 ;;
 36256                           
 36257                           	psect	text177
 36258  01C438                     __ptext177:
 36259                           	opt callstack 0
 36260  01C438                     _TMR6_ISR:
 36261                           	opt callstack 2
 36262                           
 36263                           ; BSR set to: 0
 36264                           ;incstack = 0
 36265  01C438  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36266  01C43E  EE14  F15E         	lfsr	1,___inthi_sp
 36267                           
 36268                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36269  01C442  0139               	movlb	57	; () banked
 36270  01C444  91A9               	bcf	169,0,b	;volatile
 36271                           
 36272                           ; BSR set to: 57
 36273                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36274  01C446  EC5E  F0E1         	call	_TMR6_CallBack	;wreg free
 36275  01C44A  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36276  01C450  0011               	retfie		f
 36277  01C452                     __end_of_TMR6_ISR:
 36278                           	opt callstack 0
 36279                           
 36280 ;; *************** function _TMR6_CallBack *****************
 36281 ;; Defined at:
 36282 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36283 ;; Parameters:    Size  Location     Type
 36284 ;;		None
 36285 ;; Auto vars:     Size  Location     Type
 36286 ;;		None
 36287 ;; Return value:  Size  Location     Type
 36288 ;;                  1  [STACK] void 
 36289 ;; Registers used:
 36290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36291 ;; Tracked objects:
 36292 ;;		On entry : 3F/39
 36293 ;;		On exit  : 0/0
 36294 ;;		Unchanged: 0/0
 36295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36300 ;;Total ram usage:        0 bytes
 36301 ;; Hardware stack levels used:    1
 36302 ;; Hardware stack levels required when called:    1
 36303 ;; This function calls:
 36304 ;;		Absolute function
 36305 ;;		_TMR6_DefaultInterruptHandler
 36306 ;; This function is called by:
 36307 ;;		_TMR6_ISR
 36308 ;; This function uses a reentrant model
 36309 ;;
 36310                           
 36311                           	psect	text178
 36312  01C2BC                     __ptext178:
 36313                           	opt callstack 0
 36314  01C2BC                     _TMR6_CallBack:
 36315                           	opt callstack 2
 36316                           
 36317                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36318                           
 36319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36320                           ;incstack = 0
 36321  01C2BC  0100               	movlb	0	; () banked
 36322  01C2BE  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36323  01C2C0  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36324  01C2C2  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36325  01C2C4  B4D8               	btfsc	status,2,c
 36326  01C2C6  0012               	return	
 36327                           
 36328                           ; BSR set to: 0
 36329                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36330  01C2C8  D801               	call	u1015_48
 36331  01C2CA  0012               	return	
 36332  01C2CC                     u1015_48:
 36333  01C2CC  0005               	push	
 36334  01C2CE  6EFA               	movwf	pclath,c
 36335  01C2D0  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36336  01C2D2  6EFD               	movwf	tosl,c
 36337  01C2D4  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36338  01C2D6  6EFE               	movwf	tosh,c
 36339  01C2D8  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36340  01C2DA  6EFF               	movwf	tosu,c
 36341  01C2DC  50FA               	movf	pclath,w,c
 36342  01C2DE  0012               	return		;indir
 36343  01C2E0                     __end_of_TMR6_CallBack:
 36344                           	opt callstack 0
 36345                           
 36346 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36347 ;; Defined at:
 36348 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36349 ;; Parameters:    Size  Location     Type
 36350 ;;		None
 36351 ;; Auto vars:     Size  Location     Type
 36352 ;;  i               1  [STACK] unsigned char 
 36353 ;; Return value:  Size  Location     Type
 36354 ;;                  1  [STACK] void 
 36355 ;; Registers used:
 36356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36357 ;; Tracked objects:
 36358 ;;		On entry : 3F/0
 36359 ;;		On exit  : 0/0
 36360 ;;		Unchanged: 0/0
 36361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36366 ;;Total ram usage:        0 bytes
 36367 ;; Hardware stack levels used:    1
 36368 ;; This function calls:
 36369 ;;		Nothing
 36370 ;; This function is called by:
 36371 ;;		_TMR6_Initialize
 36372 ;;		_TMR6_CallBack
 36373 ;; This function uses a reentrant model
 36374 ;;
 36375                           
 36376                           	psect	text179
 36377  01B752                     __ptext179:
 36378                           	opt callstack 0
 36379  01B752                     _TMR6_DefaultInterruptHandler:
 36380                           	opt callstack 0
 36381                           
 36382                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36383  01B752  52E6               	movf	postinc1,f,c
 36384                           
 36385                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36386                           ;stkvar	_i @ sp[(-1)+0]
 36387                           
 36388                           ;incstack = 0
 36389  01B754  0EFF               	movlw	-1
 36390  01B756  6AE3               	clrf	plusw1,c
 36391  01B758                     l10532:
 36392                           
 36393                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36394                           ;stkvar	_i @ sp[(-1)+0]
 36395  01B758  0EFF               	movlw	-1
 36396  01B75A  50E3               	movf	plusw1,w,c
 36397  01B75C  0D02               	mullw	2
 36398  01B75E  0E7D               	movlw	low _tickCount
 36399  01B760  24F3               	addwf	243,w,c
 36400  01B762  6ED9               	movwf	fsr2l,c
 36401  01B764  0E02               	movlw	high _tickCount
 36402  01B766  20F4               	addwfc	prodh,w,c
 36403  01B768  6EDA               	movwf	fsr2h,c
 36404  01B76A  50DE               	movf	postinc2,w,c
 36405  01B76C  10DE               	iorwf	postinc2,w,c
 36406  01B76E  B4D8               	btfsc	status,2,c
 36407  01B770  D00C               	goto	l10536
 36408                           
 36409                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36410                           ;stkvar	_i @ sp[(-1)+0]
 36411  01B772  0EFF               	movlw	-1
 36412  01B774  50E3               	movf	plusw1,w,c
 36413  01B776  0D02               	mullw	2
 36414  01B778  0E7D               	movlw	low _tickCount
 36415  01B77A  24F3               	addwf	243,w,c
 36416  01B77C  6ED9               	movwf	fsr2l,c
 36417  01B77E  0E02               	movlw	high _tickCount
 36418  01B780  20F4               	addwfc	prodh,w,c
 36419  01B782  6EDA               	movwf	fsr2h,c
 36420  01B784  06DE               	decf	postinc2,f,c
 36421  01B786  0E00               	movlw	0
 36422  01B788  5ADD               	subwfb	postdec2,f,c
 36423  01B78A                     l10536:
 36424                           
 36425                           ;mcc_generated_files/tmr6.c: 207:  }
 36426                           ;stkvar	_i @ sp[(-1)+0]
 36427  01B78A  0EFF               	movlw	-1
 36428  01B78C  2AE3               	incf	plusw1,f,c
 36429                           
 36430                           ;stkvar	_i @ sp[(-1)+0]
 36431  01B78E  0EFF               	movlw	-1
 36432  01B790  006F FF8C  F001    	movff	plusw1,btemp
 36433  01B796  0E0C               	movlw	12
 36434  01B798  6401               	cpfsgt	btemp^0,c
 36435  01B79A  D7DE               	goto	l10532
 36436                           
 36437                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36438  01B79C  52E5               	movf	postdec1,f,c
 36439  01B79E  0012               	return		;funcret
 36440  01B7A0                     __end_of_TMR6_DefaultInterruptHandler:
 36441                           	opt callstack 0
 36442                           
 36443 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36444 ;; Defined at:
 36445 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36446 ;; Parameters:    Size  Location     Type
 36447 ;;		None
 36448 ;; Auto vars:     Size  Location     Type
 36449 ;;		None
 36450 ;; Return value:  Size  Location     Type
 36451 ;;                  1    wreg      void 
 36452 ;; Registers used:
 36453 ;;		None
 36454 ;; Tracked objects:
 36455 ;;		On entry : 0/0
 36456 ;;		On exit  : 3F/1
 36457 ;;		Unchanged: 0/0
 36458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36463 ;;Total ram usage:        0 bytes
 36464 ;; Hardware stack levels used:    1
 36465 ;; This function calls:
 36466 ;;		Nothing
 36467 ;; This function is called by:
 36468 ;;		Interrupt level 2
 36469 ;; This function uses a non-reentrant model
 36470 ;;
 36471                           
 36472                           	psect	text180
 36473  01C564                     __ptext180:
 36474                           	opt callstack 0
 36475  01C564                     _DMA1_DMASCNT_ISR:
 36476                           	opt callstack 4
 36477                           
 36478                           ;incstack = 0
 36479  01C564  EE14  F15E         	lfsr	1,___inthi_sp
 36480                           
 36481                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36482  01C568  0139               	movlb	57	; () banked
 36483  01C56A  91A2               	bcf	162,0,b	;volatile
 36484                           
 36485                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36486  01C56C  0101               	movlb	1	; () banked
 36487  01C56E  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36488                           
 36489                           ; BSR set to: 1
 36490  01C570  0011               	retfie		f
 36491  01C572                     __end_of_DMA1_DMASCNT_ISR:
 36492                           	opt callstack 0
 36493                           
 36494 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36495 ;; Defined at:
 36496 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36497 ;; Parameters:    Size  Location     Type
 36498 ;;		None
 36499 ;; Auto vars:     Size  Location     Type
 36500 ;;		None
 36501 ;; Return value:  Size  Location     Type
 36502 ;;                  1    wreg      void 
 36503 ;; Registers used:
 36504 ;;		None
 36505 ;; Tracked objects:
 36506 ;;		On entry : 0/0
 36507 ;;		On exit  : 3F/39
 36508 ;;		Unchanged: 0/0
 36509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36514 ;;Total ram usage:        0 bytes
 36515 ;; Hardware stack levels used:    1
 36516 ;; This function calls:
 36517 ;;		Nothing
 36518 ;; This function is called by:
 36519 ;;		Interrupt level 2
 36520 ;; This function uses a non-reentrant model
 36521 ;;
 36522                           
 36523                           	psect	text181
 36524  01C588                     __ptext181:
 36525                           	opt callstack 0
 36526  01C588                     _DMA1_DMADCNT_ISR:
 36527                           	opt callstack 4
 36528                           
 36529                           ; BSR set to: 1
 36530                           ;incstack = 0
 36531  01C588  EE14  F15E         	lfsr	1,___inthi_sp
 36532                           
 36533                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36534  01C58C  0139               	movlb	57	; () banked
 36535  01C58E  93A2               	bcf	162,1,b	;volatile
 36536                           
 36537                           ; BSR set to: 57
 36538  01C590  0011               	retfie		f
 36539  01C592                     __end_of_DMA1_DMADCNT_ISR:
 36540                           	opt callstack 0
 36541                           
 36542 ;; *************** function _DMA1_DMAA_ISR *****************
 36543 ;; Defined at:
 36544 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36545 ;; Parameters:    Size  Location     Type
 36546 ;;		None
 36547 ;; Auto vars:     Size  Location     Type
 36548 ;;		None
 36549 ;; Return value:  Size  Location     Type
 36550 ;;                  1    wreg      void 
 36551 ;; Registers used:
 36552 ;;		None
 36553 ;; Tracked objects:
 36554 ;;		On entry : 0/0
 36555 ;;		On exit  : 3F/39
 36556 ;;		Unchanged: 0/0
 36557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36562 ;;Total ram usage:        0 bytes
 36563 ;; Hardware stack levels used:    1
 36564 ;; This function calls:
 36565 ;;		Nothing
 36566 ;; This function is called by:
 36567 ;;		Interrupt level 2
 36568 ;; This function uses a non-reentrant model
 36569 ;;
 36570                           
 36571                           	psect	text182
 36572  01C594                     __ptext182:
 36573                           	opt callstack 0
 36574  01C594                     _DMA1_DMAA_ISR:
 36575                           	opt callstack 4
 36576                           
 36577                           ; BSR set to: 57
 36578                           ;incstack = 0
 36579  01C594  EE14  F15E         	lfsr	1,___inthi_sp
 36580                           
 36581                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36582  01C598  0139               	movlb	57	; () banked
 36583  01C59A  97A2               	bcf	162,3,b	;volatile
 36584                           
 36585                           ; BSR set to: 57
 36586  01C59C  0011               	retfie		f
 36587  01C59E                     __end_of_DMA1_DMAA_ISR:
 36588                           	opt callstack 0
 36589                           
 36590 ;; *************** function _DMA1_DMAOR_ISR *****************
 36591 ;; Defined at:
 36592 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36593 ;; Parameters:    Size  Location     Type
 36594 ;;		None
 36595 ;; Auto vars:     Size  Location     Type
 36596 ;;		None
 36597 ;; Return value:  Size  Location     Type
 36598 ;;                  1    wreg      void 
 36599 ;; Registers used:
 36600 ;;		None
 36601 ;; Tracked objects:
 36602 ;;		On entry : 0/0
 36603 ;;		On exit  : 3F/39
 36604 ;;		Unchanged: 0/0
 36605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36610 ;;Total ram usage:        0 bytes
 36611 ;; Hardware stack levels used:    1
 36612 ;; This function calls:
 36613 ;;		Nothing
 36614 ;; This function is called by:
 36615 ;;		Interrupt level 2
 36616 ;; This function uses a non-reentrant model
 36617 ;;
 36618                           
 36619                           	psect	text183
 36620  01C5A0                     __ptext183:
 36621                           	opt callstack 0
 36622  01C5A0                     _DMA1_DMAOR_ISR:
 36623                           	opt callstack 4
 36624                           
 36625                           ; BSR set to: 57
 36626                           ;incstack = 0
 36627  01C5A0  EE14  F15E         	lfsr	1,___inthi_sp
 36628                           
 36629                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36630  01C5A4  0139               	movlb	57	; () banked
 36631  01C5A6  95A2               	bcf	162,2,b	;volatile
 36632                           
 36633                           ; BSR set to: 57
 36634  01C5A8  0011               	retfie		f
 36635  01C5AA                     __end_of_DMA1_DMAOR_ISR:
 36636                           	opt callstack 0
 36637                           
 36638                           ;
 36639                           ; Interrupt Vector Table @ 0x8
 36640                           ;
 36641                           
 36642                           	psect	ivt0x8
 36643  000008                     __pivt0x8:
 36644                           	opt callstack 0
 36645  000008                     ivt0x8_base:
 36646                           	opt callstack 0
 36647                           
 36648                           ; Vector 0 : SWINT
 36649  000008  717B               	dw	_Default_ISR shr (0+2)
 36650                           
 36651                           ; Vector 1 : HLVD
 36652  00000A  717B               	dw	_Default_ISR shr (0+2)
 36653                           
 36654                           ; Vector 2 : OSF
 36655  00000C  717B               	dw	_Default_ISR shr (0+2)
 36656                           
 36657                           ; Vector 3 : CSW
 36658  00000E  717B               	dw	_Default_ISR shr (0+2)
 36659                           
 36660                           ; Vector 4 : NVM
 36661  000010  717B               	dw	_Default_ISR shr (0+2)
 36662                           
 36663                           ; Vector 5 : SCAN
 36664  000012  717B               	dw	_Default_ISR shr (0+2)
 36665                           
 36666                           ; Vector 6 : CRC
 36667  000014  717B               	dw	_Default_ISR shr (0+2)
 36668                           
 36669                           ; Vector 7 : IOC
 36670  000016  717B               	dw	_Default_ISR shr (0+2)
 36671                           
 36672                           ; Vector 8 : INT0
 36673  000018  7155               	dw	_INT0_ISR shr (0+2)
 36674                           
 36675                           ; Vector 9 : ZCD
 36676  00001A  717B               	dw	_Default_ISR shr (0+2)
 36677                           
 36678                           ; Vector 10 : AD
 36679  00001C  6FCB               	dw	_ADCC_ISR shr (0+2)
 36680                           
 36681                           ; Vector 11 : ADT
 36682  00001E  6CD2               	dw	_ADCC_ThresholdISR shr (0+2)
 36683                           
 36684                           ; Vector 12 : CMP1
 36685  000020  717B               	dw	_Default_ISR shr (0+2)
 36686                           
 36687                           ; Vector 13 : SMT1
 36688  000022  717B               	dw	_Default_ISR shr (0+2)
 36689                           
 36690                           ; Vector 14 : SMT1PRA
 36691  000024  717B               	dw	_Default_ISR shr (0+2)
 36692                           
 36693                           ; Vector 15 : SMT1PRW
 36694  000026  717B               	dw	_Default_ISR shr (0+2)
 36695                           
 36696                           ; Vector 16 : DMA1SCNT
 36697  000028  7159               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36698                           
 36699                           ; Vector 17 : DMA1DCNT
 36700  00002A  7162               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36701                           
 36702                           ; Vector 18 : DMA1OR
 36703  00002C  7168               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36704                           
 36705                           ; Vector 19 : DMA1A
 36706  00002E  7165               	dw	_DMA1_DMAA_ISR shr (0+2)
 36707                           
 36708                           ; Vector 20 : SPI1RX
 36709  000030  717B               	dw	_Default_ISR shr (0+2)
 36710                           
 36711                           ; Vector 21 : SPI1TX
 36712  000032  717B               	dw	_Default_ISR shr (0+2)
 36713                           
 36714                           ; Vector 22 : SPI1
 36715  000034  717B               	dw	_Default_ISR shr (0+2)
 36716                           
 36717                           ; Vector 23 : I2C1RX
 36718  000036  717B               	dw	_Default_ISR shr (0+2)
 36719                           
 36720                           ; Vector 24 : I2C1TX
 36721  000038  717B               	dw	_Default_ISR shr (0+2)
 36722                           
 36723                           ; Vector 25 : I2C1
 36724  00003A  717B               	dw	_Default_ISR shr (0+2)
 36725                           
 36726                           ; Vector 26 : I2C1E
 36727  00003C  717B               	dw	_Default_ISR shr (0+2)
 36728                           
 36729                           ; Vector 27 : U1RX
 36730  00003E  7064               	dw	_UART1_rx_vect_isr shr (0+2)
 36731                           
 36732                           ; Vector 28 : U1TX
 36733  000040  717B               	dw	_Default_ISR shr (0+2)
 36734                           
 36735                           ; Vector 29 : U1E
 36736  000042  717B               	dw	_Default_ISR shr (0+2)
 36737                           
 36738                           ; Vector 30 : U1
 36739  000044  717B               	dw	_Default_ISR shr (0+2)
 36740                           
 36741                           ; Vector 31 : TMR0
 36742  000046  717B               	dw	_Default_ISR shr (0+2)
 36743                           
 36744                           ; Vector 32 : TMR1
 36745  000048  717B               	dw	_Default_ISR shr (0+2)
 36746                           
 36747                           ; Vector 33 : TMR1G
 36748  00004A  717B               	dw	_Default_ISR shr (0+2)
 36749                           
 36750                           ; Vector 34 : TMR2
 36751  00004C  717B               	dw	_Default_ISR shr (0+2)
 36752                           
 36753                           ; Vector 35 : CCP1
 36754  00004E  717B               	dw	_Default_ISR shr (0+2)
 36755                           
 36756                           ; Vector 36 : Undefined
 36757  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36758                           
 36759                           ; Vector 37 : NCO1
 36760  000052  717B               	dw	_Default_ISR shr (0+2)
 36761                           
 36762                           ; Vector 38 : CWG1
 36763  000054  717B               	dw	_Default_ISR shr (0+2)
 36764                           
 36765                           ; Vector 39 : CLC1
 36766  000056  717B               	dw	_Default_ISR shr (0+2)
 36767                           
 36768                           ; Vector 40 : INT1
 36769  000058  6EFB               	dw	_INT1_ISR shr (0+2)
 36770                           
 36771                           ; Vector 41 : CMP2
 36772  00005A  717B               	dw	_Default_ISR shr (0+2)
 36773                           
 36774                           ; Vector 42 : DMA2SCNT
 36775  00005C  717B               	dw	_Default_ISR shr (0+2)
 36776                           
 36777                           ; Vector 43 : DMA2DCNT
 36778  00005E  717B               	dw	_Default_ISR shr (0+2)
 36779                           
 36780                           ; Vector 44 : DMA2OR
 36781  000060  717B               	dw	_Default_ISR shr (0+2)
 36782                           
 36783                           ; Vector 45 : DMA2A
 36784  000062  717B               	dw	_Default_ISR shr (0+2)
 36785                           
 36786                           ; Vector 46 : I2C2RX
 36787  000064  717B               	dw	_Default_ISR shr (0+2)
 36788                           
 36789                           ; Vector 47 : I2C2TX
 36790  000066  717B               	dw	_Default_ISR shr (0+2)
 36791                           
 36792                           ; Vector 48 : I2C2
 36793  000068  717B               	dw	_Default_ISR shr (0+2)
 36794                           
 36795                           ; Vector 49 : I2C2E
 36796  00006A  717B               	dw	_Default_ISR shr (0+2)
 36797                           
 36798                           ; Vector 50 : U2RX
 36799  00006C  7078               	dw	_UART2_rx_vect_isr shr (0+2)
 36800                           
 36801                           ; Vector 51 : U2TX
 36802  00006E  706E               	dw	_UART2_tx_vect_isr shr (0+2)
 36803                           
 36804                           ; Vector 52 : U2E
 36805  000070  717B               	dw	_Default_ISR shr (0+2)
 36806                           
 36807                           ; Vector 53 : U2
 36808  000072  717B               	dw	_Default_ISR shr (0+2)
 36809                           
 36810                           ; Vector 54 : TMR3
 36811  000074  64DE               	dw	_TMR3_ISR shr (0+2)
 36812                           
 36813                           ; Vector 55 : TMR3G
 36814  000076  717B               	dw	_Default_ISR shr (0+2)
 36815                           
 36816                           ; Vector 56 : TMR4
 36817  000078  717B               	dw	_Default_ISR shr (0+2)
 36818                           
 36819                           ; Vector 57 : CCP2
 36820  00007A  717B               	dw	_Default_ISR shr (0+2)
 36821                           
 36822                           ; Vector 58 : Undefined
 36823  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36824                           
 36825                           ; Vector 59 : CWG2
 36826  00007E  717B               	dw	_Default_ISR shr (0+2)
 36827                           
 36828                           ; Vector 60 : CLC2
 36829  000080  717B               	dw	_Default_ISR shr (0+2)
 36830                           
 36831                           ; Vector 61 : INT2
 36832  000082  717B               	dw	_Default_ISR shr (0+2)
 36833                           
 36834                           ; Vector 62 : Undefined
 36835  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36836                           
 36837                           ; Vector 63 : Undefined
 36838  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36839                           
 36840                           ; Vector 64 : Undefined
 36841  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36842                           
 36843                           ; Vector 65 : Undefined
 36844  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36845                           
 36846                           ; Vector 66 : Undefined
 36847  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36848                           
 36849                           ; Vector 67 : Undefined
 36850  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36851                           
 36852                           ; Vector 68 : Undefined
 36853  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36854                           
 36855                           ; Vector 69 : Undefined
 36856  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36857                           
 36858                           ; Vector 70 : TMR5
 36859  000094  688C               	dw	_TMR5_ISR shr (0+2)
 36860                           
 36861                           ; Vector 71 : TMR5G
 36862  000096  717B               	dw	_Default_ISR shr (0+2)
 36863                           
 36864                           ; Vector 72 : TMR6
 36865  000098  710E               	dw	_TMR6_ISR shr (0+2)
 36866                           
 36867                           ; Vector 73 : CCP3
 36868  00009A  717B               	dw	_Default_ISR shr (0+2)
 36869                           
 36870                           ; Vector 74 : CWG3
 36871  00009C  717B               	dw	_Default_ISR shr (0+2)
 36872                           
 36873                           ; Vector 75 : CLC3
 36874  00009E  717B               	dw	_Default_ISR shr (0+2)
 36875                           
 36876                           ; Vector 76 : Undefined
 36877  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36878                           
 36879                           ; Vector 77 : Undefined
 36880  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36881                           
 36882                           ; Vector 78 : Undefined
 36883  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36884                           
 36885                           ; Vector 79 : Undefined
 36886  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36887                           
 36888                           ; Vector 80 : CCP4
 36889  0000A8  717B               	dw	_Default_ISR shr (0+2)
 36890                           
 36891                           ; Vector 81 : CLC4
 36892  0000AA  717B               	dw	_Default_ISR shr (0+2)
 36893  0000AC                     ivt0x8_undefint:
 36894                           	opt callstack 0
 36895  0000AC  00FF               	reset	
 36896                           
 36897                           	psect	text184
 36898  000000                     __ptext184:
 36899                           	opt callstack 0
 36900                           
 36901                           	psect	rparam
 36902  0000                     
 36903                           	psect	temp
 36904  000001                     btemp:
 36905                           	opt callstack 0
 36906  000001                     	ds	32
 36907  0000                     wtemp0	set	btemp
 36908  0000                     wtemp1	set	btemp+2
 36909  0000                     wtemp2	set	btemp+4
 36910  0000                     wtemp3	set	btemp+6
 36911  0000                     wtemp4	set	btemp+8
 36912  0000                     wtemp5	set	btemp+10
 36913  0000                     wtemp8	set	btemp+1
 36914  0000                     ttemp0	set	btemp
 36915  0000                     ttemp1	set	btemp+3
 36916  0000                     ttemp2	set	btemp+6
 36917  0000                     ttemp3	set	btemp+9
 36918  0000                     ttemp5	set	btemp+1
 36919  0000                     ttemp6	set	btemp+4
 36920  0000                     ttemp7	set	btemp+8
 36921  0000                     ltemp0	set	btemp
 36922  0000                     ltemp1	set	btemp+4
 36923  0000                     ltemp2	set	btemp+8
 36924  0000                     lltemp0	set	btemp
 36925  0000                     lltemp1	set	btemp+8
 36926  0000                     lltemp2	set	btemp+16
 36927  0000                     lltemp3	set	btemp+24
 36928                           tosu	equ	0x3FFF
 36929                           tosh	equ	0x3FFE
 36930                           tosl	equ	0x3FFD
 36931                           stkptr	equ	0x3FFC
 36932                           pclatu	equ	0x3FFB
 36933                           pclath	equ	0x3FFA
 36934                           pcl	equ	0x3FF9
 36935                           tblptru	equ	0x3FF8
 36936                           tblptrh	equ	0x3FF7
 36937                           tblptrl	equ	0x3FF6
 36938                           tablat	equ	0x3FF5
 36939                           prodh	equ	0x3FF4
 36940                           prodl	equ	0x3FF3
 36941                           indf0	equ	0x3FEF
 36942                           postinc0	equ	0x3FEE
 36943                           postdec0	equ	0x3FED
 36944                           preinc0	equ	0x3FEC
 36945                           plusw0	equ	0x3FEB
 36946                           fsr0h	equ	0x3FEA
 36947                           fsr0l	equ	0x3FE9
 36948                           wreg	equ	0x3FE8
 36949                           indf1	equ	0x3FE7
 36950                           postinc1	equ	0x3FE6
 36951                           postdec1	equ	0x3FE5
 36952                           preinc1	equ	0x3FE4
 36953                           plusw1	equ	0x3FE3
 36954                           fsr1h	equ	0x3FE2
 36955                           fsr1l	equ	0x3FE1
 36956                           bsr	equ	0x3FE0
 36957                           indf2	equ	0x3FDF
 36958                           postinc2	equ	0x3FDE
 36959                           postdec2	equ	0x3FDD
 36960                           preinc2	equ	0x3FDC
 36961                           plusw2	equ	0x3FDB
 36962                           fsr2h	equ	0x3FDA
 36963                           fsr2l	equ	0x3FD9
 36964                           status	equ	0x3FD8


Data Sizes:
    Strings     1070
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6392_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4855tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  481379
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 24 20:51:12 2020

                     _SPI1_Exchange8bit C386                __end_of_set_display_info C3FE  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FAB5                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C0C6            __end_of_start_switch_handler C366  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBBD                  __end_of_FVR_Initialize C5D2  
                        _check_day_time 8A66                             __CFG_LVP$ON 000000  
                                   l169 C4BE                                     l807 C394  
                                   l673 BF7E                                     _GIE 01FE97  
                                   _abs B99A                                     _pad 9D20  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C46A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C298  
                     _update_adc_result BC2A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C22C  
                          __CFG_ZCD$OFF 000000                                    l1002 BBA6  
                                  l2123 3DB6                                    l2044 A592  
                                  l1332 12A2                                    l2053 88A4  
                                  l1190 BBE6                                    l3030 4C36  
                                  l1350 1902                                    l2119 3AB0  
                                  l2224 9D7C                                    l3201 7C08  
                                  l1601 AE68                                    l3018 4DA6  
                       _timer3ReloadVal 009E                                    l2244 591C  
                                  l2324 0B1A                                    l1348 18FE  
                                  l2309 066A                                    l2165 745C  
                                  l1374 23A8                                    l1358 19A2  
                                  l3063 5320                                    l2280 123A  
                                  l1616 BD22                                    l1368 1BA6  
                                  l1369 1DCE                                    l3170 B9DA  
                                  l3162 8D92                                    l2362 754A  
                                  l3139 86C4                                    l1732 C3FA  
                                  l1469 B604                                    l3270 9AE6  
                                  l2383 6874                                    l1816 5838  
                                  l2448 338A                                    l3099 45EA  
                                  l1675 BC80                                    l2740 A720  
                                  l1692 9F40                                    l1684 836A  
                                  l1597 AB4E                                    l1685 84C6  
                                  l1918 8A5C                                    l2398 614E  
                  _ADCC_StartConversion C4D8                                    l2751 936C  
                                  l2744 9298                                    l3552 B088  
                                  l1856 B186                                    l1872 A940  
                                  l3537 82AE                                    l3565 B004  
                                  l1965 A062                                    l1982 8BF4  
                                  l1978 8BFC                                    l2778 920A  
                                  l8110 4D86                                    l8102 4D46  
                                  l8022 4AB6                                    l8104 4D56  
                                  l8040 4BE6                                    l8016 4A9A  
                                  l8200 8D30                                    l8018 4AAC  
                                  l8026 4AE8                                    l8210 8D8A  
                                  l8300 7780                                    l8204 8D34  
                                  l8062 4C76                                    l8038 4BC0  
                                  l8072 4C9E                                    l8056 4C58  
                                  l8048 4C1A                                    l8400 4EE4  
                                  l8312 781A                                    l8058 4C6A  
                                  l8410 4F3A                                    l8306 77D4  
                                  l8242 65E2                                    l8076 4CA4  
                                  l8500 5260                                    l8412 4F6A  
                                  l8324 78EC                                    l8228 B078  
                                  l8406 4F24                                    l8262 6798  
                                  l8088 4D02                                    l8520 5304  
                                  l8512 52CC                                    l8432 4FFC  
                                  l8424 4FE2                                    l8360 7FEA  
                                  l8352 7F3E                                    l8344 7EB6  
                                  l8256 6700                                    l8098 4D2E  
                                  l8506 529C                                    l8450 50C2  
                                  l8442 508C                                    l8418 4FA8  
                                  l8186 B9CA                                    l8266 6806  
                                  l8258 6750                                    l8452 50D4  
                                  l8460 512C                                    l8380 4E06  
                                  l9500 79DA                                    l8284 AFF4  
                                  l8630 43FA                                    l8542 3E60  
                                  l7902 464A                                    l8518 52F4  
                                  l8390 4E5C                                    l8710 9534  
                                  l8624 43DE                                    l8560 3F2E  
                                  l8544 3E66                                    l8536 3E20  
                                  l7920 4708                                    l7912 46A0  
                                  l8800 92E6                                    l8472 5176  
                                  l8392 4E8C                                    l9520 7AF4  
                                  l8704 9514                                    l8634 4420  
                                  l8562 3F34                                    l8554 3EEE  
                                  l8546 3E96                                    l7914 46D0  
                                  l8490 51EC                                    l8466 515A  
                                  l8458 5128                                    l8386 4E46  
                                  l9514 7A7A                                    l8644 446A  
                                  l8572 3F86                                    l8564 3F64  
                                  l7932 477A                                    l7908 468A  
                                  l8812 936A                                    l8804 9334  
                                  l8476 519C                                    l9524 7B5C  
                                  l9516 7A92                                    l9508 7A4E  
                                  l8732 960E                                    l8724 95DA  
                                  l8820 B852                                    l8662 452A  
                                  l7926 473A                                    l8486 51E6  
                                  l9534 7BF8                                    l9518 7AB6  
                                  l8830 90F4                                    l9550 8120  
                                  l8902 970E                                    l8648 4470  
                                  l7944 47E2                                    l7936 4790  
                                  l8752 9C52                                    l8744 9C28  
                                  l9552 818C                                    l8658 44E4  
                                  l7938 47C0                                    l7874 ACCA  
                                  l8770 9D06                                    l8762 9CD2  
                                  l8676 4598                                    l8668 4554  
                                  l9820 85A4                                    l9900 576A  
                                  l7876 ACEC                                    l8748 9C3A  
                                  l8678 45B2                                    l7990 49C4  
                                  l7974 4920                                    l9830 860E  
                                  l9822 85C2                                    l8918 B6F0  
                                  l8782 A6EA                                    l8854 91A2  
                                  l8846 9176                                    l8870 8F70  
                                  l7984 4992                                    l9840 8642  
                                  l9832 8624                                    l9816 8580  
                                  l9808 8514                                    l8856 91B8  
                                  l8848 9192                                    l7994 49CE  
                                  l8794 9256                                    l9850 86A4  
                                  l9818 858E                                    l9906 5806  
                                  l9914 5818                                    l9498 79B8  
                                  l8698 94FE                                    l8786 A71E  
                                  l8778 A6A8                                    l8882 9042  
                                  l7988 49B2                                    l9828 85F0  
                                  l9860 532C                                    l9932 BFF6  
                                  l7998 49FE                                    l8894 9662  
                                  STR_1 FF1E                                    l9880 55BC  
                                  STR_2 FF09                                    STR_3 FFD2  
                                  l9866 535C                                    STR_4 FECA  
                                  STR_5 FEA0                                    l9892 568A  
                                  l9876 54AE                                    STR_6 FEA0  
                                  STR_7 FEA0                                    STR_8 FEB5  
                                  STR_9 FC9B                                    l9888 55EE  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6120 8D82  
                                  u6200 65C6                                    u7010 44BE  
                                  u6130 8D84                                    _T6PR 003F93  
                                  u6115 8D64                                    u7020 44F8  
                                  u6060 B9AE                                    u7100 95FA  
                                  u6300 BA60                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u7030 453E  
                                  u6070 8CB4                                    u5510 BE94  
                                  u6310 AFB2                                    _PMD2 0039C2  
                                  u7015 44AE                                    _PMD3 0039C3  
                                  u6240 66A6                                    u5520 BE96  
                                  u6160 B036                                    u6320 AFB4  
                                  _PMD4 0039C4                                    u6401 77DA  
                                  u6225 6600                                    _PMD5 0039C5  
                                  u6410 7814                                    u7210 A71A  
                                  u6226 6606                                    u6170 B038  
                                  _PMD6 0039C6                                    u6075 8CAA  
                                  u6227 6614                                    _PMD7 0039C7  
                                  u5620 4946                                    u6340 BEC4  
                                  u6420 7846                                    u7300 9122  
                                  u6260 677E                                    u6245 669C  
                                  u5630 4966                                    u6350 BEC6  
                                  u6510 7F06                                    u7150 9C7E  
                                  u6190 657A                                    u5631 4960  
                                  u5480 AD1A                                    u6440 7924  
                                  u6520 7F38                                    u7080 9560  
                                  u7400 8F9C                                    u7305 9118  
                                  u6265 6774                                    u6370 777A  
                                  u6530 7F6A                                    u7170 9CF2  
                                  u6290 BA5E                                    u6195 6570  
                                  u5820 4C7C                                    u5740 4ADE  
                                  u7500 B6EC                                    u6460 7976  
                                  u7420 907A                                    u5910 4D12  
                                  u5670 49F6                                    u6710 5154  
                                  u6390 77D0                                    u6550 8022  
                                  u7270 B84E                                    u7350 91C0  
                                  u5487 AD0C                                    u5840 4C96  
                                  u5680 4A16                                    u5648 4968  
                                  u6800 5274                                    u9120 8638  
                                  u7280 90D4                                    u7440 965C  
                                  u5745 4ACE                                    u6810 52B0  
                                  u6570 8074                                    u6490 7EB0  
                                  u7370 91EA                                    u7290 90E8  
                                  u7450 968E                                    u5675 49E6  
                                  u6900 3F74                                    u5780 4C08  
                                  u9204 5398                                    u9205 5392  
                                  u7285 90CA                                    u7381 8F30  
                                  u6750 51DE                                    u7390 8F6A  
                                  u7470 9746                                    u5950 BE64  
                                  u5880 4CF2                                    u9224 55D6  
                                  u8600 7A4A                                    u5960 BE66  
                                  u9225 55D0                                    u7490 B6CC  
                                  u6915 4108                                    u9500 B3C0  
                                  u9244 56A4                                    u9164 5346  
                                  u8620 7BA2                                    u6925 41D0  
                                  u5885 4CE2                                    u9245 569E  
                                  u9165 5340                                    u6790 523A  
                                  u9270 56CE                                    u8630 7BA4  
                                  u8710 8254                                    u6935 4398  
                                  u9264 56C6                                    u9184 5376  
                                  u8720 8282                                    u9265 56C0  
                                  u9185 5370                                    u6970 4462  
                                  u8730 C2E6                                    u6795 522A  
                                  u8715 824E                                    u9620 88C0  
                                  u9525 B3F4                                    u9445 BA9A  
                                  u8717 8240                                    u9526 B3F6  
                                  u9518 B3C2                                    u8670 81BA  
                                  u8727 8274                                    _PLLR 01CEE0  
                                  u8677 81AC                                    u9575 C504  
                                  u9760 C30E                                    u9576 C506  
                                  u9585 C4F4                                    u9586 C4F6  
                                  u9766 C310                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BF58  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBCD                                    _cp_l FBC9  
                                  _atoi 799E                                    _ctoa AF02  
                                  _main 1244                                    _dtoa 583E  
                                  _nanf B4DE                                    _seed 01F3  
                                  _prec 003C                                    _nout 009A  
                                  _spin FB45                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7460                                    btemp 0001  
                                  _utoa 6830                                    _xtoa 610A  
                __end_of_check_adc_scan C5BA                           ___fpclassifyf 8C06  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C3A4               __size_of_clear_hid_pflags 0046  
                       _TMR3_Initialize B90C             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C190  
                          ___param_bank 000000                  __end_of_check_day_time 8C06  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR C562  
                      __end_of_INT1_ISR BC2A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma AB56           __end_of_OSCILLATOR_Initialize C4C4  
                                 l10020 8B30                                   l10032 8BA2  
                                 l10050 BD2C                                   l11012 BBCE  
                                 l10108 BF10                                   l10142 B72C  
                                 l11112 8EFC                                   l11120 A082  
                                 l12110 AD56                                   l11230 A7EA  
                                 l11150 71B4                                   l11126 A134  
                                 l12200 AF20                                   l13000 AA6E  
                                 l11152 71BA                                   l11216 7422  
                                 l12114 AD94                                   l12202 AF4C  
                                 l12130 6F34                                   l11234 A828  
                                 l11162 71F6                                   l11218 744C  
                                 l10532 B758                                   l10604 890E  
                                 l11148 71A4                                   l12150 710A  
                                 l12142 705C                                   l13022 AB5A  
                                 l11174 7248                                   l11158 71EA  
                                 l10536 B78A                                   l13120 34D2  
                                 l10608 8922                                   l12320 022C  
                                 l12136 6FF2                                   l13024 AB62  
                                 l11168 7220                                   l10712 B144  
                                 l11434 B0D6                                   l12162 9D4C  
                                 l12234 5956                                   l12226 590C  
                                 l12410 06B8                                   l12306 0146  
                                 l13026 AB6C                                   l13034 AB82  
                                 l11194 72C8                                   l11186 72A2  
                                 l11178 7254                                   l11428 B0C6  
                                 l13140 3700                                   l13124 353E  
                                 l13116 347E                                   l12172 9DC2  
                                 l12420 077A                                   l12316 01EA  
                                 l12324 0258                                   l13028 AB7A  
                                 l13036 ABAE                                   l10724 B15C  
                                 l10732 9B52                                   l13150 3952  
                                 l11278 60FC                                   l10646 BC96  
                                 l12166 9D74                                   l12238 5974  
                                 l12182 A43A                                   l12430 0926  
                                 l12414 06F0                                   l12350 0396  
                                 l12334 02FC                                   l12342 032A  
                                 l12318 0216                                   l13160 3AC0  
                                 l13136 36AC                                   l13128 35AA  
                                 l12176 9E0C                                   l12168 9D86  
                                 l12272 5C74                                   l12248 5B86  
                                 l12504 0EA2                                   l12360 04D2  
                                 l10736 9BB4                                   l13146 38D8  
                                 l10762 9780                                   l12098 99FC  
                                 l12530 0FD6                                   l12354 0406  
                                 l13058 9E58                                   l13164 3AE2  
                                 l13156 3A18                                   l10764 9790  
                                 l10596 88E2                                   l12268 5C38  
                                 l12532 0FF0                                   l12516 0F3A  
                                 l12452 0B12                                   l12444 0A48  
                                 l12372 0554                                   l12356 0470  
                                 l12612 75EC                                   l12604 7580  
                                 l12700 6214                                   l13324 833A  
                                 PRLOCK 0039EF                                   l10790 9884  
                                 l10782 980A                                   l10766 979E  
                                 l10774 97A6                                   l12542 1092  
                                 l12454 0B34                                   l12286 00AC  
                                 l12622 76A2                                   l13270 8796  
                                 l13502 17B0                                   l13176 3DAE  
                                 l10776 97D2                                   l12552 10E2  
                                 l12480 0CBA                                   l12392 05F6  
                                 l12384 0594                                   l12376 057C  
                                 l12608 75BC                                   l12640 6864  
                                 l12800 264C                                   l10688 BC4A  
                                 l13280 886E                                   l13512 1906  
                                 l12394 0602                                   l12378 058E  
                                 l12298 00F0                                   l12626 76DE  
                                 l12618 7676                                   l12802 2686  
                                 l13338 8462                                   l13098 A52C  
                                 l13258 86E2                                   l13610 22D2  
                                 l13514 1934                                   l10956 C340  
                                 l12468 0C32                                   l12740 647A  
                                 l12716 630A                                   l12724 6390  
                                 l12820 2800                                   l12804 269C  
                                 l10892 A73C                                   l13620 2310  
                                 l13444 146E                                   l12830 2898  
                                 l13534 198E                                   l13526 1968  
                                 l10968 BF7A                                   l12568 119A  
                                 l12488 0D24                                   l12496 0D90  
                                 l12648 68C0                                   l12680 613E  
                                 l10896 A7B8                                   l13544 19B2  
                                 l13392 12AA                                   l10994 BB8E  
                                 l13298 B26A                                   l12658 6AB6  
                                 l12930 3180                                   l12906 2F4E  
                                 l12842 29D8                                   l13634 2358  
                                 l13626 2322                                   l13490 16D6  
                                 l13394 12BC                                   l13386 1284  
                                 l12588 74CC                                   l12692 61B4  
                                 l12916 3004                                   l12780 2504  
                                 l13628 233A                                   l13572 206A  
                                 l13556 1AB2                                   l13388 128C  
                                 l12686 6178                                   l12950 3312  
                                 l12862 2BEA                                   l12854 2B32  
                                 l12838 2984                                   l12782 251A  
                                 l13638 237E                                   l13582 21FE  
                                 l12944 32B8                                   l12960 3336  
                                 l13648 23D4                                   l13568 200A  
                                 l13584 222A                                   l12954 3316  
                                 l12866 2C1E                                   l12778 24CA  
                                 l12886 2D7E                                   l13598 2280  
                                 l12896 2E2C                                   l12978 AC56  
                                 l12998 AA2C                         __end_of___aodiv 799E  
                          _Volts_to_SOC A72A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4DB0  
                                 _ADCLK 003EFF                         __end_of___aomod 8098  
                                 _ADPCH 003EF1                         __end_of___fldiv 532A  
                                 _ADREF 003EFD                         __end_of___awdiv 9628  
                       __end_of___flneg B87C                                   STR_10 FD56  
                                 STR_11 FE32                                   STR_12 FEDF  
                                 STR_21 FF83                                   STR_13 FEF4  
                                 STR_14 FF48                                   STR_30 FE5E  
                                 STR_22 FE1C                                   STR_15 FF33  
                                 STR_23 FE06                                   STR_31 FD6C  
                                 STR_40 FE8A                                   STR_24 FDF0  
                                 STR_32 FD82                                   STR_16 FD40  
                                 STR_41 FE8A                                   STR_25 FDDA  
                                 STR_33 FD98                                   STR_17 FC67  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FE8A                                   STR_26 FDC4  
                                 STR_34 FCE4                                   STR_18 FC81  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FDAE  
                                 STR_35 FD29                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FE74  
                                 STR_36 FC4A                         __end_of___awmod 9D20  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FE48                                   STR_37 FCCD  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FCFB                                   STR_54 FCB5  
                                 STR_63 FC49                                   STR_47 FF5D  
                                 STR_39 FD12                                   STR_48 FF5D  
                                 STR_56 FF70                                   STR_64 FBD1  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 45F4  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub BA26                         __end_of___fltol 9214  
                                 u11000 A4B4                                   u11100 58F2  
                                 u11007 A4A6                                   u11120 5942  
                                 u12000 62C2                                   u11130 5B9A  
                                 u11050 586E                                   u11060 5870  
                                 u11300 02A6                                   u12020 638C  
                                 u11141 5BCA                                   u11150 5BE0  
                                 u11310 02A8                                   u11230 00DA  
                                 u12030 63AC                                   u11151 5BDE  
                                 u11160 5BF4                                   u11080 58E0  
                                 u12120 2562                                   u12041 63DC  
                                 u12025 636E                                   u11170 5BF8  
                                 u11410 05C6                                   u12050 63F2  
                                 u12130 2564                         __end_of___lodiv 90A2  
                                 u12051 63F0                                   u11260 0194  
                                 u12060 6406                                   u12300 2CDA  
                                 u12140 258A                                   u11190 5C0E  
                                 u11350 050E                                   u11270 0196  
                                 u12070 640A                                   u11520 0A18  
                                 u12240 28EC                                   u12400 AC36  
                                 u11450 0648                                   u12170 26E4  
                                 _U1P1H 003DED                                   u11700 116E  
                                 u11620 0EE4                                   u11380 0562  
                                 u12260 2A60                                   u12180 26E6  
                                 _U1P2H 003DEF                                   u11710 1170  
                                 u12190 270C                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u12360 3058                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12290 2CD8  
                                 u12450 A508                                   _U1P3L 003DF0  
                                 u11820 7704                                   u11900 6B26  
                                 u12380 3208                                   u10870 99F0  
                                 u10950 717E                                   _U2P1L 003DD4  
                                 u11680 10B8                                   u11840 684A  
                                 u11920 6124                                   u12480 A56E  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10890 9A6C                                   _U2P3L 003DD8  
                                 u11780 75E2                                   u12468 A50A  
                                 u12820 1588                                   u11790 7628  
                                 u11950 620C                                   u11871 6AF8  
                                 _T5CLK 003F9D                                   u11880 6B0E  
                                 u11960 6260                                   u12760 84B2  
                                 u12840 17DE                         __end_of___lomod 9768  
                                 u11881 6B0C                                   u11890 6B22  
                                 u11970 6262                                   u12770 84B4  
                                 u12498 A570                                   u12940 2270  
                                 _T2HLT 003FAD                                   u11797 761A  
                                 u11990 62C0                                   u12950 2288  
                                 u12960 229A                                   _T5CON 003F9A  
                                 u12946 2272                                   u12956 228A  
                                 u12966 229C                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0085                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result BC64  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C5EC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 94DA  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A312                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C452                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A952  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C554                                   _fputc 99CC  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha BA6A  
                                 _fputs AD46                         __end_of_isdigit BED0  
                       __end_of_ivln2_h FBC9                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand BD40                                   _width 003A  
                                 _putch C41C            __end_of_set_ac_charger_relay C52A  
                       __end_of_islower BE70                         __end_of_isspace B700  
              _INT1_SetInterruptHandler C0EE                         __end_of_set_dac A952  
                       __end_of_isupper BEA0                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler C076  
           _UART1_SetRxInterruptHandler C04E                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A04E                         __end_of_tolower B092  
                       __end_of_strncmp 82B8                         __end_of_toupper B00E  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr C1B8  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize B8C4  
                 __end_of_ringBufS_init BFD6                         __initialization A312  
                     _UART2_rx_vect_isr C1E0                            __end_of_cp_h FBD1  
                          __end_of_cp_l FBCD                            __end_of_atoi 7C12  
                          __end_of_ctoa AF8A                            __end_of_main 23E8  
                          __end_of_dtoa 5CBE                            __end_of_nanf B540  
                          __end_of_spin FBBD                            __end_of_stoa 771E  
                          __end_of_utoa 6B70                            __end_of_xtoa 64C4  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize C482                   __end_of_send_lcd_data C22C  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B274  
              _TMR5_SetInterruptHandler C09E                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 007C  
                     _port_data_dma_ptr C57C                      esr_check@esr_state 00A4  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize BF84                         _PWM8_Initialize C498  
                      _UART1_Initialize B87C                       _UART2_tx_vect_isr C1B8  
                    _UART2_Transmit_ISR BF58                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan B418                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue BA6A                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 A2C2  
                                _RB6PPS 003A0E                                  i1l1207 9442  
                  _start_switch_handler C346                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize B954  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright C538                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u930_25 C524  
                                u930_26 C526                                  u935_20 8ABC  
                                u956_20 BCA4                    __size_of_hid_display 01DC  
                                u956_26 BCA6                                  u949_20 C550  
                                u982_24 987A                                  u982_25 9876  
                                u978_20 979A                                  u977_28 9786  
                                u978_21 9794                        __end_of___xxtofl 86CE  
 __end_of_ADCC_DischargeSampleCapacitor C5B2  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor C5AA                __end_of_send_lcd_cmd_dma C3C2  
                       _TMR3_WriteTimer BBAC                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C208              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize C572                        _UART2_Initialize B540  
                                _WaitMs BD0A                         _conv_raw_result 532A  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 9214                                  ___fleq A666  
                     _ADCC_ThresholdISR B348                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush ADDE                                  _efgtoa 0000  
                                _floorf 64C4                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6E9C  
                  __size_of_help_button 0038                                  clear_0 A384  
                                clear_1 A398                                  clear_2 A3AA  
                                clear_3 A3B6                                  clear_4 A3C2  
                                clear_5 A3CE                                  clear_6 A3DA  
             __end_of_port_data_dma_ptr C586                                  _printf B47C  
                    _eaDogM_WriteString ABFE                                  _strcpy A3F2  
                             ?_ADCC_ISR 0021                                  _strlen ACA4  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B2DE                          _PMD_Initialize C4C4  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C1E0  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B47C  
                          __mediumconst F9E4                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay B654                        __end_of_spinners A144  
                      __end_of_vfprintf AAAC                              _StartTimer BB2C  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize B90C                       _SYSTEM_Initialize B7EA  
                            __accesstop 0060                 __end_of__initialization A3EC  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help C5CA                    __end_of_display_info C5C2  
             __end_of_CLKREF_Initialize C57C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer BB6C  
                 _set_temp_display_help C50A                        _clear_hid_pflags B954  
                 __end_of_TMR3_CallBack C298               __end_of_ADCC_ThresholdISR B3B2  
                    __size_of_calc_bsoc 0A36                  __end_of_ringBufS_flush AE70  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 BCD4  
                          __pidataBANK1 A598             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AA00                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 9AF0  
                         __end_of_fputs ADDE                    _get_ac_charger_relay C546  
                         __end_of_srand BD74                   __end_of_TMR5_CallBack C274  
                         __end_of_putch C436                    _set_ac_charger_relay C51A  
               __end_of_PWM8_Initialize C4AE                 __end_of_TMR6_Initialize BFAE  
                     _adc_int_t_handler B092                  __end_of_PMD_Initialize C4D8  
                            __end_of_bp FBC5                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C2E0             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR C594                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan C5D2                      __size_of_hid_input 00D2  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize B834                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer BBEC  
                            __pbssBANK0 0060                              __pbssBANK1 01CD  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 82B8  
               __end_of_conv_raw_result 583E                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone BFFE  
                      _DMA1_DMADCNT_ISR C588                         _convert_dac_raw 9AF0  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma BE10                   __end_of_wait_lcd_done C302  
      __end_of_TMR3_SetInterruptHandler C0EE                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler C09E                              ??_TMR3_ISR 00E5  
               __end_of_ADCC_Initialize B348                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler B110                              ??_TMR6_ISR 0026  
                     __end_of___asfladd B202                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler C166  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler C13E  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR C324  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan C5D8                                 u1015_48 C2CC  
                               u1007_48 C2A8                                 u1009_28 C23C  
                               u1018_28 C260                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR C564                                 _U1ERRIE 003DFA  
                               u1049_44 B0F6                                 u1049_45 B0F0  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1260_20 3AD2                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1258_20 3A08  
                               u1265_28 C284                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B110                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3DCA  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BEFE  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer BBAC  
               __size_of_switch_handler 0136                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C50A              __end_of_set_load_relay_two C4FA  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8D9C                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C452                                 __Lparam 0000  
              __end_of_UART1_Initialize B8C4                       __end_of_hid_input A598  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 771E  
                               ___fladd 45F4                                 ___aomod 7E58  
                               ___fldiv 4DB0                                 ___awdiv 94DA  
                               ___flneg B834                                 ___awmod 9C08  
                               ___flmul 3DCA                                 ___flsub B9E0  
                               ___fltol 90A2                                 ___lodiv 8F22  
                               ___lomod 9628               __end_of_UART1_Receive_ISR C346  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A22E                                 __pcinit A312  
              __end_of_mode_lamp_bright C546                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C52A  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B5A0                                 __ptext2 C346  
                               __ptext3 BD40                                 __ptext4 A04E  
                               __ptext5 BD74                                 __ptext6 BDA8  
                               __ptext7 9AF0                                 __ptext8 A89C  
                               __ptext9 B110                       __end_of_esr_check 7460  
                     _UART2_Receive_ISR C366                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C4AE  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E58                                 _isalpha BA26  
                               us647999 7988                                 us743999 908C  
                               _isdigit BEA0                                 _ivln2_h FBC5  
                               us658999 8086                                 us748999 9758  
                             _T3CONbits 003FA6                                 _mode_sw 00A9  
                     __end_of_lp_filter 8A66                                 _islower BE40  
                               _isspace B6AE                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac A89C  
              __end_of_UART2_Initialize B5A0                                 _isupper BE70  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9F44  
                               _tolower B00E                   __size_of_display_help 0008  
                               _utctime 01EB                 __end_of_convert_dac_raw 9C08  
                 __size_of_display_info 0008                                 _strncmp 8098  
                               _toupper AF8A                    end_of_initialization A3EC  
             __size_of_convert_adc_data 00B8                      _check_enter_button B202  
                     __end_of_set_dac_a BDDC                       __end_of_set_dac_b BDA8  
                             i1u1278_20 9438     __end_of_UART2_SetRxInterruptHandler C04E  
           _UART2_SetRxInterruptHandler C026                               i2u1060_48 C1F4  
                             i2u1052_48 BF44                               i2u1054_48 B37E  
                             i2u1054_49 B392                               i2u1056_48 C1A4  
                             i2u1058_48 C1CC                 check_day_time@day_delay 0041  
                     __end_of_set_vterm C3E0                       __end_of_vfpfcnvrt 3394  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C5E4  
             __end_of_UART2_Receive_ISR C386                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B18A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0094  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc C5EA  
              _TMR3_SetInterruptHandler C0C6                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C076                            _display_help C5C2  
                 _TMR5_InterruptHandler 007F                            _display_info C5BA  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B99A  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler C18E  
           _ADCC_SetADIInterruptHandler C166                              _update_lcd 9E34  
                       _calc_model_data 5CBE                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B5A0  
                       _DMA1_Initialize B274                              _start_bsoc C302  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize C482  
                 __end_of_get_vterm_ptr BEFE                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs BD40  
          __end_of_INTERRUPT_Initialize B418                              _vterm_dump 989E  
                        __end_of___flge 9376                          __end_of___fleq A72A  
  __end_of_INT0_DefaultInterruptHandler C5F8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler C5F6              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize B654                           __pidataBIGRAM 6B70  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 6830  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 01E7  
                        __end_of_memset 7188                          __end_of_printf B4DE  
              __end_of_DMA1_DMADCNT_ISR C592             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack C2BC                          __end_of_strcpy A4C6  
                        __end_of_strlen AD46                     start_initialization A312  
  __end_of_TMR5_DefaultInterruptHandler BCD4   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler BC9C         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs B9E0                   __end_of_INT1_CallBack C250  
             __size_of_set_display_info 001E                             __end_of_pad 9E34  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd BB2C  
                        _switch_handler 9768           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01D9  
                 __end_of___fpclassifyf 8D9C                           _uart2RxBuffer 0400  
              __end_of_DMA1_DMASCNT_ISR C572                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR C5A0                     __end_of_hid_display 88AA  
            __end_of_send_port_data_dma B752                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone BFD6                           _ringBufS_init BFAE  
                           __pdataBANK0 00AF                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize BE10                 __end_of_calc_model_data 610A  
                         _send_lcd_data C208                     __end_of_help_button BC9C  
       __end_of_eaDogM_WriteStringAtPos ABFE                     __end_of_BVSOC_TABLE FAB5  
                             ___asfladd B18A                    calc_model_data@bcror 0070  
                           __pbssBIGRAM 082A                 __end_of_DMA1_Initialize B2DE  
                  calc_model_data@bvror 0074                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler C13E                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 989E                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize C498                _UART1_RxInterruptHandler 008B  
              _UART2_TxInterruptHandler 008E                               __end_of_T FB45  
                      _convert_adc_data A7E4                               _calc_bsoc 3394  
             __size_of_ringBufS_put_dma 00AA                            _init_display A144  
                __end_of_DMA1_DMAOR_ISR C5AA                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0082                      calc_ror_data@bcror 0068  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize B6AE  
                    calc_ror_data@bvror 006C                  _PIN_MANAGER_Initialize AE70  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set C5DE  
                         __pmediumconst F9E4                               __ptext100 A952  
                             __ptext101 532A                               __ptext110 88AA  
                             __ptext102 B4DE                               __ptext111 B9E0  
                             __ptext103 C3FE                               __ptext120 BF84  
                             __ptext112 45F4                               __ptext104 84CA  
                             __ptext121 C076                               __ptext113 3DCA  
                             __ptext105 4DB0                               __ptext130 AE70  
                             __ptext122 B8C4                               __ptext114 B7EA  
                             __ptext106 9214                               __ptext131 C4AE  
                             __ptext123 C09E                               __ptext115 B540  
                             __ptext107 5CBE                               __ptext140 B2DE  
                             __ptext132 B3B2                               __ptext124 B90C  
                             __ptext116 BFFE                               __ptext108 C5E4  
                             __ptext141 C13E                               __ptext133 C5CA  
                             __ptext125 C0C6                               __ptext117 C026  
                             __ptext109 C302                               __ptext150 BC9C  
                             __ptext142 C166                               __ptext134 BDDC  
                             __ptext126 C46A                               __ptext118 B87C  
                             __ptext151 8A66                               __ptext143 BBEC  
                             __ptext135 C0EE                               __ptext127 C482  
                             __ptext119 C04E                               __ptext160 C57C  
                             __ptext152 C51A                               __ptext144 C22C  
                             __ptext136 C116                               __ptext128 C498  
                             __ptext161 B18A                               __ptext153 C546  
                             __ptext145 C5F2                               __ptext137 B654  
                             __ptext129 C4C4                               __ptext170 B348  
                             __ptext162 C554                               __ptext154 9378  
                             __ptext146 9768                               __ptext138 B274  
                             __ptext171 C190                               __ptext163 C298  
                             __ptext155 BBAC                               __ptext147 A230  
                             __ptext139 C572                               __ptext180 C564  
                             __ptext172 C324                               __ptext164 C5F6  
                             __ptext156 C274                               __ptext148 BB6C  
                             __ptext181 C588                               __ptext173 C1B8  
                             __ptext165 C5EC                               __ptext157 C5F4  
                             __ptext149 C250                               __ptext182 C594  
                             __ptext174 BF58                               __ptext166 BF2C  
                             __ptext158 3394                               __ptext183 C5A0  
                             __ptext175 C1E0                               __ptext167 B092  
                             __ptext159 B700                               __ptext184 0000  
                             __ptext176 C366                               __ptext168 C5F8  
                             __ptext177 C438                               __ptext169 C5FA  
                             __ptext178 C2BC                               __ptext179 B752  
                             _hid_input A4C6                      __end_of_StartTimer BB6C  
                    _set_load_relay_one C4FA                      _set_load_relay_two C4EA  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BF2C  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 0060  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7188                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7C12  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 88AA                             _hid_display 86CE  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize B3B2                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C554                                _INT1_ISR BBEC  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a BDA8  
                             _set_dac_b BD74                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack C274                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm C3C2                     __size_of_update_lcd 0110  
                           _help_button BC64                                _TMR3_ISR 9378  
                           _BVSOC_TABLE F9E5                                _TMR5_ISR A230  
                              _TMR6_ISR C438                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 23E8  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack C250                              _ADCON0bits 003EF8  
                    __end_of_check_help 84CA                               _start_lcd C5DE  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack C2BC                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc C5E4  
                      _set_display_info C3E0                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 A326                               copy_data1 A34C  
                             copy_data2 A36E                _INT0_SetInterruptHandler C116  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler C026  
           _UART2_SetTxInterruptHandler BFFE                            _uart1RxCount 00AD  
                          _uart2RxCount 00AA                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0514                           _wait_lcd_done C2E0  
                          _send_lcd_cmd BAEC                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler C5FA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch BF2A                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR C59E                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 84CA                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand C538                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 BE10                                __ptext11 A144  
                              __ptext20 A4C6                                __ptext12 C208  
                              __ptext21 BEFE                                __ptext13 BAAC  
                              __ptext30 C4FA                                __ptext22 7188  
                              __ptext14 BAEC                                __ptext31 C52A  
                              __ptext23 BC2A                                __ptext15 C386  
                              __ptext40 AB56                                __ptext32 A7E4  
                              __ptext24 B418                                __ptext16 BFAE  
                              __ptext41 C3A4                                __ptext33 B954  
                              __ptext25 C4D8                                __ptext17 7C12  
                              __ptext50 B47C                                __ptext42 C2E0  
                              __ptext34 82B8                                __ptext26 C5AA  
                              __ptext18 A72A                                __ptext51 AA00  
                              __ptext43 B5FA                                __ptext35 989E  
                              __ptext27 C5D2                                __ptext19 86CE  
                              __ptext60 8098                                __ptext52 23E8  
                              __ptext44 B7A0                                __ptext36 9F44  
                              __ptext28 C5B2                                __ptext61 7460  
                              __ptext53 610A                                __ptext45 ABFE  
                              __ptext37 BED0                                __ptext29 C4EA  
                              __ptext70 A666                                __ptext62 0000  
                              __ptext54 AF8A                                __ptext46 C5D8  
                              __ptext38 BD0A                                __ptext71 9C08  
                              __ptext63 B00E                                __ptext55 BE40  
                              __ptext47 C5DE                                __ptext39 9E34  
                              __ptext80 AD46                                __ptext72 94DA  
                              __ptext64 BE70                                __ptext56 BA26  
                              __ptext48 ADDE                                __ptext81 99CC  
                              __ptext73 583E                                __ptext65 A3F2  
                              __ptext57 6830                                __ptext49 6E9C  
                              __ptext90 C452                                __ptext82 C41C  
                              __ptext74 B99A                                __ptext66 64C4  
                              __ptext58 9628                                __ptext91 C538  
                              __ptext83 AAAC                                __ptext75 7E58  
                              __ptext67 8C06                                __ptext59 8F22  
                              __ptext92 BA6A                                __ptext84 799E  
                              __ptext76 771E                                __ptext68 90A2  
                              __ptext93 BC64                                __ptext85 B6AE  
                              __ptext77 AF02                                __ptext69 B834  
                              __ptext94 BFD6                                __ptext86 BEA0  
                              __ptext78 9D20                                __ptext95 BB2C  
                              __ptext87 C3C2                                __ptext79 ACA4  
                              __ptext96 C5BA                                __ptext88 C50A  
                              __ptext97 C5C2                                __ptext89 C3E0  
                              __ptext98 B202                                __ptext99 8D9C  
                      __size_of_isupper 0030                                us1104999 5858  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1173999 7472                                us1185999 6896  
                              us1194999 618A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AAAC  
                  __end_of_Volts_to_SOC A7E4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11A4  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma BE40  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C4EA  
                              _spi_link 01CD                                _wdtdelay B5FA  
            __end_of_UART2_Transmit_ISR BF84                                _spinners A04E  
                              _vfprintf AA00                __end_of_convert_adc_data A89C  
            __end_of_PWM8_LoadDutyValue BAAC    __end_of_TMR3_DefaultInterruptHandler C5F6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler C5F4  
  __end_of_INT1_DefaultInterruptHandler C5F4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler C5F2                      _send_port_data_dma B700  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C3FE  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E1                             _uart2TxTail 0046  
                          _wait_lcd_set C5D8                      _EXT_INT_Initialize BDDC  
  __end_of_TMR6_DefaultInterruptHandler B7A0   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B752                       _send_lcd_data_dma B7A0  
  __end_of_ADCC_DefaultInterruptHandler C5FA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler C5F8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long BAAC  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help C51A  
                 __end_of_calc_ror_data 8F22                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString ACA4                   __end_of_mode_lamp_dim C46A  
               __end_of_adc_int_handler C5FC                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9F44                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc B5FA                      __end_of_start_bsoc C324  
                        _FVR_Initialize C5CA                  __end_of_get_raw_result C41C  
                      _send_lcd_cmd_dma C3A4                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00A0        __end_of_INT1_SetInterruptHandler C116  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 007A  
             __end_of_send_lcd_data_dma B7EA                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long BAEC                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR C5F2          __end_of_PIN_MANAGER_Initialize AF02  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 99CC  
               _eaDogM_WriteStringAtPos AB56                           _get_vterm_ptr BED0  
                        _check_adc_scan C5B2               __size_of_UART2_Initialize 0060  
