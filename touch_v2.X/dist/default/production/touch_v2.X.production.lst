

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec  2 01:06:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   176                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   177                           	psect	text150,global,reloc=4,class=CODE,delta=1
   178                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   179                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   180  0000                     
   181                           ; Version 2.10
   182                           ; Generated 31/07/2019 GMT
   183                           ; 
   184                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution.
   198                           ; 
   199                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   200                           ;        software without specific prior written permission.
   201                           ; 
   202                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   203                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   204                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   205                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   206                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   207                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   208                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   209                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   210                           ; 
   211                           ; 
   212                           ; Code-generator required, PIC18F57K42 Definitions
   213                           ; 
   214                           ; SFR Addresses
   215  0000                     
   216 ;;_k	offset	0
   217 ;;_j	offset	1
   218 ;;_i	offset	2
   219 ;;_inp_index	offset	3
   220 ;;_mode	offset	4
   221 ;;_channel	offset=-1 (param)
   222 ;;_s	offset=-2 (param)
   223 ;;_cmd	offset=-1 (param)
   224 ;;_cmd	offset=-1 (param)
   225 ;;_data	offset=-1 (param)
   226 ;;__this	offset=-2 (param)
   227 ;;_h	offset=-1 (param)
   228 ;;_h	offset=-1 (param)
   229 ;;_i	offset=-1 (param)
   230 ;;_cmd	offset=-1 (param)
   231 ;;_i	offset	0
   232 ;;_chan	offset=-1 (param)
   233 ;;_to_what	offset=-2 (param)
   234 ;;_u	offset	0
   235 ;;_s	offset=-2 (param)
   236 ;;_index	offset=-1 (param)
   237 ;;_arg	offset	0
   238 ;;_exp	offset	4
   239 ;;_sign	offset=-1 (param)
   240 ;;_val	offset=-5 (param)
   241 ;;_h	offset=-1 (param)
   242 ;;_estatus	offset	0
   243 ;;_flipper	offset=-1 (param)
   244 ;;_f	offset	0
   245 ;;_ap	offset	6
   246 ;;_s	offset=-3 (param)
   247 ;;_fmt	offset=-5 (param)
   248 ;;_line	offset=-1 (param)
   249 ;;_vterm	offset=-2 (param)
   250 ;;_numMilliseconds	offset=-2 (param)
   251 ;;_vterm	offset=-1 (param)
   252 ;;_r	offset=-1 (param)
   253 ;;_c	offset=-2 (param)
   254 ;;_strPtr	offset=-4 (param)
   255 ;;_strPtr	offset=-1 (param)
   256 ;;_delay	offset=-4 (param)
   257 ;;_strPtr	offset=-2 (param)
   258 ;;__this	offset=-2 (param)
   259 ;;_clearBuffer	offset=-3 (param)
   260 ;;_s	offset	0
   261 ;;_k	offset	2
   262 ;;_dest	offset=-2 (param)
   263 ;;_c	offset=-4 (param)
   264 ;;_n	offset=-6 (param)
   265 ;;_ap	offset	0
   266 ;;_fmt	offset=-3 (param)
   267 ;;_cfmt	offset	0
   268 ;;_fp	offset=-2 (param)
   269 ;;_fmt	offset=-4 (param)
   270 ;;_ap	offset=-6 (param)
   271 ;;_vfpfcnvrt$4649	offset	0
   272 ;;_vfpfcnvrt$4655	offset	2
   273 ;;_vfpfcnvrt$4648	offset	4
   274 ;;_llu	offset	6
   275 ;;_ll	offset	14
   276 ;;_f	offset	22
   277 ;;_ct	offset	26
   278 ;;_cp	offset	29
   279 ;;_c	offset	31
   280 ;;_fp	offset=-2 (param)
   281 ;;_fmt	offset=-4 (param)
   282 ;;_ap	offset=-6 (param)
   283 ;;_xtoa$4634	offset	0
   284 ;;_xtoa$4633	offset	2
   285 ;;_n	offset	4
   286 ;;_c	offset	12
   287 ;;_i	offset	14
   288 ;;_w	offset	16
   289 ;;_p	offset	18
   290 ;;_fp	offset=-2 (param)
   291 ;;_d	offset=-10 (param)
   292 ;;_x	offset=-11 (param)
   293 ;;_toupper$5294	offset	0
   294 ;;_c	offset=-2 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4613	offset	0
   311 ;;_efgtoa$4612	offset	2
   312 ;;_efgtoa$4611	offset	4
   313 ;;_efgtoa$4607	offset	6
   314 ;;_efgtoa$4603	offset	8
   315 ;;_efgtoa$4602	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$5279	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_f1	offset=-4 (param)
   355 ;;_ff1	offset=-4 (param)
   356 ;;_ff2	offset=-8 (param)
   357 ;;_ff1	offset=-4 (param)
   358 ;;_ff2	offset=-8 (param)
   359 ;;_grs	offset	0
   360 ;;_rem	offset	4
   361 ;;_new_exp	offset	8
   362 ;;_aexp	offset	10
   363 ;;_bexp	offset	11
   364 ;;_sign	offset	12
   365 ;;_b	offset=-4 (param)
   366 ;;_a	offset=-8 (param)
   367 ;;_sign	offset	0
   368 ;;_counter	offset	1
   369 ;;_dividend	offset=-2 (param)
   370 ;;_divisor	offset=-4 (param)
   371 ;;_quotient	offset	0
   372 ;;_sign	offset	2
   373 ;;_counter	offset	3
   374 ;;_dividend	offset=-2 (param)
   375 ;;_divisor	offset=-4 (param)
   376 ;;_dtoa$4579	offset	0
   377 ;;_n	offset	2
   378 ;;_i	offset	10
   379 ;;_s	offset	12
   380 ;;_w	offset	14
   381 ;;_p	offset	16
   382 ;;_fp	offset=-2 (param)
   383 ;;_d	offset=-10 (param)
   384 ;;_a	offset=-2 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-8 (param)
   388 ;;_divisor	offset=-16 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	8
   391 ;;_counter	offset	9
   392 ;;_dividend	offset=-8 (param)
   393 ;;_divisor	offset=-16 (param)
   394 ;;_w	offset	0
   395 ;;_fp	offset=-2 (param)
   396 ;;_c	offset=-3 (param)
   397 ;;_w	offset	0
   398 ;;_i	offset	2
   399 ;;_fp	offset=-2 (param)
   400 ;;_buf	offset=-4 (param)
   401 ;;_p	offset=-6 (param)
   402 ;;_a	offset	0
   403 ;;_s	offset=-2 (param)
   404 ;;_i	offset	0
   405 ;;_c	offset	2
   406 ;;_s	offset=-2 (param)
   407 ;;_fp	offset=-4 (param)
   408 ;;_c	offset=-2 (param)
   409 ;;_fp	offset=-4 (param)
   410 ;;_c	offset=-1 (param)
   411 ;;__this	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_atoi$5132	offset	0
   414 ;;_atoi$5130	offset	2
   415 ;;_atoi$5131	offset	4
   416 ;;_n	offset	5
   417 ;;_neg	offset	7
   418 ;;_s	offset=-2 (param)
   419 ;;_isspace$5170	offset	0
   420 ;;_c	offset=-2 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_vterm	offset=-1 (param)
   423 ;;_new_response_info	offset=-1 (param)
   424 ;;_new_response_info	offset=-1 (param)
   425 ;;_level	offset=-2 (param)
   426 ;;_dutyValue	offset=-2 (param)
   427 ;;_timer	offset=-1 (param)
   428 ;;_timer	offset=-1 (param)
   429 ;;_count	offset=-3 (param)
   430 ;;_lp_speed	offset	0
   431 ;;_new	offset=-4 (param)
   432 ;;_bn	offset=-5 (param)
   433 ;;_slow	offset=-6 (param)
   434 ;;_b	offset=-4 (param)
   435 ;;_a	offset=-8 (param)
   436 ;;_grs	offset	0
   437 ;;_bexp	offset	1
   438 ;;_aexp	offset	2
   439 ;;_signs	offset	3
   440 ;;_b	offset=-4 (param)
   441 ;;_a	offset=-8 (param)
   442 ;;_prod	offset	0
   443 ;;_grs	offset	4
   444 ;;_temp	offset	8
   445 ;;_bexp	offset	10
   446 ;;_aexp	offset	11
   447 ;;_sign	offset	12
   448 ;;_b	offset=-4 (param)
   449 ;;_a	offset=-8 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_state	offset	0
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_InterruptHandler	offset=-3 (param)
   459 ;;_InterruptHandler	offset=-3 (param)
   460 ;;_InterruptHandler	offset=-3 (param)
   461 ;;_i	offset	0
   462 ;;_sw_value	offset	1
   463 ;;_timerVal	offset=-2 (param)
   464 ;;_channel	offset=-1 (param)
   465 ;;_i	offset	0
   466                           
   467                           	psect	idataBANK0
   468  018712                     __pidataBANK0:
   469                           	opt callstack 0
   470                           
   471                           ;initializer for _R
   472  018712  0000               	dw	0
   473  018714  0000               	dw	0
   474  018716  0000               	dw	0
   475  018718  0000               	dw	0
   476  01871A  0000               	dw	0
   477  01871C  0000               	dw	0
   478  01871E  0000               	dw	0
   479  018720  0000               	dw	0
   480  018722  0000               	dw	0
   481  018724  0000               	dw	0
   482  018726  0000               	dw	0
   483  018728  0000               	dw	0
   484  01872A  0000               	dw	0
   485  01872C  0000               	dw	0
   486  01872E  0000               	dw	0
   487  018730  0000               	dw	0
   488  018732  0F67               	dw	3943
   489  018734  0F8F               	dw	3983
   490  018736  00                 	db	0
   491  018737  0000               	dw	0
   492  018739  00                 	db	0
   493                           
   494                           ;initializer for _H
   495  01873A  00                 	db	0
   496  01873B  00                 	db	0
   497  01873C  01                 	db	1
   498  01873D  00                 	db	0
   499  01873E  01                 	db	1
   500  01873F  00                 	db	0
   501  018740  00                 	db	0
   502                           
   503                           	psect	idataBANK1
   504  018D3E                     __pidataBANK1:
   505                           	opt callstack 0
   506                           
   507                           ;initializer for stoa@F1166
   508  018D3E  28                 	db	40
   509  018D3F  6E                 	db	110
   510  018D40  75                 	db	117
   511  018D41  6C                 	db	108
   512  018D42  6C                 	db	108
   513  018D43  29                 	db	41
   514  018D44  00                 	db	0
   515                           
   516                           ;initializer for _port_data
   517  018D45  FF                 	db	255
   518  018D46  00                 	db	0
   519  018D47  FF                 	db	255
   520  018D48  00                 	db	0
   521  018D49  FF                 	db	255
   522  018D4A  00                 	db	0
   523  018D4B  FF                 	db	255
   524  018D4C  00                 	db	0
   525  018D4D  FF                 	db	255
   526  018D4E  00                 	db	0
   527  018D4F  FF                 	db	255
   528  018D50  00                 	db	0
   529  018D51  FF                 	db	255
   530  018D52  00                 	db	0
   531  018D53  FF                 	db	255
   532  018D54  00                 	db	0
   533                           
   534                           	psect	idataBANK2
   535  0174E6                     __pidataBANK2:
   536                           	opt callstack 0
   537                           
   538                           ;initializer for _V
   539  0174E6  00                 	db	0
   540  0174E7  00                 	db	0
   541  0174E8  00                 	db	0
   542  0174E9  00                 	db	0
   543  0174EA  00                 	db	0
   544  0174EB  00                 	db	0
   545  0174EC  00                 	db	0
   546  0174ED  00                 	db	0
   547  0174EE  00                 	db	0
   548  0174EF  00                 	db	0
   549  0174F0  00                 	db	0
   550  0174F1  00                 	db	0
   551  0174F2  00                 	db	0
   552  0174F3  00                 	db	0
   553  0174F4  00                 	db	0
   554  0174F5  00                 	db	0
   555  0174F6  00                 	db	0
   556  0174F7  00                 	db	0
   557  0174F8  00                 	db	0
   558  0174F9  00                 	db	0
   559  0174FA  00                 	db	0
   560  0174FB  00                 	db	0
   561  0174FC  00                 	db	0
   562  0174FD  00                 	db	0
   563  0174FE  00                 	db	0
   564  0174FF  00                 	db	0
   565  017500  00                 	db	0
   566  017501  00                 	db	0
   567  017502  00                 	db	0
   568  017503  00                 	db	0
   569  017504  00                 	db	0
   570  017505  00                 	db	0
   571  017506  00                 	db	0
   572  017507  00                 	db	0
   573  017508  00                 	db	0
   574  017509  00                 	db	0
   575  01750A  00                 	db	0
   576  01750B  00                 	db	0
   577  01750C  00                 	db	0
   578  01750D  00                 	db	0
   579  01750E  00                 	db	0
   580  01750F  00                 	db	0
   581  017510  00                 	db	0
   582  017511  00                 	db	0
   583  017512  00                 	db	0
   584  017513  00                 	db	0
   585  017514  00                 	db	0
   586  017515  00                 	db	0
   587  017516  00                 	db	0
   588  017517  00                 	db	0
   589  017518  00                 	db	0
   590  017519  00                 	db	0
   591  01751A  00                 	db	0
   592  01751B  00                 	db	0
   593  01751C  00                 	db	0
   594  01751D  00                 	db	0
   595  01751E  00                 	db	0
   596  01751F  00                 	db	0
   597  017520  00                 	db	0
   598  017521  00                 	db	0
   599  017522  00                 	db	0
   600  017523  00                 	db	0
   601  017524  00                 	db	0
   602  017525  00                 	db	0
   603  017526  00                 	db	0
   604  017527  00                 	db	0
   605  017528  00                 	db	0
   606  017529  00                 	db	0
   607  01752A  00                 	db	0
   608  01752B  00                 	db	0
   609  01752C  00                 	db	0
   610  01752D  00                 	db	0
   611  01752E  00                 	db	0
   612  01752F  00                 	db	0
   613  017530  00                 	db	0
   614  017531  00                 	db	0
   615  017532  00                 	db	0
   616  017533  00                 	db	0
   617  017534  00                 	db	0
   618  017535  00                 	db	0
   619  017536  00                 	db	0
   620  017537  00                 	db	0
   621  017538  00                 	db	0
   622  017539  00                 	db	0
   623  01753A  00                 	db	0
   624  01753B  00                 	db	0
   625  01753C  00                 	db	0
   626  01753D  00                 	db	0
   627  01753E  00                 	db	0
   628  01753F  00                 	db	0
   629  017540  00                 	db	0
   630  017541  00                 	db	0
   631  017542  00                 	db	0
   632  017543  00                 	db	0
   633  017544  00                 	db	0
   634  017545  00                 	db	0
   635  017546  00                 	db	0
   636  017547  00                 	db	0
   637  017548  00                 	db	0
   638  017549  00                 	db	0
   639  01754A  00                 	db	0
   640  01754B  00                 	db	0
   641  01754C  00                 	db	0
   642  01754D  00                 	db	0
   643  01754E  00                 	db	0
   644  01754F  00                 	db	0
   645  017550  00                 	db	0
   646  017551  00                 	db	0
   647  017552  00                 	db	0
   648  017553  00                 	db	0
   649  017554  00                 	db	0
   650  017555  00                 	db	0
   651  017556  00                 	db	0
   652  017557  00                 	db	0
   653  017558  00                 	db	0
   654  017559  00                 	db	0
   655  01755A  00                 	db	0
   656  01755B  00                 	db	0
   657  01755C  00                 	db	0
   658  01755D  00                 	db	0
   659  01755E  00                 	db	0
   660  01755F  00                 	db	0
   661  017560  00                 	db	0
   662  017561  00                 	db	0
   663  017562  00                 	db	0
   664  017563  00                 	db	0
   665  017564  00                 	db	0
   666  017565  00                 	db	0
   667  017566  00                 	db	0
   668  017567  0000               	dw	0
   669  017569  0000               	dw	0
   670  01756B  0000               	dw	0
   671  01756D  0000               	dw	0
   672  01756F  00                 	db	0
   673  017570  00                 	db	0
   674  017571  00                 	db	0
   675  017572  00                 	db	0
   676  017573  00                 	db	0
   677  017574  00                 	db	0
   678  017575  0000               	dw	0
   679  017577  0000               	dw	0
   680  017579  0000               	dw	0
   681  01757B  0000               	dw	0
   682  01757D  0000               	dw	0
   683  01757F  0000               	dw	0
   684  017581  00                 	db	0
   685  017582  00                 	db	0
   686  017583  00                 	db	0
   687  017584  00                 	db	0
   688  017585  00                 	db	0
   689  017586  00                 	db	0
   690  017587  00                 	db	0
   691  017588  00                 	db	0
   692  017589  00                 	db	0
   693  01758A  00                 	db	0
   694  01758B  0000               	dw	0
   695  01758D  0000               	dw	0
   696  01758F  2D                 	db	45
   697  017590  00                 	db	0
   698  017591  00                 	db	0
   699  017592  0000               	dw	0
   700  017594  0000               	dw	0
   701  017596  0000               	dw	0
   702  017598  0000               	dw	0
   703  01759A  0000               	dw	0
   704  01759C  0000               	dw	0
   705  01759E  0000               	dw	0
   706  0175A0  0000               	dw	0
   707                           
   708                           	psect	mediumconst
   709  00FDC4                     __pmediumconst:
   710                           	opt callstack 0
   711  00FDC4  00                 	db	0
   712  00FDC5                     _T:
   713                           	opt callstack 0
   714  00FDC5  63                 	db	99
   715  00FDC6  6F                 	db	111
   716  00FDC7  6D                 	db	109
   717  00FDC8  6D                 	db	109
   718  00FDC9  61                 	db	97
   719  00FDCA  6E                 	db	110
   720  00FDCB  64                 	db	100
   721  00FDCC  73                 	db	115
   722  00FDCD  20                 	db	32
   723  00FDCE  31                 	db	49
   724  00FDCF  00                 	db	0
   725  00FDD0  00                 	db	0
   726  00FDD1  00                 	db	0
   727  00FDD2  00                 	db	0
   728  00FDD3  00                 	db	0
   729  00FDD4  00                 	db	0
   730  00FDD5  00                 	db	0
   731  00FDD6  00                 	db	0
   732  00FDD7  64                 	db	100
   733  00FDD8  69                 	db	105
   734  00FDD9  73                 	db	115
   735  00FDDA  70                 	db	112
   736  00FDDB  6C                 	db	108
   737  00FDDC  61                 	db	97
   738  00FDDD  79                 	db	121
   739  00FDDE  73                 	db	115
   740  00FDDF  20                 	db	32
   741  00FDE0  31                 	db	49
   742  00FDE1  00                 	db	0
   743  00FDE2  00                 	db	0
   744  00FDE3  00                 	db	0
   745  00FDE4  00                 	db	0
   746  00FDE5  00                 	db	0
   747  00FDE6  00                 	db	0
   748  00FDE7  00                 	db	0
   749  00FDE8  00                 	db	0
   750  00FDE9  63                 	db	99
   751  00FDEA  6F                 	db	111
   752  00FDEB  6D                 	db	109
   753  00FDEC  6D                 	db	109
   754  00FDED  61                 	db	97
   755  00FDEE  6E                 	db	110
   756  00FDEF  64                 	db	100
   757  00FDF0  73                 	db	115
   758  00FDF1  20                 	db	32
   759  00FDF2  32                 	db	50
   760  00FDF3  00                 	db	0
   761  00FDF4  00                 	db	0
   762  00FDF5  00                 	db	0
   763  00FDF6  00                 	db	0
   764  00FDF7  00                 	db	0
   765  00FDF8  00                 	db	0
   766  00FDF9  00                 	db	0
   767  00FDFA  00                 	db	0
   768  00FDFB  64                 	db	100
   769  00FDFC  69                 	db	105
   770  00FDFD  73                 	db	115
   771  00FDFE  70                 	db	112
   772  00FDFF  6C                 	db	108
   773  00FE00  61                 	db	97
   774  00FE01  79                 	db	121
   775  00FE02  73                 	db	115
   776  00FE03  20                 	db	32
   777  00FE04  32                 	db	50
   778  00FE05  00                 	db	0
   779  00FE06  00                 	db	0
   780  00FE07  00                 	db	0
   781  00FE08  00                 	db	0
   782  00FE09  00                 	db	0
   783  00FE0A  00                 	db	0
   784  00FE0B  00                 	db	0
   785  00FE0C  00                 	db	0
   786  00FE0D  63                 	db	99
   787  00FE0E  6F                 	db	111
   788  00FE0F  6D                 	db	109
   789  00FE10  6D                 	db	109
   790  00FE11  61                 	db	97
   791  00FE12  6E                 	db	110
   792  00FE13  64                 	db	100
   793  00FE14  73                 	db	115
   794  00FE15  20                 	db	32
   795  00FE16  33                 	db	51
   796  00FE17  00                 	db	0
   797  00FE18  00                 	db	0
   798  00FE19  00                 	db	0
   799  00FE1A  00                 	db	0
   800  00FE1B  00                 	db	0
   801  00FE1C  00                 	db	0
   802  00FE1D  00                 	db	0
   803  00FE1E  00                 	db	0
   804  00FE1F  64                 	db	100
   805  00FE20  69                 	db	105
   806  00FE21  73                 	db	115
   807  00FE22  70                 	db	112
   808  00FE23  6C                 	db	108
   809  00FE24  61                 	db	97
   810  00FE25  79                 	db	121
   811  00FE26  73                 	db	115
   812  00FE27  20                 	db	32
   813  00FE28  33                 	db	51
   814  00FE29  00                 	db	0
   815  00FE2A  00                 	db	0
   816  00FE2B  00                 	db	0
   817  00FE2C  00                 	db	0
   818  00FE2D  00                 	db	0
   819  00FE2E  00                 	db	0
   820  00FE2F  00                 	db	0
   821  00FE30  00                 	db	0
   822  00FE31  63                 	db	99
   823  00FE32  6F                 	db	111
   824  00FE33  6D                 	db	109
   825  00FE34  6D                 	db	109
   826  00FE35  61                 	db	97
   827  00FE36  6E                 	db	110
   828  00FE37  64                 	db	100
   829  00FE38  73                 	db	115
   830  00FE39  20                 	db	32
   831  00FE3A  34                 	db	52
   832  00FE3B  00                 	db	0
   833  00FE3C  00                 	db	0
   834  00FE3D  00                 	db	0
   835  00FE3E  00                 	db	0
   836  00FE3F  00                 	db	0
   837  00FE40  00                 	db	0
   838  00FE41  00                 	db	0
   839  00FE42  00                 	db	0
   840  00FE43  64                 	db	100
   841  00FE44  69                 	db	105
   842  00FE45  73                 	db	115
   843  00FE46  70                 	db	112
   844  00FE47  6C                 	db	108
   845  00FE48  61                 	db	97
   846  00FE49  79                 	db	121
   847  00FE4A  73                 	db	115
   848  00FE4B  20                 	db	32
   849  00FE4C  34                 	db	52
   850  00FE4D  00                 	db	0
   851  00FE4E  00                 	db	0
   852  00FE4F  00                 	db	0
   853  00FE50  00                 	db	0
   854  00FE51  00                 	db	0
   855  00FE52  00                 	db	0
   856  00FE53  00                 	db	0
   857  00FE54  00                 	db	0
   858  00FE55                     __end_of_T:
   859                           	opt callstack 0
   860  0000                     _IVTADL	set	14493
   861  0000                     _IVTADH	set	14494
   862  0000                     _IVTADU	set	14495
   863  0000                     _PIR4bits	set	14756
   864  0000                     _PIE8bits	set	14744
   865  0000                     _PIR8bits	set	14760
   866  0000                     _SCANPR	set	14839
   867  0000                     _DMA2PR	set	14836
   868  0000                     _DMA1PR	set	14835
   869  0000                     _MAINPR	set	14834
   870  0000                     _ISRPR	set	14833
   871  0000                     _PIE2bits	set	14738
   872  0000                     _PIR2bits	set	14754
   873  0000                     _PIE9bits	set	14745
   874  0000                     _PIR9bits	set	14761
   875  0000                     _PIE6bits	set	14742
   876  0000                     _PIE3bits	set	14739
   877  0000                     _PMD7	set	14791
   878  0000                     _PMD6	set	14790
   879  0000                     _PMD5	set	14789
   880  0000                     _PMD4	set	14788
   881  0000                     _PMD3	set	14787
   882  0000                     _PMD2	set	14786
   883  0000                     _PMD1	set	14785
   884  0000                     _PMD0	set	14784
   885  0000                     _OSCTUNE	set	14814
   886  0000                     _OSCFRQ	set	14815
   887  0000                     _OSCEN	set	14813
   888  0000                     _OSCCON3	set	14811
   889  0000                     _OSCCON1	set	14809
   890  0000                     _IPR8bits	set	14728
   891  0000                     _IPR9bits	set	14729
   892  0000                     _IPR5bits	set	14725
   893  0000                     _IPR1bits	set	14721
   894  0000                     _IPR3bits	set	14723
   895  0000                     _IPR6bits	set	14726
   896  0000                     _IPR2bits	set	14722
   897  0000                     _PIE5bits	set	14741
   898  0000                     _PIE1bits	set	14737
   899  0000                     _PIR5bits	set	14757
   900  0000                     _PIR1bits	set	14753
   901  0000                     _PLLR	set	118496
   902  0000                     _SPI1SDIPPS	set	15071
   903  0000                     _U1RXPPS	set	15077
   904  0000                     _RC6PPS	set	14870
   905  0000                     _RC5PPS	set	14869
   906  0000                     _INT1PPS	set	15041
   907  0000                     _RD1PPS	set	14873
   908  0000                     _INT0PPS	set	15040
   909  0000                     _RC3PPS	set	14867
   910  0000                     _RB6PPS	set	14862
   911  0000                     _SPI1SCKPPS	set	15070
   912  0000                     _U2RXPPS	set	15080
   913  0000                     _SLRCONF	set	14995
   914  0000                     _SLRCONE	set	14979
   915  0000                     _SLRCOND	set	14963
   916  0000                     _SLRCONC	set	14947
   917  0000                     _SLRCONB	set	14931
   918  0000                     _SLRCONA	set	14915
   919  0000                     _ODCOND	set	14962
   920  0000                     _ODCONC	set	14946
   921  0000                     _ODCONB	set	14930
   922  0000                     _ODCONA	set	14914
   923  0000                     _ODCONF	set	14994
   924  0000                     _ODCONE	set	14978
   925  0000                     _WPUC	set	14945
   926  0000                     _WPUA	set	14913
   927  0000                     _WPUB	set	14929
   928  0000                     _WPUE	set	14977
   929  0000                     _WPUF	set	14993
   930  0000                     _WPUD	set	14961
   931  0000                     _ANSELA	set	14912
   932  0000                     _ANSELF	set	14992
   933  0000                     _ANSELE	set	14976
   934  0000                     _ANSELB	set	14928
   935  0000                     _ANSELC	set	14944
   936  0000                     _ANSELD	set	14960
   937  0000                     _DMA2SSA	set	15321
   938  0000                     _DMA1SSA	set	15353
   939  0000                     _DMA2DSZ	set	15310
   940  0000                     _DMA2SSZ	set	15319
   941  0000                     _DMA2DSA	set	15312
   942  0000                     _DMA1DSZ	set	15342
   943  0000                     _DMA1SSZ	set	15351
   944  0000                     _DMA1DSA	set	15344
   945  0000                     _DMA1CON0bits	set	15356
   946  0000                     _DMA1CON1bits	set	15357
   947  0000                     _DMA2CON0	set	15324
   948  0000                     _DMA2AIRQ	set	15326
   949  0000                     _DMA2SIRQ	set	15327
   950  0000                     _DMA2CON1	set	15325
   951  0000                     _DMA1CON0	set	15356
   952  0000                     _DMA1AIRQ	set	15358
   953  0000                     _DMA1SIRQ	set	15359
   954  0000                     _DMA1CON1	set	15357
   955  0000                     _CLKRCON	set	15589
   956  0000                     _CLKRCLK	set	15590
   957  0000                     _SPI1INTFbits	set	15642
   958  0000                     _SPI1RXB	set	15632
   959  0000                     _SPI1TXB	set	15633
   960  0000                     _SPI1TCNTL	set	15634
   961  0000                     _SPI1CON0	set	15636
   962  0000                     _SPI1CLK	set	15644
   963  0000                     _SPI1BAUD	set	15641
   964  0000                     _SPI1CON2	set	15638
   965  0000                     _SPI1CON1	set	15637
   966  0000                     _U2RXB	set	15824
   967  0000                     _U2TXB	set	15826
   968  0000                     _U2ERRIE	set	15842
   969  0000                     _U2ERRIR	set	15841
   970  0000                     _U2UIR	set	15840
   971  0000                     _U2FIFO	set	15839
   972  0000                     _U2BRGH	set	15838
   973  0000                     _U2BRGL	set	15837
   974  0000                     _U2CON2	set	15836
   975  0000                     _U2CON1	set	15835
   976  0000                     _U2CON0	set	15834
   977  0000                     _U2P3L	set	15832
   978  0000                     _U2P2L	set	15830
   979  0000                     _U2P1L	set	15828
   980  0000                     _U1RXB	set	15848
   981  0000                     _U1TXB	set	15850
   982  0000                     _U1ERRIE	set	15866
   983  0000                     _U1ERRIR	set	15865
   984  0000                     _U1UIR	set	15864
   985  0000                     _U1FIFO	set	15863
   986  0000                     _U1BRGH	set	15862
   987  0000                     _U1BRGL	set	15861
   988  0000                     _U1CON2	set	15860
   989  0000                     _U1CON1	set	15859
   990  0000                     _U1CON0	set	15858
   991  0000                     _U1P3H	set	15857
   992  0000                     _U1P3L	set	15856
   993  0000                     _U1P2H	set	15855
   994  0000                     _U1P2L	set	15854
   995  0000                     _U1P1H	set	15853
   996  0000                     _U1P1L	set	15852
   997  0000                     _FVRCON	set	16065
   998  0000                     _ADFLTRL	set	16102
   999  0000                     _ADFLTRH	set	16103
  1000  0000                     _ADCON0bits	set	16120
  1001  0000                     _ADCON0	set	16120
  1002  0000                     _ADCLK	set	16127
  1003  0000                     _ADACT	set	16126
  1004  0000                     _ADREF	set	16125
  1005  0000                     _ADSTAT	set	16124
  1006  0000                     _ADCON3	set	16123
  1007  0000                     _ADCON2	set	16122
  1008  0000                     _ADCON1	set	16121
  1009  0000                     _ADPREH	set	16119
  1010  0000                     _ADPREL	set	16118
  1011  0000                     _ADCAP	set	16117
  1012  0000                     _ADACQH	set	16116
  1013  0000                     _ADACQL	set	16115
  1014  0000                     _ADPCH	set	16113
  1015  0000                     _ADRPT	set	16108
  1016  0000                     _ADACCU	set	16106
  1017  0000                     _ADSTPTH	set	16101
  1018  0000                     _ADSTPTL	set	16100
  1019  0000                     _ADUTHH	set	16097
  1020  0000                     _ADUTHL	set	16096
  1021  0000                     _ADLTHH	set	16095
  1022  0000                     _ADLTHL	set	16094
  1023  0000                     _CCPTMRS1bits	set	16223
  1024  0000                     _PORTFbits	set	16335
  1025  0000                     _LATCbits	set	16316
  1026  0000                     _LATDbits	set	16317
  1027  0000                     _PORTBbits	set	16331
  1028  0000                     _T2CON	set	16300
  1029  0000                     _T2TMR	set	16298
  1030  0000                     _T2PR	set	16299
  1031  0000                     _T2RST	set	16303
  1032  0000                     _T2HLT	set	16301
  1033  0000                     _T2CLKCON	set	16302
  1034  0000                     _PWM8DCL	set	16224
  1035  0000                     _PWM8DCH	set	16225
  1036  0000                     _PWM8CON	set	16226
  1037  0000                     _LATEbits	set	16318
  1038  0000                     _T5CONbits	set	16282
  1039  0000                     _T5CON	set	16282
  1040  0000                     _TMR5L	set	16280
  1041  0000                     _TMR5H	set	16281
  1042  0000                     _T5CLK	set	16285
  1043  0000                     _T5GATE	set	16284
  1044  0000                     _T5GCON	set	16283
  1045  0000                     _T6CON	set	16276
  1046  0000                     _T6TMR	set	16274
  1047  0000                     _T6PR	set	16275
  1048  0000                     _T6RST	set	16279
  1049  0000                     _T6HLT	set	16277
  1050  0000                     _T6CLKCON	set	16278
  1051  0000                     _TRISD	set	16325
  1052  0000                     _TRISC	set	16324
  1053  0000                     _TRISB	set	16323
  1054  0000                     _TRISA	set	16322
  1055  0000                     _TRISF	set	16327
  1056  0000                     _TRISE	set	16326
  1057  0000                     _LATC	set	16316
  1058  0000                     _LATB	set	16315
  1059  0000                     _LATF	set	16319
  1060  0000                     _LATA	set	16314
  1061  0000                     _LATD	set	16317
  1062  0000                     _LATE	set	16318
  1063  0000                     _IVTLOCKbits	set	16340
  1064  0000                     _IVTLOCK	set	16340
  1065  0000                     _INTCON0bits	set	16338
  1066  0000                     _GIE	set	130711
  1067  00FE55                     
  1068                           ; BSR set to: 57
  1069  00FE55  20                 	db	32
  1070  00FE56  4D                 	db	77	;'M'
  1071  00FE57  65                 	db	101	;'e'
  1072  00FE58  73                 	db	115	;'s'
  1073  00FE59  67                 	db	103	;'g'
  1074  00FE5A  20                 	db	32
  1075  00FE5B  25                 	db	37
  1076  00FE5C  64                 	db	100	;'d'
  1077  00FE5D  20                 	db	32
  1078  00FE5E  53                 	db	83	;'S'
  1079  00FE5F  74                 	db	116	;'t'
  1080  00FE60  61                 	db	97	;'a'
  1081  00FE61  63                 	db	99	;'c'
  1082  00FE62  6B                 	db	107	;'k'
  1083  00FE63  20                 	db	32
  1084  00FE64  25                 	db	37
  1085  00FE65  64                 	db	100	;'d'
  1086  00FE66  20                 	db	32
  1087  00FE67  20                 	db	32
  1088  00FE68  20                 	db	32
  1089  00FE69  20                 	db	32
  1090  00FE6A  20                 	db	32
  1091  00FE6B  20                 	db	32
  1092  00FE6C  00                 	db	0
  1093  00FE6D                     STR_39:
  1094                           
  1095                           ; BSR set to: 57
  1096  00FE6D  20                 	db	32
  1097  00FE6E  20                 	db	32
  1098  00FE6F  20                 	db	32
  1099  00FE70  20                 	db	32
  1100  00FE71  20                 	db	32
  1101  00FE72  20                 	db	32
  1102  00FE73  20                 	db	32
  1103  00FE74  20                 	db	32
  1104  00FE75  20                 	db	32
  1105  00FE76  20                 	db	32
  1106  00FE77  20                 	db	32
  1107  00FE78  20                 	db	32
  1108  00FE79  20                 	db	32
  1109  00FE7A  20                 	db	32
  1110  00FE7B  20                 	db	32
  1111  00FE7C  20                 	db	32
  1112  00FE7D  20                 	db	32
  1113  00FE7E  20                 	db	32
  1114  00FE7F  00                 	db	0
  1115  00FE80                     STR_29:
  1116                           
  1117                           ; BSR set to: 57
  1118  00FE80  48                 	db	72	;'H'
  1119  00FE81  45                 	db	69	;'E'
  1120  00FE82  4C                 	db	76	;'L'
  1121  00FE83  50                 	db	80	;'P'
  1122  00FE84  20                 	db	32
  1123  00FE85  25                 	db	37
  1124  00FE86  73                 	db	115	;'s'
  1125  00FE87  20                 	db	32
  1126  00FE88  20                 	db	32
  1127  00FE89  20                 	db	32
  1128  00FE8A  20                 	db	32
  1129  00FE8B  20                 	db	32
  1130  00FE8C  20                 	db	32
  1131  00FE8D  20                 	db	32
  1132  00FE8E  20                 	db	32
  1133  00FE8F  20                 	db	32
  1134  00FE90  20                 	db	32
  1135  00FE91  20                 	db	32
  1136  00FE92  00                 	db	0
  1137  00FE93                     
  1138                           ; BSR set to: 57
  1139  00FE93  44                 	db	68	;'D'
  1140  00FE94  49                 	db	73	;'I'
  1141  00FE95  53                 	db	83	;'S'
  1142  00FE96  50                 	db	80	;'P'
  1143  00FE97  4C                 	db	76	;'L'
  1144  00FE98  41                 	db	65	;'A'
  1145  00FE99  59                 	db	89	;'Y'
  1146  00FE9A  20                 	db	32
  1147  00FE9B  25                 	db	37
  1148  00FE9C  73                 	db	115	;'s'
  1149  00FE9D  20                 	db	32
  1150  00FE9E  20                 	db	32
  1151  00FE9F  20                 	db	32
  1152  00FEA0  20                 	db	32
  1153  00FEA1  20                 	db	32
  1154  00FEA2  20                 	db	32
  1155  00FEA3  20                 	db	32
  1156  00FEA4  20                 	db	32
  1157  00FEA5  00                 	db	0
  1158  00FEA6                     STR_19:
  1159                           
  1160                           ; BSR set to: 57
  1161  00FEA6  52                 	db	82	;'R'
  1162  00FEA7  55                 	db	85	;'U'
  1163  00FEA8  4E                 	db	78	;'N'
  1164  00FEA9  20                 	db	32
  1165  00FEAA  20                 	db	32
  1166  00FEAB  20                 	db	32
  1167  00FEAC  20                 	db	32
  1168  00FEAD  20                 	db	32
  1169  00FEAE  20                 	db	32
  1170  00FEAF  20                 	db	32
  1171  00FEB0  20                 	db	32
  1172  00FEB1  20                 	db	32
  1173  00FEB2  20                 	db	32
  1174  00FEB3  20                 	db	32
  1175  00FEB4  20                 	db	32
  1176  00FEB5  20                 	db	32
  1177  00FEB6  20                 	db	32
  1178  00FEB7  20                 	db	32
  1179  00FEB8  00                 	db	0
  1180  00FEB9                     STR_12:
  1181                           
  1182                           ; BSR set to: 57
  1183  00FEB9  50                 	db	80	;'P'
  1184  00FEBA  56                 	db	86	;'V'
  1185  00FEBB  20                 	db	32
  1186  00FEBC  20                 	db	32
  1187  00FEBD  20                 	db	32
  1188  00FEBE  50                 	db	80	;'P'
  1189  00FEBF  57                 	db	87	;'W'
  1190  00FEC0  52                 	db	82	;'R'
  1191  00FEC1  20                 	db	32
  1192  00FEC2  25                 	db	37
  1193  00FEC3  33                 	db	51	;'3'
  1194  00FEC4  2E                 	db	46
  1195  00FEC5  32                 	db	50	;'2'
  1196  00FEC6  66                 	db	102	;'f'
  1197  00FEC7  20                 	db	32
  1198  00FEC8  20                 	db	32
  1199  00FEC9  20                 	db	32
  1200  00FECA  20                 	db	32
  1201  00FECB  00                 	db	0
  1202  00FECC                     STR_18:
  1203                           
  1204                           ; BSR set to: 57
  1205  00FECC  42                 	db	66	;'B'
  1206  00FECD  41                 	db	65	;'A'
  1207  00FECE  54                 	db	84	;'T'
  1208  00FECF  20                 	db	32
  1209  00FED0  20                 	db	32
  1210  00FED1  50                 	db	80	;'P'
  1211  00FED2  57                 	db	87	;'W'
  1212  00FED3  52                 	db	82	;'R'
  1213  00FED4  20                 	db	32
  1214  00FED5  25                 	db	37
  1215  00FED6  33                 	db	51	;'3'
  1216  00FED7  2E                 	db	46
  1217  00FED8  32                 	db	50	;'2'
  1218  00FED9  66                 	db	102	;'f'
  1219  00FEDA  20                 	db	32
  1220  00FEDB  20                 	db	32
  1221  00FEDC  20                 	db	32
  1222  00FEDD  20                 	db	32
  1223  00FEDE  00                 	db	0
  1224  00FEDF                     STR_14:
  1225                           
  1226                           ; BSR set to: 57
  1227  00FEDF  49                 	db	73	;'I'
  1228  00FEE0  4E                 	db	78	;'N'
  1229  00FEE1  56                 	db	86	;'V'
  1230  00FEE2  20                 	db	32
  1231  00FEE3  20                 	db	32
  1232  00FEE4  50                 	db	80	;'P'
  1233  00FEE5  57                 	db	87	;'W'
  1234  00FEE6  52                 	db	82	;'R'
  1235  00FEE7  20                 	db	32
  1236  00FEE8  25                 	db	37
  1237  00FEE9  33                 	db	51	;'3'
  1238  00FEEA  2E                 	db	46
  1239  00FEEB  32                 	db	50	;'2'
  1240  00FEEC  66                 	db	102	;'f'
  1241  00FEED  20                 	db	32
  1242  00FEEE  20                 	db	32
  1243  00FEEF  20                 	db	32
  1244  00FEF0  20                 	db	32
  1245  00FEF1  00                 	db	0
  1246  00FEF2                     STR_13:
  1247                           
  1248                           ; BSR set to: 57
  1249  00FEF2  4C                 	db	76	;'L'
  1250  00FEF3  4F                 	db	79	;'O'
  1251  00FEF4  41                 	db	65	;'A'
  1252  00FEF5  44                 	db	68	;'D'
  1253  00FEF6  20                 	db	32
  1254  00FEF7  50                 	db	80	;'P'
  1255  00FEF8  57                 	db	87	;'W'
  1256  00FEF9  52                 	db	82	;'R'
  1257  00FEFA  20                 	db	32
  1258  00FEFB  25                 	db	37
  1259  00FEFC  33                 	db	51	;'3'
  1260  00FEFD  2E                 	db	46
  1261  00FEFE  32                 	db	50	;'2'
  1262  00FEFF  66                 	db	102	;'f'
  1263  00FF00  20                 	db	32
  1264  00FF01  20                 	db	32
  1265  00FF02  20                 	db	32
  1266  00FF03  20                 	db	32
  1267  00FF04  00                 	db	0
  1268  00FF05                     STR_16:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FF05  42                 	db	66	;'B'
  1272  00FF06  56                 	db	86	;'V'
  1273  00FF07  20                 	db	32
  1274  00FF08  25                 	db	37
  1275  00FF09  32                 	db	50	;'2'
  1276  00FF0A  2E                 	db	46
  1277  00FF0B  32                 	db	50	;'2'
  1278  00FF0C  66                 	db	102	;'f'
  1279  00FF0D  20                 	db	32
  1280  00FF0E  42                 	db	66	;'B'
  1281  00FF0F  41                 	db	65	;'A'
  1282  00FF10  20                 	db	32
  1283  00FF11  25                 	db	37
  1284  00FF12  32                 	db	50	;'2'
  1285  00FF13  2E                 	db	46
  1286  00FF14  32                 	db	50	;'2'
  1287  00FF15  66                 	db	102	;'f'
  1288  00FF16  20                 	db	32
  1289  00FF17  00                 	db	0
  1290  00FF18                     STR_17:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FF18  43                 	db	67	;'C'
  1294  00FF19  56                 	db	86	;'V'
  1295  00FF1A  20                 	db	32
  1296  00FF1B  25                 	db	37
  1297  00FF1C  32                 	db	50	;'2'
  1298  00FF1D  2E                 	db	46
  1299  00FF1E  32                 	db	50	;'2'
  1300  00FF1F  66                 	db	102	;'f'
  1301  00FF20  20                 	db	32
  1302  00FF21  4C                 	db	76	;'L'
  1303  00FF22  41                 	db	65	;'A'
  1304  00FF23  20                 	db	32
  1305  00FF24  25                 	db	37
  1306  00FF25  32                 	db	50	;'2'
  1307  00FF26  2E                 	db	46
  1308  00FF27  32                 	db	50	;'2'
  1309  00FF28  66                 	db	102	;'f'
  1310  00FF29  20                 	db	32
  1311  00FF2A  00                 	db	0
  1312  00FF2B                     STR_15:
  1313                           
  1314                           ; BSR set to: 57
  1315  00FF2B  50                 	db	80	;'P'
  1316  00FF2C  56                 	db	86	;'V'
  1317  00FF2D  20                 	db	32
  1318  00FF2E  25                 	db	37
  1319  00FF2F  32                 	db	50	;'2'
  1320  00FF30  2E                 	db	46
  1321  00FF31  32                 	db	50	;'2'
  1322  00FF32  66                 	db	102	;'f'
  1323  00FF33  20                 	db	32
  1324  00FF34  50                 	db	80	;'P'
  1325  00FF35  41                 	db	65	;'A'
  1326  00FF36  20                 	db	32
  1327  00FF37  25                 	db	37
  1328  00FF38  32                 	db	50	;'2'
  1329  00FF39  2E                 	db	46
  1330  00FF3A  32                 	db	50	;'2'
  1331  00FF3B  66                 	db	102	;'f'
  1332  00FF3C  20                 	db	32
  1333  00FF3D  00                 	db	0
  1334  00FF3E                     STR_8:
  1335                           
  1336                           ; BSR set to: 57
  1337  00FF3E  20                 	db	32
  1338  00FF3F  56                 	db	86	;'V'
  1339  00FF40  54                 	db	84	;'T'
  1340  00FF41  45                 	db	69	;'E'
  1341  00FF42  52                 	db	82	;'R'
  1342  00FF43  4D                 	db	77	;'M'
  1343  00FF44  20                 	db	32
  1344  00FF45  23                 	db	35
  1345  00FF46  32                 	db	50	;'2'
  1346  00FF47  20                 	db	32
  1347  00FF48  20                 	db	32
  1348  00FF49  20                 	db	32
  1349  00FF4A  20                 	db	32
  1350  00FF4B  20                 	db	32
  1351  00FF4C  20                 	db	32
  1352  00FF4D  20                 	db	32
  1353  00FF4E  00                 	db	0
  1354  00FF4F                     STR_4:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FF4F  20                 	db	32
  1358  00FF50  4E                 	db	78	;'N'
  1359  00FF51  53                 	db	83	;'S'
  1360  00FF52  41                 	db	65	;'A'
  1361  00FF53  53                 	db	83	;'S'
  1362  00FF54  50                 	db	80	;'P'
  1363  00FF55  4F                 	db	79	;'O'
  1364  00FF56  4F                 	db	79	;'O'
  1365  00FF57  4B                 	db	75	;'K'
  1366  00FF58  20                 	db	32
  1367  00FF59  20                 	db	32
  1368  00FF5A  20                 	db	32
  1369  00FF5B  20                 	db	32
  1370  00FF5C  20                 	db	32
  1371  00FF5D  20                 	db	32
  1372  00FF5E  20                 	db	32
  1373  00FF5F  00                 	db	0
  1374  00FF60                     STR_1:
  1375                           
  1376                           ; BSR set to: 57
  1377  00FF60  20                 	db	32
  1378  00FF61  4D                 	db	77	;'M'
  1379  00FF62  42                 	db	66	;'B'
  1380  00FF63  4D                 	db	77	;'M'
  1381  00FF64  43                 	db	67	;'C'
  1382  00FF65  20                 	db	32
  1383  00FF66  53                 	db	83	;'S'
  1384  00FF67  4F                 	db	79	;'O'
  1385  00FF68  4C                 	db	76	;'L'
  1386  00FF69  41                 	db	65	;'A'
  1387  00FF6A  52                 	db	82	;'R'
  1388  00FF6B  4D                 	db	77	;'M'
  1389  00FF6C  4F                 	db	79	;'O'
  1390  00FF6D  4E                 	db	78	;'N'
  1391  00FF6E  20                 	db	32
  1392  00FF6F  20                 	db	32
  1393  00FF70  00                 	db	0
  1394  00FF71                     STR_5:
  1395                           
  1396                           ; BSR set to: 57
  1397  00FF71  20                 	db	32
  1398  00FF72  53                 	db	83	;'S'
  1399  00FF73  45                 	db	69	;'E'
  1400  00FF74  51                 	db	81	;'Q'
  1401  00FF75  55                 	db	85	;'U'
  1402  00FF76  45                 	db	69	;'E'
  1403  00FF77  4E                 	db	78	;'N'
  1404  00FF78  43                 	db	67	;'C'
  1405  00FF79  45                 	db	69	;'E'
  1406  00FF7A  20                 	db	32
  1407  00FF7B  54                 	db	84	;'T'
  1408  00FF7C  45                 	db	69	;'E'
  1409  00FF7D  53                 	db	83	;'S'
  1410  00FF7E  54                 	db	84	;'T'
  1411  00FF7F  20                 	db	32
  1412  00FF80  20                 	db	32
  1413  00FF81  00                 	db	0
  1414  00FF82                     STR_11:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FF82  25                 	db	37
  1418  00FF83  64                 	db	100	;'d'
  1419  00FF84  20                 	db	32
  1420  00FF85  25                 	db	37
  1421  00FF86  32                 	db	50	;'2'
  1422  00FF87  2E                 	db	46
  1423  00FF88  34                 	db	52	;'4'
  1424  00FF89  66                 	db	102	;'f'
  1425  00FF8A  2C                 	db	44
  1426  00FF8B  20                 	db	32
  1427  00FF8C  25                 	db	37
  1428  00FF8D  64                 	db	100	;'d'
  1429  00FF8E  20                 	db	32
  1430  00FF8F  20                 	db	32
  1431  00FF90  20                 	db	32
  1432  00FF91  23                 	db	35
  1433  00FF92  00                 	db	0
  1434  00FF93                     STR_9:
  1435                           
  1436                           ; BSR set to: 57
  1437  00FF93  25                 	db	37
  1438  00FF94  64                 	db	100	;'d'
  1439  00FF95  20                 	db	32
  1440  00FF96  25                 	db	37
  1441  00FF97  32                 	db	50	;'2'
  1442  00FF98  2E                 	db	46
  1443  00FF99  34                 	db	52	;'4'
  1444  00FF9A  66                 	db	102	;'f'
  1445  00FF9B  20                 	db	32
  1446  00FF9C  20                 	db	32
  1447  00FF9D  20                 	db	32
  1448  00FF9E  25                 	db	37
  1449  00FF9F  64                 	db	100	;'d'
  1450  00FFA0  20                 	db	32
  1451  00FFA1  20                 	db	32
  1452  00FFA2  00                 	db	0
  1453  00FFA3                     STR_33:
  1454                           
  1455                           ; BSR set to: 57
  1456  00FFA3  76                 	db	118	;'v'
  1457  00FFA4  74                 	db	116	;'t'
  1458  00FFA5  65                 	db	101	;'e'
  1459  00FFA6  72                 	db	114	;'r'
  1460  00FFA7  6D                 	db	109	;'m'
  1461  00FFA8  20                 	db	32
  1462  00FFA9  25                 	db	37
  1463  00FFAA  78                 	db	120	;'x'
  1464  00FFAB  3A                 	db	58	;':'
  1465  00FFAC  25                 	db	37
  1466  00FFAD  78                 	db	120	;'x'
  1467  00FFAE  20                 	db	32
  1468  00FFAF  20                 	db	32
  1469  00FFB0  20                 	db	32
  1470  00FFB1  00                 	db	0
  1471  00FFB2                     STR_2:
  1472                           
  1473                           ; BSR set to: 57
  1474  00FFB2  20                 	db	32
  1475  00FFB3  56                 	db	86	;'V'
  1476  00FFB4  65                 	db	101	;'e'
  1477  00FFB5  72                 	db	114	;'r'
  1478  00FFB6  73                 	db	115	;'s'
  1479  00FFB7  69                 	db	105	;'i'
  1480  00FFB8  6F                 	db	111	;'o'
  1481  00FFB9  6E                 	db	110	;'n'
  1482  00FFBA  20                 	db	32
  1483  00FFBB  25                 	db	37
  1484  00FFBC  73                 	db	115	;'s'
  1485  00FFBD  20                 	db	32
  1486  00FFBE  20                 	db	32
  1487  00FFBF  20                 	db	32
  1488  00FFC0  00                 	db	0
  1489  00FFC1                     STR_27:
  1490                           
  1491                           ; BSR set to: 57
  1492  00FFC1  44                 	db	68	;'D'
  1493  00FFC2  65                 	db	101	;'e'
  1494  00FFC3  63                 	db	99	;'c'
  1495  00FFC4  20                 	db	32
  1496  00FFC5  20                 	db	32
  1497  00FFC6  31                 	db	49	;'1'
  1498  00FFC7  20                 	db	32
  1499  00FFC8  32                 	db	50	;'2'
  1500  00FFC9  30                 	db	48	;'0'
  1501  00FFCA  31                 	db	49	;'1'
  1502  00FFCB  39                 	db	57	;'9'
  1503  00FFCC  00                 	db	0
  1504  00FFCD                     STR_31:
  1505                           
  1506                           ; BSR set to: 57
  1507  00FFCD  25                 	db	37
  1508  00FFCE  73                 	db	115	;'s'
  1509  00FFCF  20                 	db	32
  1510  00FFD0  20                 	db	32
  1511  00FFD1  20                 	db	32
  1512  00FFD2  20                 	db	32
  1513  00FFD3  20                 	db	32
  1514  00FFD4  20                 	db	32
  1515  00FFD5  20                 	db	32
  1516  00FFD6  00                 	db	0
  1517  00FFD7                     STR_28:
  1518                           
  1519                           ; BSR set to: 57
  1520  00FFD7  31                 	db	49	;'1'
  1521  00FFD8  37                 	db	55	;'7'
  1522  00FFD9  3A                 	db	58	;':'
  1523  00FFDA  30                 	db	48	;'0'
  1524  00FFDB  36                 	db	54	;'6'
  1525  00FFDC  3A                 	db	58	;':'
  1526  00FFDD  34                 	db	52	;'4'
  1527  00FFDE  39                 	db	57	;'9'
  1528  00FFDF  00                 	db	0
  1529  00FFE0                     STR_3:
  1530                           
  1531                           ; BSR set to: 57
  1532  00FFE0  30                 	db	48	;'0'
  1533  00FFE1  2E                 	db	46
  1534  00FFE2  39                 	db	57	;'9'
  1535  00FFE3  39                 	db	57	;'9'
  1536  00FFE4  33                 	db	51	;'3'
  1537  00FFE5  00                 	db	0
  1538  00FFE6                     STR_46:
  1539                           
  1540                           ; BSR set to: 57
  1541  00FFE6  49                 	db	73	;'I'
  1542  00FFE7  4E                 	db	78	;'N'
  1543  00FFE8  46                 	db	70	;'F'
  1544  00FFE9  00                 	db	0
  1545  00FFEA                     STR_50:
  1546                           
  1547                           ; BSR set to: 57
  1548  00FFEA  4E                 	db	78	;'N'
  1549  00FFEB  41                 	db	65	;'A'
  1550  00FFEC  4E                 	db	78	;'N'
  1551  00FFED  00                 	db	0
  1552  00FFEE                     STR_47:
  1553                           
  1554                           ; BSR set to: 57
  1555  00FFEE  69                 	db	105	;'i'
  1556  00FFEF  6E                 	db	110	;'n'
  1557  00FFF0  66                 	db	102	;'f'
  1558  00FFF1  00                 	db	0
  1559  00FFF2                     STR_51:
  1560                           
  1561                           ; BSR set to: 57
  1562  00FFF2  6E                 	db	110	;'n'
  1563  00FFF3  61                 	db	97	;'a'
  1564  00FFF4  6E                 	db	110	;'n'
  1565  00FFF5  00                 	db	0
  1566  00FFF6                     STR_54:
  1567                           
  1568                           ; BSR set to: 57
  1569  00FFF6  6C                 	db	108	;'l'
  1570  00FFF7  66                 	db	102	;'f'
  1571  00FFF8  00                 	db	0
  1572  00FFF9                     STR_25:
  1573                           
  1574                           ; BSR set to: 57
  1575  00FFF9  25                 	db	37
  1576  00FFFA  63                 	db	99	;'c'
  1577  00FFFB  00                 	db	0
  1578  00FFFC                     STR_24:
  1579                           
  1580                           ; BSR set to: 57
  1581  00FFFC  25                 	db	37
  1582  00FFFD  73                 	db	115	;'s'
  1583  00FFFE  00                 	db	0
  1584  0000                     
  1585                           ; #config settings
  1586  00FFFF  00                 	db	0	; dummy byte at the end
  1587  0000                     
  1588                           	psect	cinit
  1589  017170                     __pcinit:
  1590                           	opt callstack 0
  1591  017170                     start_initialization:
  1592                           	opt callstack 0
  1593  017170                     __initialization:
  1594                           	opt callstack 0
  1595                           
  1596                           ; Initialize objects allocated to BANK2 (188 bytes)
  1597                           ; load TBLPTR registers with __pidataBANK2
  1598  017170  0EE6               	movlw	low __pidataBANK2
  1599  017172  6EF6               	movwf	tblptrl,c
  1600  017174  0E74               	movlw	high __pidataBANK2
  1601  017176  6EF7               	movwf	tblptrh,c
  1602  017178  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1603  01717A  6EF8               	movwf	tblptru,c
  1604  01717C  EE00  F200         	lfsr	0,__pdataBANK2
  1605  017180  EE20 F0BC          	lfsr	2,188
  1606  017184                     copy_data0:
  1607  017184  0009               	tblrd		*+
  1608  017186  006F FFD7 FFEE     	movff	tablat,postinc0
  1609  01718C  50DD               	movf	postdec2,w,c
  1610  01718E  50D9               	movf	fsr2l,w,c
  1611  017190  E1F9               	bnz	copy_data0
  1612                           
  1613                           ; Initialize objects allocated to BANK1 (23 bytes)
  1614                           ; load TBLPTR registers with __pidataBANK1
  1615  017192  0E3E               	movlw	low __pidataBANK1
  1616  017194  6EF6               	movwf	tblptrl,c
  1617  017196  0E8D               	movlw	high __pidataBANK1
  1618  017198  6EF7               	movwf	tblptrh,c
  1619  01719A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1620  01719C  6EF8               	movwf	tblptru,c
  1621  01719E  EE00  F1D4         	lfsr	0,__pdataBANK1
  1622  0171A2  EE20 F017          	lfsr	2,23
  1623  0171A6                     copy_data1:
  1624  0171A6  0009               	tblrd		*+
  1625  0171A8  006F FFD7 FFEE     	movff	tablat,postinc0
  1626  0171AE  50DD               	movf	postdec2,w,c
  1627  0171B0  50D9               	movf	fsr2l,w,c
  1628  0171B2  E1F9               	bnz	copy_data1
  1629                           
  1630                           ; Initialize objects allocated to BANK0 (47 bytes)
  1631                           ; load TBLPTR registers with __pidataBANK0
  1632  0171B4  0E12               	movlw	low __pidataBANK0
  1633  0171B6  6EF6               	movwf	tblptrl,c
  1634  0171B8  0E87               	movlw	high __pidataBANK0
  1635  0171BA  6EF7               	movwf	tblptrh,c
  1636  0171BC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1637  0171BE  6EF8               	movwf	tblptru,c
  1638  0171C0  EE00  F0C7         	lfsr	0,__pdataBANK0
  1639  0171C4  EE20 F02F          	lfsr	2,47
  1640  0171C8                     copy_data2:
  1641  0171C8  0009               	tblrd		*+
  1642  0171CA  006F FFD7 FFEE     	movff	tablat,postinc0
  1643  0171D0  50DD               	movf	postdec2,w,c
  1644  0171D2  50D9               	movf	fsr2l,w,c
  1645  0171D4  E1F9               	bnz	copy_data2
  1646                           
  1647                           ; Clear objects allocated to BANK7 (255 bytes)
  1648  0171D6  EE01  F300         	lfsr	0,__pbssBANK7
  1649  0171DA  EE20 F0FF          	lfsr	2,255
  1650  0171DE                     clear_0:
  1651  0171DE  6AEE               	clrf	postinc0,c
  1652  0171E0  50DD               	movf	postdec2,w,c
  1653  0171E2  50D9               	movf	fsr2l,w,c
  1654  0171E4  E1FC               	bnz	clear_0
  1655  0171E6  50DA               	movf	fsr2h,w,c
  1656  0171E8  E1FA               	bnz	clear_0
  1657                           
  1658                           ; Clear objects allocated to BANK6 (255 bytes)
  1659  0171EA  EE01  F200         	lfsr	0,__pbssBANK6
  1660  0171EE  EE20 F0FF          	lfsr	2,255
  1661  0171F2                     clear_1:
  1662  0171F2  6AEE               	clrf	postinc0,c
  1663  0171F4  50DD               	movf	postdec2,w,c
  1664  0171F6  50D9               	movf	fsr2l,w,c
  1665  0171F8  E1FC               	bnz	clear_1
  1666  0171FA  50DA               	movf	fsr2h,w,c
  1667  0171FC  E1FA               	bnz	clear_1
  1668                           
  1669                           ; Clear objects allocated to BANK5 (218 bytes)
  1670  0171FE  EE01  F100         	lfsr	0,__pbssBANK5
  1671  017202  0EDA               	movlw	218
  1672  017204                     clear_2:
  1673  017204  6AEE               	clrf	postinc0,c
  1674  017206  06E8               	decf	wreg,f,c
  1675  017208  E1FD               	bnz	clear_2
  1676                           
  1677                           ; Clear objects allocated to BANK4 (67 bytes)
  1678  01720A  EE01  F000         	lfsr	0,__pbssBANK4
  1679  01720E  0E43               	movlw	67
  1680  017210                     clear_3:
  1681  017210  6AEE               	clrf	postinc0,c
  1682  017212  06E8               	decf	wreg,f,c
  1683  017214  E1FD               	bnz	clear_3
  1684                           
  1685                           ; Clear objects allocated to BANK3 (215 bytes)
  1686  017216  EE00  F300         	lfsr	0,__pbssBANK3
  1687  01721A  0ED7               	movlw	215
  1688  01721C                     clear_4:
  1689  01721C  6AEE               	clrf	postinc0,c
  1690  01721E  06E8               	decf	wreg,f,c
  1691  017220  E1FD               	bnz	clear_4
  1692                           
  1693                           ; Clear objects allocated to BANK2 (64 bytes)
  1694  017222  EE00  F2BC         	lfsr	0,__pbssBANK2
  1695  017226  0E40               	movlw	64
  1696  017228                     clear_5:
  1697  017228  6AEE               	clrf	postinc0,c
  1698  01722A  06E8               	decf	wreg,f,c
  1699  01722C  E1FD               	bnz	clear_5
  1700                           
  1701                           ; Clear objects allocated to BANK1 (212 bytes)
  1702  01722E  EE00  F100         	lfsr	0,__pbssBANK1
  1703  017232  0ED4               	movlw	212
  1704  017234                     clear_6:
  1705  017234  6AEE               	clrf	postinc0,c
  1706  017236  06E8               	decf	wreg,f,c
  1707  017238  E1FD               	bnz	clear_6
  1708                           
  1709                           ; Clear objects allocated to BANK0 (103 bytes)
  1710  01723A  EE00  F060         	lfsr	0,__pbssBANK0
  1711  01723E  0E67               	movlw	103
  1712  017240                     clear_7:
  1713  017240  6AEE               	clrf	postinc0,c
  1714  017242  06E8               	decf	wreg,f,c
  1715  017244  E1FD               	bnz	clear_7
  1716                           
  1717                           ; Clear objects allocated to COMRAM (49 bytes)
  1718  017246  EE00  F001         	lfsr	0,__pbssCOMRAM
  1719  01724A  0E31               	movlw	49
  1720  01724C                     clear_8:
  1721  01724C  6AEE               	clrf	postinc0,c
  1722  01724E  06E8               	decf	wreg,f,c
  1723  017250  E1FD               	bnz	clear_8
  1724                           
  1725                           ;
  1726                           ; Setup IVTBASE
  1727                           ;
  1728  017252  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1729  017254  6ED5               	movwf	213,c
  1730  017256  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1731  017258  6ED6               	movwf	214,c
  1732  01725A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1733  01725C  6ED7               	movwf	215,c
  1734  01725E                     end_of_initialization:
  1735                           	opt callstack 0
  1736  01725E                     __end_of__initialization:
  1737                           	opt callstack 0
  1738  01725E  0100               	movlb	0
  1739  017260  EFC1  F08E         	goto	_main	;jump to C main() function
  1740                           
  1741                           	psect	bssCOMRAM
  1742  000001                     __pbssCOMRAM:
  1743                           	opt callstack 0
  1744  000001                     _ADCC_ADTI_InterruptHandler:
  1745                           	opt callstack 0
  1746  000001                     	ds	3
  1747  000004                     _ADCC_ADI_InterruptHandler:
  1748                           	opt callstack 0
  1749  000004                     	ds	3
  1750  000007                     _UART1_TxInterruptHandler:
  1751                           	opt callstack 0
  1752  000007                     	ds	3
  1753  00000A                     _UART1_RxInterruptHandler:
  1754                           	opt callstack 0
  1755  00000A                     	ds	3
  1756  00000D                     _UART2_TxInterruptHandler:
  1757                           	opt callstack 0
  1758  00000D                     	ds	3
  1759  000010                     _UART2_RxInterruptHandler:
  1760                           	opt callstack 0
  1761  000010                     	ds	3
  1762  000013                     _INT1_InterruptHandler:
  1763                           	opt callstack 0
  1764  000013                     	ds	3
  1765  000016                     _INT0_InterruptHandler:
  1766                           	opt callstack 0
  1767  000016                     	ds	3
  1768  000019                     _nout:
  1769                           	opt callstack 0
  1770  000019                     	ds	2
  1771  00001B                     _width:
  1772                           	opt callstack 0
  1773  00001B                     	ds	2
  1774  00001D                     _prec:
  1775                           	opt callstack 0
  1776  00001D                     	ds	2
  1777  00001F                     _flags:
  1778                           	opt callstack 0
  1779  00001F                     	ds	2
  1780  000021                     TMR5_ISR@CountCallBack:
  1781                           	opt callstack 0
  1782  000021                     	ds	2
  1783  000023                     _timer5ReloadVal:
  1784                           	opt callstack 0
  1785  000023                     	ds	2
  1786  000025                     _mode_sw:
  1787                           	opt callstack 0
  1788  000025                     	ds	1
  1789  000026                     _uart2RxCount:
  1790                           	opt callstack 0
  1791  000026                     	ds	1
  1792  000027                     _uart2RxTail:
  1793                           	opt callstack 0
  1794  000027                     	ds	1
  1795  000028                     _uart2RxHead:
  1796                           	opt callstack 0
  1797  000028                     	ds	1
  1798  000029                     _uart2TxBufferRemaining:
  1799                           	opt callstack 0
  1800  000029                     	ds	1
  1801  00002A                     _uart2TxTail:
  1802                           	opt callstack 0
  1803  00002A                     	ds	1
  1804  00002B                     _uart2TxHead:
  1805                           	opt callstack 0
  1806  00002B                     	ds	1
  1807  00002C                     _uart1RxCount:
  1808                           	opt callstack 0
  1809  00002C                     	ds	1
  1810  00002D                     _uart1RxTail:
  1811                           	opt callstack 0
  1812  00002D                     	ds	1
  1813  00002E                     _uart1RxHead:
  1814                           	opt callstack 0
  1815  00002E                     	ds	1
  1816  00002F                     _uart1TxBufferRemaining:
  1817                           	opt callstack 0
  1818  00002F                     	ds	1
  1819  000030                     _uart1TxTail:
  1820                           	opt callstack 0
  1821  000030                     	ds	1
  1822  000031                     _uart1TxHead:
  1823                           	opt callstack 0
  1824  000031                     	ds	1
  1825                           
  1826                           	psect	bssBANK0
  1827  000060                     __pbssBANK0:
  1828                           	opt callstack 0
  1829  000060                     _S:
  1830                           	opt callstack 0
  1831  000060                     	ds	41
  1832  000089                     _tickCount:
  1833                           	opt callstack 0
  1834  000089                     	ds	24
  1835  0000A1                     _spi_link:
  1836                           	opt callstack 0
  1837  0000A1                     	ds	12
  1838  0000AD                     floorf@F524:
  1839                           	opt callstack 0
  1840  0000AD                     	ds	4
  1841  0000B1                     ___fpclassifyf@F463:
  1842                           	opt callstack 0
  1843  0000B1                     	ds	4
  1844  0000B5                     _utctime:
  1845                           	opt callstack 0
  1846  0000B5                     	ds	4
  1847  0000B9                     wdtdelay@dcount:
  1848                           	opt callstack 0
  1849  0000B9                     	ds	4
  1850  0000BD                     _P:
  1851                           	opt callstack 0
  1852  0000BD                     	ds	4
  1853  0000C1                     _TMR5_InterruptHandler:
  1854                           	opt callstack 0
  1855  0000C1                     	ds	3
  1856  0000C4                     _TMR6_InterruptHandler:
  1857                           	opt callstack 0
  1858  0000C4                     	ds	3
  1859                           
  1860                           	psect	dataBANK0
  1861  0000C7                     __pdataBANK0:
  1862                           	opt callstack 0
  1863  0000C7                     _R:
  1864                           	opt callstack 0
  1865  0000C7                     	ds	40
  1866  0000EF                     _H:
  1867                           	opt callstack 0
  1868  0000EF                     	ds	7
  1869                           
  1870                           	psect	bssBANK1
  1871  000100                     __pbssBANK1:
  1872                           	opt callstack 0
  1873  000100                     _C:
  1874                           	opt callstack 0
  1875  000100                     	ds	124
  1876  00017C                     _dbuf:
  1877                           	opt callstack 0
  1878  00017C                     	ds	80
  1879  0001CC                     _seed:
  1880                           	opt callstack 0
  1881  0001CC                     	ds	8
  1882                           
  1883                           	psect	dataBANK1
  1884  0001D4                     __pdataBANK1:
  1885                           	opt callstack 0
  1886  0001D4                     stoa@F1166:
  1887                           	opt callstack 0
  1888  0001D4                     	ds	7
  1889  0001DB                     _port_data:
  1890                           	opt callstack 0
  1891  0001DB                     	ds	16
  1892                           
  1893                           	psect	bssBANK2
  1894  0002BC                     __pbssBANK2:
  1895                           	opt callstack 0
  1896  0002BC                     _uart1TxBuffer:
  1897                           	opt callstack 0
  1898  0002BC                     	ds	64
  1899                           
  1900                           	psect	dataBANK2
  1901  000200                     __pdataBANK2:
  1902                           	opt callstack 0
  1903  000200                     _V:
  1904                           	opt callstack 0
  1905  000200                     	ds	188
  1906                           
  1907                           	psect	bssBANK3
  1908  000300                     __pbssBANK3:
  1909                           	opt callstack 0
  1910  000300                     lp_filter@smooth:
  1911                           	opt callstack 0
  1912  000300                     	ds	84
  1913  000354                     _uart2TxBuffer:
  1914                           	opt callstack 0
  1915  000354                     	ds	64
  1916  000394                     _ring_buf1:
  1917                           	opt callstack 0
  1918  000394                     	ds	67
  1919                           
  1920                           	psect	bssBANK4
  1921  000400                     __pbssBANK4:
  1922                           	opt callstack 0
  1923  000400                     _ring_buf2:
  1924                           	opt callstack 0
  1925  000400                     	ds	67
  1926                           
  1927                           	psect	bssBANK5
  1928  000500                     __pbssBANK5:
  1929                           	opt callstack 0
  1930  000500                     _D:
  1931                           	opt callstack 0
  1932  000500                     	ds	218
  1933                           
  1934                           	psect	bssBANK6
  1935  000600                     __pbssBANK6:
  1936                           	opt callstack 0
  1937  000600                     _uart1RxBuffer:
  1938                           	opt callstack 0
  1939  000600                     	ds	255
  1940                           
  1941                           	psect	bssBANK7
  1942  000700                     __pbssBANK7:
  1943                           	opt callstack 0
  1944  000700                     _uart2RxBuffer:
  1945                           	opt callstack 0
  1946  000700                     	ds	255
  1947                           
  1948                           	psect	cstackBANK1
  1949  0001EB                     __pcstackBANK1:
  1950                           	opt callstack 0
  1951  0001EB                     ??_TMR5_ISR:
  1952                           
  1953                           ; 1 bytes @ 0x0
  1954  0001EB                     	ds	4
  1955                           
  1956                           	psect	cstackBANK0
  1957  0000F6                     __pcstackBANK0:
  1958                           	opt callstack 0
  1959  0000F6                     ??_INT1_ISR:
  1960                           
  1961                           ; 1 bytes @ 0x0
  1962  0000F6                     	ds	4
  1963                           
  1964                           	psect	cstackCOMRAM
  1965  000052                     __pcstackCOMRAM:
  1966                           	opt callstack 0
  1967  000052                     ??_ADCC_ThresholdISR:
  1968  000052                     
  1969                           ; 1 bytes @ 0x0
  1970  000052                     	ds	5
  1971  000057                     ??_TMR6_ISR:
  1972                           
  1973                           ; 1 bytes @ 0x5
  1974  000057                     	ds	1
  1975  000058                     
  1976                           ; 1 bytes @ 0x6
  1977 ;;
  1978 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  1979 ;;
  1980 ;; *************** function _main *****************
  1981 ;; Defined at:
  1982 ;;		line 167 in file "main.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  k               1  [STACK] unsigned char 
  1987 ;;  j               1  [STACK] unsigned char 
  1988 ;;  i               1  [STACK] unsigned char 
  1989 ;;  inp_index       1  [STACK] unsigned char 
  1990 ;;  mode            1  [STACK] enum E17005
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1  [STACK] void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 1/1
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels required when called:   19
  2006 ;; This function calls:
  2007 ;;		_SYSTEM_Initialize
  2008 ;;		_StartTimer
  2009 ;;		_TimerDone
  2010 ;;		_WaitMs
  2011 ;;		_calc_model_data
  2012 ;;		_check_adc_scan
  2013 ;;		_check_help
  2014 ;;		_clear_adc_scan
  2015 ;;		_clear_hid_pflags
  2016 ;;		_convert_adc_data
  2017 ;;		_eaDogM_WriteCommand
  2018 ;;		_get_raw_result
  2019 ;;		_get_switch
  2020 ;;		_get_vterm_ptr
  2021 ;;		_hid_display
  2022 ;;		_init_display
  2023 ;;		_lp_filter
  2024 ;;		_mode_lamp_dim
  2025 ;;		_set_display_info
  2026 ;;		_set_vterm
  2027 ;;		_sprintf
  2028 ;;		_srand
  2029 ;;		_start_adc_scan
  2030 ;;		_start_switch_handler
  2031 ;;		_update_lcd
  2032 ;; This function is called by:
  2033 ;;		Startup code after reset
  2034 ;; This function uses a reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text0
  2038  011D82                     __ptext0:
  2039                           	opt callstack 0
  2040  011D82                     _main:
  2041                           	opt callstack 0
  2042                           
  2043                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2044  011D82  0E05               	movlw	5
  2045  011D84  26E1               	addwf	fsr1l,f,c
  2046  011D86  0E00               	movlw	0
  2047  011D88  22E2               	addwfc	fsr1h,f,c
  2048                           
  2049                           ;main.c: 169:  UI_STATES mode;;main.c: 170:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2050                           ;stkvar	_inp_index @ sp[(-5)+3]
  2051                           
  2052                           ;incstack = 0
  2053  011D8A  0EFE               	movlw	-2
  2054  011D8C  6AE3               	clrf	plusw1,c
  2055                           
  2056                           ;stkvar	_i @ sp[(-5)+2]
  2057  011D8E  0EFD               	movlw	-3
  2058  011D90  6AE3               	clrf	plusw1,c
  2059                           
  2060                           ;stkvar	_j @ sp[(-5)+1]
  2061  011D92  0EFC               	movlw	-4
  2062  011D94  6AE3               	clrf	plusw1,c
  2063  011D96  2AE3               	incf	plusw1,f,c
  2064                           
  2065                           ;stkvar	_k @ sp[(-5)+0]
  2066  011D98  0EFB               	movlw	-5
  2067  011D9A  6AE3               	clrf	plusw1,c
  2068  011D9C  82E3               	bsf	plusw1,1,c
  2069                           
  2070                           ;main.c: 173:  SYSTEM_Initialize();
  2071  011D9E  ECB2  F0C1         	call	_SYSTEM_Initialize	;wreg free
  2072                           
  2073                           ; BSR set to: 60
  2074                           ;main.c: 176:  (INTCON0bits.GIEH = 1);
  2075  011DA2  8ED2               	bsf	210,7,c	;volatile
  2076                           
  2077                           ; BSR set to: 60
  2078                           ;main.c: 179:  (INTCON0bits.GIEL = 1);
  2079  011DA4  8CD2               	bsf	210,6,c	;volatile
  2080                           
  2081                           ; BSR set to: 60
  2082                           ;main.c: 181:  V.ui_state = UI_STATE_INIT;
  2083  011DA6  0102               	movlb	2	; () banked
  2084  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2085                           
  2086                           ; BSR set to: 2
  2087                           ;main.c: 186:  WaitMs(300);
  2088  011DAA  0E2C               	movlw	44
  2089  011DAC  6EE6               	movwf	postinc1,c
  2090  011DAE  0E01               	movlw	1
  2091  011DB0  6EE6               	movwf	postinc1,c
  2092  011DB2  ECD7  F0C2         	call	_WaitMs	;wreg free
  2093                           
  2094                           ;main.c: 187:  if (PORTBbits.RB0) {
  2095  011DB6  A0CB               	btfss	203,0,c	;volatile
  2096  011DB8  D004               	goto	l10756
  2097                           
  2098                           ;main.c: 188:   mode = UI_STATE_HOST;
  2099                           ;stkvar	_mode @ sp[(-5)+4]
  2100  011DBA  0EFF               	movlw	-1
  2101  011DBC  6AE3               	clrf	plusw1,c
  2102  011DBE  2AE3               	incf	plusw1,f,c
  2103                           
  2104                           ;main.c: 189:  } else {
  2105  011DC0  D004               	goto	l10758
  2106  011DC2                     l10756:
  2107                           
  2108                           ;main.c: 190:   mode = UI_STATE_LOG;
  2109                           ;stkvar	_mode @ sp[(-5)+4]
  2110  011DC2  0EFF               	movlw	-1
  2111  011DC4  6AE3               	clrf	plusw1,c
  2112  011DC6  80E3               	bsf	plusw1,0,c
  2113  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2114  011DCA                     l10758:
  2115                           
  2116                           ;main.c: 193:  if (mode == UI_STATE_HOST) {
  2117                           ;stkvar	_mode @ sp[(-5)+4]
  2118  011DCA  0EFF               	movlw	-1
  2119  011DCC  04E3               	decf	plusw1,w,c
  2120  011DCE  A4D8               	btfss	status,2,c
  2121  011DD0  D007               	goto	l1256
  2122                           
  2123                           ;main.c: 194:   do { LATDbits.LATD0 = 1; } while(0);
  2124  011DD2  80BD               	bsf	189,0,c	;volatile
  2125                           
  2126                           ;main.c: 195:   V.mode_pwm = 70;
  2127  011DD4  0E00               	movlw	0
  2128  011DD6  0102               	movlb	2	; () banked
  2129  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2130  011DDA  0E46               	movlw	70
  2131  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2132                           
  2133                           ;main.c: 196:  } else {
  2134  011DDE  D004               	goto	l10762
  2135  011DE0                     l1256:
  2136  011DE0  90BD               	bcf	189,0,c	;volatile
  2137                           
  2138                           ;main.c: 198:   V.mode_pwm = 0;
  2139  011DE2  0102               	movlb	2	; () banked
  2140  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2141  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2142  011DE8                     l10762:
  2143                           
  2144                           ; BSR set to: 2
  2145                           ;main.c: 200:  mode_lamp_dim(V.mode_pwm);
  2146  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2147  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2148  011DF4  EC87  F0C6         	call	_mode_lamp_dim	;wreg free
  2149  011DF8  D0D0               	goto	l10806
  2150  011DFA                     l10764:
  2151                           
  2152                           ; BSR set to: 2
  2153                           ;main.c: 211:    init_display();
  2154  011DFA  EC32  F0B9         	call	_init_display	;wreg free
  2155                           
  2156                           ; BSR set to: 61
  2157                           ;main.c: 212:    eaDogM_WriteCommand(0b00001100);
  2158  011DFE  0E0C               	movlw	12
  2159  011E00  6EE6               	movwf	postinc1,c
  2160  011E02  ECE7  F0C6         	call	_eaDogM_WriteCommand	;wreg free
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 214:    V.ui_state = mode;
  2164                           ;stkvar	_mode @ sp[(-5)+4]
  2165  011E06  0EFF               	movlw	-1
  2166  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 215:    srand(1957);
  2170  011E0E  0EA5               	movlw	165
  2171  011E10  6EE6               	movwf	postinc1,c
  2172  011E12  0E07               	movlw	7
  2173  011E14  6EE6               	movwf	postinc1,c
  2174  011E16  EC0D  F0C3         	call	_srand	;wreg free
  2175                           
  2176                           ; BSR set to: 1
  2177                           ;main.c: 216:    set_vterm(0);
  2178  011E1A  0E00               	movlw	0
  2179  011E1C  6EE6               	movwf	postinc1,c
  2180  011E1E  EC5E  F0C6         	call	_set_vterm	;wreg free
  2181                           
  2182                           ; BSR set to: 5
  2183                           ;main.c: 217:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2184  011E22  0E60               	movlw	low STR_1
  2185  011E24  6EE6               	movwf	postinc1,c
  2186  011E26  0EFF               	movlw	high STR_1
  2187  011E28  6EE6               	movwf	postinc1,c
  2188  011E2A  0E00               	movlw	0
  2189  011E2C  6EE6               	movwf	postinc1,c
  2190  011E2E  0E00               	movlw	0
  2191  011E30  6EE6               	movwf	postinc1,c
  2192  011E32  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2193  011E36  0060  F0CB  FFE6   	movff	btemp,postinc1
  2194  011E3C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2195  011E42  0E04               	movlw	4
  2196  011E44  6EE6               	movwf	postinc1,c
  2197  011E46  ECB2  F0B7         	call	_sprintf	;wreg free
  2198                           
  2199                           ;main.c: 218:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.993");
  2200  011E4A  0EE0               	movlw	low STR_3
  2201  011E4C  6EE6               	movwf	postinc1,c
  2202  011E4E  0EFF               	movlw	high STR_3
  2203  011E50  6EE6               	movwf	postinc1,c
  2204  011E52  0EB2               	movlw	low STR_2
  2205  011E54  6EE6               	movwf	postinc1,c
  2206  011E56  0EFF               	movlw	high STR_2
  2207  011E58  6EE6               	movwf	postinc1,c
  2208  011E5A  0E00               	movlw	0
  2209  011E5C  6EE6               	movwf	postinc1,c
  2210  011E5E  0E01               	movlw	1
  2211  011E60  6EE6               	movwf	postinc1,c
  2212  011E62  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2213  011E66  0060  F0CB  FFE6   	movff	btemp,postinc1
  2214  011E6C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2215  011E72  0E06               	movlw	6
  2216  011E74  6EE6               	movwf	postinc1,c
  2217  011E76  ECB2  F0B7         	call	_sprintf	;wreg free
  2218                           
  2219                           ;main.c: 219:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2220  011E7A  0E4F               	movlw	low STR_4
  2221  011E7C  6EE6               	movwf	postinc1,c
  2222  011E7E  0EFF               	movlw	high STR_4
  2223  011E80  6EE6               	movwf	postinc1,c
  2224  011E82  0E00               	movlw	0
  2225  011E84  6EE6               	movwf	postinc1,c
  2226  011E86  0E02               	movlw	2
  2227  011E88  6EE6               	movwf	postinc1,c
  2228  011E8A  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2229  011E8E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2230  011E94  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2231  011E9A  0E04               	movlw	4
  2232  011E9C  6EE6               	movwf	postinc1,c
  2233  011E9E  ECB2  F0B7         	call	_sprintf	;wreg free
  2234                           
  2235                           ;main.c: 220:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2236  011EA2  0E71               	movlw	low STR_5
  2237  011EA4  6EE6               	movwf	postinc1,c
  2238  011EA6  0EFF               	movlw	high STR_5
  2239  011EA8  6EE6               	movwf	postinc1,c
  2240  011EAA  0E02               	movlw	2
  2241  011EAC  6EE6               	movwf	postinc1,c
  2242  011EAE  0E00               	movlw	0
  2243  011EB0  6EE6               	movwf	postinc1,c
  2244  011EB2  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2245  011EB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2246  011EBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2247  011EC2  0E04               	movlw	4
  2248  011EC4  6EE6               	movwf	postinc1,c
  2249  011EC6  ECB2  F0B7         	call	_sprintf	;wreg free
  2250                           
  2251                           ;main.c: 221:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.993");
  2252  011ECA  0EE0               	movlw	low STR_3
  2253  011ECC  6EE6               	movwf	postinc1,c
  2254  011ECE  0EFF               	movlw	high STR_3
  2255  011ED0  6EE6               	movwf	postinc1,c
  2256  011ED2  0EB2               	movlw	low STR_2
  2257  011ED4  6EE6               	movwf	postinc1,c
  2258  011ED6  0EFF               	movlw	high STR_2
  2259  011ED8  6EE6               	movwf	postinc1,c
  2260  011EDA  0E02               	movlw	2
  2261  011EDC  6EE6               	movwf	postinc1,c
  2262  011EDE  0E01               	movlw	1
  2263  011EE0  6EE6               	movwf	postinc1,c
  2264  011EE2  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2265  011EE6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2266  011EEC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2267  011EF2  0E06               	movlw	6
  2268  011EF4  6EE6               	movwf	postinc1,c
  2269  011EF6  ECB2  F0B7         	call	_sprintf	;wreg free
  2270                           
  2271                           ;main.c: 222:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2272  011EFA  0E3E               	movlw	low STR_8
  2273  011EFC  6EE6               	movwf	postinc1,c
  2274  011EFE  0EFF               	movlw	high STR_8
  2275  011F00  6EE6               	movwf	postinc1,c
  2276  011F02  0E02               	movlw	2
  2277  011F04  6EE6               	movwf	postinc1,c
  2278  011F06  0E02               	movlw	2
  2279  011F08  6EE6               	movwf	postinc1,c
  2280  011F0A  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2281  011F0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2282  011F14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2283  011F1A  0E04               	movlw	4
  2284  011F1C  6EE6               	movwf	postinc1,c
  2285  011F1E  ECB2  F0B7         	call	_sprintf	;wreg free
  2286                           
  2287                           ;main.c: 223:    update_lcd(0);
  2288  011F22  0E00               	movlw	0
  2289  011F24  6EE6               	movwf	postinc1,c
  2290  011F26  EC2B  F0B7         	call	_update_lcd	;wreg free
  2291                           
  2292                           ;main.c: 224:    WaitMs(3000);
  2293  011F2A  0EB8               	movlw	184
  2294  011F2C  6EE6               	movwf	postinc1,c
  2295  011F2E  0E0B               	movlw	11
  2296  011F30  6EE6               	movwf	postinc1,c
  2297  011F32  ECD7  F0C2         	call	_WaitMs	;wreg free
  2298                           
  2299                           ;main.c: 225:    StartTimer(TMR_DISPLAY, 250);
  2300  011F36  0EFA               	movlw	250
  2301  011F38  6EE6               	movwf	postinc1,c
  2302  011F3A  0E00               	movlw	0
  2303  011F3C  6EE6               	movwf	postinc1,c
  2304  011F3E  0E0A               	movlw	10
  2305  011F40  6EE6               	movwf	postinc1,c
  2306  011F42  EC9D  F0C2         	call	_StartTimer	;wreg free
  2307                           
  2308                           ;main.c: 226:    StartTimer(TMR_ADC, 200);
  2309  011F46  0EC8               	movlw	200
  2310  011F48  6EE6               	movwf	postinc1,c
  2311  011F4A  0E00               	movlw	0
  2312  011F4C  6EE6               	movwf	postinc1,c
  2313  011F4E  0E01               	movlw	1
  2314  011F50  6EE6               	movwf	postinc1,c
  2315  011F52  EC9D  F0C2         	call	_StartTimer	;wreg free
  2316                           
  2317                           ;main.c: 227:    StartTimer(TMR_INFO, 3000);
  2318  011F56  0EB8               	movlw	184
  2319  011F58  6EE6               	movwf	postinc1,c
  2320  011F5A  0E0B               	movlw	11
  2321  011F5C  6EE6               	movwf	postinc1,c
  2322  011F5E  0E07               	movlw	7
  2323  011F60  6EE6               	movwf	postinc1,c
  2324  011F62  EC9D  F0C2         	call	_StartTimer	;wreg free
  2325                           
  2326                           ;main.c: 228:    StartTimer(TMR_FLIPPER, 1500);
  2327  011F66  0EDC               	movlw	220
  2328  011F68  6EE6               	movwf	postinc1,c
  2329  011F6A  0E05               	movlw	5
  2330  011F6C  6EE6               	movwf	postinc1,c
  2331  011F6E  0E0B               	movlw	11
  2332  011F70  6EE6               	movwf	postinc1,c
  2333  011F72  EC9D  F0C2         	call	_StartTimer	;wreg free
  2334                           
  2335                           ;main.c: 229:    StartTimer(TMR_HELPDIS, 3000);
  2336  011F76  0EB8               	movlw	184
  2337  011F78  6EE6               	movwf	postinc1,c
  2338  011F7A  0E0B               	movlw	11
  2339  011F7C  6EE6               	movwf	postinc1,c
  2340  011F7E  0E09               	movlw	9
  2341  011F80  6EE6               	movwf	postinc1,c
  2342  011F82  EC9D  F0C2         	call	_StartTimer	;wreg free
  2343                           
  2344                           ;main.c: 231:    start_adc_scan();
  2345  011F86  EC79  F0BF         	call	_start_adc_scan	;wreg free
  2346                           
  2347                           ;main.c: 232:    start_switch_handler();
  2348  011F8A  ECF5  F0C5         	call	_start_switch_handler	;wreg free
  2349                           
  2350                           ;main.c: 234:    break;
  2351  011F8E  D01C               	goto	l10808
  2352  011F90                     l1264:
  2353                           
  2354                           ; BSR set to: 2
  2355                           ;main.c: 240:    P.SYSTEM_STABLE = 1;
  2356  011F90  0100               	movlb	0	; () banked
  2357  011F92  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2358                           
  2359                           ;main.c: 241:    break;
  2360  011F94  D019               	goto	l10808
  2361  011F96                     l1266:
  2362                           
  2363                           ; BSR set to: 2
  2364                           ;main.c: 244:    V.ui_state = UI_STATE_INIT;
  2365  011F96  6B00               	clrf	_V& (0+255),b	;volatile
  2366                           
  2367                           ;main.c: 245:    break;
  2368  011F98  D017               	goto	l10808
  2369  011F9A                     l10806:
  2370  011F9A  0102               	movlb	2	; () banked
  2371  011F9C  5100               	movf	_V& (0+255),w,b	;volatile
  2372  011F9E  6E3C               	movwf	(btemp+10)^0,c
  2373  011FA0  6A3D               	clrf	(btemp+11)^0,c
  2374                           
  2375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2376                           ; Switch size 1, requested type "simple"
  2377                           ; Number of cases is 1, Range of values is 0 to 0
  2378                           ; switch strategies available:
  2379                           ; Name         Instructions Cycles
  2380                           ; simple_byte            4     3 (average)
  2381                           ;	Chosen strategy is simple_byte
  2382  011FA2  503D               	movf	(btemp+11)^0,w,c
  2383  011FA4  0A00               	xorlw	0	; case 0
  2384  011FA6  A4D8               	btfss	status,2,c
  2385  011FA8  D7F6               	goto	l1266
  2386                           
  2387                           ; BSR set to: 2
  2388                           ; Switch size 1, requested type "simple"
  2389                           ; Number of cases is 5, Range of values is 0 to 5
  2390                           ; switch strategies available:
  2391                           ; Name         Instructions Cycles
  2392                           ; simple_byte           16     9 (average)
  2393                           ;	Chosen strategy is simple_byte
  2394  011FAA  503C               	movf	(btemp+10)^0,w,c
  2395  011FAC  0A00               	xorlw	0	; case 0
  2396  011FAE  B4D8               	btfsc	status,2,c
  2397  011FB0  D724               	goto	l10764
  2398  011FB2  0A01               	xorlw	1	; case 1
  2399  011FB4  B4D8               	btfsc	status,2,c
  2400  011FB6  D008               	goto	l10808
  2401  011FB8  0A02               	xorlw	2	; case 3
  2402  011FBA  B4D8               	btfsc	status,2,c
  2403  011FBC  D005               	goto	l10808
  2404  011FBE  0A07               	xorlw	7	; case 4
  2405  011FC0  B4D8               	btfsc	status,2,c
  2406  011FC2  D7E6               	goto	l1264
  2407  011FC4  0A01               	xorlw	1	; case 5
  2408  011FC6  D7E7               	goto	l1266
  2409  011FC8                     l10808:
  2410                           
  2411                           ;main.c: 248:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2412  011FC8  0E01               	movlw	1
  2413  011FCA  6EE6               	movwf	postinc1,c
  2414  011FCC  EC9D  F0C5         	call	_TimerDone	;wreg free
  2415  011FD0  5032               	movf	btemp^0,w,c
  2416  011FD2  B4D8               	btfsc	status,2,c
  2417  011FD4  D013               	goto	l10820
  2418  011FD6  EC27  F0C7         	call	_check_adc_scan	;wreg free
  2419  011FDA  5032               	movf	btemp^0,w,c
  2420  011FDC  B4D8               	btfsc	status,2,c
  2421  011FDE  D00E               	goto	l10820
  2422                           
  2423                           ;main.c: 252:    convert_adc_data();
  2424  011FE0  ECD1  F0BA         	call	_convert_adc_data	;wreg free
  2425                           
  2426                           ;main.c: 256:    clear_adc_scan();
  2427  011FE4  EC2F  F0C7         	call	_clear_adc_scan	;wreg free
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 257:    start_adc_scan();
  2431  011FE8  EC79  F0BF         	call	_start_adc_scan	;wreg free
  2432                           
  2433                           ;main.c: 258:    StartTimer(TMR_ADC, 200);
  2434  011FEC  0EC8               	movlw	200
  2435  011FEE  6EE6               	movwf	postinc1,c
  2436  011FF0  0E00               	movlw	0
  2437  011FF2  6EE6               	movwf	postinc1,c
  2438  011FF4  0E01               	movlw	1
  2439  011FF6  6EE6               	movwf	postinc1,c
  2440  011FF8  EC9D  F0C2         	call	_StartTimer	;wreg free
  2441  011FFC                     l10820:
  2442                           
  2443                           ;main.c: 265:   if (TimerDone(TMR_DISPLAY)) {
  2444                           
  2445                           ;main.c: 261:   if (V.ticks) {
  2446  011FFC  0E0A               	movlw	10
  2447  011FFE  6EE6               	movwf	postinc1,c
  2448  012000  EC9D  F0C5         	call	_TimerDone	;wreg free
  2449  012004  5032               	movf	btemp^0,w,c
  2450  012006  B4D8               	btfsc	status,2,c
  2451  012008  D25B               	goto	l10862
  2452                           
  2453                           ;main.c: 266:    if (TimerDone(TMR_HELPDIS)) {
  2454  01200A  0E09               	movlw	9
  2455  01200C  6EE6               	movwf	postinc1,c
  2456  01200E  EC9D  F0C5         	call	_TimerDone	;wreg free
  2457  012012  5032               	movf	btemp^0,w,c
  2458  012014  B4D8               	btfsc	status,2,c
  2459  012016  D004               	goto	l10828
  2460                           
  2461                           ;main.c: 267:     set_display_info(DIS_STR);
  2462  012018  0E00               	movlw	0
  2463  01201A  6EE6               	movwf	postinc1,c
  2464  01201C  EC23  F0C6         	call	_set_display_info	;wreg free
  2465  012020                     l10828:
  2466                           
  2467                           ;main.c: 269:    calc_model_data();
  2468  012020  EC37  F0A7         	call	_calc_model_data	;wreg free
  2469                           
  2470                           ; BSR set to: 1
  2471                           ;main.c: 276:     hid_display(&H);
  2472                           
  2473                           ;main.c: 271:    if (0) {
  2474  012024  0EEF               	movlw	_H& (0+255)
  2475  012026  6EE6               	movwf	postinc1,c
  2476  012028  EC37  F0B8         	call	_hid_display	;wreg free
  2477                           
  2478                           ;main.c: 277:     switch (H.hid_display) {
  2479  01202C  D224               	goto	l10854
  2480  01202E                     l1274:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;main.c: 279:      V.calib = 0;
  2484  01202E  0102               	movlb	2	; () banked
  2485  012030  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2486                           
  2487                           ; BSR set to: 2
  2488                           ;main.c: 280:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2489  012032  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2490  012038  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2491  01203E  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2492  012044  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2493  01204A  0EB9               	movlw	low STR_12
  2494  01204C  6EE6               	movwf	postinc1,c
  2495  01204E  0EFE               	movlw	high STR_12
  2496  012050  6EE6               	movwf	postinc1,c
  2497  012052  0E00               	movlw	0
  2498  012054  6EE6               	movwf	postinc1,c
  2499  012056  0E00               	movlw	0
  2500  012058  6EE6               	movwf	postinc1,c
  2501  01205A  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2502  01205E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2503  012064  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2504  01206A  0E08               	movlw	8
  2505  01206C  6EE6               	movwf	postinc1,c
  2506  01206E  ECB2  F0B7         	call	_sprintf	;wreg free
  2507                           
  2508                           ;main.c: 281:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2509  012072  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2510  012078  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2511  01207E  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2512  012084  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2513  01208A  0EF2               	movlw	low STR_13
  2514  01208C  6EE6               	movwf	postinc1,c
  2515  01208E  0EFE               	movlw	high STR_13
  2516  012090  6EE6               	movwf	postinc1,c
  2517  012092  0E00               	movlw	0
  2518  012094  6EE6               	movwf	postinc1,c
  2519  012096  0E01               	movlw	1
  2520  012098  6EE6               	movwf	postinc1,c
  2521  01209A  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2522  01209E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2523  0120A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2524  0120AA  0E08               	movlw	8
  2525  0120AC  6EE6               	movwf	postinc1,c
  2526  0120AE  ECB2  F0B7         	call	_sprintf	;wreg free
  2527                           
  2528                           ;main.c: 282:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2529  0120B2  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2530  0120B8  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2531  0120BE  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2532  0120C4  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2533  0120CA  0EDF               	movlw	low STR_14
  2534  0120CC  6EE6               	movwf	postinc1,c
  2535  0120CE  0EFE               	movlw	high STR_14
  2536  0120D0  6EE6               	movwf	postinc1,c
  2537  0120D2  0E00               	movlw	0
  2538  0120D4  6EE6               	movwf	postinc1,c
  2539  0120D6  0E02               	movlw	2
  2540  0120D8  6EE6               	movwf	postinc1,c
  2541  0120DA  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2542  0120DE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2543  0120E4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2544  0120EA  0E08               	movlw	8
  2545  0120EC  6EE6               	movwf	postinc1,c
  2546  0120EE  ECB2  F0B7         	call	_sprintf	;wreg free
  2547                           
  2548                           ;main.c: 283:      break;
  2549  0120F2  D1D6               	goto	l10856
  2550  0120F4                     l1276:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;main.c: 285:      V.calib = 0;
  2554  0120F4  0102               	movlb	2	; () banked
  2555  0120F6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2556                           
  2557                           ; BSR set to: 2
  2558                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2559  0120F8  0060  F413  FFE6   	movff	_C+4,postinc1
  2560  0120FE  0060  F417  FFE6   	movff	_C+5,postinc1
  2561  012104  0060  F41B  FFE6   	movff	_C+6,postinc1
  2562  01210A  0060  F41F  FFE6   	movff	_C+7,postinc1
  2563  012110  0060  F453  FFE6   	movff	_C+20,postinc1
  2564  012116  0060  F457  FFE6   	movff	_C+21,postinc1
  2565  01211C  0060  F45B  FFE6   	movff	_C+22,postinc1
  2566  012122  0060  F45F  FFE6   	movff	_C+23,postinc1
  2567  012128  0E2B               	movlw	low STR_15
  2568  01212A  6EE6               	movwf	postinc1,c
  2569  01212C  0EFF               	movlw	high STR_15
  2570  01212E  6EE6               	movwf	postinc1,c
  2571  012130  0E00               	movlw	0
  2572  012132  6EE6               	movwf	postinc1,c
  2573  012134  0E00               	movlw	0
  2574  012136  6EE6               	movwf	postinc1,c
  2575  012138  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2576  01213C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2577  012142  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2578  012148  0E0C               	movlw	12
  2579  01214A  6EE6               	movwf	postinc1,c
  2580  01214C  ECB2  F0B7         	call	_sprintf	;wreg free
  2581                           
  2582                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2583  012150  0060  F403  FFE6   	movff	_C,postinc1
  2584  012156  0060  F407  FFE6   	movff	_C+1,postinc1
  2585  01215C  0060  F40B  FFE6   	movff	_C+2,postinc1
  2586  012162  0060  F40F  FFE6   	movff	_C+3,postinc1
  2587  012168  0060  F443  FFE6   	movff	_C+16,postinc1
  2588  01216E  0060  F447  FFE6   	movff	_C+17,postinc1
  2589  012174  0060  F44B  FFE6   	movff	_C+18,postinc1
  2590  01217A  0060  F44F  FFE6   	movff	_C+19,postinc1
  2591  012180  0E05               	movlw	low STR_16
  2592  012182  6EE6               	movwf	postinc1,c
  2593  012184  0EFF               	movlw	high STR_16
  2594  012186  6EE6               	movwf	postinc1,c
  2595  012188  0E00               	movlw	0
  2596  01218A  6EE6               	movwf	postinc1,c
  2597  01218C  0E01               	movlw	1
  2598  01218E  6EE6               	movwf	postinc1,c
  2599  012190  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2600  012194  0060  F0CB  FFE6   	movff	btemp,postinc1
  2601  01219A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2602  0121A0  0E0C               	movlw	12
  2603  0121A2  6EE6               	movwf	postinc1,c
  2604  0121A4  ECB2  F0B7         	call	_sprintf	;wreg free
  2605                           
  2606                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2607  0121A8  0060  F503  FFE6   	movff	_C+64,postinc1
  2608  0121AE  0060  F507  FFE6   	movff	_C+65,postinc1
  2609  0121B4  0060  F50B  FFE6   	movff	_C+66,postinc1
  2610  0121BA  0060  F50F  FFE6   	movff	_C+67,postinc1
  2611  0121C0  0060  F423  FFE6   	movff	_C+8,postinc1
  2612  0121C6  0060  F427  FFE6   	movff	_C+9,postinc1
  2613  0121CC  0060  F42B  FFE6   	movff	_C+10,postinc1
  2614  0121D2  0060  F42F  FFE6   	movff	_C+11,postinc1
  2615  0121D8  0E18               	movlw	low STR_17
  2616  0121DA  6EE6               	movwf	postinc1,c
  2617  0121DC  0EFF               	movlw	high STR_17
  2618  0121DE  6EE6               	movwf	postinc1,c
  2619  0121E0  0E00               	movlw	0
  2620  0121E2  6EE6               	movwf	postinc1,c
  2621  0121E4  0E02               	movlw	2
  2622  0121E6  6EE6               	movwf	postinc1,c
  2623  0121E8  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2624  0121EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2625  0121F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2626  0121F8  0E0C               	movlw	12
  2627  0121FA  6EE6               	movwf	postinc1,c
  2628  0121FC  ECB2  F0B7         	call	_sprintf	;wreg free
  2629                           
  2630                           ;main.c: 289:      break;
  2631  012200  D14F               	goto	l10856
  2632  012202                     l1277:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;main.c: 291:      V.calib = 0;
  2636  012202  0102               	movlb	2	; () banked
  2637  012204  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2638                           
  2639                           ; BSR set to: 2
  2640                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2641  012206  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2642  01220C  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2643  012212  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2644  012218  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2645  01221E  0ECC               	movlw	low STR_18
  2646  012220  6EE6               	movwf	postinc1,c
  2647  012222  0EFE               	movlw	high STR_18
  2648  012224  6EE6               	movwf	postinc1,c
  2649  012226  0E00               	movlw	0
  2650  012228  6EE6               	movwf	postinc1,c
  2651  01222A  0E00               	movlw	0
  2652  01222C  6EE6               	movwf	postinc1,c
  2653  01222E  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2654  012232  0060  F0CB  FFE6   	movff	btemp,postinc1
  2655  012238  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2656  01223E  0E08               	movlw	8
  2657  012240  6EE6               	movwf	postinc1,c
  2658  012242  ECB2  F0B7         	call	_sprintf	;wreg free
  2659                           
  2660                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "RUN               ");
  2661  012246  0EA6               	movlw	low STR_19
  2662  012248  6EE6               	movwf	postinc1,c
  2663  01224A  0EFE               	movlw	high STR_19
  2664  01224C  6EE6               	movwf	postinc1,c
  2665  01224E  0E00               	movlw	0
  2666  012250  6EE6               	movwf	postinc1,c
  2667  012252  0E01               	movlw	1
  2668  012254  6EE6               	movwf	postinc1,c
  2669  012256  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2670  01225A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2671  012260  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2672  012266  0E04               	movlw	4
  2673  012268  6EE6               	movwf	postinc1,c
  2674  01226A  ECB2  F0B7         	call	_sprintf	;wreg free
  2675                           
  2676                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "RUN               ");
  2677  01226E  0EA6               	movlw	low STR_19
  2678  012270  6EE6               	movwf	postinc1,c
  2679  012272  0EFE               	movlw	high STR_19
  2680  012274  6EE6               	movwf	postinc1,c
  2681  012276  0E00               	movlw	0
  2682  012278  6EE6               	movwf	postinc1,c
  2683  01227A  0E02               	movlw	2
  2684  01227C  6EE6               	movwf	postinc1,c
  2685  01227E  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2686  012282  0060  F0CB  FFE6   	movff	btemp,postinc1
  2687  012288  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2688  01228E  0E04               	movlw	4
  2689  012290  6EE6               	movwf	postinc1,c
  2690  012292  ECB2  F0B7         	call	_sprintf	;wreg free
  2691                           
  2692                           ;main.c: 295:      break;
  2693  012296  D104               	goto	l10856
  2694  012298                     l10840:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 297:      if (!V.calib) {
  2698  012298  0102               	movlb	2	; () banked
  2699  01229A  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2700  01229C  A4D8               	btfss	status,2,c
  2701  01229E  D02D               	goto	l10844
  2702                           
  2703                           ; BSR set to: 2
  2704                           ;main.c: 298:       lp_filter(0.0, i, -1);
  2705  0122A0  0EFF               	movlw	255
  2706  0122A2  6EE6               	movwf	postinc1,c
  2707                           
  2708                           ;stkvar	_i @ sp[(-6)+2]
  2709  0122A4  0EFC               	movlw	-4
  2710  0122A6  50E3               	movf	plusw1,w,c
  2711  0122A8  6EE6               	movwf	postinc1,c
  2712  0122AA  0E00               	movlw	0
  2713  0122AC  6EE6               	movwf	postinc1,c
  2714  0122AE  0E00               	movlw	0
  2715  0122B0  6EE6               	movwf	postinc1,c
  2716  0122B2  0E00               	movlw	0
  2717  0122B4  6EE6               	movwf	postinc1,c
  2718  0122B6  0E00               	movlw	0
  2719  0122B8  6EE6               	movwf	postinc1,c
  2720  0122BA  EC8C  F0B0         	call	_lp_filter	;wreg free
  2721                           
  2722                           ;main.c: 299:       lp_filter(0.0, j, -1);
  2723  0122BE  0EFF               	movlw	255
  2724  0122C0  6EE6               	movwf	postinc1,c
  2725                           
  2726                           ;stkvar	_j @ sp[(-6)+1]
  2727  0122C2  0EFB               	movlw	-5
  2728  0122C4  50E3               	movf	plusw1,w,c
  2729  0122C6  6EE6               	movwf	postinc1,c
  2730  0122C8  0E00               	movlw	0
  2731  0122CA  6EE6               	movwf	postinc1,c
  2732  0122CC  0E00               	movlw	0
  2733  0122CE  6EE6               	movwf	postinc1,c
  2734  0122D0  0E00               	movlw	0
  2735  0122D2  6EE6               	movwf	postinc1,c
  2736  0122D4  0E00               	movlw	0
  2737  0122D6  6EE6               	movwf	postinc1,c
  2738  0122D8  EC8C  F0B0         	call	_lp_filter	;wreg free
  2739                           
  2740                           ;main.c: 300:       lp_filter(0.0, k, -1);
  2741  0122DC  0EFF               	movlw	255
  2742  0122DE  6EE6               	movwf	postinc1,c
  2743                           
  2744                           ;stkvar	_k @ sp[(-6)+0]
  2745  0122E0  0EFA               	movlw	-6
  2746  0122E2  50E3               	movf	plusw1,w,c
  2747  0122E4  6EE6               	movwf	postinc1,c
  2748  0122E6  0E00               	movlw	0
  2749  0122E8  6EE6               	movwf	postinc1,c
  2750  0122EA  0E00               	movlw	0
  2751  0122EC  6EE6               	movwf	postinc1,c
  2752  0122EE  0E00               	movlw	0
  2753  0122F0  6EE6               	movwf	postinc1,c
  2754  0122F2  0E00               	movlw	0
  2755  0122F4  6EE6               	movwf	postinc1,c
  2756  0122F6  EC8C  F0B0         	call	_lp_filter	;wreg free
  2757  0122FA                     l10844:
  2758                           
  2759                           ;main.c: 302:      V.calib = 1;
  2760  0122FA  0E01               	movlw	1
  2761  0122FC  0102               	movlb	2	; () banked
  2762  0122FE  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2763                           
  2764                           ; BSR set to: 2
  2765                           ;main.c: 303:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2766  012300  0E02               	movlw	2
  2767  012302  6EE6               	movwf	postinc1,c
  2768  012304  EC4B  F0C4         	call	_get_switch	;wreg free
  2769  012308  5032               	movf	btemp^0,w,c
  2770  01230A  6EE6               	movwf	postinc1,c
  2771  01230C  0E00               	movlw	0
  2772  01230E  6EE6               	movwf	postinc1,c
  2773                           
  2774                           ;stkvar	_i @ sp[(-7)+2]
  2775  012310  0EFB               	movlw	-5
  2776  012312  50E3               	movf	plusw1,w,c
  2777  012314  0D04               	mullw	4
  2778  012316  0E00               	movlw	low _C
  2779  012318  24F3               	addwf	243,w,c
  2780  01231A  6ED9               	movwf	fsr2l,c
  2781  01231C  0E01               	movlw	high _C
  2782  01231E  20F4               	addwfc	prodh,w,c
  2783  012320  6EDA               	movwf	fsr2h,c
  2784  012322  006F FF7B FFE6     	movff	postinc2,postinc1
  2785  012328  006F FF7B FFE6     	movff	postinc2,postinc1
  2786  01232E  006F FF7B FFE6     	movff	postinc2,postinc1
  2787  012334  006F FF7B FFE6     	movff	postinc2,postinc1
  2788                           
  2789                           ;stkvar	_i @ sp[(-11)+2]
  2790  01233A  0EF7               	movlw	-9
  2791  01233C  50E3               	movf	plusw1,w,c
  2792  01233E  6EE6               	movwf	postinc1,c
  2793  012340  EC14  F0C6         	call	_get_raw_result	;wreg free
  2794  012344  0060  F0CB  FFE6   	movff	btemp,postinc1
  2795  01234A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2796  012350  0E93               	movlw	low STR_9
  2797  012352  6EE6               	movwf	postinc1,c
  2798  012354  0EFF               	movlw	high STR_9
  2799  012356  6EE6               	movwf	postinc1,c
  2800  012358  0E00               	movlw	0
  2801  01235A  6EE6               	movwf	postinc1,c
  2802  01235C  0E00               	movlw	0
  2803  01235E  6EE6               	movwf	postinc1,c
  2804  012360  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2805  012364  0060  F0CB  FFE6   	movff	btemp,postinc1
  2806  01236A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2807  012370  0E0C               	movlw	12
  2808  012372  6EE6               	movwf	postinc1,c
  2809  012374  ECB2  F0B7         	call	_sprintf	;wreg free
  2810                           
  2811                           ;main.c: 304:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  2812  012378  0E03               	movlw	3
  2813  01237A  6EE6               	movwf	postinc1,c
  2814  01237C  EC4B  F0C4         	call	_get_switch	;wreg free
  2815  012380  5032               	movf	btemp^0,w,c
  2816  012382  6EE6               	movwf	postinc1,c
  2817  012384  0E00               	movlw	0
  2818  012386  6EE6               	movwf	postinc1,c
  2819                           
  2820                           ;stkvar	_j @ sp[(-7)+1]
  2821  012388  0EFA               	movlw	-6
  2822  01238A  50E3               	movf	plusw1,w,c
  2823  01238C  0D04               	mullw	4
  2824  01238E  0E00               	movlw	low _C
  2825  012390  24F3               	addwf	243,w,c
  2826  012392  6ED9               	movwf	fsr2l,c
  2827  012394  0E01               	movlw	high _C
  2828  012396  20F4               	addwfc	prodh,w,c
  2829  012398  6EDA               	movwf	fsr2h,c
  2830  01239A  006F FF7B FFE6     	movff	postinc2,postinc1
  2831  0123A0  006F FF7B FFE6     	movff	postinc2,postinc1
  2832  0123A6  006F FF7B FFE6     	movff	postinc2,postinc1
  2833  0123AC  006F FF7B FFE6     	movff	postinc2,postinc1
  2834                           
  2835                           ;stkvar	_j @ sp[(-11)+1]
  2836  0123B2  0EF6               	movlw	-10
  2837  0123B4  50E3               	movf	plusw1,w,c
  2838  0123B6  6EE6               	movwf	postinc1,c
  2839  0123B8  EC14  F0C6         	call	_get_raw_result	;wreg free
  2840  0123BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2841  0123C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2842  0123C8  0E93               	movlw	low STR_9
  2843  0123CA  6EE6               	movwf	postinc1,c
  2844  0123CC  0EFF               	movlw	high STR_9
  2845  0123CE  6EE6               	movwf	postinc1,c
  2846  0123D0  0E00               	movlw	0
  2847  0123D2  6EE6               	movwf	postinc1,c
  2848  0123D4  0E01               	movlw	1
  2849  0123D6  6EE6               	movwf	postinc1,c
  2850  0123D8  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2851  0123DC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2852  0123E2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2853  0123E8  0E0C               	movlw	12
  2854  0123EA  6EE6               	movwf	postinc1,c
  2855  0123EC  ECB2  F0B7         	call	_sprintf	;wreg free
  2856                           
  2857                           ;main.c: 305:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  2858                           ;stkvar	_inp_index @ sp[(-5)+3]
  2859  0123F0  0EFE               	movlw	-2
  2860  0123F2  50E3               	movf	plusw1,w,c
  2861  0123F4  6E3C               	movwf	(btemp+10)^0,c
  2862  0123F6  6A3D               	clrf	(btemp+11)^0,c
  2863  0123F8  0E01               	movlw	1
  2864  0123FA  263C               	addwf	(btemp+10)^0,f,c
  2865  0123FC  0E00               	movlw	0
  2866  0123FE  223D               	addwfc	(btemp+11)^0,f,c
  2867  012400  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  2868  012406  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  2869                           
  2870                           ;stkvar	_k @ sp[(-7)+0]
  2871  01240C  0EF9               	movlw	-7
  2872  01240E  50E3               	movf	plusw1,w,c
  2873  012410  0D04               	mullw	4
  2874  012412  0E00               	movlw	low _C
  2875  012414  24F3               	addwf	243,w,c
  2876  012416  6ED9               	movwf	fsr2l,c
  2877  012418  0E01               	movlw	high _C
  2878  01241A  20F4               	addwfc	prodh,w,c
  2879  01241C  6EDA               	movwf	fsr2h,c
  2880  01241E  006F FF7B FFE6     	movff	postinc2,postinc1
  2881  012424  006F FF7B FFE6     	movff	postinc2,postinc1
  2882  01242A  006F FF7B FFE6     	movff	postinc2,postinc1
  2883  012430  006F FF7B FFE6     	movff	postinc2,postinc1
  2884                           
  2885                           ;stkvar	_k @ sp[(-11)+0]
  2886  012436  0EF5               	movlw	-11
  2887  012438  50E3               	movf	plusw1,w,c
  2888  01243A  6EE6               	movwf	postinc1,c
  2889  01243C  EC14  F0C6         	call	_get_raw_result	;wreg free
  2890  012440  0060  F0CB  FFE6   	movff	btemp,postinc1
  2891  012446  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2892  01244C  0E82               	movlw	low STR_11
  2893  01244E  6EE6               	movwf	postinc1,c
  2894  012450  0EFF               	movlw	high STR_11
  2895  012452  6EE6               	movwf	postinc1,c
  2896  012454  0E00               	movlw	0
  2897  012456  6EE6               	movwf	postinc1,c
  2898  012458  0E02               	movlw	2
  2899  01245A  6EE6               	movwf	postinc1,c
  2900  01245C  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  2901  012460  0060  F0CB  FFE6   	movff	btemp,postinc1
  2902  012466  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2903  01246C  0E0C               	movlw	12
  2904  01246E  6EE6               	movwf	postinc1,c
  2905  012470  ECB2  F0B7         	call	_sprintf	;wreg free
  2906                           
  2907                           ;main.c: 306:      break;
  2908  012474  D015               	goto	l10856
  2909  012476                     l10854:
  2910  012476  0100               	movlb	0	; () banked
  2911  012478  51EF               	movf	_H& (0+255),w,b
  2912  01247A  6E3C               	movwf	(btemp+10)^0,c
  2913  01247C  6A3D               	clrf	(btemp+11)^0,c
  2914                           
  2915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2916                           ; Switch size 1, requested type "simple"
  2917                           ; Number of cases is 1, Range of values is 0 to 0
  2918                           ; switch strategies available:
  2919                           ; Name         Instructions Cycles
  2920                           ; simple_byte            4     3 (average)
  2921                           ;	Chosen strategy is simple_byte
  2922  01247E  503D               	movf	(btemp+11)^0,w,c
  2923  012480  0A00               	xorlw	0	; case 0
  2924  012482  A4D8               	btfss	status,2,c
  2925  012484  D00D               	goto	l10856
  2926                           
  2927                           ; BSR set to: 0
  2928                           ; Switch size 1, requested type "simple"
  2929                           ; Number of cases is 4, Range of values is 0 to 3
  2930                           ; switch strategies available:
  2931                           ; Name         Instructions Cycles
  2932                           ; simple_byte           13     7 (average)
  2933                           ;	Chosen strategy is simple_byte
  2934  012486  503C               	movf	(btemp+10)^0,w,c
  2935  012488  0A00               	xorlw	0	; case 0
  2936  01248A  B4D8               	btfsc	status,2,c
  2937  01248C  D633               	goto	l1276
  2938  01248E  0A01               	xorlw	1	; case 1
  2939  012490  B4D8               	btfsc	status,2,c
  2940  012492  D5CD               	goto	l1274
  2941  012494  0A03               	xorlw	3	; case 2
  2942  012496  B4D8               	btfsc	status,2,c
  2943  012498  D6B4               	goto	l1277
  2944  01249A  0A01               	xorlw	1	; case 3
  2945  01249C  B4D8               	btfsc	status,2,c
  2946  01249E  D6FC               	goto	l10840
  2947  0124A0                     l10856:
  2948                           
  2949                           ;main.c: 310:     clear_hid_pflags(&H);
  2950  0124A0  0EEF               	movlw	_H& (0+255)
  2951  0124A2  6EE6               	movwf	postinc1,c
  2952  0124A4  EC8B  F0C5         	call	_clear_hid_pflags	;wreg free
  2953                           
  2954                           ;main.c: 312:    StartTimer(TMR_DISPLAY, 250);
  2955  0124A8  0EFA               	movlw	250
  2956  0124AA  6EE6               	movwf	postinc1,c
  2957  0124AC  0E00               	movlw	0
  2958  0124AE  6EE6               	movwf	postinc1,c
  2959  0124B0  0E0A               	movlw	10
  2960  0124B2  6EE6               	movwf	postinc1,c
  2961  0124B4  EC9D  F0C2         	call	_StartTimer	;wreg free
  2962                           
  2963                           ;main.c: 313:    update_lcd(0);
  2964  0124B8  0E00               	movlw	0
  2965  0124BA  6EE6               	movwf	postinc1,c
  2966  0124BC  EC2B  F0B7         	call	_update_lcd	;wreg free
  2967  0124C0                     l10862:
  2968                           
  2969                           ;main.c: 319:   if (check_help(V.flipper)) {
  2970  0124C0  0102               	movlb	2	; () banked
  2971  0124C2  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2972  0124C4  6EE6               	movwf	postinc1,c
  2973  0124C6  EC92  F0AD         	call	_check_help	;wreg free
  2974  0124CA  5032               	movf	btemp^0,w,c
  2975  0124CC  B4D8               	btfsc	status,2,c
  2976  0124CE  D062               	goto	l1281
  2977                           
  2978                           ;main.c: 320:    V.calib = 0;
  2979  0124D0  0102               	movlb	2	; () banked
  2980  0124D2  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2981                           
  2982                           ; BSR set to: 2
  2983                           ;main.c: 321:    inp_index += 3;
  2984                           ;stkvar	_inp_index @ sp[(-5)+3]
  2985  0124D4  0EFE               	movlw	-2
  2986  0124D6  006F FF8C  F032    	movff	plusw1,btemp
  2987  0124DC  0E03               	movlw	3
  2988  0124DE  2632               	addwf	btemp^0,f,c
  2989  0124E0  0EFE               	movlw	-2
  2990  0124E2  0060  F0CB  FFE3   	movff	btemp,plusw1
  2991                           
  2992                           ;main.c: 322:    if (inp_index > 9)
  2993                           ;stkvar	_inp_index @ sp[(-5)+3]
  2994  0124E8  0EFE               	movlw	-2
  2995  0124EA  006F FF8C  F032    	movff	plusw1,btemp
  2996  0124F0  0E09               	movlw	9
  2997  0124F2  6432               	cpfsgt	btemp^0,c
  2998  0124F4  D03A               	goto	l10888
  2999                           
  3000                           ; BSR set to: 2
  3001                           ;main.c: 323:     inp_index = 0;
  3002                           ;stkvar	_inp_index @ sp[(-5)+3]
  3003  0124F6  0EFE               	movlw	-2
  3004  0124F8  6AE3               	clrf	plusw1,c
  3005  0124FA  D037               	goto	l10888
  3006  0124FC                     l10870:
  3007                           
  3008                           ; BSR set to: 2
  3009                           ;main.c: 326:     i = C_BATT;
  3010                           ;stkvar	_i @ sp[(-5)+2]
  3011  0124FC  0EFD               	movlw	-3
  3012  0124FE  6AE3               	clrf	plusw1,c
  3013                           
  3014                           ; BSR set to: 2
  3015                           ;main.c: 327:     j = C_PV;
  3016                           ;stkvar	_j @ sp[(-5)+1]
  3017  012500  0EFC               	movlw	-4
  3018  012502  6AE3               	clrf	plusw1,c
  3019  012504  2AE3               	incf	plusw1,f,c
  3020                           
  3021                           ; BSR set to: 2
  3022                           ;main.c: 328:     k = V_CC;
  3023                           ;stkvar	_k @ sp[(-5)+0]
  3024  012506  0EFB               	movlw	-5
  3025  012508  6AE3               	clrf	plusw1,c
  3026  01250A  82E3               	bsf	plusw1,1,c
  3027                           
  3028                           ;main.c: 329:     break;
  3029  01250C  D043               	goto	l1281
  3030  01250E                     l10876:
  3031                           
  3032                           ; BSR set to: 2
  3033                           ;main.c: 331:     i = V_BAT;
  3034                           ;stkvar	_i @ sp[(-5)+2]
  3035  01250E  0EFD               	movlw	-3
  3036  012510  6AE3               	clrf	plusw1,c
  3037  012512  84E3               	bsf	plusw1,2,c
  3038                           
  3039                           ;main.c: 332:     j = V_PV;
  3040                           ;stkvar	_j @ sp[(-5)+1]
  3041  012514  0EFC               	movlw	-4
  3042  012516  6AE3               	clrf	plusw1,c
  3043  012518  80E3               	bsf	plusw1,0,c
  3044  01251A  84E3               	bsf	plusw1,2,c	;indir
  3045                           
  3046                           ;main.c: 333:     k = V_CBUS;
  3047                           ;stkvar	_k @ sp[(-5)+0]
  3048  01251C  0EFB               	movlw	-5
  3049  01251E  6AE3               	clrf	plusw1,c
  3050  012520  82E3               	bsf	plusw1,1,c
  3051  012522  84E3               	bsf	plusw1,2,c	;indir
  3052                           
  3053                           ;main.c: 334:     break;
  3054  012524  D037               	goto	l1281
  3055  012526                     l10878:
  3056                           
  3057                           ; BSR set to: 2
  3058                           ;main.c: 336:     i = V_BBAT;
  3059                           ;stkvar	_i @ sp[(-5)+2]
  3060  012526  0EFD               	movlw	-3
  3061  012528  6AE3               	clrf	plusw1,c
  3062  01252A  82E3               	bsf	plusw1,1,c
  3063  01252C  86E3               	bsf	plusw1,3,c	;indir
  3064                           
  3065                           ; BSR set to: 2
  3066                           ;main.c: 337:     j = V_TEMP;
  3067  01252E  0E0B               	movlw	11
  3068  012530  6E3D               	movwf	(btemp+11)^0,c
  3069                           
  3070                           ;stkvar	_j @ sp[(-5)+1]
  3071  012532  0EFC               	movlw	-4
  3072  012534  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3073                           
  3074                           ; BSR set to: 2
  3075                           ;main.c: 338:     k = V_INVERTER;
  3076                           ;stkvar	_k @ sp[(-5)+0]
  3077  01253A  0EFB               	movlw	-5
  3078  01253C  6AE3               	clrf	plusw1,c
  3079  01253E  84E3               	bsf	plusw1,2,c
  3080  012540  86E3               	bsf	plusw1,3,c	;indir
  3081                           
  3082                           ;main.c: 339:     break;
  3083  012542  D028               	goto	l1281
  3084  012544                     l10884:
  3085                           
  3086                           ; BSR set to: 2
  3087                           ;main.c: 341:     i = channel_ANB5;
  3088  012544  0E0D               	movlw	13
  3089  012546  6E3D               	movwf	(btemp+11)^0,c
  3090                           
  3091                           ;stkvar	_i @ sp[(-5)+2]
  3092  012548  0EFD               	movlw	-3
  3093  01254A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3094                           
  3095                           ;main.c: 342:     j = channel_ANB5;
  3096  012550  0E0D               	movlw	13
  3097  012552  6E3D               	movwf	(btemp+11)^0,c
  3098                           
  3099                           ;stkvar	_j @ sp[(-5)+1]
  3100  012554  0EFC               	movlw	-4
  3101  012556  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3102                           
  3103                           ;main.c: 343:     k = channel_ANB5;
  3104  01255C  0E0D               	movlw	13
  3105  01255E  6E3D               	movwf	(btemp+11)^0,c
  3106                           
  3107                           ;stkvar	_k @ sp[(-5)+0]
  3108  012560  0EFB               	movlw	-5
  3109  012562  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3110                           
  3111                           ;main.c: 344:     break;
  3112  012568  D015               	goto	l1281
  3113  01256A                     l10888:
  3114                           
  3115                           ; BSR set to: 2
  3116                           ;stkvar	_inp_index @ sp[(-5)+3]
  3117  01256A  0EFE               	movlw	-2
  3118  01256C  50E3               	movf	plusw1,w,c
  3119  01256E  6E3C               	movwf	(btemp+10)^0,c
  3120  012570  6A3D               	clrf	(btemp+11)^0,c
  3121                           
  3122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 1, Range of values is 0 to 0
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte            4     3 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  012572  503D               	movf	(btemp+11)^0,w,c
  3130  012574  0A00               	xorlw	0	; case 0
  3131  012576  A4D8               	btfss	status,2,c
  3132  012578  D00D               	goto	l1281
  3133                           
  3134                           ; BSR set to: 2
  3135                           ; Switch size 1, requested type "simple"
  3136                           ; Number of cases is 4, Range of values is 0 to 9
  3137                           ; switch strategies available:
  3138                           ; Name         Instructions Cycles
  3139                           ; simple_byte           13     7 (average)
  3140                           ;	Chosen strategy is simple_byte
  3141  01257A  503C               	movf	(btemp+10)^0,w,c
  3142  01257C  0A00               	xorlw	0	; case 0
  3143  01257E  B4D8               	btfsc	status,2,c
  3144  012580  D7BD               	goto	l10870
  3145  012582  0A03               	xorlw	3	; case 3
  3146  012584  B4D8               	btfsc	status,2,c
  3147  012586  D7C3               	goto	l10876
  3148  012588  0A05               	xorlw	5	; case 6
  3149  01258A  B4D8               	btfsc	status,2,c
  3150  01258C  D7CC               	goto	l10878
  3151  01258E  0A0F               	xorlw	15	; case 9
  3152  012590  B4D8               	btfsc	status,2,c
  3153  012592  D7D8               	goto	l10884
  3154  012594                     l1281:
  3155                           
  3156                           ;main.c: 353:   if (V.set_sequ) {
  3157  012594  0102               	movlb	2	; () banked
  3158  012596  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3159  012598  D500               	goto	l10806
  3160                           
  3161                           ; BSR set to: 2
  3162                           ;main.c: 354:    if (TimerDone(TMR_INFO)) {
  3163  01259A  0E07               	movlw	7
  3164  01259C  6EE6               	movwf	postinc1,c
  3165  01259E  EC9D  F0C5         	call	_TimerDone	;wreg free
  3166  0125A2  5032               	movf	btemp^0,w,c
  3167  0125A4  B4D8               	btfsc	status,2,c
  3168  0125A6  D00B               	goto	l10898
  3169                           
  3170                           ;main.c: 355:     V.set_sequ = 0;
  3171  0125A8  0102               	movlb	2	; () banked
  3172  0125AA  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3173                           
  3174                           ; BSR set to: 2
  3175                           ;main.c: 356:     set_vterm(0);
  3176  0125AC  0E00               	movlw	0
  3177  0125AE  6EE6               	movwf	postinc1,c
  3178  0125B0  EC5E  F0C6         	call	_set_vterm	;wreg free
  3179                           
  3180                           ; BSR set to: 5
  3181                           ;main.c: 357:     update_lcd(0);
  3182  0125B4  0E00               	movlw	0
  3183  0125B6  6EE6               	movwf	postinc1,c
  3184  0125B8  EC2B  F0B7         	call	_update_lcd	;wreg free
  3185                           
  3186                           ;main.c: 358:    } else {
  3187  0125BC  D4EE               	goto	l10806
  3188  0125BE                     l10898:
  3189                           
  3190                           ;main.c: 359:     set_vterm(2);
  3191  0125BE  0E02               	movlw	2
  3192  0125C0  6EE6               	movwf	postinc1,c
  3193  0125C2  EC5E  F0C6         	call	_set_vterm	;wreg free
  3194                           
  3195                           ; BSR set to: 5
  3196                           ;main.c: 360:     update_lcd(2);
  3197  0125C6  0E02               	movlw	2
  3198  0125C8  6EE6               	movwf	postinc1,c
  3199  0125CA  EC2B  F0B7         	call	_update_lcd	;wreg free
  3200  0125CE  D4E5               	goto	l10806
  3201  0125D0                     __end_of_main:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function _start_switch_handler *****************
  3205 ;; Defined at:
  3206 ;;		line 119 in file "dio.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1  [STACK] void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3215 ;; Tracked objects:
  3216 ;;		On entry : 1/4
  3217 ;;		On exit  : 3F/39
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    7
  3227 ;; This function calls:
  3228 ;;		_INT1_SetInterruptHandler
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text1
  3235  018BEA                     __ptext1:
  3236                           	opt callstack 0
  3237  018BEA                     _start_switch_handler:
  3238                           	opt callstack 23
  3239                           
  3240                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3241                           
  3242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3243                           ;incstack = 0
  3244  018BEA  0139               	movlb	57	; () banked
  3245  018BEC  9195               	bcf	149,0,b	;volatile
  3246                           
  3247                           ; BSR set to: 57
  3248                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3249  018BEE  0E90               	movlw	low _switch_handler
  3250  018BF0  6EE6               	movwf	postinc1,c
  3251  018BF2  0E68               	movlw	high _switch_handler
  3252  018BF4  6EE6               	movwf	postinc1,c
  3253  018BF6  0E01               	movlw	low (_switch_handler shr (0+16))
  3254  018BF8  6EE6               	movwf	postinc1,c
  3255  018BFA  ECD7  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
  3256                           
  3257                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3258  018BFE  0E02               	movlw	2
  3259  018C00  0100               	movlb	0	; () banked
  3260  018C02  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3264  018C04  0139               	movlb	57	; () banked
  3265  018C06  8195               	bsf	149,0,b	;volatile
  3266                           
  3267                           ; BSR set to: 57
  3268                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3269  018C08  0012               	return		;funcret
  3270  018C0A                     __end_of_start_switch_handler:
  3271                           	opt callstack 0
  3272                           
  3273 ;; *************** function _start_adc_scan *****************
  3274 ;; Defined at:
  3275 ;;		line 33 in file "daq.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1  [STACK] _Bool 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/5
  3286 ;;		On exit  : 1/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    7
  3296 ;; This function calls:
  3297 ;;		_ADCC_DischargeSampleCapacitor
  3298 ;;		_ADCC_SetADIInterruptHandler
  3299 ;;		_ADCC_SetADTIInterruptHandler
  3300 ;;		_ADCC_StartConversion
  3301 ;; This function is called by:
  3302 ;;		_main
  3303 ;; This function uses a reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text2
  3307  017EF2                     __ptext2:
  3308                           	opt callstack 0
  3309  017EF2                     _start_adc_scan:
  3310                           	opt callstack 23
  3311                           
  3312                           ;daq.c: 35:  if (R.done)
  3313                           
  3314                           ; BSR set to: 57
  3315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3316                           ;incstack = 0
  3317  017EF2  0100               	movlb	0	; () banked
  3318  017EF4  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  3319  017EF6  A4D8               	btfss	status,2,c
  3320  017EF8  0012               	return	
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;daq.c: 38:  R.scan_index = 0;
  3324  017EFA  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3328  017EFC  013A               	movlb	58	; () banked
  3329  017EFE  5140               	movf	64,w,b	;volatile
  3330  017F00  006E F940  F032    	movff	14928,btemp	;volatile
  3331  017F06  6A33               	clrf	(btemp+1)^0,c
  3332  017F08  0060  F0C8  F033   	movff	btemp,btemp+1
  3333  017F0E  6A32               	clrf	btemp^0,c
  3334  017F10  2632               	addwf	btemp^0,f,c
  3335  017F12  0E00               	movlw	0
  3336  017F14  2233               	addwfc	(btemp+1)^0,f,c
  3337  017F16  0E77               	movlw	119
  3338  017F18  1432               	andwf	btemp^0,w,c
  3339  017F1A  0100               	movlb	0	; () banked
  3340  017F1C  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  3341  017F1E  0E3C               	movlw	60
  3342  017F20  1433               	andwf	(btemp+1)^0,w,c
  3343  017F22  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3347  017F24  0E7C               	movlw	low _adc_int_handler
  3348  017F26  6EE6               	movwf	postinc1,c
  3349  017F28  0E8E               	movlw	high _adc_int_handler
  3350  017F2A  6EE6               	movwf	postinc1,c
  3351  017F2C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3352  017F2E  6EE6               	movwf	postinc1,c
  3353  017F30  EC13  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3354                           
  3355                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3356  017F34  0ED0               	movlw	low _adc_int_t_handler
  3357  017F36  6EE6               	movwf	postinc1,c
  3358  017F38  0E7C               	movlw	high _adc_int_t_handler
  3359  017F3A  6EE6               	movwf	postinc1,c
  3360  017F3C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3361  017F3E  6EE6               	movwf	postinc1,c
  3362  017F40  ECFF  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3363                           
  3364                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3365  017F44  EC1B  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3366                           
  3367                           ; BSR set to: 62
  3368                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3369  017F48  0100               	movlb	0	; () banked
  3370  017F4A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  3371  017F4C  0B0F               	andlw	15
  3372  017F4E  6EE6               	movwf	postinc1,c
  3373  017F50  ECD6  F0C6         	call	_ADCC_StartConversion	;wreg free
  3374                           
  3375                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3376  017F54  0012               	return		;funcret
  3377  017F56                     __end_of_start_adc_scan:
  3378                           	opt callstack 0
  3379                           
  3380 ;; *************** function _ADCC_StartConversion *****************
  3381 ;; Defined at:
  3382 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  channel         1  [STACK] enum E16136
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1  [STACK] void 
  3389 ;; Registers used:
  3390 ;;		fsr1l, fsr1h
  3391 ;; Tracked objects:
  3392 ;;		On entry : 3F/0
  3393 ;;		On exit  : 3F/3E
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    6
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_start_adc_scan
  3407 ;;		_adc_int_t_handler
  3408 ;; This function uses a reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text3
  3412  018DAC                     __ptext3:
  3413                           	opt callstack 0
  3414  018DAC                     _ADCC_StartConversion:
  3415                           	opt callstack 6
  3416                           
  3417                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3418                           ;stkvar	_channel @ sp[(0)+-1]
  3419                           
  3420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3421                           ;incstack = 0
  3422  018DAC  0EFF               	movlw	-1
  3423  018DAE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3424                           
  3425                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3426  018DB4  013E               	movlb	62	; () banked
  3427  018DB6  8FF8               	bsf	248,7,b	;volatile
  3428                           
  3429                           ; BSR set to: 62
  3430                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3431  018DB8  81F8               	bsf	248,0,b	;volatile
  3432                           
  3433                           ; BSR set to: 62
  3434                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3435  018DBA  52E5               	movf	postdec1,f,c
  3436  018DBC  0012               	return		;funcret
  3437  018DBE                     __end_of_ADCC_StartConversion:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3441 ;; Defined at:
  3442 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1  [STACK] void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 3F/3E
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    6
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_start_adc_scan
  3467 ;;		_adc_int_t_handler
  3468 ;; This function uses a reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text4
  3472  018E36                     __ptext4:
  3473                           	opt callstack 0
  3474  018E36                     _ADCC_DischargeSampleCapacitor:
  3475                           	opt callstack 6
  3476                           
  3477                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3478                           
  3479                           ; BSR set to: 62
  3480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3481                           ;incstack = 0
  3482  018E36  0E3B               	movlw	59
  3483  018E38  013E               	movlb	62	; () banked
  3484  018E3A  6FF1               	movwf	241,b	;volatile
  3485                           
  3486                           ; BSR set to: 62
  3487                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3488  018E3C  0012               	return		;funcret
  3489  018E3E                     __end_of_ADCC_DischargeSampleCapacitor:
  3490                           	opt callstack 0
  3491                           
  3492 ;; *************** function _srand *****************
  3493 ;; Defined at:
  3494 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  s               2  [STACK] unsigned int 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1  [STACK] void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3503 ;; Tracked objects:
  3504 ;;		On entry : 3F/0
  3505 ;;		On exit  : 3F/1
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    6
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text5
  3523  01861A                     __ptext5:
  3524                           	opt callstack 0
  3525  01861A                     _srand:
  3526                           	opt callstack 24
  3527                           
  3528                           ;stkvar	_s @ sp[(0)+-2]
  3529                           
  3530                           ; BSR set to: 62
  3531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3532                           ;incstack = 0
  3533  01861A  0EFE               	movlw	-2
  3534  01861C  50E3               	movf	plusw1,w,c
  3535  01861E  0FFF               	addlw	255
  3536  018620  6E3C               	movwf	(btemp+10)^0,c
  3537  018622  0EFF               	movlw	-1
  3538  018624  006F FF8C  F03D    	movff	plusw1,btemp+11
  3539  01862A  0EFF               	movlw	255
  3540  01862C  223D               	addwfc	(btemp+11)^0,f,c
  3541  01862E  0060  F0F0  F1CC   	movff	btemp+10,_seed
  3542  018634  0060  F0F4  F1CD   	movff	btemp+11,_seed+1
  3543  01863A  0101               	movlb	1	; () banked
  3544  01863C  6BCE               	clrf	(_seed+2)& (0+255),b
  3545  01863E  6BCF               	clrf	(_seed+3)& (0+255),b
  3546  018640  6BD0               	clrf	(_seed+4)& (0+255),b
  3547  018642  6BD1               	clrf	(_seed+5)& (0+255),b
  3548  018644  6BD2               	clrf	(_seed+6)& (0+255),b
  3549  018646  6BD3               	clrf	(_seed+7)& (0+255),b
  3550                           
  3551                           ; BSR set to: 1
  3552                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3553  018648  52E5               	movf	postdec1,f,c
  3554  01864A  52E5               	movf	postdec1,f,c
  3555  01864C  0012               	return		;funcret
  3556  01864E                     __end_of_srand:
  3557                           	opt callstack 0
  3558                           
  3559 ;; *************** function _init_display *****************
  3560 ;; Defined at:
  3561 ;;		line 37 in file "eadog.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1  [STACK] void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/2
  3572 ;;		On exit  : 3F/3D
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    8
  3582 ;; This function calls:
  3583 ;;		_ringBufS_init
  3584 ;;		_send_lcd_cmd
  3585 ;;		_send_lcd_cmd_long
  3586 ;;		_wdtdelay
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text6
  3593  017264                     __ptext6:
  3594                           	opt callstack 0
  3595  017264                     _init_display:
  3596                           	opt callstack 22
  3597                           
  3598                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3599                           
  3600                           ; BSR set to: 1
  3601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3602                           ;incstack = 0
  3603  017264  0E94               	movlw	low _ring_buf1
  3604  017266  0100               	movlb	0	; () banked
  3605  017268  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3606  01726A  0E03               	movlw	high _ring_buf1
  3607  01726C  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3608                           
  3609                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3610  01726E  0E00               	movlw	low _ring_buf2
  3611  017270  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3612  017272  0E04               	movlw	high _ring_buf2
  3613  017274  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3617  017276  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3618  01727C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3619  017282  EC37  F0C4         	call	_ringBufS_init	;wreg free
  3620                           
  3621                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3622  017286  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3623  01728C  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3624  017292  EC37  F0C4         	call	_ringBufS_init	;wreg free
  3625                           
  3626                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3627  017296  84BE               	bsf	190,2,c	;volatile
  3628  017298  84BC               	bsf	188,2,c	;volatile
  3629                           
  3630                           ;eadog.c: 46:  wdtdelay(350000);
  3631  01729A  0E30               	movlw	48
  3632  01729C  6EE6               	movwf	postinc1,c
  3633  01729E  0E57               	movlw	87
  3634  0172A0  6EE6               	movwf	postinc1,c
  3635  0172A2  0E05               	movlw	5
  3636  0172A4  6EE6               	movwf	postinc1,c
  3637  0172A6  0E00               	movlw	0
  3638  0172A8  6EE6               	movwf	postinc1,c
  3639  0172AA  EC9C  F0C0         	call	_wdtdelay	;wreg free
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3643  0172AE  0E39               	movlw	57
  3644  0172B0  6EE6               	movwf	postinc1,c
  3645  0172B2  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3649  0172B6  0E1D               	movlw	29
  3650  0172B8  6EE6               	movwf	postinc1,c
  3651  0172BA  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3655  0172BE  0E50               	movlw	80
  3656  0172C0  6EE6               	movwf	postinc1,c
  3657  0172C2  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3661  0172C6  0E6C               	movlw	108
  3662  0172C8  6EE6               	movwf	postinc1,c
  3663  0172CA  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3667  0172CE  0E76               	movlw	118
  3668  0172D0  6EE6               	movwf	postinc1,c
  3669  0172D2  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3673  0172D6  0E38               	movlw	56
  3674  0172D8  6EE6               	movwf	postinc1,c
  3675  0172DA  EC0F  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3679  0172DE  0E0F               	movlw	15
  3680  0172E0  6EE6               	movwf	postinc1,c
  3681  0172E2  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3685  0172E6  0E01               	movlw	1
  3686  0172E8  6EE6               	movwf	postinc1,c
  3687  0172EA  EC0F  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3691  0172EE  0E02               	movlw	2
  3692  0172F0  6EE6               	movwf	postinc1,c
  3693  0172F2  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3697  0172F6  0E06               	movlw	6
  3698  0172F8  6EE6               	movwf	postinc1,c
  3699  0172FA  EC23  F0C4         	call	_send_lcd_cmd	;wreg free
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;eadog.c: 57:  wdtdelay(30);
  3703  0172FE  0E1E               	movlw	30
  3704  017300  6EE6               	movwf	postinc1,c
  3705  017302  0E00               	movlw	0
  3706  017304  6EE6               	movwf	postinc1,c
  3707  017306  0E00               	movlw	0
  3708  017308  6EE6               	movwf	postinc1,c
  3709  01730A  0E00               	movlw	0
  3710  01730C  6EE6               	movwf	postinc1,c
  3711  01730E  EC9C  F0C0         	call	_wdtdelay	;wreg free
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3715  017312  0E02               	movlw	2
  3716  017314  013D               	movlb	61	; () banked
  3717  017316  6F16               	movwf	22,b	;volatile
  3718                           
  3719                           ; BSR set to: 61
  3720                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3721  017318  0E40               	movlw	64
  3722  01731A  6F15               	movwf	21,b	;volatile
  3723                           
  3724                           ; BSR set to: 61
  3725                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3726  01731C  0E83               	movlw	131
  3727  01731E  6F14               	movwf	20,b	;volatile
  3728                           
  3729                           ; BSR set to: 61
  3730                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3731  017320  931A               	bcf	26,1,b	;volatile
  3732                           
  3733                           ; BSR set to: 61
  3734                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3735  017322  0E3F               	movlw	-193
  3736  017324  013B               	movlb	59	; () banked
  3737  017326  17FD               	andwf	253,f,b	;volatile
  3738                           
  3739                           ; BSR set to: 59
  3740                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3741  017328  9BFD               	bcf	253,5,b	;volatile
  3742                           
  3743                           ; BSR set to: 59
  3744                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3745  01732A  51FD               	movf	253,w,b	;volatile
  3746  01732C  0BF9               	andlw	-7
  3747  01732E  0902               	iorlw	2
  3748  017330  6FFD               	movwf	253,b	;volatile
  3749                           
  3750                           ; BSR set to: 59
  3751                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3752  017332  0EE7               	movlw	-25
  3753  017334  17FD               	andwf	253,f,b	;volatile
  3754                           
  3755                           ; BSR set to: 59
  3756                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3757  017336  81FD               	bsf	253,0,b	;volatile
  3758                           
  3759                           ; BSR set to: 59
  3760                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3761  017338  0E94               	movlw	low _ring_buf1
  3762  01733A  6FF9               	movwf	249,b	;volatile
  3763  01733C  0E03               	movlw	high _ring_buf1
  3764  01733E  6FFA               	movwf	250,b	;volatile
  3765  017340  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3766  017342  6FFB               	movwf	251,b	;volatile
  3767                           
  3768                           ; BSR set to: 59
  3769                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3770  017344  9BFC               	bcf	252,5,b	;volatile
  3771                           
  3772                           ; BSR set to: 59
  3773                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3774  017346  013D               	movlb	61	; () banked
  3775  017348  831A               	bsf	26,1,b	;volatile
  3776                           
  3777                           ; BSR set to: 61
  3778                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3779  01734A  94BE               	bcf	190,2,c	;volatile
  3780                           
  3781                           ; BSR set to: 61
  3782                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3783  01734C  0012               	return		;funcret
  3784  01734E                     __end_of_init_display:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _send_lcd_cmd_long *****************
  3788 ;; Defined at:
  3789 ;;		line 114 in file "eadog.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  cmd             1  [STACK] const unsigned char 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1  [STACK] void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3798 ;; Tracked objects:
  3799 ;;		On entry : 3F/0
  3800 ;;		On exit  : 3F/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    7
  3810 ;; This function calls:
  3811 ;;		_SPI1_Exchange8bit
  3812 ;;		_wdtdelay
  3813 ;; This function is called by:
  3814 ;;		_init_display
  3815 ;; This function uses a reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text7
  3819  01881E                     __ptext7:
  3820                           	opt callstack 0
  3821  01881E                     _send_lcd_cmd_long:
  3822                           	opt callstack 22
  3823                           
  3824                           ; BSR set to: 61
  3825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3826                           ;incstack = 0
  3827                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3828  01881E  92BC               	bcf	188,1,c	;volatile
  3829                           
  3830                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3831  018820  94BC               	bcf	188,2,c	;volatile
  3832                           
  3833                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3834                           ;stkvar	_cmd @ sp[(0)+-1]
  3835  018822  0EFF               	movlw	-1
  3836  018824  50E3               	movf	plusw1,w,c
  3837  018826  6EE6               	movwf	postinc1,c
  3838  018828  EC05  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3839                           
  3840                           ; BSR set to: 57
  3841                           ;eadog.c: 119:  wdtdelay(800);
  3842  01882C  0E20               	movlw	32
  3843  01882E  6EE6               	movwf	postinc1,c
  3844  018830  0E03               	movlw	3
  3845  018832  6EE6               	movwf	postinc1,c
  3846  018834  0E00               	movlw	0
  3847  018836  6EE6               	movwf	postinc1,c
  3848  018838  0E00               	movlw	0
  3849  01883A  6EE6               	movwf	postinc1,c
  3850  01883C  EC9C  F0C0         	call	_wdtdelay	;wreg free
  3851                           
  3852                           ; BSR set to: 0
  3853  018840  82BC               	bsf	188,1,c	;volatile
  3854                           
  3855                           ; BSR set to: 0
  3856                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3857  018842  52E5               	movf	postdec1,f,c
  3858  018844  0012               	return		;funcret
  3859  018846                     __end_of_send_lcd_cmd_long:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _send_lcd_cmd *****************
  3863 ;; Defined at:
  3864 ;;		line 102 in file "eadog.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  cmd             1  [STACK] const unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1  [STACK] void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3873 ;; Tracked objects:
  3874 ;;		On entry : 3F/0
  3875 ;;		On exit  : 3F/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    7
  3885 ;; This function calls:
  3886 ;;		_SPI1_Exchange8bit
  3887 ;;		_wdtdelay
  3888 ;; This function is called by:
  3889 ;;		_init_display
  3890 ;; This function uses a reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text8
  3894  018846                     __ptext8:
  3895                           	opt callstack 0
  3896  018846                     _send_lcd_cmd:
  3897                           	opt callstack 22
  3898                           
  3899                           ; BSR set to: 0
  3900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3901                           ;incstack = 0
  3902                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3903  018846  92BC               	bcf	188,1,c	;volatile
  3904                           
  3905                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3906  018848  94BC               	bcf	188,2,c	;volatile
  3907                           
  3908                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3909                           ;stkvar	_cmd @ sp[(0)+-1]
  3910  01884A  0EFF               	movlw	-1
  3911  01884C  50E3               	movf	plusw1,w,c
  3912  01884E  6EE6               	movwf	postinc1,c
  3913  018850  EC05  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3914                           
  3915                           ; BSR set to: 57
  3916                           ;eadog.c: 107:  wdtdelay(30);
  3917  018854  0E1E               	movlw	30
  3918  018856  6EE6               	movwf	postinc1,c
  3919  018858  0E00               	movlw	0
  3920  01885A  6EE6               	movwf	postinc1,c
  3921  01885C  0E00               	movlw	0
  3922  01885E  6EE6               	movwf	postinc1,c
  3923  018860  0E00               	movlw	0
  3924  018862  6EE6               	movwf	postinc1,c
  3925  018864  EC9C  F0C0         	call	_wdtdelay	;wreg free
  3926                           
  3927                           ; BSR set to: 0
  3928  018868  82BC               	bsf	188,1,c	;volatile
  3929                           
  3930                           ; BSR set to: 0
  3931                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3932  01886A  52E5               	movf	postdec1,f,c
  3933  01886C  0012               	return		;funcret
  3934  01886E                     __end_of_send_lcd_cmd:
  3935                           	opt callstack 0
  3936                           
  3937 ;; *************** function _SPI1_Exchange8bit *****************
  3938 ;; Defined at:
  3939 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  data            1  [STACK] unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1  [STACK] unsigned char 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 3F/39
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    6
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_send_lcd_cmd
  3964 ;;		_send_lcd_cmd_long
  3965 ;; This function uses a reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text9
  3969  018C0A                     __ptext9:
  3970                           	opt callstack 0
  3971  018C0A                     _SPI1_Exchange8bit:
  3972                           	opt callstack 22
  3973                           
  3974                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3975                           
  3976                           ; BSR set to: 0
  3977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3978                           ;incstack = 0
  3979  018C0A  0E01               	movlw	1
  3980  018C0C  013D               	movlb	61	; () banked
  3981  018C0E  6F12               	movwf	18,b	;volatile
  3982                           
  3983                           ; BSR set to: 61
  3984                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3985                           ;stkvar	_data @ sp[(0)+-1]
  3986  018C10  0EFF               	movlw	-1
  3987  018C12  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3988  018C18                     l835:
  3989                           
  3990                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3991  018C18  0139               	movlb	57	; () banked
  3992  018C1A  A9A2               	btfss	162,4,b	;volatile
  3993  018C1C  D7FD               	goto	l835
  3994                           
  3995                           ; BSR set to: 57
  3996                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3997  018C1E  006F F440  F032    	movff	15632,btemp	;volatile
  3998                           
  3999                           ; BSR set to: 57
  4000                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4001  018C24  52E5               	movf	postdec1,f,c
  4002  018C26  0012               	return		;funcret
  4003  018C28                     __end_of_SPI1_Exchange8bit:
  4004                           	opt callstack 0
  4005                           
  4006 ;; *************** function _ringBufS_init *****************
  4007 ;; Defined at:
  4008 ;;		line 22 in file "ringbufs.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  _this           2  [STACK] PTR volatile struct ring
  4011 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1  [STACK] void 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    7
  4030 ;; This function calls:
  4031 ;;		_memset
  4032 ;; This function is called by:
  4033 ;;		_init_display
  4034 ;; This function uses a reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text10
  4038  01886E                     __ptext10:
  4039                           	opt callstack 0
  4040  01886E                     _ringBufS_init:
  4041                           	opt callstack 22
  4042                           
  4043                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4044                           
  4045                           ; BSR set to: 57
  4046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4047                           ;incstack = 0
  4048  01886E  0E43               	movlw	67
  4049  018870  6EE6               	movwf	postinc1,c
  4050  018872  0E00               	movlw	0
  4051  018874  6EE6               	movwf	postinc1,c
  4052  018876  0E00               	movlw	0
  4053  018878  6EE6               	movwf	postinc1,c
  4054  01887A  0E00               	movlw	0
  4055  01887C  6EE6               	movwf	postinc1,c
  4056                           
  4057                           ;stkvar	__this @ sp[(-4)+-2]
  4058  01887E  0EFA               	movlw	-6
  4059  018880  006F FF8F FFE6     	movff	plusw1,postinc1
  4060  018886  006F FF8F FFE6     	movff	plusw1,postinc1
  4061  01888C  ECC1  F0A5         	call	_memset	;wreg free
  4062                           
  4063                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4064  018890  52E5               	movf	postdec1,f,c
  4065  018892  52E5               	movf	postdec1,f,c
  4066  018894  0012               	return		;funcret
  4067  018896                     __end_of_ringBufS_init:
  4068                           	opt callstack 0
  4069                           
  4070 ;; *************** function _hid_display *****************
  4071 ;; Defined at:
  4072 ;;		line 17 in file "hid.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  h               1  [STACK] PTR struct H_data
  4075 ;;		 -> H(7), 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1  [STACK] PTR struct H_data
  4080 ;; Registers used:
  4081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4082 ;; Tracked objects:
  4083 ;;		On entry : 3F/1
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    8
  4094 ;; This function calls:
  4095 ;;		_hid_input
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text11
  4102  01706E                     __ptext11:
  4103                           	opt callstack 0
  4104  01706E                     _hid_display:
  4105                           	opt callstack 22
  4106                           
  4107                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4108                           ;stkvar	_h @ sp[(0)+-1]
  4109                           
  4110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4111                           ;incstack = 0
  4112  01706E  0EFF               	movlw	-1
  4113  017070  50E3               	movf	plusw1,w,c
  4114  017072  6EE6               	movwf	postinc1,c
  4115  017074  EC58  F0BD         	call	_hid_input	;wreg free
  4116                           
  4117                           ;hid.c: 21:  switch (h->h_state) {
  4118  017078  D066               	goto	l9204
  4119  01707A                     l9182:
  4120                           
  4121                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4122                           ;stkvar	_h @ sp[(0)+-1]
  4123  01707A  0EFF               	movlw	-1
  4124  01707C  50E3               	movf	plusw1,w,c
  4125  01707E  6ED9               	movwf	fsr2l,c
  4126  017080  6ADA               	clrf	fsr2h,c
  4127  017082  0E01               	movlw	1
  4128  017084  26D9               	addwf	fsr2l,f,c
  4129  017086  0E01               	movlw	1
  4130  017088  6EDF               	movwf	indf2,c
  4131                           
  4132                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4133                           ;stkvar	_h @ sp[(0)+-1]
  4134  01708A  0EFF               	movlw	-1
  4135  01708C  50E3               	movf	plusw1,w,c
  4136  01708E  6ED9               	movwf	fsr2l,c
  4137  017090  6ADA               	clrf	fsr2h,c
  4138  017092  0E00               	movlw	0
  4139  017094  6EDF               	movwf	indf2,c
  4140                           
  4141                           ;hid.c: 25:   h->wait_enter = 1;
  4142                           ;stkvar	_h @ sp[(0)+-1]
  4143  017096  0EFF               	movlw	-1
  4144  017098  50E3               	movf	plusw1,w,c
  4145  01709A  6ED9               	movwf	fsr2l,c
  4146  01709C  6ADA               	clrf	fsr2h,c
  4147  01709E  0E04               	movlw	4
  4148  0170A0  26D9               	addwf	fsr2l,f,c
  4149  0170A2  0E01               	movlw	1
  4150  0170A4  6EDF               	movwf	indf2,c
  4151                           
  4152                           ;hid.c: 26:   h->wait_select = 1;
  4153                           ;stkvar	_h @ sp[(0)+-1]
  4154  0170A6  0EFF               	movlw	-1
  4155  0170A8  50E3               	movf	plusw1,w,c
  4156  0170AA  6ED9               	movwf	fsr2l,c
  4157  0170AC  6ADA               	clrf	fsr2h,c
  4158  0170AE  0E02               	movlw	2
  4159  0170B0  26D9               	addwf	fsr2l,f,c
  4160  0170B2  0E01               	movlw	1
  4161  0170B4  6EDF               	movwf	indf2,c
  4162                           
  4163                           ;hid.c: 27:   h->select_p=SW_OFF;
  4164                           ;stkvar	_h @ sp[(0)+-1]
  4165  0170B6  0EFF               	movlw	-1
  4166  0170B8  50E3               	movf	plusw1,w,c
  4167  0170BA  6ED9               	movwf	fsr2l,c
  4168  0170BC  6ADA               	clrf	fsr2h,c
  4169  0170BE  0E03               	movlw	3
  4170  0170C0  26D9               	addwf	fsr2l,f,c
  4171  0170C2  0E00               	movlw	0
  4172  0170C4  6EDF               	movwf	indf2,c
  4173                           
  4174                           ;hid.c: 28:   h->enter_p=SW_OFF;
  4175                           ;stkvar	_h @ sp[(0)+-1]
  4176  0170C6  0EFF               	movlw	-1
  4177  0170C8  50E3               	movf	plusw1,w,c
  4178  0170CA  6ED9               	movwf	fsr2l,c
  4179  0170CC  6ADA               	clrf	fsr2h,c
  4180  0170CE  0E05               	movlw	5
  4181  0170D0  26D9               	addwf	fsr2l,f,c
  4182  0170D2  0E00               	movlw	0
  4183  0170D4  D036               	goto	L1
  4184  0170D6                     l9194:
  4185                           
  4186                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4187                           ;stkvar	_h @ sp[(0)+-1]
  4188  0170D6  0EFF               	movlw	-1
  4189  0170D8  50E3               	movf	plusw1,w,c
  4190  0170DA  6ED9               	movwf	fsr2l,c
  4191  0170DC  6ADA               	clrf	fsr2h,c
  4192  0170DE  0E02               	movlw	2
  4193  0170E0  26D9               	addwf	fsr2l,f,c
  4194  0170E2  50DF               	movf	indf2,w,c
  4195  0170E4  A4D8               	btfss	status,2,c
  4196  0170E6  D042               	goto	l1812
  4197                           
  4198                           ;stkvar	_h @ sp[(0)+-1]
  4199  0170E8  0EFF               	movlw	-1
  4200  0170EA  50E3               	movf	plusw1,w,c
  4201  0170EC  6ED9               	movwf	fsr2l,c
  4202  0170EE  6ADA               	clrf	fsr2h,c
  4203  0170F0  0E03               	movlw	3
  4204  0170F2  26D9               	addwf	fsr2l,f,c
  4205  0170F4  50DF               	movf	indf2,w,c
  4206  0170F6  A4D8               	btfss	status,2,c
  4207  0170F8  D039               	goto	l1812
  4208                           
  4209                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4210                           ;stkvar	_h @ sp[(0)+-1]
  4211  0170FA  0EFF               	movlw	-1
  4212  0170FC  50E3               	movf	plusw1,w,c
  4213  0170FE  6ED9               	movwf	fsr2l,c
  4214  017100  6ADA               	clrf	fsr2h,c
  4215  017102  0E06               	movlw	6
  4216  017104  26D9               	addwf	fsr2l,f,c
  4217                           
  4218                           ;stkvar	_h @ sp[(0)+-1]
  4219  017106  0EFF               	movlw	-1
  4220  017108  50E3               	movf	plusw1,w,c
  4221  01710A  6EE9               	movwf	fsr0l,c
  4222  01710C  6AEA               	clrf	fsr0h,c
  4223  01710E  0E06               	movlw	6
  4224  017110  26E9               	addwf	fsr0l,f,c
  4225  017112  2AEF               	incf	indf0,f,c
  4226  017114  50EF               	movf	indf0,w,c
  4227  017116  0B03               	andlw	3
  4228  017118  6EDF               	movwf	indf2,c
  4229                           
  4230                           ;hid.c: 34:    h->hid_display = h->sequence;
  4231                           ;stkvar	_h @ sp[(0)+-1]
  4232  01711A  0EFF               	movlw	-1
  4233  01711C  50E3               	movf	plusw1,w,c
  4234  01711E  6ED9               	movwf	fsr2l,c
  4235  017120  6ADA               	clrf	fsr2h,c
  4236  017122  0E06               	movlw	6
  4237  017124  26D9               	addwf	fsr2l,f,c
  4238                           
  4239                           ;stkvar	_h @ sp[(0)+-1]
  4240  017126  0EFF               	movlw	-1
  4241  017128  50E3               	movf	plusw1,w,c
  4242  01712A  6EE9               	movwf	fsr0l,c
  4243  01712C  6AEA               	clrf	fsr0h,c
  4244  01712E  006F FF7F FFEF     	movff	indf2,indf0
  4245                           
  4246                           ;hid.c: 35:    h->wait_select = 1;
  4247                           ;stkvar	_h @ sp[(0)+-1]
  4248  017134  0EFF               	movlw	-1
  4249  017136  50E3               	movf	plusw1,w,c
  4250  017138  6ED9               	movwf	fsr2l,c
  4251  01713A  6ADA               	clrf	fsr2h,c
  4252  01713C  0E02               	movlw	2
  4253  01713E  26D9               	addwf	fsr2l,f,c
  4254  017140  0E01               	movlw	1
  4255  017142                     L1:
  4256  017142  6EDF               	movwf	indf2,c
  4257  017144  D013               	goto	l1812
  4258  017146                     l9204:
  4259                           
  4260                           ;stkvar	_h @ sp[(0)+-1]
  4261  017146  0EFF               	movlw	-1
  4262  017148  50E3               	movf	plusw1,w,c
  4263  01714A  6ED9               	movwf	fsr2l,c
  4264  01714C  6ADA               	clrf	fsr2h,c
  4265  01714E  0E01               	movlw	1
  4266  017150  26D9               	addwf	fsr2l,f,c
  4267  017152  50DF               	movf	indf2,w,c
  4268  017154  6E3C               	movwf	(btemp+10)^0,c
  4269  017156  6A3D               	clrf	(btemp+11)^0,c
  4270                           
  4271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4272                           ; Switch size 1, requested type "simple"
  4273                           ; Number of cases is 1, Range of values is 0 to 0
  4274                           ; switch strategies available:
  4275                           ; Name         Instructions Cycles
  4276                           ; simple_byte            4     3 (average)
  4277                           ;	Chosen strategy is simple_byte
  4278  017158  503D               	movf	(btemp+11)^0,w,c
  4279  01715A  0A00               	xorlw	0	; case 0
  4280  01715C  A4D8               	btfss	status,2,c
  4281  01715E  D7BB               	goto	l9194
  4282                           
  4283                           ; Switch size 1, requested type "simple"
  4284                           ; Number of cases is 2, Range of values is 0 to 1
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte            7     4 (average)
  4288                           ;	Chosen strategy is simple_byte
  4289  017160  503C               	movf	(btemp+10)^0,w,c
  4290  017162  0A00               	xorlw	0	; case 0
  4291  017164  B4D8               	btfsc	status,2,c
  4292  017166  D789               	goto	l9182
  4293  017168  0A01               	xorlw	1	; case 1
  4294  01716A  D7B5               	goto	l9194
  4295  01716C                     l1812:
  4296                           
  4297                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4298  01716C  52E5               	movf	postdec1,f,c
  4299  01716E  0012               	return		;funcret
  4300  017170                     __end_of_hid_display:
  4301                           	opt callstack 0
  4302                           
  4303 ;; *************** function _hid_input *****************
  4304 ;; Defined at:
  4305 ;;		line 3 in file "hid.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  h               1  [STACK] PTR struct H_data
  4308 ;;		 -> H(7), 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1  [STACK] PTR struct H_data
  4313 ;; Registers used:
  4314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/1
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    7
  4327 ;; This function calls:
  4328 ;;		_get_switch
  4329 ;; This function is called by:
  4330 ;;		_hid_display
  4331 ;; This function uses a reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text12
  4335  017AB0                     __ptext12:
  4336                           	opt callstack 0
  4337  017AB0                     _hid_input:
  4338                           	opt callstack 22
  4339                           
  4340                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4341                           
  4342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4343                           ;incstack = 0
  4344  017AB0  0E02               	movlw	2
  4345  017AB2  6EE6               	movwf	postinc1,c
  4346  017AB4  EC4B  F0C4         	call	_get_switch	;wreg free
  4347  017AB8  5032               	movf	btemp^0,w,c
  4348  017ABA  B4D8               	btfsc	status,2,c
  4349  017ABC  D01C               	goto	l8956
  4350                           
  4351                           ;hid.c: 6:   h->wait_select = 0;
  4352                           ;stkvar	_h @ sp[(0)+-1]
  4353  017ABE  0EFF               	movlw	-1
  4354  017AC0  50E3               	movf	plusw1,w,c
  4355  017AC2  6ED9               	movwf	fsr2l,c
  4356  017AC4  6ADA               	clrf	fsr2h,c
  4357  017AC6  0E02               	movlw	2
  4358  017AC8  26D9               	addwf	fsr2l,f,c
  4359  017ACA  0E00               	movlw	0
  4360  017ACC  6EDF               	movwf	indf2,c
  4361                           
  4362                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4363  017ACE  0E02               	movlw	2
  4364  017AD0  6EE6               	movwf	postinc1,c
  4365  017AD2  EC4B  F0C4         	call	_get_switch	;wreg free
  4366  017AD6  5032               	movf	btemp^0,w,c
  4367  017AD8  B4D8               	btfsc	status,2,c
  4368  017ADA  D003               	goto	u8440
  4369  017ADC  6A3D               	clrf	(btemp+11)^0,c
  4370  017ADE  2A3D               	incf	(btemp+11)^0,f,c
  4371  017AE0  D001               	goto	u8458
  4372  017AE2                     u8440:
  4373  017AE2  6A3D               	clrf	(btemp+11)^0,c
  4374  017AE4                     u8458:
  4375                           
  4376                           ;stkvar	_h @ sp[(0)+-1]
  4377  017AE4  0EFF               	movlw	-1
  4378  017AE6  50E3               	movf	plusw1,w,c
  4379  017AE8  6ED9               	movwf	fsr2l,c
  4380  017AEA  6ADA               	clrf	fsr2h,c
  4381  017AEC  0E03               	movlw	3
  4382  017AEE  26D9               	addwf	fsr2l,f,c
  4383  017AF0  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4384  017AF6                     l8956:
  4385                           
  4386                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4387  017AF6  0E03               	movlw	3
  4388  017AF8  6EE6               	movwf	postinc1,c
  4389  017AFA  EC4B  F0C4         	call	_get_switch	;wreg free
  4390  017AFE  5032               	movf	btemp^0,w,c
  4391  017B00  B4D8               	btfsc	status,2,c
  4392  017B02  D01C               	goto	l1803
  4393                           
  4394                           ;hid.c: 11:   h->wait_enter = 0;
  4395                           ;stkvar	_h @ sp[(0)+-1]
  4396  017B04  0EFF               	movlw	-1
  4397  017B06  50E3               	movf	plusw1,w,c
  4398  017B08  6ED9               	movwf	fsr2l,c
  4399  017B0A  6ADA               	clrf	fsr2h,c
  4400  017B0C  0E04               	movlw	4
  4401  017B0E  26D9               	addwf	fsr2l,f,c
  4402  017B10  0E00               	movlw	0
  4403  017B12  6EDF               	movwf	indf2,c
  4404                           
  4405                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4406  017B14  0E03               	movlw	3
  4407  017B16  6EE6               	movwf	postinc1,c
  4408  017B18  EC4B  F0C4         	call	_get_switch	;wreg free
  4409  017B1C  5032               	movf	btemp^0,w,c
  4410  017B1E  B4D8               	btfsc	status,2,c
  4411  017B20  D003               	goto	u8470
  4412  017B22  6A3D               	clrf	(btemp+11)^0,c
  4413  017B24  2A3D               	incf	(btemp+11)^0,f,c
  4414  017B26  D001               	goto	u8488
  4415  017B28                     u8470:
  4416  017B28  6A3D               	clrf	(btemp+11)^0,c
  4417  017B2A                     u8488:
  4418                           
  4419                           ;stkvar	_h @ sp[(0)+-1]
  4420  017B2A  0EFF               	movlw	-1
  4421  017B2C  50E3               	movf	plusw1,w,c
  4422  017B2E  6ED9               	movwf	fsr2l,c
  4423  017B30  6ADA               	clrf	fsr2h,c
  4424  017B32  0E05               	movlw	5
  4425  017B34  26D9               	addwf	fsr2l,f,c
  4426  017B36  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4427  017B3C                     l1803:
  4428                           
  4429                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4430  017B3C  52E5               	movf	postdec1,f,c
  4431  017B3E  0012               	return		;funcret
  4432  017B40                     __end_of_hid_input:
  4433                           	opt callstack 0
  4434                           
  4435 ;; *************** function _get_switch *****************
  4436 ;; Defined at:
  4437 ;;		line 18 in file "dio.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  i               1  [STACK] unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1  [STACK] enum E17013
  4444 ;; Registers used:
  4445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/2
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    6
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;;		_hid_input
  4463 ;; This function uses a reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text13
  4467  018896                     __ptext13:
  4468                           	opt callstack 0
  4469  018896                     _get_switch:
  4470                           	opt callstack 22
  4471                           
  4472                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4473                           ;stkvar	_i @ sp[(0)+-1]
  4474                           
  4475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4476                           ;incstack = 0
  4477  018896  0EFF               	movlw	-1
  4478  018898  006F FF8C  F032    	movff	plusw1,btemp
  4479  01889E  0E03               	movlw	3
  4480  0188A0  6432               	cpfsgt	btemp^0,c
  4481  0188A2  D002               	goto	l8272
  4482                           
  4483                           ;dio.c: 21:   return SW_OFF;
  4484  0188A4  0E00               	movlw	0
  4485  0188A6  D008               	goto	L2
  4486  0188A8                     l8272:
  4487                           
  4488                           ;dio.c: 23:  return S.button[i].sw;
  4489                           ;stkvar	_i @ sp[(0)+-1]
  4490  0188A8  0EFF               	movlw	-1
  4491  0188AA  50E3               	movf	plusw1,w,c
  4492  0188AC  0D05               	mullw	5
  4493  0188AE  50F3               	movf	243,w,c
  4494  0188B0  0F60               	addlw	low _S
  4495  0188B2  6ED9               	movwf	fsr2l,c
  4496  0188B4  6ADA               	clrf	fsr2h,c
  4497  0188B6  50DF               	movf	indf2,w,c
  4498  0188B8                     L2:
  4499  0188B8  6E32               	movwf	btemp^0,c
  4500                           
  4501                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4502  0188BA  52E5               	movf	postdec1,f,c
  4503  0188BC  0012               	return		;funcret
  4504  0188BE                     __end_of_get_switch:
  4505                           	opt callstack 0
  4506                           
  4507 ;; *************** function _eaDogM_WriteCommand *****************
  4508 ;; Defined at:
  4509 ;;		line 160 in file "eadog.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  cmd             1  [STACK] const unsigned char 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1  [STACK] void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4518 ;; Tracked objects:
  4519 ;;		On entry : 3F/3D
  4520 ;;		On exit  : 3F/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:   16
  4530 ;; This function calls:
  4531 ;;		_send_lcd_cmd_dma
  4532 ;; This function is called by:
  4533 ;;		_main
  4534 ;; This function uses a reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text14
  4538  018DCE                     __ptext14:
  4539                           	opt callstack 0
  4540  018DCE                     _eaDogM_WriteCommand:
  4541                           	opt callstack 14
  4542                           
  4543                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  4544                           ;stkvar	_cmd @ sp[(0)+-1]
  4545                           
  4546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4547                           ;incstack = 0
  4548  018DCE  0EFF               	movlw	-1
  4549  018DD0  50E3               	movf	plusw1,w,c
  4550  018DD2  6EE6               	movwf	postinc1,c
  4551  018DD4  ECF6  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  4552                           
  4553                           ; BSR set to: 0
  4554                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4555  018DD8  52E5               	movf	postdec1,f,c
  4556  018DDA  0012               	return		;funcret
  4557  018DDC                     __end_of_eaDogM_WriteCommand:
  4558                           	opt callstack 0
  4559                           
  4560 ;; *************** function _convert_adc_data *****************
  4561 ;; Defined at:
  4562 ;;		line 39 in file "mbmc.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  i               1  [STACK] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1  [STACK] void 
  4569 ;; Registers used:
  4570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/39
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    9
  4583 ;; This function calls:
  4584 ;;		_conv_raw_result
  4585 ;;		_lp_filter
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text15
  4592  0175A2                     __ptext15:
  4593                           	opt callstack 0
  4594  0175A2                     _convert_adc_data:
  4595                           	opt callstack 0
  4596                           
  4597                           ; BSR set to: 0
  4598                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4599  0175A2  52E6               	movf	postinc1,f,c
  4600                           
  4601                           ;mbmc.c: 41:  uint8_t i = 0;
  4602                           ;stkvar	_i @ sp[(-1)+0]
  4603                           
  4604                           ;incstack = 0
  4605  0175A4  0EFF               	movlw	-1
  4606  0175A6  6AE3               	clrf	plusw1,c
  4607  0175A8                     l9162:
  4608                           
  4609                           ;mbmc.c: 44:   if (V.calib) {
  4610  0175A8  0102               	movlb	2	; () banked
  4611  0175AA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4612  0175AC  B4D8               	btfsc	status,2,c
  4613  0175AE  D01B               	goto	l9166
  4614                           
  4615                           ; BSR set to: 2
  4616                           ;mbmc.c: 45:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4617  0175B0  0E01               	movlw	1
  4618  0175B2  6EE6               	movwf	postinc1,c
  4619                           
  4620                           ;stkvar	_i @ sp[(-2)+0]
  4621  0175B4  0EFE               	movlw	-2
  4622  0175B6  50E3               	movf	plusw1,w,c
  4623  0175B8  6EE6               	movwf	postinc1,c
  4624  0175BA  0E01               	movlw	1
  4625  0175BC  6EE6               	movwf	postinc1,c
  4626                           
  4627                           ;stkvar	_i @ sp[(-4)+0]
  4628  0175BE  0EFC               	movlw	-4
  4629  0175C0  50E3               	movf	plusw1,w,c
  4630  0175C2  6EE6               	movwf	postinc1,c
  4631  0175C4  EC98  F09D         	call	_conv_raw_result	;wreg free
  4632  0175C8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4633  0175CE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4634  0175D4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4635  0175DA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4636  0175E0  EC8C  F0B0         	call	_lp_filter	;wreg free
  4637  0175E4  D01A               	goto	L3
  4638  0175E6                     l9166:
  4639                           
  4640                           ; BSR set to: 2
  4641                           ;mbmc.c: 47:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4642  0175E6  0E00               	movlw	0
  4643  0175E8  6EE6               	movwf	postinc1,c
  4644                           
  4645                           ;stkvar	_i @ sp[(-2)+0]
  4646  0175EA  0EFE               	movlw	-2
  4647  0175EC  50E3               	movf	plusw1,w,c
  4648  0175EE  6EE6               	movwf	postinc1,c
  4649  0175F0  0E00               	movlw	0
  4650  0175F2  6EE6               	movwf	postinc1,c
  4651                           
  4652                           ;stkvar	_i @ sp[(-4)+0]
  4653  0175F4  0EFC               	movlw	-4
  4654  0175F6  50E3               	movf	plusw1,w,c
  4655  0175F8  6EE6               	movwf	postinc1,c
  4656  0175FA  EC98  F09D         	call	_conv_raw_result	;wreg free
  4657  0175FE  0060  F0CB  FFE6   	movff	btemp,postinc1
  4658  017604  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4659  01760A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4660  017610  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4661  017616  EC8C  F0B0         	call	_lp_filter	;wreg free
  4662  01761A                     L3:
  4663                           
  4664                           ;stkvar	_i @ sp[(-1)+0]
  4665  01761A  0EFF               	movlw	-1
  4666  01761C  50E3               	movf	plusw1,w,c
  4667  01761E  0D04               	mullw	4
  4668  017620  0E00               	movlw	low _C
  4669  017622  24F3               	addwf	243,w,c
  4670  017624  6ED9               	movwf	fsr2l,c
  4671  017626  0E01               	movlw	high _C
  4672  017628  20F4               	addwfc	prodh,w,c
  4673  01762A  6EDA               	movwf	fsr2h,c
  4674  01762C  0060  F0CB  FFDE   	movff	btemp,postinc2
  4675  017632  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4676  017638  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4677  01763E  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4678                           
  4679                           ;mbmc.c: 49:  } while (++i < 16);
  4680                           ;stkvar	_i @ sp[(-1)+0]
  4681  017644  0EFF               	movlw	-1
  4682  017646  2AE3               	incf	plusw1,f,c
  4683  017648  0EFF               	movlw	-1
  4684  01764A  006F FF8C  F032    	movff	plusw1,btemp
  4685  017650  0E0F               	movlw	15
  4686  017652  6432               	cpfsgt	btemp^0,c
  4687  017654  D7A9               	goto	l9162
  4688                           
  4689                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4690  017656  52E5               	movf	postdec1,f,c
  4691  017658  0012               	return		;funcret
  4692  01765A                     __end_of_convert_adc_data:
  4693                           	opt callstack 0
  4694                           
  4695 ;; *************** function _conv_raw_result *****************
  4696 ;; Defined at:
  4697 ;;		line 80 in file "daq.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  chan            1  [STACK] const enum E16136
  4700 ;;  to_what         1  [STACK] const enum E16198
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  4  [STACK] float 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4707 ;; Tracked objects:
  4708 ;;		On entry : 3F/2
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    8
  4719 ;; This function calls:
  4720 ;;		___fldiv
  4721 ;;		___flmul
  4722 ;;		___flsub
  4723 ;;		___xxtofl
  4724 ;;		_get_raw_result
  4725 ;;		_nanf
  4726 ;; This function is called by:
  4727 ;;		_convert_adc_data
  4728 ;; This function uses a reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text16
  4732  013B30                     __ptext16:
  4733                           	opt callstack 0
  4734  013B30                     _conv_raw_result:
  4735                           	opt callstack 21
  4736                           
  4737                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4738                           
  4739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4740                           ;incstack = 0
  4741  013B30  D242               	goto	l8890
  4742  013B32                     l8836:
  4743                           
  4744                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4745                           ;stkvar	_chan @ sp[(0)+-1]
  4746  013B32  0EFF               	movlw	-1
  4747  013B34  006F FF8C  F03D    	movff	plusw1,btemp+11
  4748  013B3A  0E77               	movlw	119
  4749  013B3C  6E3A               	movwf	(btemp+8)^0,c
  4750  013B3E  0E3C               	movlw	60
  4751  013B40  6E3B               	movwf	(btemp+9)^0,c
  4752  013B42  2A3D               	incf	(btemp+11)^0,f,c
  4753  013B44  D003               	goto	u8214
  4754  013B46                     u8215:
  4755  013B46  343B               	rlcf	(btemp+9)^0,w,c
  4756  013B48  323B               	rrcf	(btemp+9)^0,f,c
  4757  013B4A  323A               	rrcf	(btemp+8)^0,f,c
  4758  013B4C                     u8214:
  4759  013B4C  2E3D               	decfsz	(btemp+11)^0,f,c
  4760  013B4E  D7FB               	goto	u8215
  4761  013B50  B03A               	btfsc	(btemp+8)^0,0,c
  4762  013B52  D007               	goto	l8842
  4763                           
  4764                           ;daq.c: 86:    return nanf("");
  4765  013B54  0E7F               	movlw	low (STR_39+18)
  4766  013B56  6EE6               	movwf	postinc1,c
  4767  013B58  0EFE               	movlw	high (STR_39+18)
  4768  013B5A  6EE6               	movwf	postinc1,c
  4769  013B5C  ECDD  F0BF         	call	_nanf	;wreg free
  4770  013B60  D23A               	goto	l1683
  4771  013B62                     l8842:
  4772                           
  4773                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4774                           ;stkvar	_chan @ sp[(0)+-1]
  4775  013B62  0EFF               	movlw	-1
  4776  013B64  006F FF8C  F03D    	movff	plusw1,btemp+11
  4777  013B6A  0E03               	movlw	3
  4778  013B6C  6E3A               	movwf	(btemp+8)^0,c
  4779  013B6E  0E00               	movlw	0
  4780  013B70  6E3B               	movwf	(btemp+9)^0,c
  4781  013B72  2A3D               	incf	(btemp+11)^0,f,c
  4782  013B74  D003               	goto	u8234
  4783  013B76                     u8235:
  4784  013B76  343B               	rlcf	(btemp+9)^0,w,c
  4785  013B78  323B               	rrcf	(btemp+9)^0,f,c
  4786  013B7A  323A               	rrcf	(btemp+8)^0,f,c
  4787  013B7C                     u8234:
  4788  013B7C  2E3D               	decfsz	(btemp+11)^0,f,c
  4789  013B7E  D7FB               	goto	u8235
  4790  013B80  A03A               	btfss	(btemp+8)^0,0,c
  4791  013B82  D0EB               	goto	l8856
  4792                           
  4793                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4794                           ;stkvar	_chan @ sp[(0)+-1]
  4795  013B84  0EFF               	movlw	-1
  4796  013B86  006F FF8C  F03D    	movff	plusw1,btemp+11
  4797  013B8C  0E01               	movlw	1
  4798  013B8E  6E3A               	movwf	(btemp+8)^0,c
  4799  013B90  0E00               	movlw	0
  4800  013B92  6E3B               	movwf	(btemp+9)^0,c
  4801  013B94  2A3D               	incf	(btemp+11)^0,f,c
  4802  013B96  D003               	goto	u8254
  4803  013B98                     u8255:
  4804  013B98  343B               	rlcf	(btemp+9)^0,w,c
  4805  013B9A  323B               	rrcf	(btemp+9)^0,f,c
  4806  013B9C  323A               	rrcf	(btemp+8)^0,f,c
  4807  013B9E                     u8254:
  4808  013B9E  2E3D               	decfsz	(btemp+11)^0,f,c
  4809  013BA0  D7FB               	goto	u8255
  4810  013BA2  A03A               	btfss	(btemp+8)^0,0,c
  4811  013BA4  D06D               	goto	l8852
  4812                           
  4813                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4814  013BA6  0E7B               	movlw	123
  4815  013BA8  6EE6               	movwf	postinc1,c
  4816  013BAA  0E14               	movlw	20
  4817  013BAC  6EE6               	movwf	postinc1,c
  4818  013BAE  0EAE               	movlw	174
  4819  013BB0  6EE6               	movwf	postinc1,c
  4820  013BB2  0E3D               	movlw	61
  4821  013BB4  6EE6               	movwf	postinc1,c
  4822  013BB6  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4823  013BBC  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4824  013BC2  0E00               	movlw	0
  4825  013BC4  BE3B               	btfsc	(btemp+9)^0,7,c
  4826  013BC6  0EFF               	movlw	255
  4827  013BC8  6E3C               	movwf	(btemp+10)^0,c
  4828  013BCA  6E3D               	movwf	(btemp+11)^0,c
  4829  013BCC  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4830  013BD2  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4831  013BD8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4832  013BDE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4833  013BE4  0E01               	movlw	1
  4834  013BE6  6EE6               	movwf	postinc1,c
  4835  013BE8  ECA6  F0AE         	call	___xxtofl	;wreg free
  4836  013BEC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4837  013BF2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4838  013BF8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4839  013BFE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4840                           
  4841                           ;stkvar	_chan @ sp[(-8)+-1]
  4842  013C04  0EF7               	movlw	-9
  4843  013C06  50E3               	movf	plusw1,w,c
  4844  013C08  6EE6               	movwf	postinc1,c
  4845  013C0A  EC14  F0C6         	call	_get_raw_result	;wreg free
  4846  013C0E  0060  F0C8  F03C   	movff	btemp,btemp+10
  4847  013C14  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4848  013C1A  503C               	movf	(btemp+10)^0,w,c
  4849  013C1C  6E36               	movwf	(btemp+4)^0,c
  4850  013C1E  503D               	movf	(btemp+11)^0,w,c
  4851  013C20  6E37               	movwf	(btemp+5)^0,c
  4852  013C22  6A38               	clrf	(btemp+6)^0,c
  4853  013C24  6A39               	clrf	(btemp+7)^0,c
  4854  013C26  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4855  013C2C  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4856  013C32  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4857  013C38  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4858  013C3E  0E00               	movlw	0
  4859  013C40  6EE6               	movwf	postinc1,c
  4860  013C42  ECA6  F0AE         	call	___xxtofl	;wreg free
  4861  013C46  0060  F0CB  FFE6   	movff	btemp,postinc1
  4862  013C4C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4863  013C52  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4864  013C58  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4865  013C5E  EC8F  F0C1         	call	___flsub	;wreg free
  4866  013C62  0060  F0CB  FFE6   	movff	btemp,postinc1
  4867  013C68  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4868  013C6E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4869  013C74  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4870  013C7A  ECE8  F092         	call	___flmul	;wreg free
  4871  013C7E  D1AB               	goto	l1683
  4872  013C80                     l8852:
  4873                           
  4874                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4875  013C80  0E29               	movlw	41
  4876  013C82  6EE6               	movwf	postinc1,c
  4877  013C84  0E5C               	movlw	92
  4878  013C86  6EE6               	movwf	postinc1,c
  4879  013C88  0E0F               	movlw	15
  4880  013C8A  6EE6               	movwf	postinc1,c
  4881  013C8C  0E3D               	movlw	61
  4882  013C8E  6EE6               	movwf	postinc1,c
  4883  013C90  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4884  013C96  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4885  013C9C  0E00               	movlw	0
  4886  013C9E  BE3B               	btfsc	(btemp+9)^0,7,c
  4887  013CA0  0EFF               	movlw	255
  4888  013CA2  6E3C               	movwf	(btemp+10)^0,c
  4889  013CA4  6E3D               	movwf	(btemp+11)^0,c
  4890  013CA6  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4891  013CAC  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4892  013CB2  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4893  013CB8  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4894  013CBE  0E01               	movlw	1
  4895  013CC0  6EE6               	movwf	postinc1,c
  4896  013CC2  ECA6  F0AE         	call	___xxtofl	;wreg free
  4897  013CC6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4898  013CCC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4899  013CD2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4900  013CD8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4901                           
  4902                           ;stkvar	_chan @ sp[(-8)+-1]
  4903  013CDE  0EF7               	movlw	-9
  4904  013CE0  50E3               	movf	plusw1,w,c
  4905  013CE2  6EE6               	movwf	postinc1,c
  4906  013CE4  EC14  F0C6         	call	_get_raw_result	;wreg free
  4907  013CE8  0060  F0C8  F03C   	movff	btemp,btemp+10
  4908  013CEE  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4909  013CF4  503C               	movf	(btemp+10)^0,w,c
  4910  013CF6  6E36               	movwf	(btemp+4)^0,c
  4911  013CF8  503D               	movf	(btemp+11)^0,w,c
  4912  013CFA  6E37               	movwf	(btemp+5)^0,c
  4913  013CFC  6A38               	clrf	(btemp+6)^0,c
  4914  013CFE  6A39               	clrf	(btemp+7)^0,c
  4915  013D00  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4916  013D06  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4917  013D0C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4918  013D12  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4919  013D18  0E00               	movlw	0
  4920  013D1A  6EE6               	movwf	postinc1,c
  4921  013D1C  ECA6  F0AE         	call	___xxtofl	;wreg free
  4922  013D20  0060  F0CB  FFE6   	movff	btemp,postinc1
  4923  013D26  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4924  013D2C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4925  013D32  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4926  013D38  EC8F  F0C1         	call	___flsub	;wreg free
  4927  013D3C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4928  013D42  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4929  013D48  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4930  013D4E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4931  013D54  ECE8  F092         	call	___flmul	;wreg free
  4932  013D58  D13E               	goto	l1683
  4933  013D5A                     l8856:
  4934                           
  4935                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4936                           ;stkvar	_chan @ sp[(0)+-1]
  4937  013D5A  0EFF               	movlw	-1
  4938  013D5C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4939  013D62  0E00               	movlw	0
  4940  013D64  6E3A               	movwf	(btemp+8)^0,c
  4941  013D66  0E08               	movlw	8
  4942  013D68  6E3B               	movwf	(btemp+9)^0,c
  4943  013D6A  2A3D               	incf	(btemp+11)^0,f,c
  4944  013D6C  D003               	goto	u8274
  4945  013D6E                     u8275:
  4946  013D6E  343B               	rlcf	(btemp+9)^0,w,c
  4947  013D70  323B               	rrcf	(btemp+9)^0,f,c
  4948  013D72  323A               	rrcf	(btemp+8)^0,f,c
  4949  013D74                     u8274:
  4950  013D74  2E3D               	decfsz	(btemp+11)^0,f,c
  4951  013D76  D7FB               	goto	u8275
  4952  013D78  A03A               	btfss	(btemp+8)^0,0,c
  4953  013D7A  D008               	goto	l8864
  4954                           
  4955                           ;daq.c: 96:     return 25.0;
  4956  013D7C  0E00               	movlw	0
  4957  013D7E  6E32               	movwf	btemp^0,c
  4958  013D80  0E00               	movlw	0
  4959  013D82  6E33               	movwf	(btemp+1)^0,c
  4960  013D84  0EC8               	movlw	200
  4961  013D86  6E34               	movwf	(btemp+2)^0,c
  4962  013D88  0E41               	movlw	65
  4963  013D8A  D113               	goto	L4
  4964  013D8C                     l8864:
  4965                           
  4966                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4967  013D8C  0E00               	movlw	0
  4968  013D8E  6EE6               	movwf	postinc1,c
  4969  013D90  0E00               	movlw	0
  4970  013D92  6EE6               	movwf	postinc1,c
  4971  013D94  0E7A               	movlw	122
  4972  013D96  6EE6               	movwf	postinc1,c
  4973  013D98  0E44               	movlw	68
  4974  013D9A  6EE6               	movwf	postinc1,c
  4975  013D9C  0E61               	movlw	97
  4976  013D9E  6EE6               	movwf	postinc1,c
  4977  013DA0  0E03               	movlw	3
  4978  013DA2  6EE6               	movwf	postinc1,c
  4979  013DA4  0E84               	movlw	132
  4980  013DA6  6EE6               	movwf	postinc1,c
  4981  013DA8  0E40               	movlw	64
  4982  013DAA  6EE6               	movwf	postinc1,c
  4983                           
  4984                           ;stkvar	_chan @ sp[(-8)+-1]
  4985  013DAC  0EF7               	movlw	-9
  4986  013DAE  50E3               	movf	plusw1,w,c
  4987  013DB0  6EE6               	movwf	postinc1,c
  4988  013DB2  EC14  F0C6         	call	_get_raw_result	;wreg free
  4989  013DB6  0060  F0C8  F03C   	movff	btemp,btemp+10
  4990  013DBC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4991  013DC2  503C               	movf	(btemp+10)^0,w,c
  4992  013DC4  6E36               	movwf	(btemp+4)^0,c
  4993  013DC6  503D               	movf	(btemp+11)^0,w,c
  4994  013DC8  6E37               	movwf	(btemp+5)^0,c
  4995  013DCA  6A38               	clrf	(btemp+6)^0,c
  4996  013DCC  6A39               	clrf	(btemp+7)^0,c
  4997  013DCE  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4998  013DD4  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4999  013DDA  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5000  013DE0  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5001  013DE6  0E00               	movlw	0
  5002  013DE8  6EE6               	movwf	postinc1,c
  5003  013DEA  ECA6  F0AE         	call	___xxtofl	;wreg free
  5004  013DEE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5005  013DF4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5006  013DFA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5007  013E00  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5008  013E06  ECE8  F092         	call	___flmul	;wreg free
  5009  013E0A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5010  013E10  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5011  013E16  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5012  013E1C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5013  013E22  ECDB  F09A         	call	___fldiv	;wreg free
  5014  013E26  D0D7               	goto	l1683
  5015  013E28                     l8868:
  5016                           
  5017                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5018                           ;stkvar	_chan @ sp[(0)+-1]
  5019  013E28  0EFF               	movlw	-1
  5020  013E2A  006F FF8C  F03D    	movff	plusw1,btemp+11
  5021  013E30  0E03               	movlw	3
  5022  013E32  6E3A               	movwf	(btemp+8)^0,c
  5023  013E34  0E00               	movlw	0
  5024  013E36  6E3B               	movwf	(btemp+9)^0,c
  5025  013E38  2A3D               	incf	(btemp+11)^0,f,c
  5026  013E3A  D003               	goto	u8294
  5027  013E3C                     u8295:
  5028  013E3C  343B               	rlcf	(btemp+9)^0,w,c
  5029  013E3E  323B               	rrcf	(btemp+9)^0,f,c
  5030  013E40  323A               	rrcf	(btemp+8)^0,f,c
  5031  013E42                     u8294:
  5032  013E42  2E3D               	decfsz	(btemp+11)^0,f,c
  5033  013E44  D7FB               	goto	u8295
  5034  013E46  B03A               	btfsc	(btemp+8)^0,0,c
  5035  013E48  D011               	goto	u8320
  5036                           
  5037                           ;stkvar	_chan @ sp[(0)+-1]
  5038  013E4A  0EFF               	movlw	-1
  5039  013E4C  006F FF8C  F03D    	movff	plusw1,btemp+11
  5040  013E52  0E00               	movlw	0
  5041  013E54  6E3A               	movwf	(btemp+8)^0,c
  5042  013E56  0E08               	movlw	8
  5043  013E58  6E3B               	movwf	(btemp+9)^0,c
  5044  013E5A  2A3D               	incf	(btemp+11)^0,f,c
  5045  013E5C  D003               	goto	u8314
  5046  013E5E                     u8315:
  5047  013E5E  343B               	rlcf	(btemp+9)^0,w,c
  5048  013E60  323B               	rrcf	(btemp+9)^0,f,c
  5049  013E62  323A               	rrcf	(btemp+8)^0,f,c
  5050  013E64                     u8314:
  5051  013E64  2E3D               	decfsz	(btemp+11)^0,f,c
  5052  013E66  D7FB               	goto	u8315
  5053  013E68  A03A               	btfss	(btemp+8)^0,0,c
  5054  013E6A  D04E               	goto	l8876
  5055  013E6C                     u8320:
  5056                           
  5057                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5058  013E6C  0E00               	movlw	0
  5059  013E6E  6EE6               	movwf	postinc1,c
  5060  013E70  0E00               	movlw	0
  5061  013E72  6EE6               	movwf	postinc1,c
  5062  013E74  0E7A               	movlw	122
  5063  013E76  6EE6               	movwf	postinc1,c
  5064  013E78  0E44               	movlw	68
  5065  013E7A  6EE6               	movwf	postinc1,c
  5066  013E7C  0E00               	movlw	0
  5067  013E7E  6EE6               	movwf	postinc1,c
  5068  013E80  0E00               	movlw	0
  5069  013E82  6EE6               	movwf	postinc1,c
  5070  013E84  0E20               	movlw	32
  5071  013E86  6EE6               	movwf	postinc1,c
  5072  013E88  0E3F               	movlw	63
  5073  013E8A  6EE6               	movwf	postinc1,c
  5074                           
  5075                           ;stkvar	_chan @ sp[(-8)+-1]
  5076  013E8C  0EF7               	movlw	-9
  5077  013E8E  50E3               	movf	plusw1,w,c
  5078  013E90  6EE6               	movwf	postinc1,c
  5079  013E92  EC14  F0C6         	call	_get_raw_result	;wreg free
  5080  013E96  0060  F0C8  F03C   	movff	btemp,btemp+10
  5081  013E9C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5082  013EA2  503C               	movf	(btemp+10)^0,w,c
  5083  013EA4  6E36               	movwf	(btemp+4)^0,c
  5084  013EA6  503D               	movf	(btemp+11)^0,w,c
  5085  013EA8  6E37               	movwf	(btemp+5)^0,c
  5086  013EAA  6A38               	clrf	(btemp+6)^0,c
  5087  013EAC  6A39               	clrf	(btemp+7)^0,c
  5088  013EAE  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5089  013EB4  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5090  013EBA  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5091  013EC0  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5092  013EC6  0E00               	movlw	0
  5093  013EC8  6EE6               	movwf	postinc1,c
  5094  013ECA  ECA6  F0AE         	call	___xxtofl	;wreg free
  5095  013ECE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5096  013ED4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5097  013EDA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5098  013EE0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5099  013EE6  ECE8  F092         	call	___flmul	;wreg free
  5100  013EEA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5101  013EF0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5102  013EF6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5103  013EFC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5104  013F02  ECDB  F09A         	call	___fldiv	;wreg free
  5105  013F06  D067               	goto	l1683
  5106  013F08                     l8876:
  5107                           
  5108                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5109  013F08  0E00               	movlw	0
  5110  013F0A  6EE6               	movwf	postinc1,c
  5111  013F0C  0E00               	movlw	0
  5112  013F0E  6EE6               	movwf	postinc1,c
  5113  013F10  0E7A               	movlw	122
  5114  013F12  6EE6               	movwf	postinc1,c
  5115  013F14  0E44               	movlw	68
  5116  013F16  6EE6               	movwf	postinc1,c
  5117  013F18  0E61               	movlw	97
  5118  013F1A  6EE6               	movwf	postinc1,c
  5119  013F1C  0E03               	movlw	3
  5120  013F1E  6EE6               	movwf	postinc1,c
  5121  013F20  0E84               	movlw	132
  5122  013F22  6EE6               	movwf	postinc1,c
  5123  013F24  0E40               	movlw	64
  5124  013F26  6EE6               	movwf	postinc1,c
  5125                           
  5126                           ;stkvar	_chan @ sp[(-8)+-1]
  5127  013F28  0EF7               	movlw	-9
  5128  013F2A  50E3               	movf	plusw1,w,c
  5129  013F2C  6EE6               	movwf	postinc1,c
  5130  013F2E  EC14  F0C6         	call	_get_raw_result	;wreg free
  5131  013F32  0060  F0C8  F03C   	movff	btemp,btemp+10
  5132  013F38  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5133  013F3E  503C               	movf	(btemp+10)^0,w,c
  5134  013F40  6E36               	movwf	(btemp+4)^0,c
  5135  013F42  503D               	movf	(btemp+11)^0,w,c
  5136  013F44  6E37               	movwf	(btemp+5)^0,c
  5137  013F46  6A38               	clrf	(btemp+6)^0,c
  5138  013F48  6A39               	clrf	(btemp+7)^0,c
  5139  013F4A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5140  013F50  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5141  013F56  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5142  013F5C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5143  013F62  0E00               	movlw	0
  5144  013F64  6EE6               	movwf	postinc1,c
  5145  013F66  ECA6  F0AE         	call	___xxtofl	;wreg free
  5146  013F6A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5147  013F70  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5148  013F76  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5149  013F7C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5150  013F82  ECE8  F092         	call	___flmul	;wreg free
  5151  013F86  0060  F0CB  FFE6   	movff	btemp,postinc1
  5152  013F8C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5153  013F92  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5154  013F98  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5155  013F9E  ECDB  F09A         	call	___fldiv	;wreg free
  5156  013FA2  D019               	goto	l1683
  5157  013FA4                     l8882:
  5158                           
  5159                           ;daq.c: 109:   return 0.0;
  5160  013FA4  0E00               	movlw	0
  5161  013FA6  6E32               	movwf	btemp^0,c
  5162  013FA8  0E00               	movlw	0
  5163  013FAA  6E33               	movwf	(btemp+1)^0,c
  5164  013FAC  0E00               	movlw	0
  5165  013FAE  6E34               	movwf	(btemp+2)^0,c
  5166  013FB0  0E00               	movlw	0
  5167  013FB2                     L4:
  5168  013FB2  6E35               	movwf	(btemp+3)^0,c
  5169  013FB4  D010               	goto	l1683
  5170  013FB6                     l8890:
  5171                           
  5172                           ;stkvar	_to_what @ sp[(0)+-2]
  5173  013FB6  0EFE               	movlw	-2
  5174  013FB8  50E3               	movf	plusw1,w,c
  5175  013FBA  6E3C               	movwf	(btemp+10)^0,c
  5176  013FBC  6A3D               	clrf	(btemp+11)^0,c
  5177                           
  5178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5179                           ; Switch size 1, requested type "simple"
  5180                           ; Number of cases is 1, Range of values is 0 to 0
  5181                           ; switch strategies available:
  5182                           ; Name         Instructions Cycles
  5183                           ; simple_byte            4     3 (average)
  5184                           ;	Chosen strategy is simple_byte
  5185  013FBE  503D               	movf	(btemp+11)^0,w,c
  5186  013FC0  0A00               	xorlw	0	; case 0
  5187  013FC2  A4D8               	btfss	status,2,c
  5188  013FC4  D7EF               	goto	l8882
  5189                           
  5190                           ; Switch size 1, requested type "simple"
  5191                           ; Number of cases is 2, Range of values is 0 to 1
  5192                           ; switch strategies available:
  5193                           ; Name         Instructions Cycles
  5194                           ; simple_byte            7     4 (average)
  5195                           ;	Chosen strategy is simple_byte
  5196  013FC6  503C               	movf	(btemp+10)^0,w,c
  5197  013FC8  0A00               	xorlw	0	; case 0
  5198  013FCA  B4D8               	btfsc	status,2,c
  5199  013FCC  D5B2               	goto	l8836
  5200  013FCE  0A01               	xorlw	1	; case 1
  5201  013FD0  B4D8               	btfsc	status,2,c
  5202  013FD2  D72A               	goto	l8868
  5203  013FD4  D7E7               	goto	l8882
  5204  013FD6                     l1683:
  5205                           
  5206                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5207  013FD6  52E5               	movf	postdec1,f,c
  5208  013FD8  52E5               	movf	postdec1,f,c
  5209  013FDA  0012               	return		;funcret
  5210  013FDC                     __end_of_conv_raw_result:
  5211                           	opt callstack 0
  5212                           
  5213 ;; *************** function _nanf *****************
  5214 ;; Defined at:
  5215 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  s               2  [STACK] PTR const unsigned char 
  5218 ;;		 -> STR_45(1), 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  u               4  [STACK] struct .
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  4  [STACK] float 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/2
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5234 ;;Total ram usage:        0 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    6
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_conv_raw_result
  5241 ;; This function uses a reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text17
  5245  017FBA                     __ptext17:
  5246                           	opt callstack 0
  5247  017FBA                     _nanf:
  5248                           	opt callstack 0
  5249                           
  5250                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5251  017FBA  52E6               	movf	postinc1,f,c
  5252  017FBC  52E6               	movf	postinc1,f,c
  5253  017FBE  52E6               	movf	postinc1,f,c
  5254  017FC0  52E6               	movf	postinc1,f,c
  5255                           
  5256                           ;incstack = 0
  5257  017FC2  0EFF               	movlw	255
  5258  017FC4  6E3A               	movwf	(btemp+8)^0,c
  5259  017FC6  0EFF               	movlw	255
  5260  017FC8  6E3B               	movwf	(btemp+9)^0,c
  5261  017FCA  0EFF               	movlw	255
  5262  017FCC  6E3C               	movwf	(btemp+10)^0,c
  5263  017FCE  0E7F               	movlw	127
  5264  017FD0  6E3D               	movwf	(btemp+11)^0,c
  5265                           
  5266                           ;stkvar	_u @ sp[(-4)+0]
  5267  017FD2  0EFC               	movlw	-4
  5268  017FD4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5269  017FDA  0EFD               	movlw	-3
  5270  017FDC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5271  017FE2  0EFE               	movlw	-2
  5272  017FE4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5273  017FEA  0EFF               	movlw	-1
  5274  017FEC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5275                           
  5276                           ;stkvar	_u @ sp[(-4)+0]
  5277  017FF2  0EFC               	movlw	-4
  5278  017FF4  006F FF8C  F032    	movff	plusw1,btemp
  5279  017FFA  0EFD               	movlw	-3
  5280  017FFC  006F FF8C  F033    	movff	plusw1,btemp+1
  5281  018002  0EFE               	movlw	-2
  5282  018004  006F FF8C  F034    	movff	plusw1,btemp+2
  5283  01800A  0EFF               	movlw	-1
  5284  01800C  006F FF8C  F035    	movff	plusw1,btemp+3
  5285                           
  5286                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5287  018012  0EFA               	movlw	250
  5288  018014  26E1               	addwf	fsr1l,f,c
  5289  018016  0EFF               	movlw	255
  5290  018018  22E2               	addwfc	fsr1h,f,c
  5291  01801A  0012               	return		;funcret
  5292  01801C                     __end_of_nanf:
  5293                           	opt callstack 0
  5294                           
  5295 ;; *************** function _get_raw_result *****************
  5296 ;; Defined at:
  5297 ;;		line 72 in file "daq.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  index           1  [STACK] const enum E16136
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  2  [STACK] unsigned short 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/2
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    6
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;;		_conv_raw_result
  5323 ;; This function uses a reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text18
  5327  018C28                     __ptext18:
  5328                           	opt callstack 0
  5329  018C28                     _get_raw_result:
  5330                           	opt callstack 24
  5331                           
  5332                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5333                           ;stkvar	_index @ sp[(0)+-1]
  5334                           
  5335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5336                           ;incstack = 0
  5337  018C28  0EFF               	movlw	-1
  5338  018C2A  50E3               	movf	plusw1,w,c
  5339  018C2C  0D02               	mullw	2
  5340  018C2E  50F3               	movf	243,w,c
  5341  018C30  0FC7               	addlw	low _R
  5342  018C32  6ED9               	movwf	fsr2l,c
  5343  018C34  6ADA               	clrf	fsr2h,c
  5344  018C36  006F FF78  F032    	movff	postinc2,btemp
  5345  018C3C  006F FF74  F033    	movff	postdec2,btemp+1
  5346                           
  5347                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5348  018C42  52E5               	movf	postdec1,f,c
  5349  018C44  0012               	return		;funcret
  5350  018C46                     __end_of_get_raw_result:
  5351                           	opt callstack 0
  5352                           
  5353 ;; *************** function ___xxtofl *****************
  5354 ;; Defined at:
  5355 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  sign            1  [STACK] unsigned char 
  5358 ;;  val             4  [STACK] long 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  arg             4  [STACK] unsigned long 
  5361 ;;  exp             1  [STACK] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  4  [STACK] unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/2
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    6
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_conv_raw_result
  5382 ;; This function uses a reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text19
  5386  015D4C                     __ptext19:
  5387                           	opt callstack 0
  5388  015D4C                     ___xxtofl:
  5389                           	opt callstack 0
  5390                           
  5391                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5392  015D4C  0E05               	movlw	5
  5393  015D4E  26E1               	addwf	fsr1l,f,c
  5394  015D50  0E00               	movlw	0
  5395  015D52  22E2               	addwfc	fsr1h,f,c
  5396                           
  5397                           ;stkvar	_sign @ sp[(-5)+-1]
  5398                           
  5399                           ;incstack = 0
  5400  015D54  0EFA               	movlw	-6
  5401  015D56  50E3               	movf	plusw1,w,c
  5402  015D58  B4D8               	btfsc	status,2,c
  5403  015D5A  D01D               	goto	l8290
  5404                           
  5405                           ;stkvar	_val @ sp[(-5)+-5]
  5406  015D5C  0EF9               	movlw	-7
  5407  015D5E  AEE3               	btfss	plusw1,7,c
  5408  015D60  D01A               	goto	l8290
  5409                           
  5410                           ;stkvar	_val @ sp[(-5)+-5]
  5411  015D62  0EF6               	movlw	-10
  5412  015D64  006F FF8C  F03A    	movff	plusw1,btemp+8
  5413  015D6A  0EF7               	movlw	-9
  5414  015D6C  006F FF8C  F03B    	movff	plusw1,btemp+9
  5415  015D72  0EF8               	movlw	-8
  5416  015D74  006F FF8C  F03C    	movff	plusw1,btemp+10
  5417  015D7A  0EF9               	movlw	-7
  5418  015D7C  006F FF8C  F03D    	movff	plusw1,btemp+11
  5419  015D82  1E3A               	comf	(btemp+8)^0,f,c
  5420  015D84  1E3B               	comf	(btemp+9)^0,f,c
  5421  015D86  1E3C               	comf	(btemp+10)^0,f,c
  5422  015D88  1E3D               	comf	(btemp+11)^0,f,c
  5423  015D8A  2A3A               	incf	(btemp+8)^0,f,c
  5424  015D8C  0E00               	movlw	0
  5425  015D8E  223B               	addwfc	(btemp+9)^0,f,c
  5426  015D90  223C               	addwfc	(btemp+10)^0,f,c
  5427  015D92  223D               	addwfc	(btemp+11)^0,f,c
  5428  015D94  D010               	goto	L5
  5429  015D96                     l8290:
  5430                           
  5431                           ;stkvar	_val @ sp[(-5)+-5]
  5432  015D96  0EF6               	movlw	-10
  5433  015D98  006F FF8C  F03A    	movff	plusw1,btemp+8
  5434  015D9E  0EF7               	movlw	-9
  5435  015DA0  006F FF8C  F03B    	movff	plusw1,btemp+9
  5436  015DA6  0EF8               	movlw	-8
  5437  015DA8  006F FF8C  F03C    	movff	plusw1,btemp+10
  5438  015DAE  0EF9               	movlw	-7
  5439  015DB0  006F FF8C  F03D    	movff	plusw1,btemp+11
  5440  015DB6                     L5:
  5441                           
  5442                           ;stkvar	_arg @ sp[(-5)+0]
  5443  015DB6  0EFB               	movlw	-5
  5444  015DB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5445  015DBE  0EFC               	movlw	-4
  5446  015DC0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5447  015DC6  0EFD               	movlw	-3
  5448  015DC8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5449  015DCE  0EFE               	movlw	-2
  5450  015DD0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5451                           
  5452                           ;stkvar	_val @ sp[(-5)+-5]
  5453  015DD6  0EF6               	movlw	-10
  5454  015DD8  50E3               	movf	plusw1,w,c
  5455  015DDA  E113               	bnz	l8298
  5456  015DDC  0EF7               	movlw	-9
  5457  015DDE  50E3               	movf	plusw1,w,c
  5458  015DE0  E110               	bnz	l8298
  5459  015DE2  0EF8               	movlw	-8
  5460  015DE4  50E3               	movf	plusw1,w,c
  5461  015DE6  E10D               	bnz	l8298
  5462  015DE8  0EF9               	movlw	-7
  5463  015DEA  50E3               	movf	plusw1,w,c
  5464  015DEC  A4D8               	btfss	status,2,c
  5465  015DEE  D009               	goto	l8298
  5466  015DF0  0E00               	movlw	0
  5467  015DF2  6E32               	movwf	btemp^0,c
  5468  015DF4  0E00               	movlw	0
  5469  015DF6  6E33               	movwf	(btemp+1)^0,c
  5470  015DF8  0E00               	movlw	0
  5471  015DFA  6E34               	movwf	(btemp+2)^0,c
  5472  015DFC  0E00               	movlw	0
  5473  015DFE  6E35               	movwf	(btemp+3)^0,c
  5474  015E00  D0A2               	goto	l2757
  5475  015E02                     l8298:
  5476  015E02  0E96               	movlw	150
  5477  015E04  6E3D               	movwf	(btemp+11)^0,c
  5478                           
  5479                           ;stkvar	_exp @ sp[(-5)+4]
  5480  015E06  0EFF               	movlw	-1
  5481  015E08  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5482  015E0E  D00B               	goto	l8302
  5483  015E10                     l8300:
  5484                           
  5485                           ;stkvar	_exp @ sp[(-5)+4]
  5486  015E10  0EFF               	movlw	-1
  5487  015E12  2AE3               	incf	plusw1,f,c
  5488                           
  5489                           ;stkvar	_arg @ sp[(-5)+0]
  5490  015E14  90D8               	bcf	status,0,c
  5491  015E16  0EFE               	movlw	-2
  5492  015E18  32E3               	rrcf	plusw1,f,c
  5493  015E1A  0EFD               	movlw	-3
  5494  015E1C  32E3               	rrcf	plusw1,f,c
  5495  015E1E  0EFC               	movlw	-4
  5496  015E20  32E3               	rrcf	plusw1,f,c
  5497  015E22  0EFB               	movlw	-5
  5498  015E24  32E3               	rrcf	plusw1,f,c
  5499  015E26                     l8302:
  5500                           
  5501                           ;stkvar	_arg @ sp[(-5)+0]
  5502  015E26  50E1               	movf	fsr1l,w,c
  5503  015E28  0FFB               	addlw	-5
  5504  015E2A  6ED9               	movwf	fsr2l,c
  5505  015E2C  50E2               	movf	fsr1h,w,c
  5506  015E2E  6EDA               	movwf	fsr2h,c
  5507  015E30  0EFF               	movlw	255
  5508  015E32  22DA               	addwfc	fsr2h,f,c
  5509  015E34  52DE               	movf	postinc2,f,c
  5510  015E36  52DE               	movf	postinc2,f,c
  5511  015E38  52DE               	movf	postinc2,f,c
  5512  015E3A  0EFE               	movlw	254
  5513  015E3C  14DD               	andwf	postdec2,w,c
  5514  015E3E  B4D8               	btfsc	status,2,c
  5515  015E40  D018               	goto	l8310
  5516  015E42  D7E6               	goto	l8300
  5517  015E44                     l8304:
  5518                           
  5519                           ;stkvar	_exp @ sp[(-5)+4]
  5520  015E44  0EFF               	movlw	-1
  5521  015E46  2AE3               	incf	plusw1,f,c
  5522                           
  5523                           ;stkvar	_arg @ sp[(-5)+0]
  5524  015E48  50E1               	movf	fsr1l,w,c
  5525  015E4A  0FFB               	addlw	-5
  5526  015E4C  6ED9               	movwf	fsr2l,c
  5527  015E4E  50E2               	movf	fsr1h,w,c
  5528  015E50  6EDA               	movwf	fsr2h,c
  5529  015E52  0EFF               	movlw	255
  5530  015E54  22DA               	addwfc	fsr2h,f,c
  5531  015E56  2ADE               	incf	postinc2,f,c
  5532  015E58  0E00               	movlw	0
  5533  015E5A  22DE               	addwfc	postinc2,f,c
  5534  015E5C  22DE               	addwfc	postinc2,f,c
  5535  015E5E  22DE               	addwfc	postinc2,f,c
  5536                           
  5537                           ;stkvar	_arg @ sp[(-5)+0]
  5538  015E60  90D8               	bcf	status,0,c
  5539  015E62  0EFE               	movlw	-2
  5540  015E64  32E3               	rrcf	plusw1,f,c
  5541  015E66  0EFD               	movlw	-3
  5542  015E68  32E3               	rrcf	plusw1,f,c
  5543  015E6A  0EFC               	movlw	-4
  5544  015E6C  32E3               	rrcf	plusw1,f,c
  5545  015E6E  0EFB               	movlw	-5
  5546  015E70  32E3               	rrcf	plusw1,f,c
  5547  015E72                     l8310:
  5548                           
  5549                           ;stkvar	_arg @ sp[(-5)+0]
  5550  015E72  50E1               	movf	fsr1l,w,c
  5551  015E74  0FFB               	addlw	-5
  5552  015E76  6ED9               	movwf	fsr2l,c
  5553  015E78  50E2               	movf	fsr1h,w,c
  5554  015E7A  6EDA               	movwf	fsr2h,c
  5555  015E7C  0EFF               	movlw	255
  5556  015E7E  22DA               	addwfc	fsr2h,f,c
  5557  015E80  52DE               	movf	postinc2,f,c
  5558  015E82  52DE               	movf	postinc2,f,c
  5559  015E84  52DE               	movf	postinc2,f,c
  5560  015E86  0EFF               	movlw	255
  5561  015E88  14DD               	andwf	postdec2,w,c
  5562  015E8A  B4D8               	btfsc	status,2,c
  5563  015E8C  D00C               	goto	l8314
  5564  015E8E  D7DA               	goto	l8304
  5565  015E90                     l8312:
  5566                           
  5567                           ;stkvar	_exp @ sp[(-5)+4]
  5568  015E90  0EFF               	movlw	-1
  5569  015E92  06E3               	decf	plusw1,f,c
  5570                           
  5571                           ;stkvar	_arg @ sp[(-5)+0]
  5572  015E94  90D8               	bcf	status,0,c
  5573  015E96  0EFB               	movlw	-5
  5574  015E98  36E3               	rlcf	plusw1,f,c
  5575  015E9A  0EFC               	movlw	-4
  5576  015E9C  36E3               	rlcf	plusw1,f,c
  5577  015E9E  0EFD               	movlw	-3
  5578  015EA0  36E3               	rlcf	plusw1,f,c
  5579  015EA2  0EFE               	movlw	-2
  5580  015EA4  36E3               	rlcf	plusw1,f,c
  5581  015EA6                     l8314:
  5582                           
  5583                           ;stkvar	_arg @ sp[(-5)+0]
  5584  015EA6  0EFD               	movlw	-3
  5585  015EA8  BEE3               	btfsc	plusw1,7,c
  5586  015EAA  D007               	goto	u8010
  5587                           
  5588                           ;stkvar	_exp @ sp[(-5)+4]
  5589  015EAC  0EFF               	movlw	-1
  5590  015EAE  006F FF8C  F032    	movff	plusw1,btemp
  5591  015EB4  0E02               	movlw	2
  5592  015EB6  6032               	cpfslt	btemp^0,c
  5593  015EB8  D7EB               	goto	l8312
  5594  015EBA                     u8010:
  5595                           
  5596                           ;stkvar	_exp @ sp[(-5)+4]
  5597  015EBA  0EFF               	movlw	-1
  5598  015EBC  B0E3               	btfsc	plusw1,0,c
  5599  015EBE  D002               	goto	l8322
  5600                           
  5601                           ;stkvar	_arg @ sp[(-5)+0]
  5602  015EC0  0EFD               	movlw	-3
  5603  015EC2  9EE3               	bcf	plusw1,7,c
  5604  015EC4                     l8322:
  5605                           
  5606                           ;stkvar	_exp @ sp[(-5)+4]
  5607  015EC4  50E1               	movf	fsr1l,w,c
  5608  015EC6  0FFF               	addlw	-1
  5609  015EC8  6ED9               	movwf	fsr2l,c
  5610  015ECA  50E2               	movf	fsr1h,w,c
  5611  015ECC  6EDA               	movwf	fsr2h,c
  5612  015ECE  0EFF               	movlw	255
  5613  015ED0  22DA               	addwfc	fsr2h,f,c
  5614  015ED2  90D8               	bcf	status,0,c
  5615  015ED4  32DF               	rrcf	indf2,f,c
  5616                           
  5617                           ;stkvar	_exp @ sp[(-5)+4]
  5618  015ED6  0EFF               	movlw	-1
  5619  015ED8  006F FF8C  F03D    	movff	plusw1,btemp+11
  5620  015EDE  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5621  015EE4  6A37               	clrf	(btemp+5)^0,c
  5622  015EE6  6A38               	clrf	(btemp+6)^0,c
  5623  015EE8  6A39               	clrf	(btemp+7)^0,c
  5624  015EEA  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5625  015EF0  6A38               	clrf	(btemp+6)^0,c
  5626  015EF2  6A37               	clrf	(btemp+5)^0,c
  5627  015EF4  6A36               	clrf	(btemp+4)^0,c
  5628                           
  5629                           ;stkvar	_arg @ sp[(-5)+0]
  5630  015EF6  50E1               	movf	fsr1l,w,c
  5631  015EF8  0FFB               	addlw	-5
  5632  015EFA  6ED9               	movwf	fsr2l,c
  5633  015EFC  50E2               	movf	fsr1h,w,c
  5634  015EFE  6EDA               	movwf	fsr2h,c
  5635  015F00  0EFF               	movlw	255
  5636  015F02  22DA               	addwfc	fsr2h,f,c
  5637  015F04  5036               	movf	(btemp+4)^0,w,c
  5638  015F06  12DE               	iorwf	postinc2,f,c
  5639  015F08  5037               	movf	(btemp+5)^0,w,c
  5640  015F0A  12DE               	iorwf	postinc2,f,c
  5641  015F0C  5038               	movf	(btemp+6)^0,w,c
  5642  015F0E  12DE               	iorwf	postinc2,f,c
  5643  015F10  5039               	movf	(btemp+7)^0,w,c
  5644  015F12  12DE               	iorwf	postinc2,f,c
  5645                           
  5646                           ;stkvar	_sign @ sp[(-5)+-1]
  5647  015F14  0EFA               	movlw	-6
  5648  015F16  50E3               	movf	plusw1,w,c
  5649  015F18  B4D8               	btfsc	status,2,c
  5650  015F1A  D005               	goto	l8332
  5651                           
  5652                           ;stkvar	_val @ sp[(-5)+-5]
  5653  015F1C  0EF9               	movlw	-7
  5654  015F1E  AEE3               	btfss	plusw1,7,c
  5655  015F20  D002               	goto	l8332
  5656                           
  5657                           ;stkvar	_arg @ sp[(-5)+0]
  5658  015F22  0EFE               	movlw	-2
  5659  015F24  8EE3               	bsf	plusw1,7,c
  5660  015F26                     l8332:
  5661                           
  5662                           ;stkvar	_arg @ sp[(-5)+0]
  5663  015F26  0EFB               	movlw	-5
  5664  015F28  006F FF8C  F032    	movff	plusw1,btemp
  5665  015F2E  0EFC               	movlw	-4
  5666  015F30  006F FF8C  F033    	movff	plusw1,btemp+1
  5667  015F36  0EFD               	movlw	-3
  5668  015F38  006F FF8C  F034    	movff	plusw1,btemp+2
  5669  015F3E  0EFE               	movlw	-2
  5670  015F40  006F FF8C  F035    	movff	plusw1,btemp+3
  5671  015F46                     l2757:
  5672                           
  5673                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5674  015F46  0EF6               	movlw	246
  5675  015F48  26E1               	addwf	fsr1l,f,c
  5676  015F4A  0EFF               	movlw	255
  5677  015F4C  22E2               	addwfc	fsr1h,f,c
  5678  015F4E  0012               	return		;funcret
  5679  015F50                     __end_of___xxtofl:
  5680                           	opt callstack 0
  5681                           
  5682 ;; *************** function _clear_hid_pflags *****************
  5683 ;; Defined at:
  5684 ;;		line 42 in file "hid.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  h               1  [STACK] PTR struct H_data
  5687 ;;		 -> H(7), 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1  [STACK] void 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/2
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    6
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_main
  5710 ;; This function uses a reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text20
  5714  018B16                     __ptext20:
  5715                           	opt callstack 0
  5716  018B16                     _clear_hid_pflags:
  5717                           	opt callstack 24
  5718                           
  5719                           ;hid.c: 42: void clear_hid_pflags(H_data* h);hid.c: 43: {;hid.c: 44:  h->select_p = SW_O
      +                          FF;
  5720                           ;stkvar	_h @ sp[(0)+-1]
  5721                           
  5722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5723                           ;incstack = 0
  5724  018B16  0EFF               	movlw	-1
  5725  018B18  50E3               	movf	plusw1,w,c
  5726  018B1A  6ED9               	movwf	fsr2l,c
  5727  018B1C  6ADA               	clrf	fsr2h,c
  5728  018B1E  0E03               	movlw	3
  5729  018B20  26D9               	addwf	fsr2l,f,c
  5730  018B22  0E00               	movlw	0
  5731  018B24  6EDF               	movwf	indf2,c
  5732                           
  5733                           ;hid.c: 45:  h->enter_p = SW_OFF;
  5734                           ;stkvar	_h @ sp[(0)+-1]
  5735  018B26  0EFF               	movlw	-1
  5736  018B28  50E3               	movf	plusw1,w,c
  5737  018B2A  6ED9               	movwf	fsr2l,c
  5738  018B2C  6ADA               	clrf	fsr2h,c
  5739  018B2E  0E05               	movlw	5
  5740  018B30  26D9               	addwf	fsr2l,f,c
  5741  018B32  0E00               	movlw	0
  5742  018B34  6EDF               	movwf	indf2,c
  5743                           
  5744                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5745  018B36  52E5               	movf	postdec1,f,c
  5746  018B38  0012               	return		;funcret
  5747  018B3A                     __end_of_clear_hid_pflags:
  5748                           	opt callstack 0
  5749                           
  5750 ;; *************** function _clear_adc_scan *****************
  5751 ;; Defined at:
  5752 ;;		line 64 in file "daq.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1  [STACK] void 
  5759 ;; Registers used:
  5760 ;;		None
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/39
  5763 ;;		On exit  : 3F/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    6
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_main
  5777 ;; This function uses a reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text21
  5781  018E5E                     __ptext21:
  5782                           	opt callstack 0
  5783  018E5E                     _clear_adc_scan:
  5784                           	opt callstack 24
  5785                           
  5786                           ;daq.c: 66:  R.done = 0;
  5787                           
  5788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5789                           ;incstack = 0
  5790  018E5E  0100               	movlb	0	; () banked
  5791  018E60  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5792                           
  5793                           ; BSR set to: 0
  5794                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5795  018E62  0012               	return		;funcret
  5796  018E64                     __end_of_clear_adc_scan:
  5797                           	opt callstack 0
  5798                           
  5799 ;; *************** function _check_help *****************
  5800 ;; Defined at:
  5801 ;;		line 40 in file "mconfig.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  flipper         1  [STACK] const _Bool 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  estatus         1  [STACK] _Bool 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1  [STACK] _Bool 
  5808 ;; Registers used:
  5809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5810 ;; Tracked objects:
  5811 ;;		On entry : 3F/2
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:   18
  5822 ;; This function calls:
  5823 ;;		_StartTimer
  5824 ;;		_TimerDone
  5825 ;;		_display_help
  5826 ;;		_display_info
  5827 ;;		_get_vterm_ptr
  5828 ;;		_help_button
  5829 ;;		_mode_lamp_bright
  5830 ;;		_mode_lamp_dim
  5831 ;;		_set_display_info
  5832 ;;		_set_temp_display_help
  5833 ;;		_set_vterm
  5834 ;;		_sprintf
  5835 ;;		_update_lcd
  5836 ;;		_vterm_dump
  5837 ;; This function is called by:
  5838 ;;		_main
  5839 ;; This function uses a reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text22
  5843  015B24                     __ptext22:
  5844                           	opt callstack 0
  5845  015B24                     _check_help:
  5846                           	opt callstack 0
  5847                           
  5848                           ; BSR set to: 0
  5849                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5850  015B24  52E6               	movf	postinc1,f,c
  5851                           
  5852                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5853                           ;stkvar	_estatus @ sp[(-1)+0]
  5854                           
  5855                           ;incstack = 0
  5856  015B26  0EFF               	movlw	-1
  5857  015B28  6AE3               	clrf	plusw1,c
  5858                           
  5859                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5860  015B2A  ECBB  F0C2         	call	_help_button	;wreg free
  5861  015B2E  5032               	movf	btemp^0,w,c
  5862  015B30  B4D8               	btfsc	status,2,c
  5863  015B32  D0D3               	goto	l10702
  5864  015B34  EC1F  F0C7         	call	_display_info	;wreg free
  5865  015B38  0432               	decf	btemp^0,w,c
  5866  015B3A  B4D8               	btfsc	status,2,c
  5867  015B3C  D0CE               	goto	l10702
  5868                           
  5869                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5870  015B3E  0EDC               	movlw	220
  5871  015B40  6EE6               	movwf	postinc1,c
  5872  015B42  0E05               	movlw	5
  5873  015B44  6EE6               	movwf	postinc1,c
  5874  015B46  0E0B               	movlw	11
  5875  015B48  6EE6               	movwf	postinc1,c
  5876  015B4A  EC9D  F0C2         	call	_StartTimer	;wreg free
  5877                           
  5878                           ;mconfig.c: 48:   if (V.debug)
  5879  015B4E  0102               	movlb	2	; () banked
  5880  015B50  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5881                           
  5882                           ; BSR set to: 2
  5883                           ;mconfig.c: 49:    vterm_dump();
  5884  015B52  ECEC  F0B4         	call	_vterm_dump	;wreg free
  5885                           
  5886                           ;mconfig.c: 51:   set_vterm(1);
  5887  015B56  0E01               	movlw	1
  5888  015B58  6EE6               	movwf	postinc1,c
  5889  015B5A  EC5E  F0C6         	call	_set_vterm	;wreg free
  5890                           
  5891                           ; BSR set to: 5
  5892                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5893  015B5E  EC1F  F0C7         	call	_display_info	;wreg free
  5894  015B62  5032               	movf	btemp^0,w,c
  5895  015B64  6EE6               	movwf	postinc1,c
  5896  015B66  ECDF  F0C6         	call	_set_temp_display_help	;wreg free
  5897                           
  5898                           ; BSR set to: 2
  5899                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5900  015B6A  0E01               	movlw	1
  5901  015B6C  6EE6               	movwf	postinc1,c
  5902  015B6E  EC23  F0C6         	call	_set_display_info	;wreg free
  5903                           
  5904                           ;mconfig.c: 54:   if (flipper) {
  5905                           ;stkvar	_flipper @ sp[(-1)+-1]
  5906  015B72  0EFE               	movlw	-2
  5907  015B74  50E3               	movf	plusw1,w,c
  5908  015B76  B4D8               	btfsc	status,2,c
  5909  015B78  D019               	goto	l10688
  5910                           
  5911                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5912  015B7A  0EC1               	movlw	low STR_27
  5913  015B7C  6EE6               	movwf	postinc1,c
  5914  015B7E  0EFF               	movlw	high STR_27
  5915  015B80  6EE6               	movwf	postinc1,c
  5916  015B82  0E80               	movlw	low STR_29
  5917  015B84  6EE6               	movwf	postinc1,c
  5918  015B86  0EFE               	movlw	high STR_29
  5919  015B88  6EE6               	movwf	postinc1,c
  5920  015B8A  0E01               	movlw	1
  5921  015B8C  6EE6               	movwf	postinc1,c
  5922  015B8E  0E00               	movlw	0
  5923  015B90  6EE6               	movwf	postinc1,c
  5924  015B92  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  5925  015B96  0060  F0CB  FFE6   	movff	btemp,postinc1
  5926  015B9C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5927  015BA2  0E06               	movlw	6
  5928  015BA4  6EE6               	movwf	postinc1,c
  5929  015BA6  ECB2  F0B7         	call	_sprintf	;wreg free
  5930                           
  5931                           ;mconfig.c: 56:   } else {
  5932  015BAA  D018               	goto	l1587
  5933  015BAC                     l10688:
  5934                           
  5935                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5936  015BAC  0ED7               	movlw	low STR_28
  5937  015BAE  6EE6               	movwf	postinc1,c
  5938  015BB0  0EFF               	movlw	high STR_28
  5939  015BB2  6EE6               	movwf	postinc1,c
  5940  015BB4  0E80               	movlw	low STR_29
  5941  015BB6  6EE6               	movwf	postinc1,c
  5942  015BB8  0EFE               	movlw	high STR_29
  5943  015BBA  6EE6               	movwf	postinc1,c
  5944  015BBC  0E01               	movlw	1
  5945  015BBE  6EE6               	movwf	postinc1,c
  5946  015BC0  0E00               	movlw	0
  5947  015BC2  6EE6               	movwf	postinc1,c
  5948  015BC4  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  5949  015BC8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5950  015BCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5951  015BD4  0E06               	movlw	6
  5952  015BD6  6EE6               	movwf	postinc1,c
  5953  015BD8  ECB2  F0B7         	call	_sprintf	;wreg free
  5954  015BDC                     l1587:
  5955                           
  5956                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5957  015BDC  0102               	movlb	2	; () banked
  5958  015BDE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5959  015BE0  32E8               	rrcf	wreg,f,c
  5960  015BE2  32E8               	rrcf	wreg,f,c
  5961  015BE4  0B03               	andlw	3
  5962  015BE6  0D24               	mullw	36
  5963  015BE8  0E12               	movlw	18
  5964  015BEA  26F3               	addwf	243,f,c
  5965  015BEC  0E00               	movlw	0
  5966  015BEE  22F4               	addwfc	244,f,c
  5967  015BF0  0EC5               	movlw	low _T
  5968  015BF2  6E3C               	movwf	(btemp+10)^0,c
  5969  015BF4  0EFD               	movlw	high _T
  5970  015BF6  6E3D               	movwf	(btemp+11)^0,c
  5971  015BF8  50F3               	movf	243,w,c
  5972  015BFA  263C               	addwf	(btemp+10)^0,f,c
  5973  015BFC  50F4               	movf	244,w,c
  5974  015BFE  223D               	addwfc	(btemp+11)^0,f,c
  5975  015C00  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5976  015C06  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5977  015C0C  0ECD               	movlw	low STR_31
  5978  015C0E  6EE6               	movwf	postinc1,c
  5979  015C10  0EFF               	movlw	high STR_31
  5980  015C12  6EE6               	movwf	postinc1,c
  5981  015C14  0E01               	movlw	1
  5982  015C16  6EE6               	movwf	postinc1,c
  5983  015C18  0E01               	movlw	1
  5984  015C1A  6EE6               	movwf	postinc1,c
  5985  015C1C  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  5986  015C20  0060  F0CB  FFE6   	movff	btemp,postinc1
  5987  015C26  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5988  015C2C  0E06               	movlw	6
  5989  015C2E  6EE6               	movwf	postinc1,c
  5990  015C30  ECB2  F0B7         	call	_sprintf	;wreg free
  5991                           
  5992                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5993  015C34  0102               	movlb	2	; () banked
  5994  015C36  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5995  015C38  32E8               	rrcf	wreg,f,c
  5996  015C3A  32E8               	rrcf	wreg,f,c
  5997  015C3C  0B03               	andlw	3
  5998  015C3E  0D24               	mullw	36
  5999  015C40  0EC5               	movlw	low _T
  6000  015C42  6E3C               	movwf	(btemp+10)^0,c
  6001  015C44  0EFD               	movlw	high _T
  6002  015C46  6E3D               	movwf	(btemp+11)^0,c
  6003  015C48  50F3               	movf	243,w,c
  6004  015C4A  263C               	addwf	(btemp+10)^0,f,c
  6005  015C4C  50F4               	movf	244,w,c
  6006  015C4E  223D               	addwfc	(btemp+11)^0,f,c
  6007  015C50  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6008  015C56  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6009  015C5C  0ECD               	movlw	low STR_31
  6010  015C5E  6EE6               	movwf	postinc1,c
  6011  015C60  0EFF               	movlw	high STR_31
  6012  015C62  6EE6               	movwf	postinc1,c
  6013  015C64  0E01               	movlw	1
  6014  015C66  6EE6               	movwf	postinc1,c
  6015  015C68  0E02               	movlw	2
  6016  015C6A  6EE6               	movwf	postinc1,c
  6017  015C6C  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6018  015C70  0060  F0CB  FFE6   	movff	btemp,postinc1
  6019  015C76  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6020  015C7C  0E06               	movlw	6
  6021  015C7E  6EE6               	movwf	postinc1,c
  6022  015C80  ECB2  F0B7         	call	_sprintf	;wreg free
  6023                           
  6024                           ;mconfig.c: 61:   V.help_id++;
  6025  015C84  EE20  F29B         	lfsr	2,_V+155	;volatile
  6026  015C88  38DF               	swapf	223,w,c
  6027  015C8A  6E3D               	movwf	(btemp+11)^0,c
  6028  015C8C  323D               	rrcf	(btemp+11)^0,f,c
  6029  015C8E  303D               	rrcf	(btemp+11)^0,w,c
  6030  015C90  0B03               	andlw	3
  6031  015C92  6E3D               	movwf	(btemp+11)^0,c
  6032  015C94  2A3D               	incf	(btemp+11)^0,f,c
  6033  015C96  3A3D               	swapf	(btemp+11)^0,f,c
  6034  015C98  363D               	rlcf	(btemp+11)^0,f,c
  6035  015C9A  363D               	rlcf	(btemp+11)^0,f,c
  6036  015C9C  50DF               	movf	223,w,c
  6037  015C9E  183D               	xorwf	(btemp+11)^0,w,c
  6038  015CA0  0B3F               	andlw	-193
  6039  015CA2  183D               	xorwf	(btemp+11)^0,w,c
  6040  015CA4  6EDF               	movwf	223,c
  6041                           
  6042                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6043  015CA6  0EB8               	movlw	184
  6044  015CA8  6EE6               	movwf	postinc1,c
  6045  015CAA  0E0B               	movlw	11
  6046  015CAC  6EE6               	movwf	postinc1,c
  6047  015CAE  0E09               	movlw	9
  6048  015CB0  6EE6               	movwf	postinc1,c
  6049  015CB2  EC9D  F0C2         	call	_StartTimer	;wreg free
  6050                           
  6051                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6052  015CB6  0EB8               	movlw	184
  6053  015CB8  6EE6               	movwf	postinc1,c
  6054  015CBA  0E0B               	movlw	11
  6055  015CBC  6EE6               	movwf	postinc1,c
  6056  015CBE  0E07               	movlw	7
  6057  015CC0  6EE6               	movwf	postinc1,c
  6058  015CC2  EC9D  F0C2         	call	_StartTimer	;wreg free
  6059                           
  6060                           ;mconfig.c: 64:   mode_lamp_bright();
  6061  015CC6  ECEE  F0C6         	call	_mode_lamp_bright	;wreg free
  6062                           
  6063                           ;mconfig.c: 65:   update_lcd(1);
  6064  015CCA  0E01               	movlw	1
  6065  015CCC  6EE6               	movwf	postinc1,c
  6066  015CCE  EC2B  F0B7         	call	_update_lcd	;wreg free
  6067                           
  6068                           ;mconfig.c: 66:   estatus=1;
  6069                           ;stkvar	_estatus @ sp[(-1)+0]
  6070  015CD2  0EFF               	movlw	-1
  6071  015CD4  6AE3               	clrf	plusw1,c
  6072  015CD6  2AE3               	incf	plusw1,f,c
  6073                           
  6074                           ;mconfig.c: 67:  } else {
  6075  015CD8  D032               	goto	l10718
  6076  015CDA                     l10702:
  6077                           
  6078                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6079  015CDA  0E09               	movlw	9
  6080  015CDC  6EE6               	movwf	postinc1,c
  6081  015CDE  EC9D  F0C5         	call	_TimerDone	;wreg free
  6082  015CE2  5032               	movf	btemp^0,w,c
  6083  015CE4  B4D8               	btfsc	status,2,c
  6084  015CE6  D02B               	goto	l10718
  6085                           
  6086                           ;mconfig.c: 69:    set_vterm(0);
  6087  015CE8  0E00               	movlw	0
  6088  015CEA  6EE6               	movwf	postinc1,c
  6089  015CEC  EC5E  F0C6         	call	_set_vterm	;wreg free
  6090                           
  6091                           ; BSR set to: 5
  6092                           ;mconfig.c: 70:    V.help = 0;
  6093  015CF0  0102               	movlb	2	; () banked
  6094  015CF2  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6095                           
  6096                           ; BSR set to: 2
  6097                           ;mconfig.c: 71:    set_display_info(display_help());
  6098  015CF4  EC23  F0C7         	call	_display_help	;wreg free
  6099  015CF8  5032               	movf	btemp^0,w,c
  6100  015CFA  6EE6               	movwf	postinc1,c
  6101  015CFC  EC23  F0C6         	call	_set_display_info	;wreg free
  6102                           
  6103                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6104  015D00  0060  FA57  FFE6   	movff	_V+149,postinc1
  6105  015D06  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6106  015D0C  EC87  F0C6         	call	_mode_lamp_dim	;wreg free
  6107                           
  6108                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6109  015D10  0E0B               	movlw	11
  6110  015D12  6EE6               	movwf	postinc1,c
  6111  015D14  EC9D  F0C5         	call	_TimerDone	;wreg free
  6112  015D18  5032               	movf	btemp^0,w,c
  6113  015D1A  B4D8               	btfsc	status,2,c
  6114  015D1C  D010               	goto	l10718
  6115                           
  6116                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6117  015D1E  0102               	movlb	2	; () banked
  6118  015D20  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6119  015D22  A4D8               	btfss	status,2,c
  6120  015D24  D002               	goto	u10540
  6121  015D26  0E01               	movlw	1
  6122  015D28  D001               	goto	u10550
  6123  015D2A                     u10540:
  6124  015D2A  0E00               	movlw	0
  6125  015D2C                     u10550:
  6126  015D2C  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6127                           
  6128                           ; BSR set to: 2
  6129                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6130  015D2E  0EDC               	movlw	220
  6131  015D30  6EE6               	movwf	postinc1,c
  6132  015D32  0E05               	movlw	5
  6133  015D34  6EE6               	movwf	postinc1,c
  6134  015D36  0E0B               	movlw	11
  6135  015D38  6EE6               	movwf	postinc1,c
  6136  015D3A  EC9D  F0C2         	call	_StartTimer	;wreg free
  6137  015D3E                     l10718:
  6138                           
  6139                           ;mconfig.c: 79:  return estatus;
  6140                           ;stkvar	_estatus @ sp[(-1)+0]
  6141  015D3E  0EFF               	movlw	-1
  6142  015D40  006F FF8C  F032    	movff	plusw1,btemp
  6143                           
  6144                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6145  015D46  52E5               	movf	postdec1,f,c
  6146  015D48  52E5               	movf	postdec1,f,c
  6147  015D4A  0012               	return		;funcret
  6148  015D4C                     __end_of_check_help:
  6149                           	opt callstack 0
  6150                           
  6151 ;; *************** function _vterm_dump *****************
  6152 ;; Defined at:
  6153 ;;		line 121 in file "mconfig.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1  [STACK] void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6162 ;; Tracked objects:
  6163 ;;		On entry : 3F/2
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:   17
  6174 ;; This function calls:
  6175 ;;		_WaitMs
  6176 ;;		_eaDogM_WriteStringAtPos
  6177 ;;		_get_vterm_ptr
  6178 ;;		_sprintf
  6179 ;;		_wait_lcd_done
  6180 ;; This function is called by:
  6181 ;;		_check_help
  6182 ;; This function uses a reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text23
  6186  0169D8                     __ptext23:
  6187                           	opt callstack 0
  6188  0169D8                     _vterm_dump:
  6189                           	opt callstack 12
  6190                           
  6191                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6192                           
  6193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6194                           ;incstack = 0
  6195  0169D8  0E01               	movlw	1
  6196  0169DA  6EE6               	movwf	postinc1,c
  6197  0169DC  0E00               	movlw	0
  6198  0169DE  6EE6               	movwf	postinc1,c
  6199  0169E0  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6200  0169E4  0060  F0CB  FFE6   	movff	btemp,postinc1
  6201  0169EA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6202  0169F0  0E00               	movlw	0
  6203  0169F2  6EE6               	movwf	postinc1,c
  6204  0169F4  0E00               	movlw	0
  6205  0169F6  6EE6               	movwf	postinc1,c
  6206  0169F8  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6207  0169FC  0060  F0CB  FFE6   	movff	btemp,postinc1
  6208  016A02  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6209  016A08  0EA3               	movlw	low STR_33
  6210  016A0A  6EE6               	movwf	postinc1,c
  6211  016A0C  0EFF               	movlw	high STR_33
  6212  016A0E  6EE6               	movwf	postinc1,c
  6213  016A10  0E01               	movlw	low (_V+1)
  6214  016A12  6EE6               	movwf	postinc1,c
  6215  016A14  0E02               	movlw	high (_V+1)
  6216  016A16  6EE6               	movwf	postinc1,c
  6217  016A18  0E08               	movlw	8
  6218  016A1A  6EE6               	movwf	postinc1,c
  6219  016A1C  ECB2  F0B7         	call	_sprintf	;wreg free
  6220                           
  6221                           ;mconfig.c: 124:  wait_lcd_done();
  6222  016A20  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6226  016A24  0E01               	movlw	low (_V+1)
  6227  016A26  6EE6               	movwf	postinc1,c
  6228  016A28  0E02               	movlw	high (_V+1)
  6229  016A2A  6EE6               	movwf	postinc1,c
  6230  016A2C  0E00               	movlw	0
  6231  016A2E  6EE6               	movwf	postinc1,c
  6232  016A30  0E00               	movlw	0
  6233  016A32  6EE6               	movwf	postinc1,c
  6234  016A34  ECF2  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6235                           
  6236                           ; BSR set to: 59
  6237                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6238  016A38  0E01               	movlw	1
  6239  016A3A  6EE6               	movwf	postinc1,c
  6240  016A3C  0E01               	movlw	1
  6241  016A3E  6EE6               	movwf	postinc1,c
  6242  016A40  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6243  016A44  0060  F0CB  FFE6   	movff	btemp,postinc1
  6244  016A4A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6245  016A50  0E00               	movlw	0
  6246  016A52  6EE6               	movwf	postinc1,c
  6247  016A54  0E01               	movlw	1
  6248  016A56  6EE6               	movwf	postinc1,c
  6249  016A58  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6250  016A5C  0060  F0CB  FFE6   	movff	btemp,postinc1
  6251  016A62  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6252  016A68  0EA3               	movlw	low STR_33
  6253  016A6A  6EE6               	movwf	postinc1,c
  6254  016A6C  0EFF               	movlw	high STR_33
  6255  016A6E  6EE6               	movwf	postinc1,c
  6256  016A70  0E01               	movlw	low (_V+1)
  6257  016A72  6EE6               	movwf	postinc1,c
  6258  016A74  0E02               	movlw	high (_V+1)
  6259  016A76  6EE6               	movwf	postinc1,c
  6260  016A78  0E08               	movlw	8
  6261  016A7A  6EE6               	movwf	postinc1,c
  6262  016A7C  ECB2  F0B7         	call	_sprintf	;wreg free
  6263                           
  6264                           ;mconfig.c: 127:  wait_lcd_done();
  6265  016A80  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  6266                           
  6267                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6268  016A84  0E01               	movlw	low (_V+1)
  6269  016A86  6EE6               	movwf	postinc1,c
  6270  016A88  0E02               	movlw	high (_V+1)
  6271  016A8A  6EE6               	movwf	postinc1,c
  6272  016A8C  0E00               	movlw	0
  6273  016A8E  6EE6               	movwf	postinc1,c
  6274  016A90  0E01               	movlw	1
  6275  016A92  6EE6               	movwf	postinc1,c
  6276  016A94  ECF2  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6277                           
  6278                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6279  016A98  0E01               	movlw	1
  6280  016A9A  6EE6               	movwf	postinc1,c
  6281  016A9C  0E02               	movlw	2
  6282  016A9E  6EE6               	movwf	postinc1,c
  6283  016AA0  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6284  016AA4  0060  F0CB  FFE6   	movff	btemp,postinc1
  6285  016AAA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6286  016AB0  0E00               	movlw	0
  6287  016AB2  6EE6               	movwf	postinc1,c
  6288  016AB4  0E02               	movlw	2
  6289  016AB6  6EE6               	movwf	postinc1,c
  6290  016AB8  ECA1  F0C3         	call	_get_vterm_ptr	;wreg free
  6291  016ABC  0060  F0CB  FFE6   	movff	btemp,postinc1
  6292  016AC2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6293  016AC8  0EA3               	movlw	low STR_33
  6294  016ACA  6EE6               	movwf	postinc1,c
  6295  016ACC  0EFF               	movlw	high STR_33
  6296  016ACE  6EE6               	movwf	postinc1,c
  6297  016AD0  0E01               	movlw	low (_V+1)
  6298  016AD2  6EE6               	movwf	postinc1,c
  6299  016AD4  0E02               	movlw	high (_V+1)
  6300  016AD6  6EE6               	movwf	postinc1,c
  6301  016AD8  0E08               	movlw	8
  6302  016ADA  6EE6               	movwf	postinc1,c
  6303  016ADC  ECB2  F0B7         	call	_sprintf	;wreg free
  6304                           
  6305                           ;mconfig.c: 130:  wait_lcd_done();
  6306  016AE0  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6310  016AE4  0E01               	movlw	low (_V+1)
  6311  016AE6  6EE6               	movwf	postinc1,c
  6312  016AE8  0E02               	movlw	high (_V+1)
  6313  016AEA  6EE6               	movwf	postinc1,c
  6314  016AEC  0E00               	movlw	0
  6315  016AEE  6EE6               	movwf	postinc1,c
  6316  016AF0  0E02               	movlw	2
  6317  016AF2  6EE6               	movwf	postinc1,c
  6318  016AF4  ECF2  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6319                           
  6320                           ; BSR set to: 59
  6321                           ;mconfig.c: 132:  WaitMs(3000);
  6322  016AF8  0EB8               	movlw	184
  6323  016AFA  6EE6               	movwf	postinc1,c
  6324  016AFC  0E0B               	movlw	11
  6325  016AFE  6EE6               	movwf	postinc1,c
  6326  016B00  ECD7  F0C2         	call	_WaitMs	;wreg free
  6327                           
  6328                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6329  016B04  0012               	return		;funcret
  6330  016B06                     __end_of_vterm_dump:
  6331                           	opt callstack 0
  6332                           
  6333 ;; *************** function _sprintf *****************
  6334 ;; Defined at:
  6335 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  s               2  [STACK] PTR unsigned char 
  6338 ;;		 -> D.lcd(216), D(218), V(188), 
  6339 ;;  fmt             2  [STACK] PTR const unsigned char 
  6340 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6341 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6342 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6343 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6344 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6345 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6346 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6347 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6348 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6349 ;;		 -> STR_1(17), 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  f               6  [STACK] struct _IO_FILE
  6352 ;;  ap              2  [STACK] PTR void [1]
  6353 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6354 ;;  ret             2    0        int 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  2  [STACK] int 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/5
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:   14
  6371 ;; This function calls:
  6372 ;;		_vfprintf
  6373 ;; This function is called by:
  6374 ;;		_main
  6375 ;;		_check_help
  6376 ;;		_vterm_dump
  6377 ;; This function uses a reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text24
  6381  016F64                     __ptext24:
  6382                           	opt callstack 0
  6383  016F64                     _sprintf:
  6384                           	opt callstack 0
  6385                           
  6386                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6387  016F64  0E08               	movlw	8
  6388  016F66  26E1               	addwf	fsr1l,f,c
  6389  016F68  0E00               	movlw	0
  6390  016F6A  22E2               	addwfc	fsr1h,f,c
  6391                           
  6392                           ;incstack = 0
  6393  016F6C  0EFE               	movlw	254
  6394  016F6E  6E3C               	movwf	(btemp+10)^0,c
  6395  016F70  0EFF               	movlw	255
  6396  016F72  6E3D               	movwf	(btemp+11)^0,c
  6397                           
  6398                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6399  016F74  0EF5               	movlw	245
  6400  016F76  24E1               	addwf	fsr1l,w,c
  6401  016F78  6E3A               	movwf	(btemp+8)^0,c
  6402  016F7A  0EFF               	movlw	255
  6403  016F7C  20E2               	addwfc	fsr1h,w,c
  6404  016F7E  6E3B               	movwf	(btemp+9)^0,c
  6405  016F80  503C               	movf	(btemp+10)^0,w,c
  6406  016F82  263A               	addwf	(btemp+8)^0,f,c
  6407  016F84  503D               	movf	(btemp+11)^0,w,c
  6408  016F86  223B               	addwfc	(btemp+9)^0,f,c
  6409                           
  6410                           ;stkvar	_ap @ sp[(-8)+6]
  6411  016F88  0EFF               	movlw	-1
  6412  016F8A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  6413  016F90  0EFE               	movlw	-2
  6414  016F92  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  6415                           
  6416                           ;stkvar	_s @ sp[(-8)+-3]
  6417  016F98  0EF5               	movlw	-11
  6418  016F9A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6419  016FA0  0EF6               	movlw	-10
  6420  016FA2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6421                           
  6422                           ;stkvar	_f @ sp[(-8)+0]
  6423  016FA8  0EF9               	movlw	-7
  6424  016FAA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6425  016FB0  0EF8               	movlw	-8
  6426  016FB2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6427                           
  6428                           ;stkvar	_f @ sp[(-8)+0]
  6429  016FB8  0EFA               	movlw	250
  6430  016FBA  24E1               	addwf	fsr1l,w,c
  6431  016FBC  6ED9               	movwf	fsr2l,c
  6432  016FBE  0EFF               	movlw	255
  6433  016FC0  20E2               	addwfc	fsr1h,w,c
  6434  016FC2  6EDA               	movwf	fsr2h,c
  6435  016FC4  0E00               	movlw	0
  6436  016FC6  6EDE               	movwf	postinc2,c
  6437  016FC8  0E00               	movlw	0
  6438  016FCA  6EDD               	movwf	postdec2,c
  6439                           
  6440                           ;stkvar	_f @ sp[(-8)+0]
  6441  016FCC  0EFC               	movlw	252
  6442  016FCE  24E1               	addwf	fsr1l,w,c
  6443  016FD0  6ED9               	movwf	fsr2l,c
  6444  016FD2  0EFF               	movlw	255
  6445  016FD4  20E2               	addwfc	fsr1h,w,c
  6446  016FD6  6EDA               	movwf	fsr2h,c
  6447  016FD8  0E00               	movlw	0
  6448  016FDA  6EDE               	movwf	postinc2,c
  6449  016FDC  0E00               	movlw	0
  6450  016FDE  6EDD               	movwf	postdec2,c
  6451                           
  6452                           ;stkvar	_ap @ sp[(-8)+6]
  6453  016FE0  0EFE               	movlw	254
  6454  016FE2  24E1               	addwf	fsr1l,w,c
  6455  016FE4  6E32               	movwf	btemp^0,c
  6456  016FE6  0EFF               	movlw	255
  6457  016FE8  20E2               	addwfc	fsr1h,w,c
  6458  016FEA  6E33               	movwf	(btemp+1)^0,c
  6459  016FEC  0060  F0CB  FFE6   	movff	btemp,postinc1
  6460  016FF2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6461                           
  6462                           ;stkvar	_fmt @ sp[(-10)+-5]
  6463  016FF8  0EF1               	movlw	-15
  6464  016FFA  006F FF8F FFE6     	movff	plusw1,postinc1
  6465  017000  006F FF8F FFE6     	movff	plusw1,postinc1
  6466                           
  6467                           ;stkvar	_f @ sp[(-12)+0]
  6468  017006  0EF4               	movlw	244
  6469  017008  24E1               	addwf	fsr1l,w,c
  6470  01700A  6E32               	movwf	btemp^0,c
  6471  01700C  0EFF               	movlw	255
  6472  01700E  20E2               	addwfc	fsr1h,w,c
  6473  017010  6E33               	movwf	(btemp+1)^0,c
  6474  017012  0060  F0CB  FFE6   	movff	btemp,postinc1
  6475  017018  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6476  01701E  EC82  F0BB         	call	_vfprintf	;wreg free
  6477                           
  6478                           ;stkvar	_f @ sp[(-8)+0]
  6479  017022  0EFA               	movlw	250
  6480  017024  24E1               	addwf	fsr1l,w,c
  6481  017026  6ED9               	movwf	fsr2l,c
  6482  017028  0EFF               	movlw	255
  6483  01702A  20E2               	addwfc	fsr1h,w,c
  6484  01702C  6EDA               	movwf	fsr2h,c
  6485  01702E  006F FF78  F03C    	movff	postinc2,btemp+10
  6486  017034  006F FF74  F03D    	movff	postdec2,btemp+11
  6487                           
  6488                           ;stkvar	_s @ sp[(-8)+-3]
  6489  01703A  0EF5               	movlw	-11
  6490  01703C  006F FF8C  F03A    	movff	plusw1,btemp+8
  6491  017042  0EF6               	movlw	-10
  6492  017044  006F FF8C  F03B    	movff	plusw1,btemp+9
  6493  01704A  503C               	movf	(btemp+10)^0,w,c
  6494  01704C  243A               	addwf	(btemp+8)^0,w,c
  6495  01704E  6ED9               	movwf	fsr2l,c
  6496  017050  503D               	movf	(btemp+11)^0,w,c
  6497  017052  203B               	addwfc	(btemp+9)^0,w,c
  6498  017054  6EDA               	movwf	fsr2h,c
  6499  017056  0E00               	movlw	0
  6500  017058  6EDF               	movwf	indf2,c
  6501                           
  6502                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6503  01705A  0EF8               	movlw	248
  6504  01705C  26E1               	addwf	fsr1l,f,c
  6505  01705E  0EFF               	movlw	255
  6506  017060  22E2               	addwfc	fsr1h,f,c
  6507  017062  52E5               	movf	postdec1,f,c
  6508  017064  50E7               	movf	indf1,w,c
  6509  017066  5EE1               	subwf	fsr1l,f,c
  6510  017068  0E00               	movlw	0
  6511  01706A  5AE2               	subwfb	fsr1h,f,c
  6512  01706C  0012               	return		;funcret
  6513  01706E                     __end_of_sprintf:
  6514                           	opt callstack 0
  6515                           
  6516 ;; *************** function _get_vterm_ptr *****************
  6517 ;; Defined at:
  6518 ;;		line 116 in file "mconfig.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  line            1  [STACK] const unsigned char 
  6521 ;;  vterm           1  [STACK] const unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  2  [STACK] PTR unsigned char 
  6526 ;; Registers used:
  6527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/5
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    6
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;;		_check_help
  6545 ;;		_vterm_dump
  6546 ;; This function uses a reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text25
  6550  018742                     __ptext25:
  6551                           	opt callstack 0
  6552  018742                     _get_vterm_ptr:
  6553                           	opt callstack 24
  6554                           
  6555                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6556                           ;stkvar	_vterm @ sp[(0)+-2]
  6557                           
  6558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6559                           ;incstack = 0
  6560  018742  0EFE               	movlw	-2
  6561  018744  50E3               	movf	plusw1,w,c
  6562  018746  0B03               	andlw	3
  6563  018748  0D36               	mullw	54
  6564  01874A  0E00               	movlw	low _D
  6565  01874C  6E32               	movwf	btemp^0,c
  6566  01874E  0E05               	movlw	high _D
  6567  018750  6E33               	movwf	(btemp+1)^0,c
  6568  018752  50F3               	movf	243,w,c
  6569  018754  2632               	addwf	btemp^0,f,c
  6570  018756  50F4               	movf	244,w,c
  6571  018758  2233               	addwfc	(btemp+1)^0,f,c
  6572                           
  6573                           ;stkvar	_line @ sp[(0)+-1]
  6574  01875A  0EFF               	movlw	-1
  6575  01875C  50E3               	movf	plusw1,w,c
  6576  01875E  0B03               	andlw	3
  6577  018760  0D12               	mullw	18
  6578  018762  50F3               	movf	243,w,c
  6579  018764  2632               	addwf	btemp^0,f,c
  6580  018766  50F4               	movf	244,w,c
  6581  018768  2233               	addwfc	(btemp+1)^0,f,c
  6582                           
  6583                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6584  01876A  52E5               	movf	postdec1,f,c
  6585  01876C  52E5               	movf	postdec1,f,c
  6586  01876E  0012               	return		;funcret
  6587  018770                     __end_of_get_vterm_ptr:
  6588                           	opt callstack 0
  6589                           
  6590 ;; *************** function _WaitMs *****************
  6591 ;; Defined at:
  6592 ;;		line 32 in file "timers.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  numMilliseco    2  [STACK] const unsigned short 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1  [STACK] void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/2
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6610 ;;Total ram usage:        0 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    7
  6613 ;; This function calls:
  6614 ;;		_StartTimer
  6615 ;;		_TimerDone
  6616 ;; This function is called by:
  6617 ;;		_main
  6618 ;;		_vterm_dump
  6619 ;; This function uses a reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text26
  6623  0185AE                     __ptext26:
  6624                           	opt callstack 0
  6625  0185AE                     _WaitMs:
  6626                           	opt callstack 21
  6627                           
  6628                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6629                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6630                           
  6631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6632                           ;incstack = 0
  6633  0185AE  0EFE               	movlw	-2
  6634  0185B0  006F FF8F FFE6     	movff	plusw1,postinc1
  6635  0185B6  006F FF8F FFE6     	movff	plusw1,postinc1
  6636  0185BC  0E00               	movlw	0
  6637  0185BE  6EE6               	movwf	postinc1,c
  6638  0185C0  EC9D  F0C2         	call	_StartTimer	;wreg free
  6639                           
  6640                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6641  0185C4  D005               	goto	l8242
  6642  0185C6                     l1517:
  6643                           
  6644                           ;timers.c: 36:   __nop();
  6645  0185C6  F000               	nop	
  6646                           
  6647                           ;timers.c: 37:   __nop();
  6648  0185C8  F000               	nop	
  6649                           
  6650                           ;timers.c: 38:   __nop();
  6651  0185CA  F000               	nop	
  6652                           
  6653                           ;timers.c: 39:   __nop();
  6654  0185CC  F000               	nop	
  6655  0185CE  0004               	clrwdt		;# 
  6656  0185D0                     l8242:
  6657                           
  6658                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6659  0185D0  0E00               	movlw	0
  6660  0185D2  6EE6               	movwf	postinc1,c
  6661  0185D4  EC9D  F0C5         	call	_TimerDone	;wreg free
  6662  0185D8  5032               	movf	btemp^0,w,c
  6663  0185DA  B4D8               	btfsc	status,2,c
  6664  0185DC  D7F4               	goto	l1517
  6665                           
  6666                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6667  0185DE  52E5               	movf	postdec1,f,c
  6668  0185E0  52E5               	movf	postdec1,f,c
  6669  0185E2  0012               	return		;funcret
  6670  0185E4                     __end_of_WaitMs:
  6671                           	opt callstack 0
  6672                           
  6673 ;; *************** function _update_lcd *****************
  6674 ;; Defined at:
  6675 ;;		line 85 in file "mconfig.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  vterm           1  [STACK] unsigned char 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1  [STACK] unsigned char 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/5
  6686 ;;		On exit  : 1/1
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:   17
  6696 ;; This function calls:
  6697 ;;		_eaDogM_WriteStringAtPos
  6698 ;;		_wait_lcd_done
  6699 ;; This function is called by:
  6700 ;;		_main
  6701 ;;		_check_help
  6702 ;; This function uses a reentrant model
  6703 ;;
  6704                           
  6705                           	psect	text27
  6706  016E56                     __ptext27:
  6707                           	opt callstack 0
  6708  016E56                     _update_lcd:
  6709                           	opt callstack 13
  6710                           
  6711                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6712                           ;stkvar	_vterm @ sp[(0)+-1]
  6713                           
  6714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6715                           ;incstack = 0
  6716  016E56  0EFF               	movlw	-1
  6717  016E58  006F FF8C  F032    	movff	plusw1,btemp
  6718  016E5E  0E03               	movlw	3
  6719  016E60  1632               	andwf	btemp^0,f,c
  6720  016E62  0EFF               	movlw	-1
  6721  016E64  0060  F0CB  FFE3   	movff	btemp,plusw1
  6722                           
  6723                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6724  016E6A  0105               	movlb	5	; () banked
  6725  016E6C  A1D8               	btfss	(_D+216)& (0+255),0,b
  6726  016E6E  D004               	goto	l10570
  6727                           
  6728                           ; BSR set to: 5
  6729                           ;stkvar	_vterm @ sp[(0)+-1]
  6730  016E70  0EFF               	movlw	-1
  6731  016E72  50E3               	movf	plusw1,w,c
  6732  016E74  B4D8               	btfsc	status,2,c
  6733  016E76  D074               	goto	l1595
  6734  016E78                     l10570:
  6735                           
  6736                           ; BSR set to: 5
  6737                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6738                           ;stkvar	_vterm @ sp[(0)+-1]
  6739  016E78  0EFF               	movlw	-1
  6740  016E7A  50E3               	movf	plusw1,w,c
  6741  016E7C  0D36               	mullw	54
  6742  016E7E  0E10               	movlw	low (_D+16)
  6743  016E80  24F3               	addwf	243,w,c
  6744  016E82  6ED9               	movwf	fsr2l,c
  6745  016E84  0E05               	movlw	high (_D+16)
  6746  016E86  20F4               	addwfc	prodh,w,c
  6747  016E88  6EDA               	movwf	fsr2h,c
  6748  016E8A  0E00               	movlw	0
  6749  016E8C  6EDF               	movwf	indf2,c
  6750                           
  6751                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6752                           ;stkvar	_vterm @ sp[(0)+-1]
  6753  016E8E  0EFF               	movlw	-1
  6754  016E90  50E3               	movf	plusw1,w,c
  6755  016E92  0D36               	mullw	54
  6756  016E94  0E22               	movlw	low (_D+34)
  6757  016E96  24F3               	addwf	243,w,c
  6758  016E98  6ED9               	movwf	fsr2l,c
  6759  016E9A  0E05               	movlw	high (_D+34)
  6760  016E9C  20F4               	addwfc	prodh,w,c
  6761  016E9E  6EDA               	movwf	fsr2h,c
  6762  016EA0  0E00               	movlw	0
  6763  016EA2  6EDF               	movwf	indf2,c
  6764                           
  6765                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6766                           ;stkvar	_vterm @ sp[(0)+-1]
  6767  016EA4  0EFF               	movlw	-1
  6768  016EA6  50E3               	movf	plusw1,w,c
  6769  016EA8  0D36               	mullw	54
  6770  016EAA  0E34               	movlw	low (_D+52)
  6771  016EAC  24F3               	addwf	243,w,c
  6772  016EAE  6ED9               	movwf	fsr2l,c
  6773  016EB0  0E05               	movlw	high (_D+52)
  6774  016EB2  20F4               	addwfc	prodh,w,c
  6775  016EB4  6EDA               	movwf	fsr2h,c
  6776  016EB6  0E00               	movlw	0
  6777  016EB8  6EDF               	movwf	indf2,c
  6778                           
  6779                           ; BSR set to: 5
  6780                           ;mconfig.c: 95:  wait_lcd_done();
  6781  016EBA  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6785                           ;stkvar	_vterm @ sp[(0)+-1]
  6786  016EBE  0EFF               	movlw	-1
  6787  016EC0  50E3               	movf	plusw1,w,c
  6788  016EC2  0D36               	mullw	54
  6789  016EC4  0E00               	movlw	low _D
  6790  016EC6  6E3C               	movwf	(btemp+10)^0,c
  6791  016EC8  0E05               	movlw	high _D
  6792  016ECA  6E3D               	movwf	(btemp+11)^0,c
  6793  016ECC  50F3               	movf	243,w,c
  6794  016ECE  263C               	addwf	(btemp+10)^0,f,c
  6795  016ED0  50F4               	movf	244,w,c
  6796  016ED2  223D               	addwfc	(btemp+11)^0,f,c
  6797  016ED4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6798  016EDA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6799  016EE0  0E00               	movlw	0
  6800  016EE2  6EE6               	movwf	postinc1,c
  6801  016EE4  0E00               	movlw	0
  6802  016EE6  6EE6               	movwf	postinc1,c
  6803  016EE8  ECF2  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6804                           
  6805                           ; BSR set to: 59
  6806                           ;mconfig.c: 97:  wait_lcd_done();
  6807  016EEC  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6811                           ;stkvar	_vterm @ sp[(0)+-1]
  6812  016EF0  0EFF               	movlw	-1
  6813  016EF2  50E3               	movf	plusw1,w,c
  6814  016EF4  0D36               	mullw	54
  6815  016EF6  0E00               	movlw	low _D
  6816  016EF8  6E3C               	movwf	(btemp+10)^0,c
  6817  016EFA  0E05               	movlw	high _D
  6818  016EFC  6E3D               	movwf	(btemp+11)^0,c
  6819  016EFE  0E12               	movlw	18
  6820  016F00  263C               	addwf	(btemp+10)^0,f,c
  6821  016F02  0E00               	movlw	0
  6822  016F04  223D               	addwfc	(btemp+11)^0,f,c
  6823  016F06  50F3               	movf	243,w,c
  6824  016F08  263C               	addwf	(btemp+10)^0,f,c
  6825  016F0A  50F4               	movf	244,w,c
  6826  016F0C  223D               	addwfc	(btemp+11)^0,f,c
  6827  016F0E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6828  016F14  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6829  016F1A  0E00               	movlw	0
  6830  016F1C  6EE6               	movwf	postinc1,c
  6831  016F1E  0E01               	movlw	1
  6832  016F20  6EE6               	movwf	postinc1,c
  6833  016F22  ECF2  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6834                           
  6835                           ; BSR set to: 59
  6836                           ;mconfig.c: 99:  wait_lcd_done();
  6837  016F26  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6841                           ;stkvar	_vterm @ sp[(0)+-1]
  6842  016F2A  0EFF               	movlw	-1
  6843  016F2C  50E3               	movf	plusw1,w,c
  6844  016F2E  0D36               	mullw	54
  6845  016F30  0E00               	movlw	low _D
  6846  016F32  6E3C               	movwf	(btemp+10)^0,c
  6847  016F34  0E05               	movlw	high _D
  6848  016F36  6E3D               	movwf	(btemp+11)^0,c
  6849  016F38  0E24               	movlw	36
  6850  016F3A  263C               	addwf	(btemp+10)^0,f,c
  6851  016F3C  0E00               	movlw	0
  6852  016F3E  223D               	addwfc	(btemp+11)^0,f,c
  6853  016F40  50F3               	movf	243,w,c
  6854  016F42  263C               	addwf	(btemp+10)^0,f,c
  6855  016F44  50F4               	movf	244,w,c
  6856  016F46  223D               	addwfc	(btemp+11)^0,f,c
  6857  016F48  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6858  016F4E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6859  016F54  0E00               	movlw	0
  6860  016F56  6EE6               	movwf	postinc1,c
  6861  016F58  0E02               	movlw	2
  6862  016F5A  6EE6               	movwf	postinc1,c
  6863  016F5C  ECF2  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6864  016F60                     l1595:
  6865                           
  6866                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6867  016F60  52E5               	movf	postdec1,f,c
  6868  016F62  0012               	return		;funcret
  6869  016F64                     __end_of_update_lcd:
  6870                           	opt callstack 0
  6871                           
  6872 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6873 ;; Defined at:
  6874 ;;		line 252 in file "eadog.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  r               1  [STACK] const unsigned char 
  6877 ;;  c               1  [STACK] const unsigned char 
  6878 ;;  strPtr          2  [STACK] PTR unsigned char 
  6879 ;;		 -> D.lcd(216), D(218), V(188), 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1  [STACK] void 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6886 ;; Tracked objects:
  6887 ;;		On entry : 3F/0
  6888 ;;		On exit  : 3F/3B
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:   16
  6898 ;; This function calls:
  6899 ;;		_eaDogM_WriteString
  6900 ;;		_send_lcd_cmd_dma
  6901 ;; This function is called by:
  6902 ;;		_update_lcd
  6903 ;;		_vterm_dump
  6904 ;; This function uses a reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text28
  6908  0185E4                     __ptext28:
  6909                           	opt callstack 0
  6910  0185E4                     _eaDogM_WriteStringAtPos:
  6911                           	opt callstack 13
  6912                           
  6913                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6914                           ;stkvar	_c @ sp[(0)+-2]
  6915                           
  6916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6917                           ;incstack = 0
  6918  0185E4  0EFE               	movlw	-2
  6919  0185E6  006F FF8C  F03D    	movff	plusw1,btemp+11
  6920                           
  6921                           ;stkvar	_r @ sp[(0)+-1]
  6922  0185EC  0EFF               	movlw	-1
  6923  0185EE  50E3               	movf	plusw1,w,c
  6924  0185F0  0D10               	mullw	16
  6925  0185F2  50F3               	movf	243,w,c
  6926  0185F4  243D               	addwf	(btemp+11)^0,w,c
  6927  0185F6  0F80               	addlw	128
  6928  0185F8  6EE6               	movwf	postinc1,c
  6929  0185FA  ECF6  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  6930                           
  6931                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6932                           ;stkvar	_strPtr @ sp[(0)+-4]
  6933  0185FE  0EFC               	movlw	-4
  6934  018600  006F FF8F FFE6     	movff	plusw1,postinc1
  6935  018606  006F FF8F FFE6     	movff	plusw1,postinc1
  6936  01860C  ECD6  F0BB         	call	_eaDogM_WriteString	;wreg free
  6937                           
  6938                           ; BSR set to: 59
  6939                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6940  018610  52E5               	movf	postdec1,f,c
  6941  018612  52E5               	movf	postdec1,f,c
  6942  018614  52E5               	movf	postdec1,f,c
  6943  018616  52E5               	movf	postdec1,f,c
  6944  018618  0012               	return		;funcret
  6945  01861A                     __end_of_eaDogM_WriteStringAtPos:
  6946                           	opt callstack 0
  6947                           
  6948 ;; *************** function _send_lcd_cmd_dma *****************
  6949 ;; Defined at:
  6950 ;;		line 205 in file "eadog.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  strPtr          1  [STACK] unsigned char 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1  [STACK] void 
  6957 ;; Registers used:
  6958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/3D
  6961 ;;		On exit  : 3F/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;Total ram usage:        0 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:   15
  6971 ;; This function calls:
  6972 ;;		_printf
  6973 ;;		_ringBufS_flush
  6974 ;;		_start_lcd
  6975 ;;		_wait_lcd_done
  6976 ;;		_wait_lcd_set
  6977 ;; This function is called by:
  6978 ;;		_eaDogM_WriteCommand
  6979 ;;		_eaDogM_WriteStringAtPos
  6980 ;; This function uses a reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text29
  6984  0181EC                     __ptext29:
  6985                           	opt callstack 0
  6986  0181EC                     _send_lcd_cmd_dma:
  6987                           	opt callstack 13
  6988                           
  6989                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6990                           
  6991                           ; BSR set to: 59
  6992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6993                           ;incstack = 0
  6994  0181EC  EC32  F0C7         	call	_wait_lcd_set	;wreg free
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6998  0181F0  0E00               	movlw	0
  6999  0181F2  6EE6               	movwf	postinc1,c
  7000  0181F4  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7001  0181FA  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7002  018200  ECC6  F0BC         	call	_ringBufS_flush	;wreg free
  7003  018204  92BC               	bcf	188,1,c	;volatile
  7004  018206  94BC               	bcf	188,2,c	;volatile
  7005                           
  7006                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  7007  018208  013B               	movlb	59	; () banked
  7008  01820A  9FFC               	bcf	252,7,b	;volatile
  7009                           
  7010                           ; BSR set to: 59
  7011                           ;eadog.c: 214:  DMA1SSZ = 1;
  7012  01820C  0E00               	movlw	0
  7013  01820E  6FF8               	movwf	248,b	;volatile
  7014  018210  0E01               	movlw	1
  7015  018212  6FF7               	movwf	247,b	;volatile
  7016                           
  7017                           ; BSR set to: 59
  7018                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  7019  018214  8FFC               	bsf	252,7,b	;volatile
  7020                           
  7021                           ; BSR set to: 59
  7022                           ;eadog.c: 216:  printf("%c", strPtr);
  7023                           ;stkvar	_strPtr @ sp[(0)+-1]
  7024  018216  0EFF               	movlw	-1
  7025  018218  50E3               	movf	plusw1,w,c
  7026  01821A  6EE6               	movwf	postinc1,c
  7027  01821C  0E00               	movlw	0
  7028  01821E  6EE6               	movwf	postinc1,c
  7029  018220  0EF9               	movlw	low STR_25
  7030  018222  6EE6               	movwf	postinc1,c
  7031  018224  0EFF               	movlw	high STR_25
  7032  018226  6EE6               	movwf	postinc1,c
  7033  018228  0E04               	movlw	4
  7034  01822A  6EE6               	movwf	postinc1,c
  7035  01822C  EC0E  F0C0         	call	_printf	;wreg free
  7036                           
  7037                           ;eadog.c: 217:  start_lcd();
  7038  018230  EC35  F0C7         	call	_start_lcd	;wreg free
  7039                           
  7040                           ; BSR set to: 59
  7041                           ;eadog.c: 218:  wait_lcd_done();
  7042  018234  EC50  F0C6         	call	_wait_lcd_done	;wreg free
  7043                           
  7044                           ; BSR set to: 0
  7045  018238  82BC               	bsf	188,1,c	;volatile
  7046                           
  7047                           ; BSR set to: 0
  7048                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7049  01823A  52E5               	movf	postdec1,f,c
  7050  01823C  0012               	return		;funcret
  7051  01823E                     __end_of_send_lcd_cmd_dma:
  7052                           	opt callstack 0
  7053                           
  7054 ;; *************** function _wait_lcd_done *****************
  7055 ;; Defined at:
  7056 ;;		line 141 in file "eadog.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1  [STACK] void 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/2
  7067 ;;		On exit  : 3F/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    7
  7077 ;; This function calls:
  7078 ;;		_wdtdelay
  7079 ;; This function is called by:
  7080 ;;		_send_lcd_cmd_dma
  7081 ;;		_update_lcd
  7082 ;;		_vterm_dump
  7083 ;; This function uses a reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text30
  7087  018CA0                     __ptext30:
  7088                           	opt callstack 0
  7089  018CA0                     _wait_lcd_done:
  7090                           	opt callstack 22
  7091                           
  7092                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  7093                           
  7094                           ; BSR set to: 0
  7095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7096                           ;incstack = 0
  7097  018CA0  0100               	movlb	0	; () banked
  7098  018CA2  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  7099  018CA4  D7FD               	goto	_wait_lcd_done
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;eadog.c: 144:  wdtdelay(50);
  7103  018CA6  0E32               	movlw	50
  7104  018CA8  6EE6               	movwf	postinc1,c
  7105  018CAA  0E00               	movlw	0
  7106  018CAC  6EE6               	movwf	postinc1,c
  7107  018CAE  0E00               	movlw	0
  7108  018CB0  6EE6               	movwf	postinc1,c
  7109  018CB2  0E00               	movlw	0
  7110  018CB4  6EE6               	movwf	postinc1,c
  7111  018CB6  EC9C  F0C0         	call	_wdtdelay	;wreg free
  7112                           
  7113                           ; BSR set to: 0
  7114                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7115  018CBA  0012               	return		;funcret
  7116  018CBC                     __end_of_wait_lcd_done:
  7117                           	opt callstack 0
  7118                           
  7119 ;; *************** function _wdtdelay *****************
  7120 ;; Defined at:
  7121 ;;		line 22 in file "eadog.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  delay           4  [STACK] const unsigned long 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1  [STACK] void 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 3F/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    6
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_init_display
  7146 ;;		_send_lcd_cmd
  7147 ;;		_send_lcd_cmd_long
  7148 ;;		_wait_lcd_done
  7149 ;; This function uses a reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text31
  7153  018138                     __ptext31:
  7154                           	opt callstack 0
  7155  018138                     _wdtdelay:
  7156                           	opt callstack 22
  7157                           
  7158                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7159                           
  7160                           ; BSR set to: 0
  7161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7162                           ;incstack = 0
  7163  018138  0100               	movlb	0	; () banked
  7164  01813A  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  7165  01813C  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7166  01813E  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7167  018140  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7168  018142                     l1362:
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;eadog.c: 27:   __nop();
  7172  018142  F000               	nop	
  7173  018144  0004               	clrwdt		;# 
  7174                           
  7175                           ;eadog.c: 29:  };
  7176  018146  0E01               	movlw	1
  7177  018148  0100               	movlb	0	; () banked
  7178  01814A  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  7179  01814C  0E00               	movlw	0
  7180  01814E  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7181  018150  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7182  018152  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;stkvar	_delay @ sp[(0)+-4]
  7186  018154  0EFC               	movlw	-4
  7187  018156  006F FF8C  F032    	movff	plusw1,btemp
  7188  01815C  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  7189  01815E  5C32               	subwf	btemp^0,w,c
  7190  018160  0EFD               	movlw	-3
  7191  018162  006F FF8C  F032    	movff	plusw1,btemp
  7192  018168  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7193  01816A  5832               	subwfb	btemp^0,w,c
  7194  01816C  0EFE               	movlw	-2
  7195  01816E  006F FF8C  F032    	movff	plusw1,btemp
  7196  018174  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7197  018176  5832               	subwfb	btemp^0,w,c
  7198  018178  0EFF               	movlw	-1
  7199  01817A  006F FF8C  F032    	movff	plusw1,btemp
  7200  018180  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7201  018182  5832               	subwfb	btemp^0,w,c
  7202  018184  B0D8               	btfsc	status,0,c
  7203  018186  D7DD               	goto	l1362
  7204                           
  7205                           ; BSR set to: 0
  7206                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7207  018188  52E5               	movf	postdec1,f,c
  7208  01818A  52E5               	movf	postdec1,f,c
  7209  01818C  52E5               	movf	postdec1,f,c
  7210  01818E  52E5               	movf	postdec1,f,c
  7211  018190  0012               	return		;funcret
  7212  018192                     __end_of_wdtdelay:
  7213                           	opt callstack 0
  7214                           
  7215 ;; *************** function _eaDogM_WriteString *****************
  7216 ;; Defined at:
  7217 ;;		line 184 in file "eadog.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  strPtr          2  [STACK] PTR unsigned char 
  7220 ;;		 -> D.lcd(216), D(218), V(188), 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1  [STACK] void 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7227 ;; Tracked objects:
  7228 ;;		On entry : 3F/0
  7229 ;;		On exit  : 3F/3B
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:   15
  7239 ;; This function calls:
  7240 ;;		_printf
  7241 ;;		_ringBufS_flush
  7242 ;;		_start_lcd
  7243 ;;		_strlen
  7244 ;;		_wait_lcd_set
  7245 ;; This function is called by:
  7246 ;;		_eaDogM_WriteStringAtPos
  7247 ;; This function uses a reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text32
  7251  0177AC                     __ptext32:
  7252                           	opt callstack 0
  7253  0177AC                     _eaDogM_WriteString:
  7254                           	opt callstack 13
  7255                           
  7256                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  7257                           
  7258                           ; BSR set to: 0
  7259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7260                           ;incstack = 0
  7261  0177AC  EC32  F0C7         	call	_wait_lcd_set	;wreg free
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  7265  0177B0  0E00               	movlw	0
  7266  0177B2  6EE6               	movwf	postinc1,c
  7267  0177B4  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7268  0177BA  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7269  0177C0  ECC6  F0BC         	call	_ringBufS_flush	;wreg free
  7270  0177C4  94BC               	bcf	188,2,c	;volatile
  7271                           
  7272                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7273                           ;stkvar	_strPtr @ sp[(0)+-2]
  7274  0177C6  0EFE               	movlw	-2
  7275  0177C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7276  0177CE  006F FF8F FFE6     	movff	plusw1,postinc1
  7277  0177D4  EC29  F0BC         	call	_strlen	;wreg free
  7278  0177D8  5033               	movf	(btemp+1)^0,w,c
  7279  0177DA  E104               	bnz	u10450
  7280  0177DC  0E41               	movlw	65
  7281  0177DE  5C32               	subwf	btemp^0,w,c
  7282  0177E0  A0D8               	btfss	status,0,c
  7283  0177E2  D010               	goto	l10536
  7284  0177E4                     u10450:
  7285                           
  7286                           ;stkvar	_strPtr @ sp[(0)+-2]
  7287  0177E4  0EFE               	movlw	-2
  7288  0177E6  006F FF8C  F03C    	movff	plusw1,btemp+10
  7289  0177EC  0EFF               	movlw	-1
  7290  0177EE  006F FF8C  F03D    	movff	plusw1,btemp+11
  7291  0177F4  0E40               	movlw	64
  7292  0177F6  243C               	addwf	(btemp+10)^0,w,c
  7293  0177F8  6ED9               	movwf	fsr2l,c
  7294  0177FA  0E00               	movlw	0
  7295  0177FC  203D               	addwfc	(btemp+11)^0,w,c
  7296  0177FE  6EDA               	movwf	fsr2h,c
  7297  017800  0E00               	movlw	0
  7298  017802  6EDF               	movwf	indf2,c
  7299  017804                     l10536:
  7300                           
  7301                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  7302  017804  013B               	movlb	59	; () banked
  7303  017806  9FFC               	bcf	252,7,b	;volatile
  7304                           
  7305                           ; BSR set to: 59
  7306                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  7307                           ;stkvar	_strPtr @ sp[(0)+-2]
  7308  017808  0EFE               	movlw	-2
  7309  01780A  006F FF8F FFE6     	movff	plusw1,postinc1
  7310  017810  006F FF8F FFE6     	movff	plusw1,postinc1
  7311  017816  EC29  F0BC         	call	_strlen	;wreg free
  7312  01781A  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  7313  017820  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  7314                           
  7315                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  7316  017826  013B               	movlb	59	; () banked
  7317  017828  8FFC               	bsf	252,7,b	;volatile
  7318                           
  7319                           ; BSR set to: 59
  7320                           ;eadog.c: 195:  printf("%s", strPtr);
  7321                           ;stkvar	_strPtr @ sp[(0)+-2]
  7322  01782A  0EFE               	movlw	-2
  7323  01782C  006F FF8F FFE6     	movff	plusw1,postinc1
  7324  017832  006F FF8F FFE6     	movff	plusw1,postinc1
  7325  017838  0EFC               	movlw	low STR_24
  7326  01783A  6EE6               	movwf	postinc1,c
  7327  01783C  0EFF               	movlw	high STR_24
  7328  01783E  6EE6               	movwf	postinc1,c
  7329  017840  0E04               	movlw	4
  7330  017842  6EE6               	movwf	postinc1,c
  7331  017844  EC0E  F0C0         	call	_printf	;wreg free
  7332                           
  7333                           ;eadog.c: 196:  start_lcd();
  7334  017848  EC35  F0C7         	call	_start_lcd	;wreg free
  7335                           
  7336                           ; BSR set to: 59
  7337                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7338  01784C  52E5               	movf	postdec1,f,c
  7339  01784E  52E5               	movf	postdec1,f,c
  7340  017850  0012               	return		;funcret
  7341  017852                     __end_of_eaDogM_WriteString:
  7342                           	opt callstack 0
  7343                           
  7344 ;; *************** function _wait_lcd_set *****************
  7345 ;; Defined at:
  7346 ;;		line 131 in file "eadog.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;		None
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1  [STACK] void 
  7353 ;; Registers used:
  7354 ;;		None
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/3D
  7357 ;;		On exit  : 3F/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;Total ram usage:        0 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    6
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_eaDogM_WriteString
  7371 ;;		_send_lcd_cmd_dma
  7372 ;; This function uses a reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text33
  7376  018E64                     __ptext33:
  7377                           	opt callstack 0
  7378  018E64                     _wait_lcd_set:
  7379                           	opt callstack 21
  7380                           
  7381                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  7382                           
  7383                           ; BSR set to: 59
  7384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7385                           ;incstack = 0
  7386  018E64  0100               	movlb	0	; () banked
  7387  018E66  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  7388                           
  7389                           ; BSR set to: 0
  7390                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7391  018E68  0012               	return		;funcret
  7392  018E6A                     __end_of_wait_lcd_set:
  7393                           	opt callstack 0
  7394                           
  7395 ;; *************** function _start_lcd *****************
  7396 ;; Defined at:
  7397 ;;		line 126 in file "eadog.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;		None
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1  [STACK] void 
  7404 ;; Registers used:
  7405 ;;		None
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/3B
  7408 ;;		On exit  : 3F/3B
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;Total ram usage:        0 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:    6
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_eaDogM_WriteString
  7422 ;;		_send_lcd_cmd_dma
  7423 ;; This function uses a reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text34
  7427  018E6A                     __ptext34:
  7428                           	opt callstack 0
  7429  018E6A                     _start_lcd:
  7430                           	opt callstack 21
  7431                           
  7432                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  7433                           
  7434                           ; BSR set to: 0
  7435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7436                           ;incstack = 0
  7437  018E6A  013B               	movlb	59	; () banked
  7438  018E6C  8DFC               	bsf	252,6,b	;volatile
  7439                           
  7440                           ; BSR set to: 59
  7441                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7442  018E6E  0012               	return		;funcret
  7443  018E70                     __end_of_start_lcd:
  7444                           	opt callstack 0
  7445                           
  7446 ;; *************** function _ringBufS_flush *****************
  7447 ;; Defined at:
  7448 ;;		line 76 in file "ringbufs.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7451 ;;		 -> ring_buf1(67), 
  7452 ;;  clearBuffer     1  [STACK] const char 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1  [STACK] void 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7459 ;; Tracked objects:
  7460 ;;		On entry : 3F/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    7
  7471 ;; This function calls:
  7472 ;;		_memset
  7473 ;; This function is called by:
  7474 ;;		_eaDogM_WriteString
  7475 ;;		_send_lcd_cmd_dma
  7476 ;; This function uses a reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text35
  7480  01798C                     __ptext35:
  7481                           	opt callstack 0
  7482  01798C                     _ringBufS_flush:
  7483                           	opt callstack 20
  7484                           
  7485                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7486                           ;stkvar	__this @ sp[(0)+-2]
  7487                           
  7488                           ; BSR set to: 59
  7489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7490                           ;incstack = 0
  7491  01798C  0EFE               	movlw	-2
  7492  01798E  006F FF8C  F03C    	movff	plusw1,btemp+10
  7493  017994  0EFF               	movlw	-1
  7494  017996  006F FF8C  F03D    	movff	plusw1,btemp+11
  7495  01799C  0E42               	movlw	66
  7496  01799E  243C               	addwf	(btemp+10)^0,w,c
  7497  0179A0  6ED9               	movwf	fsr2l,c
  7498  0179A2  0E00               	movlw	0
  7499  0179A4  203D               	addwfc	(btemp+11)^0,w,c
  7500  0179A6  6EDA               	movwf	fsr2h,c
  7501  0179A8  0E00               	movlw	0
  7502  0179AA  6EDF               	movwf	indf2,c
  7503                           
  7504                           ;ringbufs.c: 79:  _this->head = 0;
  7505                           ;stkvar	__this @ sp[(0)+-2]
  7506  0179AC  0EFE               	movlw	-2
  7507  0179AE  006F FF8C  F03C    	movff	plusw1,btemp+10
  7508  0179B4  0EFF               	movlw	-1
  7509  0179B6  006F FF8C  F03D    	movff	plusw1,btemp+11
  7510  0179BC  0E40               	movlw	64
  7511  0179BE  243C               	addwf	(btemp+10)^0,w,c
  7512  0179C0  6ED9               	movwf	fsr2l,c
  7513  0179C2  0E00               	movlw	0
  7514  0179C4  203D               	addwfc	(btemp+11)^0,w,c
  7515  0179C6  6EDA               	movwf	fsr2h,c
  7516  0179C8  0E00               	movlw	0
  7517  0179CA  6EDF               	movwf	indf2,c
  7518                           
  7519                           ;ringbufs.c: 80:  _this->tail = 0;
  7520                           ;stkvar	__this @ sp[(0)+-2]
  7521  0179CC  0EFE               	movlw	-2
  7522  0179CE  006F FF8C  F03C    	movff	plusw1,btemp+10
  7523  0179D4  0EFF               	movlw	-1
  7524  0179D6  006F FF8C  F03D    	movff	plusw1,btemp+11
  7525  0179DC  0E41               	movlw	65
  7526  0179DE  243C               	addwf	(btemp+10)^0,w,c
  7527  0179E0  6ED9               	movwf	fsr2l,c
  7528  0179E2  0E00               	movlw	0
  7529  0179E4  203D               	addwfc	(btemp+11)^0,w,c
  7530  0179E6  6EDA               	movwf	fsr2h,c
  7531  0179E8  0E00               	movlw	0
  7532  0179EA  6EDF               	movwf	indf2,c
  7533                           
  7534                           ;ringbufs.c: 81:  if (clearBuffer) {
  7535                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7536  0179EC  0EFD               	movlw	-3
  7537  0179EE  50E3               	movf	plusw1,w,c
  7538  0179F0  B4D8               	btfsc	status,2,c
  7539  0179F2  D011               	goto	l1502
  7540                           
  7541                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7542  0179F4  0E40               	movlw	64
  7543  0179F6  6EE6               	movwf	postinc1,c
  7544  0179F8  0E00               	movlw	0
  7545  0179FA  6EE6               	movwf	postinc1,c
  7546  0179FC  0E00               	movlw	0
  7547  0179FE  6EE6               	movwf	postinc1,c
  7548  017A00  0E00               	movlw	0
  7549  017A02  6EE6               	movwf	postinc1,c
  7550                           
  7551                           ;stkvar	__this @ sp[(-4)+-2]
  7552  017A04  0EFA               	movlw	-6
  7553  017A06  006F FF8F FFE6     	movff	plusw1,postinc1
  7554  017A0C  006F FF8F FFE6     	movff	plusw1,postinc1
  7555  017A12  ECC1  F0A5         	call	_memset	;wreg free
  7556  017A16                     l1502:
  7557                           
  7558                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7559  017A16  52E5               	movf	postdec1,f,c
  7560  017A18  52E5               	movf	postdec1,f,c
  7561  017A1A  52E5               	movf	postdec1,f,c
  7562  017A1C  0012               	return		;funcret
  7563  017A1E                     __end_of_ringBufS_flush:
  7564                           	opt callstack 0
  7565                           
  7566 ;; *************** function _memset *****************
  7567 ;; Defined at:
  7568 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  dest            2  [STACK] PTR void 
  7571 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7572 ;;  c               2  [STACK] int 
  7573 ;;  n               2  [STACK] unsigned int 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  s               2  [STACK] PTR unsigned char 
  7576 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7577 ;;  k               2  [STACK] unsigned int 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  2  [STACK] PTR void 
  7580 ;; Registers used:
  7581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; Hardware stack levels required when called:    6
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_ringBufS_init
  7598 ;;		_ringBufS_flush
  7599 ;; This function uses a reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text36
  7603  014B82                     __ptext36:
  7604                           	opt callstack 0
  7605  014B82                     _memset:
  7606                           	opt callstack 0
  7607                           
  7608                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7609  014B82  52E6               	movf	postinc1,f,c
  7610  014B84  52E6               	movf	postinc1,f,c
  7611  014B86  52E6               	movf	postinc1,f,c
  7612  014B88  52E6               	movf	postinc1,f,c
  7613                           
  7614                           ;stkvar	_dest @ sp[(-4)+-2]
  7615                           
  7616                           ;incstack = 0
  7617  014B8A  0EFA               	movlw	-6
  7618  014B8C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7619  014B92  0EFB               	movlw	-5
  7620  014B94  006F FF8C  F03D    	movff	plusw1,btemp+11
  7621                           
  7622                           ;stkvar	_s @ sp[(-4)+0]
  7623  014B9A  0EFD               	movlw	-3
  7624  014B9C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7625  014BA2  0EFC               	movlw	-4
  7626  014BA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7627                           
  7628                           ;stkvar	_n @ sp[(-4)+-6]
  7629  014BAA  0EF6               	movlw	-10
  7630  014BAC  006F FF8C  F032    	movff	plusw1,btemp
  7631  014BB2  0EF7               	movlw	-9
  7632  014BB4  50E3               	movf	plusw1,w,c
  7633  014BB6  1032               	iorwf	btemp^0,w,c
  7634  014BB8  B4D8               	btfsc	status,2,c
  7635  014BBA  D154               	goto	u10420
  7636                           
  7637                           ;stkvar	_c @ sp[(-4)+-4]
  7638                           ;stkvar	_s @ sp[(-4)+0]
  7639  014BBC  0EFC               	movlw	-4
  7640  014BBE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7641  014BC4  0EFD               	movlw	-3
  7642  014BC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7643  014BCC  0EF8               	movlw	-8
  7644  014BCE  006F FF8F FFDF     	movff	plusw1,indf2
  7645                           
  7646                           ;stkvar	_c @ sp[(-4)+-4]
  7647                           ;stkvar	_n @ sp[(-4)+-6]
  7648                           ;stkvar	_s @ sp[(-4)+0]
  7649  014BD4  0EFC               	movlw	-4
  7650  014BD6  006F FF8C  F03C    	movff	plusw1,btemp+10
  7651  014BDC  0EFD               	movlw	-3
  7652  014BDE  006F FF8C  F03D    	movff	plusw1,btemp+11
  7653  014BE4  0EF6               	movlw	-10
  7654  014BE6  50E3               	movf	plusw1,w,c
  7655  014BE8  263C               	addwf	(btemp+10)^0,f,c
  7656  014BEA  0EF7               	movlw	-9
  7657  014BEC  50E3               	movf	plusw1,w,c
  7658  014BEE  223D               	addwfc	(btemp+11)^0,f,c
  7659  014BF0  0EFF               	movlw	255
  7660  014BF2  243C               	addwf	(btemp+10)^0,w,c
  7661  014BF4  6ED9               	movwf	fsr2l,c
  7662  014BF6  0EFF               	movlw	255
  7663  014BF8  203D               	addwfc	(btemp+11)^0,w,c
  7664  014BFA  6EDA               	movwf	fsr2h,c
  7665  014BFC  0EF8               	movlw	-8
  7666  014BFE  006F FF8F FFDF     	movff	plusw1,indf2
  7667                           
  7668                           ;stkvar	_n @ sp[(-4)+-6]
  7669  014C04  0EF7               	movlw	-9
  7670  014C06  50E3               	movf	plusw1,w,c
  7671  014C08  E108               	bnz	l10452
  7672  014C0A  0EF6               	movlw	-10
  7673  014C0C  006F FF8C  F032    	movff	plusw1,btemp
  7674  014C12  0E03               	movlw	3
  7675  014C14  5E32               	subwf	btemp^0,f,c
  7676  014C16  A0D8               	btfss	status,0,c
  7677  014C18  D125               	goto	u10420
  7678  014C1A                     l10452:
  7679                           
  7680                           ;stkvar	_c @ sp[(-4)+-4]
  7681                           ;stkvar	_s @ sp[(-4)+0]
  7682  014C1A  0EFC               	movlw	-4
  7683  014C1C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7684  014C22  0EFD               	movlw	-3
  7685  014C24  006F FF8C  F03D    	movff	plusw1,btemp+11
  7686  014C2A  0E01               	movlw	1
  7687  014C2C  243C               	addwf	(btemp+10)^0,w,c
  7688  014C2E  6ED9               	movwf	fsr2l,c
  7689  014C30  0E00               	movlw	0
  7690  014C32  203D               	addwfc	(btemp+11)^0,w,c
  7691  014C34  6EDA               	movwf	fsr2h,c
  7692  014C36  0EF8               	movlw	-8
  7693  014C38  006F FF8F FFDF     	movff	plusw1,indf2
  7694                           
  7695                           ;stkvar	_c @ sp[(-4)+-4]
  7696                           ;stkvar	_s @ sp[(-4)+0]
  7697  014C3E  0EFC               	movlw	-4
  7698  014C40  006F FF8C  F03C    	movff	plusw1,btemp+10
  7699  014C46  0EFD               	movlw	-3
  7700  014C48  006F FF8C  F03D    	movff	plusw1,btemp+11
  7701  014C4E  0E02               	movlw	2
  7702  014C50  243C               	addwf	(btemp+10)^0,w,c
  7703  014C52  6ED9               	movwf	fsr2l,c
  7704  014C54  0E00               	movlw	0
  7705  014C56  203D               	addwfc	(btemp+11)^0,w,c
  7706  014C58  6EDA               	movwf	fsr2h,c
  7707  014C5A  0EF8               	movlw	-8
  7708  014C5C  006F FF8F FFDF     	movff	plusw1,indf2
  7709                           
  7710                           ;stkvar	_c @ sp[(-4)+-4]
  7711                           ;stkvar	_n @ sp[(-4)+-6]
  7712                           ;stkvar	_s @ sp[(-4)+0]
  7713  014C62  0EFC               	movlw	-4
  7714  014C64  006F FF8C  F03C    	movff	plusw1,btemp+10
  7715  014C6A  0EFD               	movlw	-3
  7716  014C6C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7717  014C72  0EF6               	movlw	-10
  7718  014C74  50E3               	movf	plusw1,w,c
  7719  014C76  263C               	addwf	(btemp+10)^0,f,c
  7720  014C78  0EF7               	movlw	-9
  7721  014C7A  50E3               	movf	plusw1,w,c
  7722  014C7C  223D               	addwfc	(btemp+11)^0,f,c
  7723  014C7E  0EFE               	movlw	254
  7724  014C80  243C               	addwf	(btemp+10)^0,w,c
  7725  014C82  6ED9               	movwf	fsr2l,c
  7726  014C84  0EFF               	movlw	255
  7727  014C86  203D               	addwfc	(btemp+11)^0,w,c
  7728  014C88  6EDA               	movwf	fsr2h,c
  7729  014C8A  0EF8               	movlw	-8
  7730  014C8C  006F FF8F FFDF     	movff	plusw1,indf2
  7731                           
  7732                           ;stkvar	_c @ sp[(-4)+-4]
  7733                           ;stkvar	_n @ sp[(-4)+-6]
  7734                           ;stkvar	_s @ sp[(-4)+0]
  7735  014C92  0EFC               	movlw	-4
  7736  014C94  006F FF8C  F03C    	movff	plusw1,btemp+10
  7737  014C9A  0EFD               	movlw	-3
  7738  014C9C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7739  014CA2  0EF6               	movlw	-10
  7740  014CA4  50E3               	movf	plusw1,w,c
  7741  014CA6  263C               	addwf	(btemp+10)^0,f,c
  7742  014CA8  0EF7               	movlw	-9
  7743  014CAA  50E3               	movf	plusw1,w,c
  7744  014CAC  223D               	addwfc	(btemp+11)^0,f,c
  7745  014CAE  0EFD               	movlw	253
  7746  014CB0  243C               	addwf	(btemp+10)^0,w,c
  7747  014CB2  6ED9               	movwf	fsr2l,c
  7748  014CB4  0EFF               	movlw	255
  7749  014CB6  203D               	addwfc	(btemp+11)^0,w,c
  7750  014CB8  6EDA               	movwf	fsr2h,c
  7751  014CBA  0EF8               	movlw	-8
  7752  014CBC  006F FF8F FFDF     	movff	plusw1,indf2
  7753                           
  7754                           ;stkvar	_n @ sp[(-4)+-6]
  7755  014CC2  0EF7               	movlw	-9
  7756  014CC4  50E3               	movf	plusw1,w,c
  7757  014CC6  E108               	bnz	l10458
  7758  014CC8  0EF6               	movlw	-10
  7759  014CCA  006F FF8C  F032    	movff	plusw1,btemp
  7760  014CD0  0E07               	movlw	7
  7761  014CD2  5E32               	subwf	btemp^0,f,c
  7762  014CD4  A0D8               	btfss	status,0,c
  7763  014CD6  D0C6               	goto	u10420
  7764  014CD8                     l10458:
  7765                           
  7766                           ;stkvar	_c @ sp[(-4)+-4]
  7767                           ;stkvar	_s @ sp[(-4)+0]
  7768  014CD8  0EFC               	movlw	-4
  7769  014CDA  006F FF8C  F03C    	movff	plusw1,btemp+10
  7770  014CE0  0EFD               	movlw	-3
  7771  014CE2  006F FF8C  F03D    	movff	plusw1,btemp+11
  7772  014CE8  0E03               	movlw	3
  7773  014CEA  243C               	addwf	(btemp+10)^0,w,c
  7774  014CEC  6ED9               	movwf	fsr2l,c
  7775  014CEE  0E00               	movlw	0
  7776  014CF0  203D               	addwfc	(btemp+11)^0,w,c
  7777  014CF2  6EDA               	movwf	fsr2h,c
  7778  014CF4  0EF8               	movlw	-8
  7779  014CF6  006F FF8F FFDF     	movff	plusw1,indf2
  7780                           
  7781                           ;stkvar	_c @ sp[(-4)+-4]
  7782                           ;stkvar	_n @ sp[(-4)+-6]
  7783                           ;stkvar	_s @ sp[(-4)+0]
  7784  014CFC  0EFC               	movlw	-4
  7785  014CFE  006F FF8C  F03C    	movff	plusw1,btemp+10
  7786  014D04  0EFD               	movlw	-3
  7787  014D06  006F FF8C  F03D    	movff	plusw1,btemp+11
  7788  014D0C  0EF6               	movlw	-10
  7789  014D0E  50E3               	movf	plusw1,w,c
  7790  014D10  263C               	addwf	(btemp+10)^0,f,c
  7791  014D12  0EF7               	movlw	-9
  7792  014D14  50E3               	movf	plusw1,w,c
  7793  014D16  223D               	addwfc	(btemp+11)^0,f,c
  7794  014D18  0EFC               	movlw	252
  7795  014D1A  243C               	addwf	(btemp+10)^0,w,c
  7796  014D1C  6ED9               	movwf	fsr2l,c
  7797  014D1E  0EFF               	movlw	255
  7798  014D20  203D               	addwfc	(btemp+11)^0,w,c
  7799  014D22  6EDA               	movwf	fsr2h,c
  7800  014D24  0EF8               	movlw	-8
  7801  014D26  006F FF8F FFDF     	movff	plusw1,indf2
  7802                           
  7803                           ;stkvar	_n @ sp[(-4)+-6]
  7804  014D2C  0EF7               	movlw	-9
  7805  014D2E  50E3               	movf	plusw1,w,c
  7806  014D30  E108               	bnz	l10464
  7807  014D32  0EF6               	movlw	-10
  7808  014D34  006F FF8C  F032    	movff	plusw1,btemp
  7809  014D3A  0E09               	movlw	9
  7810  014D3C  5E32               	subwf	btemp^0,f,c
  7811  014D3E  A0D8               	btfss	status,0,c
  7812  014D40  D091               	goto	u10420
  7813  014D42                     l10464:
  7814                           
  7815                           ;stkvar	_s @ sp[(-4)+0]
  7816  014D42  0EFC               	movlw	-4
  7817  014D44  006F FF8C  F03C    	movff	plusw1,btemp+10
  7818  014D4A  1E3C               	comf	(btemp+10)^0,f,c
  7819  014D4C  0EFD               	movlw	-3
  7820  014D4E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7821  014D54  1E3D               	comf	(btemp+11)^0,f,c
  7822  014D56  2A3C               	incf	(btemp+10)^0,f,c
  7823  014D58  B4D8               	btfsc	status,2,c
  7824  014D5A  2A3D               	incf	(btemp+11)^0,f,c
  7825  014D5C  0E03               	movlw	3
  7826  014D5E  163C               	andwf	(btemp+10)^0,f,c
  7827  014D60  0E00               	movlw	0
  7828  014D62  163D               	andwf	(btemp+11)^0,f,c
  7829                           
  7830                           ;stkvar	_k @ sp[(-4)+2]
  7831  014D64  0EFE               	movlw	-2
  7832  014D66  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7833  014D6C  0EFF               	movlw	-1
  7834  014D6E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7835                           
  7836                           ;stkvar	_k @ sp[(-4)+2]
  7837                           ;stkvar	_s @ sp[(-4)+0]
  7838  014D74  0EFC               	movlw	-4
  7839  014D76  50E3               	movf	plusw1,w,c
  7840  014D78  6E32               	movwf	btemp^0,c
  7841  014D7A  0EFE               	movlw	-2
  7842  014D7C  50E3               	movf	plusw1,w,c
  7843  014D7E  2632               	addwf	btemp^0,f,c
  7844  014D80  0EFC               	movlw	-4
  7845  014D82  0060  F0CB  FFE3   	movff	btemp,plusw1
  7846  014D88  0EFD               	movlw	-3
  7847  014D8A  50E3               	movf	plusw1,w,c
  7848  014D8C  6E32               	movwf	btemp^0,c
  7849  014D8E  0EFF               	movlw	-1
  7850  014D90  50E3               	movf	plusw1,w,c
  7851  014D92  2232               	addwfc	btemp^0,f,c
  7852  014D94  0EFD               	movlw	-3
  7853  014D96  0060  F0CB  FFE3   	movff	btemp,plusw1
  7854                           
  7855                           ;stkvar	_k @ sp[(-4)+2]
  7856                           ;stkvar	_n @ sp[(-4)+-6]
  7857  014D9C  0EF6               	movlw	-10
  7858  014D9E  50E3               	movf	plusw1,w,c
  7859  014DA0  6E32               	movwf	btemp^0,c
  7860  014DA2  0EFE               	movlw	-2
  7861  014DA4  50E3               	movf	plusw1,w,c
  7862  014DA6  5E32               	subwf	btemp^0,f,c
  7863  014DA8  0EF6               	movlw	-10
  7864  014DAA  0060  F0CB  FFE3   	movff	btemp,plusw1
  7865  014DB0  0EF7               	movlw	-9
  7866  014DB2  50E3               	movf	plusw1,w,c
  7867  014DB4  6E32               	movwf	btemp^0,c
  7868  014DB6  0EFF               	movlw	-1
  7869  014DB8  50E3               	movf	plusw1,w,c
  7870  014DBA  5A32               	subwfb	btemp^0,f,c
  7871  014DBC  0EF7               	movlw	-9
  7872  014DBE  0060  F0CB  FFE3   	movff	btemp,plusw1
  7873  014DC4  0EFC               	movlw	252
  7874  014DC6  6E3C               	movwf	(btemp+10)^0,c
  7875  014DC8  0EFF               	movlw	255
  7876  014DCA  6E3D               	movwf	(btemp+11)^0,c
  7877                           
  7878                           ;stkvar	_n @ sp[(-4)+-6]
  7879  014DCC  0EF6               	movlw	-10
  7880  014DCE  006F FF8C  F032    	movff	plusw1,btemp
  7881  014DD4  503C               	movf	(btemp+10)^0,w,c
  7882  014DD6  1632               	andwf	btemp^0,f,c
  7883  014DD8  0EF6               	movlw	-10
  7884  014DDA  0060  F0CB  FFE3   	movff	btemp,plusw1
  7885  014DE0  0EF7               	movlw	-9
  7886  014DE2  006F FF8C  F032    	movff	plusw1,btemp
  7887  014DE8  503D               	movf	(btemp+11)^0,w,c
  7888  014DEA  1632               	andwf	btemp^0,f,c
  7889  014DEC  0EF7               	movlw	-9
  7890  014DEE  D02E               	goto	L6
  7891  014DF0                     l10472:
  7892                           
  7893                           ;stkvar	_c @ sp[(-4)+-4]
  7894                           ;stkvar	_s @ sp[(-4)+0]
  7895  014DF0  0EFC               	movlw	-4
  7896  014DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7897  014DF8  0EFD               	movlw	-3
  7898  014DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7899  014E00  0EF8               	movlw	-8
  7900  014E02  006F FF8F FFDF     	movff	plusw1,indf2
  7901                           
  7902                           ;stkvar	_n @ sp[(-4)+-6]
  7903  014E08  0EF6               	movlw	-10
  7904  014E0A  006F FF8C  F032    	movff	plusw1,btemp
  7905  014E10  0E01               	movlw	1
  7906  014E12  5E32               	subwf	btemp^0,f,c
  7907  014E14  0EF6               	movlw	-10
  7908  014E16  0060  F0CB  FFE3   	movff	btemp,plusw1
  7909  014E1C  0EF7               	movlw	-9
  7910  014E1E  006F FF8C  F032    	movff	plusw1,btemp
  7911  014E24  0E00               	movlw	0
  7912  014E26  5A32               	subwfb	btemp^0,f,c
  7913  014E28  0EF7               	movlw	-9
  7914  014E2A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7915                           
  7916                           ;stkvar	_s @ sp[(-4)+0]
  7917  014E30  0EFC               	movlw	-4
  7918  014E32  50E3               	movf	plusw1,w,c
  7919  014E34  0F01               	addlw	1
  7920  014E36  6E32               	movwf	btemp^0,c
  7921  014E38  0EFC               	movlw	-4
  7922  014E3A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7923  014E40  6A32               	clrf	btemp^0,c
  7924  014E42  0EFD               	movlw	-3
  7925  014E44  50E3               	movf	plusw1,w,c
  7926  014E46  2032               	addwfc	btemp^0,w,c
  7927  014E48  6E32               	movwf	btemp^0,c
  7928  014E4A  0EFD               	movlw	-3
  7929  014E4C                     L6:
  7930  014E4C  0060  F0CB  FFE3   	movff	btemp,plusw1
  7931                           
  7932                           ;stkvar	_n @ sp[(-4)+-6]
  7933  014E52  0EF6               	movlw	-10
  7934  014E54  006F FF8C  F032    	movff	plusw1,btemp
  7935  014E5A  0EF7               	movlw	-9
  7936  014E5C  50E3               	movf	plusw1,w,c
  7937  014E5E  1032               	iorwf	btemp^0,w,c
  7938  014E60  A4D8               	btfss	status,2,c
  7939  014E62  D7C6               	goto	l10472
  7940  014E64                     u10420:
  7941                           
  7942                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7943  014E64  0EF6               	movlw	246
  7944  014E66  26E1               	addwf	fsr1l,f,c
  7945  014E68  0EFF               	movlw	255
  7946  014E6A  22E2               	addwfc	fsr1h,f,c
  7947  014E6C  0012               	return		;funcret
  7948  014E6E                     __end_of_memset:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _printf *****************
  7952 ;; Defined at:
  7953 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  fmt             2  [STACK] PTR const unsigned char 
  7956 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  ap              2  [STACK] PTR void [1]
  7959 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7960 ;;  ret             2    0        int 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  2  [STACK] int 
  7963 ;; Registers used:
  7964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7965 ;; Tracked objects:
  7966 ;;		On entry : 3F/3B
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7974 ;;Total ram usage:        0 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:   14
  7977 ;; This function calls:
  7978 ;;		_vfprintf
  7979 ;; This function is called by:
  7980 ;;		_eaDogM_WriteString
  7981 ;;		_send_lcd_cmd_dma
  7982 ;; This function uses a reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text37
  7986  01801C                     __ptext37:
  7987                           	opt callstack 0
  7988  01801C                     _printf:
  7989                           	opt callstack 0
  7990                           
  7991                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7992  01801C  52E6               	movf	postinc1,f,c
  7993  01801E  52E6               	movf	postinc1,f,c
  7994                           
  7995                           ;stkvar	?_printf @ sp[(-2)+-3]
  7996                           
  7997                           ;incstack = 0
  7998  018020  0EFB               	movlw	251
  7999  018022  24E1               	addwf	fsr1l,w,c
  8000  018024  6E3C               	movwf	(btemp+10)^0,c
  8001  018026  0EFF               	movlw	255
  8002  018028  20E2               	addwfc	fsr1h,w,c
  8003  01802A  6E3D               	movwf	(btemp+11)^0,c
  8004                           
  8005                           ;stkvar	_ap @ sp[(-2)+0]
  8006  01802C  0EFF               	movlw	-1
  8007  01802E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8008  018034  0EFE               	movlw	-2
  8009  018036  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8010                           
  8011                           ;stkvar	_ap @ sp[(-2)+0]
  8012  01803C  0EFE               	movlw	254
  8013  01803E  24E1               	addwf	fsr1l,w,c
  8014  018040  6E32               	movwf	btemp^0,c
  8015  018042  0EFF               	movlw	255
  8016  018044  20E2               	addwfc	fsr1h,w,c
  8017  018046  6E33               	movwf	(btemp+1)^0,c
  8018  018048  0060  F0CB  FFE6   	movff	btemp,postinc1
  8019  01804E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8020                           
  8021                           ;stkvar	_fmt @ sp[(-4)+-3]
  8022  018054  0EF9               	movlw	-7
  8023  018056  006F FF8F FFE6     	movff	plusw1,postinc1
  8024  01805C  006F FF8F FFE6     	movff	plusw1,postinc1
  8025  018062  0E00               	movlw	0
  8026  018064  6EE6               	movwf	postinc1,c
  8027  018066  0E00               	movlw	0
  8028  018068  6EE6               	movwf	postinc1,c
  8029  01806A  EC82  F0BB         	call	_vfprintf	;wreg free
  8030                           
  8031                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8032  01806E  52E5               	movf	postdec1,f,c
  8033  018070  52E5               	movf	postdec1,f,c
  8034  018072  52E5               	movf	postdec1,f,c
  8035  018074  50E7               	movf	indf1,w,c
  8036  018076  5EE1               	subwf	fsr1l,f,c
  8037  018078  0E00               	movlw	0
  8038  01807A  5AE2               	subwfb	fsr1h,f,c
  8039  01807C  0012               	return		;funcret
  8040  01807E                     __end_of_printf:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function _vfprintf *****************
  8044 ;; Defined at:
  8045 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8048 ;;		 -> f(6), NULL(0), 
  8049 ;;  fmt             2  [STACK] PTR const unsigned char 
  8050 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8051 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8052 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8053 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8054 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8055 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8056 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8057 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8058 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8059 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8060 ;;  ap              2  [STACK] PTR PTR void 
  8061 ;;		 -> ap(2), ap(2), 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  cfmt            2  [STACK] PTR unsigned char 
  8064 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8065 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8066 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8067 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8068 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8069 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8070 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8071 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8072 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8073 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  2  [STACK] int 
  8076 ;; Registers used:
  8077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/5
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8087 ;;Total ram usage:        0 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:   13
  8090 ;; This function calls:
  8091 ;;		_vfpfcnvrt
  8092 ;; This function is called by:
  8093 ;;		_sprintf
  8094 ;;		_printf
  8095 ;; This function uses a reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text38
  8099  017704                     __ptext38:
  8100                           	opt callstack 0
  8101  017704                     _vfprintf:
  8102                           	opt callstack 0
  8103                           
  8104                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8105  017704  52E6               	movf	postinc1,f,c
  8106  017706  52E6               	movf	postinc1,f,c
  8107                           
  8108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8109                           ;stkvar	_fmt @ sp[(-2)+-4]
  8110                           
  8111                           ;incstack = 0
  8112  017708  0EFA               	movlw	-6
  8113  01770A  006F FF8C  F03C    	movff	plusw1,btemp+10
  8114  017710  0EFB               	movlw	-5
  8115  017712  006F FF8C  F03D    	movff	plusw1,btemp+11
  8116                           
  8117                           ;stkvar	_cfmt @ sp[(-2)+0]
  8118  017718  0EFF               	movlw	-1
  8119  01771A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8120  017720  0EFE               	movlw	-2
  8121  017722  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8122                           
  8123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8124  017728  6A19               	clrf	_nout^0,c
  8125  01772A  6A1A               	clrf	(_nout+1)^0,c
  8126                           
  8127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8128  01772C  D020               	goto	l10486
  8129  01772E                     l10484:
  8130                           
  8131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8132                           ;stkvar	_ap @ sp[(-2)+-6]
  8133  01772E  0EF8               	movlw	-8
  8134  017730  006F FF8F FFE6     	movff	plusw1,postinc1
  8135  017736  006F FF8F FFE6     	movff	plusw1,postinc1
  8136                           
  8137                           ;stkvar	_cfmt @ sp[(-4)+0]
  8138  01773C  0EFC               	movlw	252
  8139  01773E  24E1               	addwf	fsr1l,w,c
  8140  017740  6E32               	movwf	btemp^0,c
  8141  017742  0EFF               	movlw	255
  8142  017744  20E2               	addwfc	fsr1h,w,c
  8143  017746  6E33               	movwf	(btemp+1)^0,c
  8144  017748  0060  F0CB  FFE6   	movff	btemp,postinc1
  8145  01774E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8146                           
  8147                           ;stkvar	_fp @ sp[(-6)+-2]
  8148  017754  0EF8               	movlw	-8
  8149  017756  006F FF8F FFE6     	movff	plusw1,postinc1
  8150  01775C  006F FF8F FFE6     	movff	plusw1,postinc1
  8151  017762  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8152  017766  5032               	movf	btemp^0,w,c
  8153  017768  2619               	addwf	_nout^0,f,c
  8154  01776A  5033               	movf	(btemp+1)^0,w,c
  8155  01776C  221A               	addwfc	(_nout+1)^0,f,c
  8156  01776E                     l10486:
  8157                           
  8158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8159                           ;stkvar	_cfmt @ sp[(-2)+0]
  8160  01776E  50E1               	movf	fsr1l,w,c
  8161  017770  0FFE               	addlw	-2
  8162  017772  6ED9               	movwf	fsr2l,c
  8163  017774  50E2               	movf	fsr1h,w,c
  8164  017776  6EDA               	movwf	fsr2h,c
  8165  017778  0EFF               	movlw	255
  8166  01777A  22DA               	addwfc	fsr2h,f,c
  8167  01777C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8168  017782  006F FF77 FFF7     	movff	postdec2,tblptrh
  8169  017788                     	if	0	;tblptru may be non-zero
  8170  017788                     	endif
  8171  017788                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8172  017788  0E00               	movlw	low (__mediumconst shr (0+16))
  8173  01778A  6EF8               	movwf	tblptru,c
  8174  01778C                     	endif
  8175  01778C  0008               	tblrd		*
  8176  01778E  50F5               	movf	tablat,w,c
  8177  017790  0900               	iorlw	0
  8178  017792  A4D8               	btfss	status,2,c
  8179  017794  D7CC               	goto	l10484
  8180                           
  8181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8182  017796  0060  F064  F032   	movff	_nout,btemp
  8183  01779C  0060  F068  F033   	movff	_nout+1,btemp+1
  8184                           
  8185                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8186  0177A2  0EF8               	movlw	248
  8187  0177A4  26E1               	addwf	fsr1l,f,c
  8188  0177A6  0EFF               	movlw	255
  8189  0177A8  22E2               	addwfc	fsr1h,f,c
  8190  0177AA  0012               	return		;funcret
  8191  0177AC                     __end_of_vfprintf:
  8192                           	opt callstack 0
  8193                           
  8194 ;; *************** function _vfpfcnvrt *****************
  8195 ;; Defined at:
  8196 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8199 ;;		 -> f(6), NULL(0), 
  8200 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8201 ;;		 -> cfmt(2), 
  8202 ;;  ap              2  [STACK] PTR PTR void 
  8203 ;;		 -> ap(2), ap(2), 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  llu             8  [STACK] unsigned long long 
  8206 ;;  ll              8  [STACK] long long 
  8207 ;;  f               4  [STACK] long long 
  8208 ;;  ct              3  [STACK] unsigned char [3]
  8209 ;;  vp              3    0        PTR void 
  8210 ;;  cp              2  [STACK] PTR unsigned char 
  8211 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8212 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  8213 ;;		 -> STR_3(6), V(188), 
  8214 ;;  i               2    0        int 
  8215 ;;  done            2    0        int 
  8216 ;;  c               1  [STACK] unsigned char 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2  [STACK] int 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/5
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:   12
  8233 ;; This function calls:
  8234 ;;		_atoi
  8235 ;;		_ctoa
  8236 ;;		_dtoa
  8237 ;;		_efgtoa
  8238 ;;		_fputc
  8239 ;;		_isdigit
  8240 ;;		_isupper
  8241 ;;		_stoa
  8242 ;;		_strncmp
  8243 ;;		_tolower
  8244 ;;		_xtoa
  8245 ;; This function is called by:
  8246 ;;		_vfprintf
  8247 ;; This function uses a reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text39
  8251  011244                     __ptext39:
  8252                           	opt callstack 0
  8253  011244                     _vfpfcnvrt:
  8254                           	opt callstack 0
  8255                           
  8256                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8257  011244  0E20               	movlw	32
  8258  011246  26E1               	addwf	fsr1l,f,c
  8259  011248  0E00               	movlw	0
  8260  01124A  22E2               	addwfc	fsr1h,f,c
  8261                           
  8262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8263                           ;stkvar	_fmt @ sp[(-32)+-4]
  8264                           
  8265                           ;incstack = 0
  8266  01124C  0EDC               	movlw	-36
  8267  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8268  011254  0EDD               	movlw	-35
  8269  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8270  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8271  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8272  011268                     	if	0	;tblptru may be non-zero
  8273  011268                     	endif
  8274  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8275  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8276  01126A  6EF8               	movwf	tblptru,c
  8277  01126C                     	endif
  8278  01126C  0008               	tblrd		*
  8279  01126E  50F5               	movf	tablat,w,c
  8280  011270  0A25               	xorlw	37
  8281  011272  A4D8               	btfss	status,2,c
  8282  011274  EF92  F08E         	goto	l10430
  8283                           
  8284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8285                           ;stkvar	_fmt @ sp[(-32)+-4]
  8286  011278  0EDC               	movlw	-36
  8287  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8288  011280  0EDD               	movlw	-35
  8289  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8290  011288  2ADE               	incf	postinc2,f,c
  8291  01128A  0E00               	movlw	0
  8292  01128C  22DD               	addwfc	postdec2,f,c
  8293                           
  8294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8295  01128E  6A1B               	clrf	_width^0,c
  8296  011290  6A1C               	clrf	(_width+1)^0,c
  8297  011292  6A1F               	clrf	_flags^0,c
  8298  011294  6A20               	clrf	(_flags+1)^0,c
  8299                           
  8300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8301  011296  681D               	setf	_prec^0,c
  8302  011298  681E               	setf	(_prec+1)^0,c
  8303                           
  8304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8305                           ;stkvar	_fmt @ sp[(-32)+-4]
  8306  01129A  0EDC               	movlw	-36
  8307  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8308  0112A2  0EDD               	movlw	-35
  8309  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8310  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8311  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8312  0112B6                     	if	0	;tblptru may be non-zero
  8313  0112B6                     	endif
  8314  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8315  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8316  0112B8  6EF8               	movwf	tblptru,c
  8317  0112BA                     	endif
  8318  0112BA  0008               	tblrd		*
  8319  0112BC  50F5               	movf	tablat,w,c
  8320  0112BE  0A2A               	xorlw	42
  8321  0112C0  A4D8               	btfss	status,2,c
  8322  0112C2  D031               	goto	l10294
  8323                           
  8324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8325                           ;stkvar	_fmt @ sp[(-32)+-4]
  8326  0112C4  0EDC               	movlw	-36
  8327  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8328  0112CC  0EDD               	movlw	-35
  8329  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8330  0112D4  2ADE               	incf	postinc2,f,c
  8331  0112D6  0E00               	movlw	0
  8332  0112D8  22DD               	addwfc	postdec2,f,c
  8333                           
  8334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8335                           ;stkvar	_ap @ sp[(-32)+-6]
  8336  0112DA  0EDA               	movlw	-38
  8337  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8338  0112E2  0EDB               	movlw	-37
  8339  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8340  0112EA  0E02               	movlw	2
  8341  0112EC  5EDE               	subwf	postinc2,f,c
  8342  0112EE  0E00               	movlw	0
  8343  0112F0  5ADD               	subwfb	postdec2,f,c
  8344  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  8345  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  8346  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8347  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8348  01130A  006F FF78  F01B    	movff	postinc2,_width
  8349  011310  006F FF74  F01C    	movff	postdec2,_width+1
  8350                           
  8351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8352  011316  AE1C               	btfss	(_width+1)^0,7,c
  8353  011318  D066               	goto	u10180
  8354                           
  8355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8356  01131A  801F               	bsf	_flags^0,0,c
  8357                           
  8358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8359  01131C  6C1B               	negf	_width^0,c
  8360  01131E  1E1C               	comf	(_width+1)^0,f,c
  8361  011320  B0D8               	btfsc	status,0,c
  8362  011322  2A1C               	incf	(_width+1)^0,f,c
  8363  011324  D060               	goto	u10180
  8364  011326                     l10294:
  8365                           
  8366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8367                           ;stkvar	_fmt @ sp[(-32)+-4]
  8368  011326  0EDC               	movlw	-36
  8369  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8370  01132E  0EDD               	movlw	-35
  8371  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8372  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  8373  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  8374  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8375  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8376  01134E  EC38  F0AB         	call	_atoi	;wreg free
  8377  011352  0060  F0C8  F01B   	movff	btemp,_width
  8378  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  8379                           
  8380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8381  01135E  D00B               	goto	l10298
  8382  011360                     l10296:
  8383                           
  8384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8385                           ;stkvar	_fmt @ sp[(-32)+-4]
  8386  011360  0EDC               	movlw	-36
  8387  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8388  011368  0EDD               	movlw	-35
  8389  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8390  011370  2ADE               	incf	postinc2,f,c
  8391  011372  0E00               	movlw	0
  8392  011374  22DD               	addwfc	postdec2,f,c
  8393  011376                     l10298:
  8394  011376  0ED0               	movlw	208
  8395  011378  6E3C               	movwf	(btemp+10)^0,c
  8396  01137A  0EFF               	movlw	255
  8397  01137C  6E3D               	movwf	(btemp+11)^0,c
  8398                           
  8399                           ;stkvar	_fmt @ sp[(-32)+-4]
  8400  01137E  0EDC               	movlw	-36
  8401  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8402  011386  0EDD               	movlw	-35
  8403  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8404  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8405  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8406  01139A                     	if	0	;tblptru may be non-zero
  8407  01139A                     	endif
  8408  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8409  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8410  01139C  6EF8               	movwf	tblptru,c
  8411  01139E                     	endif
  8412  01139E  0008               	tblrd		*
  8413  0113A0  50F5               	movf	tablat,w,c
  8414  0113A2  6E3A               	movwf	(btemp+8)^0,c
  8415  0113A4  6A3B               	clrf	(btemp+9)^0,c
  8416  0113A6  503C               	movf	(btemp+10)^0,w,c
  8417  0113A8  263A               	addwf	(btemp+8)^0,f,c
  8418  0113AA  503D               	movf	(btemp+11)^0,w,c
  8419  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  8420  0113AE  503B               	movf	(btemp+9)^0,w,c
  8421  0113B0  E106               	bnz	u10160
  8422  0113B2  0E0A               	movlw	10
  8423  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  8424  0113B6  B0D8               	btfsc	status,0,c
  8425  0113B8  D002               	goto	u10160
  8426  0113BA  0E01               	movlw	1
  8427  0113BC  D001               	goto	u10170
  8428  0113BE                     u10160:
  8429  0113BE  0E00               	movlw	0
  8430  0113C0                     u10170:
  8431  0113C0  6E3C               	movwf	(btemp+10)^0,c
  8432  0113C2  6A3D               	clrf	(btemp+11)^0,c
  8433                           
  8434                           ;stkvar	_vfpfcnvrt$4648 @ sp[(-32)+4]
  8435  0113C4  0EE4               	movlw	-28
  8436  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8437  0113CC  0EE5               	movlw	-27
  8438  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8439                           
  8440                           ;stkvar	_vfpfcnvrt$4648 @ sp[(-32)+4]
  8441  0113D4  0EE4               	movlw	-28
  8442  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  8443  0113DC  0EE5               	movlw	-27
  8444  0113DE  50E3               	movf	plusw1,w,c
  8445  0113E0  1032               	iorwf	btemp^0,w,c
  8446  0113E2  A4D8               	btfss	status,2,c
  8447  0113E4  D7BD               	goto	l10296
  8448  0113E6                     u10180:
  8449                           
  8450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8451                           ;stkvar	_fmt @ sp[(-32)+-4]
  8452  0113E6  0EDC               	movlw	-36
  8453  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8454  0113EE  0EDD               	movlw	-35
  8455  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8456  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8457  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8458  011402                     	if	0	;tblptru may be non-zero
  8459  011402                     	endif
  8460  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8461  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8462  011404  6EF8               	movwf	tblptru,c
  8463  011406                     	endif
  8464  011406  0008               	tblrd		*
  8465  011408  50F5               	movf	tablat,w,c
  8466  01140A  0A2E               	xorlw	46
  8467  01140C  A4D8               	btfss	status,2,c
  8468  01140E  D0AC               	goto	u10230
  8469                           
  8470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8471  011410  6A1D               	clrf	_prec^0,c
  8472  011412  6A1E               	clrf	(_prec+1)^0,c
  8473                           
  8474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8475                           ;stkvar	_fmt @ sp[(-32)+-4]
  8476  011414  0EDC               	movlw	-36
  8477  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8478  01141C  0EDD               	movlw	-35
  8479  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8480  011424  2ADE               	incf	postinc2,f,c
  8481  011426  0E00               	movlw	0
  8482  011428  22DD               	addwfc	postdec2,f,c
  8483                           
  8484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8485                           ;stkvar	_fmt @ sp[(-32)+-4]
  8486  01142A  0EDC               	movlw	-36
  8487  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8488  011432  0EDD               	movlw	-35
  8489  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8490  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8491  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8492  011446                     	if	0	;tblptru may be non-zero
  8493  011446                     	endif
  8494  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8495  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8496  011448  6EF8               	movwf	tblptru,c
  8497  01144A                     	endif
  8498  01144A  0008               	tblrd		*
  8499  01144C  50F5               	movf	tablat,w,c
  8500  01144E  0A2A               	xorlw	42
  8501  011450  A4D8               	btfss	status,2,c
  8502  011452  D02A               	goto	l10316
  8503                           
  8504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8505                           ;stkvar	_fmt @ sp[(-32)+-4]
  8506  011454  0EDC               	movlw	-36
  8507  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8508  01145C  0EDD               	movlw	-35
  8509  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8510  011464  2ADE               	incf	postinc2,f,c
  8511  011466  0E00               	movlw	0
  8512  011468  22DD               	addwfc	postdec2,f,c
  8513                           
  8514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8515                           ;stkvar	_ap @ sp[(-32)+-6]
  8516  01146A  0EDA               	movlw	-38
  8517  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8518  011472  0EDB               	movlw	-37
  8519  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8520  01147A  0E02               	movlw	2
  8521  01147C  5EDE               	subwf	postinc2,f,c
  8522  01147E  0E00               	movlw	0
  8523  011480  5ADD               	subwfb	postdec2,f,c
  8524  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8525  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8526  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8527  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8528  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8529  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8530                           
  8531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8532  0114A6  D060               	goto	u10230
  8533  0114A8                     l10316:
  8534                           
  8535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8536                           ;stkvar	_fmt @ sp[(-32)+-4]
  8537  0114A8  0EDC               	movlw	-36
  8538  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8539  0114B0  0EDD               	movlw	-35
  8540  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8541  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8542  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8543  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8544  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8545  0114D0  EC38  F0AB         	call	_atoi	;wreg free
  8546  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8547  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8548                           
  8549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8550  0114E0  D00B               	goto	l10320
  8551  0114E2                     l10318:
  8552                           
  8553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8554                           ;stkvar	_fmt @ sp[(-32)+-4]
  8555  0114E2  0EDC               	movlw	-36
  8556  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8557  0114EA  0EDD               	movlw	-35
  8558  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8559  0114F2  2ADE               	incf	postinc2,f,c
  8560  0114F4  0E00               	movlw	0
  8561  0114F6  22DD               	addwfc	postdec2,f,c
  8562  0114F8                     l10320:
  8563  0114F8  0ED0               	movlw	208
  8564  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8565  0114FC  0EFF               	movlw	255
  8566  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8567                           
  8568                           ;stkvar	_fmt @ sp[(-32)+-4]
  8569  011500  0EDC               	movlw	-36
  8570  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8571  011508  0EDD               	movlw	-35
  8572  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8573  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8574  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8575  01151C                     	if	0	;tblptru may be non-zero
  8576  01151C                     	endif
  8577  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8578  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8579  01151E  6EF8               	movwf	tblptru,c
  8580  011520                     	endif
  8581  011520  0008               	tblrd		*
  8582  011522  50F5               	movf	tablat,w,c
  8583  011524  6E3A               	movwf	(btemp+8)^0,c
  8584  011526  6A3B               	clrf	(btemp+9)^0,c
  8585  011528  503C               	movf	(btemp+10)^0,w,c
  8586  01152A  263A               	addwf	(btemp+8)^0,f,c
  8587  01152C  503D               	movf	(btemp+11)^0,w,c
  8588  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8589  011530  503B               	movf	(btemp+9)^0,w,c
  8590  011532  E106               	bnz	u10210
  8591  011534  0E0A               	movlw	10
  8592  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8593  011538  B0D8               	btfsc	status,0,c
  8594  01153A  D002               	goto	u10210
  8595  01153C  0E01               	movlw	1
  8596  01153E  D001               	goto	u10220
  8597  011540                     u10210:
  8598  011540  0E00               	movlw	0
  8599  011542                     u10220:
  8600  011542  6E3C               	movwf	(btemp+10)^0,c
  8601  011544  6A3D               	clrf	(btemp+11)^0,c
  8602                           
  8603                           ;stkvar	_vfpfcnvrt$4649 @ sp[(-32)+0]
  8604  011546  0EE0               	movlw	-32
  8605  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8606  01154E  0EE1               	movlw	-31
  8607  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8608                           
  8609                           ;stkvar	_vfpfcnvrt$4649 @ sp[(-32)+0]
  8610  011556  0EE0               	movlw	-32
  8611  011558  006F FF8C  F032    	movff	plusw1,btemp
  8612  01155E  0EE1               	movlw	-31
  8613  011560  50E3               	movf	plusw1,w,c
  8614  011562  1032               	iorwf	btemp^0,w,c
  8615  011564  A4D8               	btfss	status,2,c
  8616  011566  D7BD               	goto	l10318
  8617  011568                     u10230:
  8618                           
  8619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8620                           ;stkvar	_fmt @ sp[(-32)+-4]
  8621  011568  0EDC               	movlw	-36
  8622  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8623  011570  0EDD               	movlw	-35
  8624  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8625  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8626  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8627  011584                     	if	0	;tblptru may be non-zero
  8628  011584                     	endif
  8629  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8630  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8631  011586  6EF8               	movwf	tblptru,c
  8632  011588                     	endif
  8633  011588  0008               	tblrd		*
  8634  01158A  50F5               	movf	tablat,w,c
  8635  01158C  6EE6               	movwf	postinc1,c
  8636  01158E  0E00               	movlw	0
  8637  011590  6EE6               	movwf	postinc1,c
  8638  011592  EC26  F0BE         	call	_tolower	;wreg free
  8639                           
  8640                           ;stkvar	_ct @ sp[(-32)+26]
  8641  011596  0EFA               	movlw	-6
  8642  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8643                           
  8644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8645                           ;stkvar	_ct @ sp[(-32)+26]
  8646  01159E  0EFA               	movlw	-6
  8647  0115A0  50E3               	movf	plusw1,w,c
  8648  0115A2  B4D8               	btfsc	status,2,c
  8649  0115A4  D05B               	goto	l10336
  8650                           
  8651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8652                           ;stkvar	_ct @ sp[(-32)+26]
  8653  0115A6  0EFB               	movlw	251
  8654  0115A8  24E1               	addwf	fsr1l,w,c
  8655  0115AA  6ED9               	movwf	fsr2l,c
  8656  0115AC  0EFF               	movlw	255
  8657  0115AE  20E2               	addwfc	fsr1h,w,c
  8658  0115B0  6EDA               	movwf	fsr2h,c
  8659                           
  8660                           ;stkvar	_fmt @ sp[(-32)+-4]
  8661  0115B2  0EDC               	movlw	-36
  8662  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8663  0115BA  0EDD               	movlw	-35
  8664  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8665  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8666  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8667  0115CE  0E01               	movlw	1
  8668  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8669  0115D2  0E00               	movlw	0
  8670  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8671  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8672  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8673  0115E2                     	if	0	;tblptru may be non-zero
  8674  0115E2                     	endif
  8675  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8676  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8677  0115E4  6EF8               	movwf	tblptru,c
  8678  0115E6                     	endif
  8679  0115E6  0008               	tblrd		*
  8680  0115E8  50F5               	movf	tablat,w,c
  8681  0115EA  6EE6               	movwf	postinc1,c
  8682  0115EC  0E00               	movlw	0
  8683  0115EE  6EE6               	movwf	postinc1,c
  8684  0115F0  EC26  F0BE         	call	_tolower	;wreg free
  8685  0115F4  5032               	movf	btemp^0,w,c
  8686  0115F6  6EDF               	movwf	indf2,c
  8687                           
  8688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8689                           ;stkvar	_ct @ sp[(-32)+26]
  8690  0115F8  0EFB               	movlw	251
  8691  0115FA  24E1               	addwf	fsr1l,w,c
  8692  0115FC  6ED9               	movwf	fsr2l,c
  8693  0115FE  0EFF               	movlw	255
  8694  011600  20E2               	addwfc	fsr1h,w,c
  8695  011602  6EDA               	movwf	fsr2h,c
  8696  011604  50DF               	movf	indf2,w,c
  8697  011606  B4D8               	btfsc	status,2,c
  8698  011608  D029               	goto	l10336
  8699                           
  8700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8701                           ;stkvar	_ct @ sp[(-32)+26]
  8702  01160A  0EFC               	movlw	252
  8703  01160C  24E1               	addwf	fsr1l,w,c
  8704  01160E  6ED9               	movwf	fsr2l,c
  8705  011610  0EFF               	movlw	255
  8706  011612  20E2               	addwfc	fsr1h,w,c
  8707  011614  6EDA               	movwf	fsr2h,c
  8708                           
  8709                           ;stkvar	_fmt @ sp[(-32)+-4]
  8710  011616  0EDC               	movlw	-36
  8711  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8712  01161E  0EDD               	movlw	-35
  8713  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8714  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8715  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8716  011632  0E02               	movlw	2
  8717  011634  263C               	addwf	(btemp+10)^0,f,c
  8718  011636  0E00               	movlw	0
  8719  011638  223D               	addwfc	(btemp+11)^0,f,c
  8720  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8721  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8722  011646                     	if	0	;tblptru may be non-zero
  8723  011646                     	endif
  8724  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8725  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8726  011648  6EF8               	movwf	tblptru,c
  8727  01164A                     	endif
  8728  01164A  0008               	tblrd		*
  8729  01164C  50F5               	movf	tablat,w,c
  8730  01164E  6EE6               	movwf	postinc1,c
  8731  011650  0E00               	movlw	0
  8732  011652  6EE6               	movwf	postinc1,c
  8733  011654  EC26  F0BE         	call	_tolower	;wreg free
  8734  011658  5032               	movf	btemp^0,w,c
  8735  01165A  6EDF               	movwf	indf2,c
  8736  01165C                     l10336:
  8737                           
  8738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8739                           ;stkvar	_fmt @ sp[(-32)+-4]
  8740  01165C  0EDC               	movlw	-36
  8741  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8742  011664  0EDD               	movlw	-35
  8743  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8744  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8745  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8746  011678                     	if	0	;tblptru may be non-zero
  8747  011678                     	endif
  8748  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8749  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8750  01167A  6EF8               	movwf	tblptru,c
  8751  01167C                     	endif
  8752  01167C  0008               	tblrd		*
  8753  01167E  50F5               	movf	tablat,w,c
  8754  011680  0A63               	xorlw	99
  8755  011682  A4D8               	btfss	status,2,c
  8756  011684  D036               	goto	l10346
  8757                           
  8758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8759                           ;stkvar	_fmt @ sp[(-32)+-4]
  8760  011686  0EDC               	movlw	-36
  8761  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8762  01168E  0EDD               	movlw	-35
  8763  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8764  011696  2ADE               	incf	postinc2,f,c
  8765  011698  0E00               	movlw	0
  8766  01169A  22DD               	addwfc	postdec2,f,c
  8767                           
  8768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8769                           ;stkvar	_ap @ sp[(-32)+-6]
  8770  01169C  0EDA               	movlw	-38
  8771  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8772  0116A4  0EDB               	movlw	-37
  8773  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8774  0116AC  0E02               	movlw	2
  8775  0116AE  5EDE               	subwf	postinc2,f,c
  8776  0116B0  0E00               	movlw	0
  8777  0116B2  5ADD               	subwfb	postdec2,f,c
  8778  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8779  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8780  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8781  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8782  0116CC  50DF               	movf	indf2,w,c
  8783  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8784                           
  8785                           ;stkvar	_c @ sp[(-32)+31]
  8786  0116D0  0EFF               	movlw	-1
  8787  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8788                           
  8789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8790                           ;stkvar	_c @ sp[(-32)+31]
  8791  0116D8  0EFF               	movlw	-1
  8792  0116DA  50E3               	movf	plusw1,w,c
  8793  0116DC  6EE6               	movwf	postinc1,c
  8794                           
  8795                           ;stkvar	_fp @ sp[(-33)+-2]
  8796  0116DE  0EDD               	movlw	-35
  8797  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8798  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8799  0116EC  ECA0  F0BD         	call	_ctoa	;wreg free
  8800  0116F0  D343               	goto	l2074
  8801  0116F2                     l10346:
  8802                           
  8803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8804                           ;stkvar	_fmt @ sp[(-32)+-4]
  8805  0116F2  0EDC               	movlw	-36
  8806  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8807  0116FA  0EDD               	movlw	-35
  8808  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8809  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8810  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8811  01170E                     	if	0	;tblptru may be non-zero
  8812  01170E                     	endif
  8813  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8814  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8815  011710  6EF8               	movwf	tblptru,c
  8816  011712                     	endif
  8817  011712  0008               	tblrd		*
  8818  011714  50F5               	movf	tablat,w,c
  8819  011716  0A64               	xorlw	100
  8820  011718  B4D8               	btfsc	status,2,c
  8821  01171A  D015               	goto	u10280
  8822                           
  8823                           ;stkvar	_fmt @ sp[(-32)+-4]
  8824  01171C  0EDC               	movlw	-36
  8825  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8826  011724  0EDD               	movlw	-35
  8827  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8828  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8829  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8830  011738                     	if	0	;tblptru may be non-zero
  8831  011738                     	endif
  8832  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8833  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8834  01173A  6EF8               	movwf	tblptru,c
  8835  01173C                     	endif
  8836  01173C  0008               	tblrd		*
  8837  01173E  50F5               	movf	tablat,w,c
  8838  011740  0A69               	xorlw	105
  8839  011742  A4D8               	btfss	status,2,c
  8840  011744  D075               	goto	l10358
  8841  011746                     u10280:
  8842                           
  8843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8844                           ;stkvar	_fmt @ sp[(-32)+-4]
  8845  011746  0EDC               	movlw	-36
  8846  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8847  01174E  0EDD               	movlw	-35
  8848  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8849  011756  2ADE               	incf	postinc2,f,c
  8850  011758  0E00               	movlw	0
  8851  01175A  22DD               	addwfc	postdec2,f,c
  8852                           
  8853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8854                           ;stkvar	_ap @ sp[(-32)+-6]
  8855  01175C  0EDA               	movlw	-38
  8856  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8857  011764  0EDB               	movlw	-37
  8858  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8859  01176C  0E02               	movlw	2
  8860  01176E  5EDE               	subwf	postinc2,f,c
  8861  011770  0E00               	movlw	0
  8862  011772  5ADD               	subwfb	postdec2,f,c
  8863  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8864  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8865  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8866  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8867  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8868  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8869                           
  8870                           ;stkvar	_ll @ sp[(-32)+14]
  8871  011798  0EEE               	movlw	-18
  8872  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8873  0117A0  0EEF               	movlw	-17
  8874  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8875  0117A8  6A32               	clrf	btemp^0,c
  8876  0117AA  BEE3               	btfsc	plusw1,7,c
  8877  0117AC  6832               	setf	btemp^0,c
  8878  0117AE  0EF0               	movlw	-16
  8879  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8880  0117B6  0EF1               	movlw	-15
  8881  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8882  0117BE  0EF2               	movlw	-14
  8883  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8884  0117C6  0EF3               	movlw	-13
  8885  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8886  0117CE  0EF4               	movlw	-12
  8887  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8888  0117D6  0EF5               	movlw	-11
  8889  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8890                           
  8891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8892                           ;stkvar	_ll @ sp[(-32)+14]
  8893  0117DE  50E1               	movf	fsr1l,w,c
  8894  0117E0  0FEE               	addlw	-18
  8895  0117E2  6ED9               	movwf	fsr2l,c
  8896  0117E4  50E2               	movf	fsr1h,w,c
  8897  0117E6  6EDA               	movwf	fsr2h,c
  8898  0117E8  0EFF               	movlw	255
  8899  0117EA  22DA               	addwfc	fsr2h,f,c
  8900  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8901  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8902  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8903  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8904  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8905  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8906  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8907  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8908                           
  8909                           ;stkvar	_fp @ sp[(-40)+-2]
  8910  01181C  0ED6               	movlw	-42
  8911  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8912  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8913  01182A  ECEE  F09F         	call	_dtoa	;wreg free
  8914  01182E  D2A4               	goto	l2074
  8915  011830                     l10358:
  8916                           
  8917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8918                           ;stkvar	_ct @ sp[(-32)+26]
  8919  011830  0EFA               	movlw	-6
  8920  011832  006F FF8C  F032    	movff	plusw1,btemp
  8921  011838  0E66               	movlw	102
  8922  01183A  1832               	xorwf	btemp^0,w,c
  8923  01183C  A4D8               	btfss	status,2,c
  8924  01183E  D06E               	goto	l10370
  8925                           
  8926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8927                           ;stkvar	_fmt @ sp[(-32)+-4]
  8928  011840  0EDC               	movlw	-36
  8929  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8930  011848  0EDD               	movlw	-35
  8931  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8932  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8933  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8934  01185C                     	if	0	;tblptru may be non-zero
  8935  01185C                     	endif
  8936  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8937  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8938  01185E  6EF8               	movwf	tblptru,c
  8939  011860                     	endif
  8940                           
  8941                           ;stkvar	_c @ sp[(-32)+31]
  8942  011860  0008               	tblrd		*
  8943  011862  0EFF               	movlw	-1
  8944  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8945                           
  8946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8947                           ;stkvar	_fmt @ sp[(-32)+-4]
  8948  01186A  0EDC               	movlw	-36
  8949  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8950  011872  0EDD               	movlw	-35
  8951  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8952  01187A  2ADE               	incf	postinc2,f,c
  8953  01187C  0E00               	movlw	0
  8954  01187E  22DD               	addwfc	postdec2,f,c
  8955                           
  8956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8957                           ;stkvar	_ap @ sp[(-32)+-6]
  8958  011880  0EDA               	movlw	-38
  8959  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8960  011888  0EDB               	movlw	-37
  8961  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8962  011890  0E04               	movlw	4
  8963  011892  5EDE               	subwf	postinc2,f,c
  8964  011894  0E00               	movlw	0
  8965  011896  5ADD               	subwfb	postdec2,f,c
  8966  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8967  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8968  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8969  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8970  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8971  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8972  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8973  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8974                           
  8975                           ;stkvar	_f @ sp[(-32)+22]
  8976  0118C8  0EF6               	movlw	-10
  8977  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8978  0118D0  0EF7               	movlw	-9
  8979  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8980  0118D8  0EF8               	movlw	-8
  8981  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8982  0118E0  0EF9               	movlw	-7
  8983  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8984  0118E8                     l10366:
  8985                           
  8986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8987                           ;stkvar	_c @ sp[(-32)+31]
  8988  0118E8  0EFF               	movlw	-1
  8989  0118EA  50E3               	movf	plusw1,w,c
  8990  0118EC  6EE6               	movwf	postinc1,c
  8991                           
  8992                           ;stkvar	_f @ sp[(-33)+22]
  8993  0118EE  0EF5               	movlw	-11
  8994  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8995  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8996  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8997  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8998                           
  8999                           ;stkvar	_fp @ sp[(-37)+-2]
  9000  011908  0ED9               	movlw	-39
  9001  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9002  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9003  011916  EC00  F080         	call	_efgtoa	;wreg free
  9004  01191A  D22E               	goto	l2074
  9005  01191C                     l10370:
  9006                           
  9007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9008  01191C  0E02               	movlw	2
  9009  01191E  6EE6               	movwf	postinc1,c
  9010  011920  0E00               	movlw	0
  9011  011922  6EE6               	movwf	postinc1,c
  9012  011924  0EF6               	movlw	low STR_54
  9013  011926  6EE6               	movwf	postinc1,c
  9014  011928  0EFF               	movlw	high STR_54
  9015  01192A  6EE6               	movwf	postinc1,c
  9016                           
  9017                           ;stkvar	_ct @ sp[(-36)+26]
  9018  01192C  0EF6               	movlw	246
  9019  01192E  24E1               	addwf	fsr1l,w,c
  9020  011930  6E32               	movwf	btemp^0,c
  9021  011932  0EFF               	movlw	255
  9022  011934  20E2               	addwfc	fsr1h,w,c
  9023  011936  6E33               	movwf	(btemp+1)^0,c
  9024  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  9025  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  9026  011944  ECA8  F0AF         	call	_strncmp	;wreg free
  9027  011948  5032               	movf	btemp^0,w,c
  9028  01194A  1033               	iorwf	(btemp+1)^0,w,c
  9029  01194C  A4D8               	btfss	status,2,c
  9030  01194E  D096               	goto	l10390
  9031                           
  9032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9033                           ;stkvar	_fmt @ sp[(-32)+-4]
  9034  011950  0EDC               	movlw	-36
  9035  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9036  011958  0EDD               	movlw	-35
  9037  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9038  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  9039  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  9040  01196C  0E01               	movlw	1
  9041  01196E  263C               	addwf	(btemp+10)^0,f,c
  9042  011970  0E00               	movlw	0
  9043  011972  223D               	addwfc	(btemp+11)^0,f,c
  9044  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  9045  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  9046  011980                     	if	0	;tblptru may be non-zero
  9047  011980                     	endif
  9048  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9049  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9050  011982  6EF8               	movwf	tblptru,c
  9051  011984                     	endif
  9052                           
  9053                           ;stkvar	_c @ sp[(-32)+31]
  9054  011984  0008               	tblrd		*
  9055  011986  0EFF               	movlw	-1
  9056  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9057  01198E  0EBF               	movlw	191
  9058  011990  6E3C               	movwf	(btemp+10)^0,c
  9059  011992  0EFF               	movlw	255
  9060  011994  6E3D               	movwf	(btemp+11)^0,c
  9061                           
  9062                           ;stkvar	_fmt @ sp[(-32)+-4]
  9063  011996  0EDC               	movlw	-36
  9064  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9065  01199E  0EDD               	movlw	-35
  9066  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9067  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9068  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9069  0119B2                     	if	0	;tblptru may be non-zero
  9070  0119B2                     	endif
  9071  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9072  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9073  0119B4  6EF8               	movwf	tblptru,c
  9074  0119B6                     	endif
  9075  0119B6  0008               	tblrd		*
  9076  0119B8  50F5               	movf	tablat,w,c
  9077  0119BA  6E3A               	movwf	(btemp+8)^0,c
  9078  0119BC  6A3B               	clrf	(btemp+9)^0,c
  9079  0119BE  503C               	movf	(btemp+10)^0,w,c
  9080  0119C0  263A               	addwf	(btemp+8)^0,f,c
  9081  0119C2  503D               	movf	(btemp+11)^0,w,c
  9082  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  9083  0119C6  503B               	movf	(btemp+9)^0,w,c
  9084  0119C8  E106               	bnz	u10310
  9085  0119CA  0E1A               	movlw	26
  9086  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  9087  0119CE  B0D8               	btfsc	status,0,c
  9088  0119D0  D002               	goto	u10310
  9089  0119D2  0E01               	movlw	1
  9090  0119D4  D001               	goto	u10320
  9091  0119D6                     u10310:
  9092  0119D6  0E00               	movlw	0
  9093  0119D8                     u10320:
  9094  0119D8  6E3C               	movwf	(btemp+10)^0,c
  9095  0119DA  6A3D               	clrf	(btemp+11)^0,c
  9096                           
  9097                           ;stkvar	_vfpfcnvrt$4655 @ sp[(-32)+2]
  9098  0119DC  0EE2               	movlw	-30
  9099  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9100  0119E4  0EE3               	movlw	-29
  9101  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9102                           
  9103                           ;stkvar	_vfpfcnvrt$4655 @ sp[(-32)+2]
  9104  0119EC  0EE2               	movlw	-30
  9105  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  9106  0119F4  0EE3               	movlw	-29
  9107  0119F6  50E3               	movf	plusw1,w,c
  9108  0119F8  1032               	iorwf	btemp^0,w,c
  9109                           
  9110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9111                           ;stkvar	_ap @ sp[(-32)+-6]
  9112                           
  9113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9114                           
  9115                           ;stkvar	_f @ sp[(-32)+22]
  9116                           
  9117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9118                           ;stkvar	_ap @ sp[(-32)+-6]
  9119  0119FA  0EDA               	movlw	-38
  9120  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9121  011A02  0EDB               	movlw	-37
  9122  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9123  011A0A  0E04               	movlw	4
  9124  011A0C  5EDE               	subwf	postinc2,f,c
  9125  011A0E  0E00               	movlw	0
  9126  011A10  5ADD               	subwfb	postdec2,f,c
  9127  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  9128  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  9129  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9130  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9131  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  9132  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  9133  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  9134  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  9135                           
  9136                           ;stkvar	_f @ sp[(-32)+22]
  9137  011A42  0EF6               	movlw	-10
  9138  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9139  011A4A  0EF7               	movlw	-9
  9140  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9141  011A52  0EF8               	movlw	-8
  9142  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9143  011A5A  0EF9               	movlw	-7
  9144  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9145                           
  9146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9147                           ;stkvar	_fmt @ sp[(-32)+-4]
  9148  011A62  0EDC               	movlw	-36
  9149  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9150  011A6A  0EDD               	movlw	-35
  9151  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9152  011A72  0E02               	movlw	2
  9153  011A74  26DE               	addwf	postinc2,f,c
  9154  011A76  0E00               	movlw	0
  9155  011A78  22DD               	addwfc	postdec2,f,c
  9156  011A7A  D736               	goto	l10366
  9157  011A7C                     l10390:
  9158                           
  9159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9160                           ;stkvar	_fmt @ sp[(-32)+-4]
  9161  011A7C  0EDC               	movlw	-36
  9162  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9163  011A84  0EDD               	movlw	-35
  9164  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9165  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9166  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9167  011A98                     	if	0	;tblptru may be non-zero
  9168  011A98                     	endif
  9169  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9170  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9171  011A9A  6EF8               	movwf	tblptru,c
  9172  011A9C                     	endif
  9173  011A9C  0008               	tblrd		*
  9174  011A9E  50F5               	movf	tablat,w,c
  9175  011AA0  0A73               	xorlw	115
  9176  011AA2  A4D8               	btfss	status,2,c
  9177  011AA4  D042               	goto	l10400
  9178                           
  9179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9180                           ;stkvar	_fmt @ sp[(-32)+-4]
  9181  011AA6  0EDC               	movlw	-36
  9182  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9183  011AAE  0EDD               	movlw	-35
  9184  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9185  011AB6  2ADE               	incf	postinc2,f,c
  9186  011AB8  0E00               	movlw	0
  9187  011ABA  22DD               	addwfc	postdec2,f,c
  9188                           
  9189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9190                           ;stkvar	_ap @ sp[(-32)+-6]
  9191  011ABC  0EDA               	movlw	-38
  9192  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9193  011AC4  0EDB               	movlw	-37
  9194  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9195  011ACC  0E02               	movlw	2
  9196  011ACE  5EDE               	subwf	postinc2,f,c
  9197  011AD0  0E00               	movlw	0
  9198  011AD2  5ADD               	subwfb	postdec2,f,c
  9199  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  9200  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  9201  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9202  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9203  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  9204  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  9205                           
  9206                           ;stkvar	_cp @ sp[(-32)+29]
  9207  011AF8  0EFE               	movlw	-2
  9208  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9209  011B00  0EFD               	movlw	-3
  9210  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9211                           
  9212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9213                           ;stkvar	_cp @ sp[(-32)+29]
  9214  011B08  0EFD               	movlw	-3
  9215  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9216  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9217                           
  9218                           ;stkvar	_fp @ sp[(-34)+-2]
  9219  011B16  0EDC               	movlw	-36
  9220  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9221  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9222  011B24  EC99  F0A8         	call	_stoa	;wreg free
  9223  011B28  D127               	goto	l2074
  9224  011B2A                     l10400:
  9225                           
  9226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9227                           ;stkvar	_fmt @ sp[(-32)+-4]
  9228  011B2A  0EDC               	movlw	-36
  9229  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9230  011B32  0EDD               	movlw	-35
  9231  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9232  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9233  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9234  011B46                     	if	0	;tblptru may be non-zero
  9235  011B46                     	endif
  9236  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9237  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9238  011B48  6EF8               	movwf	tblptru,c
  9239  011B4A                     	endif
  9240  011B4A  0008               	tblrd		*
  9241  011B4C  50F5               	movf	tablat,w,c
  9242  011B4E  0A78               	xorlw	120
  9243  011B50  B4D8               	btfsc	status,2,c
  9244  011B52  D015               	goto	u10360
  9245                           
  9246                           ;stkvar	_fmt @ sp[(-32)+-4]
  9247  011B54  0EDC               	movlw	-36
  9248  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9249  011B5C  0EDD               	movlw	-35
  9250  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9251  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9252  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9253  011B70                     	if	0	;tblptru may be non-zero
  9254  011B70                     	endif
  9255  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9256  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9257  011B72  6EF8               	movwf	tblptru,c
  9258  011B74                     	endif
  9259  011B74  0008               	tblrd		*
  9260  011B76  50F5               	movf	tablat,w,c
  9261  011B78  0A58               	xorlw	88
  9262  011B7A  A4D8               	btfss	status,2,c
  9263  011B7C  D094               	goto	l10414
  9264  011B7E                     u10360:
  9265                           
  9266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9267                           ;stkvar	_fmt @ sp[(-32)+-4]
  9268  011B7E  0EDC               	movlw	-36
  9269  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9270  011B86  0EDD               	movlw	-35
  9271  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9272  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9273  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9274  011B9A                     	if	0	;tblptru may be non-zero
  9275  011B9A                     	endif
  9276  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9277  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9278  011B9C  6EF8               	movwf	tblptru,c
  9279  011B9E                     	endif
  9280                           
  9281                           ;stkvar	_c @ sp[(-32)+31]
  9282  011B9E  0008               	tblrd		*
  9283  011BA0  0EFF               	movlw	-1
  9284  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9285                           
  9286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9287                           ;stkvar	_fmt @ sp[(-32)+-4]
  9288  011BA8  0EDC               	movlw	-36
  9289  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9290  011BB0  0EDD               	movlw	-35
  9291  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9292  011BB8  2ADE               	incf	postinc2,f,c
  9293  011BBA  0E00               	movlw	0
  9294  011BBC  22DD               	addwfc	postdec2,f,c
  9295                           
  9296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9297                           ;stkvar	_ap @ sp[(-32)+-6]
  9298  011BBE  0EDA               	movlw	-38
  9299  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9300  011BC6  0EDB               	movlw	-37
  9301  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9302  011BCE  0E02               	movlw	2
  9303  011BD0  5EDE               	subwf	postinc2,f,c
  9304  011BD2  0E00               	movlw	0
  9305  011BD4  5ADD               	subwfb	postdec2,f,c
  9306  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  9307  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  9308  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9309  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9310  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  9311  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  9312  011BFA  503C               	movf	(btemp+10)^0,w,c
  9313  011BFC  6E42               	movwf	(btemp+16)^0,c
  9314  011BFE  503D               	movf	(btemp+11)^0,w,c
  9315  011C00  6E43               	movwf	(btemp+17)^0,c
  9316  011C02  6A44               	clrf	(btemp+18)^0,c
  9317  011C04  6A45               	clrf	(btemp+19)^0,c
  9318  011C06  6A46               	clrf	(btemp+20)^0,c
  9319  011C08  6A47               	clrf	(btemp+21)^0,c
  9320  011C0A  6A48               	clrf	(btemp+22)^0,c
  9321  011C0C  6A49               	clrf	(btemp+23)^0,c
  9322                           
  9323                           ;stkvar	_llu @ sp[(-32)+6]
  9324  011C0E  0EE6               	movlw	-26
  9325  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  9326  011C16  0EE7               	movlw	-25
  9327  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  9328  011C1E  0EE8               	movlw	-24
  9329  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  9330  011C26  0EE9               	movlw	-23
  9331  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  9332  011C2E  0EEA               	movlw	-22
  9333  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  9334  011C36  0EEB               	movlw	-21
  9335  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  9336  011C3E  0EEC               	movlw	-20
  9337  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  9338  011C46  0EED               	movlw	-19
  9339  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  9340                           
  9341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9342                           ;stkvar	_c @ sp[(-32)+31]
  9343  011C4E  0EFF               	movlw	-1
  9344  011C50  50E3               	movf	plusw1,w,c
  9345  011C52  6EE6               	movwf	postinc1,c
  9346                           
  9347                           ;stkvar	_llu @ sp[(-33)+6]
  9348  011C54  50E1               	movf	fsr1l,w,c
  9349  011C56  0FE5               	addlw	-27
  9350  011C58  6ED9               	movwf	fsr2l,c
  9351  011C5A  50E2               	movf	fsr1h,w,c
  9352  011C5C  6EDA               	movwf	fsr2h,c
  9353  011C5E  0EFF               	movlw	255
  9354  011C60  22DA               	addwfc	fsr2h,f,c
  9355  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9356  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9357  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9358  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9359  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9360  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9361  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9362  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9363                           
  9364                           ;stkvar	_fp @ sp[(-41)+-2]
  9365  011C92  0ED5               	movlw	-43
  9366  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9367  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9368  011CA0  EC2E  F0A2         	call	_xtoa	;wreg free
  9369  011CA4  D069               	goto	l2074
  9370  011CA6                     l10414:
  9371                           
  9372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9373                           ;stkvar	_fmt @ sp[(-32)+-4]
  9374  011CA6  0EDC               	movlw	-36
  9375  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9376  011CAE  0EDD               	movlw	-35
  9377  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9378  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9379  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9380  011CC2                     	if	0	;tblptru may be non-zero
  9381  011CC2                     	endif
  9382  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9383  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9384  011CC4  6EF8               	movwf	tblptru,c
  9385  011CC6                     	endif
  9386  011CC6  0008               	tblrd		*
  9387  011CC8  50F5               	movf	tablat,w,c
  9388  011CCA  0A25               	xorlw	37
  9389  011CCC  A4D8               	btfss	status,2,c
  9390  011CCE  D01A               	goto	l10424
  9391                           
  9392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9393                           ;stkvar	_fmt @ sp[(-32)+-4]
  9394  011CD0  0EDC               	movlw	-36
  9395  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9396  011CD8  0EDD               	movlw	-35
  9397  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9398  011CE0  2ADE               	incf	postinc2,f,c
  9399  011CE2  0E00               	movlw	0
  9400  011CE4  22DD               	addwfc	postdec2,f,c
  9401                           
  9402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9403                           ;stkvar	_fp @ sp[(-32)+-2]
  9404  011CE6  0EDE               	movlw	-34
  9405  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9406  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9407  011CF4  0E25               	movlw	37
  9408  011CF6  6EE6               	movwf	postinc1,c
  9409  011CF8  0E00               	movlw	0
  9410  011CFA  6EE6               	movwf	postinc1,c
  9411  011CFC  EC83  F0B5         	call	_fputc	;wreg free
  9412  011D00                     l10420:
  9413                           
  9414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9415  011D00  0E01               	movlw	1
  9416  011D02  D00C               	goto	L7
  9417  011D04                     l10424:
  9418                           
  9419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9420                           ;stkvar	_fmt @ sp[(-32)+-4]
  9421  011D04  0EDC               	movlw	-36
  9422  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9423  011D0C  0EDD               	movlw	-35
  9424  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9425  011D14  2ADE               	incf	postinc2,f,c
  9426  011D16  0E00               	movlw	0
  9427  011D18  22DD               	addwfc	postdec2,f,c
  9428                           
  9429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9430  011D1A  0E00               	movlw	0
  9431  011D1C                     L7:
  9432  011D1C  6E32               	movwf	btemp^0,c
  9433  011D1E  0E00               	movlw	0
  9434  011D20  6E33               	movwf	(btemp+1)^0,c
  9435  011D22  D02A               	goto	l2074
  9436  011D24                     l10430:
  9437                           
  9438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9439                           ;stkvar	_fp @ sp[(-32)+-2]
  9440  011D24  0EDE               	movlw	-34
  9441  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9442  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9443                           
  9444                           ;stkvar	_fmt @ sp[(-34)+-4]
  9445  011D32  0EDA               	movlw	-38
  9446  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9447  011D3A  0EDB               	movlw	-37
  9448  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9449  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9450  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9451  011D4E                     	if	0	;tblptru may be non-zero
  9452  011D4E                     	endif
  9453  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9454  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9455  011D50  6EF8               	movwf	tblptru,c
  9456  011D52                     	endif
  9457  011D52  0008               	tblrd		*
  9458  011D54  50F5               	movf	tablat,w,c
  9459  011D56  6EE6               	movwf	postinc1,c
  9460  011D58  0E00               	movlw	0
  9461  011D5A  6EE6               	movwf	postinc1,c
  9462  011D5C  EC83  F0B5         	call	_fputc	;wreg free
  9463                           
  9464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9465                           ;stkvar	_fmt @ sp[(-32)+-4]
  9466  011D60  0EDC               	movlw	-36
  9467  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9468  011D68  0EDD               	movlw	-35
  9469  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9470  011D70  2ADE               	incf	postinc2,f,c
  9471  011D72  0E00               	movlw	0
  9472  011D74  22DD               	addwfc	postdec2,f,c
  9473  011D76  D7C4               	goto	l10420
  9474  011D78                     l2074:
  9475                           
  9476                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9477  011D78  0EDA               	movlw	218
  9478  011D7A  26E1               	addwf	fsr1l,f,c
  9479  011D7C  0EFF               	movlw	255
  9480  011D7E  22E2               	addwfc	fsr1h,f,c
  9481  011D80  0012               	return		;funcret
  9482  011D82                     __end_of_vfpfcnvrt:
  9483                           	opt callstack 0
  9484                           
  9485 ;; *************** function _xtoa *****************
  9486 ;; Defined at:
  9487 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9490 ;;		 -> f(6), NULL(0), 
  9491 ;;  d               8  [STACK] unsigned long long 
  9492 ;;  x               1  [STACK] unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  n               8  [STACK] unsigned long long 
  9495 ;;  c               2  [STACK] int 
  9496 ;;  i               2  [STACK] int 
  9497 ;;  w               2  [STACK] int 
  9498 ;;  p               2  [STACK] int 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  2  [STACK] int 
  9501 ;; Registers used:
  9502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/5
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9512 ;;Total ram usage:        0 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:   11
  9515 ;; This function calls:
  9516 ;;		_isalpha
  9517 ;;		_isupper
  9518 ;;		_pad
  9519 ;;		_toupper
  9520 ;; This function is called by:
  9521 ;;		_vfpfcnvrt
  9522 ;; This function uses a reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text40
  9526  01445C                     __ptext40:
  9527                           	opt callstack 0
  9528  01445C                     _xtoa:
  9529                           	opt callstack 0
  9530                           
  9531                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9532  01445C  0E14               	movlw	20
  9533  01445E  26E1               	addwf	fsr1l,f,c
  9534  014460  0E00               	movlw	0
  9535  014462  22E2               	addwfc	fsr1h,f,c
  9536                           
  9537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9538                           
  9539                           ;incstack = 0
  9540  014464  AE1E               	btfss	(_prec+1)^0,7,c
  9541                           
  9542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9543  014466  921F               	bcf	_flags^0,1,c
  9544                           
  9545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9546  014468  BE1E               	btfsc	(_prec+1)^0,7,c
  9547  01446A  D005               	goto	u9960
  9548  01446C  501E               	movf	(_prec+1)^0,w,c
  9549  01446E  E110               	bnz	l10212
  9550  014470  041D               	decf	_prec^0,w,c
  9551  014472  B0D8               	btfsc	status,0,c
  9552  014474  D00D               	goto	l10212
  9553  014476                     u9960:
  9554  014476  0E01               	movlw	1
  9555  014478  6E3C               	movwf	(btemp+10)^0,c
  9556  01447A  0E00               	movlw	0
  9557  01447C  6E3D               	movwf	(btemp+11)^0,c
  9558                           
  9559                           ;stkvar	_p @ sp[(-20)+18]
  9560  01447E  0EFE               	movlw	-2
  9561  014480  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9562  014486  0EFF               	movlw	-1
  9563  014488  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9564  01448E  D008               	goto	l2024
  9565  014490                     l10212:
  9566                           
  9567                           ;stkvar	_p @ sp[(-20)+18]
  9568  014490  0EFE               	movlw	-2
  9569  014492  0060  F077  FFE3   	movff	_prec,plusw1
  9570  014498  0EFF               	movlw	-1
  9571  01449A  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9572  0144A0                     l2024:
  9573                           
  9574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9575                           ;stkvar	_w @ sp[(-20)+16]
  9576  0144A0  0EFC               	movlw	-4
  9577  0144A2  0060  F06F  FFE3   	movff	_width,plusw1
  9578  0144A8  0EFD               	movlw	-3
  9579  0144AA  0060  F073  FFE3   	movff	_width+1,plusw1
  9580                           
  9581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9582  0144B0  A81F               	btfss	_flags^0,4,c
  9583  0144B2  D00B               	goto	l10218
  9584                           
  9585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9586                           ;stkvar	_w @ sp[(-20)+16]
  9587  0144B4  50E1               	movf	fsr1l,w,c
  9588  0144B6  0FFC               	addlw	-4
  9589  0144B8  6ED9               	movwf	fsr2l,c
  9590  0144BA  50E2               	movf	fsr1h,w,c
  9591  0144BC  6EDA               	movwf	fsr2h,c
  9592  0144BE  0EFF               	movlw	255
  9593  0144C0  22DA               	addwfc	fsr2h,f,c
  9594  0144C2  0EFE               	movlw	254
  9595  0144C4  26DE               	addwf	postinc2,f,c
  9596  0144C6  0EFF               	movlw	255
  9597  0144C8  22DD               	addwfc	postdec2,f,c
  9598  0144CA                     l10218:
  9599                           
  9600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9601                           ;stkvar	_d @ sp[(-20)+-10]
  9602  0144CA  0EE2               	movlw	226
  9603  0144CC  24E1               	addwf	fsr1l,w,c
  9604  0144CE  6ED9               	movwf	fsr2l,c
  9605  0144D0  0EFF               	movlw	255
  9606  0144D2  20E2               	addwfc	fsr1h,w,c
  9607  0144D4  6EDA               	movwf	fsr2h,c
  9608                           
  9609                           ;stkvar	_n @ sp[(-20)+4]
  9610  0144D6  0E08               	movlw	8
  9611  0144D8  6E32               	movwf	btemp^0,c
  9612  0144DA  0EF0               	movlw	-16
  9613  0144DC                     us998999:
  9614  0144DC  006F FF7B FFE3     	movff	postinc2,plusw1
  9615  0144E2  28E8               	incf	wreg,w,c
  9616  0144E4  2E32               	decfsz	btemp^0,f,c
  9617  0144E6  D7FA               	bra	us998999
  9618                           
  9619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9620  0144E8  0E4F               	movlw	79
  9621  0144EA  6E3C               	movwf	(btemp+10)^0,c
  9622  0144EC  0E00               	movlw	0
  9623  0144EE  6E3D               	movwf	(btemp+11)^0,c
  9624                           
  9625                           ;stkvar	_i @ sp[(-20)+14]
  9626  0144F0  0EFA               	movlw	-6
  9627  0144F2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9628  0144F8  0EFB               	movlw	-5
  9629  0144FA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9630                           
  9631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9632  014500  0101               	movlb	1	; () banked
  9633  014502  6BCB               	clrf	(_dbuf+79)& (0+255),b
  9634                           
  9635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9636  014504  D0EE               	goto	l10256
  9637  014506                     l10224:
  9638                           
  9639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9640                           ;stkvar	_i @ sp[(-20)+14]
  9641  014506  50E1               	movf	fsr1l,w,c
  9642  014508  0FFA               	addlw	-6
  9643  01450A  6ED9               	movwf	fsr2l,c
  9644  01450C  50E2               	movf	fsr1h,w,c
  9645  01450E  6EDA               	movwf	fsr2h,c
  9646  014510  0EFF               	movlw	255
  9647  014512  22DA               	addwfc	fsr2h,f,c
  9648  014514  06DE               	decf	postinc2,f,c
  9649  014516  0E00               	movlw	0
  9650  014518  5ADD               	subwfb	postdec2,f,c
  9651                           
  9652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9653                           ;stkvar	_n @ sp[(-20)+4]
  9654  01451A  0EF0               	movlw	-16
  9655  01451C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9656  014522  0EF1               	movlw	-15
  9657  014524  006F FF8C  F03D    	movff	plusw1,btemp+11
  9658  01452A  0E0F               	movlw	15
  9659  01452C  163C               	andwf	(btemp+10)^0,f,c
  9660  01452E  0E00               	movlw	0
  9661  014530  163D               	andwf	(btemp+11)^0,f,c
  9662                           
  9663                           ;stkvar	_c @ sp[(-20)+12]
  9664  014532  0EF8               	movlw	-8
  9665  014534  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9666  01453A  0EF9               	movlw	-7
  9667  01453C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9668                           
  9669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9670                           ;stkvar	_c @ sp[(-20)+12]
  9671  014542  0EF9               	movlw	-7
  9672  014544  BEE3               	btfsc	plusw1,7,c
  9673  014546  D00F               	goto	l10232
  9674  014548  0EF9               	movlw	-7
  9675  01454A  50E3               	movf	plusw1,w,c
  9676  01454C  E108               	bnz	u9990
  9677  01454E  0EF8               	movlw	-8
  9678  014550  006F FF8C  F032    	movff	plusw1,btemp
  9679  014556  0E0A               	movlw	10
  9680  014558  5E32               	subwf	btemp^0,f,c
  9681  01455A  A0D8               	btfss	status,0,c
  9682  01455C  D004               	goto	l10232
  9683  01455E                     u9990:
  9684                           
  9685                           ;stkvar	_c @ sp[(-20)+12]
  9686  01455E  0EF8               	movlw	-8
  9687  014560  50E3               	movf	plusw1,w,c
  9688  014562  0F57               	addlw	87
  9689  014564  D003               	goto	L8
  9690  014566                     l10232:
  9691                           
  9692                           ;stkvar	_c @ sp[(-20)+12]
  9693  014566  0EF8               	movlw	-8
  9694  014568  50E3               	movf	plusw1,w,c
  9695  01456A  0F30               	addlw	48
  9696  01456C                     L8:
  9697  01456C  6E3C               	movwf	(btemp+10)^0,c
  9698  01456E  0EF9               	movlw	-7
  9699  014570  006F FF8C  F03D    	movff	plusw1,btemp+11
  9700  014576  0E00               	movlw	0
  9701  014578  223D               	addwfc	(btemp+11)^0,f,c
  9702                           
  9703                           ;stkvar	_c @ sp[(-20)+12]
  9704  01457A  0EF8               	movlw	-8
  9705  01457C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9706  014582  0EF9               	movlw	-7
  9707  014584  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9708  01458A  0EBF               	movlw	191
  9709  01458C  6E3C               	movwf	(btemp+10)^0,c
  9710  01458E  0EFF               	movlw	255
  9711  014590  6E3D               	movwf	(btemp+11)^0,c
  9712                           
  9713                           ;stkvar	_x @ sp[(-20)+-11]
  9714  014592  0EE1               	movlw	-31
  9715  014594  50E3               	movf	plusw1,w,c
  9716  014596  6E3A               	movwf	(btemp+8)^0,c
  9717  014598  6A3B               	clrf	(btemp+9)^0,c
  9718  01459A  503C               	movf	(btemp+10)^0,w,c
  9719  01459C  263A               	addwf	(btemp+8)^0,f,c
  9720  01459E  503D               	movf	(btemp+11)^0,w,c
  9721  0145A0  223B               	addwfc	(btemp+9)^0,f,c
  9722  0145A2  503B               	movf	(btemp+9)^0,w,c
  9723  0145A4  E106               	bnz	u10000
  9724  0145A6  0E1A               	movlw	26
  9725  0145A8  5C3A               	subwf	(btemp+8)^0,w,c
  9726  0145AA  B0D8               	btfsc	status,0,c
  9727  0145AC  D002               	goto	u10000
  9728  0145AE  0E01               	movlw	1
  9729  0145B0  D001               	goto	u10010
  9730  0145B2                     u10000:
  9731  0145B2  0E00               	movlw	0
  9732  0145B4                     u10010:
  9733  0145B4  6E3C               	movwf	(btemp+10)^0,c
  9734  0145B6  6A3D               	clrf	(btemp+11)^0,c
  9735                           
  9736                           ;stkvar	_xtoa$4633 @ sp[(-20)+2]
  9737  0145B8  0EEE               	movlw	-18
  9738  0145BA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9739  0145C0  0EEF               	movlw	-17
  9740  0145C2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9741                           
  9742                           ;stkvar	_xtoa$4633 @ sp[(-20)+2]
  9743  0145C8  0EEE               	movlw	-18
  9744  0145CA  006F FF8C  F032    	movff	plusw1,btemp
  9745  0145D0  0EEF               	movlw	-17
  9746  0145D2  50E3               	movf	plusw1,w,c
  9747  0145D4  1032               	iorwf	btemp^0,w,c
  9748  0145D6  B4D8               	btfsc	status,2,c
  9749  0145D8  D041               	goto	l10248
  9750  0145DA  0E9F               	movlw	159
  9751  0145DC  6E3C               	movwf	(btemp+10)^0,c
  9752  0145DE  0EFF               	movlw	255
  9753  0145E0  6E3D               	movwf	(btemp+11)^0,c
  9754                           
  9755                           ;stkvar	_c @ sp[(-20)+12]
  9756  0145E2  0EF8               	movlw	-8
  9757  0145E4  006F FF8C  F03A    	movff	plusw1,btemp+8
  9758  0145EA  0EF9               	movlw	-7
  9759  0145EC  006F FF8C  F03B    	movff	plusw1,btemp+9
  9760  0145F2  0E20               	movlw	32
  9761  0145F4  123A               	iorwf	(btemp+8)^0,f,c
  9762  0145F6  0E00               	movlw	0
  9763  0145F8  123B               	iorwf	(btemp+9)^0,f,c
  9764  0145FA  503C               	movf	(btemp+10)^0,w,c
  9765  0145FC  263A               	addwf	(btemp+8)^0,f,c
  9766  0145FE  503D               	movf	(btemp+11)^0,w,c
  9767  014600  223B               	addwfc	(btemp+9)^0,f,c
  9768  014602  503B               	movf	(btemp+9)^0,w,c
  9769  014604  E106               	bnz	u10030
  9770  014606  0E1A               	movlw	26
  9771  014608  5C3A               	subwf	(btemp+8)^0,w,c
  9772  01460A  B0D8               	btfsc	status,0,c
  9773  01460C  D002               	goto	u10030
  9774  01460E  0E01               	movlw	1
  9775  014610  D001               	goto	u10040
  9776  014612                     u10030:
  9777  014612  0E00               	movlw	0
  9778  014614                     u10040:
  9779  014614  6E3C               	movwf	(btemp+10)^0,c
  9780  014616  6A3D               	clrf	(btemp+11)^0,c
  9781                           
  9782                           ;stkvar	_xtoa$4634 @ sp[(-20)+0]
  9783  014618  0EEC               	movlw	-20
  9784  01461A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9785  014620  0EED               	movlw	-19
  9786  014622  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9787                           
  9788                           ;stkvar	_xtoa$4634 @ sp[(-20)+0]
  9789  014628  0EEC               	movlw	-20
  9790  01462A  006F FF8C  F032    	movff	plusw1,btemp
  9791  014630  0EED               	movlw	-19
  9792  014632  50E3               	movf	plusw1,w,c
  9793  014634  1032               	iorwf	btemp^0,w,c
  9794  014636  B4D8               	btfsc	status,2,c
  9795  014638  D011               	goto	l10248
  9796                           
  9797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9798                           ;stkvar	_c @ sp[(-20)+12]
  9799  01463A  0EF8               	movlw	-8
  9800  01463C  006F FF8F FFE6     	movff	plusw1,postinc1
  9801  014642  006F FF8F FFE6     	movff	plusw1,postinc1
  9802  014648  ECE4  F0BD         	call	_toupper	;wreg free
  9803                           
  9804                           ;stkvar	_c @ sp[(-20)+12]
  9805  01464C  0EF8               	movlw	-8
  9806  01464E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9807  014654  0EF9               	movlw	-7
  9808  014656  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9809  01465C                     l10248:
  9810                           
  9811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9812                           ;stkvar	_c @ sp[(-20)+12]
  9813                           ;stkvar	_i @ sp[(-20)+14]
  9814  01465C  0EFA               	movlw	-6
  9815  01465E  006F FF8C  F03C    	movff	plusw1,btemp+10
  9816  014664  0EFB               	movlw	-5
  9817  014666  006F FF8C  F03D    	movff	plusw1,btemp+11
  9818  01466C  0E7C               	movlw	low _dbuf
  9819  01466E  243C               	addwf	(btemp+10)^0,w,c
  9820  014670  6ED9               	movwf	fsr2l,c
  9821  014672  0E01               	movlw	high _dbuf
  9822  014674  203D               	addwfc	(btemp+11)^0,w,c
  9823  014676  6EDA               	movwf	fsr2h,c
  9824  014678  0EF8               	movlw	-8
  9825  01467A  006F FF8F FFDF     	movff	plusw1,indf2
  9826                           
  9827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9828                           ;stkvar	_p @ sp[(-20)+18]
  9829  014680  50E1               	movf	fsr1l,w,c
  9830  014682  0FFE               	addlw	-2
  9831  014684  6ED9               	movwf	fsr2l,c
  9832  014686  50E2               	movf	fsr1h,w,c
  9833  014688  6EDA               	movwf	fsr2h,c
  9834  01468A  0EFF               	movlw	255
  9835  01468C  22DA               	addwfc	fsr2h,f,c
  9836  01468E  06DE               	decf	postinc2,f,c
  9837  014690  0E00               	movlw	0
  9838  014692  5ADD               	subwfb	postdec2,f,c
  9839                           
  9840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9841                           ;stkvar	_w @ sp[(-20)+16]
  9842  014694  50E1               	movf	fsr1l,w,c
  9843  014696  0FFC               	addlw	-4
  9844  014698  6ED9               	movwf	fsr2l,c
  9845  01469A  50E2               	movf	fsr1h,w,c
  9846  01469C  6EDA               	movwf	fsr2h,c
  9847  01469E  0EFF               	movlw	255
  9848  0146A0  22DA               	addwfc	fsr2h,f,c
  9849  0146A2  06DE               	decf	postinc2,f,c
  9850  0146A4  0E00               	movlw	0
  9851  0146A6  5ADD               	subwfb	postdec2,f,c
  9852                           
  9853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9854  0146A8  0E04               	movlw	4
  9855  0146AA  6E3D               	movwf	(btemp+11)^0,c
  9856                           
  9857                           ;stkvar	_n @ sp[(-20)+4]
  9858  0146AC  50E1               	movf	fsr1l,w,c
  9859  0146AE  0FF0               	addlw	-16
  9860  0146B0  6ED9               	movwf	fsr2l,c
  9861  0146B2  50E2               	movf	fsr1h,w,c
  9862  0146B4  6EDA               	movwf	fsr2h,c
  9863  0146B6  0EFF               	movlw	255
  9864  0146B8  22DA               	addwfc	fsr2h,f,c
  9865  0146BA  283D               	incf	(btemp+11)^0,w,c
  9866  0146BC  52DE               	movf	postinc2,f,c
  9867  0146BE  D00F               	goto	u10060
  9868  0146C0                     u10065:
  9869  0146C0  52DE               	movf	postinc2,f,c
  9870  0146C2  52DE               	movf	postinc2,f,c
  9871  0146C4  52DE               	movf	postinc2,f,c
  9872  0146C6  52DE               	movf	postinc2,f,c
  9873  0146C8  52DE               	movf	postinc2,f,c
  9874  0146CA  52DE               	movf	postinc2,f,c
  9875  0146CC  90D8               	bcf	status,0,c
  9876  0146CE  32DD               	rrcf	postdec2,f,c
  9877  0146D0  32DD               	rrcf	postdec2,f,c
  9878  0146D2  32DD               	rrcf	postdec2,f,c
  9879  0146D4  32DD               	rrcf	postdec2,f,c
  9880  0146D6  32DD               	rrcf	postdec2,f,c
  9881  0146D8  32DD               	rrcf	postdec2,f,c
  9882  0146DA  32DD               	rrcf	postdec2,f,c
  9883  0146DC  32DE               	rrcf	postinc2,f,c
  9884  0146DE                     u10060:
  9885  0146DE  2EE8               	decfsz	wreg,f,c
  9886  0146E0  D7EF               	goto	u10065
  9887  0146E2                     l10256:
  9888                           
  9889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9890                           ;stkvar	_i @ sp[(-20)+14]
  9891  0146E2  0EFB               	movlw	-5
  9892  0146E4  BEE3               	btfsc	plusw1,7,c
  9893  0146E6  D03A               	goto	u10110
  9894  0146E8  0EFB               	movlw	-5
  9895  0146EA  50E3               	movf	plusw1,w,c
  9896  0146EC  E108               	bnz	u10070
  9897  0146EE  0EFA               	movlw	-6
  9898  0146F0  006F FF8C  F032    	movff	plusw1,btemp
  9899  0146F6  0E02               	movlw	2
  9900  0146F8  5E32               	subwf	btemp^0,f,c
  9901  0146FA  A0D8               	btfss	status,0,c
  9902  0146FC  D02F               	goto	u10110
  9903  0146FE                     u10070:
  9904                           
  9905                           ;stkvar	_n @ sp[(-20)+4]
  9906  0146FE  0EF0               	movlw	-16
  9907  014700  50E3               	movf	plusw1,w,c
  9908  014702  E115               	bnz	u10081
  9909  014704  0EF1               	movlw	-15
  9910  014706  50E3               	movf	plusw1,w,c
  9911  014708  E112               	bnz	u10081
  9912  01470A  0EF2               	movlw	-14
  9913  01470C  50E3               	movf	plusw1,w,c
  9914  01470E  E10F               	bnz	u10081
  9915  014710  0EF3               	movlw	-13
  9916  014712  50E3               	movf	plusw1,w,c
  9917  014714  E10C               	bnz	u10081
  9918  014716  0EF4               	movlw	-12
  9919  014718  50E3               	movf	plusw1,w,c
  9920  01471A  E109               	bnz	u10081
  9921  01471C  0EF5               	movlw	-11
  9922  01471E  50E3               	movf	plusw1,w,c
  9923  014720  E106               	bnz	u10081
  9924  014722  0EF6               	movlw	-10
  9925  014724  50E3               	movf	plusw1,w,c
  9926  014726  E103               	bnz	u10081
  9927  014728  0EF7               	movlw	-9
  9928  01472A  50E3               	movf	plusw1,w,c
  9929  01472C  A4D8               	btfss	status,2,c
  9930  01472E                     u10081:
  9931  01472E  D6EB               	goto	l10224
  9932                           
  9933                           ;stkvar	_p @ sp[(-20)+18]
  9934  014730  0EFF               	movlw	-1
  9935  014732  BEE3               	btfsc	plusw1,7,c
  9936  014734  D007               	goto	u10090
  9937  014736  0EFF               	movlw	-1
  9938  014738  50E3               	movf	plusw1,w,c
  9939  01473A  E103               	bnz	u10091
  9940  01473C  0EFE               	movlw	-2
  9941  01473E  04E3               	decf	plusw1,w,c
  9942  014740  B0D8               	btfsc	status,0,c
  9943  014742                     u10091:
  9944  014742  D6E1               	goto	l10224
  9945  014744                     u10090:
  9946                           
  9947                           ;stkvar	_w @ sp[(-20)+16]
  9948  014744  0EFD               	movlw	-3
  9949  014746  BEE3               	btfsc	plusw1,7,c
  9950  014748  D009               	goto	u10110
  9951  01474A  0EFD               	movlw	-3
  9952  01474C  50E3               	movf	plusw1,w,c
  9953  01474E  E104               	bnz	u10100
  9954  014750  0EFC               	movlw	-4
  9955  014752  04E3               	decf	plusw1,w,c
  9956  014754  A0D8               	btfss	status,0,c
  9957  014756  D002               	goto	u10110
  9958  014758                     u10100:
  9959  014758  B21F               	btfsc	_flags^0,1,c
  9960  01475A  D6D5               	goto	l10224
  9961  01475C                     u10110:
  9962                           
  9963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9964  01475C  A81F               	btfss	_flags^0,4,c
  9965  01475E  D036               	goto	l10272
  9966                           
  9967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9968                           ;stkvar	_i @ sp[(-20)+14]
  9969  014760  50E1               	movf	fsr1l,w,c
  9970  014762  0FFA               	addlw	-6
  9971  014764  6ED9               	movwf	fsr2l,c
  9972  014766  50E2               	movf	fsr1h,w,c
  9973  014768  6EDA               	movwf	fsr2h,c
  9974  01476A  0EFF               	movlw	255
  9975  01476C  22DA               	addwfc	fsr2h,f,c
  9976  01476E  06DE               	decf	postinc2,f,c
  9977  014770  0E00               	movlw	0
  9978  014772  5ADD               	subwfb	postdec2,f,c
  9979                           
  9980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9981                           ;stkvar	_x @ sp[(-20)+-11]
  9982                           ;stkvar	_i @ sp[(-20)+14]
  9983  014774  0EFA               	movlw	-6
  9984  014776  006F FF8C  F03C    	movff	plusw1,btemp+10
  9985  01477C  0EFB               	movlw	-5
  9986  01477E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9987  014784  0E7C               	movlw	low _dbuf
  9988  014786  243C               	addwf	(btemp+10)^0,w,c
  9989  014788  6ED9               	movwf	fsr2l,c
  9990  01478A  0E01               	movlw	high _dbuf
  9991  01478C  203D               	addwfc	(btemp+11)^0,w,c
  9992  01478E  6EDA               	movwf	fsr2h,c
  9993  014790  0EE1               	movlw	-31
  9994  014792  006F FF8F FFDF     	movff	plusw1,indf2
  9995                           
  9996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9997                           ;stkvar	_i @ sp[(-20)+14]
  9998  014798  50E1               	movf	fsr1l,w,c
  9999  01479A  0FFA               	addlw	-6
 10000  01479C  6ED9               	movwf	fsr2l,c
 10001  01479E  50E2               	movf	fsr1h,w,c
 10002  0147A0  6EDA               	movwf	fsr2h,c
 10003  0147A2  0EFF               	movlw	255
 10004  0147A4  22DA               	addwfc	fsr2h,f,c
 10005  0147A6  06DE               	decf	postinc2,f,c
 10006  0147A8  0E00               	movlw	0
 10007  0147AA  5ADD               	subwfb	postdec2,f,c
 10008                           
 10009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10010                           ;stkvar	_i @ sp[(-20)+14]
 10011  0147AC  0EFA               	movlw	-6
 10012  0147AE  006F FF8C  F03C    	movff	plusw1,btemp+10
 10013  0147B4  0EFB               	movlw	-5
 10014  0147B6  006F FF8C  F03D    	movff	plusw1,btemp+11
 10015  0147BC  0E7C               	movlw	low _dbuf
 10016  0147BE  243C               	addwf	(btemp+10)^0,w,c
 10017  0147C0  6ED9               	movwf	fsr2l,c
 10018  0147C2  0E01               	movlw	high _dbuf
 10019  0147C4  203D               	addwfc	(btemp+11)^0,w,c
 10020  0147C6  6EDA               	movwf	fsr2h,c
 10021  0147C8  0E30               	movlw	48
 10022  0147CA  6EDF               	movwf	indf2,c
 10023  0147CC                     l10272:
 10024                           
 10025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10026                           ;stkvar	_w @ sp[(-20)+16]
 10027  0147CC  0EFC               	movlw	-4
 10028  0147CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10029  0147D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10030                           
 10031                           ;stkvar	_i @ sp[(-22)+14]
 10032  0147DA  0E7C               	movlw	low _dbuf
 10033  0147DC  6E3C               	movwf	(btemp+10)^0,c
 10034  0147DE  0E01               	movlw	high _dbuf
 10035  0147E0  6E3D               	movwf	(btemp+11)^0,c
 10036  0147E2  0EF8               	movlw	-8
 10037  0147E4  50E3               	movf	plusw1,w,c
 10038  0147E6  263C               	addwf	(btemp+10)^0,f,c
 10039  0147E8  0EF9               	movlw	-7
 10040  0147EA  50E3               	movf	plusw1,w,c
 10041  0147EC  223D               	addwfc	(btemp+11)^0,f,c
 10042  0147EE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10043  0147F4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10044                           
 10045                           ;stkvar	_fp @ sp[(-24)+-2]
 10046  0147FA  0EE6               	movlw	-26
 10047  0147FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10048  014802  006F FF8F FFE6     	movff	plusw1,postinc1
 10049  014808  ECA1  F0B6         	call	_pad	;wreg free
 10050                           
 10051                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10052  01480C  0EE1               	movlw	225
 10053  01480E  26E1               	addwf	fsr1l,f,c
 10054  014810  0EFF               	movlw	255
 10055  014812  22E2               	addwfc	fsr1h,f,c
 10056  014814  0012               	return		;funcret
 10057  014816                     __end_of_xtoa:
 10058                           	opt callstack 0
 10059                           
 10060 ;; *************** function _toupper *****************
 10061 ;; Defined at:
 10062 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  c               2  [STACK] int 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;		None
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  2  [STACK] int 
 10069 ;; Registers used:
 10070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/1
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10080 ;;Total ram usage:        0 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; Hardware stack levels required when called:    7
 10083 ;; This function calls:
 10084 ;;		_islower
 10085 ;; This function is called by:
 10086 ;;		_xtoa
 10087 ;; This function uses a reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text41
 10091  017BC8                     __ptext41:
 10092                           	opt callstack 0
 10093  017BC8                     _toupper:
 10094                           	opt callstack 0
 10095                           
 10096                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10097  017BC8  52E6               	movf	postinc1,f,c
 10098  017BCA  52E6               	movf	postinc1,f,c
 10099                           
 10100                           ;stkvar	_c @ sp[(-2)+-2]
 10101                           
 10102                           ;incstack = 0
 10103  017BCC  0EFC               	movlw	-4
 10104  017BCE  50E3               	movf	plusw1,w,c
 10105  017BD0  0F9F               	addlw	159
 10106  017BD2  6E3C               	movwf	(btemp+10)^0,c
 10107  017BD4  0EFD               	movlw	-3
 10108  017BD6  006F FF8C  F03D    	movff	plusw1,btemp+11
 10109  017BDC  0EFF               	movlw	255
 10110  017BDE  223D               	addwfc	(btemp+11)^0,f,c
 10111  017BE0  503D               	movf	(btemp+11)^0,w,c
 10112  017BE2  E106               	bnz	u5360
 10113  017BE4  0E1A               	movlw	26
 10114  017BE6  5C3C               	subwf	(btemp+10)^0,w,c
 10115  017BE8  B0D8               	btfsc	status,0,c
 10116  017BEA  D002               	goto	u5360
 10117  017BEC  0E01               	movlw	1
 10118  017BEE  D001               	goto	u5370
 10119  017BF0                     u5360:
 10120  017BF0  0E00               	movlw	0
 10121  017BF2                     u5370:
 10122  017BF2  6E3C               	movwf	(btemp+10)^0,c
 10123  017BF4  6A3D               	clrf	(btemp+11)^0,c
 10124                           
 10125                           ;stkvar	_toupper$5294 @ sp[(-2)+0]
 10126  017BF6  0EFE               	movlw	-2
 10127  017BF8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10128  017BFE  0EFF               	movlw	-1
 10129  017C00  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10130                           
 10131                           ;stkvar	_toupper$5294 @ sp[(-2)+0]
 10132  017C06  0EFE               	movlw	-2
 10133  017C08  006F FF8C  F032    	movff	plusw1,btemp
 10134  017C0E  0EFF               	movlw	-1
 10135  017C10  50E3               	movf	plusw1,w,c
 10136  017C12  1032               	iorwf	btemp^0,w,c
 10137  017C14  B4D8               	btfsc	status,2,c
 10138  017C16  D00D               	goto	l6736
 10139                           
 10140                           ;stkvar	_c @ sp[(-2)+-2]
 10141  017C18  0EFC               	movlw	-4
 10142  017C1A  006F FF8C  F032    	movff	plusw1,btemp
 10143  017C20  0EFD               	movlw	-3
 10144  017C22  006F FF8C  F033    	movff	plusw1,btemp+1
 10145  017C28  0E5F               	movlw	95
 10146  017C2A  1632               	andwf	btemp^0,f,c
 10147  017C2C  0E00               	movlw	0
 10148  017C2E  1633               	andwf	(btemp+1)^0,f,c
 10149  017C30  D008               	goto	l2957
 10150  017C32                     l6736:
 10151                           
 10152                           ;stkvar	_c @ sp[(-2)+-2]
 10153  017C32  0EFC               	movlw	-4
 10154  017C34  006F FF8C  F032    	movff	plusw1,btemp
 10155  017C3A  0EFD               	movlw	-3
 10156  017C3C  006F FF8C  F033    	movff	plusw1,btemp+1
 10157  017C42                     l2957:
 10158                           
 10159                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10160  017C42  52E5               	movf	postdec1,f,c
 10161  017C44  52E5               	movf	postdec1,f,c
 10162  017C46  52E5               	movf	postdec1,f,c
 10163  017C48  52E5               	movf	postdec1,f,c
 10164  017C4A  0012               	return		;funcret
 10165  017C4C                     __end_of_toupper:
 10166                           	opt callstack 0
 10167                           
 10168 ;; *************** function _islower *****************
 10169 ;; Defined at:
 10170 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  c               2  [STACK] int 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  2  [STACK] int 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10188 ;;Total ram usage:        0 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    6
 10191 ;; This function calls:
 10192 ;;		Nothing
 10193 ;; This function is called by:
 10194 ;;		_toupper
 10195 ;; This function uses a reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text42
 10199  018682                     __ptext42:
 10200                           	opt callstack 0
 10201  018682                     _islower:
 10202                           	opt callstack 16
 10203                           
 10204                           ;stkvar	_c @ sp[(0)+-2]
 10205                           
 10206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10207                           ;incstack = 0
 10208  018682  0EFE               	movlw	-2
 10209  018684  50E3               	movf	plusw1,w,c
 10210  018686  0F9F               	addlw	159
 10211  018688  6E3C               	movwf	(btemp+10)^0,c
 10212  01868A  0EFF               	movlw	-1
 10213  01868C  006F FF8C  F03D    	movff	plusw1,btemp+11
 10214  018692  0EFF               	movlw	255
 10215  018694  223D               	addwfc	(btemp+11)^0,f,c
 10216  018696  503D               	movf	(btemp+11)^0,w,c
 10217  018698  E106               	bnz	u5050
 10218  01869A  0E1A               	movlw	26
 10219  01869C  5C3C               	subwf	(btemp+10)^0,w,c
 10220  01869E  B0D8               	btfsc	status,0,c
 10221  0186A0  D002               	goto	u5050
 10222  0186A2  0E01               	movlw	1
 10223  0186A4  D001               	goto	u5060
 10224  0186A6                     u5050:
 10225  0186A6  0E00               	movlw	0
 10226  0186A8                     u5060:
 10227  0186A8  6E32               	movwf	btemp^0,c
 10228  0186AA  6A33               	clrf	(btemp+1)^0,c
 10229                           
 10230                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10231  0186AC  52E5               	movf	postdec1,f,c
 10232  0186AE  52E5               	movf	postdec1,f,c
 10233  0186B0  0012               	return		;funcret
 10234  0186B2                     __end_of_islower:
 10235                           	opt callstack 0
 10236                           
 10237 ;; *************** function _isalpha *****************
 10238 ;; Defined at:
 10239 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  c               2  [STACK] int 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  2  [STACK] int 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    6
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_xtoa
 10264 ;; This function uses a reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text43
 10268  018436                     __ptext43:
 10269                           	opt callstack 0
 10270  018436                     _isalpha:
 10271                           	opt callstack 17
 10272                           
 10273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10274                           ;incstack = 0
 10275  018436  0E9F               	movlw	159
 10276  018438  6E3C               	movwf	(btemp+10)^0,c
 10277  01843A  0EFF               	movlw	255
 10278  01843C  6E3D               	movwf	(btemp+11)^0,c
 10279                           
 10280                           ;stkvar	_c @ sp[(0)+-2]
 10281  01843E  0EFE               	movlw	-2
 10282  018440  006F FF8C  F03A    	movff	plusw1,btemp+8
 10283  018446  0EFF               	movlw	-1
 10284  018448  006F FF8C  F03B    	movff	plusw1,btemp+9
 10285  01844E  0E20               	movlw	32
 10286  018450  123A               	iorwf	(btemp+8)^0,f,c
 10287  018452  0E00               	movlw	0
 10288  018454  123B               	iorwf	(btemp+9)^0,f,c
 10289  018456  503C               	movf	(btemp+10)^0,w,c
 10290  018458  263A               	addwf	(btemp+8)^0,f,c
 10291  01845A  503D               	movf	(btemp+11)^0,w,c
 10292  01845C  223B               	addwfc	(btemp+9)^0,f,c
 10293  01845E  503B               	movf	(btemp+9)^0,w,c
 10294  018460  E106               	bnz	u5340
 10295  018462  0E1A               	movlw	26
 10296  018464  5C3A               	subwf	(btemp+8)^0,w,c
 10297  018466  B0D8               	btfsc	status,0,c
 10298  018468  D002               	goto	u5340
 10299  01846A  0E01               	movlw	1
 10300  01846C  D001               	goto	u5350
 10301  01846E                     u5340:
 10302  01846E  0E00               	movlw	0
 10303  018470                     u5350:
 10304  018470  6E32               	movwf	btemp^0,c
 10305  018472  6A33               	clrf	(btemp+1)^0,c
 10306                           
 10307                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10308  018474  52E5               	movf	postdec1,f,c
 10309  018476  52E5               	movf	postdec1,f,c
 10310  018478  0012               	return		;funcret
 10311  01847A                     __end_of_isalpha:
 10312                           	opt callstack 0
 10313                           
 10314 ;; *************** function _strncmp *****************
 10315 ;; Defined at:
 10316 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  _l              2  [STACK] PTR const unsigned char 
 10319 ;;		 -> ct(3), 
 10320 ;;  _r              2  [STACK] PTR const unsigned char 
 10321 ;;		 -> STR_56(3), 
 10322 ;;  n               2  [STACK] unsigned int 
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;  r               2  [STACK] PTR const unsigned char 
 10325 ;;		 -> STR_56(3), 
 10326 ;;  l               2  [STACK] PTR const unsigned char 
 10327 ;;		 -> ct(3), 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  2  [STACK] int 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/5
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10341 ;;Total ram usage:        0 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    6
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_vfpfcnvrt
 10348 ;; This function uses a reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text44
 10352  015F50                     __ptext44:
 10353                           	opt callstack 0
 10354  015F50                     _strncmp:
 10355                           	opt callstack 0
 10356                           
 10357                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10358  015F50  52E6               	movf	postinc1,f,c
 10359  015F52  52E6               	movf	postinc1,f,c
 10360  015F54  52E6               	movf	postinc1,f,c
 10361  015F56  52E6               	movf	postinc1,f,c
 10362                           
 10363                           ;stkvar	__l @ sp[(-4)+-2]
 10364                           
 10365                           ;incstack = 0
 10366  015F58  0EFA               	movlw	-6
 10367  015F5A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10368  015F60  0EFB               	movlw	-5
 10369  015F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 10370                           
 10371                           ;stkvar	_l @ sp[(-4)+2]
 10372  015F68  0EFF               	movlw	-1
 10373  015F6A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10374  015F70  0EFE               	movlw	-2
 10375  015F72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10376                           
 10377                           ;stkvar	__r @ sp[(-4)+-4]
 10378  015F78  0EF8               	movlw	-8
 10379  015F7A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10380  015F80  0EF9               	movlw	-7
 10381  015F82  006F FF8C  F03D    	movff	plusw1,btemp+11
 10382                           
 10383                           ;stkvar	_r @ sp[(-4)+0]
 10384  015F88  0EFD               	movlw	-3
 10385  015F8A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10386  015F90  0EFC               	movlw	-4
 10387  015F92  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10388                           
 10389                           ;stkvar	_n @ sp[(-4)+-6]
 10390  015F98  0EF6               	movlw	-10
 10391  015F9A  006F FF8C  F032    	movff	plusw1,btemp
 10392  015FA0  0E01               	movlw	1
 10393  015FA2  5E32               	subwf	btemp^0,f,c
 10394  015FA4  0EF6               	movlw	-10
 10395  015FA6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10396  015FAC  0EF7               	movlw	-9
 10397  015FAE  006F FF8C  F032    	movff	plusw1,btemp
 10398  015FB4  0E00               	movlw	0
 10399  015FB6  5A32               	subwfb	btemp^0,f,c
 10400  015FB8  0EF7               	movlw	-9
 10401  015FBA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10402  015FC0  0EF6               	movlw	-10
 10403  015FC2  28E3               	incf	plusw1,w,c
 10404  015FC4  E13F               	bnz	l7894
 10405  015FC6  0EF7               	movlw	-9
 10406  015FC8  28E3               	incf	plusw1,w,c
 10407  015FCA  A4D8               	btfss	status,2,c
 10408  015FCC  D03B               	goto	l7894
 10409  015FCE  0E00               	movlw	0
 10410  015FD0  6E32               	movwf	btemp^0,c
 10411  015FD2  0E00               	movlw	0
 10412  015FD4  6E33               	movwf	(btemp+1)^0,c
 10413  015FD6  D09B               	goto	l2929
 10414  015FD8                     l7892:
 10415                           
 10416                           ;stkvar	_l @ sp[(-4)+2]
 10417  015FD8  0EFE               	movlw	-2
 10418  015FDA  50E3               	movf	plusw1,w,c
 10419  015FDC  0F01               	addlw	1
 10420  015FDE  6E32               	movwf	btemp^0,c
 10421  015FE0  0EFE               	movlw	-2
 10422  015FE2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10423  015FE8  6A32               	clrf	btemp^0,c
 10424  015FEA  0EFF               	movlw	-1
 10425  015FEC  50E3               	movf	plusw1,w,c
 10426  015FEE  2032               	addwfc	btemp^0,w,c
 10427  015FF0  6E32               	movwf	btemp^0,c
 10428  015FF2  0EFF               	movlw	-1
 10429  015FF4  0060  F0CB  FFE3   	movff	btemp,plusw1
 10430                           
 10431                           ;stkvar	_r @ sp[(-4)+0]
 10432  015FFA  0EFC               	movlw	-4
 10433  015FFC  50E3               	movf	plusw1,w,c
 10434  015FFE  0F01               	addlw	1
 10435  016000  6E32               	movwf	btemp^0,c
 10436  016002  0EFC               	movlw	-4
 10437  016004  0060  F0CB  FFE3   	movff	btemp,plusw1
 10438  01600A  6A32               	clrf	btemp^0,c
 10439  01600C  0EFD               	movlw	-3
 10440  01600E  50E3               	movf	plusw1,w,c
 10441  016010  2032               	addwfc	btemp^0,w,c
 10442  016012  6E32               	movwf	btemp^0,c
 10443  016014  0EFD               	movlw	-3
 10444  016016  0060  F0CB  FFE3   	movff	btemp,plusw1
 10445                           
 10446                           ;stkvar	_n @ sp[(-4)+-6]
 10447  01601C  0EF6               	movlw	-10
 10448  01601E  006F FF8C  F032    	movff	plusw1,btemp
 10449  016024  0E01               	movlw	1
 10450  016026  5E32               	subwf	btemp^0,f,c
 10451  016028  0EF6               	movlw	-10
 10452  01602A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10453  016030  0EF7               	movlw	-9
 10454  016032  006F FF8C  F032    	movff	plusw1,btemp
 10455  016038  0E00               	movlw	0
 10456  01603A  5A32               	subwfb	btemp^0,f,c
 10457  01603C  0EF7               	movlw	-9
 10458  01603E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10459  016044                     l7894:
 10460                           
 10461                           ;stkvar	_l @ sp[(-4)+2]
 10462  016044  0EFE               	movlw	-2
 10463  016046  006F FF8F FFD9     	movff	plusw1,fsr2l
 10464  01604C  0EFF               	movlw	-1
 10465  01604E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10466  016054  50DF               	movf	indf2,w,c
 10467  016056  B4D8               	btfsc	status,2,c
 10468  016058  D03B               	goto	u7540
 10469                           
 10470                           ;stkvar	_r @ sp[(-4)+0]
 10471  01605A  50E1               	movf	fsr1l,w,c
 10472  01605C  0FFC               	addlw	-4
 10473  01605E  6ED9               	movwf	fsr2l,c
 10474  016060  50E2               	movf	fsr1h,w,c
 10475  016062  6EDA               	movwf	fsr2h,c
 10476  016064  0EFF               	movlw	255
 10477  016066  22DA               	addwfc	fsr2h,f,c
 10478  016068  006F FF7B FFF6     	movff	postinc2,tblptrl
 10479  01606E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10480  016074                     	if	0	;tblptru may be non-zero
 10481  016074                     	endif
 10482  016074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10483  016074  0E00               	movlw	low (__mediumconst shr (0+16))
 10484  016076  6EF8               	movwf	tblptru,c
 10485  016078                     	endif
 10486  016078  0008               	tblrd		*
 10487  01607A  50F5               	movf	tablat,w,c
 10488  01607C  0900               	iorlw	0
 10489  01607E  B4D8               	btfsc	status,2,c
 10490  016080  D027               	goto	u7540
 10491                           
 10492                           ;stkvar	_n @ sp[(-4)+-6]
 10493  016082  0EF6               	movlw	-10
 10494  016084  006F FF8C  F032    	movff	plusw1,btemp
 10495  01608A  0EF7               	movlw	-9
 10496  01608C  50E3               	movf	plusw1,w,c
 10497  01608E  1032               	iorwf	btemp^0,w,c
 10498  016090  B4D8               	btfsc	status,2,c
 10499  016092  D01E               	goto	u7540
 10500                           
 10501                           ;stkvar	_l @ sp[(-4)+2]
 10502  016094  0EFE               	movlw	-2
 10503  016096  006F FF8F FFD9     	movff	plusw1,fsr2l
 10504  01609C  0EFF               	movlw	-1
 10505  01609E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10506  0160A4  50DF               	movf	indf2,w,c
 10507  0160A6  6E3D               	movwf	(btemp+11)^0,c
 10508                           
 10509                           ;stkvar	_r @ sp[(-4)+0]
 10510  0160A8  50E1               	movf	fsr1l,w,c
 10511  0160AA  0FFC               	addlw	-4
 10512  0160AC  6ED9               	movwf	fsr2l,c
 10513  0160AE  50E2               	movf	fsr1h,w,c
 10514  0160B0  6EDA               	movwf	fsr2h,c
 10515  0160B2  0EFF               	movlw	255
 10516  0160B4  22DA               	addwfc	fsr2h,f,c
 10517  0160B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10518  0160BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10519  0160C2                     	if	0	;tblptru may be non-zero
 10520  0160C2                     	endif
 10521  0160C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10522  0160C2  0E00               	movlw	low (__mediumconst shr (0+16))
 10523  0160C4  6EF8               	movwf	tblptru,c
 10524  0160C6                     	endif
 10525  0160C6  0008               	tblrd		*
 10526  0160C8  50F5               	movf	tablat,w,c
 10527  0160CA  183D               	xorwf	(btemp+11)^0,w,c
 10528  0160CC  B4D8               	btfsc	status,2,c
 10529  0160CE  D784               	goto	l7892
 10530  0160D0                     u7540:
 10531                           
 10532                           ;stkvar	_l @ sp[(-4)+2]
 10533  0160D0  0EFE               	movlw	-2
 10534  0160D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10535  0160D8  0EFF               	movlw	-1
 10536  0160DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10537  0160E0  50DF               	movf	indf2,w,c
 10538  0160E2  6E32               	movwf	btemp^0,c
 10539  0160E4  6A33               	clrf	(btemp+1)^0,c
 10540                           
 10541                           ;stkvar	_r @ sp[(-4)+0]
 10542  0160E6  50E1               	movf	fsr1l,w,c
 10543  0160E8  0FFC               	addlw	-4
 10544  0160EA  6ED9               	movwf	fsr2l,c
 10545  0160EC  50E2               	movf	fsr1h,w,c
 10546  0160EE  6EDA               	movwf	fsr2h,c
 10547  0160F0  0EFF               	movlw	255
 10548  0160F2  22DA               	addwfc	fsr2h,f,c
 10549  0160F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10550  0160FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10551  016100                     	if	0	;tblptru may be non-zero
 10552  016100                     	endif
 10553  016100                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10554  016100  0E00               	movlw	low (__mediumconst shr (0+16))
 10555  016102  6EF8               	movwf	tblptru,c
 10556  016104                     	endif
 10557  016104  0008               	tblrd		*
 10558  016106  50F5               	movf	tablat,w,c
 10559  016108  5E32               	subwf	btemp^0,f,c
 10560  01610A  0E00               	movlw	0
 10561  01610C  5A33               	subwfb	(btemp+1)^0,f,c
 10562  01610E                     l2929:
 10563                           
 10564                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10565  01610E  0EF6               	movlw	246
 10566  016110  26E1               	addwf	fsr1l,f,c
 10567  016112  0EFF               	movlw	255
 10568  016114  22E2               	addwfc	fsr1h,f,c
 10569  016116  0012               	return		;funcret
 10570  016118                     __end_of_strncmp:
 10571                           	opt callstack 0
 10572                           
 10573 ;; *************** function _stoa *****************
 10574 ;; Defined at:
 10575 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10578 ;;		 -> f(6), NULL(0), 
 10579 ;;  s               2  [STACK] PTR unsigned char 
 10580 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10581 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
 10582 ;;		 -> STR_3(6), V(188), 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  nuls            7  [STACK] unsigned char [7]
 10585 ;;  l               2  [STACK] int 
 10586 ;;  p               2  [STACK] int 
 10587 ;;  cp              2  [STACK] PTR unsigned char 
 10588 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10589 ;;		 -> STR_27(12), D.lcd(216), D(218), T(144), 
 10590 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10591 ;;  w               2  [STACK] int 
 10592 ;;  i               2  [STACK] int 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  2  [STACK] int 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/5
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;Total ram usage:        0 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    9
 10609 ;; This function calls:
 10610 ;;		_fputc
 10611 ;;		_strlen
 10612 ;; This function is called by:
 10613 ;;		_vfpfcnvrt
 10614 ;; This function uses a reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text45
 10618  015132                     __ptext45:
 10619                           	opt callstack 0
 10620  015132                     _stoa:
 10621                           	opt callstack 0
 10622                           
 10623                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10624  015132  0E11               	movlw	17
 10625  015134  26E1               	addwf	fsr1l,f,c
 10626  015136  0E00               	movlw	0
 10627  015138  22E2               	addwfc	fsr1h,f,c
 10628                           
 10629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10630                           
 10631                           ;incstack = 0
 10632  01513A  EE20  F1D4         	lfsr	2,stoa@F1166
 10633                           
 10634                           ;stkvar	_nuls @ sp[(-17)+0]
 10635  01513E  0E07               	movlw	7
 10636  015140  6E32               	movwf	btemp^0,c
 10637  015142  0EEF               	movlw	-17
 10638  015144                     us985999:
 10639  015144  006F FF7B FFE3     	movff	postinc2,plusw1
 10640  01514A  28E8               	incf	wreg,w,c
 10641  01514C  2E32               	decfsz	btemp^0,f,c
 10642  01514E  D7FA               	bra	us985999
 10643                           
 10644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10645                           ;stkvar	_s @ sp[(-17)+-4]
 10646  015150  0EEB               	movlw	-21
 10647  015152  006F FF8C  F03C    	movff	plusw1,btemp+10
 10648  015158  0EEC               	movlw	-20
 10649  01515A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10650                           
 10651                           ;stkvar	_cp @ sp[(-17)+11]
 10652  015160  0EFB               	movlw	-5
 10653  015162  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10654  015168  0EFA               	movlw	-6
 10655  01516A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10656                           
 10657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10658                           ;stkvar	_cp @ sp[(-17)+11]
 10659  015170  0EFA               	movlw	-6
 10660  015172  006F FF8C  F032    	movff	plusw1,btemp
 10661  015178  0EFB               	movlw	-5
 10662  01517A  50E3               	movf	plusw1,w,c
 10663  01517C  1032               	iorwf	btemp^0,w,c
 10664  01517E  A4D8               	btfss	status,2,c
 10665  015180  D00E               	goto	l10160
 10666                           
 10667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10668                           ;stkvar	_nuls @ sp[(-17)+0]
 10669  015182  0EEF               	movlw	239
 10670  015184  24E1               	addwf	fsr1l,w,c
 10671  015186  6E3C               	movwf	(btemp+10)^0,c
 10672  015188  0EFF               	movlw	255
 10673  01518A  20E2               	addwfc	fsr1h,w,c
 10674  01518C  6E3D               	movwf	(btemp+11)^0,c
 10675                           
 10676                           ;stkvar	_cp @ sp[(-17)+11]
 10677  01518E  0EFB               	movlw	-5
 10678  015190  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10679  015196  0EFA               	movlw	-6
 10680  015198  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10681  01519E                     l10160:
 10682                           
 10683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10684                           ;stkvar	_cp @ sp[(-17)+11]
 10685  01519E  0EFA               	movlw	-6
 10686  0151A0  006F FF8F FFE6     	movff	plusw1,postinc1
 10687  0151A6  006F FF8F FFE6     	movff	plusw1,postinc1
 10688  0151AC  EC29  F0BC         	call	_strlen	;wreg free
 10689                           
 10690                           ;stkvar	_l @ sp[(-17)+7]
 10691  0151B0  0EF6               	movlw	-10
 10692  0151B2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10693  0151B8  0EF7               	movlw	-9
 10694  0151BA  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10695                           
 10696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10697                           ;stkvar	_p @ sp[(-17)+9]
 10698  0151C0  0EF8               	movlw	-8
 10699  0151C2  0060  F077  FFE3   	movff	_prec,plusw1
 10700  0151C8  0EF9               	movlw	-7
 10701  0151CA  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10702                           
 10703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10704                           ;stkvar	_p @ sp[(-17)+9]
 10705  0151D0  0EF9               	movlw	-7
 10706  0151D2  BEE3               	btfsc	plusw1,7,c
 10707  0151D4  D023               	goto	l2003
 10708                           
 10709                           ;stkvar	_l @ sp[(-17)+7]
 10710                           ;stkvar	_p @ sp[(-17)+9]
 10711  0151D6  50E1               	movf	fsr1l,w,c
 10712  0151D8  0FF8               	addlw	-8
 10713  0151DA  6ED9               	movwf	fsr2l,c
 10714  0151DC  50E2               	movf	fsr1h,w,c
 10715  0151DE  6EDA               	movwf	fsr2h,c
 10716  0151E0  0EFF               	movlw	255
 10717  0151E2  22DA               	addwfc	fsr2h,f,c
 10718  0151E4  0EF6               	movlw	-10
 10719  0151E6  50E3               	movf	plusw1,w,c
 10720  0151E8  5CDE               	subwf	postinc2,w,c
 10721  0151EA  50DE               	movf	postinc2,w,c
 10722  0151EC  0A80               	xorlw	128
 10723  0151EE  6E32               	movwf	btemp^0,c
 10724  0151F0  0EF7               	movlw	-9
 10725  0151F2  50E3               	movf	plusw1,w,c
 10726  0151F4  0A80               	xorlw	128
 10727  0151F6  5832               	subwfb	btemp^0,w,c
 10728  0151F8  B0D8               	btfsc	status,0,c
 10729  0151FA  D010               	goto	l2003
 10730                           
 10731                           ;stkvar	_p @ sp[(-17)+9]
 10732                           ;stkvar	_l @ sp[(-17)+7]
 10733  0151FC  0EF8               	movlw	-8
 10734  0151FE  006F FF8C  F032    	movff	plusw1,btemp
 10735  015204  0EF6               	movlw	-10
 10736  015206  0060  F0CB  FFE3   	movff	btemp,plusw1
 10737  01520C  0EF9               	movlw	-7
 10738  01520E  006F FF8C  F032    	movff	plusw1,btemp
 10739  015214  0EF7               	movlw	-9
 10740  015216  0060  F0CB  FFE3   	movff	btemp,plusw1
 10741  01521C                     l2003:
 10742                           
 10743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10744                           ;stkvar	_l @ sp[(-17)+7]
 10745                           ;stkvar	_p @ sp[(-17)+9]
 10746  01521C  0EF6               	movlw	-10
 10747  01521E  006F FF8C  F032    	movff	plusw1,btemp
 10748  015224  0EF8               	movlw	-8
 10749  015226  0060  F0CB  FFE3   	movff	btemp,plusw1
 10750  01522C  0EF7               	movlw	-9
 10751  01522E  006F FF8C  F032    	movff	plusw1,btemp
 10752  015234  0EF9               	movlw	-7
 10753  015236  0060  F0CB  FFE3   	movff	btemp,plusw1
 10754                           
 10755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10756                           ;stkvar	_w @ sp[(-17)+13]
 10757  01523C  0EFC               	movlw	-4
 10758  01523E  0060  F06F  FFE3   	movff	_width,plusw1
 10759  015244  0EFD               	movlw	-3
 10760  015246  0060  F073  FFE3   	movff	_width+1,plusw1
 10761                           
 10762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10763  01524C  A01F               	btfss	_flags^0,0,c
 10764  01524E  D01F               	goto	l10180
 10765  015250  D031               	goto	u9900
 10766  015252                     l10176:
 10767                           
 10768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10769                           ;stkvar	_fp @ sp[(-17)+-2]
 10770  015252  0EED               	movlw	-19
 10771  015254  006F FF8F FFE6     	movff	plusw1,postinc1
 10772  01525A  006F FF8F FFE6     	movff	plusw1,postinc1
 10773  015260  0E20               	movlw	32
 10774  015262  6EE6               	movwf	postinc1,c
 10775  015264  0E00               	movlw	0
 10776  015266  6EE6               	movwf	postinc1,c
 10777  015268  EC83  F0B5         	call	_fputc	;wreg free
 10778                           
 10779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10780                           ;stkvar	_l @ sp[(-17)+7]
 10781  01526C  0EF6               	movlw	-10
 10782  01526E  50E3               	movf	plusw1,w,c
 10783  015270  0F01               	addlw	1
 10784  015272  6E32               	movwf	btemp^0,c
 10785  015274  0EF6               	movlw	-10
 10786  015276  0060  F0CB  FFE3   	movff	btemp,plusw1
 10787  01527C  6A32               	clrf	btemp^0,c
 10788  01527E  0EF7               	movlw	-9
 10789  015280  50E3               	movf	plusw1,w,c
 10790  015282  2032               	addwfc	btemp^0,w,c
 10791  015284  6E32               	movwf	btemp^0,c
 10792  015286  0EF7               	movlw	-9
 10793  015288  0060  F0CB  FFE3   	movff	btemp,plusw1
 10794  01528E                     l10180:
 10795                           
 10796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10797                           ;stkvar	_w @ sp[(-17)+13]
 10798                           ;stkvar	_l @ sp[(-17)+7]
 10799  01528E  50E1               	movf	fsr1l,w,c
 10800  015290  0FF6               	addlw	-10
 10801  015292  6ED9               	movwf	fsr2l,c
 10802  015294  50E2               	movf	fsr1h,w,c
 10803  015296  6EDA               	movwf	fsr2h,c
 10804  015298  0EFF               	movlw	255
 10805  01529A  22DA               	addwfc	fsr2h,f,c
 10806  01529C  0EFC               	movlw	-4
 10807  01529E  50E3               	movf	plusw1,w,c
 10808  0152A0  5CDE               	subwf	postinc2,w,c
 10809  0152A2  50DE               	movf	postinc2,w,c
 10810  0152A4  0A80               	xorlw	128
 10811  0152A6  6E32               	movwf	btemp^0,c
 10812  0152A8  0EFD               	movlw	-3
 10813  0152AA  50E3               	movf	plusw1,w,c
 10814  0152AC  0A80               	xorlw	128
 10815  0152AE  5832               	subwfb	btemp^0,w,c
 10816  0152B0  A0D8               	btfss	status,0,c
 10817  0152B2  D7CF               	goto	l10176
 10818  0152B4                     u9900:
 10819                           
 10820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10821                           ;stkvar	_i @ sp[(-17)+15]
 10822  0152B4  0EFE               	movlw	-2
 10823  0152B6  6AE3               	clrf	plusw1,c
 10824  0152B8  0EFF               	movlw	-1
 10825  0152BA  6AE3               	clrf	plusw1,c
 10826                           
 10827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10828  0152BC  D045               	goto	l10190
 10829  0152BE                     l10184:
 10830                           
 10831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10832                           ;stkvar	_fp @ sp[(-17)+-2]
 10833  0152BE  0EED               	movlw	-19
 10834  0152C0  006F FF8F FFE6     	movff	plusw1,postinc1
 10835  0152C6  006F FF8F FFE6     	movff	plusw1,postinc1
 10836                           
 10837                           ;stkvar	_cp @ sp[(-19)+11]
 10838  0152CC  0EF8               	movlw	-8
 10839  0152CE  006F FF8F FFF6     	movff	plusw1,tblptrl
 10840  0152D4  0EF9               	movlw	-7
 10841  0152D6  006F FF8F FFF7     	movff	plusw1,tblptrh
 10842  0152DC  0E00               	movlw	low (__mediumconst shr (0+16))
 10843  0152DE  6EF8               	movwf	tblptru,c
 10844  0152E0  0E1F               	movlw	(high __ramtop+-1)
 10845  0152E2  64F7               	cpfsgt	tblptrh,c
 10846  0152E4  D003               	bra	u9917
 10847  0152E6  0008               	tblrd		*
 10848  0152E8  50F5               	movf	tablat,w,c
 10849  0152EA  D007               	bra	u9910
 10850  0152EC                     u9917:
 10851  0152EC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10852  0152F2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10853  0152F8  50EF               	movf	indf0,w,c
 10854  0152FA                     u9910:
 10855  0152FA  6EE6               	movwf	postinc1,c
 10856  0152FC  0E00               	movlw	0
 10857  0152FE  6EE6               	movwf	postinc1,c
 10858  015300  EC83  F0B5         	call	_fputc	;wreg free
 10859                           
 10860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10861                           ;stkvar	_cp @ sp[(-17)+11]
 10862  015304  0EFA               	movlw	-6
 10863  015306  50E3               	movf	plusw1,w,c
 10864  015308  0F01               	addlw	1
 10865  01530A  6E32               	movwf	btemp^0,c
 10866  01530C  0EFA               	movlw	-6
 10867  01530E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10868  015314  6A32               	clrf	btemp^0,c
 10869  015316  0EFB               	movlw	-5
 10870  015318  50E3               	movf	plusw1,w,c
 10871  01531A  2032               	addwfc	btemp^0,w,c
 10872  01531C  6E32               	movwf	btemp^0,c
 10873  01531E  0EFB               	movlw	-5
 10874  015320  0060  F0CB  FFE3   	movff	btemp,plusw1
 10875                           
 10876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10877                           ;stkvar	_i @ sp[(-17)+15]
 10878  015326  0EFE               	movlw	-2
 10879  015328  50E3               	movf	plusw1,w,c
 10880  01532A  0F01               	addlw	1
 10881  01532C  6E32               	movwf	btemp^0,c
 10882  01532E  0EFE               	movlw	-2
 10883  015330  0060  F0CB  FFE3   	movff	btemp,plusw1
 10884  015336  6A32               	clrf	btemp^0,c
 10885  015338  0EFF               	movlw	-1
 10886  01533A  50E3               	movf	plusw1,w,c
 10887  01533C  2032               	addwfc	btemp^0,w,c
 10888  01533E  6E32               	movwf	btemp^0,c
 10889  015340  0EFF               	movlw	-1
 10890  015342  0060  F0CB  FFE3   	movff	btemp,plusw1
 10891  015348                     l10190:
 10892                           
 10893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10894                           ;stkvar	_p @ sp[(-17)+9]
 10895                           ;stkvar	_i @ sp[(-17)+15]
 10896  015348  50E1               	movf	fsr1l,w,c
 10897  01534A  0FFE               	addlw	-2
 10898  01534C  6ED9               	movwf	fsr2l,c
 10899  01534E  50E2               	movf	fsr1h,w,c
 10900  015350  6EDA               	movwf	fsr2h,c
 10901  015352  0EFF               	movlw	255
 10902  015354  22DA               	addwfc	fsr2h,f,c
 10903  015356  0EF8               	movlw	-8
 10904  015358  50E3               	movf	plusw1,w,c
 10905  01535A  5CDE               	subwf	postinc2,w,c
 10906  01535C  50DE               	movf	postinc2,w,c
 10907  01535E  0A80               	xorlw	128
 10908  015360  6E32               	movwf	btemp^0,c
 10909  015362  0EF9               	movlw	-7
 10910  015364  50E3               	movf	plusw1,w,c
 10911  015366  0A80               	xorlw	128
 10912  015368  5832               	subwfb	btemp^0,w,c
 10913  01536A  A0D8               	btfss	status,0,c
 10914  01536C  D7A8               	goto	l10184
 10915                           
 10916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10917  01536E  B01F               	btfsc	_flags^0,0,c
 10918  015370  D01F               	goto	l10198
 10919  015372  D031               	goto	u9940
 10920  015374                     l10194:
 10921                           
 10922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10923                           ;stkvar	_fp @ sp[(-17)+-2]
 10924  015374  0EED               	movlw	-19
 10925  015376  006F FF8F FFE6     	movff	plusw1,postinc1
 10926  01537C  006F FF8F FFE6     	movff	plusw1,postinc1
 10927  015382  0E20               	movlw	32
 10928  015384  6EE6               	movwf	postinc1,c
 10929  015386  0E00               	movlw	0
 10930  015388  6EE6               	movwf	postinc1,c
 10931  01538A  EC83  F0B5         	call	_fputc	;wreg free
 10932                           
 10933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10934                           ;stkvar	_l @ sp[(-17)+7]
 10935  01538E  0EF6               	movlw	-10
 10936  015390  50E3               	movf	plusw1,w,c
 10937  015392  0F01               	addlw	1
 10938  015394  6E32               	movwf	btemp^0,c
 10939  015396  0EF6               	movlw	-10
 10940  015398  0060  F0CB  FFE3   	movff	btemp,plusw1
 10941  01539E  6A32               	clrf	btemp^0,c
 10942  0153A0  0EF7               	movlw	-9
 10943  0153A2  50E3               	movf	plusw1,w,c
 10944  0153A4  2032               	addwfc	btemp^0,w,c
 10945  0153A6  6E32               	movwf	btemp^0,c
 10946  0153A8  0EF7               	movlw	-9
 10947  0153AA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10948  0153B0                     l10198:
 10949                           
 10950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10951                           ;stkvar	_w @ sp[(-17)+13]
 10952                           ;stkvar	_l @ sp[(-17)+7]
 10953  0153B0  50E1               	movf	fsr1l,w,c
 10954  0153B2  0FF6               	addlw	-10
 10955  0153B4  6ED9               	movwf	fsr2l,c
 10956  0153B6  50E2               	movf	fsr1h,w,c
 10957  0153B8  6EDA               	movwf	fsr2h,c
 10958  0153BA  0EFF               	movlw	255
 10959  0153BC  22DA               	addwfc	fsr2h,f,c
 10960  0153BE  0EFC               	movlw	-4
 10961  0153C0  50E3               	movf	plusw1,w,c
 10962  0153C2  5CDE               	subwf	postinc2,w,c
 10963  0153C4  50DE               	movf	postinc2,w,c
 10964  0153C6  0A80               	xorlw	128
 10965  0153C8  6E32               	movwf	btemp^0,c
 10966  0153CA  0EFD               	movlw	-3
 10967  0153CC  50E3               	movf	plusw1,w,c
 10968  0153CE  0A80               	xorlw	128
 10969  0153D0  5832               	subwfb	btemp^0,w,c
 10970  0153D2  A0D8               	btfss	status,0,c
 10971  0153D4  D7CF               	goto	l10194
 10972  0153D6                     u9940:
 10973                           
 10974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10975                           ;stkvar	_l @ sp[(-17)+7]
 10976  0153D6  0EF6               	movlw	-10
 10977  0153D8  006F FF8C  F032    	movff	plusw1,btemp
 10978  0153DE  0EF7               	movlw	-9
 10979  0153E0  006F FF8C  F033    	movff	plusw1,btemp+1
 10980                           
 10981                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10982  0153E6  0EEB               	movlw	235
 10983  0153E8  26E1               	addwf	fsr1l,f,c
 10984  0153EA  0EFF               	movlw	255
 10985  0153EC  22E2               	addwfc	fsr1h,f,c
 10986  0153EE  0012               	return		;funcret
 10987  0153F0                     __end_of_stoa:
 10988                           	opt callstack 0
 10989                           
 10990 ;; *************** function _efgtoa *****************
 10991 ;; Defined at:
 10992 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10995 ;;		 -> f(6), NULL(0), 
 10996 ;;  f               4  [STACK] PTR struct _IO_FILE
 10997 ;;  c               1  [STACK] unsigned char 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  u               4  [STACK] unsigned char 
 11000 ;;  g               4  [STACK] unsigned char 
 11001 ;;  l               4  [STACK] unsigned char 
 11002 ;;  h               4  [STACK] unsigned char 
 11003 ;;  ou              4  [STACK] unsigned char 
 11004 ;;  n               2  [STACK] int 
 11005 ;;  e               2  [STACK] int 
 11006 ;;  i               2  [STACK] int 
 11007 ;;  w               2  [STACK] int 
 11008 ;;  p               2  [STACK] int 
 11009 ;;  sign            2  [STACK] int 
 11010 ;;  d               2  [STACK] int 
 11011 ;;  ne              2  [STACK] int 
 11012 ;;  m               2  [STACK] int 
 11013 ;;  pp              2  [STACK] int 
 11014 ;;  t               2  [STACK] int 
 11015 ;;  mode            1  [STACK] unsigned char 
 11016 ;;  nmode           1  [STACK] unsigned char 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  2  [STACK] int 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/5
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11030 ;;Total ram usage:        0 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:   11
 11033 ;; This function calls:
 11034 ;;		___awdiv
 11035 ;;		___awmod
 11036 ;;		___fladd
 11037 ;;		___fldiv
 11038 ;;		___fleq
 11039 ;;		___flge
 11040 ;;		___flmul
 11041 ;;		___flneg
 11042 ;;		___flsub
 11043 ;;		___fltol
 11044 ;;		___fpclassifyf
 11045 ;;		_floorf
 11046 ;;		_isupper
 11047 ;;		_pad
 11048 ;;		_strcpy
 11049 ;;		_tolower
 11050 ;; This function is called by:
 11051 ;;		_vfpfcnvrt
 11052 ;; This function uses a reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text46
 11056  010000                     __ptext46:
 11057                           	opt callstack 0
 11058  010000                     _efgtoa:
 11059                           	opt callstack 0
 11060                           
 11061                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11062  010000  0E38               	movlw	56
 11063  010002  26E1               	addwf	fsr1l,f,c
 11064  010004  0E00               	movlw	0
 11065  010006  22E2               	addwfc	fsr1h,f,c
 11066                           
 11067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11068                           ;stkvar	_sign @ sp[(-56)+42]
 11069                           
 11070                           ;incstack = 0
 11071  010008  0EF2               	movlw	-14
 11072  01000A  6AE3               	clrf	plusw1,c
 11073  01000C  0EF3               	movlw	-13
 11074  01000E  6AE3               	clrf	plusw1,c
 11075                           
 11076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11077                           ;stkvar	_f @ sp[(-56)+-6]
 11078  010010  0EC2               	movlw	-62
 11079  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 11080  010018  0EC3               	movlw	-61
 11081  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 11082  010020  0EC4               	movlw	-60
 11083  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 11084  010028  0EC5               	movlw	-59
 11085  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 11086                           
 11087                           ;stkvar	_g @ sp[(-56)+16]
 11088  010030  0ED8               	movlw	-40
 11089  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11090  010038  0ED9               	movlw	-39
 11091  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11092  010040  0EDA               	movlw	-38
 11093  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11094  010048  0EDB               	movlw	-37
 11095  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11098                           ;stkvar	_g @ sp[(-56)+16]
 11099  010050  0EDB               	movlw	-37
 11100  010052  AEE3               	btfss	plusw1,7,c
 11101  010054  D02B               	goto	l9858
 11102                           
 11103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11104  010056  0E01               	movlw	1
 11105  010058  6E3C               	movwf	(btemp+10)^0,c
 11106  01005A  0E00               	movlw	0
 11107  01005C  6E3D               	movwf	(btemp+11)^0,c
 11108                           
 11109                           ;stkvar	_sign @ sp[(-56)+42]
 11110  01005E  0EF2               	movlw	-14
 11111  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11112  010066  0EF3               	movlw	-13
 11113  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11114                           
 11115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11116                           ;stkvar	_g @ sp[(-56)+16]
 11117  01006E  0ED8               	movlw	-40
 11118  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11119  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11120  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11122  010088  EC48  F0C1         	call	___flneg	;wreg free
 11123                           
 11124                           ;stkvar	_g @ sp[(-56)+16]
 11125  01008C  0ED8               	movlw	-40
 11126  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11127  010094  0ED9               	movlw	-39
 11128  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11129  01009C  0EDA               	movlw	-38
 11130  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11131  0100A4  0EDB               	movlw	-37
 11132  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11133  0100AC                     l9858:
 11134                           
 11135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11136                           ;stkvar	_n @ sp[(-56)+32]
 11137  0100AC  0EE8               	movlw	-24
 11138  0100AE  6AE3               	clrf	plusw1,c
 11139  0100B0  0EE9               	movlw	-23
 11140  0100B2  6AE3               	clrf	plusw1,c
 11141                           
 11142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11143                           ;stkvar	_w @ sp[(-56)+38]
 11144  0100B4  0EEE               	movlw	-18
 11145  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 11146  0100BC  0EEF               	movlw	-17
 11147  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11150                           ;stkvar	_sign @ sp[(-56)+42]
 11151  0100C4  0EF2               	movlw	-14
 11152  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 11153  0100CC  0EF3               	movlw	-13
 11154  0100CE  50E3               	movf	plusw1,w,c
 11155  0100D0  1032               	iorwf	btemp^0,w,c
 11156  0100D2  A4D8               	btfss	status,2,c
 11157  0100D4  D002               	goto	u9350
 11158  0100D6  A41F               	btfss	_flags^0,2,c
 11159  0100D8  D036               	goto	l9878
 11160  0100DA                     u9350:
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11163                           ;stkvar	_sign @ sp[(-56)+42]
 11164  0100DA  0EF2               	movlw	-14
 11165  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 11166  0100E2  0EF3               	movlw	-13
 11167  0100E4  50E3               	movf	plusw1,w,c
 11168  0100E6  1032               	iorwf	btemp^0,w,c
 11169  0100E8  A4D8               	btfss	status,2,c
 11170  0100EA  D002               	goto	l9870
 11171  0100EC  0E2B               	movlw	43
 11172  0100EE  D001               	goto	L9
 11173  0100F0                     l9870:
 11174  0100F0  0E2D               	movlw	45
 11175  0100F2                     L9:
 11176  0100F2  6E3C               	movwf	(btemp+10)^0,c
 11177  0100F4  0E00               	movlw	0
 11178  0100F6  6E3D               	movwf	(btemp+11)^0,c
 11179                           
 11180                           ;stkvar	_efgtoa$4602 @ sp[(-56)+10]
 11181  0100F8  0ED2               	movlw	-46
 11182  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11183  010100  0ED3               	movlw	-45
 11184  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11185                           
 11186                           ;stkvar	_efgtoa$4602 @ sp[(-56)+10]
 11187  010108  0ED2               	movlw	-46
 11188  01010A  006F FF8C  F17C    	movff	plusw1,_dbuf
 11189                           
 11190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11191                           ;stkvar	_n @ sp[(-56)+32]
 11192  010110  0EE8               	movlw	-24
 11193  010112  50E3               	movf	plusw1,w,c
 11194  010114  0F01               	addlw	1
 11195  010116  6E32               	movwf	btemp^0,c
 11196  010118  0EE8               	movlw	-24
 11197  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11198  010120  6A32               	clrf	btemp^0,c
 11199  010122  0EE9               	movlw	-23
 11200  010124  50E3               	movf	plusw1,w,c
 11201  010126  2032               	addwfc	btemp^0,w,c
 11202  010128  6E32               	movwf	btemp^0,c
 11203  01012A  0EE9               	movlw	-23
 11204  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11205                           
 11206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11207                           ;stkvar	_w @ sp[(-56)+38]
 11208  010132  50E1               	movf	fsr1l,w,c
 11209  010134  0FEE               	addlw	-18
 11210  010136  6ED9               	movwf	fsr2l,c
 11211  010138  50E2               	movf	fsr1h,w,c
 11212  01013A  6EDA               	movwf	fsr2h,c
 11213  01013C  0EFF               	movlw	255
 11214  01013E  22DA               	addwfc	fsr2h,f,c
 11215  010140  06DE               	decf	postinc2,f,c
 11216  010142  0E00               	movlw	0
 11217  010144  5ADD               	subwfb	postdec2,f,c
 11218  010146                     l9878:
 11219                           
 11220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11221                           ;stkvar	_g @ sp[(-56)+16]
 11222  010146  0ED8               	movlw	-40
 11223  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11224  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11225  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11226  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11227  010160  EC6C  F0B1         	call	___fpclassifyf	;wreg free
 11228  010164  0432               	decf	btemp^0,w,c
 11229  010166  1033               	iorwf	(btemp+1)^0,w,c
 11230  010168  A4D8               	btfss	status,2,c
 11231  01016A  D076               	goto	l9896
 11232  01016C  0EBF               	movlw	191
 11233  01016E  6E3C               	movwf	(btemp+10)^0,c
 11234  010170  0EFF               	movlw	255
 11235  010172  6E3D               	movwf	(btemp+11)^0,c
 11236                           
 11237                           ;stkvar	_c @ sp[(-56)+-7]
 11238  010174  0EC1               	movlw	-63
 11239  010176  50E3               	movf	plusw1,w,c
 11240  010178  6E3A               	movwf	(btemp+8)^0,c
 11241  01017A  6A3B               	clrf	(btemp+9)^0,c
 11242  01017C  503C               	movf	(btemp+10)^0,w,c
 11243  01017E  263A               	addwf	(btemp+8)^0,f,c
 11244  010180  503D               	movf	(btemp+11)^0,w,c
 11245  010182  223B               	addwfc	(btemp+9)^0,f,c
 11246  010184  503B               	movf	(btemp+9)^0,w,c
 11247  010186  E106               	bnz	u9380
 11248  010188  0E1A               	movlw	26
 11249  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 11250  01018C  B0D8               	btfsc	status,0,c
 11251  01018E  D002               	goto	u9380
 11252  010190  0E01               	movlw	1
 11253  010192  D001               	goto	u9390
 11254  010194                     u9380:
 11255  010194  0E00               	movlw	0
 11256  010196                     u9390:
 11257  010196  6E3C               	movwf	(btemp+10)^0,c
 11258  010198  6A3D               	clrf	(btemp+11)^0,c
 11259                           
 11260                           ;stkvar	_efgtoa$4603 @ sp[(-56)+8]
 11261  01019A  0ED0               	movlw	-48
 11262  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11263  0101A2  0ED1               	movlw	-47
 11264  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11265                           
 11266                           ;stkvar	_efgtoa$4603 @ sp[(-56)+8]
 11267  0101AA  0ED0               	movlw	-48
 11268  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 11269  0101B2  0ED1               	movlw	-47
 11270  0101B4  50E3               	movf	plusw1,w,c
 11271  0101B6  1032               	iorwf	btemp^0,w,c
 11272  0101B8  B4D8               	btfsc	status,2,c
 11273  0101BA  D017               	goto	l9888
 11274                           
 11275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11276  0101BC  0EE6               	movlw	low STR_46
 11277  0101BE  6EE6               	movwf	postinc1,c
 11278  0101C0  0EFF               	movlw	high STR_46
 11279  0101C2  6EE6               	movwf	postinc1,c
 11280                           
 11281                           ;stkvar	_n @ sp[(-58)+32]
 11282  0101C4  0E7C               	movlw	low _dbuf
 11283  0101C6  6E3C               	movwf	(btemp+10)^0,c
 11284  0101C8  0E01               	movlw	high _dbuf
 11285  0101CA  6E3D               	movwf	(btemp+11)^0,c
 11286  0101CC  0EE6               	movlw	-26
 11287  0101CE  50E3               	movf	plusw1,w,c
 11288  0101D0  263C               	addwf	(btemp+10)^0,f,c
 11289  0101D2  0EE7               	movlw	-25
 11290  0101D4  50E3               	movf	plusw1,w,c
 11291  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 11292  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11293  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11294  0101E4  ECA7  F0B9         	call	_strcpy	;wreg free
 11295                           
 11296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11297  0101E8  D016               	goto	l9890
 11298  0101EA                     l9888:
 11299                           
 11300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11301  0101EA  0EEE               	movlw	low STR_47
 11302  0101EC  6EE6               	movwf	postinc1,c
 11303  0101EE  0EFF               	movlw	high STR_47
 11304  0101F0  6EE6               	movwf	postinc1,c
 11305                           
 11306                           ;stkvar	_n @ sp[(-58)+32]
 11307  0101F2  0E7C               	movlw	low _dbuf
 11308  0101F4  6E3C               	movwf	(btemp+10)^0,c
 11309  0101F6  0E01               	movlw	high _dbuf
 11310  0101F8  6E3D               	movwf	(btemp+11)^0,c
 11311  0101FA  0EE6               	movlw	-26
 11312  0101FC  50E3               	movf	plusw1,w,c
 11313  0101FE  263C               	addwf	(btemp+10)^0,f,c
 11314  010200  0EE7               	movlw	-25
 11315  010202  50E3               	movf	plusw1,w,c
 11316  010204  223D               	addwfc	(btemp+11)^0,f,c
 11317  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11318  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11319  010212  ECA7  F0B9         	call	_strcpy	;wreg free
 11320  010216                     l9890:
 11321                           
 11322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11323                           ;stkvar	_w @ sp[(-56)+38]
 11324  010216  50E1               	movf	fsr1l,w,c
 11325  010218  0FEE               	addlw	-18
 11326  01021A  6ED9               	movwf	fsr2l,c
 11327  01021C  50E2               	movf	fsr1h,w,c
 11328  01021E  6EDA               	movwf	fsr2h,c
 11329  010220  0EFF               	movlw	255
 11330  010222  22DA               	addwfc	fsr2h,f,c
 11331  010224  0EFD               	movlw	253
 11332  010226  26DE               	addwf	postinc2,f,c
 11333  010228  0EFF               	movlw	255
 11334  01022A  22DD               	addwfc	postdec2,f,c
 11335  01022C                     l9892:
 11336                           
 11337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11338                           ;stkvar	_w @ sp[(-56)+38]
 11339  01022C  0EEE               	movlw	-18
 11340  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11341  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11342  01023A  0E7C               	movlw	low _dbuf
 11343  01023C  6EE6               	movwf	postinc1,c
 11344  01023E  0E01               	movlw	high _dbuf
 11345  010240  6EE6               	movwf	postinc1,c
 11346                           
 11347                           ;stkvar	_fp @ sp[(-60)+-2]
 11348  010242  0EC2               	movlw	-62
 11349  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11350  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11351  010250  ECA1  F0B6         	call	_pad	;wreg free
 11352  010254  EF1D  F089         	goto	l1921
 11353  010258                     l9896:
 11354                           
 11355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11356                           ;stkvar	_g @ sp[(-56)+16]
 11357  010258  0ED8               	movlw	-40
 11358  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11359  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11360  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11361  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11362  010272  EC6C  F0B1         	call	___fpclassifyf	;wreg free
 11363  010276  5032               	movf	btemp^0,w,c
 11364  010278  1033               	iorwf	(btemp+1)^0,w,c
 11365  01027A  A4D8               	btfss	status,2,c
 11366  01027C  D056               	goto	l9914
 11367  01027E  0EBF               	movlw	191
 11368  010280  6E3C               	movwf	(btemp+10)^0,c
 11369  010282  0EFF               	movlw	255
 11370  010284  6E3D               	movwf	(btemp+11)^0,c
 11371                           
 11372                           ;stkvar	_c @ sp[(-56)+-7]
 11373  010286  0EC1               	movlw	-63
 11374  010288  50E3               	movf	plusw1,w,c
 11375  01028A  6E3A               	movwf	(btemp+8)^0,c
 11376  01028C  6A3B               	clrf	(btemp+9)^0,c
 11377  01028E  503C               	movf	(btemp+10)^0,w,c
 11378  010290  263A               	addwf	(btemp+8)^0,f,c
 11379  010292  503D               	movf	(btemp+11)^0,w,c
 11380  010294  223B               	addwfc	(btemp+9)^0,f,c
 11381  010296  503B               	movf	(btemp+9)^0,w,c
 11382  010298  E106               	bnz	u9420
 11383  01029A  0E1A               	movlw	26
 11384  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 11385  01029E  B0D8               	btfsc	status,0,c
 11386  0102A0  D002               	goto	u9420
 11387  0102A2  0E01               	movlw	1
 11388  0102A4  D001               	goto	u9430
 11389  0102A6                     u9420:
 11390  0102A6  0E00               	movlw	0
 11391  0102A8                     u9430:
 11392  0102A8  6E3C               	movwf	(btemp+10)^0,c
 11393  0102AA  6A3D               	clrf	(btemp+11)^0,c
 11394                           
 11395                           ;stkvar	_efgtoa$4607 @ sp[(-56)+6]
 11396  0102AC  0ECE               	movlw	-50
 11397  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11398  0102B4  0ECF               	movlw	-49
 11399  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11400                           
 11401                           ;stkvar	_efgtoa$4607 @ sp[(-56)+6]
 11402  0102BC  0ECE               	movlw	-50
 11403  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 11404  0102C4  0ECF               	movlw	-49
 11405  0102C6  50E3               	movf	plusw1,w,c
 11406  0102C8  1032               	iorwf	btemp^0,w,c
 11407  0102CA  B4D8               	btfsc	status,2,c
 11408  0102CC  D017               	goto	l9906
 11409                           
 11410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11411  0102CE  0EEA               	movlw	low STR_50
 11412  0102D0  6EE6               	movwf	postinc1,c
 11413  0102D2  0EFF               	movlw	high STR_50
 11414  0102D4  6EE6               	movwf	postinc1,c
 11415                           
 11416                           ;stkvar	_n @ sp[(-58)+32]
 11417  0102D6  0E7C               	movlw	low _dbuf
 11418  0102D8  6E3C               	movwf	(btemp+10)^0,c
 11419  0102DA  0E01               	movlw	high _dbuf
 11420  0102DC  6E3D               	movwf	(btemp+11)^0,c
 11421  0102DE  0EE6               	movlw	-26
 11422  0102E0  50E3               	movf	plusw1,w,c
 11423  0102E2  263C               	addwf	(btemp+10)^0,f,c
 11424  0102E4  0EE7               	movlw	-25
 11425  0102E6  50E3               	movf	plusw1,w,c
 11426  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 11427  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11428  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11429  0102F6  ECA7  F0B9         	call	_strcpy	;wreg free
 11430                           
 11431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11432  0102FA  D78D               	goto	l9890
 11433  0102FC                     l9906:
 11434                           
 11435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11436  0102FC  0EF2               	movlw	low STR_51
 11437  0102FE  6EE6               	movwf	postinc1,c
 11438  010300  0EFF               	movlw	high STR_51
 11439  010302  6EE6               	movwf	postinc1,c
 11440                           
 11441                           ;stkvar	_n @ sp[(-58)+32]
 11442  010304  0E7C               	movlw	low _dbuf
 11443  010306  6E3C               	movwf	(btemp+10)^0,c
 11444  010308  0E01               	movlw	high _dbuf
 11445  01030A  6E3D               	movwf	(btemp+11)^0,c
 11446  01030C  0EE6               	movlw	-26
 11447  01030E  50E3               	movf	plusw1,w,c
 11448  010310  263C               	addwf	(btemp+10)^0,f,c
 11449  010312  0EE7               	movlw	-25
 11450  010314  50E3               	movf	plusw1,w,c
 11451  010316  223D               	addwfc	(btemp+11)^0,f,c
 11452  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11453  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11454  010324  ECA7  F0B9         	call	_strcpy	;wreg free
 11455  010328  D776               	goto	l9890
 11456  01032A                     l9914:
 11457                           
 11458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11459  01032A  0E00               	movlw	0
 11460  01032C  6E3A               	movwf	(btemp+8)^0,c
 11461  01032E  0E00               	movlw	0
 11462  010330  6E3B               	movwf	(btemp+9)^0,c
 11463  010332  0E80               	movlw	128
 11464  010334  6E3C               	movwf	(btemp+10)^0,c
 11465  010336  0E3F               	movlw	63
 11466  010338  6E3D               	movwf	(btemp+11)^0,c
 11467                           
 11468                           ;stkvar	_u @ sp[(-56)+12]
 11469  01033A  0ED4               	movlw	-44
 11470  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11471  010342  0ED5               	movlw	-43
 11472  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11473  01034A  0ED6               	movlw	-42
 11474  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11475  010352  0ED7               	movlw	-41
 11476  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11477                           
 11478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11479                           ;stkvar	_e @ sp[(-56)+34]
 11480  01035A  0EEA               	movlw	-22
 11481  01035C  6AE3               	clrf	plusw1,c
 11482  01035E  0EEB               	movlw	-21
 11483  010360  6AE3               	clrf	plusw1,c
 11484                           
 11485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11486  010362  0E00               	movlw	0
 11487  010364  6EE6               	movwf	postinc1,c
 11488  010366  0E00               	movlw	0
 11489  010368  6EE6               	movwf	postinc1,c
 11490  01036A  0E00               	movlw	0
 11491  01036C  6EE6               	movwf	postinc1,c
 11492  01036E  0E00               	movlw	0
 11493  010370  6EE6               	movwf	postinc1,c
 11494                           
 11495                           ;stkvar	_g @ sp[(-60)+16]
 11496  010372  0ED4               	movlw	-44
 11497  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11498  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11499  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11500  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11501  01038C  EC11  F0BA         	call	___fleq	;wreg free
 11502  010390  A032               	btfss	btemp& (0+255),0,c
 11503  010392  D039               	goto	l9926
 11504  010394  D0BC               	goto	u9470
 11505  010396                     l9922:
 11506                           
 11507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11508  010396  0E00               	movlw	0
 11509  010398  6EE6               	movwf	postinc1,c
 11510  01039A  0E00               	movlw	0
 11511  01039C  6EE6               	movwf	postinc1,c
 11512  01039E  0E20               	movlw	32
 11513  0103A0  6EE6               	movwf	postinc1,c
 11514  0103A2  0E41               	movlw	65
 11515  0103A4  6EE6               	movwf	postinc1,c
 11516                           
 11517                           ;stkvar	_u @ sp[(-60)+12]
 11518  0103A6  0ED0               	movlw	-48
 11519  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11520  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11521  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11522  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11523  0103C0  ECE8  F092         	call	___flmul	;wreg free
 11524                           
 11525                           ;stkvar	_u @ sp[(-56)+12]
 11526  0103C4  0ED4               	movlw	-44
 11527  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11528  0103CC  0ED5               	movlw	-43
 11529  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11530  0103D4  0ED6               	movlw	-42
 11531  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11532  0103DC  0ED7               	movlw	-41
 11533  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11534                           
 11535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11536                           ;stkvar	_e @ sp[(-56)+34]
 11537  0103E4  0EEA               	movlw	-22
 11538  0103E6  50E3               	movf	plusw1,w,c
 11539  0103E8  0F01               	addlw	1
 11540  0103EA  6E32               	movwf	btemp^0,c
 11541  0103EC  0EEA               	movlw	-22
 11542  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11543  0103F4  6A32               	clrf	btemp^0,c
 11544  0103F6  0EEB               	movlw	-21
 11545  0103F8  50E3               	movf	plusw1,w,c
 11546  0103FA  2032               	addwfc	btemp^0,w,c
 11547  0103FC  6E32               	movwf	btemp^0,c
 11548  0103FE  0EEB               	movlw	-21
 11549  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11550  010406                     l9926:
 11551                           
 11552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11553  010406  0E00               	movlw	0
 11554  010408  6EE6               	movwf	postinc1,c
 11555  01040A  0E00               	movlw	0
 11556  01040C  6EE6               	movwf	postinc1,c
 11557  01040E  0E20               	movlw	32
 11558  010410  6EE6               	movwf	postinc1,c
 11559  010412  0E41               	movlw	65
 11560  010414  6EE6               	movwf	postinc1,c
 11561                           
 11562                           ;stkvar	_u @ sp[(-60)+12]
 11563  010416  0ED0               	movlw	-48
 11564  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11565  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11566  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11568  010430  ECE8  F092         	call	___flmul	;wreg free
 11569  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11570  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11571  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11572  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11573                           
 11574                           ;stkvar	_g @ sp[(-60)+16]
 11575  01044C  0ED4               	movlw	-44
 11576  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11577  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11578  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11579  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11580  010466  ECF0  F0B2         	call	___flge	;wreg free
 11581  01046A  A032               	btfss	btemp& (0+255),0,c
 11582  01046C  D032               	goto	l9932
 11583  01046E  D793               	goto	l9922
 11584  010470                     l9928:
 11585                           
 11586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11587  010470  0E00               	movlw	0
 11588  010472  6EE6               	movwf	postinc1,c
 11589  010474  0E00               	movlw	0
 11590  010476  6EE6               	movwf	postinc1,c
 11591  010478  0E20               	movlw	32
 11592  01047A  6EE6               	movwf	postinc1,c
 11593  01047C  0E41               	movlw	65
 11594  01047E  6EE6               	movwf	postinc1,c
 11595                           
 11596                           ;stkvar	_u @ sp[(-60)+12]
 11597  010480  0ED0               	movlw	-48
 11598  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11599  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11600  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11601  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11602  01049A  ECDB  F09A         	call	___fldiv	;wreg free
 11603                           
 11604                           ;stkvar	_u @ sp[(-56)+12]
 11605  01049E  0ED4               	movlw	-44
 11606  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11607  0104A6  0ED5               	movlw	-43
 11608  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11609  0104AE  0ED6               	movlw	-42
 11610  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11611  0104B6  0ED7               	movlw	-41
 11612  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11615                           ;stkvar	_e @ sp[(-56)+34]
 11616  0104BE  50E1               	movf	fsr1l,w,c
 11617  0104C0  0FEA               	addlw	-22
 11618  0104C2  6ED9               	movwf	fsr2l,c
 11619  0104C4  50E2               	movf	fsr1h,w,c
 11620  0104C6  6EDA               	movwf	fsr2h,c
 11621  0104C8  0EFF               	movlw	255
 11622  0104CA  22DA               	addwfc	fsr2h,f,c
 11623  0104CC  06DE               	decf	postinc2,f,c
 11624  0104CE  0E00               	movlw	0
 11625  0104D0  5ADD               	subwfb	postdec2,f,c
 11626  0104D2                     l9932:
 11627                           
 11628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11629                           ;stkvar	_u @ sp[(-56)+12]
 11630  0104D2  0ED4               	movlw	-44
 11631  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11632  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11633  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11634  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11635                           
 11636                           ;stkvar	_g @ sp[(-60)+16]
 11637  0104EC  0ED4               	movlw	-44
 11638  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11639  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11640  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11641  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11642  010506  ECF0  F0B2         	call	___flge	;wreg free
 11643  01050A  A032               	btfss	btemp& (0+255),0,c
 11644  01050C  D7B1               	goto	l9928
 11645  01050E                     u9470:
 11646                           
 11647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11648                           ;stkvar	_c @ sp[(-56)+-7]
 11649  01050E  0EC1               	movlw	-63
 11650  010510  50E3               	movf	plusw1,w,c
 11651  010512  6EE6               	movwf	postinc1,c
 11652  010514  0E00               	movlw	0
 11653  010516  6EE6               	movwf	postinc1,c
 11654  010518  EC26  F0BE         	call	_tolower	;wreg free
 11655                           
 11656                           ;stkvar	_mode @ sp[(-56)+54]
 11657  01051C  0EFE               	movlw	-2
 11658  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11659                           
 11660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11661                           ;stkvar	_mode @ sp[(-56)+54]
 11662                           ;stkvar	_nmode @ sp[(-56)+55]
 11663  010524  0EFE               	movlw	-2
 11664  010526  006F FF8C  F032    	movff	plusw1,btemp
 11665  01052C  0EFF               	movlw	-1
 11666  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11667                           
 11668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11669                           ;stkvar	_mode @ sp[(-56)+54]
 11670  010534  0EFE               	movlw	-2
 11671  010536  006F FF8C  F032    	movff	plusw1,btemp
 11672  01053C  0E67               	movlw	103
 11673  01053E  1832               	xorwf	btemp^0,w,c
 11674  010540  A4D8               	btfss	status,2,c
 11675  010542  D025               	goto	l9950
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11678  010544  501D               	movf	_prec^0,w,c
 11679  010546  101E               	iorwf	(_prec+1)^0,w,c
 11680  010548  A4D8               	btfss	status,2,c
 11681  01054A  D004               	goto	l9944
 11682                           
 11683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11684  01054C  0E00               	movlw	0
 11685  01054E  6E1E               	movwf	(_prec+1)^0,c
 11686  010550  0E01               	movlw	1
 11687  010552  6E1D               	movwf	_prec^0,c
 11688  010554                     l9944:
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11691  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11692  010556  D005               	goto	u9500
 11693  010558  501E               	movf	(_prec+1)^0,w,c
 11694  01055A  E110               	bnz	l9948
 11695  01055C  041D               	decf	_prec^0,w,c
 11696  01055E  B0D8               	btfsc	status,0,c
 11697  010560  D00D               	goto	l9948
 11698  010562                     u9500:
 11699  010562  0E06               	movlw	6
 11700  010564  6E3C               	movwf	(btemp+10)^0,c
 11701  010566  0E00               	movlw	0
 11702  010568  6E3D               	movwf	(btemp+11)^0,c
 11703                           
 11704                           ;stkvar	_p @ sp[(-56)+40]
 11705  01056A  0EF0               	movlw	-16
 11706  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11707  010572  0EF1               	movlw	-15
 11708  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11709  01057A  D00C               	goto	l9956
 11710  01057C                     l9948:
 11711                           
 11712                           ;stkvar	_p @ sp[(-56)+40]
 11713  01057C  0EF0               	movlw	-16
 11714  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11715  010584  0EF1               	movlw	-15
 11716  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11717  01058C  D003               	goto	l9956
 11718  01058E                     l9950:
 11719                           
 11720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11721  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11722  010590  D7F5               	goto	l9948
 11723  010592  D7E7               	goto	u9500
 11724  010594                     l9956:
 11725                           
 11726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11727                           ;stkvar	_mode @ sp[(-56)+54]
 11728  010594  0EFE               	movlw	-2
 11729  010596  006F FF8C  F032    	movff	plusw1,btemp
 11730  01059C  0E67               	movlw	103
 11731  01059E  1832               	xorwf	btemp^0,w,c
 11732  0105A0  A4D8               	btfss	status,2,c
 11733  0105A2  D02F               	goto	l9966
 11734                           
 11735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11736                           ;stkvar	_e @ sp[(-56)+34]
 11737  0105A4  0EEB               	movlw	-21
 11738  0105A6  AEE3               	btfss	plusw1,7,c
 11739  0105A8  D00E               	goto	u9530
 11740  0105AA  0EEA               	movlw	-22
 11741  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11742  0105B2  0EFC               	movlw	252
 11743  0105B4  5E32               	subwf	btemp^0,f,c
 11744  0105B6  0EEB               	movlw	-21
 11745  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11746  0105BE  0EFF               	movlw	255
 11747  0105C0  5A32               	subwfb	btemp^0,f,c
 11748  0105C2  A0D8               	btfss	status,0,c
 11749  0105C4  D018               	goto	l9964
 11750  0105C6                     u9530:
 11751                           
 11752                           ;stkvar	_e @ sp[(-56)+34]
 11753                           ;stkvar	_p @ sp[(-56)+40]
 11754  0105C6  0EF0               	movlw	-16
 11755  0105C8  50E3               	movf	plusw1,w,c
 11756  0105CA  0FFF               	addlw	255
 11757  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11758  0105CE  0EF1               	movlw	-15
 11759  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11760  0105D6  0EFF               	movlw	255
 11761  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11762  0105DA  0EEA               	movlw	-22
 11763  0105DC  50E3               	movf	plusw1,w,c
 11764  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11765  0105E0  503D               	movf	(btemp+11)^0,w,c
 11766  0105E2  0A80               	xorlw	128
 11767  0105E4  6E32               	movwf	btemp^0,c
 11768  0105E6  0EEB               	movlw	-21
 11769  0105E8  50E3               	movf	plusw1,w,c
 11770  0105EA  0A80               	xorlw	128
 11771  0105EC  5832               	subwfb	btemp^0,w,c
 11772  0105EE  A0D8               	btfss	status,0,c
 11773  0105F0  D002               	goto	l9964
 11774                           
 11775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11776  0105F2  0E66               	movlw	102
 11777  0105F4  D001               	goto	L10
 11778  0105F6                     l9964:
 11779                           
 11780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11781  0105F6  0E65               	movlw	101
 11782  0105F8                     L10:
 11783  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11784                           
 11785                           ;stkvar	_nmode @ sp[(-56)+55]
 11786  0105FA  0EFF               	movlw	-1
 11787  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11788  010602                     l9966:
 11789                           
 11790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11791                           ;stkvar	_p @ sp[(-56)+40]
 11792                           ;stkvar	_m @ sp[(-56)+48]
 11793  010602  0EF0               	movlw	-16
 11794  010604  006F FF8C  F032    	movff	plusw1,btemp
 11795  01060A  0EF8               	movlw	-8
 11796  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11797  010612  0EF1               	movlw	-15
 11798  010614  006F FF8C  F032    	movff	plusw1,btemp
 11799  01061A  0EF9               	movlw	-7
 11800  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11801                           
 11802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11803                           ;stkvar	_mode @ sp[(-56)+54]
 11804  010622  0EFE               	movlw	-2
 11805  010624  006F FF8C  F032    	movff	plusw1,btemp
 11806  01062A  0E67               	movlw	103
 11807  01062C  1832               	xorwf	btemp^0,w,c
 11808  01062E  A4D8               	btfss	status,2,c
 11809  010630  D00B               	goto	u9570
 11810                           
 11811                           ;stkvar	_nmode @ sp[(-56)+55]
 11812  010632  0EFF               	movlw	-1
 11813  010634  006F FF8C  F032    	movff	plusw1,btemp
 11814  01063A  0E66               	movlw	102
 11815  01063C  1832               	xorwf	btemp^0,w,c
 11816  01063E  A4D8               	btfss	status,2,c
 11817  010640  D014               	goto	l1950
 11818                           
 11819                           ;stkvar	_e @ sp[(-56)+34]
 11820  010642  0EEB               	movlw	-21
 11821  010644  AEE3               	btfss	plusw1,7,c
 11822  010646  D011               	goto	l1950
 11823  010648                     u9570:
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11826                           ;stkvar	_m @ sp[(-56)+48]
 11827  010648  0EF8               	movlw	-8
 11828  01064A  50E3               	movf	plusw1,w,c
 11829  01064C  0F01               	addlw	1
 11830  01064E  6E32               	movwf	btemp^0,c
 11831  010650  0EF8               	movlw	-8
 11832  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11833  010658  6A32               	clrf	btemp^0,c
 11834  01065A  0EF9               	movlw	-7
 11835  01065C  50E3               	movf	plusw1,w,c
 11836  01065E  2032               	addwfc	btemp^0,w,c
 11837  010660  6E32               	movwf	btemp^0,c
 11838  010662  0EF9               	movlw	-7
 11839  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11840  01066A                     l1950:
 11841                           
 11842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11843                           ;stkvar	_nmode @ sp[(-56)+55]
 11844  01066A  0EFF               	movlw	-1
 11845  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11846  010672  0E66               	movlw	102
 11847  010674  1832               	xorwf	btemp^0,w,c
 11848  010676  A4D8               	btfss	status,2,c
 11849  010678  D03B               	goto	l9986
 11850                           
 11851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11852                           ;stkvar	_e @ sp[(-56)+34]
 11853  01067A  0EEB               	movlw	-21
 11854  01067C  AEE3               	btfss	plusw1,7,c
 11855  01067E  D01C               	goto	l9982
 11856                           
 11857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11858  010680  0E00               	movlw	0
 11859  010682  6E3A               	movwf	(btemp+8)^0,c
 11860  010684  0E00               	movlw	0
 11861  010686  6E3B               	movwf	(btemp+9)^0,c
 11862  010688  0E80               	movlw	128
 11863  01068A  6E3C               	movwf	(btemp+10)^0,c
 11864  01068C  0E3F               	movlw	63
 11865  01068E  6E3D               	movwf	(btemp+11)^0,c
 11866                           
 11867                           ;stkvar	_u @ sp[(-56)+12]
 11868  010690  0ED4               	movlw	-44
 11869  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11870  010698  0ED5               	movlw	-43
 11871  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11872  0106A0  0ED6               	movlw	-42
 11873  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11874  0106A8  0ED7               	movlw	-41
 11875  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11878                           ;stkvar	_e @ sp[(-56)+34]
 11879  0106B0  0EEA               	movlw	-22
 11880  0106B2  6AE3               	clrf	plusw1,c
 11881  0106B4  0EEB               	movlw	-21
 11882  0106B6  6AE3               	clrf	plusw1,c
 11883  0106B8                     l9982:
 11884                           
 11885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11886                           ;stkvar	_mode @ sp[(-56)+54]
 11887  0106B8  0EFE               	movlw	-2
 11888  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11889  0106C0  0E67               	movlw	103
 11890  0106C2  1832               	xorwf	btemp^0,w,c
 11891  0106C4  B4D8               	btfsc	status,2,c
 11892  0106C6  D014               	goto	l9986
 11893                           
 11894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11895                           ;stkvar	_e @ sp[(-56)+34]
 11896                           ;stkvar	_m @ sp[(-56)+48]
 11897  0106C8  0EF8               	movlw	-8
 11898  0106CA  50E3               	movf	plusw1,w,c
 11899  0106CC  6E32               	movwf	btemp^0,c
 11900  0106CE  0EEA               	movlw	-22
 11901  0106D0  50E3               	movf	plusw1,w,c
 11902  0106D2  2632               	addwf	btemp^0,f,c
 11903  0106D4  0EF8               	movlw	-8
 11904  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11905  0106DC  0EF9               	movlw	-7
 11906  0106DE  50E3               	movf	plusw1,w,c
 11907  0106E0  6E32               	movwf	btemp^0,c
 11908  0106E2  0EEB               	movlw	-21
 11909  0106E4  50E3               	movf	plusw1,w,c
 11910  0106E6  2232               	addwfc	btemp^0,f,c
 11911  0106E8  0EF9               	movlw	-7
 11912  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11913  0106F0                     l9986:
 11914                           
 11915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11916                           ;stkvar	_i @ sp[(-56)+36]
 11917  0106F0  0EEC               	movlw	-20
 11918  0106F2  6AE3               	clrf	plusw1,c
 11919  0106F4  0EED               	movlw	-19
 11920  0106F6  6AE3               	clrf	plusw1,c
 11921                           
 11922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11923                           ;stkvar	_g @ sp[(-56)+16]
 11924  0106F8  0ED8               	movlw	-40
 11925  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11926  010700  0ED9               	movlw	-39
 11927  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11928  010708  0EDA               	movlw	-38
 11929  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11930  010710  0EDB               	movlw	-37
 11931  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11932                           
 11933                           ;stkvar	_h @ sp[(-56)+24]
 11934  010718  0EE0               	movlw	-32
 11935  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11936  010720  0EE1               	movlw	-31
 11937  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11938  010728  0EE2               	movlw	-30
 11939  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11940  010730  0EE3               	movlw	-29
 11941  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11944                           ;stkvar	_u @ sp[(-56)+12]
 11945  010738  0ED4               	movlw	-44
 11946  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11947  010740  0ED5               	movlw	-43
 11948  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11949  010748  0ED6               	movlw	-42
 11950  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11951  010750  0ED7               	movlw	-41
 11952  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11953                           
 11954                           ;stkvar	_ou @ sp[(-56)+28]
 11955  010758  0EE4               	movlw	-28
 11956  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11957  010760  0EE5               	movlw	-27
 11958  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11959  010768  0EE6               	movlw	-26
 11960  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11961  010770  0EE7               	movlw	-25
 11962  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11963                           
 11964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11965  010778  D0D6               	goto	l10002
 11966  01077A                     l9992:
 11967                           
 11968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11969                           ;stkvar	_u @ sp[(-56)+12]
 11970  01077A  0ED4               	movlw	-44
 11971  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11972  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11973  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11974  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11975                           
 11976                           ;stkvar	_h @ sp[(-60)+24]
 11977  010794  0EDC               	movlw	-36
 11978  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11979  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11980  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11981  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11982  0107AE  ECDB  F09A         	call	___fldiv	;wreg free
 11983  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11984  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11985  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11986  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11987  0107CA  EC0B  F0A4         	call	_floorf	;wreg free
 11988                           
 11989                           ;stkvar	_l @ sp[(-56)+20]
 11990  0107CE  0EDC               	movlw	-36
 11991  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11992  0107D6  0EDD               	movlw	-35
 11993  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11994  0107DE  0EDE               	movlw	-34
 11995  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11996  0107E6  0EDF               	movlw	-33
 11997  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11998                           
 11999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12000                           ;stkvar	_l @ sp[(-56)+20]
 12001  0107EE  0EDC               	movlw	-36
 12002  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12003  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12004  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12005  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12006  010808  EC37  F0B2         	call	___fltol	;wreg free
 12007  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 12008  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12009                           
 12010                           ;stkvar	_d @ sp[(-56)+44]
 12011  010818  0EF4               	movlw	-12
 12012  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12013  010820  0EF5               	movlw	-11
 12014  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12015                           
 12016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12017                           ;stkvar	_u @ sp[(-56)+12]
 12018  010828  0ED4               	movlw	-44
 12019  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12020  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12021  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12022  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12023                           
 12024                           ;stkvar	_l @ sp[(-60)+20]
 12025  010842  0ED8               	movlw	-40
 12026  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12027  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12028  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12029  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12030  01085C  ECE8  F092         	call	___flmul	;wreg free
 12031  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 12032  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12033  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12034  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12035                           
 12036                           ;stkvar	_h @ sp[(-60)+24]
 12037  010878  0EDC               	movlw	-36
 12038  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12039  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12040  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12041  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12042  010892  EC8F  F0C1         	call	___flsub	;wreg free
 12043                           
 12044                           ;stkvar	_h @ sp[(-56)+24]
 12045  010896  0EE0               	movlw	-32
 12046  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 12047  01089E  0EE1               	movlw	-31
 12048  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12049  0108A6  0EE2               	movlw	-30
 12050  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12051  0108AE  0EE3               	movlw	-29
 12052  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12053                           
 12054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12055  0108B6  0E00               	movlw	0
 12056  0108B8  6EE6               	movwf	postinc1,c
 12057  0108BA  0E00               	movlw	0
 12058  0108BC  6EE6               	movwf	postinc1,c
 12059  0108BE  0E20               	movlw	32
 12060  0108C0  6EE6               	movwf	postinc1,c
 12061  0108C2  0E41               	movlw	65
 12062  0108C4  6EE6               	movwf	postinc1,c
 12063                           
 12064                           ;stkvar	_u @ sp[(-60)+12]
 12065  0108C6  0ED0               	movlw	-48
 12066  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12067  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12068  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12069  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12070  0108E0  ECDB  F09A         	call	___fldiv	;wreg free
 12071                           
 12072                           ;stkvar	_u @ sp[(-56)+12]
 12073  0108E4  0ED4               	movlw	-44
 12074  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12075  0108EC  0ED5               	movlw	-43
 12076  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12077  0108F4  0ED6               	movlw	-42
 12078  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12079  0108FC  0ED7               	movlw	-41
 12080  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12081                           
 12082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12083                           ;stkvar	_i @ sp[(-56)+36]
 12084  010904  0EEC               	movlw	-20
 12085  010906  50E3               	movf	plusw1,w,c
 12086  010908  0F01               	addlw	1
 12087  01090A  6E32               	movwf	btemp^0,c
 12088  01090C  0EEC               	movlw	-20
 12089  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12090  010914  6A32               	clrf	btemp^0,c
 12091  010916  0EED               	movlw	-19
 12092  010918  50E3               	movf	plusw1,w,c
 12093  01091A  2032               	addwfc	btemp^0,w,c
 12094  01091C  6E32               	movwf	btemp^0,c
 12095  01091E  0EED               	movlw	-19
 12096  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 12097  010926                     l10002:
 12098                           
 12099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12100                           ;stkvar	_m @ sp[(-56)+48]
 12101                           ;stkvar	_i @ sp[(-56)+36]
 12102  010926  50E1               	movf	fsr1l,w,c
 12103  010928  0FEC               	addlw	-20
 12104  01092A  6ED9               	movwf	fsr2l,c
 12105  01092C  50E2               	movf	fsr1h,w,c
 12106  01092E  6EDA               	movwf	fsr2h,c
 12107  010930  0EFF               	movlw	255
 12108  010932  22DA               	addwfc	fsr2h,f,c
 12109  010934  0EF8               	movlw	-8
 12110  010936  50E3               	movf	plusw1,w,c
 12111  010938  5CDE               	subwf	postinc2,w,c
 12112  01093A  50DE               	movf	postinc2,w,c
 12113  01093C  0A80               	xorlw	128
 12114  01093E  6E32               	movwf	btemp^0,c
 12115  010940  0EF9               	movlw	-7
 12116  010942  50E3               	movf	plusw1,w,c
 12117  010944  0A80               	xorlw	128
 12118  010946  5832               	subwfb	btemp^0,w,c
 12119  010948  A0D8               	btfss	status,0,c
 12120  01094A  D717               	goto	l9992
 12121                           
 12122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12123  01094C  0E00               	movlw	0
 12124  01094E  6EE6               	movwf	postinc1,c
 12125  010950  0E00               	movlw	0
 12126  010952  6EE6               	movwf	postinc1,c
 12127  010954  0EA0               	movlw	160
 12128  010956  6EE6               	movwf	postinc1,c
 12129  010958  0E40               	movlw	64
 12130  01095A  6EE6               	movwf	postinc1,c
 12131                           
 12132                           ;stkvar	_u @ sp[(-60)+12]
 12133  01095C  0ED0               	movlw	-48
 12134  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12135  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12136  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12137  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12138  010976  ECE8  F092         	call	___flmul	;wreg free
 12139                           
 12140                           ;stkvar	_l @ sp[(-56)+20]
 12141  01097A  0EDC               	movlw	-36
 12142  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12143  010982  0EDD               	movlw	-35
 12144  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12145  01098A  0EDE               	movlw	-34
 12146  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12147  010992  0EDF               	movlw	-33
 12148  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12149                           
 12150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12151                           ;stkvar	_l @ sp[(-56)+20]
 12152  01099A  0EDC               	movlw	-36
 12153  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12154  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12155  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12156  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12157                           
 12158                           ;stkvar	_h @ sp[(-60)+24]
 12159  0109B4  0EDC               	movlw	-36
 12160  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12161  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12162  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12163  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12164  0109CE  ECF0  F0B2         	call	___flge	;wreg free
 12165  0109D2  A032               	btfss	btemp& (0+255),0,c
 12166  0109D4  D021               	goto	u9640
 12167                           
 12168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12169                           ;stkvar	_l @ sp[(-56)+20]
 12170                           
 12171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12172                           
 12173                           ;stkvar	_l @ sp[(-56)+20]
 12174                           
 12175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12176  0109D6  0EDC               	movlw	-36
 12177  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12178  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12179  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12180  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12181                           
 12182                           ;stkvar	_h @ sp[(-60)+24]
 12183  0109F0  0EDC               	movlw	-36
 12184  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12185  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12186  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12187  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12188  010A0A  EC11  F0BA         	call	___fleq	;wreg free
 12189  010A0E  A032               	btfss	btemp& (0+255),0,c
 12190  010A10  D01B               	goto	l10016
 12191                           
 12192                           ;stkvar	_d @ sp[(-56)+44]
 12193  010A12  0EF4               	movlw	-12
 12194  010A14  B0E3               	btfsc	plusw1,0,c
 12195  010A16  D018               	goto	l10016
 12196  010A18                     u9640:
 12197                           
 12198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12199  010A18  0E00               	movlw	0
 12200  010A1A  6E3A               	movwf	(btemp+8)^0,c
 12201  010A1C  0E00               	movlw	0
 12202  010A1E  6E3B               	movwf	(btemp+9)^0,c
 12203  010A20  0E00               	movlw	0
 12204  010A22  6E3C               	movwf	(btemp+10)^0,c
 12205  010A24  0E00               	movlw	0
 12206  010A26  6E3D               	movwf	(btemp+11)^0,c
 12207                           
 12208                           ;stkvar	_l @ sp[(-56)+20]
 12209  010A28  0EDC               	movlw	-36
 12210  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12211  010A30  0EDD               	movlw	-35
 12212  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12213  010A38  0EDE               	movlw	-34
 12214  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12215  010A40  0EDF               	movlw	-33
 12216  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12217  010A48                     l10016:
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12220                           ;stkvar	_l @ sp[(-56)+20]
 12221  010A48  0EDC               	movlw	-36
 12222  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12223  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12224  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12225  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12226                           
 12227                           ;stkvar	_g @ sp[(-60)+16]
 12228  010A62  0ED4               	movlw	-44
 12229  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12231  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12232  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12233  010A7C  ECFD  F096         	call	___fladd	;wreg free
 12234                           
 12235                           ;stkvar	_h @ sp[(-56)+24]
 12236  010A80  0EE0               	movlw	-32
 12237  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 12238  010A88  0EE1               	movlw	-31
 12239  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12240  010A90  0EE2               	movlw	-30
 12241  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12242  010A98  0EE3               	movlw	-29
 12243  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12244                           
 12245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12246                           ;stkvar	_ou @ sp[(-56)+28]
 12247  010AA0  0EE4               	movlw	-28
 12248  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12249  010AA8  0EE5               	movlw	-27
 12250  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12251  010AB0  0EE6               	movlw	-26
 12252  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12253  010AB8  0EE7               	movlw	-25
 12254  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12255                           
 12256                           ;stkvar	_u @ sp[(-56)+12]
 12257  010AC0  0ED4               	movlw	-44
 12258  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12259  010AC8  0ED5               	movlw	-43
 12260  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12261  010AD0  0ED6               	movlw	-42
 12262  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12263  010AD8  0ED7               	movlw	-41
 12264  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12265                           
 12266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12267                           ;stkvar	_nmode @ sp[(-56)+55]
 12268  010AE0  0EFF               	movlw	-1
 12269  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 12270  010AE8  0E65               	movlw	101
 12271  010AEA  1832               	xorwf	btemp^0,w,c
 12272  010AEC  B4D8               	btfsc	status,2,c
 12273  010AEE  D011               	goto	l10024
 12274                           
 12275                           ;stkvar	_e @ sp[(-56)+34]
 12276                           ;stkvar	_ne @ sp[(-56)+46]
 12277  010AF0  0EEA               	movlw	-22
 12278  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 12279  010AF8  0EF6               	movlw	-10
 12280  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12281  010B00  0EEB               	movlw	-21
 12282  010B02  006F FF8C  F032    	movff	plusw1,btemp
 12283  010B08  0EF7               	movlw	-9
 12284  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12285  010B10  D004               	goto	l1965
 12286  010B12                     l10024:
 12287                           
 12288                           ;stkvar	_ne @ sp[(-56)+46]
 12289  010B12  0EF6               	movlw	-10
 12290  010B14  6AE3               	clrf	plusw1,c
 12291  010B16  0EF7               	movlw	-9
 12292  010B18  6AE3               	clrf	plusw1,c
 12293  010B1A                     l1965:
 12294                           
 12295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12296                           ;stkvar	_pp @ sp[(-56)+50]
 12297  010B1A  0EFA               	movlw	-6
 12298  010B1C  6AE3               	clrf	plusw1,c
 12299  010B1E  0EFB               	movlw	-5
 12300  010B20  6AE3               	clrf	plusw1,c
 12301                           
 12302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12303                           ;stkvar	_t @ sp[(-56)+52]
 12304  010B22  0EFC               	movlw	-4
 12305  010B24  6AE3               	clrf	plusw1,c
 12306  010B26  0EFD               	movlw	-3
 12307  010B28  6AE3               	clrf	plusw1,c
 12308                           
 12309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12310                           ;stkvar	_i @ sp[(-56)+36]
 12311  010B2A  0EEC               	movlw	-20
 12312  010B2C  6AE3               	clrf	plusw1,c
 12313  010B2E  0EED               	movlw	-19
 12314  010B30  6AE3               	clrf	plusw1,c
 12315                           
 12316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12317  010B32  D1B7               	goto	l10076
 12318  010B34                     l10026:
 12319                           
 12320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12321                           ;stkvar	_u @ sp[(-56)+12]
 12322  010B34  0ED4               	movlw	-44
 12323  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12326  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12327                           
 12328                           ;stkvar	_h @ sp[(-60)+24]
 12329  010B4E  0EDC               	movlw	-36
 12330  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12331  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12334  010B68  ECDB  F09A         	call	___fldiv	;wreg free
 12335  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 12336  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12337  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12338  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12339  010B84  EC0B  F0A4         	call	_floorf	;wreg free
 12340                           
 12341                           ;stkvar	_l @ sp[(-56)+20]
 12342  010B88  0EDC               	movlw	-36
 12343  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12344  010B90  0EDD               	movlw	-35
 12345  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12346  010B98  0EDE               	movlw	-34
 12347  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12348  010BA0  0EDF               	movlw	-33
 12349  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12350                           
 12351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12352                           ;stkvar	_l @ sp[(-56)+20]
 12353  010BA8  0EDC               	movlw	-36
 12354  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12355  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12356  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12357  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12358  010BC2  EC37  F0B2         	call	___fltol	;wreg free
 12359  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 12360  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12361                           
 12362                           ;stkvar	_d @ sp[(-56)+44]
 12363  010BD2  0EF4               	movlw	-12
 12364  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12365  010BDA  0EF5               	movlw	-11
 12366  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12367                           
 12368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12369  010BE2  B81F               	btfsc	_flags^0,4,c
 12370  010BE4  D026               	goto	l10040
 12371                           
 12372                           ;stkvar	_d @ sp[(-56)+44]
 12373  010BE6  0EF4               	movlw	-12
 12374  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 12375  010BEE  0EF5               	movlw	-11
 12376  010BF0  50E3               	movf	plusw1,w,c
 12377  010BF2  1032               	iorwf	btemp^0,w,c
 12378  010BF4  A4D8               	btfss	status,2,c
 12379  010BF6  D01D               	goto	l10040
 12380                           
 12381                           ;stkvar	_mode @ sp[(-56)+54]
 12382  010BF8  0EFE               	movlw	-2
 12383  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 12384  010C00  0E67               	movlw	103
 12385  010C02  1832               	xorwf	btemp^0,w,c
 12386  010C04  A4D8               	btfss	status,2,c
 12387  010C06  D015               	goto	l10040
 12388                           
 12389                           ;stkvar	_ne @ sp[(-56)+46]
 12390  010C08  0EF7               	movlw	-9
 12391  010C0A  AEE3               	btfss	plusw1,7,c
 12392  010C0C  D012               	goto	l10040
 12393                           
 12394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12395                           ;stkvar	_t @ sp[(-56)+52]
 12396  010C0E  0EFC               	movlw	-4
 12397  010C10  50E3               	movf	plusw1,w,c
 12398  010C12  0F01               	addlw	1
 12399  010C14  6E32               	movwf	btemp^0,c
 12400  010C16  0EFC               	movlw	-4
 12401  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 12402  010C1E  6A32               	clrf	btemp^0,c
 12403  010C20  0EFD               	movlw	-3
 12404  010C22  50E3               	movf	plusw1,w,c
 12405  010C24  2032               	addwfc	btemp^0,w,c
 12406  010C26  6E32               	movwf	btemp^0,c
 12407  010C28  0EFD               	movlw	-3
 12408  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12409                           
 12410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12411  010C30  D0AF               	goto	l10068
 12412  010C32                     l10040:
 12413                           
 12414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12415                           ;stkvar	_pp @ sp[(-56)+50]
 12416  010C32  0EFA               	movlw	-6
 12417  010C34  006F FF8C  F032    	movff	plusw1,btemp
 12418  010C3A  0EFB               	movlw	-5
 12419  010C3C  50E3               	movf	plusw1,w,c
 12420  010C3E  1032               	iorwf	btemp^0,w,c
 12421  010C40  A4D8               	btfss	status,2,c
 12422  010C42  D070               	goto	l10060
 12423                           
 12424                           ;stkvar	_ne @ sp[(-56)+46]
 12425  010C44  0EF7               	movlw	-9
 12426  010C46  AEE3               	btfss	plusw1,7,c
 12427  010C48  D06D               	goto	l10060
 12428                           
 12429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12430                           ;stkvar	_n @ sp[(-56)+32]
 12431  010C4A  0EE8               	movlw	-24
 12432  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12433  010C52  0EE9               	movlw	-23
 12434  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 12435  010C5A  0E7C               	movlw	low _dbuf
 12436  010C5C  243C               	addwf	(btemp+10)^0,w,c
 12437  010C5E  6ED9               	movwf	fsr2l,c
 12438  010C60  0E01               	movlw	high _dbuf
 12439  010C62  203D               	addwfc	(btemp+11)^0,w,c
 12440  010C64  6EDA               	movwf	fsr2h,c
 12441  010C66  0E2E               	movlw	46
 12442  010C68  6EDF               	movwf	indf2,c
 12443                           
 12444                           ;stkvar	_n @ sp[(-56)+32]
 12445  010C6A  0EE8               	movlw	-24
 12446  010C6C  50E3               	movf	plusw1,w,c
 12447  010C6E  0F01               	addlw	1
 12448  010C70  6E32               	movwf	btemp^0,c
 12449  010C72  0EE8               	movlw	-24
 12450  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12451  010C7A  6A32               	clrf	btemp^0,c
 12452  010C7C  0EE9               	movlw	-23
 12453  010C7E  50E3               	movf	plusw1,w,c
 12454  010C80  2032               	addwfc	btemp^0,w,c
 12455  010C82  6E32               	movwf	btemp^0,c
 12456  010C84  0EE9               	movlw	-23
 12457  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12460                           ;stkvar	_w @ sp[(-56)+38]
 12461  010C8C  50E1               	movf	fsr1l,w,c
 12462  010C8E  0FEE               	addlw	-18
 12463  010C90  6ED9               	movwf	fsr2l,c
 12464  010C92  50E2               	movf	fsr1h,w,c
 12465  010C94  6EDA               	movwf	fsr2h,c
 12466  010C96  0EFF               	movlw	255
 12467  010C98  22DA               	addwfc	fsr2h,f,c
 12468  010C9A  06DE               	decf	postinc2,f,c
 12469  010C9C  0E00               	movlw	0
 12470  010C9E  5ADD               	subwfb	postdec2,f,c
 12471                           
 12472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12473  010CA0  0E01               	movlw	1
 12474  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12475  010CA4  0E00               	movlw	0
 12476  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12477                           
 12478                           ;stkvar	_pp @ sp[(-56)+50]
 12479  010CA8  0EFA               	movlw	-6
 12480  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12481  010CB0  0EFB               	movlw	-5
 12482  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12483  010CB8  D035               	goto	l10060
 12484  010CBA                     l10052:
 12485                           
 12486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12487                           ;stkvar	_n @ sp[(-56)+32]
 12488  010CBA  0EE8               	movlw	-24
 12489  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12490  010CC2  0EE9               	movlw	-23
 12491  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12492  010CCA  0E7C               	movlw	low _dbuf
 12493  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12494  010CCE  6ED9               	movwf	fsr2l,c
 12495  010CD0  0E01               	movlw	high _dbuf
 12496  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12497  010CD4  6EDA               	movwf	fsr2h,c
 12498  010CD6  0E30               	movlw	48
 12499  010CD8  6EDF               	movwf	indf2,c
 12500                           
 12501                           ;stkvar	_n @ sp[(-56)+32]
 12502  010CDA  0EE8               	movlw	-24
 12503  010CDC  50E3               	movf	plusw1,w,c
 12504  010CDE  0F01               	addlw	1
 12505  010CE0  6E32               	movwf	btemp^0,c
 12506  010CE2  0EE8               	movlw	-24
 12507  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12508  010CEA  6A32               	clrf	btemp^0,c
 12509  010CEC  0EE9               	movlw	-23
 12510  010CEE  50E3               	movf	plusw1,w,c
 12511  010CF0  2032               	addwfc	btemp^0,w,c
 12512  010CF2  6E32               	movwf	btemp^0,c
 12513  010CF4  0EE9               	movlw	-23
 12514  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12517                           ;stkvar	_w @ sp[(-56)+38]
 12518  010CFC  50E1               	movf	fsr1l,w,c
 12519  010CFE  0FEE               	addlw	-18
 12520  010D00  6ED9               	movwf	fsr2l,c
 12521  010D02  50E2               	movf	fsr1h,w,c
 12522  010D04  6EDA               	movwf	fsr2h,c
 12523  010D06  0EFF               	movlw	255
 12524  010D08  22DA               	addwfc	fsr2h,f,c
 12525  010D0A  06DE               	decf	postinc2,f,c
 12526  010D0C  0E00               	movlw	0
 12527  010D0E  5ADD               	subwfb	postdec2,f,c
 12528                           
 12529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12530                           ;stkvar	_t @ sp[(-56)+52]
 12531  010D10  50E1               	movf	fsr1l,w,c
 12532  010D12  0FFC               	addlw	-4
 12533  010D14  6ED9               	movwf	fsr2l,c
 12534  010D16  50E2               	movf	fsr1h,w,c
 12535  010D18  6EDA               	movwf	fsr2h,c
 12536  010D1A  0EFF               	movlw	255
 12537  010D1C  22DA               	addwfc	fsr2h,f,c
 12538  010D1E  06DE               	decf	postinc2,f,c
 12539  010D20  0E00               	movlw	0
 12540  010D22  5ADD               	subwfb	postdec2,f,c
 12541  010D24                     l10060:
 12542                           
 12543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12544                           ;stkvar	_t @ sp[(-56)+52]
 12545  010D24  0EFC               	movlw	-4
 12546  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12547  010D2C  0EFD               	movlw	-3
 12548  010D2E  50E3               	movf	plusw1,w,c
 12549  010D30  1032               	iorwf	btemp^0,w,c
 12550  010D32  A4D8               	btfss	status,2,c
 12551  010D34  D7C2               	goto	l10052
 12552                           
 12553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12554                           ;stkvar	_n @ sp[(-56)+32]
 12555  010D36  0EE8               	movlw	-24
 12556  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12557  010D3E  0EE9               	movlw	-23
 12558  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12559  010D46  0E7C               	movlw	low _dbuf
 12560  010D48  243C               	addwf	(btemp+10)^0,w,c
 12561  010D4A  6ED9               	movwf	fsr2l,c
 12562  010D4C  0E01               	movlw	high _dbuf
 12563  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12564  010D50  6EDA               	movwf	fsr2h,c
 12565                           
 12566                           ;stkvar	_d @ sp[(-56)+44]
 12567  010D52  0EF4               	movlw	-12
 12568  010D54  50E3               	movf	plusw1,w,c
 12569  010D56  0F30               	addlw	48
 12570  010D58  6EDF               	movwf	indf2,c
 12571                           
 12572                           ;stkvar	_n @ sp[(-56)+32]
 12573  010D5A  0EE8               	movlw	-24
 12574  010D5C  50E3               	movf	plusw1,w,c
 12575  010D5E  0F01               	addlw	1
 12576  010D60  6E32               	movwf	btemp^0,c
 12577  010D62  0EE8               	movlw	-24
 12578  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12579  010D6A  6A32               	clrf	btemp^0,c
 12580  010D6C  0EE9               	movlw	-23
 12581  010D6E  50E3               	movf	plusw1,w,c
 12582  010D70  2032               	addwfc	btemp^0,w,c
 12583  010D72  6E32               	movwf	btemp^0,c
 12584  010D74  0EE9               	movlw	-23
 12585  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12586                           
 12587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12588                           ;stkvar	_w @ sp[(-56)+38]
 12589  010D7C  50E1               	movf	fsr1l,w,c
 12590  010D7E  0FEE               	addlw	-18
 12591  010D80  6ED9               	movwf	fsr2l,c
 12592  010D82  50E2               	movf	fsr1h,w,c
 12593  010D84  6EDA               	movwf	fsr2h,c
 12594  010D86  0EFF               	movlw	255
 12595  010D88  22DA               	addwfc	fsr2h,f,c
 12596  010D8A  06DE               	decf	postinc2,f,c
 12597  010D8C  0E00               	movlw	0
 12598  010D8E  5ADD               	subwfb	postdec2,f,c
 12599  010D90                     l10068:
 12600                           
 12601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12602                           ;stkvar	_u @ sp[(-56)+12]
 12603  010D90  0ED4               	movlw	-44
 12604  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12605  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12606  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12607  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12608                           
 12609                           ;stkvar	_l @ sp[(-60)+20]
 12610  010DAA  0ED8               	movlw	-40
 12611  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12612  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12613  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12614  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12615  010DC4  ECE8  F092         	call	___flmul	;wreg free
 12616  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12617  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12618  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12619  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12620                           
 12621                           ;stkvar	_h @ sp[(-60)+24]
 12622  010DE0  0EDC               	movlw	-36
 12623  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12624  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12625  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12626  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12627  010DFA  EC8F  F0C1         	call	___flsub	;wreg free
 12628                           
 12629                           ;stkvar	_h @ sp[(-56)+24]
 12630  010DFE  0EE0               	movlw	-32
 12631  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12632  010E06  0EE1               	movlw	-31
 12633  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12634  010E0E  0EE2               	movlw	-30
 12635  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12636  010E16  0EE3               	movlw	-29
 12637  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12638                           
 12639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12640  010E1E  0E00               	movlw	0
 12641  010E20  6EE6               	movwf	postinc1,c
 12642  010E22  0E00               	movlw	0
 12643  010E24  6EE6               	movwf	postinc1,c
 12644  010E26  0E20               	movlw	32
 12645  010E28  6EE6               	movwf	postinc1,c
 12646  010E2A  0E41               	movlw	65
 12647  010E2C  6EE6               	movwf	postinc1,c
 12648                           
 12649                           ;stkvar	_u @ sp[(-60)+12]
 12650  010E2E  0ED0               	movlw	-48
 12651  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12652  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12653  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12654  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12655  010E48  ECDB  F09A         	call	___fldiv	;wreg free
 12656                           
 12657                           ;stkvar	_u @ sp[(-56)+12]
 12658  010E4C  0ED4               	movlw	-44
 12659  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12660  010E54  0ED5               	movlw	-43
 12661  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12662  010E5C  0ED6               	movlw	-42
 12663  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12664  010E64  0ED7               	movlw	-41
 12665  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12666                           
 12667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12668                           ;stkvar	_ne @ sp[(-56)+46]
 12669  010E6C  50E1               	movf	fsr1l,w,c
 12670  010E6E  0FF6               	addlw	-10
 12671  010E70  6ED9               	movwf	fsr2l,c
 12672  010E72  50E2               	movf	fsr1h,w,c
 12673  010E74  6EDA               	movwf	fsr2h,c
 12674  010E76  0EFF               	movlw	255
 12675  010E78  22DA               	addwfc	fsr2h,f,c
 12676  010E7A  06DE               	decf	postinc2,f,c
 12677  010E7C  0E00               	movlw	0
 12678  010E7E  5ADD               	subwfb	postdec2,f,c
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12681                           ;stkvar	_i @ sp[(-56)+36]
 12682  010E80  0EEC               	movlw	-20
 12683  010E82  50E3               	movf	plusw1,w,c
 12684  010E84  0F01               	addlw	1
 12685  010E86  6E32               	movwf	btemp^0,c
 12686  010E88  0EEC               	movlw	-20
 12687  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12688  010E90  6A32               	clrf	btemp^0,c
 12689  010E92  0EED               	movlw	-19
 12690  010E94  50E3               	movf	plusw1,w,c
 12691  010E96  2032               	addwfc	btemp^0,w,c
 12692  010E98  6E32               	movwf	btemp^0,c
 12693  010E9A  0EED               	movlw	-19
 12694  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12695  010EA2                     l10076:
 12696                           
 12697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12698                           ;stkvar	_m @ sp[(-56)+48]
 12699                           ;stkvar	_i @ sp[(-56)+36]
 12700  010EA2  50E1               	movf	fsr1l,w,c
 12701  010EA4  0FEC               	addlw	-20
 12702  010EA6  6ED9               	movwf	fsr2l,c
 12703  010EA8  50E2               	movf	fsr1h,w,c
 12704  010EAA  6EDA               	movwf	fsr2h,c
 12705  010EAC  0EFF               	movlw	255
 12706  010EAE  22DA               	addwfc	fsr2h,f,c
 12707  010EB0  0EF8               	movlw	-8
 12708  010EB2  50E3               	movf	plusw1,w,c
 12709  010EB4  5CDE               	subwf	postinc2,w,c
 12710  010EB6  50DE               	movf	postinc2,w,c
 12711  010EB8  0A80               	xorlw	128
 12712  010EBA  6E32               	movwf	btemp^0,c
 12713  010EBC  0EF9               	movlw	-7
 12714  010EBE  50E3               	movf	plusw1,w,c
 12715  010EC0  0A80               	xorlw	128
 12716  010EC2  5832               	subwfb	btemp^0,w,c
 12717  010EC4  B0D8               	btfsc	status,0,c
 12718  010EC6  D00E               	goto	u9740
 12719                           
 12720                           ;stkvar	_n @ sp[(-56)+32]
 12721  010EC8  0EE9               	movlw	-23
 12722  010ECA  BEE3               	btfsc	plusw1,7,c
 12723  010ECC  D633               	goto	l10026
 12724  010ECE  0EE9               	movlw	-23
 12725  010ED0  50E3               	movf	plusw1,w,c
 12726  010ED2  E108               	bnz	u9740
 12727  010ED4  0EE8               	movlw	-24
 12728  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12729  010EDC  0E4B               	movlw	75
 12730  010EDE  5E32               	subwf	btemp^0,f,c
 12731  010EE0  A0D8               	btfss	status,0,c
 12732  010EE2  D628               	goto	l10026
 12733  010EE4                     u9740:
 12734                           
 12735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12736                           ;stkvar	_pp @ sp[(-56)+50]
 12737  010EE4  0EFA               	movlw	-6
 12738  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12739  010EEC  0EFB               	movlw	-5
 12740  010EEE  50E3               	movf	plusw1,w,c
 12741  010EF0  1032               	iorwf	btemp^0,w,c
 12742  010EF2  B4D8               	btfsc	status,2,c
 12743  010EF4  A81F               	btfss	_flags^0,4,c
 12744  010EF6  D021               	goto	l10088
 12745                           
 12746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12747                           ;stkvar	_n @ sp[(-56)+32]
 12748  010EF8  0EE8               	movlw	-24
 12749  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12750  010F00  0EE9               	movlw	-23
 12751  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12752  010F08  0E7C               	movlw	low _dbuf
 12753  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12754  010F0C  6ED9               	movwf	fsr2l,c
 12755  010F0E  0E01               	movlw	high _dbuf
 12756  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12757  010F12  6EDA               	movwf	fsr2h,c
 12758  010F14  0E2E               	movlw	46
 12759  010F16  6EDF               	movwf	indf2,c
 12760                           
 12761                           ;stkvar	_n @ sp[(-56)+32]
 12762  010F18  0EE8               	movlw	-24
 12763  010F1A  50E3               	movf	plusw1,w,c
 12764  010F1C  0F01               	addlw	1
 12765  010F1E  6E32               	movwf	btemp^0,c
 12766  010F20  0EE8               	movlw	-24
 12767  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12768  010F28  6A32               	clrf	btemp^0,c
 12769  010F2A  0EE9               	movlw	-23
 12770  010F2C  50E3               	movf	plusw1,w,c
 12771  010F2E  2032               	addwfc	btemp^0,w,c
 12772  010F30  6E32               	movwf	btemp^0,c
 12773  010F32  0EE9               	movlw	-23
 12774  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12775  010F3A                     l10088:
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12778                           ;stkvar	_n @ sp[(-56)+32]
 12779  010F3A  0EE8               	movlw	-24
 12780  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12781  010F42  0EE9               	movlw	-23
 12782  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12783  010F4A  0E7C               	movlw	low _dbuf
 12784  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12785  010F4E  6ED9               	movwf	fsr2l,c
 12786  010F50  0E01               	movlw	high _dbuf
 12787  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12788  010F54  6EDA               	movwf	fsr2h,c
 12789  010F56  0E00               	movlw	0
 12790  010F58  6EDF               	movwf	indf2,c
 12791                           
 12792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12793                           ;stkvar	_nmode @ sp[(-56)+55]
 12794  010F5A  0EFF               	movlw	-1
 12795  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12796  010F62  0E65               	movlw	101
 12797  010F64  1832               	xorwf	btemp^0,w,c
 12798  010F66  A4D8               	btfss	status,2,c
 12799  010F68  EF16  F081         	goto	l9892
 12800                           
 12801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12802  010F6C  0E4F               	movlw	79
 12803  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12804  010F70  0E00               	movlw	0
 12805  010F72  6E3D               	movwf	(btemp+11)^0,c
 12806                           
 12807                           ;stkvar	_i @ sp[(-56)+36]
 12808  010F74  0EEC               	movlw	-20
 12809  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12810  010F7C  0EED               	movlw	-19
 12811  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12812                           
 12813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12814                           ;stkvar	_i @ sp[(-56)+36]
 12815  010F84  0EEC               	movlw	-20
 12816  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12817  010F8C  0EED               	movlw	-19
 12818  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12819  010F94  0E7C               	movlw	low _dbuf
 12820  010F96  243C               	addwf	(btemp+10)^0,w,c
 12821  010F98  6ED9               	movwf	fsr2l,c
 12822  010F9A  0E01               	movlw	high _dbuf
 12823  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12824  010F9E  6EDA               	movwf	fsr2h,c
 12825  010FA0  0E00               	movlw	0
 12826  010FA2  6EDF               	movwf	indf2,c
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12829                           ;stkvar	_sign @ sp[(-56)+42]
 12830  010FA4  0EF2               	movlw	-14
 12831  010FA6  6AE3               	clrf	plusw1,c
 12832  010FA8  0EF3               	movlw	-13
 12833  010FAA  6AE3               	clrf	plusw1,c
 12834                           
 12835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12836                           ;stkvar	_e @ sp[(-56)+34]
 12837  010FAC  0EEB               	movlw	-21
 12838  010FAE  AEE3               	btfss	plusw1,7,c
 12839  010FB0  D012               	goto	l10102
 12840                           
 12841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12842  010FB2  0E01               	movlw	1
 12843  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12844  010FB6  0E00               	movlw	0
 12845  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12846                           
 12847                           ;stkvar	_sign @ sp[(-56)+42]
 12848  010FBA  0EF2               	movlw	-14
 12849  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12850  010FC2  0EF3               	movlw	-13
 12851  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12852                           
 12853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12854                           ;stkvar	_e @ sp[(-56)+34]
 12855                           ;stkvar	_e @ sp[(-56)+34]
 12856  010FCA  0EEA               	movlw	-22
 12857  010FCC  6CE3               	negf	plusw1,c
 12858  010FCE  0EEB               	movlw	-21
 12859  010FD0  1EE3               	comf	plusw1,f,c
 12860  010FD2  B0D8               	btfsc	status,0,c
 12861  010FD4  2AE3               	incf	plusw1,f,c
 12862  010FD6                     l10102:
 12863                           
 12864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12865  010FD6  0E02               	movlw	2
 12866  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12867  010FDA  0E00               	movlw	0
 12868  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12869                           
 12870                           ;stkvar	_p @ sp[(-56)+40]
 12871  010FDE  0EF0               	movlw	-16
 12872  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12873  010FE6  0EF1               	movlw	-15
 12874  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12875                           
 12876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12877  010FEE  D051               	goto	l10114
 12878  010FF0                     l10104:
 12879                           
 12880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12881                           ;stkvar	_i @ sp[(-56)+36]
 12882  010FF0  50E1               	movf	fsr1l,w,c
 12883  010FF2  0FEC               	addlw	-20
 12884  010FF4  6ED9               	movwf	fsr2l,c
 12885  010FF6  50E2               	movf	fsr1h,w,c
 12886  010FF8  6EDA               	movwf	fsr2h,c
 12887  010FFA  0EFF               	movlw	255
 12888  010FFC  22DA               	addwfc	fsr2h,f,c
 12889  010FFE  06DE               	decf	postinc2,f,c
 12890  011000  0E00               	movlw	0
 12891  011002  5ADD               	subwfb	postdec2,f,c
 12892                           
 12893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12894                           ;stkvar	_i @ sp[(-56)+36]
 12895  011004  0EEC               	movlw	-20
 12896  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12897  01100C  0EED               	movlw	-19
 12898  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12899  011014  0E7C               	movlw	low _dbuf
 12900  011016  243C               	addwf	(btemp+10)^0,w,c
 12901  011018  6ED9               	movwf	fsr2l,c
 12902  01101A  0E01               	movlw	high _dbuf
 12903  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12904  01101E  6EDA               	movwf	fsr2h,c
 12905  011020  0E0A               	movlw	10
 12906  011022  6EE6               	movwf	postinc1,c
 12907  011024  0E00               	movlw	0
 12908  011026  6EE6               	movwf	postinc1,c
 12909                           
 12910                           ;stkvar	_e @ sp[(-58)+34]
 12911  011028  0EE8               	movlw	-24
 12912  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12913  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12914  011036  EC15  F0B6         	call	___awmod	;wreg free
 12915  01103A  5032               	movf	btemp^0,w,c
 12916  01103C  0F30               	addlw	48
 12917  01103E  6EDF               	movwf	indf2,c
 12918                           
 12919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12920  011040  0E0A               	movlw	10
 12921  011042  6EE6               	movwf	postinc1,c
 12922  011044  0E00               	movlw	0
 12923  011046  6EE6               	movwf	postinc1,c
 12924                           
 12925                           ;stkvar	_e @ sp[(-58)+34]
 12926  011048  0EE8               	movlw	-24
 12927  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12928  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12929  011056  ECA1  F0B3         	call	___awdiv	;wreg free
 12930                           
 12931                           ;stkvar	_e @ sp[(-56)+34]
 12932  01105A  0EEA               	movlw	-22
 12933  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12934  011062  0EEB               	movlw	-21
 12935  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12936                           
 12937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12938                           ;stkvar	_p @ sp[(-56)+40]
 12939  01106A  50E1               	movf	fsr1l,w,c
 12940  01106C  0FF0               	addlw	-16
 12941  01106E  6ED9               	movwf	fsr2l,c
 12942  011070  50E2               	movf	fsr1h,w,c
 12943  011072  6EDA               	movwf	fsr2h,c
 12944  011074  0EFF               	movlw	255
 12945  011076  22DA               	addwfc	fsr2h,f,c
 12946  011078  06DE               	decf	postinc2,f,c
 12947  01107A  0E00               	movlw	0
 12948  01107C  5ADD               	subwfb	postdec2,f,c
 12949                           
 12950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12951                           ;stkvar	_w @ sp[(-56)+38]
 12952  01107E  50E1               	movf	fsr1l,w,c
 12953  011080  0FEE               	addlw	-18
 12954  011082  6ED9               	movwf	fsr2l,c
 12955  011084  50E2               	movf	fsr1h,w,c
 12956  011086  6EDA               	movwf	fsr2h,c
 12957  011088  0EFF               	movlw	255
 12958  01108A  22DA               	addwfc	fsr2h,f,c
 12959  01108C  06DE               	decf	postinc2,f,c
 12960  01108E  0E00               	movlw	0
 12961  011090  5ADD               	subwfb	postdec2,f,c
 12962  011092                     l10114:
 12963                           
 12964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12965                           ;stkvar	_e @ sp[(-56)+34]
 12966  011092  0EEA               	movlw	-22
 12967  011094  006F FF8C  F032    	movff	plusw1,btemp
 12968  01109A  0EEB               	movlw	-21
 12969  01109C  50E3               	movf	plusw1,w,c
 12970  01109E  1032               	iorwf	btemp^0,w,c
 12971  0110A0  A4D8               	btfss	status,2,c
 12972  0110A2  D7A6               	goto	l10104
 12973                           
 12974                           ;stkvar	_p @ sp[(-56)+40]
 12975  0110A4  0EF1               	movlw	-15
 12976  0110A6  BEE3               	btfsc	plusw1,7,c
 12977  0110A8  D007               	goto	u9800
 12978  0110AA  0EF1               	movlw	-15
 12979  0110AC  50E3               	movf	plusw1,w,c
 12980  0110AE  E1A0               	bnz	l10104
 12981  0110B0  0EF0               	movlw	-16
 12982  0110B2  04E3               	decf	plusw1,w,c
 12983  0110B4  B0D8               	btfsc	status,0,c
 12984  0110B6  D79C               	goto	l10104
 12985  0110B8                     u9800:
 12986                           
 12987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12988                           ;stkvar	_i @ sp[(-56)+36]
 12989  0110B8  50E1               	movf	fsr1l,w,c
 12990  0110BA  0FEC               	addlw	-20
 12991  0110BC  6ED9               	movwf	fsr2l,c
 12992  0110BE  50E2               	movf	fsr1h,w,c
 12993  0110C0  6EDA               	movwf	fsr2h,c
 12994  0110C2  0EFF               	movlw	255
 12995  0110C4  22DA               	addwfc	fsr2h,f,c
 12996  0110C6  06DE               	decf	postinc2,f,c
 12997  0110C8  0E00               	movlw	0
 12998  0110CA  5ADD               	subwfb	postdec2,f,c
 12999                           
 13000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13001                           ;stkvar	_sign @ sp[(-56)+42]
 13002  0110CC  0EF2               	movlw	-14
 13003  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 13004  0110D4  0EF3               	movlw	-13
 13005  0110D6  50E3               	movf	plusw1,w,c
 13006  0110D8  1032               	iorwf	btemp^0,w,c
 13007  0110DA  A4D8               	btfss	status,2,c
 13008  0110DC  D002               	goto	l10124
 13009  0110DE  0E2B               	movlw	43
 13010  0110E0  D001               	goto	L11
 13011  0110E2                     l10124:
 13012  0110E2  0E2D               	movlw	45
 13013  0110E4                     L11:
 13014  0110E4  6E3C               	movwf	(btemp+10)^0,c
 13015  0110E6  0E00               	movlw	0
 13016  0110E8  6E3D               	movwf	(btemp+11)^0,c
 13017                           
 13018                           ;stkvar	_efgtoa$4611 @ sp[(-56)+4]
 13019  0110EA  0ECC               	movlw	-52
 13020  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13021  0110F2  0ECD               	movlw	-51
 13022  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13023                           
 13024                           ;stkvar	_efgtoa$4611 @ sp[(-56)+4]
 13025                           ;stkvar	_i @ sp[(-56)+36]
 13026  0110FA  0EEC               	movlw	-20
 13027  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13028  011102  0EED               	movlw	-19
 13029  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 13030  01110A  0E7C               	movlw	low _dbuf
 13031  01110C  243C               	addwf	(btemp+10)^0,w,c
 13032  01110E  6ED9               	movwf	fsr2l,c
 13033  011110  0E01               	movlw	high _dbuf
 13034  011112  203D               	addwfc	(btemp+11)^0,w,c
 13035  011114  6EDA               	movwf	fsr2h,c
 13036  011116  0ECC               	movlw	-52
 13037  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13040                           ;stkvar	_w @ sp[(-56)+38]
 13041  01111E  50E1               	movf	fsr1l,w,c
 13042  011120  0FEE               	addlw	-18
 13043  011122  6ED9               	movwf	fsr2l,c
 13044  011124  50E2               	movf	fsr1h,w,c
 13045  011126  6EDA               	movwf	fsr2h,c
 13046  011128  0EFF               	movlw	255
 13047  01112A  22DA               	addwfc	fsr2h,f,c
 13048  01112C  06DE               	decf	postinc2,f,c
 13049  01112E  0E00               	movlw	0
 13050  011130  5ADD               	subwfb	postdec2,f,c
 13051                           
 13052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13053                           ;stkvar	_i @ sp[(-56)+36]
 13054  011132  50E1               	movf	fsr1l,w,c
 13055  011134  0FEC               	addlw	-20
 13056  011136  6ED9               	movwf	fsr2l,c
 13057  011138  50E2               	movf	fsr1h,w,c
 13058  01113A  6EDA               	movwf	fsr2h,c
 13059  01113C  0EFF               	movlw	255
 13060  01113E  22DA               	addwfc	fsr2h,f,c
 13061  011140  06DE               	decf	postinc2,f,c
 13062  011142  0E00               	movlw	0
 13063  011144  5ADD               	subwfb	postdec2,f,c
 13064  011146  0EBF               	movlw	191
 13065  011148  6E3C               	movwf	(btemp+10)^0,c
 13066  01114A  0EFF               	movlw	255
 13067  01114C  6E3D               	movwf	(btemp+11)^0,c
 13068                           
 13069                           ;stkvar	_c @ sp[(-56)+-7]
 13070  01114E  0EC1               	movlw	-63
 13071  011150  50E3               	movf	plusw1,w,c
 13072  011152  6E3A               	movwf	(btemp+8)^0,c
 13073  011154  6A3B               	clrf	(btemp+9)^0,c
 13074  011156  503C               	movf	(btemp+10)^0,w,c
 13075  011158  263A               	addwf	(btemp+8)^0,f,c
 13076  01115A  503D               	movf	(btemp+11)^0,w,c
 13077  01115C  223B               	addwfc	(btemp+9)^0,f,c
 13078  01115E  503B               	movf	(btemp+9)^0,w,c
 13079  011160  E106               	bnz	u9820
 13080  011162  0E1A               	movlw	26
 13081  011164  5C3A               	subwf	(btemp+8)^0,w,c
 13082  011166  B0D8               	btfsc	status,0,c
 13083  011168  D002               	goto	u9820
 13084  01116A  0E01               	movlw	1
 13085  01116C  D001               	goto	u9830
 13086  01116E                     u9820:
 13087  01116E  0E00               	movlw	0
 13088  011170                     u9830:
 13089  011170  6E3C               	movwf	(btemp+10)^0,c
 13090  011172  6A3D               	clrf	(btemp+11)^0,c
 13091                           
 13092                           ;stkvar	_efgtoa$4613 @ sp[(-56)+0]
 13093  011174  0EC8               	movlw	-56
 13094  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13095  01117C  0EC9               	movlw	-55
 13096  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13097                           
 13098                           ;stkvar	_efgtoa$4613 @ sp[(-56)+0]
 13099  011184  0EC8               	movlw	-56
 13100  011186  006F FF8C  F032    	movff	plusw1,btemp
 13101  01118C  0EC9               	movlw	-55
 13102  01118E  50E3               	movf	plusw1,w,c
 13103  011190  1032               	iorwf	btemp^0,w,c
 13104  011192  A4D8               	btfss	status,2,c
 13105  011194  D002               	goto	l10140
 13106  011196  0E65               	movlw	101
 13107  011198  D001               	goto	L12
 13108  01119A                     l10140:
 13109  01119A  0E45               	movlw	69
 13110  01119C                     L12:
 13111  01119C  6E3C               	movwf	(btemp+10)^0,c
 13112  01119E  0E00               	movlw	0
 13113  0111A0  6E3D               	movwf	(btemp+11)^0,c
 13114                           
 13115                           ;stkvar	_efgtoa$4612 @ sp[(-56)+2]
 13116  0111A2  0ECA               	movlw	-54
 13117  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13118  0111AA  0ECB               	movlw	-53
 13119  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13120                           
 13121                           ;stkvar	_efgtoa$4612 @ sp[(-56)+2]
 13122                           ;stkvar	_i @ sp[(-56)+36]
 13123  0111B2  0EEC               	movlw	-20
 13124  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13125  0111BA  0EED               	movlw	-19
 13126  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13127  0111C2  0E7C               	movlw	low _dbuf
 13128  0111C4  243C               	addwf	(btemp+10)^0,w,c
 13129  0111C6  6ED9               	movwf	fsr2l,c
 13130  0111C8  0E01               	movlw	high _dbuf
 13131  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 13132  0111CC  6EDA               	movwf	fsr2h,c
 13133  0111CE  0ECA               	movlw	-54
 13134  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13135                           
 13136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13137                           ;stkvar	_w @ sp[(-56)+38]
 13138  0111D6  50E1               	movf	fsr1l,w,c
 13139  0111D8  0FEE               	addlw	-18
 13140  0111DA  6ED9               	movwf	fsr2l,c
 13141  0111DC  50E2               	movf	fsr1h,w,c
 13142  0111DE  6EDA               	movwf	fsr2h,c
 13143  0111E0  0EFF               	movlw	255
 13144  0111E2  22DA               	addwfc	fsr2h,f,c
 13145  0111E4  06DE               	decf	postinc2,f,c
 13146  0111E6  0E00               	movlw	0
 13147  0111E8  5ADD               	subwfb	postdec2,f,c
 13148                           
 13149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13150                           ;stkvar	_i @ sp[(-56)+36]
 13151  0111EA  0EEC               	movlw	-20
 13152  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13153  0111F2  0EED               	movlw	-19
 13154  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13155  0111FA  0E7C               	movlw	low _dbuf
 13156  0111FC  243C               	addwf	(btemp+10)^0,w,c
 13157  0111FE  6E3A               	movwf	(btemp+8)^0,c
 13158  011200  0E01               	movlw	high _dbuf
 13159  011202  203D               	addwfc	(btemp+11)^0,w,c
 13160  011204  6E3B               	movwf	(btemp+9)^0,c
 13161  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 13162  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 13163                           
 13164                           ;stkvar	_n @ sp[(-58)+32]
 13165  011212  0E7C               	movlw	low _dbuf
 13166  011214  6E3C               	movwf	(btemp+10)^0,c
 13167  011216  0E01               	movlw	high _dbuf
 13168  011218  6E3D               	movwf	(btemp+11)^0,c
 13169  01121A  0EE6               	movlw	-26
 13170  01121C  50E3               	movf	plusw1,w,c
 13171  01121E  263C               	addwf	(btemp+10)^0,f,c
 13172  011220  0EE7               	movlw	-25
 13173  011222  50E3               	movf	plusw1,w,c
 13174  011224  223D               	addwfc	(btemp+11)^0,f,c
 13175  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 13176  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 13177  011232  ECA7  F0B9         	call	_strcpy	;wreg free
 13178  011236  EF16  F081         	goto	l9892
 13179  01123A                     l1921:
 13180                           
 13181                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13182  01123A  0EC1               	movlw	193
 13183  01123C  26E1               	addwf	fsr1l,f,c
 13184  01123E  0EFF               	movlw	255
 13185  011240  22E2               	addwfc	fsr1h,f,c
 13186  011242  0012               	return		;funcret
 13187  011244                     __end_of_efgtoa:
 13188                           	opt callstack 0
 13189                           
 13190 ;; *************** function _tolower *****************
 13191 ;; Defined at:
 13192 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13193 ;; Parameters:    Size  Location     Type
 13194 ;;  c               2  [STACK] int 
 13195 ;; Auto vars:     Size  Location     Type
 13196 ;;		None
 13197 ;; Return value:  Size  Location     Type
 13198 ;;                  2  [STACK] int 
 13199 ;; Registers used:
 13200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13201 ;; Tracked objects:
 13202 ;;		On entry : 0/5
 13203 ;;		On exit  : 0/0
 13204 ;;		Unchanged: 0/0
 13205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13210 ;;Total ram usage:        0 bytes
 13211 ;; Hardware stack levels used:    1
 13212 ;; Hardware stack levels required when called:    7
 13213 ;; This function calls:
 13214 ;;		_isupper
 13215 ;; This function is called by:
 13216 ;;		_efgtoa
 13217 ;;		_vfpfcnvrt
 13218 ;; This function uses a reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text47
 13222  017C4C                     __ptext47:
 13223                           	opt callstack 0
 13224  017C4C                     _tolower:
 13225                           	opt callstack 0
 13226                           
 13227                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13228  017C4C  52E6               	movf	postinc1,f,c
 13229  017C4E  52E6               	movf	postinc1,f,c
 13230                           
 13231                           ;stkvar	_c @ sp[(-2)+-2]
 13232                           
 13233                           ;incstack = 0
 13234  017C50  0EFC               	movlw	-4
 13235  017C52  50E3               	movf	plusw1,w,c
 13236  017C54  0FBF               	addlw	191
 13237  017C56  6E3C               	movwf	(btemp+10)^0,c
 13238  017C58  0EFD               	movlw	-3
 13239  017C5A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13240  017C60  0EFF               	movlw	255
 13241  017C62  223D               	addwfc	(btemp+11)^0,f,c
 13242  017C64  503D               	movf	(btemp+11)^0,w,c
 13243  017C66  E106               	bnz	u5210
 13244  017C68  0E1A               	movlw	26
 13245  017C6A  5C3C               	subwf	(btemp+10)^0,w,c
 13246  017C6C  B0D8               	btfsc	status,0,c
 13247  017C6E  D002               	goto	u5210
 13248  017C70  0E01               	movlw	1
 13249  017C72  D001               	goto	u5220
 13250  017C74                     u5210:
 13251  017C74  0E00               	movlw	0
 13252  017C76                     u5220:
 13253  017C76  6E3C               	movwf	(btemp+10)^0,c
 13254  017C78  6A3D               	clrf	(btemp+11)^0,c
 13255                           
 13256                           ;stkvar	_tolower$5279 @ sp[(-2)+0]
 13257  017C7A  0EFE               	movlw	-2
 13258  017C7C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13259  017C82  0EFF               	movlw	-1
 13260  017C84  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13261                           
 13262                           ;stkvar	_tolower$5279 @ sp[(-2)+0]
 13263  017C8A  0EFE               	movlw	-2
 13264  017C8C  006F FF8C  F032    	movff	plusw1,btemp
 13265  017C92  0EFF               	movlw	-1
 13266  017C94  50E3               	movf	plusw1,w,c
 13267  017C96  1032               	iorwf	btemp^0,w,c
 13268  017C98  B4D8               	btfsc	status,2,c
 13269  017C9A  D00D               	goto	l6680
 13270                           
 13271                           ;stkvar	_c @ sp[(-2)+-2]
 13272  017C9C  0EFC               	movlw	-4
 13273  017C9E  006F FF8C  F032    	movff	plusw1,btemp
 13274  017CA4  0EFD               	movlw	-3
 13275  017CA6  006F FF8C  F033    	movff	plusw1,btemp+1
 13276  017CAC  0E20               	movlw	32
 13277  017CAE  1232               	iorwf	btemp^0,f,c
 13278  017CB0  0E00               	movlw	0
 13279  017CB2  1233               	iorwf	(btemp+1)^0,f,c
 13280  017CB4  D008               	goto	l2944
 13281  017CB6                     l6680:
 13282                           
 13283                           ;stkvar	_c @ sp[(-2)+-2]
 13284  017CB6  0EFC               	movlw	-4
 13285  017CB8  006F FF8C  F032    	movff	plusw1,btemp
 13286  017CBE  0EFD               	movlw	-3
 13287  017CC0  006F FF8C  F033    	movff	plusw1,btemp+1
 13288  017CC6                     l2944:
 13289                           
 13290                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13291  017CC6  52E5               	movf	postdec1,f,c
 13292  017CC8  52E5               	movf	postdec1,f,c
 13293  017CCA  52E5               	movf	postdec1,f,c
 13294  017CCC  52E5               	movf	postdec1,f,c
 13295  017CCE  0012               	return		;funcret
 13296  017CD0                     __end_of_tolower:
 13297                           	opt callstack 0
 13298                           
 13299 ;; *************** function _isupper *****************
 13300 ;; Defined at:
 13301 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  c               2  [STACK] int 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;		None
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  2  [STACK] int 
 13308 ;; Registers used:
 13309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;Total ram usage:        0 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    6
 13322 ;; This function calls:
 13323 ;;		Nothing
 13324 ;; This function is called by:
 13325 ;;		_efgtoa
 13326 ;;		_xtoa
 13327 ;;		_vfpfcnvrt
 13328 ;;		_tolower
 13329 ;; This function uses a reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text48
 13333  0186B2                     __ptext48:
 13334                           	opt callstack 0
 13335  0186B2                     _isupper:
 13336                           	opt callstack 17
 13337                           
 13338                           ;stkvar	_c @ sp[(0)+-2]
 13339                           
 13340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13341                           ;incstack = 0
 13342  0186B2  0EFE               	movlw	-2
 13343  0186B4  50E3               	movf	plusw1,w,c
 13344  0186B6  0FBF               	addlw	191
 13345  0186B8  6E3C               	movwf	(btemp+10)^0,c
 13346  0186BA  0EFF               	movlw	-1
 13347  0186BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13348  0186C2  0EFF               	movlw	255
 13349  0186C4  223D               	addwfc	(btemp+11)^0,f,c
 13350  0186C6  503D               	movf	(btemp+11)^0,w,c
 13351  0186C8  E106               	bnz	u4610
 13352  0186CA  0E1A               	movlw	26
 13353  0186CC  5C3C               	subwf	(btemp+10)^0,w,c
 13354  0186CE  B0D8               	btfsc	status,0,c
 13355  0186D0  D002               	goto	u4610
 13356  0186D2  0E01               	movlw	1
 13357  0186D4  D001               	goto	u4620
 13358  0186D6                     u4610:
 13359  0186D6  0E00               	movlw	0
 13360  0186D8                     u4620:
 13361  0186D8  6E32               	movwf	btemp^0,c
 13362  0186DA  6A33               	clrf	(btemp+1)^0,c
 13363                           
 13364                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13365  0186DC  52E5               	movf	postdec1,f,c
 13366  0186DE  52E5               	movf	postdec1,f,c
 13367  0186E0  0012               	return		;funcret
 13368  0186E2                     __end_of_isupper:
 13369                           	opt callstack 0
 13370                           
 13371 ;; *************** function _strcpy *****************
 13372 ;; Defined at:
 13373 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;  dest            2  [STACK] PTR unsigned char 
 13376 ;;		 -> dbuf(80), 
 13377 ;;  src             2  [STACK] PTR const unsigned char 
 13378 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13379 ;;		 -> dbuf(80), 
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  d               2  [STACK] PTR unsigned char 
 13382 ;;		 -> dbuf(80), 
 13383 ;;  s               2  [STACK] PTR const unsigned char 
 13384 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13385 ;;		 -> dbuf(80), 
 13386 ;; Return value:  Size  Location     Type
 13387 ;;                  2  [STACK] PTR unsigned char 
 13388 ;; Registers used:
 13389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13390 ;; Tracked objects:
 13391 ;;		On entry : 0/5
 13392 ;;		On exit  : 0/0
 13393 ;;		Unchanged: 0/0
 13394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13399 ;;Total ram usage:        0 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; Hardware stack levels required when called:    6
 13402 ;; This function calls:
 13403 ;;		Nothing
 13404 ;; This function is called by:
 13405 ;;		_efgtoa
 13406 ;; This function uses a reentrant model
 13407 ;;
 13408                           
 13409                           	psect	text49
 13410  01734E                     __ptext49:
 13411                           	opt callstack 0
 13412  01734E                     _strcpy:
 13413                           	opt callstack 0
 13414                           
 13415                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13416  01734E  52E6               	movf	postinc1,f,c
 13417  017350  52E6               	movf	postinc1,f,c
 13418  017352  52E6               	movf	postinc1,f,c
 13419  017354  52E6               	movf	postinc1,f,c
 13420                           
 13421                           ;stkvar	_src @ sp[(-4)+-4]
 13422                           
 13423                           ;incstack = 0
 13424  017356  0EF8               	movlw	-8
 13425  017358  006F FF8C  F03C    	movff	plusw1,btemp+10
 13426  01735E  0EF9               	movlw	-7
 13427  017360  006F FF8C  F03D    	movff	plusw1,btemp+11
 13428                           
 13429                           ;stkvar	_s @ sp[(-4)+2]
 13430  017366  0EFF               	movlw	-1
 13431  017368  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13432  01736E  0EFE               	movlw	-2
 13433  017370  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13434                           
 13435                           ;stkvar	_dest @ sp[(-4)+-2]
 13436  017376  0EFA               	movlw	-6
 13437  017378  006F FF8C  F03C    	movff	plusw1,btemp+10
 13438  01737E  0EFB               	movlw	-5
 13439  017380  006F FF8C  F03D    	movff	plusw1,btemp+11
 13440                           
 13441                           ;stkvar	_d @ sp[(-4)+0]
 13442  017386  0EFD               	movlw	-3
 13443  017388  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13444  01738E  0EFC               	movlw	-4
 13445  017390  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13446  017396                     l9766:
 13447                           
 13448                           ;stkvar	_s @ sp[(-4)+2]
 13449  017396  50E1               	movf	fsr1l,w,c
 13450  017398  0FFE               	addlw	-2
 13451  01739A  6ED9               	movwf	fsr2l,c
 13452  01739C  50E2               	movf	fsr1h,w,c
 13453  01739E  6EDA               	movwf	fsr2h,c
 13454  0173A0  0EFF               	movlw	255
 13455  0173A2  22DA               	addwfc	fsr2h,f,c
 13456  0173A4  006F FF7C  F03C    	movff	indf2,btemp+10
 13457  0173AA  0E01               	movlw	1
 13458  0173AC  26DE               	addwf	postinc2,f,c
 13459  0173AE  006F FF7C  F03D    	movff	indf2,btemp+11
 13460  0173B4  0E00               	movlw	0
 13461  0173B6  22DD               	addwfc	postdec2,f,c
 13462  0173B8  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13463  0173BE  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13464  0173C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13465  0173C6  6EF8               	movwf	tblptru,c
 13466                           
 13467                           ;stkvar	_d @ sp[(-4)+0]
 13468  0173C8  50E1               	movf	fsr1l,w,c
 13469  0173CA  0FFC               	addlw	-4
 13470  0173CC  6ED9               	movwf	fsr2l,c
 13471  0173CE  50E2               	movf	fsr1h,w,c
 13472  0173D0  6EDA               	movwf	fsr2h,c
 13473  0173D2  0EFF               	movlw	255
 13474  0173D4  22DA               	addwfc	fsr2h,f,c
 13475  0173D6  006F FF7C  F03C    	movff	indf2,btemp+10
 13476  0173DC  0E01               	movlw	1
 13477  0173DE  26DE               	addwf	postinc2,f,c
 13478  0173E0  006F FF7C  F03D    	movff	indf2,btemp+11
 13479  0173E6  0E00               	movlw	0
 13480  0173E8  22DD               	addwfc	postdec2,f,c
 13481  0173EA  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13482  0173F0  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13483  0173F6  0E1F               	movlw	(high __ramtop+-1)
 13484  0173F8  64F7               	cpfsgt	tblptrh,c
 13485  0173FA  D003               	bra	u9137
 13486  0173FC  0008               	tblrd		*
 13487  0173FE  50F5               	movf	tablat,w,c
 13488  017400  D007               	bra	u9130
 13489  017402                     u9137:
 13490  017402  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13491  017408  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13492  01740E  50EF               	movf	indf0,w,c
 13493  017410                     u9130:
 13494  017410  6EDF               	movwf	indf2,c
 13495  017412  50DF               	movf	indf2,w,c
 13496  017414  A4D8               	btfss	status,2,c
 13497  017416  D7BF               	goto	l9766
 13498                           
 13499                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13500  017418  0EF8               	movlw	248
 13501  01741A  26E1               	addwf	fsr1l,f,c
 13502  01741C  0EFF               	movlw	255
 13503  01741E  22E2               	addwfc	fsr1h,f,c
 13504  017420  0012               	return		;funcret
 13505  017422                     __end_of_strcpy:
 13506                           	opt callstack 0
 13507                           
 13508 ;; *************** function _floorf *****************
 13509 ;; Defined at:
 13510 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  x               4  [STACK] float 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;  u               4  [STACK] struct .
 13515 ;;  m               4  [STACK] unsigned long 
 13516 ;;  e               2  [STACK] int 
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  4  [STACK] float 
 13519 ;; Registers used:
 13520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/5
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;Total ram usage:        0 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    6
 13533 ;; This function calls:
 13534 ;;		Nothing
 13535 ;; This function is called by:
 13536 ;;		_efgtoa
 13537 ;; This function uses a reentrant model
 13538 ;;
 13539                           
 13540                           	psect	text50
 13541  014816                     __ptext50:
 13542                           	opt callstack 0
 13543  014816                     _floorf:
 13544                           	opt callstack 0
 13545                           
 13546                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13547  014816  0E0A               	movlw	10
 13548  014818  26E1               	addwf	fsr1l,f,c
 13549  01481A  0E00               	movlw	0
 13550  01481C  22E2               	addwfc	fsr1h,f,c
 13551                           
 13552                           ;incstack = 0
 13553  01481E  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13554  014824  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13555  01482A  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13556  014830  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13557                           
 13558                           ;stkvar	_u @ sp[(-10)+0]
 13559  014836  0EF6               	movlw	-10
 13560  014838  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13561  01483E  0EF7               	movlw	-9
 13562  014840  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13563  014846  0EF8               	movlw	-8
 13564  014848  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13565  01484E  0EF9               	movlw	-7
 13566  014850  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13567                           
 13568                           ;stkvar	_x @ sp[(-10)+-4]
 13569  014856  0EF2               	movlw	-14
 13570  014858  006F FF8C  F03A    	movff	plusw1,btemp+8
 13571  01485E  0EF3               	movlw	-13
 13572  014860  006F FF8C  F03B    	movff	plusw1,btemp+9
 13573  014866  0EF4               	movlw	-12
 13574  014868  006F FF8C  F03C    	movff	plusw1,btemp+10
 13575  01486E  0EF5               	movlw	-11
 13576  014870  006F FF8C  F03D    	movff	plusw1,btemp+11
 13577                           
 13578                           ;stkvar	_u @ sp[(-10)+0]
 13579  014876  0EF6               	movlw	-10
 13580  014878  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13581  01487E  0EF7               	movlw	-9
 13582  014880  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13583  014886  0EF8               	movlw	-8
 13584  014888  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13585  01488E  0EF9               	movlw	-7
 13586  014890  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13587  014896  0E81               	movlw	129
 13588  014898  6E3C               	movwf	(btemp+10)^0,c
 13589  01489A  0EFF               	movlw	255
 13590  01489C  6E3D               	movwf	(btemp+11)^0,c
 13591                           
 13592                           ;stkvar	_u @ sp[(-10)+0]
 13593  01489E  0EF6               	movlw	-10
 13594  0148A0  006F FF8C  F036    	movff	plusw1,btemp+4
 13595  0148A6  0EF7               	movlw	-9
 13596  0148A8  006F FF8C  F037    	movff	plusw1,btemp+5
 13597  0148AE  0EF8               	movlw	-8
 13598  0148B0  006F FF8C  F038    	movff	plusw1,btemp+6
 13599  0148B6  0EF9               	movlw	-7
 13600  0148B8  006F FF8C  F039    	movff	plusw1,btemp+7
 13601  0148BE  0E18               	movlw	24
 13602  0148C0  D005               	goto	u5240
 13603  0148C2                     u5245:
 13604  0148C2  90D8               	bcf	status,0,c
 13605  0148C4  3239               	rrcf	(btemp+7)^0,f,c
 13606  0148C6  3238               	rrcf	(btemp+6)^0,f,c
 13607  0148C8  3237               	rrcf	(btemp+5)^0,f,c
 13608  0148CA  3236               	rrcf	(btemp+4)^0,f,c
 13609  0148CC                     u5240:
 13610  0148CC  2EE8               	decfsz	wreg,f,c
 13611  0148CE  D7F9               	goto	u5245
 13612  0148D0  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13613  0148D6  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13614  0148DC  0EFF               	movlw	255
 13615  0148DE  163A               	andwf	(btemp+8)^0,f,c
 13616  0148E0  0E00               	movlw	0
 13617  0148E2  163B               	andwf	(btemp+9)^0,f,c
 13618  0148E4  503C               	movf	(btemp+10)^0,w,c
 13619  0148E6  263A               	addwf	(btemp+8)^0,f,c
 13620  0148E8  503D               	movf	(btemp+11)^0,w,c
 13621  0148EA  223B               	addwfc	(btemp+9)^0,f,c
 13622                           
 13623                           ;stkvar	_e @ sp[(-10)+8]
 13624  0148EC  0EFE               	movlw	-2
 13625  0148EE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13626  0148F4  0EFF               	movlw	-1
 13627  0148F6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13628                           
 13629                           ;stkvar	_e @ sp[(-10)+8]
 13630  0148FC  0EFF               	movlw	-1
 13631  0148FE  BEE3               	btfsc	plusw1,7,c
 13632  014900  D019               	goto	l6694
 13633  014902  0EFF               	movlw	-1
 13634  014904  50E3               	movf	plusw1,w,c
 13635  014906  E108               	bnz	u5250
 13636  014908  0EFE               	movlw	-2
 13637  01490A  006F FF8C  F032    	movff	plusw1,btemp
 13638  014910  0E17               	movlw	23
 13639  014912  5E32               	subwf	btemp^0,f,c
 13640  014914  A0D8               	btfss	status,0,c
 13641  014916  D00E               	goto	l6694
 13642  014918                     u5250:
 13643                           
 13644                           ;stkvar	_x @ sp[(-10)+-4]
 13645  014918  0EF2               	movlw	-14
 13646  01491A  006F FF8C  F032    	movff	plusw1,btemp
 13647  014920  0EF3               	movlw	-13
 13648  014922  006F FF8C  F033    	movff	plusw1,btemp+1
 13649  014928  0EF4               	movlw	-12
 13650  01492A  006F FF8C  F034    	movff	plusw1,btemp+2
 13651  014930  0EF5               	movlw	-11
 13652  014932  D11F               	goto	L13
 13653  014934                     l6694:
 13654                           
 13655                           ;stkvar	_e @ sp[(-10)+8]
 13656  014934  0EFF               	movlw	-1
 13657  014936  BEE3               	btfsc	plusw1,7,c
 13658  014938  D0B4               	goto	l6710
 13659                           
 13660                           ;stkvar	_e @ sp[(-10)+8]
 13661  01493A  0EFE               	movlw	-2
 13662  01493C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13663  014942  0EFF               	movlw	255
 13664  014944  6E36               	movwf	(btemp+4)^0,c
 13665  014946  0EFF               	movlw	255
 13666  014948  6E37               	movwf	(btemp+5)^0,c
 13667  01494A  0E7F               	movlw	127
 13668  01494C  6E38               	movwf	(btemp+6)^0,c
 13669  01494E  0E00               	movlw	0
 13670  014950  6E39               	movwf	(btemp+7)^0,c
 13671  014952                     u5275:
 13672  014952  663D               	tstfsz	(btemp+11)^0,c
 13673  014954  D001               	goto	u5276
 13674  014956  D007               	goto	u5277
 13675  014958                     u5276:
 13676  014958  3439               	rlcf	(btemp+7)^0,w,c
 13677  01495A  3239               	rrcf	(btemp+7)^0,f,c
 13678  01495C  3238               	rrcf	(btemp+6)^0,f,c
 13679  01495E  3237               	rrcf	(btemp+5)^0,f,c
 13680  014960  3236               	rrcf	(btemp+4)^0,f,c
 13681  014962  2E3D               	decfsz	(btemp+11)^0,f,c
 13682  014964  D7F6               	goto	u5275
 13683  014966                     u5277:
 13684                           
 13685                           ;stkvar	_m @ sp[(-10)+4]
 13686  014966  0EFA               	movlw	-6
 13687  014968  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13688  01496E  0EFB               	movlw	-5
 13689  014970  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13690  014976  0EFC               	movlw	-4
 13691  014978  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13692  01497E  0EFD               	movlw	-3
 13693  014980  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13694                           
 13695                           ;stkvar	_m @ sp[(-10)+4]
 13696                           ;stkvar	_u @ sp[(-10)+0]
 13697  014986  0EF6               	movlw	-10
 13698  014988  006F FF8C  F03A    	movff	plusw1,btemp+8
 13699  01498E  0EF7               	movlw	-9
 13700  014990  006F FF8C  F03B    	movff	plusw1,btemp+9
 13701  014996  0EF8               	movlw	-8
 13702  014998  006F FF8C  F03C    	movff	plusw1,btemp+10
 13703  01499E  0EF9               	movlw	-7
 13704  0149A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 13705  0149A6  0EFA               	movlw	-6
 13706  0149A8  50E3               	movf	plusw1,w,c
 13707  0149AA  163A               	andwf	(btemp+8)^0,f,c
 13708  0149AC  0EFB               	movlw	-5
 13709  0149AE  50E3               	movf	plusw1,w,c
 13710  0149B0  163B               	andwf	(btemp+9)^0,f,c
 13711  0149B2  0EFC               	movlw	-4
 13712  0149B4  50E3               	movf	plusw1,w,c
 13713  0149B6  163C               	andwf	(btemp+10)^0,f,c
 13714  0149B8  0EFD               	movlw	-3
 13715  0149BA  50E3               	movf	plusw1,w,c
 13716  0149BC  163D               	andwf	(btemp+11)^0,f,c
 13717  0149BE  503A               	movf	(btemp+8)^0,w,c
 13718  0149C0  103B               	iorwf	(btemp+9)^0,w,c
 13719  0149C2  103C               	iorwf	(btemp+10)^0,w,c
 13720  0149C4  103D               	iorwf	(btemp+11)^0,w,c
 13721  0149C6  B4D8               	btfsc	status,2,c
 13722  0149C8  D7A7               	goto	u5250
 13723                           
 13724                           ;stkvar	_u @ sp[(-10)+0]
 13725  0149CA  0EF6               	movlw	-10
 13726  0149CC  006F FF8C  F03A    	movff	plusw1,btemp+8
 13727  0149D2  0EF7               	movlw	-9
 13728  0149D4  006F FF8C  F03B    	movff	plusw1,btemp+9
 13729  0149DA  0EF8               	movlw	-8
 13730  0149DC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13731  0149E2  0EF9               	movlw	-7
 13732  0149E4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13733  0149EA  0E20               	movlw	32
 13734  0149EC  D005               	goto	u5290
 13735  0149EE                     u5295:
 13736  0149EE  90D8               	bcf	status,0,c
 13737  0149F0  323D               	rrcf	(btemp+11)^0,f,c
 13738  0149F2  323C               	rrcf	(btemp+10)^0,f,c
 13739  0149F4  323B               	rrcf	(btemp+9)^0,f,c
 13740  0149F6  323A               	rrcf	(btemp+8)^0,f,c
 13741  0149F8                     u5290:
 13742  0149F8  2EE8               	decfsz	wreg,f,c
 13743  0149FA  D7F9               	goto	u5295
 13744  0149FC  503A               	movf	(btemp+8)^0,w,c
 13745  0149FE  B4D8               	btfsc	status,2,c
 13746  014A00  D028               	goto	l6708
 13747                           
 13748                           ;stkvar	_m @ sp[(-10)+4]
 13749                           ;stkvar	_u @ sp[(-10)+0]
 13750  014A02  0EF6               	movlw	-10
 13751  014A04  50E3               	movf	plusw1,w,c
 13752  014A06  6E32               	movwf	btemp^0,c
 13753  014A08  0EFA               	movlw	-6
 13754  014A0A  50E3               	movf	plusw1,w,c
 13755  014A0C  2632               	addwf	btemp^0,f,c
 13756  014A0E  0EF6               	movlw	-10
 13757  014A10  0060  F0CB  FFE3   	movff	btemp,plusw1
 13758  014A16  0EF7               	movlw	-9
 13759  014A18  50E3               	movf	plusw1,w,c
 13760  014A1A  6E32               	movwf	btemp^0,c
 13761  014A1C  0EFB               	movlw	-5
 13762  014A1E  50E3               	movf	plusw1,w,c
 13763  014A20  2232               	addwfc	btemp^0,f,c
 13764  014A22  0EF7               	movlw	-9
 13765  014A24  0060  F0CB  FFE3   	movff	btemp,plusw1
 13766  014A2A  0EF8               	movlw	-8
 13767  014A2C  50E3               	movf	plusw1,w,c
 13768  014A2E  6E32               	movwf	btemp^0,c
 13769  014A30  0EFC               	movlw	-4
 13770  014A32  50E3               	movf	plusw1,w,c
 13771  014A34  2232               	addwfc	btemp^0,f,c
 13772  014A36  0EF8               	movlw	-8
 13773  014A38  0060  F0CB  FFE3   	movff	btemp,plusw1
 13774  014A3E  0EF9               	movlw	-7
 13775  014A40  50E3               	movf	plusw1,w,c
 13776  014A42  6E32               	movwf	btemp^0,c
 13777  014A44  0EFD               	movlw	-3
 13778  014A46  50E3               	movf	plusw1,w,c
 13779  014A48  2232               	addwfc	btemp^0,f,c
 13780  014A4A  0EF9               	movlw	-7
 13781  014A4C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13782  014A52                     l6708:
 13783                           
 13784                           ;stkvar	_m @ sp[(-10)+4]
 13785  014A52  0EFA               	movlw	-6
 13786  014A54  006F FF8C  F03A    	movff	plusw1,btemp+8
 13787  014A5A  0EFB               	movlw	-5
 13788  014A5C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13789  014A62  0EFC               	movlw	-4
 13790  014A64  006F FF8C  F03C    	movff	plusw1,btemp+10
 13791  014A6A  0EFD               	movlw	-3
 13792  014A6C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13793  014A72  1C3A               	comf	(btemp+8)^0,w,c
 13794  014A74  6E36               	movwf	(btemp+4)^0,c
 13795  014A76  1C3B               	comf	(btemp+9)^0,w,c
 13796  014A78  6E37               	movwf	(btemp+5)^0,c
 13797  014A7A  1C3C               	comf	(btemp+10)^0,w,c
 13798  014A7C  6E38               	movwf	(btemp+6)^0,c
 13799  014A7E  1C3D               	comf	(btemp+11)^0,w,c
 13800  014A80  6E39               	movwf	(btemp+7)^0,c
 13801                           
 13802                           ;stkvar	_u @ sp[(-10)+0]
 13803  014A82  50E1               	movf	fsr1l,w,c
 13804  014A84  0FF6               	addlw	-10
 13805  014A86  6ED9               	movwf	fsr2l,c
 13806  014A88  50E2               	movf	fsr1h,w,c
 13807  014A8A  6EDA               	movwf	fsr2h,c
 13808  014A8C  0EFF               	movlw	255
 13809  014A8E  22DA               	addwfc	fsr2h,f,c
 13810  014A90  5036               	movf	(btemp+4)^0,w,c
 13811  014A92  16DE               	andwf	postinc2,f,c
 13812  014A94  5037               	movf	(btemp+5)^0,w,c
 13813  014A96  16DE               	andwf	postinc2,f,c
 13814  014A98  5038               	movf	(btemp+6)^0,w,c
 13815  014A9A  16DE               	andwf	postinc2,f,c
 13816  014A9C  5039               	movf	(btemp+7)^0,w,c
 13817  014A9E  16DE               	andwf	postinc2,f,c
 13818  014AA0  D05B               	goto	l6718
 13819  014AA2                     l6710:
 13820                           
 13821                           ;stkvar	_u @ sp[(-10)+0]
 13822  014AA2  0EF6               	movlw	-10
 13823  014AA4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13824  014AAA  0EF7               	movlw	-9
 13825  014AAC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13826  014AB2  0EF8               	movlw	-8
 13827  014AB4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13828  014ABA  0EF9               	movlw	-7
 13829  014ABC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13830  014AC2  0E20               	movlw	32
 13831  014AC4  D005               	goto	u5310
 13832  014AC6                     u5315:
 13833  014AC6  90D8               	bcf	status,0,c
 13834  014AC8  323D               	rrcf	(btemp+11)^0,f,c
 13835  014ACA  323C               	rrcf	(btemp+10)^0,f,c
 13836  014ACC  323B               	rrcf	(btemp+9)^0,f,c
 13837  014ACE  323A               	rrcf	(btemp+8)^0,f,c
 13838  014AD0                     u5310:
 13839  014AD0  2EE8               	decfsz	wreg,f,c
 13840  014AD2  D7F9               	goto	u5315
 13841  014AD4  663A               	tstfsz	(btemp+8)^0,c
 13842  014AD6  D009               	goto	l6714
 13843                           
 13844                           ;stkvar	_u @ sp[(-10)+0]
 13845  014AD8  0EF6               	movlw	-10
 13846  014ADA  6AE3               	clrf	plusw1,c
 13847  014ADC  0EF7               	movlw	-9
 13848  014ADE  6AE3               	clrf	plusw1,c
 13849  014AE0  0EF8               	movlw	-8
 13850  014AE2  6AE3               	clrf	plusw1,c
 13851  014AE4  0EF9               	movlw	-7
 13852  014AE6  6AE3               	clrf	plusw1,c
 13853  014AE8  D037               	goto	l6718
 13854  014AEA                     l6714:
 13855                           
 13856                           ;stkvar	_u @ sp[(-10)+0]
 13857  014AEA  0EF6               	movlw	-10
 13858  014AEC  006F FF8C  F03A    	movff	plusw1,btemp+8
 13859  014AF2  0EF7               	movlw	-9
 13860  014AF4  006F FF8C  F03B    	movff	plusw1,btemp+9
 13861  014AFA  0EF8               	movlw	-8
 13862  014AFC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13863  014B02  0EF9               	movlw	-7
 13864  014B04  006F FF8C  F03D    	movff	plusw1,btemp+11
 13865  014B0A  90D8               	bcf	status,0,c
 13866  014B0C  343A               	rlcf	(btemp+8)^0,w,c
 13867  014B0E  6E36               	movwf	(btemp+4)^0,c
 13868  014B10  343B               	rlcf	(btemp+9)^0,w,c
 13869  014B12  6E37               	movwf	(btemp+5)^0,c
 13870  014B14  343C               	rlcf	(btemp+10)^0,w,c
 13871  014B16  6E38               	movwf	(btemp+6)^0,c
 13872  014B18  343D               	rlcf	(btemp+11)^0,w,c
 13873  014B1A  6E39               	movwf	(btemp+7)^0,c
 13874  014B1C  5036               	movf	(btemp+4)^0,w,c
 13875  014B1E  1037               	iorwf	(btemp+5)^0,w,c
 13876  014B20  1038               	iorwf	(btemp+6)^0,w,c
 13877  014B22  1039               	iorwf	(btemp+7)^0,w,c
 13878  014B24  B4D8               	btfsc	status,2,c
 13879  014B26  D018               	goto	l6718
 13880  014B28  0E00               	movlw	0
 13881  014B2A  6E3A               	movwf	(btemp+8)^0,c
 13882  014B2C  0E00               	movlw	0
 13883  014B2E  6E3B               	movwf	(btemp+9)^0,c
 13884  014B30  0E80               	movlw	128
 13885  014B32  6E3C               	movwf	(btemp+10)^0,c
 13886  014B34  0EBF               	movlw	191
 13887  014B36  6E3D               	movwf	(btemp+11)^0,c
 13888                           
 13889                           ;stkvar	_u @ sp[(-10)+0]
 13890  014B38  0EF6               	movlw	-10
 13891  014B3A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13892  014B40  0EF7               	movlw	-9
 13893  014B42  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13894  014B48  0EF8               	movlw	-8
 13895  014B4A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13896  014B50  0EF9               	movlw	-7
 13897  014B52  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13898  014B58                     l6718:
 13899                           
 13900                           ;stkvar	_u @ sp[(-10)+0]
 13901  014B58  0EF6               	movlw	-10
 13902  014B5A  006F FF8C  F032    	movff	plusw1,btemp
 13903  014B60  0EF7               	movlw	-9
 13904  014B62  006F FF8C  F033    	movff	plusw1,btemp+1
 13905  014B68  0EF8               	movlw	-8
 13906  014B6A  006F FF8C  F034    	movff	plusw1,btemp+2
 13907  014B70  0EF9               	movlw	-7
 13908  014B72                     L13:
 13909  014B72  006F FF8C  F035    	movff	plusw1,btemp+3
 13910                           
 13911                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13912  014B78  0EF2               	movlw	242
 13913  014B7A  26E1               	addwf	fsr1l,f,c
 13914  014B7C  0EFF               	movlw	255
 13915  014B7E  22E2               	addwfc	fsr1h,f,c
 13916  014B80  0012               	return		;funcret
 13917  014B82                     __end_of_floorf:
 13918                           	opt callstack 0
 13919                           
 13920 ;; *************** function ___fpclassifyf *****************
 13921 ;; Defined at:
 13922 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  x               4  [STACK] float 
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  u               4  [STACK] struct .
 13927 ;;  e               2  [STACK] int 
 13928 ;; Return value:  Size  Location     Type
 13929 ;;                  2  [STACK] int 
 13930 ;; Registers used:
 13931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13932 ;; Tracked objects:
 13933 ;;		On entry : 0/5
 13934 ;;		On exit  : 0/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13941 ;;Total ram usage:        0 bytes
 13942 ;; Hardware stack levels used:    1
 13943 ;; Hardware stack levels required when called:    6
 13944 ;; This function calls:
 13945 ;;		Nothing
 13946 ;; This function is called by:
 13947 ;;		_efgtoa
 13948 ;; This function uses a reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text51
 13952  0162D8                     __ptext51:
 13953                           	opt callstack 0
 13954  0162D8                     ___fpclassifyf:
 13955                           	opt callstack 0
 13956                           
 13957                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13958  0162D8  0E06               	movlw	6
 13959  0162DA  26E1               	addwf	fsr1l,f,c
 13960  0162DC  0E00               	movlw	0
 13961  0162DE  22E2               	addwfc	fsr1h,f,c
 13962                           
 13963                           ;incstack = 0
 13964  0162E0  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13965  0162E6  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13966  0162EC  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13967  0162F2  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13968                           
 13969                           ;stkvar	_u @ sp[(-6)+0]
 13970  0162F8  0EFA               	movlw	-6
 13971  0162FA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13972  016300  0EFB               	movlw	-5
 13973  016302  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13974  016308  0EFC               	movlw	-4
 13975  01630A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13976  016310  0EFD               	movlw	-3
 13977  016312  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13978                           
 13979                           ;stkvar	_x @ sp[(-6)+-4]
 13980  016318  0EF6               	movlw	-10
 13981  01631A  006F FF8C  F03A    	movff	plusw1,btemp+8
 13982  016320  0EF7               	movlw	-9
 13983  016322  006F FF8C  F03B    	movff	plusw1,btemp+9
 13984  016328  0EF8               	movlw	-8
 13985  01632A  006F FF8C  F03C    	movff	plusw1,btemp+10
 13986  016330  0EF9               	movlw	-7
 13987  016332  006F FF8C  F03D    	movff	plusw1,btemp+11
 13988                           
 13989                           ;stkvar	_u @ sp[(-6)+0]
 13990  016338  0EFA               	movlw	-6
 13991  01633A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13992  016340  0EFB               	movlw	-5
 13993  016342  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13994  016348  0EFC               	movlw	-4
 13995  01634A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13996  016350  0EFD               	movlw	-3
 13997  016352  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13998                           
 13999                           ;stkvar	_u @ sp[(-6)+0]
 14000  016358  0EFA               	movlw	-6
 14001  01635A  006F FF8C  F03A    	movff	plusw1,btemp+8
 14002  016360  0EFB               	movlw	-5
 14003  016362  006F FF8C  F03B    	movff	plusw1,btemp+9
 14004  016368  0EFC               	movlw	-4
 14005  01636A  006F FF8C  F03C    	movff	plusw1,btemp+10
 14006  016370  0EFD               	movlw	-3
 14007  016372  006F FF8C  F03D    	movff	plusw1,btemp+11
 14008  016378  0E18               	movlw	24
 14009  01637A  D005               	goto	u5120
 14010  01637C                     u5125:
 14011  01637C  90D8               	bcf	status,0,c
 14012  01637E  323D               	rrcf	(btemp+11)^0,f,c
 14013  016380  323C               	rrcf	(btemp+10)^0,f,c
 14014  016382  323B               	rrcf	(btemp+9)^0,f,c
 14015  016384  323A               	rrcf	(btemp+8)^0,f,c
 14016  016386                     u5120:
 14017  016386  2EE8               	decfsz	wreg,f,c
 14018  016388  D7F9               	goto	u5125
 14019  01638A  0060  F0E8  F038   	movff	btemp+8,btemp+6
 14020  016390  0060  F0EC  F039   	movff	btemp+9,btemp+7
 14021  016396  0EFF               	movlw	255
 14022  016398  1638               	andwf	(btemp+6)^0,f,c
 14023  01639A  0E00               	movlw	0
 14024  01639C  1639               	andwf	(btemp+7)^0,f,c
 14025                           
 14026                           ;stkvar	_e @ sp[(-6)+4]
 14027  01639E  0EFE               	movlw	-2
 14028  0163A0  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14029  0163A6  0EFF               	movlw	-1
 14030  0163A8  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14031                           
 14032                           ;stkvar	_e @ sp[(-6)+4]
 14033  0163AE  0EFE               	movlw	-2
 14034  0163B0  006F FF8C  F032    	movff	plusw1,btemp
 14035  0163B6  0EFF               	movlw	-1
 14036  0163B8  50E3               	movf	plusw1,w,c
 14037  0163BA  1032               	iorwf	btemp^0,w,c
 14038  0163BC  A4D8               	btfss	status,2,c
 14039  0163BE  D023               	goto	l6656
 14040                           
 14041                           ;stkvar	_u @ sp[(-6)+0]
 14042  0163C0  0EFA               	movlw	-6
 14043  0163C2  006F FF8C  F03A    	movff	plusw1,btemp+8
 14044  0163C8  0EFB               	movlw	-5
 14045  0163CA  006F FF8C  F03B    	movff	plusw1,btemp+9
 14046  0163D0  0EFC               	movlw	-4
 14047  0163D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 14048  0163D8  0EFD               	movlw	-3
 14049  0163DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14050  0163E0  90D8               	bcf	status,0,c
 14051  0163E2  343A               	rlcf	(btemp+8)^0,w,c
 14052  0163E4  6E36               	movwf	(btemp+4)^0,c
 14053  0163E6  343B               	rlcf	(btemp+9)^0,w,c
 14054  0163E8  6E37               	movwf	(btemp+5)^0,c
 14055  0163EA  343C               	rlcf	(btemp+10)^0,w,c
 14056  0163EC  6E38               	movwf	(btemp+6)^0,c
 14057  0163EE  343D               	rlcf	(btemp+11)^0,w,c
 14058  0163F0  6E39               	movwf	(btemp+7)^0,c
 14059  0163F2  5036               	movf	(btemp+4)^0,w,c
 14060  0163F4  1037               	iorwf	(btemp+5)^0,w,c
 14061  0163F6  1038               	iorwf	(btemp+6)^0,w,c
 14062  0163F8  1039               	iorwf	(btemp+7)^0,w,c
 14063  0163FA  A4D8               	btfss	status,2,c
 14064  0163FC  D002               	goto	l6652
 14065  0163FE  0E02               	movlw	2
 14066  016400  D02E               	goto	L14
 14067  016402                     l6652:
 14068  016402  0E03               	movlw	3
 14069  016404  D02C               	goto	L14
 14070  016406                     l6656:
 14071                           
 14072                           ;stkvar	_e @ sp[(-6)+4]
 14073  016406  0EFE               	movlw	-2
 14074  016408  28E3               	incf	plusw1,w,c
 14075  01640A  E128               	bnz	l6662
 14076  01640C  0EFF               	movlw	-1
 14077  01640E  50E3               	movf	plusw1,w,c
 14078  016410  A4D8               	btfss	status,2,c
 14079  016412  D024               	goto	l6662
 14080                           
 14081                           ;stkvar	_u @ sp[(-6)+0]
 14082  016414  0EFA               	movlw	-6
 14083  016416  006F FF8C  F03A    	movff	plusw1,btemp+8
 14084  01641C  0EFB               	movlw	-5
 14085  01641E  006F FF8C  F03B    	movff	plusw1,btemp+9
 14086  016424  0EFC               	movlw	-4
 14087  016426  006F FF8C  F03C    	movff	plusw1,btemp+10
 14088  01642C  0EFD               	movlw	-3
 14089  01642E  006F FF8C  F03D    	movff	plusw1,btemp+11
 14090  016434  0E09               	movlw	9
 14091  016436                     u5165:
 14092  016436  90D8               	bcf	status,0,c
 14093  016438  363A               	rlcf	(btemp+8)^0,f,c
 14094  01643A  363B               	rlcf	(btemp+9)^0,f,c
 14095  01643C  363C               	rlcf	(btemp+10)^0,f,c
 14096  01643E  363D               	rlcf	(btemp+11)^0,f,c
 14097  016440  2EE8               	decfsz	wreg,f,c
 14098  016442  D7F9               	goto	u5165
 14099  016444  503A               	movf	(btemp+8)^0,w,c
 14100  016446  103B               	iorwf	(btemp+9)^0,w,c
 14101  016448  103C               	iorwf	(btemp+10)^0,w,c
 14102  01644A  103D               	iorwf	(btemp+11)^0,w,c
 14103  01644C  A4D8               	btfss	status,2,c
 14104  01644E  D002               	goto	u5170
 14105  016450  0E01               	movlw	1
 14106  016452  D001               	goto	u5180
 14107  016454                     u5170:
 14108  016454  0E00               	movlw	0
 14109  016456                     u5180:
 14110  016456  6E32               	movwf	btemp^0,c
 14111  016458  6A33               	clrf	(btemp+1)^0,c
 14112  01645A  D004               	goto	l2780
 14113  01645C                     l6662:
 14114  01645C  0E04               	movlw	4
 14115  01645E                     L14:
 14116  01645E  6E32               	movwf	btemp^0,c
 14117  016460  0E00               	movlw	0
 14118  016462  6E33               	movwf	(btemp+1)^0,c
 14119  016464                     l2780:
 14120                           
 14121                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14122  016464  0EF6               	movlw	246
 14123  016466  26E1               	addwf	fsr1l,f,c
 14124  016468  0EFF               	movlw	255
 14125  01646A  22E2               	addwfc	fsr1h,f,c
 14126  01646C  0012               	return		;funcret
 14127  01646E                     __end_of___fpclassifyf:
 14128                           	opt callstack 0
 14129                           
 14130 ;; *************** function ___fltol *****************
 14131 ;; Defined at:
 14132 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;  f1              4  [STACK] int 
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;  exp1            1  [STACK] unsigned char 
 14137 ;;  sign1           1  [STACK] unsigned char 
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  4  [STACK] long 
 14140 ;; Registers used:
 14141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/5
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14151 ;;Total ram usage:        0 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:    6
 14154 ;; This function calls:
 14155 ;;		Nothing
 14156 ;; This function is called by:
 14157 ;;		_efgtoa
 14158 ;; This function uses a reentrant model
 14159 ;;
 14160                           
 14161                           	psect	text52
 14162  01646E                     __ptext52:
 14163                           	opt callstack 0
 14164  01646E                     ___fltol:
 14165                           	opt callstack 0
 14166                           
 14167                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14168  01646E  52E6               	movf	postinc1,f,c
 14169  016470  52E6               	movf	postinc1,f,c
 14170                           
 14171                           ;stkvar	_f1 @ sp[(-2)+-4]
 14172                           
 14173                           ;incstack = 0
 14174  016472  0EFA               	movlw	-6
 14175  016474  006F FF8C  F03A    	movff	plusw1,btemp+8
 14176  01647A  0EFB               	movlw	-5
 14177  01647C  006F FF8C  F03B    	movff	plusw1,btemp+9
 14178  016482  0EFC               	movlw	-4
 14179  016484  006F FF8C  F03C    	movff	plusw1,btemp+10
 14180  01648A  0EFD               	movlw	-3
 14181  01648C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14182  016492  0E18               	movlw	24
 14183  016494  D005               	goto	u6330
 14184  016496                     u6335:
 14185  016496  90D8               	bcf	status,0,c
 14186  016498  323D               	rrcf	(btemp+11)^0,f,c
 14187  01649A  323C               	rrcf	(btemp+10)^0,f,c
 14188  01649C  323B               	rrcf	(btemp+9)^0,f,c
 14189  01649E  323A               	rrcf	(btemp+8)^0,f,c
 14190  0164A0                     u6330:
 14191  0164A0  2EE8               	decfsz	wreg,f,c
 14192  0164A2  D7F9               	goto	u6335
 14193                           
 14194                           ;stkvar	_exp1 @ sp[(-2)+0]
 14195  0164A4  0EFE               	movlw	-2
 14196  0164A6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14197  0164AC  0EFE               	movlw	-2
 14198  0164AE  50E3               	movf	plusw1,w,c
 14199  0164B0  A4D8               	btfss	status,2,c
 14200  0164B2  D006               	goto	l7282
 14201  0164B4                     u6340:
 14202  0164B4  0E00               	movlw	0
 14203  0164B6  6E32               	movwf	btemp^0,c
 14204  0164B8  6A33               	clrf	(btemp+1)^0,c
 14205  0164BA  6A34               	clrf	(btemp+2)^0,c
 14206  0164BC  6A35               	clrf	(btemp+3)^0,c
 14207  0164BE  D08B               	goto	l2396
 14208  0164C0                     l7282:
 14209                           
 14210                           ;stkvar	_f1 @ sp[(-2)+-4]
 14211  0164C0  0EFA               	movlw	-6
 14212  0164C2  006F FF8C  F03A    	movff	plusw1,btemp+8
 14213  0164C8  0EFB               	movlw	-5
 14214  0164CA  006F FF8C  F03B    	movff	plusw1,btemp+9
 14215  0164D0  0EFC               	movlw	-4
 14216  0164D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 14217  0164D8  0EFD               	movlw	-3
 14218  0164DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14219  0164E0  0E20               	movlw	32
 14220  0164E2  D005               	goto	u6350
 14221  0164E4                     u6355:
 14222  0164E4  90D8               	bcf	status,0,c
 14223  0164E6  323D               	rrcf	(btemp+11)^0,f,c
 14224  0164E8  323C               	rrcf	(btemp+10)^0,f,c
 14225  0164EA  323B               	rrcf	(btemp+9)^0,f,c
 14226  0164EC  323A               	rrcf	(btemp+8)^0,f,c
 14227  0164EE                     u6350:
 14228  0164EE  2EE8               	decfsz	wreg,f,c
 14229  0164F0  D7F9               	goto	u6355
 14230                           
 14231                           ;stkvar	_sign1 @ sp[(-2)+1]
 14232  0164F2  0EFF               	movlw	-1
 14233  0164F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14234                           
 14235                           ;stkvar	_f1 @ sp[(-2)+-4]
 14236  0164FA  0EFC               	movlw	-4
 14237  0164FC  8EE3               	bsf	plusw1,7,c
 14238                           
 14239                           ;stkvar	_f1 @ sp[(-2)+-4]
 14240  0164FE  50E1               	movf	fsr1l,w,c
 14241  016500  0FFA               	addlw	-6
 14242  016502  6ED9               	movwf	fsr2l,c
 14243  016504  50E2               	movf	fsr1h,w,c
 14244  016506  6EDA               	movwf	fsr2h,c
 14245  016508  0EFF               	movlw	255
 14246  01650A  22DA               	addwfc	fsr2h,f,c
 14247  01650C  0EFF               	movlw	255
 14248  01650E  16DE               	andwf	postinc2,f,c
 14249  016510  0EFF               	movlw	255
 14250  016512  16DE               	andwf	postinc2,f,c
 14251  016514  0EFF               	movlw	255
 14252  016516  16DE               	andwf	postinc2,f,c
 14253  016518  0E00               	movlw	0
 14254  01651A  16DE               	andwf	postinc2,f,c
 14255                           
 14256                           ;stkvar	_exp1 @ sp[(-2)+0]
 14257  01651C  0EFE               	movlw	-2
 14258  01651E  006F FF8C  F032    	movff	plusw1,btemp
 14259  016524  0E96               	movlw	150
 14260  016526  5E32               	subwf	btemp^0,f,c
 14261  016528  0EFE               	movlw	-2
 14262  01652A  0060  F0CB  FFE3   	movff	btemp,plusw1
 14263                           
 14264                           ;stkvar	_exp1 @ sp[(-2)+0]
 14265  016530  0EFE               	movlw	-2
 14266  016532  AEE3               	btfss	plusw1,7,c
 14267  016534  D014               	goto	l7300
 14268                           
 14269                           ;stkvar	_exp1 @ sp[(-2)+0]
 14270  016536  0EFE               	movlw	-2
 14271  016538  50E3               	movf	plusw1,w,c
 14272  01653A  0A80               	xorlw	128
 14273  01653C  0F97               	addlw	151
 14274  01653E  A0D8               	btfss	status,0,c
 14275  016540  D7B9               	goto	u6340
 14276  016542                     l7298:
 14277                           
 14278                           ;stkvar	_f1 @ sp[(-2)+-4]
 14279  016542  90D8               	bcf	status,0,c
 14280  016544  0EFD               	movlw	-3
 14281  016546  32E3               	rrcf	plusw1,f,c
 14282  016548  0EFC               	movlw	-4
 14283  01654A  32E3               	rrcf	plusw1,f,c
 14284  01654C  0EFB               	movlw	-5
 14285  01654E  32E3               	rrcf	plusw1,f,c
 14286  016550  0EFA               	movlw	-6
 14287  016552  32E3               	rrcf	plusw1,f,c
 14288                           
 14289                           ;stkvar	_exp1 @ sp[(-2)+0]
 14290  016554  0EFE               	movlw	-2
 14291  016556  2AE3               	incf	plusw1,f,c
 14292  016558  B4D8               	btfsc	status,2,c
 14293  01655A  D018               	goto	u6400
 14294  01655C  D7F2               	goto	l7298
 14295  01655E                     l7300:
 14296                           
 14297                           ;stkvar	_exp1 @ sp[(-2)+0]
 14298  01655E  0EFE               	movlw	-2
 14299  016560  006F FF8C  F032    	movff	plusw1,btemp
 14300  016566  0E1F               	movlw	31
 14301  016568  6432               	cpfsgt	btemp^0,c
 14302  01656A  D00C               	goto	l7308
 14303  01656C  D7A3               	goto	u6340
 14304  01656E                     l7306:
 14305                           
 14306                           ;stkvar	_f1 @ sp[(-2)+-4]
 14307  01656E  90D8               	bcf	status,0,c
 14308  016570  0EFA               	movlw	-6
 14309  016572  36E3               	rlcf	plusw1,f,c
 14310  016574  0EFB               	movlw	-5
 14311  016576  36E3               	rlcf	plusw1,f,c
 14312  016578  0EFC               	movlw	-4
 14313  01657A  36E3               	rlcf	plusw1,f,c
 14314  01657C  0EFD               	movlw	-3
 14315  01657E  36E3               	rlcf	plusw1,f,c
 14316                           
 14317                           ;stkvar	_exp1 @ sp[(-2)+0]
 14318  016580  0EFE               	movlw	-2
 14319  016582  06E3               	decf	plusw1,f,c
 14320  016584                     l7308:
 14321                           
 14322                           ;stkvar	_exp1 @ sp[(-2)+0]
 14323  016584  0EFE               	movlw	-2
 14324  016586  50E3               	movf	plusw1,w,c
 14325  016588  A4D8               	btfss	status,2,c
 14326  01658A  D7F1               	goto	l7306
 14327  01658C                     u6400:
 14328                           
 14329                           ;stkvar	_sign1 @ sp[(-2)+1]
 14330  01658C  0EFF               	movlw	-1
 14331  01658E  50E3               	movf	plusw1,w,c
 14332  016590  B4D8               	btfsc	status,2,c
 14333  016592  D011               	goto	u6420
 14334                           
 14335                           ;stkvar	_f1 @ sp[(-2)+-4]
 14336                           ;stkvar	_f1 @ sp[(-2)+-4]
 14337  016594  0EFA               	movlw	-6
 14338  016596  6CE3               	negf	plusw1,c
 14339  016598  0EFB               	movlw	-5
 14340  01659A  1EE3               	comf	plusw1,f,c
 14341  01659C  0EFC               	movlw	-4
 14342  01659E  1EE3               	comf	plusw1,f,c
 14343  0165A0  0EFD               	movlw	-3
 14344  0165A2  1EE3               	comf	plusw1,f,c
 14345  0165A4  E308               	bnc	u6420
 14346  0165A6  0EFB               	movlw	-5
 14347  0165A8  2AE3               	incf	plusw1,f,c
 14348  0165AA  E305               	bnc	u6420
 14349  0165AC  0EFC               	movlw	-4
 14350  0165AE  2AE3               	incf	plusw1,f,c
 14351  0165B0  E302               	bnc	u6420
 14352  0165B2  0EFD               	movlw	-3
 14353  0165B4  2AE3               	incf	plusw1,f,c
 14354  0165B6                     u6420:
 14355                           
 14356                           ;stkvar	_f1 @ sp[(-2)+-4]
 14357  0165B6  0EFA               	movlw	-6
 14358  0165B8  006F FF8C  F032    	movff	plusw1,btemp
 14359  0165BE  0EFB               	movlw	-5
 14360  0165C0  006F FF8C  F033    	movff	plusw1,btemp+1
 14361  0165C6  0EFC               	movlw	-4
 14362  0165C8  006F FF8C  F034    	movff	plusw1,btemp+2
 14363  0165CE  0EFD               	movlw	-3
 14364  0165D0  006F FF8C  F035    	movff	plusw1,btemp+3
 14365  0165D6                     l2396:
 14366                           
 14367                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14368  0165D6  0EFA               	movlw	250
 14369  0165D8  26E1               	addwf	fsr1l,f,c
 14370  0165DA  0EFF               	movlw	255
 14371  0165DC  22E2               	addwfc	fsr1h,f,c
 14372  0165DE  0012               	return		;funcret
 14373  0165E0                     __end_of___fltol:
 14374                           	opt callstack 0
 14375                           
 14376 ;; *************** function ___flneg *****************
 14377 ;; Defined at:
 14378 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;  f1              4  [STACK] long 
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;		None
 14383 ;; Return value:  Size  Location     Type
 14384 ;;                  4  [STACK] long 
 14385 ;; Registers used:
 14386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/5
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14396 ;;Total ram usage:        0 bytes
 14397 ;; Hardware stack levels used:    1
 14398 ;; Hardware stack levels required when called:    6
 14399 ;; This function calls:
 14400 ;;		Nothing
 14401 ;; This function is called by:
 14402 ;;		_efgtoa
 14403 ;; This function uses a reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text53
 14407  018290                     __ptext53:
 14408                           	opt callstack 0
 14409  018290                     ___flneg:
 14410                           	opt callstack 17
 14411                           
 14412                           ;stkvar	_f1 @ sp[(0)+-4]
 14413                           
 14414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14415                           ;incstack = 0
 14416  018290  0EFC               	movlw	-4
 14417  018292  50E3               	movf	plusw1,w,c
 14418  018294  E10A               	bnz	u6320
 14419  018296  0EFD               	movlw	-3
 14420  018298  50E3               	movf	plusw1,w,c
 14421  01829A  E107               	bnz	u6320
 14422  01829C  0EFE               	movlw	-2
 14423  01829E  50E3               	movf	plusw1,w,c
 14424  0182A0  E104               	bnz	u6320
 14425  0182A2  0EFF               	movlw	-1
 14426  0182A4  50E3               	movf	plusw1,w,c
 14427  0182A6  B4D8               	btfsc	status,2,c
 14428  0182A8  D002               	goto	l7272
 14429  0182AA                     u6320:
 14430                           
 14431                           ;stkvar	_f1 @ sp[(0)+-4]
 14432  0182AA  0EFF               	movlw	-1
 14433  0182AC  7EE3               	btg	plusw1,7,c
 14434  0182AE                     l7272:
 14435                           
 14436                           ;stkvar	_f1 @ sp[(0)+-4]
 14437  0182AE  0EFC               	movlw	-4
 14438  0182B0  006F FF8C  F032    	movff	plusw1,btemp
 14439  0182B6  0EFD               	movlw	-3
 14440  0182B8  006F FF8C  F033    	movff	plusw1,btemp+1
 14441  0182BE  0EFE               	movlw	-2
 14442  0182C0  006F FF8C  F034    	movff	plusw1,btemp+2
 14443  0182C6  0EFF               	movlw	-1
 14444  0182C8  006F FF8C  F035    	movff	plusw1,btemp+3
 14445                           
 14446                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14447  0182CE  52E5               	movf	postdec1,f,c
 14448  0182D0  52E5               	movf	postdec1,f,c
 14449  0182D2  52E5               	movf	postdec1,f,c
 14450  0182D4  52E5               	movf	postdec1,f,c
 14451  0182D6  0012               	return		;funcret
 14452  0182D8                     __end_of___flneg:
 14453                           	opt callstack 0
 14454                           
 14455 ;; *************** function ___flge *****************
 14456 ;; Defined at:
 14457 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;  ff1             4  [STACK] long 
 14460 ;;  ff2             4  [STACK] long 
 14461 ;; Auto vars:     Size  Location     Type
 14462 ;;		None
 14463 ;; Return value:  Size  Location     Type
 14464 ;;		None               void
 14465 ;; Registers used:
 14466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14467 ;; Tracked objects:
 14468 ;;		On entry : 0/5
 14469 ;;		On exit  : 0/0
 14470 ;;		Unchanged: 0/0
 14471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14476 ;;Total ram usage:        0 bytes
 14477 ;; Hardware stack levels used:    1
 14478 ;; Hardware stack levels required when called:    6
 14479 ;; This function calls:
 14480 ;;		Nothing
 14481 ;; This function is called by:
 14482 ;;		_efgtoa
 14483 ;; This function uses a reentrant model
 14484 ;;
 14485                           
 14486                           	psect	text54
 14487  0165E0                     __ptext54:
 14488                           	opt callstack 0
 14489  0165E0                     ___flge:
 14490                           	opt callstack 17
 14491                           
 14492                           ;stkvar	_ff1 @ sp[(0)+-4]
 14493                           
 14494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14495                           ;incstack = 0
 14496  0165E0  50E1               	movf	fsr1l,w,c
 14497  0165E2  0FFC               	addlw	-4
 14498  0165E4  6ED9               	movwf	fsr2l,c
 14499  0165E6  50E2               	movf	fsr1h,w,c
 14500  0165E8  6EDA               	movwf	fsr2h,c
 14501  0165EA  0EFF               	movlw	255
 14502  0165EC  22DA               	addwfc	fsr2h,f,c
 14503  0165EE  0E00               	movlw	0
 14504  0165F0  14DE               	andwf	postinc2,w,c
 14505  0165F2  6E3A               	movwf	(btemp+8)^0,c
 14506  0165F4  0E00               	movlw	0
 14507  0165F6  14DE               	andwf	postinc2,w,c
 14508  0165F8  6E3B               	movwf	(btemp+9)^0,c
 14509  0165FA  0E80               	movlw	128
 14510  0165FC  14DE               	andwf	postinc2,w,c
 14511  0165FE  6E3C               	movwf	(btemp+10)^0,c
 14512  016600  0E7F               	movlw	127
 14513  016602  14DE               	andwf	postinc2,w,c
 14514  016604  6E3D               	movwf	(btemp+11)^0,c
 14515  016606  503A               	movf	(btemp+8)^0,w,c
 14516  016608  103B               	iorwf	(btemp+9)^0,w,c
 14517  01660A  103C               	iorwf	(btemp+10)^0,w,c
 14518  01660C  103D               	iorwf	(btemp+11)^0,w,c
 14519  01660E  A4D8               	btfss	status,2,c
 14520  016610  D008               	goto	l7246
 14521                           
 14522                           ;stkvar	_ff1 @ sp[(0)+-4]
 14523  016612  0EFC               	movlw	-4
 14524  016614  6AE3               	clrf	plusw1,c
 14525  016616  0EFD               	movlw	-3
 14526  016618  6AE3               	clrf	plusw1,c
 14527  01661A  0EFE               	movlw	-2
 14528  01661C  6AE3               	clrf	plusw1,c
 14529  01661E  0EFF               	movlw	-1
 14530  016620  6AE3               	clrf	plusw1,c
 14531  016622                     l7246:
 14532                           
 14533                           ;stkvar	_ff2 @ sp[(0)+-8]
 14534  016622  50E1               	movf	fsr1l,w,c
 14535  016624  0FF8               	addlw	-8
 14536  016626  6ED9               	movwf	fsr2l,c
 14537  016628  50E2               	movf	fsr1h,w,c
 14538  01662A  6EDA               	movwf	fsr2h,c
 14539  01662C  0EFF               	movlw	255
 14540  01662E  22DA               	addwfc	fsr2h,f,c
 14541  016630  0E00               	movlw	0
 14542  016632  14DE               	andwf	postinc2,w,c
 14543  016634  6E3A               	movwf	(btemp+8)^0,c
 14544  016636  0E00               	movlw	0
 14545  016638  14DE               	andwf	postinc2,w,c
 14546  01663A  6E3B               	movwf	(btemp+9)^0,c
 14547  01663C  0E80               	movlw	128
 14548  01663E  14DE               	andwf	postinc2,w,c
 14549  016640  6E3C               	movwf	(btemp+10)^0,c
 14550  016642  0E7F               	movlw	127
 14551  016644  14DE               	andwf	postinc2,w,c
 14552  016646  6E3D               	movwf	(btemp+11)^0,c
 14553  016648  503A               	movf	(btemp+8)^0,w,c
 14554  01664A  103B               	iorwf	(btemp+9)^0,w,c
 14555  01664C  103C               	iorwf	(btemp+10)^0,w,c
 14556  01664E  103D               	iorwf	(btemp+11)^0,w,c
 14557  016650  A4D8               	btfss	status,2,c
 14558  016652  D008               	goto	l2362
 14559                           
 14560                           ;stkvar	_ff2 @ sp[(0)+-8]
 14561  016654  0EF8               	movlw	-8
 14562  016656  6AE3               	clrf	plusw1,c
 14563  016658  0EF9               	movlw	-7
 14564  01665A  6AE3               	clrf	plusw1,c
 14565  01665C  0EFA               	movlw	-6
 14566  01665E  6AE3               	clrf	plusw1,c
 14567  016660  0EFB               	movlw	-5
 14568  016662  6AE3               	clrf	plusw1,c
 14569  016664                     l2362:
 14570                           
 14571                           ;stkvar	_ff1 @ sp[(0)+-4]
 14572  016664  0EFF               	movlw	-1
 14573  016666  AEE3               	btfss	plusw1,7,c
 14574  016668  D024               	goto	l7252
 14575                           
 14576                           ;stkvar	_ff1 @ sp[(0)+-4]
 14577  01666A  0E00               	movlw	0
 14578  01666C  6E3A               	movwf	(btemp+8)^0,c
 14579  01666E  0E00               	movlw	0
 14580  016670  6E3B               	movwf	(btemp+9)^0,c
 14581  016672  0E00               	movlw	0
 14582  016674  6E3C               	movwf	(btemp+10)^0,c
 14583  016676  0E80               	movlw	128
 14584  016678  6E3D               	movwf	(btemp+11)^0,c
 14585  01667A  0EFC               	movlw	-4
 14586  01667C  50E3               	movf	plusw1,w,c
 14587  01667E  5E3A               	subwf	(btemp+8)^0,f,c
 14588  016680  0EFD               	movlw	-3
 14589  016682  50E3               	movf	plusw1,w,c
 14590  016684  5A3B               	subwfb	(btemp+9)^0,f,c
 14591  016686  0EFE               	movlw	-2
 14592  016688  50E3               	movf	plusw1,w,c
 14593  01668A  5A3C               	subwfb	(btemp+10)^0,f,c
 14594  01668C  0EFF               	movlw	-1
 14595  01668E  50E3               	movf	plusw1,w,c
 14596  016690  5A3D               	subwfb	(btemp+11)^0,f,c
 14597                           
 14598                           ;stkvar	_ff1 @ sp[(0)+-4]
 14599  016692  0EFC               	movlw	-4
 14600  016694  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14601  01669A  0EFD               	movlw	-3
 14602  01669C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14603  0166A2  0EFE               	movlw	-2
 14604  0166A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14605  0166AA  0EFF               	movlw	-1
 14606  0166AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14607  0166B2                     l7252:
 14608                           
 14609                           ;stkvar	_ff2 @ sp[(0)+-8]
 14610  0166B2  0EFB               	movlw	-5
 14611  0166B4  AEE3               	btfss	plusw1,7,c
 14612  0166B6  D024               	goto	l7256
 14613                           
 14614                           ;stkvar	_ff2 @ sp[(0)+-8]
 14615  0166B8  0E00               	movlw	0
 14616  0166BA  6E3A               	movwf	(btemp+8)^0,c
 14617  0166BC  0E00               	movlw	0
 14618  0166BE  6E3B               	movwf	(btemp+9)^0,c
 14619  0166C0  0E00               	movlw	0
 14620  0166C2  6E3C               	movwf	(btemp+10)^0,c
 14621  0166C4  0E80               	movlw	128
 14622  0166C6  6E3D               	movwf	(btemp+11)^0,c
 14623  0166C8  0EF8               	movlw	-8
 14624  0166CA  50E3               	movf	plusw1,w,c
 14625  0166CC  5E3A               	subwf	(btemp+8)^0,f,c
 14626  0166CE  0EF9               	movlw	-7
 14627  0166D0  50E3               	movf	plusw1,w,c
 14628  0166D2  5A3B               	subwfb	(btemp+9)^0,f,c
 14629  0166D4  0EFA               	movlw	-6
 14630  0166D6  50E3               	movf	plusw1,w,c
 14631  0166D8  5A3C               	subwfb	(btemp+10)^0,f,c
 14632  0166DA  0EFB               	movlw	-5
 14633  0166DC  50E3               	movf	plusw1,w,c
 14634  0166DE  5A3D               	subwfb	(btemp+11)^0,f,c
 14635                           
 14636                           ;stkvar	_ff2 @ sp[(0)+-8]
 14637  0166E0  0EF8               	movlw	-8
 14638  0166E2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14639  0166E8  0EF9               	movlw	-7
 14640  0166EA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14641  0166F0  0EFA               	movlw	-6
 14642  0166F2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14643  0166F8  0EFB               	movlw	-5
 14644  0166FA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14645  016700                     l7256:
 14646                           
 14647                           ;stkvar	_ff1 @ sp[(0)+-4]
 14648  016700  0EFF               	movlw	-1
 14649  016702  7EE3               	btg	plusw1,7,c
 14650                           
 14651                           ;stkvar	_ff2 @ sp[(0)+-8]
 14652  016704  0EFB               	movlw	-5
 14653  016706  7EE3               	btg	plusw1,7,c
 14654                           
 14655                           ;stkvar	_ff2 @ sp[(0)+-8]
 14656                           ;stkvar	_ff1 @ sp[(0)+-4]
 14657  016708  50E1               	movf	fsr1l,w,c
 14658  01670A  0FFC               	addlw	-4
 14659  01670C  6ED9               	movwf	fsr2l,c
 14660  01670E  50E2               	movf	fsr1h,w,c
 14661  016710  6EDA               	movwf	fsr2h,c
 14662  016712  0EFF               	movlw	255
 14663  016714  22DA               	addwfc	fsr2h,f,c
 14664  016716  0EF8               	movlw	-8
 14665  016718  50E3               	movf	plusw1,w,c
 14666  01671A  5CDE               	subwf	postinc2,w,c
 14667  01671C  0EF9               	movlw	-7
 14668  01671E  50E3               	movf	plusw1,w,c
 14669  016720  58DE               	subwfb	postinc2,w,c
 14670  016722  0EFA               	movlw	-6
 14671  016724  50E3               	movf	plusw1,w,c
 14672  016726  58DE               	subwfb	postinc2,w,c
 14673  016728  0EFB               	movlw	-5
 14674  01672A  50E3               	movf	plusw1,w,c
 14675  01672C  58DE               	subwfb	postinc2,w,c
 14676  01672E  B0D8               	btfsc	status,0,c
 14677  016730  D002               	goto	l7264
 14678  016732  9032               	bcf	btemp& (0+255),0,c
 14679  016734  D001               	goto	l2369
 14680  016736                     l7264:
 14681  016736  8032               	bsf	btemp& (0+255),0,c
 14682  016738                     l2369:
 14683                           
 14684                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14685  016738  0EF8               	movlw	248
 14686  01673A  26E1               	addwf	fsr1l,f,c
 14687  01673C  0EFF               	movlw	255
 14688  01673E  22E2               	addwfc	fsr1h,f,c
 14689  016740  0012               	return		;funcret
 14690  016742                     __end_of___flge:
 14691                           	opt callstack 0
 14692                           
 14693 ;; *************** function ___fleq *****************
 14694 ;; Defined at:
 14695 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  ff1             4  [STACK] long 
 14698 ;;  ff2             4  [STACK] long 
 14699 ;; Auto vars:     Size  Location     Type
 14700 ;;		None
 14701 ;; Return value:  Size  Location     Type
 14702 ;;		None               void
 14703 ;; Registers used:
 14704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14705 ;; Tracked objects:
 14706 ;;		On entry : 0/5
 14707 ;;		On exit  : 0/0
 14708 ;;		Unchanged: 0/0
 14709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;Total ram usage:        0 bytes
 14715 ;; Hardware stack levels used:    1
 14716 ;; Hardware stack levels required when called:    6
 14717 ;; This function calls:
 14718 ;;		Nothing
 14719 ;; This function is called by:
 14720 ;;		_efgtoa
 14721 ;; This function uses a reentrant model
 14722 ;;
 14723                           
 14724                           	psect	text55
 14725  017422                     __ptext55:
 14726                           	opt callstack 0
 14727  017422                     ___fleq:
 14728                           	opt callstack 17
 14729                           
 14730                           ;stkvar	_ff1 @ sp[(0)+-4]
 14731                           
 14732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14733                           ;incstack = 0
 14734  017422  50E1               	movf	fsr1l,w,c
 14735  017424  0FFC               	addlw	-4
 14736  017426  6ED9               	movwf	fsr2l,c
 14737  017428  50E2               	movf	fsr1h,w,c
 14738  01742A  6EDA               	movwf	fsr2h,c
 14739  01742C  0EFF               	movlw	255
 14740  01742E  22DA               	addwfc	fsr2h,f,c
 14741  017430  0E00               	movlw	0
 14742  017432  14DE               	andwf	postinc2,w,c
 14743  017434  6E3A               	movwf	(btemp+8)^0,c
 14744  017436  0E00               	movlw	0
 14745  017438  14DE               	andwf	postinc2,w,c
 14746  01743A  6E3B               	movwf	(btemp+9)^0,c
 14747  01743C  0E80               	movlw	128
 14748  01743E  14DE               	andwf	postinc2,w,c
 14749  017440  6E3C               	movwf	(btemp+10)^0,c
 14750  017442  0E7F               	movlw	127
 14751  017444  14DE               	andwf	postinc2,w,c
 14752  017446  6E3D               	movwf	(btemp+11)^0,c
 14753  017448  503A               	movf	(btemp+8)^0,w,c
 14754  01744A  103B               	iorwf	(btemp+9)^0,w,c
 14755  01744C  103C               	iorwf	(btemp+10)^0,w,c
 14756  01744E  103D               	iorwf	(btemp+11)^0,w,c
 14757  017450  A4D8               	btfss	status,2,c
 14758  017452  D008               	goto	l7230
 14759                           
 14760                           ;stkvar	_ff1 @ sp[(0)+-4]
 14761  017454  0EFC               	movlw	-4
 14762  017456  6AE3               	clrf	plusw1,c
 14763  017458  0EFD               	movlw	-3
 14764  01745A  6AE3               	clrf	plusw1,c
 14765  01745C  0EFE               	movlw	-2
 14766  01745E  6AE3               	clrf	plusw1,c
 14767  017460  0EFF               	movlw	-1
 14768  017462  6AE3               	clrf	plusw1,c
 14769  017464                     l7230:
 14770                           
 14771                           ;stkvar	_ff2 @ sp[(0)+-8]
 14772  017464  50E1               	movf	fsr1l,w,c
 14773  017466  0FF8               	addlw	-8
 14774  017468  6ED9               	movwf	fsr2l,c
 14775  01746A  50E2               	movf	fsr1h,w,c
 14776  01746C  6EDA               	movwf	fsr2h,c
 14777  01746E  0EFF               	movlw	255
 14778  017470  22DA               	addwfc	fsr2h,f,c
 14779  017472  0E00               	movlw	0
 14780  017474  14DE               	andwf	postinc2,w,c
 14781  017476  6E3A               	movwf	(btemp+8)^0,c
 14782  017478  0E00               	movlw	0
 14783  01747A  14DE               	andwf	postinc2,w,c
 14784  01747C  6E3B               	movwf	(btemp+9)^0,c
 14785  01747E  0E80               	movlw	128
 14786  017480  14DE               	andwf	postinc2,w,c
 14787  017482  6E3C               	movwf	(btemp+10)^0,c
 14788  017484  0E7F               	movlw	127
 14789  017486  14DE               	andwf	postinc2,w,c
 14790  017488  6E3D               	movwf	(btemp+11)^0,c
 14791  01748A  503A               	movf	(btemp+8)^0,w,c
 14792  01748C  103B               	iorwf	(btemp+9)^0,w,c
 14793  01748E  103C               	iorwf	(btemp+10)^0,w,c
 14794  017490  103D               	iorwf	(btemp+11)^0,w,c
 14795  017492  A4D8               	btfss	status,2,c
 14796  017494  D008               	goto	l7234
 14797                           
 14798                           ;stkvar	_ff2 @ sp[(0)+-8]
 14799  017496  0EF8               	movlw	-8
 14800  017498  6AE3               	clrf	plusw1,c
 14801  01749A  0EF9               	movlw	-7
 14802  01749C  6AE3               	clrf	plusw1,c
 14803  01749E  0EFA               	movlw	-6
 14804  0174A0  6AE3               	clrf	plusw1,c
 14805  0174A2  0EFB               	movlw	-5
 14806  0174A4  6AE3               	clrf	plusw1,c
 14807  0174A6                     l7234:
 14808                           
 14809                           ;stkvar	_ff2 @ sp[(0)+-8]
 14810                           ;stkvar	_ff1 @ sp[(0)+-4]
 14811  0174A6  50E1               	movf	fsr1l,w,c
 14812  0174A8  0FFC               	addlw	-4
 14813  0174AA  6ED9               	movwf	fsr2l,c
 14814  0174AC  50E2               	movf	fsr1h,w,c
 14815  0174AE  6EDA               	movwf	fsr2h,c
 14816  0174B0  0EFF               	movlw	255
 14817  0174B2  22DA               	addwfc	fsr2h,f,c
 14818  0174B4  0EF8               	movlw	-8
 14819  0174B6  50E3               	movf	plusw1,w,c
 14820  0174B8  18DE               	xorwf	postinc2,w,c
 14821  0174BA  E10D               	bnz	u6260
 14822  0174BC  0EF9               	movlw	-7
 14823  0174BE  50E3               	movf	plusw1,w,c
 14824  0174C0  18DE               	xorwf	postinc2,w,c
 14825  0174C2  E109               	bnz	u6260
 14826  0174C4  0EFA               	movlw	-6
 14827  0174C6  50E3               	movf	plusw1,w,c
 14828  0174C8  18DE               	xorwf	postinc2,w,c
 14829  0174CA  E105               	bnz	u6260
 14830  0174CC  0EFB               	movlw	-5
 14831  0174CE  50E3               	movf	plusw1,w,c
 14832  0174D0  18DE               	xorwf	postinc2,w,c
 14833  0174D2  B4D8               	btfsc	status,2,c
 14834  0174D4  D002               	goto	l7238
 14835  0174D6                     u6260:
 14836  0174D6  9032               	bcf	btemp& (0+255),0,c
 14837  0174D8  D001               	goto	l2358
 14838  0174DA                     l7238:
 14839  0174DA  8032               	bsf	btemp& (0+255),0,c
 14840  0174DC                     l2358:
 14841                           
 14842                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14843  0174DC  0EF8               	movlw	248
 14844  0174DE  26E1               	addwf	fsr1l,f,c
 14845  0174E0  0EFF               	movlw	255
 14846  0174E2  22E2               	addwfc	fsr1h,f,c
 14847  0174E4  0012               	return		;funcret
 14848  0174E6                     __end_of___fleq:
 14849                           	opt callstack 0
 14850                           
 14851 ;; *************** function ___fldiv *****************
 14852 ;; Defined at:
 14853 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;  b               4  [STACK] long 
 14856 ;;  a               4  [STACK] long 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  grs             4  [STACK] unsigned long 
 14859 ;;  rem             4  [STACK] unsigned long 
 14860 ;;  new_exp         2  [STACK] short 
 14861 ;;  aexp            1  [STACK] unsigned char 
 14862 ;;  bexp            1  [STACK] unsigned char 
 14863 ;;  sign            1  [STACK] unsigned char 
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  4  [STACK] unsigned char 
 14866 ;; Registers used:
 14867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/2
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14877 ;;Total ram usage:        0 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    6
 14880 ;; This function calls:
 14881 ;;		Nothing
 14882 ;; This function is called by:
 14883 ;;		_conv_raw_result
 14884 ;;		_efgtoa
 14885 ;; This function uses a reentrant model
 14886 ;;
 14887                           
 14888                           	psect	text56
 14889  0135B6                     __ptext56:
 14890                           	opt callstack 0
 14891  0135B6                     ___fldiv:
 14892                           	opt callstack 0
 14893                           
 14894                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14895  0135B6  0E0D               	movlw	13
 14896  0135B8  26E1               	addwf	fsr1l,f,c
 14897  0135BA  0E00               	movlw	0
 14898  0135BC  22E2               	addwfc	fsr1h,f,c
 14899                           
 14900                           ;stkvar	_b @ sp[(-13)+-4]
 14901                           
 14902                           ;incstack = 0
 14903  0135BE  0EF2               	movlw	242
 14904  0135C0  24E1               	addwf	fsr1l,w,c
 14905  0135C2  6ED9               	movwf	fsr2l,c
 14906  0135C4  0EFF               	movlw	255
 14907  0135C6  20E2               	addwfc	fsr1h,w,c
 14908  0135C8  6EDA               	movwf	fsr2h,c
 14909  0135CA  50DF               	movf	indf2,w,c
 14910  0135CC  6E3D               	movwf	(btemp+11)^0,c
 14911  0135CE  0E80               	movlw	128
 14912  0135D0  163D               	andwf	(btemp+11)^0,f,c
 14913                           
 14914                           ;stkvar	_sign @ sp[(-13)+12]
 14915  0135D2  0EFF               	movlw	-1
 14916  0135D4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14917                           
 14918                           ;stkvar	_b @ sp[(-13)+-4]
 14919  0135DA  0EF2               	movlw	242
 14920  0135DC  24E1               	addwf	fsr1l,w,c
 14921  0135DE  6ED9               	movwf	fsr2l,c
 14922  0135E0  0EFF               	movlw	255
 14923  0135E2  20E2               	addwfc	fsr1h,w,c
 14924  0135E4  6EDA               	movwf	fsr2h,c
 14925  0135E6  50DF               	movf	indf2,w,c
 14926  0135E8  6E3D               	movwf	(btemp+11)^0,c
 14927  0135EA  90D8               	bcf	status,0,c
 14928  0135EC  343D               	rlcf	(btemp+11)^0,w,c
 14929  0135EE  6E3C               	movwf	(btemp+10)^0,c
 14930                           
 14931                           ;stkvar	_bexp @ sp[(-13)+11]
 14932  0135F0  0EFE               	movlw	-2
 14933  0135F2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14934                           
 14935                           ;stkvar	_b @ sp[(-13)+-4]
 14936  0135F8  0EF1               	movlw	241
 14937  0135FA  24E1               	addwf	fsr1l,w,c
 14938  0135FC  6ED9               	movwf	fsr2l,c
 14939  0135FE  0EFF               	movlw	255
 14940  013600  20E2               	addwfc	fsr1h,w,c
 14941  013602  6EDA               	movwf	fsr2h,c
 14942  013604  AEDF               	btfss	indf2,7,c
 14943  013606  D002               	goto	l6832
 14944                           
 14945                           ;stkvar	_bexp @ sp[(-13)+11]
 14946  013608  0EFE               	movlw	-2
 14947  01360A  80E3               	bsf	plusw1,0,c
 14948  01360C                     l6832:
 14949                           
 14950                           ;stkvar	_bexp @ sp[(-13)+11]
 14951  01360C  0EFE               	movlw	-2
 14952  01360E  50E3               	movf	plusw1,w,c
 14953  013610  B4D8               	btfsc	status,2,c
 14954  013612  D027               	goto	l6842
 14955                           
 14956                           ;stkvar	_bexp @ sp[(-13)+11]
 14957  013614  0EFE               	movlw	-2
 14958  013616  28E3               	incf	plusw1,w,c
 14959  013618  A4D8               	btfss	status,2,c
 14960  01361A  D018               	goto	l6838
 14961  01361C  0E00               	movlw	0
 14962  01361E  6E3A               	movwf	(btemp+8)^0,c
 14963  013620  0E00               	movlw	0
 14964  013622  6E3B               	movwf	(btemp+9)^0,c
 14965  013624  0E00               	movlw	0
 14966  013626  6E3C               	movwf	(btemp+10)^0,c
 14967  013628  0E00               	movlw	0
 14968  01362A  6E3D               	movwf	(btemp+11)^0,c
 14969                           
 14970                           ;stkvar	_b @ sp[(-13)+-4]
 14971  01362C  0EEF               	movlw	-17
 14972  01362E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14973  013634  0EF0               	movlw	-16
 14974  013636  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14975  01363C  0EF1               	movlw	-15
 14976  01363E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14977  013644  0EF2               	movlw	-14
 14978  013646  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14979  01364C                     l6838:
 14980                           
 14981                           ;stkvar	_b @ sp[(-13)+-4]
 14982  01364C  0EF1               	movlw	-15
 14983  01364E  8EE3               	bsf	plusw1,7,c
 14984                           
 14985                           ;stkvar	_b @ sp[(-13)+-4]
 14986  013650  0EF2               	movlw	242
 14987  013652  24E1               	addwf	fsr1l,w,c
 14988  013654  6ED9               	movwf	fsr2l,c
 14989  013656  0EFF               	movlw	255
 14990  013658  20E2               	addwfc	fsr1h,w,c
 14991  01365A  6EDA               	movwf	fsr2h,c
 14992  01365C  0E00               	movlw	0
 14993  01365E  6EDF               	movwf	indf2,c
 14994  013660  D018               	goto	l6844
 14995  013662                     l6842:
 14996  013662  0E00               	movlw	0
 14997  013664  6E3A               	movwf	(btemp+8)^0,c
 14998  013666  0E00               	movlw	0
 14999  013668  6E3B               	movwf	(btemp+9)^0,c
 15000  01366A  0E00               	movlw	0
 15001  01366C  6E3C               	movwf	(btemp+10)^0,c
 15002  01366E  0E00               	movlw	0
 15003  013670  6E3D               	movwf	(btemp+11)^0,c
 15004                           
 15005                           ;stkvar	_b @ sp[(-13)+-4]
 15006  013672  0EEF               	movlw	-17
 15007  013674  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15008  01367A  0EF0               	movlw	-16
 15009  01367C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15010  013682  0EF1               	movlw	-15
 15011  013684  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15012  01368A  0EF2               	movlw	-14
 15013  01368C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15014  013692                     l6844:
 15015                           
 15016                           ;stkvar	_a @ sp[(-13)+-8]
 15017  013692  0EEE               	movlw	238
 15018  013694  24E1               	addwf	fsr1l,w,c
 15019  013696  6ED9               	movwf	fsr2l,c
 15020  013698  0EFF               	movlw	255
 15021  01369A  20E2               	addwfc	fsr1h,w,c
 15022  01369C  6EDA               	movwf	fsr2h,c
 15023  01369E  50DF               	movf	indf2,w,c
 15024  0136A0  6E3D               	movwf	(btemp+11)^0,c
 15025  0136A2  0E80               	movlw	128
 15026  0136A4  163D               	andwf	(btemp+11)^0,f,c
 15027                           
 15028                           ;stkvar	_sign @ sp[(-13)+12]
 15029  0136A6  50E1               	movf	fsr1l,w,c
 15030  0136A8  0FFF               	addlw	-1
 15031  0136AA  6ED9               	movwf	fsr2l,c
 15032  0136AC  50E2               	movf	fsr1h,w,c
 15033  0136AE  6EDA               	movwf	fsr2h,c
 15034  0136B0  0EFF               	movlw	255
 15035  0136B2  22DA               	addwfc	fsr2h,f,c
 15036  0136B4  503D               	movf	(btemp+11)^0,w,c
 15037  0136B6  1ADF               	xorwf	indf2,f,c
 15038                           
 15039                           ;stkvar	_a @ sp[(-13)+-8]
 15040  0136B8  0EEE               	movlw	238
 15041  0136BA  24E1               	addwf	fsr1l,w,c
 15042  0136BC  6ED9               	movwf	fsr2l,c
 15043  0136BE  0EFF               	movlw	255
 15044  0136C0  20E2               	addwfc	fsr1h,w,c
 15045  0136C2  6EDA               	movwf	fsr2h,c
 15046  0136C4  50DF               	movf	indf2,w,c
 15047  0136C6  6E3D               	movwf	(btemp+11)^0,c
 15048  0136C8  90D8               	bcf	status,0,c
 15049  0136CA  343D               	rlcf	(btemp+11)^0,w,c
 15050  0136CC  6E3C               	movwf	(btemp+10)^0,c
 15051                           
 15052                           ;stkvar	_aexp @ sp[(-13)+10]
 15053  0136CE  0EFD               	movlw	-3
 15054  0136D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15055                           
 15056                           ;stkvar	_a @ sp[(-13)+-8]
 15057  0136D6  0EED               	movlw	237
 15058  0136D8  24E1               	addwf	fsr1l,w,c
 15059  0136DA  6ED9               	movwf	fsr2l,c
 15060  0136DC  0EFF               	movlw	255
 15061  0136DE  20E2               	addwfc	fsr1h,w,c
 15062  0136E0  6EDA               	movwf	fsr2h,c
 15063  0136E2  AEDF               	btfss	indf2,7,c
 15064  0136E4  D002               	goto	l6852
 15065                           
 15066                           ;stkvar	_aexp @ sp[(-13)+10]
 15067  0136E6  0EFD               	movlw	-3
 15068  0136E8  80E3               	bsf	plusw1,0,c
 15069  0136EA                     l6852:
 15070                           
 15071                           ;stkvar	_aexp @ sp[(-13)+10]
 15072  0136EA  0EFD               	movlw	-3
 15073  0136EC  50E3               	movf	plusw1,w,c
 15074  0136EE  B4D8               	btfsc	status,2,c
 15075  0136F0  D027               	goto	l6862
 15076                           
 15077                           ;stkvar	_aexp @ sp[(-13)+10]
 15078  0136F2  0EFD               	movlw	-3
 15079  0136F4  28E3               	incf	plusw1,w,c
 15080  0136F6  A4D8               	btfss	status,2,c
 15081  0136F8  D018               	goto	l6858
 15082  0136FA  0E00               	movlw	0
 15083  0136FC  6E3A               	movwf	(btemp+8)^0,c
 15084  0136FE  0E00               	movlw	0
 15085  013700  6E3B               	movwf	(btemp+9)^0,c
 15086  013702  0E00               	movlw	0
 15087  013704  6E3C               	movwf	(btemp+10)^0,c
 15088  013706  0E00               	movlw	0
 15089  013708  6E3D               	movwf	(btemp+11)^0,c
 15090                           
 15091                           ;stkvar	_a @ sp[(-13)+-8]
 15092  01370A  0EEB               	movlw	-21
 15093  01370C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15094  013712  0EEC               	movlw	-20
 15095  013714  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15096  01371A  0EED               	movlw	-19
 15097  01371C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15098  013722  0EEE               	movlw	-18
 15099  013724  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15100  01372A                     l6858:
 15101                           
 15102                           ;stkvar	_a @ sp[(-13)+-8]
 15103  01372A  0EED               	movlw	-19
 15104  01372C  8EE3               	bsf	plusw1,7,c
 15105                           
 15106                           ;stkvar	_a @ sp[(-13)+-8]
 15107  01372E  0EEE               	movlw	238
 15108  013730  24E1               	addwf	fsr1l,w,c
 15109  013732  6ED9               	movwf	fsr2l,c
 15110  013734  0EFF               	movlw	255
 15111  013736  20E2               	addwfc	fsr1h,w,c
 15112  013738  6EDA               	movwf	fsr2h,c
 15113  01373A  0E00               	movlw	0
 15114  01373C  6EDF               	movwf	indf2,c
 15115  01373E  D018               	goto	l6864
 15116  013740                     l6862:
 15117  013740  0E00               	movlw	0
 15118  013742  6E3A               	movwf	(btemp+8)^0,c
 15119  013744  0E00               	movlw	0
 15120  013746  6E3B               	movwf	(btemp+9)^0,c
 15121  013748  0E00               	movlw	0
 15122  01374A  6E3C               	movwf	(btemp+10)^0,c
 15123  01374C  0E00               	movlw	0
 15124  01374E  6E3D               	movwf	(btemp+11)^0,c
 15125                           
 15126                           ;stkvar	_a @ sp[(-13)+-8]
 15127  013750  0EEB               	movlw	-21
 15128  013752  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15129  013758  0EEC               	movlw	-20
 15130  01375A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15131  013760  0EED               	movlw	-19
 15132  013762  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15133  013768  0EEE               	movlw	-18
 15134  01376A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15135  013770                     l6864:
 15136                           
 15137                           ;stkvar	_a @ sp[(-13)+-8]
 15138  013770  0EEB               	movlw	-21
 15139  013772  50E3               	movf	plusw1,w,c
 15140  013774  E139               	bnz	l6876
 15141  013776  0EEC               	movlw	-20
 15142  013778  50E3               	movf	plusw1,w,c
 15143  01377A  E136               	bnz	l6876
 15144  01377C  0EED               	movlw	-19
 15145  01377E  50E3               	movf	plusw1,w,c
 15146  013780  E133               	bnz	l6876
 15147  013782  0EEE               	movlw	-18
 15148  013784  50E3               	movf	plusw1,w,c
 15149  013786  A4D8               	btfss	status,2,c
 15150  013788  D02F               	goto	l6876
 15151                           
 15152                           ;stkvar	_b @ sp[(-13)+-4]
 15153  01378A  0EEF               	movlw	-17
 15154  01378C  6AE3               	clrf	plusw1,c
 15155  01378E  0EF0               	movlw	-16
 15156  013790  6AE3               	clrf	plusw1,c
 15157  013792  0EF1               	movlw	-15
 15158  013794  6AE3               	clrf	plusw1,c
 15159  013796  0EF2               	movlw	-14
 15160  013798  6AE3               	clrf	plusw1,c
 15161                           
 15162                           ;stkvar	_b @ sp[(-13)+-4]
 15163  01379A  0EF1               	movlw	241
 15164  01379C  24E1               	addwf	fsr1l,w,c
 15165  01379E  6ED9               	movwf	fsr2l,c
 15166  0137A0  0EFF               	movlw	255
 15167  0137A2  20E2               	addwfc	fsr1h,w,c
 15168  0137A4  6EDA               	movwf	fsr2h,c
 15169  0137A6  0E80               	movlw	128
 15170  0137A8  12DE               	iorwf	postinc2,f,c
 15171  0137AA  0E7F               	movlw	127
 15172  0137AC  12DD               	iorwf	postdec2,f,c
 15173  0137AE                     l6870:
 15174                           
 15175                           ;stkvar	_sign @ sp[(-13)+12]
 15176  0137AE  0EFF               	movlw	-1
 15177  0137B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 15178                           
 15179                           ;stkvar	_b @ sp[(-13)+-4]
 15180  0137B6  0EF2               	movlw	242
 15181  0137B8  24E1               	addwf	fsr1l,w,c
 15182  0137BA  6ED9               	movwf	fsr2l,c
 15183  0137BC  0EFF               	movlw	255
 15184  0137BE  20E2               	addwfc	fsr1h,w,c
 15185  0137C0  6EDA               	movwf	fsr2h,c
 15186  0137C2  503D               	movf	(btemp+11)^0,w,c
 15187  0137C4  12DF               	iorwf	indf2,f,c
 15188                           
 15189                           ;stkvar	_b @ sp[(-13)+-4]
 15190  0137C6  0EEF               	movlw	-17
 15191  0137C8  006F FF8C  F032    	movff	plusw1,btemp
 15192  0137CE  0EF0               	movlw	-16
 15193  0137D0  006F FF8C  F033    	movff	plusw1,btemp+1
 15194  0137D6  0EF1               	movlw	-15
 15195  0137D8  006F FF8C  F034    	movff	plusw1,btemp+2
 15196  0137DE  0EF2               	movlw	-14
 15197  0137E0  006F FF8C  F035    	movff	plusw1,btemp+3
 15198  0137E6  D19F               	goto	l2681
 15199  0137E8                     l6876:
 15200                           
 15201                           ;stkvar	_bexp @ sp[(-13)+11]
 15202  0137E8  0EFE               	movlw	-2
 15203  0137EA  50E3               	movf	plusw1,w,c
 15204  0137EC  A4D8               	btfss	status,2,c
 15205  0137EE  D009               	goto	l6884
 15206  0137F0  0E00               	movlw	0
 15207  0137F2  6E32               	movwf	btemp^0,c
 15208  0137F4  0E00               	movlw	0
 15209  0137F6  6E33               	movwf	(btemp+1)^0,c
 15210  0137F8  0E00               	movlw	0
 15211  0137FA  6E34               	movwf	(btemp+2)^0,c
 15212  0137FC  0E00               	movlw	0
 15213  0137FE  6E35               	movwf	(btemp+3)^0,c
 15214  013800  D192               	goto	l2681
 15215  013802                     l6884:
 15216                           
 15217                           ;stkvar	_bexp @ sp[(-13)+11]
 15218  013802  0EFE               	movlw	-2
 15219  013804  50E3               	movf	plusw1,w,c
 15220  013806  6E3C               	movwf	(btemp+10)^0,c
 15221  013808  6A3D               	clrf	(btemp+11)^0,c
 15222                           
 15223                           ;stkvar	_aexp @ sp[(-13)+10]
 15224  01380A  0EFD               	movlw	-3
 15225  01380C  50E3               	movf	plusw1,w,c
 15226  01380E  5E3C               	subwf	(btemp+10)^0,f,c
 15227  013810  0E00               	movlw	0
 15228  013812  5A3D               	subwfb	(btemp+11)^0,f,c
 15229  013814  0E7F               	movlw	127
 15230  013816  263C               	addwf	(btemp+10)^0,f,c
 15231  013818  0E00               	movlw	0
 15232  01381A  223D               	addwfc	(btemp+11)^0,f,c
 15233                           
 15234                           ;stkvar	_new_exp @ sp[(-13)+8]
 15235  01381C  0EFB               	movlw	-5
 15236  01381E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15237  013824  0EFC               	movlw	-4
 15238  013826  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15239                           
 15240                           ;stkvar	_b @ sp[(-13)+-4]
 15241  01382C  0EEF               	movlw	-17
 15242  01382E  006F FF8C  F03A    	movff	plusw1,btemp+8
 15243  013834  0EF0               	movlw	-16
 15244  013836  006F FF8C  F03B    	movff	plusw1,btemp+9
 15245  01383C  0EF1               	movlw	-15
 15246  01383E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15247  013844  0EF2               	movlw	-14
 15248  013846  006F FF8C  F03D    	movff	plusw1,btemp+11
 15249                           
 15250                           ;stkvar	_rem @ sp[(-13)+4]
 15251  01384C  0EF7               	movlw	-9
 15252  01384E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15253  013854  0EF8               	movlw	-8
 15254  013856  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15255  01385C  0EF9               	movlw	-7
 15256  01385E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15257  013864  0EFA               	movlw	-6
 15258  013866  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15259                           
 15260                           ;stkvar	_b @ sp[(-13)+-4]
 15261  01386C  0EEF               	movlw	-17
 15262  01386E  6AE3               	clrf	plusw1,c
 15263  013870  0EF0               	movlw	-16
 15264  013872  6AE3               	clrf	plusw1,c
 15265  013874  0EF1               	movlw	-15
 15266  013876  6AE3               	clrf	plusw1,c
 15267  013878  0EF2               	movlw	-14
 15268  01387A  6AE3               	clrf	plusw1,c
 15269                           
 15270                           ;stkvar	_grs @ sp[(-13)+0]
 15271  01387C  0EF3               	movlw	-13
 15272  01387E  6AE3               	clrf	plusw1,c
 15273  013880  0EF4               	movlw	-12
 15274  013882  6AE3               	clrf	plusw1,c
 15275  013884  0EF5               	movlw	-11
 15276  013886  6AE3               	clrf	plusw1,c
 15277  013888  0EF6               	movlw	-10
 15278  01388A  6AE3               	clrf	plusw1,c
 15279                           
 15280                           ;stkvar	_aexp @ sp[(-13)+10]
 15281  01388C  0EFD               	movlw	-3
 15282  01388E  6AE3               	clrf	plusw1,c
 15283  013890  D050               	goto	l6912
 15284  013892                     l6894:
 15285                           
 15286                           ;stkvar	_aexp @ sp[(-13)+10]
 15287  013892  0EFD               	movlw	-3
 15288  013894  50E3               	movf	plusw1,w,c
 15289  013896  B4D8               	btfsc	status,2,c
 15290  013898  D020               	goto	l6904
 15291                           
 15292                           ;stkvar	_rem @ sp[(-13)+4]
 15293  01389A  90D8               	bcf	status,0,c
 15294  01389C  0EF7               	movlw	-9
 15295  01389E  36E3               	rlcf	plusw1,f,c
 15296  0138A0  0EF8               	movlw	-8
 15297  0138A2  36E3               	rlcf	plusw1,f,c
 15298  0138A4  0EF9               	movlw	-7
 15299  0138A6  36E3               	rlcf	plusw1,f,c
 15300  0138A8  0EFA               	movlw	-6
 15301  0138AA  36E3               	rlcf	plusw1,f,c
 15302                           
 15303                           ;stkvar	_b @ sp[(-13)+-4]
 15304  0138AC  90D8               	bcf	status,0,c
 15305  0138AE  0EEF               	movlw	-17
 15306  0138B0  36E3               	rlcf	plusw1,f,c
 15307  0138B2  0EF0               	movlw	-16
 15308  0138B4  36E3               	rlcf	plusw1,f,c
 15309  0138B6  0EF1               	movlw	-15
 15310  0138B8  36E3               	rlcf	plusw1,f,c
 15311  0138BA  0EF2               	movlw	-14
 15312  0138BC  36E3               	rlcf	plusw1,f,c
 15313                           
 15314                           ;stkvar	_grs @ sp[(-13)+0]
 15315  0138BE  0EF6               	movlw	-10
 15316  0138C0  AEE3               	btfss	plusw1,7,c
 15317  0138C2  D002               	goto	l6902
 15318                           
 15319                           ;stkvar	_b @ sp[(-13)+-4]
 15320  0138C4  0EEF               	movlw	-17
 15321  0138C6  80E3               	bsf	plusw1,0,c
 15322  0138C8                     l6902:
 15323                           
 15324                           ;stkvar	_grs @ sp[(-13)+0]
 15325  0138C8  90D8               	bcf	status,0,c
 15326  0138CA  0EF3               	movlw	-13
 15327  0138CC  36E3               	rlcf	plusw1,f,c
 15328  0138CE  0EF4               	movlw	-12
 15329  0138D0  36E3               	rlcf	plusw1,f,c
 15330  0138D2  0EF5               	movlw	-11
 15331  0138D4  36E3               	rlcf	plusw1,f,c
 15332  0138D6  0EF6               	movlw	-10
 15333  0138D8  36E3               	rlcf	plusw1,f,c
 15334  0138DA                     l6904:
 15335                           
 15336                           ;stkvar	_a @ sp[(-13)+-8]
 15337                           ;stkvar	_rem @ sp[(-13)+4]
 15338  0138DA  50E1               	movf	fsr1l,w,c
 15339  0138DC  0FF7               	addlw	-9
 15340  0138DE  6ED9               	movwf	fsr2l,c
 15341  0138E0  50E2               	movf	fsr1h,w,c
 15342  0138E2  6EDA               	movwf	fsr2h,c
 15343  0138E4  0EFF               	movlw	255
 15344  0138E6  22DA               	addwfc	fsr2h,f,c
 15345  0138E8  0EEB               	movlw	-21
 15346  0138EA  50E3               	movf	plusw1,w,c
 15347  0138EC  5CDE               	subwf	postinc2,w,c
 15348  0138EE  0EEC               	movlw	-20
 15349  0138F0  50E3               	movf	plusw1,w,c
 15350  0138F2  58DE               	subwfb	postinc2,w,c
 15351  0138F4  0EED               	movlw	-19
 15352  0138F6  50E3               	movf	plusw1,w,c
 15353  0138F8  58DE               	subwfb	postinc2,w,c
 15354  0138FA  0EEE               	movlw	-18
 15355  0138FC  50E3               	movf	plusw1,w,c
 15356  0138FE  58DE               	subwfb	postinc2,w,c
 15357  013900  A0D8               	btfss	status,0,c
 15358  013902  D015               	goto	l6910
 15359                           
 15360                           ;stkvar	_grs @ sp[(-13)+0]
 15361  013904  0EF6               	movlw	-10
 15362  013906  8CE3               	bsf	plusw1,6,c
 15363                           
 15364                           ;stkvar	_a @ sp[(-13)+-8]
 15365                           ;stkvar	_rem @ sp[(-13)+4]
 15366  013908  50E1               	movf	fsr1l,w,c
 15367  01390A  0FF7               	addlw	-9
 15368  01390C  6ED9               	movwf	fsr2l,c
 15369  01390E  50E2               	movf	fsr1h,w,c
 15370  013910  6EDA               	movwf	fsr2h,c
 15371  013912  0EFF               	movlw	255
 15372  013914  22DA               	addwfc	fsr2h,f,c
 15373  013916  0EEB               	movlw	-21
 15374  013918  50E3               	movf	plusw1,w,c
 15375  01391A  5EDE               	subwf	postinc2,f,c
 15376  01391C  0EEC               	movlw	-20
 15377  01391E  50E3               	movf	plusw1,w,c
 15378  013920  5ADE               	subwfb	postinc2,f,c
 15379  013922  0EED               	movlw	-19
 15380  013924  50E3               	movf	plusw1,w,c
 15381  013926  5ADE               	subwfb	postinc2,f,c
 15382  013928  0EEE               	movlw	-18
 15383  01392A  50E3               	movf	plusw1,w,c
 15384  01392C  5ADE               	subwfb	postinc2,f,c
 15385  01392E                     l6910:
 15386                           
 15387                           ;stkvar	_aexp @ sp[(-13)+10]
 15388  01392E  0EFD               	movlw	-3
 15389  013930  2AE3               	incf	plusw1,f,c
 15390  013932                     l6912:
 15391                           
 15392                           ;stkvar	_aexp @ sp[(-13)+10]
 15393  013932  0EFD               	movlw	-3
 15394  013934  006F FF8C  F032    	movff	plusw1,btemp
 15395  01393A  0E19               	movlw	25
 15396  01393C  6432               	cpfsgt	btemp^0,c
 15397  01393E  D7A9               	goto	l6894
 15398                           
 15399                           ;stkvar	_rem @ sp[(-13)+4]
 15400  013940  0EF7               	movlw	-9
 15401  013942  50E3               	movf	plusw1,w,c
 15402  013944  E10A               	bnz	u5760
 15403  013946  0EF8               	movlw	-8
 15404  013948  50E3               	movf	plusw1,w,c
 15405  01394A  E107               	bnz	u5760
 15406  01394C  0EF9               	movlw	-7
 15407  01394E  50E3               	movf	plusw1,w,c
 15408  013950  E104               	bnz	u5760
 15409  013952  0EFA               	movlw	-6
 15410  013954  50E3               	movf	plusw1,w,c
 15411  013956  B4D8               	btfsc	status,2,c
 15412  013958  D024               	goto	l6928
 15413  01395A                     u5760:
 15414                           
 15415                           ;stkvar	_grs @ sp[(-13)+0]
 15416  01395A  0EF3               	movlw	-13
 15417  01395C  80E3               	bsf	plusw1,0,c
 15418  01395E  D021               	goto	l6928
 15419  013960                     l6918:
 15420                           
 15421                           ;stkvar	_b @ sp[(-13)+-4]
 15422  013960  90D8               	bcf	status,0,c
 15423  013962  0EEF               	movlw	-17
 15424  013964  36E3               	rlcf	plusw1,f,c
 15425  013966  0EF0               	movlw	-16
 15426  013968  36E3               	rlcf	plusw1,f,c
 15427  01396A  0EF1               	movlw	-15
 15428  01396C  36E3               	rlcf	plusw1,f,c
 15429  01396E  0EF2               	movlw	-14
 15430  013970  36E3               	rlcf	plusw1,f,c
 15431                           
 15432                           ;stkvar	_grs @ sp[(-13)+0]
 15433  013972  0EF6               	movlw	-10
 15434  013974  AEE3               	btfss	plusw1,7,c
 15435  013976  D002               	goto	l6924
 15436                           
 15437                           ;stkvar	_b @ sp[(-13)+-4]
 15438  013978  0EEF               	movlw	-17
 15439  01397A  80E3               	bsf	plusw1,0,c
 15440  01397C                     l6924:
 15441                           
 15442                           ;stkvar	_grs @ sp[(-13)+0]
 15443  01397C  90D8               	bcf	status,0,c
 15444  01397E  0EF3               	movlw	-13
 15445  013980  36E3               	rlcf	plusw1,f,c
 15446  013982  0EF4               	movlw	-12
 15447  013984  36E3               	rlcf	plusw1,f,c
 15448  013986  0EF5               	movlw	-11
 15449  013988  36E3               	rlcf	plusw1,f,c
 15450  01398A  0EF6               	movlw	-10
 15451  01398C  36E3               	rlcf	plusw1,f,c
 15452                           
 15453                           ;stkvar	_new_exp @ sp[(-13)+8]
 15454  01398E  50E1               	movf	fsr1l,w,c
 15455  013990  0FFB               	addlw	-5
 15456  013992  6ED9               	movwf	fsr2l,c
 15457  013994  50E2               	movf	fsr1h,w,c
 15458  013996  6EDA               	movwf	fsr2h,c
 15459  013998  0EFF               	movlw	255
 15460  01399A  22DA               	addwfc	fsr2h,f,c
 15461  01399C  06DE               	decf	postinc2,f,c
 15462  01399E  0E00               	movlw	0
 15463  0139A0  5ADD               	subwfb	postdec2,f,c
 15464  0139A2                     l6928:
 15465                           
 15466                           ;stkvar	_b @ sp[(-13)+-4]
 15467  0139A2  0EF1               	movlw	-15
 15468  0139A4  AEE3               	btfss	plusw1,7,c
 15469  0139A6  D7DC               	goto	l6918
 15470                           
 15471                           ;stkvar	_aexp @ sp[(-13)+10]
 15472  0139A8  0EFD               	movlw	-3
 15473  0139AA  6AE3               	clrf	plusw1,c
 15474                           
 15475                           ;stkvar	_grs @ sp[(-13)+0]
 15476  0139AC  0EF6               	movlw	-10
 15477  0139AE  AEE3               	btfss	plusw1,7,c
 15478  0139B0  D020               	goto	l6942
 15479                           
 15480                           ;stkvar	_grs @ sp[(-13)+0]
 15481  0139B2  50E1               	movf	fsr1l,w,c
 15482  0139B4  0FF3               	addlw	-13
 15483  0139B6  6ED9               	movwf	fsr2l,c
 15484  0139B8  50E2               	movf	fsr1h,w,c
 15485  0139BA  6EDA               	movwf	fsr2h,c
 15486  0139BC  0EFF               	movlw	255
 15487  0139BE  22DA               	addwfc	fsr2h,f,c
 15488  0139C0  0EFF               	movlw	255
 15489  0139C2  14DE               	andwf	postinc2,w,c
 15490  0139C4  6E3A               	movwf	(btemp+8)^0,c
 15491  0139C6  0EFF               	movlw	255
 15492  0139C8  14DE               	andwf	postinc2,w,c
 15493  0139CA  6E3B               	movwf	(btemp+9)^0,c
 15494  0139CC  0EFF               	movlw	255
 15495  0139CE  14DE               	andwf	postinc2,w,c
 15496  0139D0  6E3C               	movwf	(btemp+10)^0,c
 15497  0139D2  0E7F               	movlw	127
 15498  0139D4  14DE               	andwf	postinc2,w,c
 15499  0139D6  6E3D               	movwf	(btemp+11)^0,c
 15500  0139D8  503A               	movf	(btemp+8)^0,w,c
 15501  0139DA  103B               	iorwf	(btemp+9)^0,w,c
 15502  0139DC  103C               	iorwf	(btemp+10)^0,w,c
 15503  0139DE  103D               	iorwf	(btemp+11)^0,w,c
 15504  0139E0  B4D8               	btfsc	status,2,c
 15505  0139E2  D004               	goto	l6938
 15506  0139E4                     u5800:
 15507                           
 15508                           ;stkvar	_aexp @ sp[(-13)+10]
 15509  0139E4  0EFD               	movlw	-3
 15510  0139E6  6AE3               	clrf	plusw1,c
 15511  0139E8  2AE3               	incf	plusw1,f,c
 15512  0139EA  D003               	goto	l6942
 15513  0139EC                     l6938:
 15514                           
 15515                           ;stkvar	_b @ sp[(-13)+-4]
 15516  0139EC  0EEF               	movlw	-17
 15517  0139EE  B0E3               	btfsc	plusw1,0,c
 15518  0139F0  D7F9               	goto	u5800
 15519  0139F2                     l6942:
 15520                           
 15521                           ;stkvar	_aexp @ sp[(-13)+10]
 15522  0139F2  0EFD               	movlw	-3
 15523  0139F4  50E3               	movf	plusw1,w,c
 15524  0139F6  B4D8               	btfsc	status,2,c
 15525  0139F8  D036               	goto	l6952
 15526                           
 15527                           ;stkvar	_b @ sp[(-13)+-4]
 15528  0139FA  50E1               	movf	fsr1l,w,c
 15529  0139FC  0FEF               	addlw	-17
 15530  0139FE  6ED9               	movwf	fsr2l,c
 15531  013A00  50E2               	movf	fsr1h,w,c
 15532  013A02  6EDA               	movwf	fsr2h,c
 15533  013A04  0EFF               	movlw	255
 15534  013A06  22DA               	addwfc	fsr2h,f,c
 15535  013A08  2ADE               	incf	postinc2,f,c
 15536  013A0A  0E00               	movlw	0
 15537  013A0C  22DE               	addwfc	postinc2,f,c
 15538  013A0E  22DE               	addwfc	postinc2,f,c
 15539  013A10  22DE               	addwfc	postinc2,f,c
 15540                           
 15541                           ;stkvar	_b @ sp[(-13)+-4]
 15542  013A12  0EF2               	movlw	-14
 15543  013A14  A0E3               	btfss	plusw1,0,c
 15544  013A16  D027               	goto	l6952
 15545  013A18  0E01               	movlw	1
 15546  013A1A  6E3D               	movwf	(btemp+11)^0,c
 15547                           
 15548                           ;stkvar	_b @ sp[(-13)+-4]
 15549  013A1C  50E1               	movf	fsr1l,w,c
 15550  013A1E  0FEF               	addlw	-17
 15551  013A20  6ED9               	movwf	fsr2l,c
 15552  013A22  50E2               	movf	fsr1h,w,c
 15553  013A24  6EDA               	movwf	fsr2h,c
 15554  013A26  0EFF               	movlw	255
 15555  013A28  22DA               	addwfc	fsr2h,f,c
 15556  013A2A  283D               	incf	(btemp+11)^0,w,c
 15557  013A2C  52DE               	movf	postinc2,f,c
 15558  013A2E  D008               	goto	u5840
 15559  013A30                     u5845:
 15560  013A30  52DE               	movf	postinc2,f,c
 15561  013A32  90D8               	bcf	status,0,c
 15562  013A34  BEDC               	btfsc	preinc2,7,c
 15563  013A36  80D8               	bsf	status,0,c
 15564  013A38  32DD               	rrcf	postdec2,f,c
 15565  013A3A  32DD               	rrcf	postdec2,f,c
 15566  013A3C  32DD               	rrcf	postdec2,f,c
 15567  013A3E  32DE               	rrcf	postinc2,f,c
 15568  013A40                     u5840:
 15569  013A40  2EE8               	decfsz	wreg,f,c
 15570  013A42  D7F6               	goto	u5845
 15571                           
 15572                           ;stkvar	_new_exp @ sp[(-13)+8]
 15573  013A44  0EFB               	movlw	-5
 15574  013A46  50E3               	movf	plusw1,w,c
 15575  013A48  0F01               	addlw	1
 15576  013A4A  6E32               	movwf	btemp^0,c
 15577  013A4C  0EFB               	movlw	-5
 15578  013A4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 15579  013A54  6A32               	clrf	btemp^0,c
 15580  013A56  0EFC               	movlw	-4
 15581  013A58  50E3               	movf	plusw1,w,c
 15582  013A5A  2032               	addwfc	btemp^0,w,c
 15583  013A5C  6E32               	movwf	btemp^0,c
 15584  013A5E  0EFC               	movlw	-4
 15585  013A60  0060  F0CB  FFE3   	movff	btemp,plusw1
 15586  013A66                     l6952:
 15587                           
 15588                           ;stkvar	_new_exp @ sp[(-13)+8]
 15589  013A66  0EFC               	movlw	-4
 15590  013A68  BEE3               	btfsc	plusw1,7,c
 15591  013A6A  D01B               	goto	l6958
 15592  013A6C  0EFC               	movlw	-4
 15593  013A6E  50E3               	movf	plusw1,w,c
 15594  013A70  E104               	bnz	u5850
 15595  013A72  0EFB               	movlw	-5
 15596  013A74  28E3               	incf	plusw1,w,c
 15597  013A76  A0D8               	btfss	status,0,c
 15598  013A78  D014               	goto	l6958
 15599  013A7A                     u5850:
 15600  013A7A  0EFF               	movlw	255
 15601  013A7C  6E3C               	movwf	(btemp+10)^0,c
 15602  013A7E  0E00               	movlw	0
 15603  013A80  6E3D               	movwf	(btemp+11)^0,c
 15604                           
 15605                           ;stkvar	_new_exp @ sp[(-13)+8]
 15606  013A82  0EFB               	movlw	-5
 15607  013A84  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15608  013A8A  0EFC               	movlw	-4
 15609  013A8C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15610                           
 15611                           ;stkvar	_b @ sp[(-13)+-4]
 15612  013A92  0EEF               	movlw	-17
 15613  013A94  6AE3               	clrf	plusw1,c
 15614  013A96  0EF0               	movlw	-16
 15615  013A98  6AE3               	clrf	plusw1,c
 15616  013A9A  0EF1               	movlw	-15
 15617  013A9C  6AE3               	clrf	plusw1,c
 15618  013A9E  0EF2               	movlw	-14
 15619  013AA0  6AE3               	clrf	plusw1,c
 15620  013AA2                     l6958:
 15621                           
 15622                           ;stkvar	_new_exp @ sp[(-13)+8]
 15623  013AA2  0EFC               	movlw	-4
 15624  013AA4  BEE3               	btfsc	plusw1,7,c
 15625  013AA6  D007               	goto	u5860
 15626  013AA8  0EFC               	movlw	-4
 15627  013AAA  50E3               	movf	plusw1,w,c
 15628  013AAC  E112               	bnz	l6964
 15629  013AAE  0EFB               	movlw	-5
 15630  013AB0  04E3               	decf	plusw1,w,c
 15631  013AB2  B0D8               	btfsc	status,0,c
 15632  013AB4  D00E               	goto	l6964
 15633  013AB6                     u5860:
 15634                           
 15635                           ;stkvar	_new_exp @ sp[(-13)+8]
 15636  013AB6  0EFB               	movlw	-5
 15637  013AB8  6AE3               	clrf	plusw1,c
 15638  013ABA  0EFC               	movlw	-4
 15639  013ABC  6AE3               	clrf	plusw1,c
 15640                           
 15641                           ;stkvar	_b @ sp[(-13)+-4]
 15642  013ABE  0EEF               	movlw	-17
 15643  013AC0  6AE3               	clrf	plusw1,c
 15644  013AC2  0EF0               	movlw	-16
 15645  013AC4  6AE3               	clrf	plusw1,c
 15646  013AC6  0EF1               	movlw	-15
 15647  013AC8  6AE3               	clrf	plusw1,c
 15648  013ACA  0EF2               	movlw	-14
 15649  013ACC  6AE3               	clrf	plusw1,c
 15650                           
 15651                           ;stkvar	_sign @ sp[(-13)+12]
 15652  013ACE  0EFF               	movlw	-1
 15653  013AD0  6AE3               	clrf	plusw1,c
 15654  013AD2                     l6964:
 15655                           
 15656                           ;stkvar	_new_exp @ sp[(-13)+8]
 15657                           ;stkvar	_bexp @ sp[(-13)+11]
 15658  013AD2  0EFB               	movlw	-5
 15659  013AD4  006F FF8C  F032    	movff	plusw1,btemp
 15660  013ADA  0EFE               	movlw	-2
 15661  013ADC  0060  F0CB  FFE3   	movff	btemp,plusw1
 15662                           
 15663                           ;stkvar	_bexp @ sp[(-13)+11]
 15664  013AE2  0EFE               	movlw	-2
 15665  013AE4  A0E3               	btfss	plusw1,0,c
 15666  013AE6  D009               	goto	l6970
 15667                           
 15668                           ;stkvar	_b @ sp[(-13)+-4]
 15669  013AE8  0EF1               	movlw	241
 15670  013AEA  24E1               	addwf	fsr1l,w,c
 15671  013AEC  6ED9               	movwf	fsr2l,c
 15672  013AEE  0EFF               	movlw	255
 15673  013AF0  20E2               	addwfc	fsr1h,w,c
 15674  013AF2  6EDA               	movwf	fsr2h,c
 15675  013AF4  0E00               	movlw	0
 15676  013AF6  8EDB               	bsf	plusw2,7,c
 15677  013AF8  D008               	goto	l6972
 15678  013AFA                     l6970:
 15679                           
 15680                           ;stkvar	_b @ sp[(-13)+-4]
 15681  013AFA  0EF1               	movlw	241
 15682  013AFC  24E1               	addwf	fsr1l,w,c
 15683  013AFE  6ED9               	movwf	fsr2l,c
 15684  013B00  0EFF               	movlw	255
 15685  013B02  20E2               	addwfc	fsr1h,w,c
 15686  013B04  6EDA               	movwf	fsr2h,c
 15687  013B06  0E7F               	movlw	127
 15688  013B08  16DF               	andwf	indf2,f,c
 15689  013B0A                     l6972:
 15690                           
 15691                           ;stkvar	_b @ sp[(-13)+-4]
 15692  013B0A  0EF2               	movlw	242
 15693  013B0C  24E1               	addwf	fsr1l,w,c
 15694  013B0E  6ED9               	movwf	fsr2l,c
 15695  013B10  0EFF               	movlw	255
 15696  013B12  20E2               	addwfc	fsr1h,w,c
 15697  013B14  6EDA               	movwf	fsr2h,c
 15698                           
 15699                           ;stkvar	_bexp @ sp[(-13)+11]
 15700  013B16  0EFE               	movlw	-2
 15701  013B18  006F FF8C  F03D    	movff	plusw1,btemp+11
 15702  013B1E  90D8               	bcf	status,0,c
 15703  013B20  303D               	rrcf	(btemp+11)^0,w,c
 15704  013B22  6EDF               	movwf	indf2,c
 15705  013B24  D644               	goto	l6870
 15706  013B26                     l2681:
 15707                           
 15708                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15709  013B26  0EEB               	movlw	235
 15710  013B28  26E1               	addwf	fsr1l,f,c
 15711  013B2A  0EFF               	movlw	255
 15712  013B2C  22E2               	addwfc	fsr1h,f,c
 15713  013B2E  0012               	return		;funcret
 15714  013B30                     __end_of___fldiv:
 15715                           	opt callstack 0
 15716                           
 15717 ;; *************** function ___awmod *****************
 15718 ;; Defined at:
 15719 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  dividend        2  [STACK] int 
 15722 ;;  divisor         2  [STACK] int 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;  sign            1  [STACK] unsigned char 
 15725 ;;  counter         1  [STACK] unsigned char 
 15726 ;; Return value:  Size  Location     Type
 15727 ;;                  2  [STACK] int 
 15728 ;; Registers used:
 15729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15730 ;; Tracked objects:
 15731 ;;		On entry : 0/5
 15732 ;;		On exit  : 0/0
 15733 ;;		Unchanged: 0/0
 15734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15739 ;;Total ram usage:        0 bytes
 15740 ;; Hardware stack levels used:    1
 15741 ;; Hardware stack levels required when called:    6
 15742 ;; This function calls:
 15743 ;;		Nothing
 15744 ;; This function is called by:
 15745 ;;		_efgtoa
 15746 ;; This function uses a reentrant model
 15747 ;;
 15748                           
 15749                           	psect	text57
 15750  016C2A                     __ptext57:
 15751                           	opt callstack 0
 15752  016C2A                     ___awmod:
 15753                           	opt callstack 0
 15754                           
 15755                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15756  016C2A  52E6               	movf	postinc1,f,c
 15757  016C2C  52E6               	movf	postinc1,f,c
 15758                           
 15759                           ;stkvar	_sign @ sp[(-2)+0]
 15760                           
 15761                           ;incstack = 0
 15762  016C2E  0EFE               	movlw	-2
 15763  016C30  6AE3               	clrf	plusw1,c
 15764                           
 15765                           ;stkvar	_dividend @ sp[(-2)+-2]
 15766  016C32  0EFD               	movlw	-3
 15767  016C34  AEE3               	btfss	plusw1,7,c
 15768  016C36  D009               	goto	l7196
 15769                           
 15770                           ;stkvar	_dividend @ sp[(-2)+-2]
 15771                           ;stkvar	_dividend @ sp[(-2)+-2]
 15772  016C38  0EFC               	movlw	-4
 15773  016C3A  6CE3               	negf	plusw1,c
 15774  016C3C  0EFD               	movlw	-3
 15775  016C3E  1EE3               	comf	plusw1,f,c
 15776  016C40  B0D8               	btfsc	status,0,c
 15777  016C42  2AE3               	incf	plusw1,f,c
 15778                           
 15779                           ;stkvar	_sign @ sp[(-2)+0]
 15780  016C44  0EFE               	movlw	-2
 15781  016C46  6AE3               	clrf	plusw1,c
 15782  016C48  2AE3               	incf	plusw1,f,c
 15783  016C4A                     l7196:
 15784                           
 15785                           ;stkvar	_divisor @ sp[(-2)+-4]
 15786  016C4A  0EFB               	movlw	-5
 15787  016C4C  AEE3               	btfss	plusw1,7,c
 15788  016C4E  D006               	goto	l7200
 15789                           
 15790                           ;stkvar	_divisor @ sp[(-2)+-4]
 15791                           ;stkvar	_divisor @ sp[(-2)+-4]
 15792  016C50  0EFA               	movlw	-6
 15793  016C52  6CE3               	negf	plusw1,c
 15794  016C54  0EFB               	movlw	-5
 15795  016C56  1EE3               	comf	plusw1,f,c
 15796  016C58  B0D8               	btfsc	status,0,c
 15797  016C5A  2AE3               	incf	plusw1,f,c
 15798  016C5C                     l7200:
 15799                           
 15800                           ;stkvar	_divisor @ sp[(-2)+-4]
 15801  016C5C  0EFA               	movlw	-6
 15802  016C5E  006F FF8C  F032    	movff	plusw1,btemp
 15803  016C64  0EFB               	movlw	-5
 15804  016C66  50E3               	movf	plusw1,w,c
 15805  016C68  1032               	iorwf	btemp^0,w,c
 15806  016C6A  B4D8               	btfsc	status,2,c
 15807  016C6C  D053               	goto	u6220
 15808                           
 15809                           ;stkvar	_counter @ sp[(-2)+1]
 15810  016C6E  0EFF               	movlw	-1
 15811  016C70  6AE3               	clrf	plusw1,c
 15812  016C72  D012               	goto	L15
 15813  016C74                     l7204:
 15814                           
 15815                           ;stkvar	_divisor @ sp[(-2)+-4]
 15816  016C74  0EFA               	movlw	-6
 15817  016C76  50E3               	movf	plusw1,w,c
 15818  016C78  90D8               	bcf	status,0,c
 15819  016C7A  34E8               	rlcf	wreg,w,c
 15820  016C7C  6E32               	movwf	btemp^0,c
 15821  016C7E  0EFA               	movlw	-6
 15822  016C80  0060  F0CB  FFE3   	movff	btemp,plusw1
 15823  016C86  0EFB               	movlw	-5
 15824  016C88  50E3               	movf	plusw1,w,c
 15825  016C8A  34E8               	rlcf	wreg,w,c
 15826  016C8C  6E32               	movwf	btemp^0,c
 15827  016C8E  0EFB               	movlw	-5
 15828  016C90  0060  F0CB  FFE3   	movff	btemp,plusw1
 15829                           
 15830                           ;stkvar	_counter @ sp[(-2)+1]
 15831  016C96  0EFF               	movlw	-1
 15832  016C98                     L15:
 15833  016C98  2AE3               	incf	plusw1,f,c
 15834                           
 15835                           ;stkvar	_divisor @ sp[(-2)+-4]
 15836  016C9A  0EFB               	movlw	-5
 15837  016C9C  AEE3               	btfss	plusw1,7,c
 15838  016C9E  D7EA               	goto	l7204
 15839  016CA0                     u6200:
 15840                           
 15841                           ;stkvar	_divisor @ sp[(-2)+-4]
 15842  016CA0  0EFA               	movlw	-6
 15843  016CA2  006F FF8C  F03C    	movff	plusw1,btemp+10
 15844  016CA8  0EFB               	movlw	-5
 15845  016CAA  006F FF8C  F03D    	movff	plusw1,btemp+11
 15846                           
 15847                           ;stkvar	_dividend @ sp[(-2)+-2]
 15848  016CB0  0EFC               	movlw	-4
 15849  016CB2  006F FF8C  F03A    	movff	plusw1,btemp+8
 15850  016CB8  0EFD               	movlw	-3
 15851  016CBA  006F FF8C  F03B    	movff	plusw1,btemp+9
 15852  016CC0  503C               	movf	(btemp+10)^0,w,c
 15853  016CC2  5C3A               	subwf	(btemp+8)^0,w,c
 15854  016CC4  503D               	movf	(btemp+11)^0,w,c
 15855  016CC6  583B               	subwfb	(btemp+9)^0,w,c
 15856  016CC8  A0D8               	btfss	status,0,c
 15857  016CCA  D014               	goto	l7214
 15858                           
 15859                           ;stkvar	_divisor @ sp[(-2)+-4]
 15860                           ;stkvar	_dividend @ sp[(-2)+-2]
 15861  016CCC  0EFC               	movlw	-4
 15862  016CCE  50E3               	movf	plusw1,w,c
 15863  016CD0  6E32               	movwf	btemp^0,c
 15864  016CD2  0EFA               	movlw	-6
 15865  016CD4  50E3               	movf	plusw1,w,c
 15866  016CD6  5E32               	subwf	btemp^0,f,c
 15867  016CD8  0EFC               	movlw	-4
 15868  016CDA  0060  F0CB  FFE3   	movff	btemp,plusw1
 15869  016CE0  0EFD               	movlw	-3
 15870  016CE2  50E3               	movf	plusw1,w,c
 15871  016CE4  6E32               	movwf	btemp^0,c
 15872  016CE6  0EFB               	movlw	-5
 15873  016CE8  50E3               	movf	plusw1,w,c
 15874  016CEA  5A32               	subwfb	btemp^0,f,c
 15875  016CEC  0EFD               	movlw	-3
 15876  016CEE  0060  F0CB  FFE3   	movff	btemp,plusw1
 15877  016CF4                     l7214:
 15878                           
 15879                           ;stkvar	_divisor @ sp[(-2)+-4]
 15880  016CF4  90D8               	bcf	status,0,c
 15881  016CF6  0EFB               	movlw	-5
 15882  016CF8  32E3               	rrcf	plusw1,f,c
 15883  016CFA  0EFA               	movlw	-6
 15884  016CFC  32E3               	rrcf	plusw1,f,c
 15885                           
 15886                           ;stkvar	_counter @ sp[(-2)+1]
 15887  016CFE  0EFF               	movlw	-1
 15888  016D00  50E3               	movf	plusw1,w,c
 15889  016D02  6E32               	movwf	btemp^0,c
 15890  016D04  0E01               	movlw	1
 15891  016D06  5E32               	subwf	btemp^0,f,c
 15892  016D08  0EFF               	movlw	-1
 15893  016D0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15894  016D10  A4D8               	btfss	status,2,c
 15895  016D12  D7C6               	goto	u6200
 15896  016D14                     u6220:
 15897                           
 15898                           ;stkvar	_sign @ sp[(-2)+0]
 15899  016D14  0EFE               	movlw	-2
 15900  016D16  50E3               	movf	plusw1,w,c
 15901  016D18  B4D8               	btfsc	status,2,c
 15902  016D1A  D006               	goto	l7222
 15903                           
 15904                           ;stkvar	_dividend @ sp[(-2)+-2]
 15905                           ;stkvar	_dividend @ sp[(-2)+-2]
 15906  016D1C  0EFC               	movlw	-4
 15907  016D1E  6CE3               	negf	plusw1,c
 15908  016D20  0EFD               	movlw	-3
 15909  016D22  1EE3               	comf	plusw1,f,c
 15910  016D24  B0D8               	btfsc	status,0,c
 15911  016D26  2AE3               	incf	plusw1,f,c
 15912  016D28                     l7222:
 15913                           
 15914                           ;stkvar	_dividend @ sp[(-2)+-2]
 15915  016D28  0EFC               	movlw	-4
 15916  016D2A  006F FF8C  F032    	movff	plusw1,btemp
 15917  016D30  0EFD               	movlw	-3
 15918  016D32  006F FF8C  F033    	movff	plusw1,btemp+1
 15919                           
 15920                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15921  016D38  0EFA               	movlw	250
 15922  016D3A  26E1               	addwf	fsr1l,f,c
 15923  016D3C  0EFF               	movlw	255
 15924  016D3E  22E2               	addwfc	fsr1h,f,c
 15925  016D40  0012               	return		;funcret
 15926  016D42                     __end_of___awmod:
 15927                           	opt callstack 0
 15928                           
 15929 ;; *************** function ___awdiv *****************
 15930 ;; Defined at:
 15931 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15932 ;; Parameters:    Size  Location     Type
 15933 ;;  dividend        2  [STACK] int 
 15934 ;;  divisor         2  [STACK] int 
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;  quotient        2  [STACK] int 
 15937 ;;  sign            1  [STACK] unsigned char 
 15938 ;;  counter         1  [STACK] unsigned char 
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  2  [STACK] int 
 15941 ;; Registers used:
 15942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/5
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15952 ;;Total ram usage:        0 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:    6
 15955 ;; This function calls:
 15956 ;;		Nothing
 15957 ;; This function is called by:
 15958 ;;		_efgtoa
 15959 ;; This function uses a reentrant model
 15960 ;;
 15961                           
 15962                           	psect	text58
 15963  016742                     __ptext58:
 15964                           	opt callstack 0
 15965  016742                     ___awdiv:
 15966                           	opt callstack 0
 15967                           
 15968                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15969  016742  52E6               	movf	postinc1,f,c
 15970  016744  52E6               	movf	postinc1,f,c
 15971  016746  52E6               	movf	postinc1,f,c
 15972  016748  52E6               	movf	postinc1,f,c
 15973                           
 15974                           ;stkvar	_sign @ sp[(-4)+2]
 15975                           
 15976                           ;incstack = 0
 15977  01674A  0EFE               	movlw	-2
 15978  01674C  6AE3               	clrf	plusw1,c
 15979                           
 15980                           ;stkvar	_divisor @ sp[(-4)+-4]
 15981  01674E  0EF9               	movlw	-7
 15982  016750  AEE3               	btfss	plusw1,7,c
 15983  016752  D009               	goto	l7150
 15984                           
 15985                           ;stkvar	_divisor @ sp[(-4)+-4]
 15986                           ;stkvar	_divisor @ sp[(-4)+-4]
 15987  016754  0EF8               	movlw	-8
 15988  016756  6CE3               	negf	plusw1,c
 15989  016758  0EF9               	movlw	-7
 15990  01675A  1EE3               	comf	plusw1,f,c
 15991  01675C  B0D8               	btfsc	status,0,c
 15992  01675E  2AE3               	incf	plusw1,f,c
 15993                           
 15994                           ;stkvar	_sign @ sp[(-4)+2]
 15995  016760  0EFE               	movlw	-2
 15996  016762  6AE3               	clrf	plusw1,c
 15997  016764  2AE3               	incf	plusw1,f,c
 15998  016766                     l7150:
 15999                           
 16000                           ;stkvar	_dividend @ sp[(-4)+-2]
 16001  016766  0EFB               	movlw	-5
 16002  016768  AEE3               	btfss	plusw1,7,c
 16003  01676A  D008               	goto	l7156
 16004                           
 16005                           ;stkvar	_dividend @ sp[(-4)+-2]
 16006                           ;stkvar	_dividend @ sp[(-4)+-2]
 16007  01676C  0EFA               	movlw	-6
 16008  01676E  6CE3               	negf	plusw1,c
 16009  016770  0EFB               	movlw	-5
 16010  016772  1EE3               	comf	plusw1,f,c
 16011  016774  B0D8               	btfsc	status,0,c
 16012  016776  2AE3               	incf	plusw1,f,c
 16013                           
 16014                           ;stkvar	_sign @ sp[(-4)+2]
 16015  016778  0EFE               	movlw	-2
 16016  01677A  70E3               	btg	plusw1,0,c
 16017  01677C                     l7156:
 16018                           
 16019                           ;stkvar	_quotient @ sp[(-4)+0]
 16020  01677C  0EFC               	movlw	-4
 16021  01677E  6AE3               	clrf	plusw1,c
 16022  016780  0EFD               	movlw	-3
 16023  016782  6AE3               	clrf	plusw1,c
 16024                           
 16025                           ;stkvar	_divisor @ sp[(-4)+-4]
 16026  016784  0EF8               	movlw	-8
 16027  016786  006F FF8C  F032    	movff	plusw1,btemp
 16028  01678C  0EF9               	movlw	-7
 16029  01678E  50E3               	movf	plusw1,w,c
 16030  016790  1032               	iorwf	btemp^0,w,c
 16031  016792  B4D8               	btfsc	status,2,c
 16032  016794  D066               	goto	u6150
 16033                           
 16034                           ;stkvar	_counter @ sp[(-4)+3]
 16035  016796  0EFF               	movlw	-1
 16036  016798  6AE3               	clrf	plusw1,c
 16037  01679A  D012               	goto	L16
 16038  01679C                     l7162:
 16039                           
 16040                           ;stkvar	_divisor @ sp[(-4)+-4]
 16041  01679C  0EF8               	movlw	-8
 16042  01679E  50E3               	movf	plusw1,w,c
 16043  0167A0  90D8               	bcf	status,0,c
 16044  0167A2  34E8               	rlcf	wreg,w,c
 16045  0167A4  6E32               	movwf	btemp^0,c
 16046  0167A6  0EF8               	movlw	-8
 16047  0167A8  0060  F0CB  FFE3   	movff	btemp,plusw1
 16048  0167AE  0EF9               	movlw	-7
 16049  0167B0  50E3               	movf	plusw1,w,c
 16050  0167B2  34E8               	rlcf	wreg,w,c
 16051  0167B4  6E32               	movwf	btemp^0,c
 16052  0167B6  0EF9               	movlw	-7
 16053  0167B8  0060  F0CB  FFE3   	movff	btemp,plusw1
 16054                           
 16055                           ;stkvar	_counter @ sp[(-4)+3]
 16056  0167BE  0EFF               	movlw	-1
 16057  0167C0                     L16:
 16058  0167C0  2AE3               	incf	plusw1,f,c
 16059                           
 16060                           ;stkvar	_divisor @ sp[(-4)+-4]
 16061  0167C2  0EF9               	movlw	-7
 16062  0167C4  AEE3               	btfss	plusw1,7,c
 16063  0167C6  D7EA               	goto	l7162
 16064  0167C8                     u6130:
 16065                           
 16066                           ;stkvar	_quotient @ sp[(-4)+0]
 16067  0167C8  0EFC               	movlw	-4
 16068  0167CA  50E3               	movf	plusw1,w,c
 16069  0167CC  90D8               	bcf	status,0,c
 16070  0167CE  34E8               	rlcf	wreg,w,c
 16071  0167D0  6E32               	movwf	btemp^0,c
 16072  0167D2  0EFC               	movlw	-4
 16073  0167D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 16074  0167DA  0EFD               	movlw	-3
 16075  0167DC  50E3               	movf	plusw1,w,c
 16076  0167DE  34E8               	rlcf	wreg,w,c
 16077  0167E0  6E32               	movwf	btemp^0,c
 16078  0167E2  0EFD               	movlw	-3
 16079  0167E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 16080                           
 16081                           ;stkvar	_divisor @ sp[(-4)+-4]
 16082  0167EA  0EF8               	movlw	-8
 16083  0167EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 16084  0167F2  0EF9               	movlw	-7
 16085  0167F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 16086                           
 16087                           ;stkvar	_dividend @ sp[(-4)+-2]
 16088  0167FA  0EFA               	movlw	-6
 16089  0167FC  006F FF8C  F03A    	movff	plusw1,btemp+8
 16090  016802  0EFB               	movlw	-5
 16091  016804  006F FF8C  F03B    	movff	plusw1,btemp+9
 16092  01680A  503C               	movf	(btemp+10)^0,w,c
 16093  01680C  5C3A               	subwf	(btemp+8)^0,w,c
 16094  01680E  503D               	movf	(btemp+11)^0,w,c
 16095  016810  583B               	subwfb	(btemp+9)^0,w,c
 16096  016812  A0D8               	btfss	status,0,c
 16097  016814  D016               	goto	l7176
 16098                           
 16099                           ;stkvar	_divisor @ sp[(-4)+-4]
 16100                           ;stkvar	_dividend @ sp[(-4)+-2]
 16101  016816  0EFA               	movlw	-6
 16102  016818  50E3               	movf	plusw1,w,c
 16103  01681A  6E32               	movwf	btemp^0,c
 16104  01681C  0EF8               	movlw	-8
 16105  01681E  50E3               	movf	plusw1,w,c
 16106  016820  5E32               	subwf	btemp^0,f,c
 16107  016822  0EFA               	movlw	-6
 16108  016824  0060  F0CB  FFE3   	movff	btemp,plusw1
 16109  01682A  0EFB               	movlw	-5
 16110  01682C  50E3               	movf	plusw1,w,c
 16111  01682E  6E32               	movwf	btemp^0,c
 16112  016830  0EF9               	movlw	-7
 16113  016832  50E3               	movf	plusw1,w,c
 16114  016834  5A32               	subwfb	btemp^0,f,c
 16115  016836  0EFB               	movlw	-5
 16116  016838  0060  F0CB  FFE3   	movff	btemp,plusw1
 16117                           
 16118                           ;stkvar	_quotient @ sp[(-4)+0]
 16119  01683E  0EFC               	movlw	-4
 16120  016840  80E3               	bsf	plusw1,0,c
 16121  016842                     l7176:
 16122                           
 16123                           ;stkvar	_divisor @ sp[(-4)+-4]
 16124  016842  90D8               	bcf	status,0,c
 16125  016844  0EF9               	movlw	-7
 16126  016846  32E3               	rrcf	plusw1,f,c
 16127  016848  0EF8               	movlw	-8
 16128  01684A  32E3               	rrcf	plusw1,f,c
 16129                           
 16130                           ;stkvar	_counter @ sp[(-4)+3]
 16131  01684C  0EFF               	movlw	-1
 16132  01684E  50E3               	movf	plusw1,w,c
 16133  016850  6E32               	movwf	btemp^0,c
 16134  016852  0E01               	movlw	1
 16135  016854  5E32               	subwf	btemp^0,f,c
 16136  016856  0EFF               	movlw	-1
 16137  016858  0060  F0CB  FFE3   	movff	btemp,plusw1
 16138  01685E  A4D8               	btfss	status,2,c
 16139  016860  D7B3               	goto	u6130
 16140  016862                     u6150:
 16141                           
 16142                           ;stkvar	_sign @ sp[(-4)+2]
 16143  016862  0EFE               	movlw	-2
 16144  016864  50E3               	movf	plusw1,w,c
 16145  016866  B4D8               	btfsc	status,2,c
 16146  016868  D006               	goto	l7184
 16147                           
 16148                           ;stkvar	_quotient @ sp[(-4)+0]
 16149                           ;stkvar	_quotient @ sp[(-4)+0]
 16150  01686A  0EFC               	movlw	-4
 16151  01686C  6CE3               	negf	plusw1,c
 16152  01686E  0EFD               	movlw	-3
 16153  016870  1EE3               	comf	plusw1,f,c
 16154  016872  B0D8               	btfsc	status,0,c
 16155  016874  2AE3               	incf	plusw1,f,c
 16156  016876                     l7184:
 16157                           
 16158                           ;stkvar	_quotient @ sp[(-4)+0]
 16159  016876  0EFC               	movlw	-4
 16160  016878  006F FF8C  F032    	movff	plusw1,btemp
 16161  01687E  0EFD               	movlw	-3
 16162  016880  006F FF8C  F033    	movff	plusw1,btemp+1
 16163                           
 16164                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16165  016886  0EF8               	movlw	248
 16166  016888  26E1               	addwf	fsr1l,f,c
 16167  01688A  0EFF               	movlw	255
 16168  01688C  22E2               	addwfc	fsr1h,f,c
 16169  01688E  0012               	return		;funcret
 16170  016890                     __end_of___awdiv:
 16171                           	opt callstack 0
 16172                           
 16173 ;; *************** function _dtoa *****************
 16174 ;; Defined at:
 16175 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16176 ;; Parameters:    Size  Location     Type
 16177 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16178 ;;		 -> f(6), NULL(0), 
 16179 ;;  d               8  [STACK] long long 
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;  n               8  [STACK] long long 
 16182 ;;  i               2  [STACK] int 
 16183 ;;  s               2  [STACK] int 
 16184 ;;  w               2  [STACK] int 
 16185 ;;  p               2  [STACK] int 
 16186 ;; Return value:  Size  Location     Type
 16187 ;;                  2  [STACK] int 
 16188 ;; Registers used:
 16189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16190 ;; Tracked objects:
 16191 ;;		On entry : 0/5
 16192 ;;		On exit  : 0/0
 16193 ;;		Unchanged: 0/0
 16194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16199 ;;Total ram usage:        0 bytes
 16200 ;; Hardware stack levels used:    1
 16201 ;; Hardware stack levels required when called:   11
 16202 ;; This function calls:
 16203 ;;		___aodiv
 16204 ;;		___aomod
 16205 ;;		_abs
 16206 ;;		_pad
 16207 ;; This function is called by:
 16208 ;;		_vfpfcnvrt
 16209 ;; This function uses a reentrant model
 16210 ;;
 16211                           
 16212                           	psect	text59
 16213  013FDC                     __ptext59:
 16214                           	opt callstack 0
 16215  013FDC                     _dtoa:
 16216                           	opt callstack 0
 16217                           
 16218                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16219  013FDC  0E12               	movlw	18
 16220  013FDE  26E1               	addwf	fsr1l,f,c
 16221  013FE0  0E00               	movlw	0
 16222  013FE2  22E2               	addwfc	fsr1h,f,c
 16223                           
 16224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16225                           ;stkvar	_d @ sp[(-18)+-10]
 16226                           
 16227                           ;incstack = 0
 16228  013FE4  0EE4               	movlw	228
 16229  013FE6  24E1               	addwf	fsr1l,w,c
 16230  013FE8  6ED9               	movwf	fsr2l,c
 16231  013FEA  0EFF               	movlw	255
 16232  013FEC  20E2               	addwfc	fsr1h,w,c
 16233  013FEE  6EDA               	movwf	fsr2h,c
 16234                           
 16235                           ;stkvar	_n @ sp[(-18)+2]
 16236  013FF0  0E08               	movlw	8
 16237  013FF2  6E32               	movwf	btemp^0,c
 16238  013FF4  0EF0               	movlw	-16
 16239  013FF6                     us916999:
 16240  013FF6  006F FF7B FFE3     	movff	postinc2,plusw1
 16241  013FFC  28E8               	incf	wreg,w,c
 16242  013FFE  2E32               	decfsz	btemp^0,f,c
 16243  014000  D7FA               	bra	us916999
 16244                           
 16245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16246                           ;stkvar	_n @ sp[(-18)+2]
 16247  014002  0EF7               	movlw	-9
 16248  014004  AEE3               	btfss	plusw1,7,c
 16249  014006  D002               	goto	u9170
 16250  014008  0E01               	movlw	1
 16251  01400A  D001               	goto	u9180
 16252  01400C                     u9170:
 16253  01400C  0E00               	movlw	0
 16254  01400E                     u9180:
 16255  01400E  6E3C               	movwf	(btemp+10)^0,c
 16256  014010  6A3D               	clrf	(btemp+11)^0,c
 16257                           
 16258                           ;stkvar	_s @ sp[(-18)+12]
 16259  014012  0EFA               	movlw	-6
 16260  014014  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16261  01401A  0EFB               	movlw	-5
 16262  01401C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16263                           
 16264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16265                           ;stkvar	_s @ sp[(-18)+12]
 16266  014022  0EFA               	movlw	-6
 16267  014024  006F FF8C  F032    	movff	plusw1,btemp
 16268  01402A  0EFB               	movlw	-5
 16269  01402C  50E3               	movf	plusw1,w,c
 16270  01402E  1032               	iorwf	btemp^0,w,c
 16271  014030  B4D8               	btfsc	status,2,c
 16272  014032  D025               	goto	u9200
 16273                           
 16274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16275                           ;stkvar	_n @ sp[(-18)+2]
 16276                           ;stkvar	_n @ sp[(-18)+2]
 16277  014034  0EF0               	movlw	-16
 16278  014036  6CE3               	negf	plusw1,c
 16279  014038  0EF1               	movlw	-15
 16280  01403A  1EE3               	comf	plusw1,f,c
 16281  01403C  0EF2               	movlw	-14
 16282  01403E  1EE3               	comf	plusw1,f,c
 16283  014040  0EF3               	movlw	-13
 16284  014042  1EE3               	comf	plusw1,f,c
 16285  014044  0EF4               	movlw	-12
 16286  014046  1EE3               	comf	plusw1,f,c
 16287  014048  0EF5               	movlw	-11
 16288  01404A  1EE3               	comf	plusw1,f,c
 16289  01404C  0EF6               	movlw	-10
 16290  01404E  1EE3               	comf	plusw1,f,c
 16291  014050  0EF7               	movlw	-9
 16292  014052  1EE3               	comf	plusw1,f,c
 16293  014054  E314               	bnc	u9200
 16294  014056  0EF1               	movlw	-15
 16295  014058  2AE3               	incf	plusw1,f,c
 16296  01405A  E311               	bnc	u9200
 16297  01405C  0EF2               	movlw	-14
 16298  01405E  2AE3               	incf	plusw1,f,c
 16299  014060  E30E               	bnc	u9200
 16300  014062  0EF3               	movlw	-13
 16301  014064  2AE3               	incf	plusw1,f,c
 16302  014066  E30B               	bnc	u9200
 16303  014068  0EF4               	movlw	-12
 16304  01406A  2AE3               	incf	plusw1,f,c
 16305  01406C  E308               	bnc	u9200
 16306  01406E  0EF5               	movlw	-11
 16307  014070  2AE3               	incf	plusw1,f,c
 16308  014072  E305               	bnc	u9200
 16309  014074  0EF6               	movlw	-10
 16310  014076  2AE3               	incf	plusw1,f,c
 16311  014078  E302               	bnc	u9200
 16312  01407A  0EF7               	movlw	-9
 16313  01407C  2AE3               	incf	plusw1,f,c
 16314  01407E                     u9200:
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16317  01407E  AE1E               	btfss	(_prec+1)^0,7,c
 16318                           
 16319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16320  014080  921F               	bcf	_flags^0,1,c
 16321                           
 16322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16323  014082  BE1E               	btfsc	(_prec+1)^0,7,c
 16324  014084  D005               	goto	u9220
 16325  014086  501E               	movf	(_prec+1)^0,w,c
 16326  014088  E110               	bnz	l9798
 16327  01408A  041D               	decf	_prec^0,w,c
 16328  01408C  B0D8               	btfsc	status,0,c
 16329  01408E  D00D               	goto	l9798
 16330  014090                     u9220:
 16331  014090  0E01               	movlw	1
 16332  014092  6E3C               	movwf	(btemp+10)^0,c
 16333  014094  0E00               	movlw	0
 16334  014096  6E3D               	movwf	(btemp+11)^0,c
 16335                           
 16336                           ;stkvar	_p @ sp[(-18)+16]
 16337  014098  0EFE               	movlw	-2
 16338  01409A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16339  0140A0  0EFF               	movlw	-1
 16340  0140A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16341  0140A8  D008               	goto	l1885
 16342  0140AA                     l9798:
 16343                           
 16344                           ;stkvar	_p @ sp[(-18)+16]
 16345  0140AA  0EFE               	movlw	-2
 16346  0140AC  0060  F077  FFE3   	movff	_prec,plusw1
 16347  0140B2  0EFF               	movlw	-1
 16348  0140B4  0060  F07B  FFE3   	movff	_prec+1,plusw1
 16349  0140BA                     l1885:
 16350                           
 16351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16352                           ;stkvar	_w @ sp[(-18)+14]
 16353  0140BA  0EFC               	movlw	-4
 16354  0140BC  0060  F06F  FFE3   	movff	_width,plusw1
 16355  0140C2  0EFD               	movlw	-3
 16356  0140C4  0060  F073  FFE3   	movff	_width+1,plusw1
 16357                           
 16358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16359                           ;stkvar	_s @ sp[(-18)+12]
 16360  0140CA  0EFA               	movlw	-6
 16361  0140CC  006F FF8C  F032    	movff	plusw1,btemp
 16362  0140D2  0EFB               	movlw	-5
 16363  0140D4  50E3               	movf	plusw1,w,c
 16364  0140D6  1032               	iorwf	btemp^0,w,c
 16365  0140D8  A4D8               	btfss	status,2,c
 16366  0140DA  D002               	goto	u9240
 16367  0140DC  A41F               	btfss	_flags^0,2,c
 16368  0140DE  D00A               	goto	l9806
 16369  0140E0                     u9240:
 16370                           
 16371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16372                           ;stkvar	_w @ sp[(-18)+14]
 16373  0140E0  50E1               	movf	fsr1l,w,c
 16374  0140E2  0FFC               	addlw	-4
 16375  0140E4  6ED9               	movwf	fsr2l,c
 16376  0140E6  50E2               	movf	fsr1h,w,c
 16377  0140E8  6EDA               	movwf	fsr2h,c
 16378  0140EA  0EFF               	movlw	255
 16379  0140EC  22DA               	addwfc	fsr2h,f,c
 16380  0140EE  06DE               	decf	postinc2,f,c
 16381  0140F0  0E00               	movlw	0
 16382  0140F2  5ADD               	subwfb	postdec2,f,c
 16383  0140F4                     l9806:
 16384                           
 16385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16386  0140F4  0E4F               	movlw	79
 16387  0140F6  6E3C               	movwf	(btemp+10)^0,c
 16388  0140F8  0E00               	movlw	0
 16389  0140FA  6E3D               	movwf	(btemp+11)^0,c
 16390                           
 16391                           ;stkvar	_i @ sp[(-18)+10]
 16392  0140FC  0EF8               	movlw	-8
 16393  0140FE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16394  014104  0EF9               	movlw	-7
 16395  014106  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16396                           
 16397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16398  01410C  0101               	movlb	1	; () banked
 16399  01410E  6BCB               	clrf	(_dbuf+79)& (0+255),b
 16400                           
 16401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16402  014110  D109               	goto	l9820
 16403  014112                     l9810:
 16404                           
 16405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16406                           ;stkvar	_i @ sp[(-18)+10]
 16407  014112  50E1               	movf	fsr1l,w,c
 16408  014114  0FF8               	addlw	-8
 16409  014116  6ED9               	movwf	fsr2l,c
 16410  014118  50E2               	movf	fsr1h,w,c
 16411  01411A  6EDA               	movwf	fsr2h,c
 16412  01411C  0EFF               	movlw	255
 16413  01411E  22DA               	addwfc	fsr2h,f,c
 16414  014120  06DE               	decf	postinc2,f,c
 16415  014122  0E00               	movlw	0
 16416  014124  5ADD               	subwfb	postdec2,f,c
 16417                           
 16418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16419  014126  0E0A               	movlw	10
 16420  014128  6EE6               	movwf	postinc1,c
 16421  01412A  0E00               	movlw	0
 16422  01412C  6EE6               	movwf	postinc1,c
 16423  01412E  0E00               	movlw	0
 16424  014130  6EE6               	movwf	postinc1,c
 16425  014132  0E00               	movlw	0
 16426  014134  6EE6               	movwf	postinc1,c
 16427  014136  0E00               	movlw	0
 16428  014138  6EE6               	movwf	postinc1,c
 16429  01413A  0E00               	movlw	0
 16430  01413C  6EE6               	movwf	postinc1,c
 16431  01413E  0E00               	movlw	0
 16432  014140  6EE6               	movwf	postinc1,c
 16433  014142  0E00               	movlw	0
 16434  014144  6EE6               	movwf	postinc1,c
 16435                           
 16436                           ;stkvar	_n @ sp[(-26)+2]
 16437  014146  50E1               	movf	fsr1l,w,c
 16438  014148  0FE8               	addlw	-24
 16439  01414A  6ED9               	movwf	fsr2l,c
 16440  01414C  50E2               	movf	fsr1h,w,c
 16441  01414E  6EDA               	movwf	fsr2h,c
 16442  014150  0EFF               	movlw	255
 16443  014152  22DA               	addwfc	fsr2h,f,c
 16444  014154  006F FF7B FFE6     	movff	postinc2,postinc1
 16445  01415A  006F FF7B FFE6     	movff	postinc2,postinc1
 16446  014160  006F FF7B FFE6     	movff	postinc2,postinc1
 16447  014166  006F FF7B FFE6     	movff	postinc2,postinc1
 16448  01416C  006F FF7B FFE6     	movff	postinc2,postinc1
 16449  014172  006F FF7B FFE6     	movff	postinc2,postinc1
 16450  014178  006F FF7B FFE6     	movff	postinc2,postinc1
 16451  01417E  006F FF7B FFE6     	movff	postinc2,postinc1
 16452  014184  EC72  F0AC         	call	___aomod	;wreg free
 16453  014188  52E5               	movf	postdec1,f,c
 16454  01418A  006F FF9C  F049    	movff	indf1,btemp+23
 16455  014190  52E5               	movf	postdec1,f,c
 16456  014192  006F FF9C  F048    	movff	indf1,btemp+22
 16457  014198  52E5               	movf	postdec1,f,c
 16458  01419A  006F FF9C  F047    	movff	indf1,btemp+21
 16459  0141A0  52E5               	movf	postdec1,f,c
 16460  0141A2  006F FF9C  F046    	movff	indf1,btemp+20
 16461  0141A8  52E5               	movf	postdec1,f,c
 16462  0141AA  006F FF9C  F045    	movff	indf1,btemp+19
 16463  0141B0  52E5               	movf	postdec1,f,c
 16464  0141B2  006F FF9C  F044    	movff	indf1,btemp+18
 16465  0141B8  52E5               	movf	postdec1,f,c
 16466  0141BA  006F FF9C  F043    	movff	indf1,btemp+17
 16467  0141C0  52E5               	movf	postdec1,f,c
 16468  0141C2  006F FF9C  F042    	movff	indf1,btemp+16
 16469  0141C8  0EF8               	movlw	248
 16470  0141CA  26E1               	addwf	fsr1l,f,c
 16471  0141CC  0EFF               	movlw	255
 16472  0141CE  22E2               	addwfc	fsr1h,f,c
 16473  0141D0  0060  F108  F03C   	movff	btemp+16,btemp+10
 16474  0141D6  0060  F10C  F03D   	movff	btemp+17,btemp+11
 16475  0141DC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16476  0141E2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16477  0141E8  EC6C  F0C1         	call	_abs	;wreg free
 16478  0141EC  0E30               	movlw	48
 16479  0141EE  2632               	addwf	btemp^0,f,c
 16480                           
 16481                           ;stkvar	_i @ sp[(-18)+10]
 16482  0141F0  0EF8               	movlw	-8
 16483  0141F2  006F FF8C  F03C    	movff	plusw1,btemp+10
 16484  0141F8  0EF9               	movlw	-7
 16485  0141FA  006F FF8C  F03D    	movff	plusw1,btemp+11
 16486  014200  0E7C               	movlw	low _dbuf
 16487  014202  243C               	addwf	(btemp+10)^0,w,c
 16488  014204  6ED9               	movwf	fsr2l,c
 16489  014206  0E01               	movlw	high _dbuf
 16490  014208  203D               	addwfc	(btemp+11)^0,w,c
 16491  01420A  6EDA               	movwf	fsr2h,c
 16492  01420C  0060  F0CB  FFDF   	movff	btemp,indf2
 16493                           
 16494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16495                           ;stkvar	_p @ sp[(-18)+16]
 16496  014212  50E1               	movf	fsr1l,w,c
 16497  014214  0FFE               	addlw	-2
 16498  014216  6ED9               	movwf	fsr2l,c
 16499  014218  50E2               	movf	fsr1h,w,c
 16500  01421A  6EDA               	movwf	fsr2h,c
 16501  01421C  0EFF               	movlw	255
 16502  01421E  22DA               	addwfc	fsr2h,f,c
 16503  014220  06DE               	decf	postinc2,f,c
 16504  014222  0E00               	movlw	0
 16505  014224  5ADD               	subwfb	postdec2,f,c
 16506                           
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16508                           ;stkvar	_w @ sp[(-18)+14]
 16509  014226  50E1               	movf	fsr1l,w,c
 16510  014228  0FFC               	addlw	-4
 16511  01422A  6ED9               	movwf	fsr2l,c
 16512  01422C  50E2               	movf	fsr1h,w,c
 16513  01422E  6EDA               	movwf	fsr2h,c
 16514  014230  0EFF               	movlw	255
 16515  014232  22DA               	addwfc	fsr2h,f,c
 16516  014234  06DE               	decf	postinc2,f,c
 16517  014236  0E00               	movlw	0
 16518  014238  5ADD               	subwfb	postdec2,f,c
 16519                           
 16520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16521  01423A  0E0A               	movlw	10
 16522  01423C  6EE6               	movwf	postinc1,c
 16523  01423E  0E00               	movlw	0
 16524  014240  6EE6               	movwf	postinc1,c
 16525  014242  0E00               	movlw	0
 16526  014244  6EE6               	movwf	postinc1,c
 16527  014246  0E00               	movlw	0
 16528  014248  6EE6               	movwf	postinc1,c
 16529  01424A  0E00               	movlw	0
 16530  01424C  6EE6               	movwf	postinc1,c
 16531  01424E  0E00               	movlw	0
 16532  014250  6EE6               	movwf	postinc1,c
 16533  014252  0E00               	movlw	0
 16534  014254  6EE6               	movwf	postinc1,c
 16535  014256  0E00               	movlw	0
 16536  014258  6EE6               	movwf	postinc1,c
 16537                           
 16538                           ;stkvar	_n @ sp[(-26)+2]
 16539  01425A  50E1               	movf	fsr1l,w,c
 16540  01425C  0FE8               	addlw	-24
 16541  01425E  6ED9               	movwf	fsr2l,c
 16542  014260  50E2               	movf	fsr1h,w,c
 16543  014262  6EDA               	movwf	fsr2h,c
 16544  014264  0EFF               	movlw	255
 16545  014266  22DA               	addwfc	fsr2h,f,c
 16546  014268  006F FF7B FFE6     	movff	postinc2,postinc1
 16547  01426E  006F FF7B FFE6     	movff	postinc2,postinc1
 16548  014274  006F FF7B FFE6     	movff	postinc2,postinc1
 16549  01427A  006F FF7B FFE6     	movff	postinc2,postinc1
 16550  014280  006F FF7B FFE6     	movff	postinc2,postinc1
 16551  014286  006F FF7B FFE6     	movff	postinc2,postinc1
 16552  01428C  006F FF7B FFE6     	movff	postinc2,postinc1
 16553  014292  006F FF7B FFE6     	movff	postinc2,postinc1
 16554  014298  ECF8  F0A9         	call	___aodiv	;wreg free
 16555  01429C  52E5               	movf	postdec1,f,c
 16556  01429E  006F FF9C  F049    	movff	indf1,btemp+23
 16557  0142A4  52E5               	movf	postdec1,f,c
 16558  0142A6  006F FF9C  F048    	movff	indf1,btemp+22
 16559  0142AC  52E5               	movf	postdec1,f,c
 16560  0142AE  006F FF9C  F047    	movff	indf1,btemp+21
 16561  0142B4  52E5               	movf	postdec1,f,c
 16562  0142B6  006F FF9C  F046    	movff	indf1,btemp+20
 16563  0142BC  52E5               	movf	postdec1,f,c
 16564  0142BE  006F FF9C  F045    	movff	indf1,btemp+19
 16565  0142C4  52E5               	movf	postdec1,f,c
 16566  0142C6  006F FF9C  F044    	movff	indf1,btemp+18
 16567  0142CC  52E5               	movf	postdec1,f,c
 16568  0142CE  006F FF9C  F043    	movff	indf1,btemp+17
 16569  0142D4  52E5               	movf	postdec1,f,c
 16570  0142D6  006F FF9C  F042    	movff	indf1,btemp+16
 16571  0142DC  0EF8               	movlw	248
 16572  0142DE  26E1               	addwf	fsr1l,f,c
 16573  0142E0  0EFF               	movlw	255
 16574  0142E2  22E2               	addwfc	fsr1h,f,c
 16575                           
 16576                           ;stkvar	_n @ sp[(-18)+2]
 16577  0142E4  0EF0               	movlw	-16
 16578  0142E6  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16579  0142EC  0EF1               	movlw	-15
 16580  0142EE  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16581  0142F4  0EF2               	movlw	-14
 16582  0142F6  0060  F113  FFE3   	movff	btemp+18,plusw1
 16583  0142FC  0EF3               	movlw	-13
 16584  0142FE  0060  F117  FFE3   	movff	btemp+19,plusw1
 16585  014304  0EF4               	movlw	-12
 16586  014306  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16587  01430C  0EF5               	movlw	-11
 16588  01430E  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16589  014314  0EF6               	movlw	-10
 16590  014316  0060  F123  FFE3   	movff	btemp+22,plusw1
 16591  01431C  0EF7               	movlw	-9
 16592  01431E  0060  F127  FFE3   	movff	btemp+23,plusw1
 16593  014324                     l9820:
 16594                           
 16595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16596                           ;stkvar	_i @ sp[(-18)+10]
 16597  014324  0EF9               	movlw	-7
 16598  014326  BEE3               	btfsc	plusw1,7,c
 16599  014328  D036               	goto	u9290
 16600  01432A  0EF9               	movlw	-7
 16601  01432C  50E3               	movf	plusw1,w,c
 16602  01432E  E104               	bnz	u9250
 16603  014330  0EF8               	movlw	-8
 16604  014332  04E3               	decf	plusw1,w,c
 16605  014334  A0D8               	btfss	status,0,c
 16606  014336  D02F               	goto	u9290
 16607  014338                     u9250:
 16608                           
 16609                           ;stkvar	_n @ sp[(-18)+2]
 16610  014338  0EF0               	movlw	-16
 16611  01433A  50E3               	movf	plusw1,w,c
 16612  01433C  E115               	bnz	u9261
 16613  01433E  0EF1               	movlw	-15
 16614  014340  50E3               	movf	plusw1,w,c
 16615  014342  E112               	bnz	u9261
 16616  014344  0EF2               	movlw	-14
 16617  014346  50E3               	movf	plusw1,w,c
 16618  014348  E10F               	bnz	u9261
 16619  01434A  0EF3               	movlw	-13
 16620  01434C  50E3               	movf	plusw1,w,c
 16621  01434E  E10C               	bnz	u9261
 16622  014350  0EF4               	movlw	-12
 16623  014352  50E3               	movf	plusw1,w,c
 16624  014354  E109               	bnz	u9261
 16625  014356  0EF5               	movlw	-11
 16626  014358  50E3               	movf	plusw1,w,c
 16627  01435A  E106               	bnz	u9261
 16628  01435C  0EF6               	movlw	-10
 16629  01435E  50E3               	movf	plusw1,w,c
 16630  014360  E103               	bnz	u9261
 16631  014362  0EF7               	movlw	-9
 16632  014364  50E3               	movf	plusw1,w,c
 16633  014366  A4D8               	btfss	status,2,c
 16634  014368                     u9261:
 16635  014368  D6D4               	goto	l9810
 16636                           
 16637                           ;stkvar	_p @ sp[(-18)+16]
 16638  01436A  0EFF               	movlw	-1
 16639  01436C  BEE3               	btfsc	plusw1,7,c
 16640  01436E  D007               	goto	u9270
 16641  014370  0EFF               	movlw	-1
 16642  014372  50E3               	movf	plusw1,w,c
 16643  014374  E103               	bnz	u9271
 16644  014376  0EFE               	movlw	-2
 16645  014378  04E3               	decf	plusw1,w,c
 16646  01437A  B0D8               	btfsc	status,0,c
 16647  01437C                     u9271:
 16648  01437C  D6CA               	goto	l9810
 16649  01437E                     u9270:
 16650                           
 16651                           ;stkvar	_w @ sp[(-18)+14]
 16652  01437E  0EFD               	movlw	-3
 16653  014380  BEE3               	btfsc	plusw1,7,c
 16654  014382  D009               	goto	u9290
 16655  014384  0EFD               	movlw	-3
 16656  014386  50E3               	movf	plusw1,w,c
 16657  014388  E104               	bnz	u9280
 16658  01438A  0EFC               	movlw	-4
 16659  01438C  04E3               	decf	plusw1,w,c
 16660  01438E  A0D8               	btfss	status,0,c
 16661  014390  D002               	goto	u9290
 16662  014392                     u9280:
 16663  014392  B21F               	btfsc	_flags^0,1,c
 16664  014394  D6BE               	goto	l9810
 16665  014396                     u9290:
 16666                           
 16667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16668                           ;stkvar	_s @ sp[(-18)+12]
 16669  014396  0EFA               	movlw	-6
 16670  014398  006F FF8C  F032    	movff	plusw1,btemp
 16671  01439E  0EFB               	movlw	-5
 16672  0143A0  50E3               	movf	plusw1,w,c
 16673  0143A2  1032               	iorwf	btemp^0,w,c
 16674  0143A4  A4D8               	btfss	status,2,c
 16675  0143A6  D002               	goto	u9310
 16676  0143A8  A41F               	btfss	_flags^0,2,c
 16677  0143AA  D033               	goto	l9844
 16678  0143AC                     u9310:
 16679                           
 16680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16681                           ;stkvar	_i @ sp[(-18)+10]
 16682  0143AC  50E1               	movf	fsr1l,w,c
 16683  0143AE  0FF8               	addlw	-8
 16684  0143B0  6ED9               	movwf	fsr2l,c
 16685  0143B2  50E2               	movf	fsr1h,w,c
 16686  0143B4  6EDA               	movwf	fsr2h,c
 16687  0143B6  0EFF               	movlw	255
 16688  0143B8  22DA               	addwfc	fsr2h,f,c
 16689  0143BA  06DE               	decf	postinc2,f,c
 16690  0143BC  0E00               	movlw	0
 16691  0143BE  5ADD               	subwfb	postdec2,f,c
 16692                           
 16693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16694                           ;stkvar	_s @ sp[(-18)+12]
 16695  0143C0  0EFA               	movlw	-6
 16696  0143C2  006F FF8C  F032    	movff	plusw1,btemp
 16697  0143C8  0EFB               	movlw	-5
 16698  0143CA  50E3               	movf	plusw1,w,c
 16699  0143CC  1032               	iorwf	btemp^0,w,c
 16700  0143CE  A4D8               	btfss	status,2,c
 16701  0143D0  D002               	goto	l9840
 16702  0143D2  0E2B               	movlw	43
 16703  0143D4  D001               	goto	L17
 16704  0143D6                     l9840:
 16705  0143D6  0E2D               	movlw	45
 16706  0143D8                     L17:
 16707  0143D8  6E3C               	movwf	(btemp+10)^0,c
 16708  0143DA  0E00               	movlw	0
 16709  0143DC  6E3D               	movwf	(btemp+11)^0,c
 16710                           
 16711                           ;stkvar	_dtoa$4579 @ sp[(-18)+0]
 16712  0143DE  0EEE               	movlw	-18
 16713  0143E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16714  0143E6  0EEF               	movlw	-17
 16715  0143E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16716                           
 16717                           ;stkvar	_dtoa$4579 @ sp[(-18)+0]
 16718                           ;stkvar	_i @ sp[(-18)+10]
 16719  0143EE  0EF8               	movlw	-8
 16720  0143F0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16721  0143F6  0EF9               	movlw	-7
 16722  0143F8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16723  0143FE  0E7C               	movlw	low _dbuf
 16724  014400  243C               	addwf	(btemp+10)^0,w,c
 16725  014402  6ED9               	movwf	fsr2l,c
 16726  014404  0E01               	movlw	high _dbuf
 16727  014406  203D               	addwfc	(btemp+11)^0,w,c
 16728  014408  6EDA               	movwf	fsr2h,c
 16729  01440A  0EEE               	movlw	-18
 16730  01440C  006F FF8F FFDF     	movff	plusw1,indf2
 16731  014412                     l9844:
 16732                           
 16733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16734                           ;stkvar	_w @ sp[(-18)+14]
 16735  014412  0EFC               	movlw	-4
 16736  014414  006F FF8F FFE6     	movff	plusw1,postinc1
 16737  01441A  006F FF8F FFE6     	movff	plusw1,postinc1
 16738                           
 16739                           ;stkvar	_i @ sp[(-20)+10]
 16740  014420  0E7C               	movlw	low _dbuf
 16741  014422  6E3C               	movwf	(btemp+10)^0,c
 16742  014424  0E01               	movlw	high _dbuf
 16743  014426  6E3D               	movwf	(btemp+11)^0,c
 16744  014428  0EF6               	movlw	-10
 16745  01442A  50E3               	movf	plusw1,w,c
 16746  01442C  263C               	addwf	(btemp+10)^0,f,c
 16747  01442E  0EF7               	movlw	-9
 16748  014430  50E3               	movf	plusw1,w,c
 16749  014432  223D               	addwfc	(btemp+11)^0,f,c
 16750  014434  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16751  01443A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16752                           
 16753                           ;stkvar	_fp @ sp[(-22)+-2]
 16754  014440  0EE8               	movlw	-24
 16755  014442  006F FF8F FFE6     	movff	plusw1,postinc1
 16756  014448  006F FF8F FFE6     	movff	plusw1,postinc1
 16757  01444E  ECA1  F0B6         	call	_pad	;wreg free
 16758                           
 16759                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16760  014452  0EE4               	movlw	228
 16761  014454  26E1               	addwf	fsr1l,f,c
 16762  014456  0EFF               	movlw	255
 16763  014458  22E2               	addwfc	fsr1h,f,c
 16764  01445A  0012               	return		;funcret
 16765  01445C                     __end_of_dtoa:
 16766                           	opt callstack 0
 16767                           
 16768 ;; *************** function _abs *****************
 16769 ;; Defined at:
 16770 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  a               2  [STACK] int 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;		None
 16775 ;; Return value:  Size  Location     Type
 16776 ;;                  2  [STACK] int 
 16777 ;; Registers used:
 16778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/1
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16788 ;;Total ram usage:        0 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:    6
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		_dtoa
 16795 ;; This function uses a reentrant model
 16796 ;;
 16797                           
 16798                           	psect	text60
 16799  0182D8                     __ptext60:
 16800                           	opt callstack 0
 16801  0182D8                     _abs:
 16802                           	opt callstack 17
 16803                           
 16804                           ;stkvar	_a @ sp[(0)+-2]
 16805                           
 16806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16807                           ;incstack = 0
 16808  0182D8  0EFF               	movlw	-1
 16809  0182DA  BEE3               	btfsc	plusw1,7,c
 16810  0182DC  D007               	goto	u5110
 16811  0182DE  0EFF               	movlw	-1
 16812  0182E0  50E3               	movf	plusw1,w,c
 16813  0182E2  E112               	bnz	l6638
 16814  0182E4  0EFE               	movlw	-2
 16815  0182E6  04E3               	decf	plusw1,w,c
 16816  0182E8  B0D8               	btfsc	status,0,c
 16817  0182EA  D00E               	goto	l6638
 16818  0182EC                     u5110:
 16819                           
 16820                           ;stkvar	_a @ sp[(0)+-2]
 16821  0182EC  0EFE               	movlw	-2
 16822  0182EE  006F FF8C  F032    	movff	plusw1,btemp
 16823  0182F4  1E32               	comf	btemp^0,f,c
 16824  0182F6  0EFF               	movlw	-1
 16825  0182F8  006F FF8C  F033    	movff	plusw1,btemp+1
 16826  0182FE  1E33               	comf	(btemp+1)^0,f,c
 16827  018300  2A32               	incf	btemp^0,f,c
 16828  018302  B4D8               	btfsc	status,2,c
 16829  018304  2A33               	incf	(btemp+1)^0,f,c
 16830  018306  D008               	goto	l2788
 16831  018308                     l6638:
 16832                           
 16833                           ;stkvar	_a @ sp[(0)+-2]
 16834  018308  0EFE               	movlw	-2
 16835  01830A  006F FF8C  F032    	movff	plusw1,btemp
 16836  018310  0EFF               	movlw	-1
 16837  018312  006F FF8C  F033    	movff	plusw1,btemp+1
 16838  018318                     l2788:
 16839                           
 16840                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16841  018318  52E5               	movf	postdec1,f,c
 16842  01831A  52E5               	movf	postdec1,f,c
 16843  01831C  0012               	return		;funcret
 16844  01831E                     __end_of_abs:
 16845                           	opt callstack 0
 16846                           
 16847 ;; *************** function ___aomod *****************
 16848 ;; Defined at:
 16849 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16850 ;; Parameters:    Size  Location     Type
 16851 ;;  dividend        8  [STACK] long long 
 16852 ;;  divisor         8  [STACK] long long 
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;  sign            1  [STACK] unsigned char 
 16855 ;;  counter         1  [STACK] unsigned char 
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  8  [STACK] long long 
 16858 ;; Registers used:
 16859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/1
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16869 ;;Total ram usage:        0 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; Hardware stack levels required when called:    6
 16872 ;; This function calls:
 16873 ;;		Nothing
 16874 ;; This function is called by:
 16875 ;;		_dtoa
 16876 ;; This function uses a reentrant model
 16877 ;;
 16878                           
 16879                           	psect	text61
 16880  0158E4                     __ptext61:
 16881                           	opt callstack 0
 16882  0158E4                     ___aomod:
 16883                           	opt callstack 0
 16884                           
 16885                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16886  0158E4  52E6               	movf	postinc1,f,c
 16887  0158E6  52E6               	movf	postinc1,f,c
 16888                           
 16889                           ;stkvar	_sign @ sp[(-2)+0]
 16890                           
 16891                           ;incstack = 0
 16892  0158E8  0EFE               	movlw	-2
 16893  0158EA  6AE3               	clrf	plusw1,c
 16894                           
 16895                           ;stkvar	_dividend @ sp[(-2)+-8]
 16896  0158EC  0EFD               	movlw	-3
 16897  0158EE  AEE3               	btfss	plusw1,7,c
 16898  0158F0  D028               	goto	l6796
 16899                           
 16900                           ;stkvar	_dividend @ sp[(-2)+-8]
 16901                           ;stkvar	_dividend @ sp[(-2)+-8]
 16902  0158F2  0EF6               	movlw	-10
 16903  0158F4  6CE3               	negf	plusw1,c
 16904  0158F6  0EF7               	movlw	-9
 16905  0158F8  1EE3               	comf	plusw1,f,c
 16906  0158FA  0EF8               	movlw	-8
 16907  0158FC  1EE3               	comf	plusw1,f,c
 16908  0158FE  0EF9               	movlw	-7
 16909  015900  1EE3               	comf	plusw1,f,c
 16910  015902  0EFA               	movlw	-6
 16911  015904  1EE3               	comf	plusw1,f,c
 16912  015906  0EFB               	movlw	-5
 16913  015908  1EE3               	comf	plusw1,f,c
 16914  01590A  0EFC               	movlw	-4
 16915  01590C  1EE3               	comf	plusw1,f,c
 16916  01590E  0EFD               	movlw	-3
 16917  015910  1EE3               	comf	plusw1,f,c
 16918  015912  E314               	bnc	u5540
 16919  015914  0EF7               	movlw	-9
 16920  015916  2AE3               	incf	plusw1,f,c
 16921  015918  E311               	bnc	u5540
 16922  01591A  0EF8               	movlw	-8
 16923  01591C  2AE3               	incf	plusw1,f,c
 16924  01591E  E30E               	bnc	u5540
 16925  015920  0EF9               	movlw	-7
 16926  015922  2AE3               	incf	plusw1,f,c
 16927  015924  E30B               	bnc	u5540
 16928  015926  0EFA               	movlw	-6
 16929  015928  2AE3               	incf	plusw1,f,c
 16930  01592A  E308               	bnc	u5540
 16931  01592C  0EFB               	movlw	-5
 16932  01592E  2AE3               	incf	plusw1,f,c
 16933  015930  E305               	bnc	u5540
 16934  015932  0EFC               	movlw	-4
 16935  015934  2AE3               	incf	plusw1,f,c
 16936  015936  E302               	bnc	u5540
 16937  015938  0EFD               	movlw	-3
 16938  01593A  2AE3               	incf	plusw1,f,c
 16939  01593C                     u5540:
 16940                           
 16941                           ;stkvar	_sign @ sp[(-2)+0]
 16942  01593C  0EFE               	movlw	-2
 16943  01593E  6AE3               	clrf	plusw1,c
 16944  015940  2AE3               	incf	plusw1,f,c
 16945  015942                     l6796:
 16946                           
 16947                           ;stkvar	_divisor @ sp[(-2)+-16]
 16948  015942  0EF5               	movlw	-11
 16949  015944  AEE3               	btfss	plusw1,7,c
 16950  015946  D025               	goto	u5560
 16951                           
 16952                           ;stkvar	_divisor @ sp[(-2)+-16]
 16953                           ;stkvar	_divisor @ sp[(-2)+-16]
 16954  015948  0EEE               	movlw	-18
 16955  01594A  6CE3               	negf	plusw1,c
 16956  01594C  0EEF               	movlw	-17
 16957  01594E  1EE3               	comf	plusw1,f,c
 16958  015950  0EF0               	movlw	-16
 16959  015952  1EE3               	comf	plusw1,f,c
 16960  015954  0EF1               	movlw	-15
 16961  015956  1EE3               	comf	plusw1,f,c
 16962  015958  0EF2               	movlw	-14
 16963  01595A  1EE3               	comf	plusw1,f,c
 16964  01595C  0EF3               	movlw	-13
 16965  01595E  1EE3               	comf	plusw1,f,c
 16966  015960  0EF4               	movlw	-12
 16967  015962  1EE3               	comf	plusw1,f,c
 16968  015964  0EF5               	movlw	-11
 16969  015966  1EE3               	comf	plusw1,f,c
 16970  015968  E314               	bnc	u5560
 16971  01596A  0EEF               	movlw	-17
 16972  01596C  2AE3               	incf	plusw1,f,c
 16973  01596E  E311               	bnc	u5560
 16974  015970  0EF0               	movlw	-16
 16975  015972  2AE3               	incf	plusw1,f,c
 16976  015974  E30E               	bnc	u5560
 16977  015976  0EF1               	movlw	-15
 16978  015978  2AE3               	incf	plusw1,f,c
 16979  01597A  E30B               	bnc	u5560
 16980  01597C  0EF2               	movlw	-14
 16981  01597E  2AE3               	incf	plusw1,f,c
 16982  015980  E308               	bnc	u5560
 16983  015982  0EF3               	movlw	-13
 16984  015984  2AE3               	incf	plusw1,f,c
 16985  015986  E305               	bnc	u5560
 16986  015988  0EF4               	movlw	-12
 16987  01598A  2AE3               	incf	plusw1,f,c
 16988  01598C  E302               	bnc	u5560
 16989  01598E  0EF5               	movlw	-11
 16990  015990  2AE3               	incf	plusw1,f,c
 16991  015992                     u5560:
 16992                           
 16993                           ;stkvar	_divisor @ sp[(-2)+-16]
 16994  015992  0EEE               	movlw	-18
 16995  015994  50E3               	movf	plusw1,w,c
 16996  015996  E116               	bnz	u5570
 16997  015998  0EEF               	movlw	-17
 16998  01599A  50E3               	movf	plusw1,w,c
 16999  01599C  E113               	bnz	u5570
 17000  01599E  0EF0               	movlw	-16
 17001  0159A0  50E3               	movf	plusw1,w,c
 17002  0159A2  E110               	bnz	u5570
 17003  0159A4  0EF1               	movlw	-15
 17004  0159A6  50E3               	movf	plusw1,w,c
 17005  0159A8  E10D               	bnz	u5570
 17006  0159AA  0EF2               	movlw	-14
 17007  0159AC  50E3               	movf	plusw1,w,c
 17008  0159AE  E10A               	bnz	u5570
 17009  0159B0  0EF3               	movlw	-13
 17010  0159B2  50E3               	movf	plusw1,w,c
 17011  0159B4  E107               	bnz	u5570
 17012  0159B6  0EF4               	movlw	-12
 17013  0159B8  50E3               	movf	plusw1,w,c
 17014  0159BA  E104               	bnz	u5570
 17015  0159BC  0EF5               	movlw	-11
 17016  0159BE  50E3               	movf	plusw1,w,c
 17017  0159C0  B4D8               	btfsc	status,2,c
 17018  0159C2  D075               	goto	u5600
 17019  0159C4                     u5570:
 17020                           
 17021                           ;stkvar	_counter @ sp[(-2)+1]
 17022  0159C4  0EFF               	movlw	-1
 17023  0159C6  6AE3               	clrf	plusw1,c
 17024  0159C8  D012               	goto	L18
 17025  0159CA                     l6804:
 17026                           
 17027                           ;stkvar	_divisor @ sp[(-2)+-16]
 17028  0159CA  90D8               	bcf	status,0,c
 17029  0159CC  0EEE               	movlw	-18
 17030  0159CE  36E3               	rlcf	plusw1,f,c
 17031  0159D0  0EEF               	movlw	-17
 17032  0159D2  36E3               	rlcf	plusw1,f,c
 17033  0159D4  0EF0               	movlw	-16
 17034  0159D6  36E3               	rlcf	plusw1,f,c
 17035  0159D8  0EF1               	movlw	-15
 17036  0159DA  36E3               	rlcf	plusw1,f,c
 17037  0159DC  0EF2               	movlw	-14
 17038  0159DE  36E3               	rlcf	plusw1,f,c
 17039  0159E0  0EF3               	movlw	-13
 17040  0159E2  36E3               	rlcf	plusw1,f,c
 17041  0159E4  0EF4               	movlw	-12
 17042  0159E6  36E3               	rlcf	plusw1,f,c
 17043  0159E8  0EF5               	movlw	-11
 17044  0159EA  36E3               	rlcf	plusw1,f,c
 17045                           
 17046                           ;stkvar	_counter @ sp[(-2)+1]
 17047  0159EC  0EFF               	movlw	-1
 17048  0159EE                     L18:
 17049  0159EE  2AE3               	incf	plusw1,f,c
 17050                           
 17051                           ;stkvar	_divisor @ sp[(-2)+-16]
 17052  0159F0  0EF5               	movlw	-11
 17053  0159F2  AEE3               	btfss	plusw1,7,c
 17054  0159F4  D7EA               	goto	l6804
 17055  0159F6                     u5580:
 17056                           
 17057                           ;stkvar	_divisor @ sp[(-2)+-16]
 17058                           ;stkvar	_dividend @ sp[(-2)+-8]
 17059  0159F6  50E1               	movf	fsr1l,w,c
 17060  0159F8  0FF6               	addlw	-10
 17061  0159FA  6ED9               	movwf	fsr2l,c
 17062  0159FC  50E2               	movf	fsr1h,w,c
 17063  0159FE  6EDA               	movwf	fsr2h,c
 17064  015A00  0EFF               	movlw	255
 17065  015A02  22DA               	addwfc	fsr2h,f,c
 17066  015A04  0EEE               	movlw	-18
 17067  015A06  50E3               	movf	plusw1,w,c
 17068  015A08  5CDE               	subwf	postinc2,w,c
 17069  015A0A  0EEF               	movlw	-17
 17070  015A0C  50E3               	movf	plusw1,w,c
 17071  015A0E  58DE               	subwfb	postinc2,w,c
 17072  015A10  0EF0               	movlw	-16
 17073  015A12  50E3               	movf	plusw1,w,c
 17074  015A14  58DE               	subwfb	postinc2,w,c
 17075  015A16  0EF1               	movlw	-15
 17076  015A18  50E3               	movf	plusw1,w,c
 17077  015A1A  58DE               	subwfb	postinc2,w,c
 17078  015A1C  0EF2               	movlw	-14
 17079  015A1E  50E3               	movf	plusw1,w,c
 17080  015A20  58DE               	subwfb	postinc2,w,c
 17081  015A22  0EF3               	movlw	-13
 17082  015A24  50E3               	movf	plusw1,w,c
 17083  015A26  58DE               	subwfb	postinc2,w,c
 17084  015A28  0EF4               	movlw	-12
 17085  015A2A  50E3               	movf	plusw1,w,c
 17086  015A2C  58DE               	subwfb	postinc2,w,c
 17087  015A2E  0EF5               	movlw	-11
 17088  015A30  50E3               	movf	plusw1,w,c
 17089  015A32  58DE               	subwfb	postinc2,w,c
 17090  015A34  A0D8               	btfss	status,0,c
 17091  015A36  D01F               	goto	l6812
 17092                           
 17093                           ;stkvar	_divisor @ sp[(-2)+-16]
 17094                           ;stkvar	_dividend @ sp[(-2)+-8]
 17095  015A38  50E1               	movf	fsr1l,w,c
 17096  015A3A  0FF6               	addlw	-10
 17097  015A3C  6ED9               	movwf	fsr2l,c
 17098  015A3E  50E2               	movf	fsr1h,w,c
 17099  015A40  6EDA               	movwf	fsr2h,c
 17100  015A42  0EFF               	movlw	255
 17101  015A44  22DA               	addwfc	fsr2h,f,c
 17102  015A46  0EEE               	movlw	-18
 17103  015A48  50E3               	movf	plusw1,w,c
 17104  015A4A  5EDE               	subwf	postinc2,f,c
 17105  015A4C  0EEF               	movlw	-17
 17106  015A4E  50E3               	movf	plusw1,w,c
 17107  015A50  5ADE               	subwfb	postinc2,f,c
 17108  015A52  0EF0               	movlw	-16
 17109  015A54  50E3               	movf	plusw1,w,c
 17110  015A56  5ADE               	subwfb	postinc2,f,c
 17111  015A58  0EF1               	movlw	-15
 17112  015A5A  50E3               	movf	plusw1,w,c
 17113  015A5C  5ADE               	subwfb	postinc2,f,c
 17114  015A5E  0EF2               	movlw	-14
 17115  015A60  50E3               	movf	plusw1,w,c
 17116  015A62  5ADE               	subwfb	postinc2,f,c
 17117  015A64  0EF3               	movlw	-13
 17118  015A66  50E3               	movf	plusw1,w,c
 17119  015A68  5ADE               	subwfb	postinc2,f,c
 17120  015A6A  0EF4               	movlw	-12
 17121  015A6C  50E3               	movf	plusw1,w,c
 17122  015A6E  5ADE               	subwfb	postinc2,f,c
 17123  015A70  0EF5               	movlw	-11
 17124  015A72  50E3               	movf	plusw1,w,c
 17125  015A74  5ADE               	subwfb	postinc2,f,c
 17126  015A76                     l6812:
 17127                           
 17128                           ;stkvar	_divisor @ sp[(-2)+-16]
 17129  015A76  90D8               	bcf	status,0,c
 17130  015A78  0EF5               	movlw	-11
 17131  015A7A  32E3               	rrcf	plusw1,f,c
 17132  015A7C  0EF4               	movlw	-12
 17133  015A7E  32E3               	rrcf	plusw1,f,c
 17134  015A80  0EF3               	movlw	-13
 17135  015A82  32E3               	rrcf	plusw1,f,c
 17136  015A84  0EF2               	movlw	-14
 17137  015A86  32E3               	rrcf	plusw1,f,c
 17138  015A88  0EF1               	movlw	-15
 17139  015A8A  32E3               	rrcf	plusw1,f,c
 17140  015A8C  0EF0               	movlw	-16
 17141  015A8E  32E3               	rrcf	plusw1,f,c
 17142  015A90  0EEF               	movlw	-17
 17143  015A92  32E3               	rrcf	plusw1,f,c
 17144  015A94  0EEE               	movlw	-18
 17145  015A96  32E3               	rrcf	plusw1,f,c
 17146                           
 17147                           ;stkvar	_counter @ sp[(-2)+1]
 17148  015A98  0EFF               	movlw	-1
 17149  015A9A  50E3               	movf	plusw1,w,c
 17150  015A9C  6E32               	movwf	btemp^0,c
 17151  015A9E  0E01               	movlw	1
 17152  015AA0  5E32               	subwf	btemp^0,f,c
 17153  015AA2  0EFF               	movlw	-1
 17154  015AA4  0060  F0CB  FFE3   	movff	btemp,plusw1
 17155  015AAA  A4D8               	btfss	status,2,c
 17156  015AAC  D7A4               	goto	u5580
 17157  015AAE                     u5600:
 17158                           
 17159                           ;stkvar	_sign @ sp[(-2)+0]
 17160  015AAE  0EFE               	movlw	-2
 17161  015AB0  50E3               	movf	plusw1,w,c
 17162  015AB2  B4D8               	btfsc	status,2,c
 17163  015AB4  D025               	goto	u5620
 17164                           
 17165                           ;stkvar	_dividend @ sp[(-2)+-8]
 17166                           ;stkvar	_dividend @ sp[(-2)+-8]
 17167  015AB6  0EF6               	movlw	-10
 17168  015AB8  6CE3               	negf	plusw1,c
 17169  015ABA  0EF7               	movlw	-9
 17170  015ABC  1EE3               	comf	plusw1,f,c
 17171  015ABE  0EF8               	movlw	-8
 17172  015AC0  1EE3               	comf	plusw1,f,c
 17173  015AC2  0EF9               	movlw	-7
 17174  015AC4  1EE3               	comf	plusw1,f,c
 17175  015AC6  0EFA               	movlw	-6
 17176  015AC8  1EE3               	comf	plusw1,f,c
 17177  015ACA  0EFB               	movlw	-5
 17178  015ACC  1EE3               	comf	plusw1,f,c
 17179  015ACE  0EFC               	movlw	-4
 17180  015AD0  1EE3               	comf	plusw1,f,c
 17181  015AD2  0EFD               	movlw	-3
 17182  015AD4  1EE3               	comf	plusw1,f,c
 17183  015AD6  E314               	bnc	u5620
 17184  015AD8  0EF7               	movlw	-9
 17185  015ADA  2AE3               	incf	plusw1,f,c
 17186  015ADC  E311               	bnc	u5620
 17187  015ADE  0EF8               	movlw	-8
 17188  015AE0  2AE3               	incf	plusw1,f,c
 17189  015AE2  E30E               	bnc	u5620
 17190  015AE4  0EF9               	movlw	-7
 17191  015AE6  2AE3               	incf	plusw1,f,c
 17192  015AE8  E30B               	bnc	u5620
 17193  015AEA  0EFA               	movlw	-6
 17194  015AEC  2AE3               	incf	plusw1,f,c
 17195  015AEE  E308               	bnc	u5620
 17196  015AF0  0EFB               	movlw	-5
 17197  015AF2  2AE3               	incf	plusw1,f,c
 17198  015AF4  E305               	bnc	u5620
 17199  015AF6  0EFC               	movlw	-4
 17200  015AF8  2AE3               	incf	plusw1,f,c
 17201  015AFA  E302               	bnc	u5620
 17202  015AFC  0EFD               	movlw	-3
 17203  015AFE  2AE3               	incf	plusw1,f,c
 17204  015B00                     u5620:
 17205                           
 17206                           ;stkvar	_dividend @ sp[(-2)+-8]
 17207  015B00  0EF6               	movlw	246
 17208  015B02  24E1               	addwf	fsr1l,w,c
 17209  015B04  6ED9               	movwf	fsr2l,c
 17210  015B06  0EFF               	movlw	255
 17211  015B08  20E2               	addwfc	fsr1h,w,c
 17212  015B0A  6EDA               	movwf	fsr2h,c
 17213                           
 17214                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17215  015B0C  0E08               	movlw	8
 17216  015B0E  6E32               	movwf	btemp^0,c
 17217  015B10  0EF6               	movlw	-10
 17218  015B12                     us563999:
 17219  015B12  006F FF7B FFE3     	movff	postinc2,plusw1
 17220  015B18  28E8               	incf	wreg,w,c
 17221  015B1A  2E32               	decfsz	btemp^0,f,c
 17222  015B1C  D7FA               	bra	us563999
 17223                           
 17224                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17225  015B1E  52E5               	movf	postdec1,f,c
 17226  015B20  52E5               	movf	postdec1,f,c
 17227  015B22  0012               	return		;funcret
 17228  015B24                     __end_of___aomod:
 17229                           	opt callstack 0
 17230                           
 17231 ;; *************** function ___aodiv *****************
 17232 ;; Defined at:
 17233 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;  dividend        8  [STACK] long long 
 17236 ;;  divisor         8  [STACK] long long 
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;  quotient        8  [STACK] long long 
 17239 ;;  sign            1  [STACK] unsigned char 
 17240 ;;  counter         1  [STACK] unsigned char 
 17241 ;; Return value:  Size  Location     Type
 17242 ;;                  8  [STACK] long long 
 17243 ;; Registers used:
 17244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17245 ;; Tracked objects:
 17246 ;;		On entry : 0/1
 17247 ;;		On exit  : 0/0
 17248 ;;		Unchanged: 0/0
 17249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17254 ;;Total ram usage:        0 bytes
 17255 ;; Hardware stack levels used:    1
 17256 ;; Hardware stack levels required when called:    6
 17257 ;; This function calls:
 17258 ;;		Nothing
 17259 ;; This function is called by:
 17260 ;;		_dtoa
 17261 ;; This function uses a reentrant model
 17262 ;;
 17263                           
 17264                           	psect	text62
 17265  0153F0                     __ptext62:
 17266                           	opt callstack 0
 17267  0153F0                     ___aodiv:
 17268                           	opt callstack 0
 17269                           
 17270                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17271  0153F0  0E0A               	movlw	10
 17272  0153F2  26E1               	addwf	fsr1l,f,c
 17273  0153F4  0E00               	movlw	0
 17274  0153F6  22E2               	addwfc	fsr1h,f,c
 17275                           
 17276                           ;stkvar	_sign @ sp[(-10)+8]
 17277                           
 17278                           ;incstack = 0
 17279  0153F8  0EFE               	movlw	-2
 17280  0153FA  6AE3               	clrf	plusw1,c
 17281                           
 17282                           ;stkvar	_divisor @ sp[(-10)+-16]
 17283  0153FC  0EED               	movlw	-19
 17284  0153FE  AEE3               	btfss	plusw1,7,c
 17285  015400  D028               	goto	l6752
 17286                           
 17287                           ;stkvar	_divisor @ sp[(-10)+-16]
 17288                           ;stkvar	_divisor @ sp[(-10)+-16]
 17289  015402  0EE6               	movlw	-26
 17290  015404  6CE3               	negf	plusw1,c
 17291  015406  0EE7               	movlw	-25
 17292  015408  1EE3               	comf	plusw1,f,c
 17293  01540A  0EE8               	movlw	-24
 17294  01540C  1EE3               	comf	plusw1,f,c
 17295  01540E  0EE9               	movlw	-23
 17296  015410  1EE3               	comf	plusw1,f,c
 17297  015412  0EEA               	movlw	-22
 17298  015414  1EE3               	comf	plusw1,f,c
 17299  015416  0EEB               	movlw	-21
 17300  015418  1EE3               	comf	plusw1,f,c
 17301  01541A  0EEC               	movlw	-20
 17302  01541C  1EE3               	comf	plusw1,f,c
 17303  01541E  0EED               	movlw	-19
 17304  015420  1EE3               	comf	plusw1,f,c
 17305  015422  E314               	bnc	u5420
 17306  015424  0EE7               	movlw	-25
 17307  015426  2AE3               	incf	plusw1,f,c
 17308  015428  E311               	bnc	u5420
 17309  01542A  0EE8               	movlw	-24
 17310  01542C  2AE3               	incf	plusw1,f,c
 17311  01542E  E30E               	bnc	u5420
 17312  015430  0EE9               	movlw	-23
 17313  015432  2AE3               	incf	plusw1,f,c
 17314  015434  E30B               	bnc	u5420
 17315  015436  0EEA               	movlw	-22
 17316  015438  2AE3               	incf	plusw1,f,c
 17317  01543A  E308               	bnc	u5420
 17318  01543C  0EEB               	movlw	-21
 17319  01543E  2AE3               	incf	plusw1,f,c
 17320  015440  E305               	bnc	u5420
 17321  015442  0EEC               	movlw	-20
 17322  015444  2AE3               	incf	plusw1,f,c
 17323  015446  E302               	bnc	u5420
 17324  015448  0EED               	movlw	-19
 17325  01544A  2AE3               	incf	plusw1,f,c
 17326  01544C                     u5420:
 17327                           
 17328                           ;stkvar	_sign @ sp[(-10)+8]
 17329  01544C  0EFE               	movlw	-2
 17330  01544E  6AE3               	clrf	plusw1,c
 17331  015450  2AE3               	incf	plusw1,f,c
 17332  015452                     l6752:
 17333                           
 17334                           ;stkvar	_dividend @ sp[(-10)+-8]
 17335  015452  0EF5               	movlw	-11
 17336  015454  AEE3               	btfss	plusw1,7,c
 17337  015456  D027               	goto	l6758
 17338                           
 17339                           ;stkvar	_dividend @ sp[(-10)+-8]
 17340                           ;stkvar	_dividend @ sp[(-10)+-8]
 17341  015458  0EEE               	movlw	-18
 17342  01545A  6CE3               	negf	plusw1,c
 17343  01545C  0EEF               	movlw	-17
 17344  01545E  1EE3               	comf	plusw1,f,c
 17345  015460  0EF0               	movlw	-16
 17346  015462  1EE3               	comf	plusw1,f,c
 17347  015464  0EF1               	movlw	-15
 17348  015466  1EE3               	comf	plusw1,f,c
 17349  015468  0EF2               	movlw	-14
 17350  01546A  1EE3               	comf	plusw1,f,c
 17351  01546C  0EF3               	movlw	-13
 17352  01546E  1EE3               	comf	plusw1,f,c
 17353  015470  0EF4               	movlw	-12
 17354  015472  1EE3               	comf	plusw1,f,c
 17355  015474  0EF5               	movlw	-11
 17356  015476  1EE3               	comf	plusw1,f,c
 17357  015478  E314               	bnc	u5440
 17358  01547A  0EEF               	movlw	-17
 17359  01547C  2AE3               	incf	plusw1,f,c
 17360  01547E  E311               	bnc	u5440
 17361  015480  0EF0               	movlw	-16
 17362  015482  2AE3               	incf	plusw1,f,c
 17363  015484  E30E               	bnc	u5440
 17364  015486  0EF1               	movlw	-15
 17365  015488  2AE3               	incf	plusw1,f,c
 17366  01548A  E30B               	bnc	u5440
 17367  01548C  0EF2               	movlw	-14
 17368  01548E  2AE3               	incf	plusw1,f,c
 17369  015490  E308               	bnc	u5440
 17370  015492  0EF3               	movlw	-13
 17371  015494  2AE3               	incf	plusw1,f,c
 17372  015496  E305               	bnc	u5440
 17373  015498  0EF4               	movlw	-12
 17374  01549A  2AE3               	incf	plusw1,f,c
 17375  01549C  E302               	bnc	u5440
 17376  01549E  0EF5               	movlw	-11
 17377  0154A0  2AE3               	incf	plusw1,f,c
 17378  0154A2                     u5440:
 17379                           
 17380                           ;stkvar	_sign @ sp[(-10)+8]
 17381  0154A2  0EFE               	movlw	-2
 17382  0154A4  70E3               	btg	plusw1,0,c
 17383  0154A6                     l6758:
 17384                           
 17385                           ;stkvar	_quotient @ sp[(-10)+0]
 17386  0154A6  0E07               	movlw	7
 17387  0154A8  6E32               	movwf	btemp^0,c
 17388  0154AA  0EF6               	movlw	-10
 17389  0154AC                     u5451:
 17390  0154AC  6AE3               	clrf	plusw1,c
 17391  0154AE  2AE8               	incf	wreg,f,c
 17392  0154B0  0632               	decf	btemp^0,f,c
 17393  0154B2  E2FC               	bc	u5451
 17394                           
 17395                           ;stkvar	_divisor @ sp[(-10)+-16]
 17396  0154B4  0EE6               	movlw	-26
 17397  0154B6  50E3               	movf	plusw1,w,c
 17398  0154B8  E116               	bnz	u5460
 17399  0154BA  0EE7               	movlw	-25
 17400  0154BC  50E3               	movf	plusw1,w,c
 17401  0154BE  E113               	bnz	u5460
 17402  0154C0  0EE8               	movlw	-24
 17403  0154C2  50E3               	movf	plusw1,w,c
 17404  0154C4  E110               	bnz	u5460
 17405  0154C6  0EE9               	movlw	-23
 17406  0154C8  50E3               	movf	plusw1,w,c
 17407  0154CA  E10D               	bnz	u5460
 17408  0154CC  0EEA               	movlw	-22
 17409  0154CE  50E3               	movf	plusw1,w,c
 17410  0154D0  E10A               	bnz	u5460
 17411  0154D2  0EEB               	movlw	-21
 17412  0154D4  50E3               	movf	plusw1,w,c
 17413  0154D6  E107               	bnz	u5460
 17414  0154D8  0EEC               	movlw	-20
 17415  0154DA  50E3               	movf	plusw1,w,c
 17416  0154DC  E104               	bnz	u5460
 17417  0154DE  0EED               	movlw	-19
 17418  0154E0  50E3               	movf	plusw1,w,c
 17419  0154E2  B4D8               	btfsc	status,2,c
 17420  0154E4  D088               	goto	u5490
 17421  0154E6                     u5460:
 17422                           
 17423                           ;stkvar	_counter @ sp[(-10)+9]
 17424  0154E6  0EFF               	movlw	-1
 17425  0154E8  6AE3               	clrf	plusw1,c
 17426  0154EA  D012               	goto	L19
 17427  0154EC                     l6764:
 17428                           
 17429                           ;stkvar	_divisor @ sp[(-10)+-16]
 17430  0154EC  90D8               	bcf	status,0,c
 17431  0154EE  0EE6               	movlw	-26
 17432  0154F0  36E3               	rlcf	plusw1,f,c
 17433  0154F2  0EE7               	movlw	-25
 17434  0154F4  36E3               	rlcf	plusw1,f,c
 17435  0154F6  0EE8               	movlw	-24
 17436  0154F8  36E3               	rlcf	plusw1,f,c
 17437  0154FA  0EE9               	movlw	-23
 17438  0154FC  36E3               	rlcf	plusw1,f,c
 17439  0154FE  0EEA               	movlw	-22
 17440  015500  36E3               	rlcf	plusw1,f,c
 17441  015502  0EEB               	movlw	-21
 17442  015504  36E3               	rlcf	plusw1,f,c
 17443  015506  0EEC               	movlw	-20
 17444  015508  36E3               	rlcf	plusw1,f,c
 17445  01550A  0EED               	movlw	-19
 17446  01550C  36E3               	rlcf	plusw1,f,c
 17447                           
 17448                           ;stkvar	_counter @ sp[(-10)+9]
 17449  01550E  0EFF               	movlw	-1
 17450  015510                     L19:
 17451  015510  2AE3               	incf	plusw1,f,c
 17452                           
 17453                           ;stkvar	_divisor @ sp[(-10)+-16]
 17454  015512  0EED               	movlw	-19
 17455  015514  AEE3               	btfss	plusw1,7,c
 17456  015516  D7EA               	goto	l6764
 17457  015518                     u5470:
 17458                           
 17459                           ;stkvar	_quotient @ sp[(-10)+0]
 17460  015518  90D8               	bcf	status,0,c
 17461  01551A  0EF6               	movlw	-10
 17462  01551C  36E3               	rlcf	plusw1,f,c
 17463  01551E  0EF7               	movlw	-9
 17464  015520  36E3               	rlcf	plusw1,f,c
 17465  015522  0EF8               	movlw	-8
 17466  015524  36E3               	rlcf	plusw1,f,c
 17467  015526  0EF9               	movlw	-7
 17468  015528  36E3               	rlcf	plusw1,f,c
 17469  01552A  0EFA               	movlw	-6
 17470  01552C  36E3               	rlcf	plusw1,f,c
 17471  01552E  0EFB               	movlw	-5
 17472  015530  36E3               	rlcf	plusw1,f,c
 17473  015532  0EFC               	movlw	-4
 17474  015534  36E3               	rlcf	plusw1,f,c
 17475  015536  0EFD               	movlw	-3
 17476  015538  36E3               	rlcf	plusw1,f,c
 17477                           
 17478                           ;stkvar	_divisor @ sp[(-10)+-16]
 17479                           ;stkvar	_dividend @ sp[(-10)+-8]
 17480  01553A  50E1               	movf	fsr1l,w,c
 17481  01553C  0FEE               	addlw	-18
 17482  01553E  6ED9               	movwf	fsr2l,c
 17483  015540  50E2               	movf	fsr1h,w,c
 17484  015542  6EDA               	movwf	fsr2h,c
 17485  015544  0EFF               	movlw	255
 17486  015546  22DA               	addwfc	fsr2h,f,c
 17487  015548  0EE6               	movlw	-26
 17488  01554A  50E3               	movf	plusw1,w,c
 17489  01554C  5CDE               	subwf	postinc2,w,c
 17490  01554E  0EE7               	movlw	-25
 17491  015550  50E3               	movf	plusw1,w,c
 17492  015552  58DE               	subwfb	postinc2,w,c
 17493  015554  0EE8               	movlw	-24
 17494  015556  50E3               	movf	plusw1,w,c
 17495  015558  58DE               	subwfb	postinc2,w,c
 17496  01555A  0EE9               	movlw	-23
 17497  01555C  50E3               	movf	plusw1,w,c
 17498  01555E  58DE               	subwfb	postinc2,w,c
 17499  015560  0EEA               	movlw	-22
 17500  015562  50E3               	movf	plusw1,w,c
 17501  015564  58DE               	subwfb	postinc2,w,c
 17502  015566  0EEB               	movlw	-21
 17503  015568  50E3               	movf	plusw1,w,c
 17504  01556A  58DE               	subwfb	postinc2,w,c
 17505  01556C  0EEC               	movlw	-20
 17506  01556E  50E3               	movf	plusw1,w,c
 17507  015570  58DE               	subwfb	postinc2,w,c
 17508  015572  0EED               	movlw	-19
 17509  015574  50E3               	movf	plusw1,w,c
 17510  015576  58DE               	subwfb	postinc2,w,c
 17511  015578  A0D8               	btfss	status,0,c
 17512  01557A  D021               	goto	l6776
 17513                           
 17514                           ;stkvar	_divisor @ sp[(-10)+-16]
 17515                           ;stkvar	_dividend @ sp[(-10)+-8]
 17516  01557C  50E1               	movf	fsr1l,w,c
 17517  01557E  0FEE               	addlw	-18
 17518  015580  6ED9               	movwf	fsr2l,c
 17519  015582  50E2               	movf	fsr1h,w,c
 17520  015584  6EDA               	movwf	fsr2h,c
 17521  015586  0EFF               	movlw	255
 17522  015588  22DA               	addwfc	fsr2h,f,c
 17523  01558A  0EE6               	movlw	-26
 17524  01558C  50E3               	movf	plusw1,w,c
 17525  01558E  5EDE               	subwf	postinc2,f,c
 17526  015590  0EE7               	movlw	-25
 17527  015592  50E3               	movf	plusw1,w,c
 17528  015594  5ADE               	subwfb	postinc2,f,c
 17529  015596  0EE8               	movlw	-24
 17530  015598  50E3               	movf	plusw1,w,c
 17531  01559A  5ADE               	subwfb	postinc2,f,c
 17532  01559C  0EE9               	movlw	-23
 17533  01559E  50E3               	movf	plusw1,w,c
 17534  0155A0  5ADE               	subwfb	postinc2,f,c
 17535  0155A2  0EEA               	movlw	-22
 17536  0155A4  50E3               	movf	plusw1,w,c
 17537  0155A6  5ADE               	subwfb	postinc2,f,c
 17538  0155A8  0EEB               	movlw	-21
 17539  0155AA  50E3               	movf	plusw1,w,c
 17540  0155AC  5ADE               	subwfb	postinc2,f,c
 17541  0155AE  0EEC               	movlw	-20
 17542  0155B0  50E3               	movf	plusw1,w,c
 17543  0155B2  5ADE               	subwfb	postinc2,f,c
 17544  0155B4  0EED               	movlw	-19
 17545  0155B6  50E3               	movf	plusw1,w,c
 17546  0155B8  5ADE               	subwfb	postinc2,f,c
 17547                           
 17548                           ;stkvar	_quotient @ sp[(-10)+0]
 17549  0155BA  0EF6               	movlw	-10
 17550  0155BC  80E3               	bsf	plusw1,0,c
 17551  0155BE                     l6776:
 17552                           
 17553                           ;stkvar	_divisor @ sp[(-10)+-16]
 17554  0155BE  90D8               	bcf	status,0,c
 17555  0155C0  0EED               	movlw	-19
 17556  0155C2  32E3               	rrcf	plusw1,f,c
 17557  0155C4  0EEC               	movlw	-20
 17558  0155C6  32E3               	rrcf	plusw1,f,c
 17559  0155C8  0EEB               	movlw	-21
 17560  0155CA  32E3               	rrcf	plusw1,f,c
 17561  0155CC  0EEA               	movlw	-22
 17562  0155CE  32E3               	rrcf	plusw1,f,c
 17563  0155D0  0EE9               	movlw	-23
 17564  0155D2  32E3               	rrcf	plusw1,f,c
 17565  0155D4  0EE8               	movlw	-24
 17566  0155D6  32E3               	rrcf	plusw1,f,c
 17567  0155D8  0EE7               	movlw	-25
 17568  0155DA  32E3               	rrcf	plusw1,f,c
 17569  0155DC  0EE6               	movlw	-26
 17570  0155DE  32E3               	rrcf	plusw1,f,c
 17571                           
 17572                           ;stkvar	_counter @ sp[(-10)+9]
 17573  0155E0  0EFF               	movlw	-1
 17574  0155E2  50E3               	movf	plusw1,w,c
 17575  0155E4  6E32               	movwf	btemp^0,c
 17576  0155E6  0E01               	movlw	1
 17577  0155E8  5E32               	subwf	btemp^0,f,c
 17578  0155EA  0EFF               	movlw	-1
 17579  0155EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17580  0155F2  A4D8               	btfss	status,2,c
 17581  0155F4  D791               	goto	u5470
 17582  0155F6                     u5490:
 17583                           
 17584                           ;stkvar	_sign @ sp[(-10)+8]
 17585  0155F6  0EFE               	movlw	-2
 17586  0155F8  50E3               	movf	plusw1,w,c
 17587  0155FA  B4D8               	btfsc	status,2,c
 17588  0155FC  D025               	goto	u5510
 17589                           
 17590                           ;stkvar	_quotient @ sp[(-10)+0]
 17591                           ;stkvar	_quotient @ sp[(-10)+0]
 17592  0155FE  0EF6               	movlw	-10
 17593  015600  6CE3               	negf	plusw1,c
 17594  015602  0EF7               	movlw	-9
 17595  015604  1EE3               	comf	plusw1,f,c
 17596  015606  0EF8               	movlw	-8
 17597  015608  1EE3               	comf	plusw1,f,c
 17598  01560A  0EF9               	movlw	-7
 17599  01560C  1EE3               	comf	plusw1,f,c
 17600  01560E  0EFA               	movlw	-6
 17601  015610  1EE3               	comf	plusw1,f,c
 17602  015612  0EFB               	movlw	-5
 17603  015614  1EE3               	comf	plusw1,f,c
 17604  015616  0EFC               	movlw	-4
 17605  015618  1EE3               	comf	plusw1,f,c
 17606  01561A  0EFD               	movlw	-3
 17607  01561C  1EE3               	comf	plusw1,f,c
 17608  01561E  E314               	bnc	u5510
 17609  015620  0EF7               	movlw	-9
 17610  015622  2AE3               	incf	plusw1,f,c
 17611  015624  E311               	bnc	u5510
 17612  015626  0EF8               	movlw	-8
 17613  015628  2AE3               	incf	plusw1,f,c
 17614  01562A  E30E               	bnc	u5510
 17615  01562C  0EF9               	movlw	-7
 17616  01562E  2AE3               	incf	plusw1,f,c
 17617  015630  E30B               	bnc	u5510
 17618  015632  0EFA               	movlw	-6
 17619  015634  2AE3               	incf	plusw1,f,c
 17620  015636  E308               	bnc	u5510
 17621  015638  0EFB               	movlw	-5
 17622  01563A  2AE3               	incf	plusw1,f,c
 17623  01563C  E305               	bnc	u5510
 17624  01563E  0EFC               	movlw	-4
 17625  015640  2AE3               	incf	plusw1,f,c
 17626  015642  E302               	bnc	u5510
 17627  015644  0EFD               	movlw	-3
 17628  015646  2AE3               	incf	plusw1,f,c
 17629  015648                     u5510:
 17630                           
 17631                           ;stkvar	_quotient @ sp[(-10)+0]
 17632  015648  0EF6               	movlw	246
 17633  01564A  24E1               	addwf	fsr1l,w,c
 17634  01564C  6ED9               	movwf	fsr2l,c
 17635  01564E  0EFF               	movlw	255
 17636  015650  20E2               	addwfc	fsr1h,w,c
 17637  015652  6EDA               	movwf	fsr2h,c
 17638                           
 17639                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17640  015654  0E08               	movlw	8
 17641  015656  6E32               	movwf	btemp^0,c
 17642  015658  0EEE               	movlw	-18
 17643  01565A                     us552999:
 17644  01565A  006F FF7B FFE3     	movff	postinc2,plusw1
 17645  015660  28E8               	incf	wreg,w,c
 17646  015662  2E32               	decfsz	btemp^0,f,c
 17647  015664  D7FA               	bra	us552999
 17648                           
 17649                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17650  015666  0EF6               	movlw	246
 17651  015668  26E1               	addwf	fsr1l,f,c
 17652  01566A  0EFF               	movlw	255
 17653  01566C  22E2               	addwfc	fsr1h,f,c
 17654  01566E  0012               	return		;funcret
 17655  015670                     __end_of___aodiv:
 17656                           	opt callstack 0
 17657                           
 17658 ;; *************** function _ctoa *****************
 17659 ;; Defined at:
 17660 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17661 ;; Parameters:    Size  Location     Type
 17662 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17663 ;;		 -> f(6), NULL(0), 
 17664 ;;  c               1  [STACK] unsigned char 
 17665 ;; Auto vars:     Size  Location     Type
 17666 ;;  w               2  [STACK] int 
 17667 ;;  l               2    0        int 
 17668 ;; Return value:  Size  Location     Type
 17669 ;;                  2  [STACK] int 
 17670 ;; Registers used:
 17671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17672 ;; Tracked objects:
 17673 ;;		On entry : 0/5
 17674 ;;		On exit  : 0/0
 17675 ;;		Unchanged: 0/0
 17676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17681 ;;Total ram usage:        0 bytes
 17682 ;; Hardware stack levels used:    1
 17683 ;; Hardware stack levels required when called:   11
 17684 ;; This function calls:
 17685 ;;		_pad
 17686 ;; This function is called by:
 17687 ;;		_vfpfcnvrt
 17688 ;; This function uses a reentrant model
 17689 ;;
 17690                           
 17691                           	psect	text63
 17692  017B40                     __ptext63:
 17693                           	opt callstack 0
 17694  017B40                     _ctoa:
 17695                           	opt callstack 0
 17696                           
 17697                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17698  017B40  52E6               	movf	postinc1,f,c
 17699  017B42  52E6               	movf	postinc1,f,c
 17700                           
 17701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17702                           
 17703                           ;incstack = 0
 17704  017B44  501B               	movf	_width^0,w,c
 17705  017B46  101C               	iorwf	(_width+1)^0,w,c
 17706  017B48  A4D8               	btfss	status,2,c
 17707  017B4A  D009               	goto	l9772
 17708                           
 17709                           ;stkvar	_w @ sp[(-2)+0]
 17710  017B4C  0EFE               	movlw	-2
 17711  017B4E  0060  F06F  FFE3   	movff	_width,plusw1
 17712  017B54  0EFF               	movlw	-1
 17713  017B56  0060  F073  FFE3   	movff	_width+1,plusw1
 17714  017B5C  D016               	goto	l9774
 17715  017B5E                     l9772:
 17716  017B5E  0EFF               	movlw	255
 17717  017B60  6E3C               	movwf	(btemp+10)^0,c
 17718  017B62  0EFF               	movlw	255
 17719  017B64  6E3D               	movwf	(btemp+11)^0,c
 17720  017B66  0060  F06C  F03A   	movff	_width,btemp+8
 17721  017B6C  0060  F070  F03B   	movff	_width+1,btemp+9
 17722  017B72  503C               	movf	(btemp+10)^0,w,c
 17723  017B74  263A               	addwf	(btemp+8)^0,f,c
 17724  017B76  503D               	movf	(btemp+11)^0,w,c
 17725  017B78  223B               	addwfc	(btemp+9)^0,f,c
 17726                           
 17727                           ;stkvar	_w @ sp[(-2)+0]
 17728  017B7A  0EFE               	movlw	-2
 17729  017B7C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17730  017B82  0EFF               	movlw	-1
 17731  017B84  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17732  017B8A                     l9774:
 17733                           
 17734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17735                           ;stkvar	_c @ sp[(-2)+-3]
 17736  017B8A  0EFB               	movlw	-5
 17737  017B8C  006F FF8C  F17C    	movff	plusw1,_dbuf
 17738                           
 17739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17740  017B92  0101               	movlb	1	; () banked
 17741  017B94  6B7D               	clrf	(_dbuf+1)& (0+255),b
 17742                           
 17743                           ; BSR set to: 1
 17744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17745                           ;stkvar	_w @ sp[(-2)+0]
 17746  017B96  0EFE               	movlw	-2
 17747  017B98  006F FF8F FFE6     	movff	plusw1,postinc1
 17748  017B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17749  017BA4  0E7C               	movlw	low _dbuf
 17750  017BA6  6EE6               	movwf	postinc1,c
 17751  017BA8  0E01               	movlw	high _dbuf
 17752  017BAA  6EE6               	movwf	postinc1,c
 17753                           
 17754                           ;stkvar	_fp @ sp[(-6)+-2]
 17755  017BAC  0EF8               	movlw	-8
 17756  017BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 17757  017BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 17758  017BBA  ECA1  F0B6         	call	_pad	;wreg free
 17759                           
 17760                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17761  017BBE  0EFB               	movlw	251
 17762  017BC0  26E1               	addwf	fsr1l,f,c
 17763  017BC2  0EFF               	movlw	255
 17764  017BC4  22E2               	addwfc	fsr1h,f,c
 17765  017BC6  0012               	return		;funcret
 17766  017BC8                     __end_of_ctoa:
 17767                           	opt callstack 0
 17768                           
 17769 ;; *************** function _pad *****************
 17770 ;; Defined at:
 17771 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17772 ;; Parameters:    Size  Location     Type
 17773 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17774 ;;		 -> f(6), NULL(0), 
 17775 ;;  buf             2  [STACK] PTR unsigned char 
 17776 ;;		 -> dbuf(80), 
 17777 ;;  p               2  [STACK] int 
 17778 ;; Auto vars:     Size  Location     Type
 17779 ;;  w               2  [STACK] int 
 17780 ;;  i               2  [STACK] int 
 17781 ;; Return value:  Size  Location     Type
 17782 ;;                  2  [STACK] int 
 17783 ;; Registers used:
 17784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/1
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17794 ;;Total ram usage:        0 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:   10
 17797 ;; This function calls:
 17798 ;;		_fputc
 17799 ;;		_fputs
 17800 ;;		_strlen
 17801 ;; This function is called by:
 17802 ;;		_ctoa
 17803 ;;		_dtoa
 17804 ;;		_efgtoa
 17805 ;;		_xtoa
 17806 ;; This function uses a reentrant model
 17807 ;;
 17808                           
 17809                           	psect	text64
 17810  016D42                     __ptext64:
 17811                           	opt callstack 0
 17812  016D42                     _pad:
 17813                           	opt callstack 0
 17814                           
 17815                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17816  016D42  52E6               	movf	postinc1,f,c
 17817  016D44  52E6               	movf	postinc1,f,c
 17818  016D46  52E6               	movf	postinc1,f,c
 17819  016D48  52E6               	movf	postinc1,f,c
 17820                           
 17821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17822                           
 17823                           ;incstack = 0
 17824  016D4A  A01F               	btfss	_flags^0,0,c
 17825  016D4C  D010               	goto	l9746
 17826                           
 17827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17828                           ;stkvar	_fp @ sp[(-4)+-2]
 17829  016D4E  0EFA               	movlw	-6
 17830  016D50  006F FF8F FFE6     	movff	plusw1,postinc1
 17831  016D56  006F FF8F FFE6     	movff	plusw1,postinc1
 17832                           
 17833                           ;stkvar	_buf @ sp[(-6)+-4]
 17834  016D5C  0EF6               	movlw	-10
 17835  016D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 17836  016D64  006F FF8F FFE6     	movff	plusw1,postinc1
 17837  016D6A  EC7A  F0BC         	call	_fputs	;wreg free
 17838  016D6E                     l9746:
 17839                           
 17840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17841                           ;stkvar	_p @ sp[(-4)+-6]
 17842  016D6E  0EF7               	movlw	-9
 17843  016D70  BEE3               	btfsc	plusw1,7,c
 17844  016D72  D011               	goto	l9750
 17845                           
 17846                           ;stkvar	_p @ sp[(-4)+-6]
 17847                           ;stkvar	_w @ sp[(-4)+0]
 17848  016D74  0EF6               	movlw	-10
 17849  016D76  006F FF8C  F032    	movff	plusw1,btemp
 17850  016D7C  0EFC               	movlw	-4
 17851  016D7E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17852  016D84  0EF7               	movlw	-9
 17853  016D86  006F FF8C  F032    	movff	plusw1,btemp
 17854  016D8C  0EFD               	movlw	-3
 17855  016D8E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17856  016D94  D004               	goto	l1865
 17857  016D96                     l9750:
 17858                           
 17859                           ;stkvar	_w @ sp[(-4)+0]
 17860  016D96  0EFC               	movlw	-4
 17861  016D98  6AE3               	clrf	plusw1,c
 17862  016D9A  0EFD               	movlw	-3
 17863  016D9C  6AE3               	clrf	plusw1,c
 17864  016D9E                     l1865:
 17865                           
 17866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17867                           ;stkvar	_i @ sp[(-4)+2]
 17868  016D9E  0EFE               	movlw	-2
 17869  016DA0  6AE3               	clrf	plusw1,c
 17870  016DA2  0EFF               	movlw	-1
 17871  016DA4  6AE3               	clrf	plusw1,c
 17872                           
 17873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17874  016DA6  D01E               	goto	l9756
 17875  016DA8                     l9752:
 17876                           
 17877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17878                           ;stkvar	_fp @ sp[(-4)+-2]
 17879  016DA8  0EFA               	movlw	-6
 17880  016DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17881  016DB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17882  016DB6  0E20               	movlw	32
 17883  016DB8  6EE6               	movwf	postinc1,c
 17884  016DBA  0E00               	movlw	0
 17885  016DBC  6EE6               	movwf	postinc1,c
 17886  016DBE  EC83  F0B5         	call	_fputc	;wreg free
 17887                           
 17888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17889                           ;stkvar	_i @ sp[(-4)+2]
 17890  016DC2  0EFE               	movlw	-2
 17891  016DC4  50E3               	movf	plusw1,w,c
 17892  016DC6  0F01               	addlw	1
 17893  016DC8  6E32               	movwf	btemp^0,c
 17894  016DCA  0EFE               	movlw	-2
 17895  016DCC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17896  016DD2  6A32               	clrf	btemp^0,c
 17897  016DD4  0EFF               	movlw	-1
 17898  016DD6  50E3               	movf	plusw1,w,c
 17899  016DD8  2032               	addwfc	btemp^0,w,c
 17900  016DDA  6E32               	movwf	btemp^0,c
 17901  016DDC  0EFF               	movlw	-1
 17902  016DDE  0060  F0CB  FFE3   	movff	btemp,plusw1
 17903  016DE4                     l9756:
 17904                           
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17906                           ;stkvar	_w @ sp[(-4)+0]
 17907                           ;stkvar	_i @ sp[(-4)+2]
 17908  016DE4  50E1               	movf	fsr1l,w,c
 17909  016DE6  0FFE               	addlw	-2
 17910  016DE8  6ED9               	movwf	fsr2l,c
 17911  016DEA  50E2               	movf	fsr1h,w,c
 17912  016DEC  6EDA               	movwf	fsr2h,c
 17913  016DEE  0EFF               	movlw	255
 17914  016DF0  22DA               	addwfc	fsr2h,f,c
 17915  016DF2  0EFC               	movlw	-4
 17916  016DF4  50E3               	movf	plusw1,w,c
 17917  016DF6  5CDE               	subwf	postinc2,w,c
 17918  016DF8  50DE               	movf	postinc2,w,c
 17919  016DFA  0A80               	xorlw	128
 17920  016DFC  6E32               	movwf	btemp^0,c
 17921  016DFE  0EFD               	movlw	-3
 17922  016E00  50E3               	movf	plusw1,w,c
 17923  016E02  0A80               	xorlw	128
 17924  016E04  5832               	subwfb	btemp^0,w,c
 17925  016E06  A0D8               	btfss	status,0,c
 17926  016E08  D7CF               	goto	l9752
 17927                           
 17928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17929  016E0A  B01F               	btfsc	_flags^0,0,c
 17930  016E0C  D010               	goto	l9760
 17931                           
 17932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17933                           ;stkvar	_fp @ sp[(-4)+-2]
 17934  016E0E  0EFA               	movlw	-6
 17935  016E10  006F FF8F FFE6     	movff	plusw1,postinc1
 17936  016E16  006F FF8F FFE6     	movff	plusw1,postinc1
 17937                           
 17938                           ;stkvar	_buf @ sp[(-6)+-4]
 17939  016E1C  0EF6               	movlw	-10
 17940  016E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 17941  016E24  006F FF8F FFE6     	movff	plusw1,postinc1
 17942  016E2A  EC7A  F0BC         	call	_fputs	;wreg free
 17943  016E2E                     l9760:
 17944                           
 17945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17946                           ;stkvar	_w @ sp[(-4)+0]
 17947                           ;stkvar	_buf @ sp[(-4)+-4]
 17948  016E2E  0EF8               	movlw	-8
 17949  016E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17950  016E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17951  016E3C  EC29  F0BC         	call	_strlen	;wreg free
 17952  016E40  0EFC               	movlw	-4
 17953  016E42  50E3               	movf	plusw1,w,c
 17954  016E44  2632               	addwf	btemp^0,f,c
 17955  016E46  0EFD               	movlw	-3
 17956  016E48  50E3               	movf	plusw1,w,c
 17957  016E4A  2233               	addwfc	(btemp+1)^0,f,c
 17958                           
 17959                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17960  016E4C  0EF6               	movlw	246
 17961  016E4E  26E1               	addwf	fsr1l,f,c
 17962  016E50  0EFF               	movlw	255
 17963  016E52  22E2               	addwfc	fsr1h,f,c
 17964  016E54  0012               	return		;funcret
 17965  016E56                     __end_of_pad:
 17966                           	opt callstack 0
 17967                           
 17968 ;; *************** function _strlen *****************
 17969 ;; Defined at:
 17970 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17971 ;; Parameters:    Size  Location     Type
 17972 ;;  s               2  [STACK] PTR const unsigned char 
 17973 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17974 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 17975 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 17976 ;; Auto vars:     Size  Location     Type
 17977 ;;  a               2  [STACK] PTR const unsigned char 
 17978 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17979 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 17980 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 17981 ;; Return value:  Size  Location     Type
 17982 ;;                  2  [STACK] unsigned int 
 17983 ;; Registers used:
 17984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17985 ;; Tracked objects:
 17986 ;;		On entry : 0/0
 17987 ;;		On exit  : 0/0
 17988 ;;		Unchanged: 0/0
 17989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17994 ;;Total ram usage:        0 bytes
 17995 ;; Hardware stack levels used:    1
 17996 ;; Hardware stack levels required when called:    6
 17997 ;; This function calls:
 17998 ;;		Nothing
 17999 ;; This function is called by:
 18000 ;;		_eaDogM_WriteString
 18001 ;;		_pad
 18002 ;;		_stoa
 18003 ;; This function uses a reentrant model
 18004 ;;
 18005                           
 18006                           	psect	text65
 18007  017852                     __ptext65:
 18008                           	opt callstack 0
 18009  017852                     _strlen:
 18010                           	opt callstack 0
 18011                           
 18012                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18013  017852  52E6               	movf	postinc1,f,c
 18014  017854  52E6               	movf	postinc1,f,c
 18015                           
 18016                           ;stkvar	_s @ sp[(-2)+-2]
 18017                           
 18018                           ;incstack = 0
 18019  017856  0EFC               	movlw	-4
 18020  017858  006F FF8C  F03C    	movff	plusw1,btemp+10
 18021  01785E  0EFD               	movlw	-3
 18022  017860  006F FF8C  F03D    	movff	plusw1,btemp+11
 18023                           
 18024                           ;stkvar	_a @ sp[(-2)+0]
 18025  017866  0EFF               	movlw	-1
 18026  017868  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18027  01786E  0EFE               	movlw	-2
 18028  017870  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18029  017876  D011               	goto	l9728
 18030  017878                     l9726:
 18031                           
 18032                           ;stkvar	_s @ sp[(-2)+-2]
 18033  017878  0EFC               	movlw	-4
 18034  01787A  50E3               	movf	plusw1,w,c
 18035  01787C  0F01               	addlw	1
 18036  01787E  6E32               	movwf	btemp^0,c
 18037  017880  0EFC               	movlw	-4
 18038  017882  0060  F0CB  FFE3   	movff	btemp,plusw1
 18039  017888  6A32               	clrf	btemp^0,c
 18040  01788A  0EFD               	movlw	-3
 18041  01788C  50E3               	movf	plusw1,w,c
 18042  01788E  2032               	addwfc	btemp^0,w,c
 18043  017890  6E32               	movwf	btemp^0,c
 18044  017892  0EFD               	movlw	-3
 18045  017894  0060  F0CB  FFE3   	movff	btemp,plusw1
 18046  01789A                     l9728:
 18047                           
 18048                           ;stkvar	_s @ sp[(-2)+-2]
 18049  01789A  0EFC               	movlw	-4
 18050  01789C  006F FF8F FFF6     	movff	plusw1,tblptrl
 18051  0178A2  0EFD               	movlw	-3
 18052  0178A4  006F FF8F FFF7     	movff	plusw1,tblptrh
 18053  0178AA  0E00               	movlw	low (__mediumconst shr (0+16))
 18054  0178AC  6EF8               	movwf	tblptru,c
 18055  0178AE  0E1F               	movlw	(high __ramtop+-1)
 18056  0178B0  64F7               	cpfsgt	tblptrh,c
 18057  0178B2  D003               	bra	u9067
 18058  0178B4  0008               	tblrd		*
 18059  0178B6  50F5               	movf	tablat,w,c
 18060  0178B8  D007               	bra	u9060
 18061  0178BA                     u9067:
 18062  0178BA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18063  0178C0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18064  0178C6  50EF               	movf	indf0,w,c
 18065  0178C8                     u9060:
 18066  0178C8  0900               	iorlw	0
 18067  0178CA  A4D8               	btfss	status,2,c
 18068  0178CC  D7D5               	goto	l9726
 18069                           
 18070                           ;stkvar	_a @ sp[(-2)+0]
 18071                           ;stkvar	_s @ sp[(-2)+-2]
 18072  0178CE  0EFC               	movlw	-4
 18073  0178D0  006F FF8C  F032    	movff	plusw1,btemp
 18074  0178D6  0EFD               	movlw	-3
 18075  0178D8  006F FF8C  F033    	movff	plusw1,btemp+1
 18076  0178DE  0EFE               	movlw	-2
 18077  0178E0  50E3               	movf	plusw1,w,c
 18078  0178E2  5E32               	subwf	btemp^0,f,c
 18079  0178E4  0EFF               	movlw	-1
 18080  0178E6  50E3               	movf	plusw1,w,c
 18081  0178E8  5A33               	subwfb	(btemp+1)^0,f,c
 18082                           
 18083                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18084  0178EA  52E5               	movf	postdec1,f,c
 18085  0178EC  52E5               	movf	postdec1,f,c
 18086  0178EE  52E5               	movf	postdec1,f,c
 18087  0178F0  52E5               	movf	postdec1,f,c
 18088  0178F2  0012               	return		;funcret
 18089  0178F4                     __end_of_strlen:
 18090                           	opt callstack 0
 18091                           
 18092 ;; *************** function _fputs *****************
 18093 ;; Defined at:
 18094 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;  s               2  [STACK] PTR const unsigned char 
 18097 ;;		 -> dbuf(80), 
 18098 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18099 ;;		 -> f(6), NULL(0), 
 18100 ;; Auto vars:     Size  Location     Type
 18101 ;;  i               2  [STACK] int 
 18102 ;;  c               1  [STACK] unsigned char 
 18103 ;; Return value:  Size  Location     Type
 18104 ;;                  2  [STACK] int 
 18105 ;; Registers used:
 18106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18107 ;; Tracked objects:
 18108 ;;		On entry : 0/1
 18109 ;;		On exit  : 0/0
 18110 ;;		Unchanged: 0/0
 18111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;Total ram usage:        0 bytes
 18117 ;; Hardware stack levels used:    1
 18118 ;; Hardware stack levels required when called:    9
 18119 ;; This function calls:
 18120 ;;		_fputc
 18121 ;; This function is called by:
 18122 ;;		_pad
 18123 ;; This function uses a reentrant model
 18124 ;;
 18125                           
 18126                           	psect	text66
 18127  0178F4                     __ptext66:
 18128                           	opt callstack 0
 18129  0178F4                     _fputs:
 18130                           	opt callstack 0
 18131                           
 18132                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18133  0178F4  52E6               	movf	postinc1,f,c
 18134  0178F6  52E6               	movf	postinc1,f,c
 18135  0178F8  52E6               	movf	postinc1,f,c
 18136                           
 18137                           ;stkvar	_i @ sp[(-3)+0]
 18138                           
 18139                           ;incstack = 0
 18140  0178FA  0EFD               	movlw	-3
 18141  0178FC  6AE3               	clrf	plusw1,c
 18142  0178FE  0EFE               	movlw	-2
 18143  017900  6AE3               	clrf	plusw1,c
 18144  017902  D01F               	goto	l9740
 18145  017904                     l9736:
 18146                           
 18147                           ;stkvar	_fp @ sp[(-3)+-4]
 18148  017904  0EF9               	movlw	-7
 18149  017906  006F FF8F FFE6     	movff	plusw1,postinc1
 18150  01790C  006F FF8F FFE6     	movff	plusw1,postinc1
 18151                           
 18152                           ;stkvar	_c @ sp[(-5)+2]
 18153  017912  0EFD               	movlw	-3
 18154  017914  50E3               	movf	plusw1,w,c
 18155  017916  6EE6               	movwf	postinc1,c
 18156  017918  0E00               	movlw	0
 18157  01791A  6EE6               	movwf	postinc1,c
 18158  01791C  EC83  F0B5         	call	_fputc	;wreg free
 18159                           
 18160                           ;stkvar	_i @ sp[(-3)+0]
 18161  017920  0EFD               	movlw	-3
 18162  017922  50E3               	movf	plusw1,w,c
 18163  017924  0F01               	addlw	1
 18164  017926  6E32               	movwf	btemp^0,c
 18165  017928  0EFD               	movlw	-3
 18166  01792A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18167  017930  6A32               	clrf	btemp^0,c
 18168  017932  0EFE               	movlw	-2
 18169  017934  50E3               	movf	plusw1,w,c
 18170  017936  2032               	addwfc	btemp^0,w,c
 18171  017938  6E32               	movwf	btemp^0,c
 18172  01793A  0EFE               	movlw	-2
 18173  01793C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18174  017942                     l9740:
 18175                           
 18176                           ;stkvar	_i @ sp[(-3)+0]
 18177  017942  0EFD               	movlw	-3
 18178  017944  006F FF8C  F03C    	movff	plusw1,btemp+10
 18179  01794A  0EFE               	movlw	-2
 18180  01794C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18181                           
 18182                           ;stkvar	_s @ sp[(-3)+-2]
 18183  017952  0EFB               	movlw	-5
 18184  017954  006F FF8C  F03A    	movff	plusw1,btemp+8
 18185  01795A  0EFC               	movlw	-4
 18186  01795C  006F FF8C  F03B    	movff	plusw1,btemp+9
 18187  017962  503C               	movf	(btemp+10)^0,w,c
 18188  017964  243A               	addwf	(btemp+8)^0,w,c
 18189  017966  6ED9               	movwf	fsr2l,c
 18190  017968  503D               	movf	(btemp+11)^0,w,c
 18191  01796A  203B               	addwfc	(btemp+9)^0,w,c
 18192  01796C  6EDA               	movwf	fsr2h,c
 18193  01796E  50DF               	movf	indf2,w,c
 18194  017970  6E3D               	movwf	(btemp+11)^0,c
 18195                           
 18196                           ;stkvar	_c @ sp[(-3)+2]
 18197  017972  0EFF               	movlw	-1
 18198  017974  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18199  01797A  0EFF               	movlw	-1
 18200  01797C  50E3               	movf	plusw1,w,c
 18201  01797E  A4D8               	btfss	status,2,c
 18202  017980  D7C1               	goto	l9736
 18203                           
 18204                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18205  017982  0EF9               	movlw	249
 18206  017984  26E1               	addwf	fsr1l,f,c
 18207  017986  0EFF               	movlw	255
 18208  017988  22E2               	addwfc	fsr1h,f,c
 18209  01798A  0012               	return		;funcret
 18210  01798C                     __end_of_fputs:
 18211                           	opt callstack 0
 18212                           
 18213 ;; *************** function _fputc *****************
 18214 ;; Defined at:
 18215 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18216 ;; Parameters:    Size  Location     Type
 18217 ;;  c               2  [STACK] int 
 18218 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18219 ;;		 -> f(6), NULL(0), 
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;		None
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  2  [STACK] int 
 18224 ;; Registers used:
 18225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/5
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18235 ;;Total ram usage:        0 bytes
 18236 ;; Hardware stack levels used:    1
 18237 ;; Hardware stack levels required when called:    8
 18238 ;; This function calls:
 18239 ;;		_putch
 18240 ;; This function is called by:
 18241 ;;		_pad
 18242 ;;		_stoa
 18243 ;;		_vfpfcnvrt
 18244 ;;		_fputs
 18245 ;; This function uses a reentrant model
 18246 ;;
 18247                           
 18248                           	psect	text67
 18249  016B06                     __ptext67:
 18250                           	opt callstack 0
 18251  016B06                     _fputc:
 18252                           	opt callstack 13
 18253                           
 18254                           ;stkvar	_fp @ sp[(0)+-4]
 18255                           
 18256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18257                           ;incstack = 0
 18258  016B06  0EFC               	movlw	-4
 18259  016B08  006F FF8C  F032    	movff	plusw1,btemp
 18260  016B0E  0EFD               	movlw	-3
 18261  016B10  50E3               	movf	plusw1,w,c
 18262  016B12  1032               	iorwf	btemp^0,w,c
 18263  016B14  B4D8               	btfsc	status,2,c
 18264  016B16  D009               	goto	u9030
 18265                           
 18266                           ;stkvar	_fp @ sp[(0)+-4]
 18267  016B18  0EFC               	movlw	-4
 18268  016B1A  006F FF8C  F032    	movff	plusw1,btemp
 18269  016B20  0EFD               	movlw	-3
 18270  016B22  50E3               	movf	plusw1,w,c
 18271  016B24  1032               	iorwf	btemp^0,w,c
 18272  016B26  A4D8               	btfss	status,2,c
 18273  016B28  D006               	goto	l9714
 18274  016B2A                     u9030:
 18275                           
 18276                           ;stkvar	_c @ sp[(0)+-2]
 18277  016B2A  0EFE               	movlw	-2
 18278  016B2C  50E3               	movf	plusw1,w,c
 18279  016B2E  6EE6               	movwf	postinc1,c
 18280  016B30  EC6C  F0C6         	call	_putch	;wreg free
 18281  016B34  D075               	goto	l2883
 18282  016B36                     l9714:
 18283                           
 18284                           ;stkvar	_fp @ sp[(0)+-4]
 18285  016B36  0EFC               	movlw	-4
 18286  016B38  006F FF8C  F03C    	movff	plusw1,btemp+10
 18287  016B3E  0EFD               	movlw	-3
 18288  016B40  006F FF8C  F03D    	movff	plusw1,btemp+11
 18289  016B46  0E04               	movlw	4
 18290  016B48  243C               	addwf	(btemp+10)^0,w,c
 18291  016B4A  6ED9               	movwf	fsr2l,c
 18292  016B4C  0E00               	movlw	0
 18293  016B4E  203D               	addwfc	(btemp+11)^0,w,c
 18294  016B50  6EDA               	movwf	fsr2h,c
 18295  016B52  50DE               	movf	postinc2,w,c
 18296  016B54  10DE               	iorwf	postinc2,w,c
 18297  016B56  B4D8               	btfsc	status,2,c
 18298  016B58  D026               	goto	u9050
 18299                           
 18300                           ;stkvar	_fp @ sp[(0)+-4]
 18301  016B5A  0EFC               	movlw	-4
 18302  016B5C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18303  016B62  0EFD               	movlw	-3
 18304  016B64  006F FF8C  F03D    	movff	plusw1,btemp+11
 18305  016B6A  0E04               	movlw	4
 18306  016B6C  243C               	addwf	(btemp+10)^0,w,c
 18307  016B6E  6ED9               	movwf	fsr2l,c
 18308  016B70  0E00               	movlw	0
 18309  016B72  203D               	addwfc	(btemp+11)^0,w,c
 18310  016B74  6EDA               	movwf	fsr2h,c
 18311                           
 18312                           ;stkvar	_fp @ sp[(0)+-4]
 18313  016B76  0EFC               	movlw	-4
 18314  016B78  006F FF8C  F03C    	movff	plusw1,btemp+10
 18315  016B7E  0EFD               	movlw	-3
 18316  016B80  006F FF8C  F03D    	movff	plusw1,btemp+11
 18317  016B86  0E02               	movlw	2
 18318  016B88  243C               	addwf	(btemp+10)^0,w,c
 18319  016B8A  6EE9               	movwf	fsr0l,c
 18320  016B8C  0E00               	movlw	0
 18321  016B8E  203D               	addwfc	(btemp+11)^0,w,c
 18322  016B90  6EEA               	movwf	fsr0h,c
 18323  016B92  50DE               	movf	postinc2,w,c
 18324  016B94  5CEE               	subwf	postinc0,w,c
 18325  016B96  50EE               	movf	postinc0,w,c
 18326  016B98  0A80               	xorlw	128
 18327  016B9A  6E32               	movwf	btemp^0,c
 18328  016B9C  50DE               	movf	postinc2,w,c
 18329  016B9E  0A80               	xorlw	128
 18330  016BA0  5832               	subwfb	btemp^0,w,c
 18331  016BA2  B0D8               	btfsc	status,0,c
 18332  016BA4  D03D               	goto	l2883
 18333  016BA6                     u9050:
 18334                           
 18335                           ;stkvar	_c @ sp[(0)+-2]
 18336                           ;stkvar	_fp @ sp[(0)+-4]
 18337  016BA6  0EFC               	movlw	-4
 18338  016BA8  006F FF8C  F03C    	movff	plusw1,btemp+10
 18339  016BAE  0EFD               	movlw	-3
 18340  016BB0  006F FF8C  F03D    	movff	plusw1,btemp+11
 18341  016BB6  0E02               	movlw	2
 18342  016BB8  243C               	addwf	(btemp+10)^0,w,c
 18343  016BBA  6ED9               	movwf	fsr2l,c
 18344  016BBC  0E00               	movlw	0
 18345  016BBE  203D               	addwfc	(btemp+11)^0,w,c
 18346  016BC0  6EDA               	movwf	fsr2h,c
 18347  016BC2  006F FF78  F03C    	movff	postinc2,btemp+10
 18348  016BC8  006F FF74  F03D    	movff	postdec2,btemp+11
 18349                           
 18350                           ;stkvar	_fp @ sp[(0)+-4]
 18351  016BCE  0EFC               	movlw	-4
 18352  016BD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 18353  016BD6  0EFD               	movlw	-3
 18354  016BD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 18355  016BDE  006F FF78  F03A    	movff	postinc2,btemp+8
 18356  016BE4  006F FF74  F03B    	movff	postdec2,btemp+9
 18357  016BEA  503C               	movf	(btemp+10)^0,w,c
 18358  016BEC  243A               	addwf	(btemp+8)^0,w,c
 18359  016BEE  6ED9               	movwf	fsr2l,c
 18360  016BF0  503D               	movf	(btemp+11)^0,w,c
 18361  016BF2  203B               	addwfc	(btemp+9)^0,w,c
 18362  016BF4  6EDA               	movwf	fsr2h,c
 18363  016BF6  0EFE               	movlw	-2
 18364  016BF8  006F FF8F FFDF     	movff	plusw1,indf2
 18365                           
 18366                           ;stkvar	_fp @ sp[(0)+-4]
 18367  016BFE  0EFC               	movlw	-4
 18368  016C00  006F FF8C  F03C    	movff	plusw1,btemp+10
 18369  016C06  0EFD               	movlw	-3
 18370  016C08  006F FF8C  F03D    	movff	plusw1,btemp+11
 18371  016C0E  0E02               	movlw	2
 18372  016C10  243C               	addwf	(btemp+10)^0,w,c
 18373  016C12  6ED9               	movwf	fsr2l,c
 18374  016C14  0E00               	movlw	0
 18375  016C16  203D               	addwfc	(btemp+11)^0,w,c
 18376  016C18  6EDA               	movwf	fsr2h,c
 18377  016C1A  2ADE               	incf	postinc2,f,c
 18378  016C1C  0E00               	movlw	0
 18379  016C1E  22DD               	addwfc	postdec2,f,c
 18380  016C20                     l2883:
 18381                           
 18382                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18383  016C20  52E5               	movf	postdec1,f,c
 18384  016C22  52E5               	movf	postdec1,f,c
 18385  016C24  52E5               	movf	postdec1,f,c
 18386  016C26  52E5               	movf	postdec1,f,c
 18387  016C28  0012               	return		;funcret
 18388  016C2A                     __end_of_fputc:
 18389                           	opt callstack 0
 18390                           
 18391 ;; *************** function _putch *****************
 18392 ;; Defined at:
 18393 ;;		line 155 in file "eadog.c"
 18394 ;; Parameters:    Size  Location     Type
 18395 ;;  c               1  [STACK] unsigned char 
 18396 ;; Auto vars:     Size  Location     Type
 18397 ;;		None
 18398 ;; Return value:  Size  Location     Type
 18399 ;;                  1  [STACK] void 
 18400 ;; Registers used:
 18401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18402 ;; Tracked objects:
 18403 ;;		On entry : 0/5
 18404 ;;		On exit  : 0/0
 18405 ;;		Unchanged: 0/0
 18406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18411 ;;Total ram usage:        0 bytes
 18412 ;; Hardware stack levels used:    1
 18413 ;; Hardware stack levels required when called:    7
 18414 ;; This function calls:
 18415 ;;		_ringBufS_put_dma
 18416 ;; This function is called by:
 18417 ;;		_fputc
 18418 ;; This function uses a reentrant model
 18419 ;;
 18420                           
 18421                           	psect	text68
 18422  018CD8                     __ptext68:
 18423                           	opt callstack 0
 18424  018CD8                     _putch:
 18425                           	opt callstack 13
 18426                           
 18427                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18428                           ;stkvar	_c @ sp[(0)+-1]
 18429                           
 18430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18431                           ;incstack = 0
 18432  018CD8  0EFF               	movlw	-1
 18433  018CDA  50E3               	movf	plusw1,w,c
 18434  018CDC  6EE6               	movwf	postinc1,c
 18435  018CDE  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 18436  018CE4  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 18437  018CEA  EC2D  F0BB         	call	_ringBufS_put_dma	;wreg free
 18438                           
 18439                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18440  018CEE  52E5               	movf	postdec1,f,c
 18441  018CF0  0012               	return		;funcret
 18442  018CF2                     __end_of_putch:
 18443                           	opt callstack 0
 18444                           
 18445 ;; *************** function _ringBufS_put_dma *****************
 18446 ;; Defined at:
 18447 ;;		line 67 in file "ringbufs.c"
 18448 ;; Parameters:    Size  Location     Type
 18449 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18450 ;;		 -> ring_buf1(67), 
 18451 ;;  c               1  [STACK] const unsigned char 
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;		None
 18454 ;; Return value:  Size  Location     Type
 18455 ;;                  1  [STACK] void 
 18456 ;; Registers used:
 18457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18458 ;; Tracked objects:
 18459 ;;		On entry : 0/5
 18460 ;;		On exit  : 0/0
 18461 ;;		Unchanged: 0/0
 18462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18467 ;;Total ram usage:        0 bytes
 18468 ;; Hardware stack levels used:    1
 18469 ;; Hardware stack levels required when called:    6
 18470 ;; This function calls:
 18471 ;;		Nothing
 18472 ;; This function is called by:
 18473 ;;		_putch
 18474 ;; This function uses a reentrant model
 18475 ;;
 18476                           
 18477                           	psect	text69
 18478  01765A                     __ptext69:
 18479                           	opt callstack 0
 18480  01765A                     _ringBufS_put_dma:
 18481                           	opt callstack 13
 18482                           
 18483                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18484                           ;stkvar	__this @ sp[(0)+-2]
 18485                           
 18486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18487                           ;incstack = 0
 18488  01765A  0EFE               	movlw	-2
 18489  01765C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18490  017662  0EFF               	movlw	-1
 18491  017664  006F FF8C  F03D    	movff	plusw1,btemp+11
 18492  01766A  0E42               	movlw	66
 18493  01766C  243C               	addwf	(btemp+10)^0,w,c
 18494  01766E  6ED9               	movwf	fsr2l,c
 18495  017670  0E00               	movlw	0
 18496  017672  203D               	addwfc	(btemp+11)^0,w,c
 18497  017674  6EDA               	movwf	fsr2h,c
 18498  017676  0E40               	movlw	64
 18499  017678  60DF               	cpfslt	indf2,c
 18500  01767A  D040               	goto	l1498
 18501                           
 18502                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18503                           ;stkvar	_c @ sp[(0)+-3]
 18504                           ;stkvar	__this @ sp[(0)+-2]
 18505  01767C  0EFE               	movlw	-2
 18506  01767E  006F FF8C  F03C    	movff	plusw1,btemp+10
 18507  017684  0EFF               	movlw	-1
 18508  017686  006F FF8C  F03D    	movff	plusw1,btemp+11
 18509  01768C  0E40               	movlw	64
 18510  01768E  243C               	addwf	(btemp+10)^0,w,c
 18511  017690  6ED9               	movwf	fsr2l,c
 18512  017692  0E00               	movlw	0
 18513  017694  203D               	addwfc	(btemp+11)^0,w,c
 18514  017696  6EDA               	movwf	fsr2h,c
 18515  017698  50DF               	movf	indf2,w,c
 18516  01769A  6E3D               	movwf	(btemp+11)^0,c
 18517                           
 18518                           ;stkvar	__this @ sp[(0)+-2]
 18519  01769C  0EFE               	movlw	-2
 18520  01769E  006F FF8C  F03A    	movff	plusw1,btemp+8
 18521  0176A4  0EFF               	movlw	-1
 18522  0176A6  006F FF8C  F03B    	movff	plusw1,btemp+9
 18523  0176AC  503D               	movf	(btemp+11)^0,w,c
 18524  0176AE  243A               	addwf	(btemp+8)^0,w,c
 18525  0176B0  6ED9               	movwf	fsr2l,c
 18526  0176B2  0E00               	movlw	0
 18527  0176B4  203B               	addwfc	(btemp+9)^0,w,c
 18528  0176B6  6EDA               	movwf	fsr2h,c
 18529  0176B8  0EFD               	movlw	-3
 18530  0176BA  006F FF8F FFDF     	movff	plusw1,indf2
 18531                           
 18532                           ;ringbufs.c: 71:   ++_this->head;
 18533                           ;stkvar	__this @ sp[(0)+-2]
 18534  0176C0  0EFE               	movlw	-2
 18535  0176C2  006F FF8C  F03C    	movff	plusw1,btemp+10
 18536  0176C8  0EFF               	movlw	-1
 18537  0176CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 18538  0176D0  0E40               	movlw	64
 18539  0176D2  243C               	addwf	(btemp+10)^0,w,c
 18540  0176D4  6ED9               	movwf	fsr2l,c
 18541  0176D6  0E00               	movlw	0
 18542  0176D8  203D               	addwfc	(btemp+11)^0,w,c
 18543  0176DA  6EDA               	movwf	fsr2h,c
 18544  0176DC  2ADF               	incf	indf2,f,c
 18545                           
 18546                           ;ringbufs.c: 72:   ++_this->count;
 18547                           ;stkvar	__this @ sp[(0)+-2]
 18548  0176DE  0EFE               	movlw	-2
 18549  0176E0  006F FF8C  F03C    	movff	plusw1,btemp+10
 18550  0176E6  0EFF               	movlw	-1
 18551  0176E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 18552  0176EE  0E42               	movlw	66
 18553  0176F0  243C               	addwf	(btemp+10)^0,w,c
 18554  0176F2  6ED9               	movwf	fsr2l,c
 18555  0176F4  0E00               	movlw	0
 18556  0176F6  203D               	addwfc	(btemp+11)^0,w,c
 18557  0176F8  6EDA               	movwf	fsr2h,c
 18558  0176FA  2ADF               	incf	indf2,f,c
 18559  0176FC                     l1498:
 18560                           
 18561                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18562  0176FC  52E5               	movf	postdec1,f,c
 18563  0176FE  52E5               	movf	postdec1,f,c
 18564  017700  52E5               	movf	postdec1,f,c
 18565  017702  0012               	return		;funcret
 18566  017704                     __end_of_ringBufS_put_dma:
 18567                           	opt callstack 0
 18568                           
 18569 ;; *************** function _atoi *****************
 18570 ;; Defined at:
 18571 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18572 ;; Parameters:    Size  Location     Type
 18573 ;;  s               2  [STACK] PTR const unsigned char 
 18574 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18575 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18576 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18577 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18578 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18579 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18580 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18581 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18582 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18583 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18584 ;; Auto vars:     Size  Location     Type
 18585 ;;  n               2  [STACK] int 
 18586 ;;  neg             2  [STACK] int 
 18587 ;; Return value:  Size  Location     Type
 18588 ;;                  2  [STACK] int 
 18589 ;; Registers used:
 18590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18591 ;; Tracked objects:
 18592 ;;		On entry : 0/5
 18593 ;;		On exit  : 0/0
 18594 ;;		Unchanged: 0/0
 18595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18600 ;;Total ram usage:        0 bytes
 18601 ;; Hardware stack levels used:    1
 18602 ;; Hardware stack levels required when called:    7
 18603 ;; This function calls:
 18604 ;;		_isdigit
 18605 ;;		_isspace
 18606 ;; This function is called by:
 18607 ;;		_vfpfcnvrt
 18608 ;; This function uses a reentrant model
 18609 ;;
 18610                           
 18611                           	psect	text70
 18612  015670                     __ptext70:
 18613                           	opt callstack 0
 18614  015670                     _atoi:
 18615                           	opt callstack 0
 18616                           
 18617                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18618  015670  0E09               	movlw	9
 18619  015672  26E1               	addwf	fsr1l,f,c
 18620  015674  0E00               	movlw	0
 18621  015676  22E2               	addwfc	fsr1h,f,c
 18622                           
 18623                           ;stkvar	_n @ sp[(-9)+5]
 18624                           
 18625                           ;incstack = 0
 18626  015678  0EFC               	movlw	-4
 18627  01567A  6AE3               	clrf	plusw1,c
 18628  01567C  0EFD               	movlw	-3
 18629  01567E  6AE3               	clrf	plusw1,c
 18630                           
 18631                           ;stkvar	_neg @ sp[(-9)+7]
 18632  015680  0EFE               	movlw	-2
 18633  015682  6AE3               	clrf	plusw1,c
 18634  015684  0EFF               	movlw	-1
 18635  015686  6AE3               	clrf	plusw1,c
 18636  015688  D011               	goto	l7842
 18637  01568A                     l7840:
 18638                           
 18639                           ;stkvar	_s @ sp[(-9)+-2]
 18640  01568A  0EF5               	movlw	-11
 18641  01568C  50E3               	movf	plusw1,w,c
 18642  01568E  0F01               	addlw	1
 18643  015690  6E32               	movwf	btemp^0,c
 18644  015692  0EF5               	movlw	-11
 18645  015694  0060  F0CB  FFE3   	movff	btemp,plusw1
 18646  01569A  6A32               	clrf	btemp^0,c
 18647  01569C  0EF6               	movlw	-10
 18648  01569E  50E3               	movf	plusw1,w,c
 18649  0156A0  2032               	addwfc	btemp^0,w,c
 18650  0156A2  6E32               	movwf	btemp^0,c
 18651  0156A4  0EF6               	movlw	-10
 18652  0156A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 18653  0156AC                     l7842:
 18654                           
 18655                           ;stkvar	_atoi$5131 @ sp[(-9)+4]
 18656  0156AC  0EFB               	movlw	-5
 18657  0156AE  6AE3               	clrf	plusw1,c
 18658  0156B0  2AE3               	incf	plusw1,f,c
 18659                           
 18660                           ;stkvar	_s @ sp[(-9)+-2]
 18661  0156B2  50E1               	movf	fsr1l,w,c
 18662  0156B4  0FF5               	addlw	-11
 18663  0156B6  6ED9               	movwf	fsr2l,c
 18664  0156B8  50E2               	movf	fsr1h,w,c
 18665  0156BA  6EDA               	movwf	fsr2h,c
 18666  0156BC  0EFF               	movlw	255
 18667  0156BE  22DA               	addwfc	fsr2h,f,c
 18668  0156C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 18669  0156C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 18670  0156CC                     	if	0	;tblptru may be non-zero
 18671  0156CC                     	endif
 18672  0156CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18673  0156CC  0E00               	movlw	low (__mediumconst shr (0+16))
 18674  0156CE  6EF8               	movwf	tblptru,c
 18675  0156D0                     	endif
 18676  0156D0  0008               	tblrd		*
 18677  0156D2  50F5               	movf	tablat,w,c
 18678  0156D4  0A20               	xorlw	32
 18679  0156D6  B4D8               	btfsc	status,2,c
 18680  0156D8  D023               	goto	l7850
 18681  0156DA  0EF7               	movlw	247
 18682  0156DC  6E3C               	movwf	(btemp+10)^0,c
 18683  0156DE  0EFF               	movlw	255
 18684  0156E0  6E3D               	movwf	(btemp+11)^0,c
 18685                           
 18686                           ;stkvar	_s @ sp[(-9)+-2]
 18687  0156E2  50E1               	movf	fsr1l,w,c
 18688  0156E4  0FF5               	addlw	-11
 18689  0156E6  6ED9               	movwf	fsr2l,c
 18690  0156E8  50E2               	movf	fsr1h,w,c
 18691  0156EA  6EDA               	movwf	fsr2h,c
 18692  0156EC  0EFF               	movlw	255
 18693  0156EE  22DA               	addwfc	fsr2h,f,c
 18694  0156F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 18695  0156F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 18696  0156FC                     	if	0	;tblptru may be non-zero
 18697  0156FC                     	endif
 18698  0156FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18699  0156FC  0E00               	movlw	low (__mediumconst shr (0+16))
 18700  0156FE  6EF8               	movwf	tblptru,c
 18701  015700                     	endif
 18702  015700  0008               	tblrd		*
 18703  015702  50F5               	movf	tablat,w,c
 18704  015704  6E3A               	movwf	(btemp+8)^0,c
 18705  015706  6A3B               	clrf	(btemp+9)^0,c
 18706  015708  503C               	movf	(btemp+10)^0,w,c
 18707  01570A  263A               	addwf	(btemp+8)^0,f,c
 18708  01570C  503D               	movf	(btemp+11)^0,w,c
 18709  01570E  223B               	addwfc	(btemp+9)^0,f,c
 18710  015710  503B               	movf	(btemp+9)^0,w,c
 18711  015712  E104               	bnz	u7440
 18712  015714  0E05               	movlw	5
 18713  015716  5C3A               	subwf	(btemp+8)^0,w,c
 18714  015718  A0D8               	btfss	status,0,c
 18715  01571A  D002               	goto	l7850
 18716  01571C                     u7440:
 18717                           
 18718                           ;stkvar	_atoi$5131 @ sp[(-9)+4]
 18719  01571C  0EFB               	movlw	-5
 18720  01571E  6AE3               	clrf	plusw1,c
 18721  015720                     l7850:
 18722                           
 18723                           ;stkvar	_atoi$5131 @ sp[(-9)+4]
 18724  015720  0EFB               	movlw	-5
 18725  015722  50E3               	movf	plusw1,w,c
 18726  015724  6E3C               	movwf	(btemp+10)^0,c
 18727  015726  6A3D               	clrf	(btemp+11)^0,c
 18728                           
 18729                           ;stkvar	_atoi$5130 @ sp[(-9)+2]
 18730  015728  0EF9               	movlw	-7
 18731  01572A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18732  015730  0EFA               	movlw	-6
 18733  015732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18734                           
 18735                           ;stkvar	_atoi$5130 @ sp[(-9)+2]
 18736  015738  0EF9               	movlw	-7
 18737  01573A  006F FF8C  F032    	movff	plusw1,btemp
 18738  015740  0EFA               	movlw	-6
 18739  015742  50E3               	movf	plusw1,w,c
 18740  015744  1032               	iorwf	btemp^0,w,c
 18741  015746  B4D8               	btfsc	status,2,c
 18742  015748  D01F               	goto	l7860
 18743  01574A  D79F               	goto	l7840
 18744  01574C                     l7856:
 18745  01574C  0E01               	movlw	1
 18746  01574E  6E3C               	movwf	(btemp+10)^0,c
 18747  015750  0E00               	movlw	0
 18748  015752  6E3D               	movwf	(btemp+11)^0,c
 18749                           
 18750                           ;stkvar	_neg @ sp[(-9)+7]
 18751  015754  0EFE               	movlw	-2
 18752  015756  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18753  01575C  0EFF               	movlw	-1
 18754  01575E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18755  015764                     l7858:
 18756                           
 18757                           ;stkvar	_s @ sp[(-9)+-2]
 18758  015764  0EF5               	movlw	-11
 18759  015766  50E3               	movf	plusw1,w,c
 18760  015768  0F01               	addlw	1
 18761  01576A  6E32               	movwf	btemp^0,c
 18762  01576C  0EF5               	movlw	-11
 18763  01576E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18764  015774  6A32               	clrf	btemp^0,c
 18765  015776  0EF6               	movlw	-10
 18766  015778  50E3               	movf	plusw1,w,c
 18767  01577A  2032               	addwfc	btemp^0,w,c
 18768  01577C  6E32               	movwf	btemp^0,c
 18769  01577E  0EF6               	movlw	-10
 18770  015780  0060  F0CB  FFE3   	movff	btemp,plusw1
 18771  015786  D053               	goto	l7866
 18772  015788                     l7860:
 18773                           
 18774                           ;stkvar	_s @ sp[(-9)+-2]
 18775  015788  50E1               	movf	fsr1l,w,c
 18776  01578A  0FF5               	addlw	-11
 18777  01578C  6ED9               	movwf	fsr2l,c
 18778  01578E  50E2               	movf	fsr1h,w,c
 18779  015790  6EDA               	movwf	fsr2h,c
 18780  015792  0EFF               	movlw	255
 18781  015794  22DA               	addwfc	fsr2h,f,c
 18782  015796  006F FF7B FFF6     	movff	postinc2,tblptrl
 18783  01579C  006F FF77 FFF7     	movff	postdec2,tblptrh
 18784  0157A2                     	if	0	;tblptru may be non-zero
 18785  0157A2                     	endif
 18786  0157A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18787  0157A2  0E00               	movlw	low (__mediumconst shr (0+16))
 18788  0157A4  6EF8               	movwf	tblptru,c
 18789  0157A6                     	endif
 18790  0157A6  0008               	tblrd		*
 18791  0157A8  50F5               	movf	tablat,w,c
 18792  0157AA  6E3C               	movwf	(btemp+10)^0,c
 18793  0157AC  6A3D               	clrf	(btemp+11)^0,c
 18794                           
 18795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18796                           ; Switch size 1, requested type "simple"
 18797                           ; Number of cases is 1, Range of values is 0 to 0
 18798                           ; switch strategies available:
 18799                           ; Name         Instructions Cycles
 18800                           ; simple_byte            4     3 (average)
 18801                           ;	Chosen strategy is simple_byte
 18802  0157AE  503D               	movf	(btemp+11)^0,w,c
 18803  0157B0  0A00               	xorlw	0	; case 0
 18804  0157B2  A4D8               	btfss	status,2,c
 18805  0157B4  D03C               	goto	l7866
 18806                           
 18807                           ; Switch size 1, requested type "simple"
 18808                           ; Number of cases is 2, Range of values is 43 to 45
 18809                           ; switch strategies available:
 18810                           ; Name         Instructions Cycles
 18811                           ; simple_byte            7     4 (average)
 18812                           ;	Chosen strategy is simple_byte
 18813  0157B6  503C               	movf	(btemp+10)^0,w,c
 18814  0157B8  0A2B               	xorlw	43	; case 43
 18815  0157BA  B4D8               	btfsc	status,2,c
 18816  0157BC  D7D3               	goto	l7858
 18817  0157BE  0A06               	xorlw	6	; case 45
 18818  0157C0  B4D8               	btfsc	status,2,c
 18819  0157C2  D7C4               	goto	l7856
 18820  0157C4  D034               	goto	l7866
 18821  0157C6                     l7862:
 18822                           
 18823                           ;stkvar	_n @ sp[(-9)+5]
 18824  0157C6  0EFC               	movlw	-4
 18825  0157C8  006F FF8C  F03C    	movff	plusw1,btemp+10
 18826  0157CE  0EFD               	movlw	-3
 18827  0157D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 18828  0157D6  0E0A               	movlw	10
 18829  0157D8  023C               	mulwf	(btemp+10)^0,c
 18830  0157DA  006F FFCC  F03A    	movff	prodl,btemp+8
 18831  0157E0  006F FFD0  F03B    	movff	prodh,btemp+9
 18832  0157E6  023D               	mulwf	(btemp+11)^0,c
 18833  0157E8  50F3               	movf	prodl,w,c
 18834  0157EA  263B               	addwf	(btemp+9)^0,f,c
 18835                           
 18836                           ;stkvar	_s @ sp[(-9)+-2]
 18837  0157EC  50E1               	movf	fsr1l,w,c
 18838  0157EE  0FF5               	addlw	-11
 18839  0157F0  6ED9               	movwf	fsr2l,c
 18840  0157F2  50E2               	movf	fsr1h,w,c
 18841  0157F4  6EDA               	movwf	fsr2h,c
 18842  0157F6  0EFF               	movlw	255
 18843  0157F8  22DA               	addwfc	fsr2h,f,c
 18844  0157FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 18845  015800  006F FF77 FFF7     	movff	postdec2,tblptrh
 18846  015806                     	if	0	;tblptru may be non-zero
 18847  015806                     	endif
 18848  015806                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18849  015806  0E00               	movlw	low (__mediumconst shr (0+16))
 18850  015808  6EF8               	movwf	tblptru,c
 18851  01580A                     	endif
 18852  01580A  0008               	tblrd		*
 18853  01580C  50F5               	movf	tablat,w,c
 18854  01580E  5E3A               	subwf	(btemp+8)^0,f,c
 18855  015810  0E00               	movlw	0
 18856  015812  5A3B               	subwfb	(btemp+9)^0,f,c
 18857  015814  0E30               	movlw	48
 18858  015816  263A               	addwf	(btemp+8)^0,f,c
 18859  015818  0E00               	movlw	0
 18860  01581A  223B               	addwfc	(btemp+9)^0,f,c
 18861                           
 18862                           ;stkvar	_n @ sp[(-9)+5]
 18863  01581C  0EFC               	movlw	-4
 18864  01581E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18865  015824  0EFD               	movlw	-3
 18866  015826  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18867  01582C  D79B               	goto	l7858
 18868  01582E                     l7866:
 18869  01582E  0ED0               	movlw	208
 18870  015830  6E3C               	movwf	(btemp+10)^0,c
 18871  015832  0EFF               	movlw	255
 18872  015834  6E3D               	movwf	(btemp+11)^0,c
 18873                           
 18874                           ;stkvar	_s @ sp[(-9)+-2]
 18875  015836  50E1               	movf	fsr1l,w,c
 18876  015838  0FF5               	addlw	-11
 18877  01583A  6ED9               	movwf	fsr2l,c
 18878  01583C  50E2               	movf	fsr1h,w,c
 18879  01583E  6EDA               	movwf	fsr2h,c
 18880  015840  0EFF               	movlw	255
 18881  015842  22DA               	addwfc	fsr2h,f,c
 18882  015844  006F FF7B FFF6     	movff	postinc2,tblptrl
 18883  01584A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18884  015850                     	if	0	;tblptru may be non-zero
 18885  015850                     	endif
 18886  015850                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18887  015850  0E00               	movlw	low (__mediumconst shr (0+16))
 18888  015852  6EF8               	movwf	tblptru,c
 18889  015854                     	endif
 18890  015854  0008               	tblrd		*
 18891  015856  50F5               	movf	tablat,w,c
 18892  015858  6E3A               	movwf	(btemp+8)^0,c
 18893  01585A  6A3B               	clrf	(btemp+9)^0,c
 18894  01585C  503C               	movf	(btemp+10)^0,w,c
 18895  01585E  263A               	addwf	(btemp+8)^0,f,c
 18896  015860  503D               	movf	(btemp+11)^0,w,c
 18897  015862  223B               	addwfc	(btemp+9)^0,f,c
 18898  015864  503B               	movf	(btemp+9)^0,w,c
 18899  015866  E106               	bnz	u7460
 18900  015868  0E0A               	movlw	10
 18901  01586A  5C3A               	subwf	(btemp+8)^0,w,c
 18902  01586C  B0D8               	btfsc	status,0,c
 18903  01586E  D002               	goto	u7460
 18904  015870  0E01               	movlw	1
 18905  015872  D001               	goto	u7470
 18906  015874                     u7460:
 18907  015874  0E00               	movlw	0
 18908  015876                     u7470:
 18909  015876  6E3C               	movwf	(btemp+10)^0,c
 18910  015878  6A3D               	clrf	(btemp+11)^0,c
 18911                           
 18912                           ;stkvar	_atoi$5132 @ sp[(-9)+0]
 18913  01587A  0EF7               	movlw	-9
 18914  01587C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18915  015882  0EF8               	movlw	-8
 18916  015884  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18917                           
 18918                           ;stkvar	_atoi$5132 @ sp[(-9)+0]
 18919  01588A  0EF7               	movlw	-9
 18920  01588C  006F FF8C  F032    	movff	plusw1,btemp
 18921  015892  0EF8               	movlw	-8
 18922  015894  50E3               	movf	plusw1,w,c
 18923  015896  1032               	iorwf	btemp^0,w,c
 18924  015898  A4D8               	btfss	status,2,c
 18925  01589A  D795               	goto	l7862
 18926                           
 18927                           ;stkvar	_neg @ sp[(-9)+7]
 18928  01589C  0EFE               	movlw	-2
 18929  01589E  006F FF8C  F032    	movff	plusw1,btemp
 18930  0158A4  0EFF               	movlw	-1
 18931  0158A6  50E3               	movf	plusw1,w,c
 18932  0158A8  1032               	iorwf	btemp^0,w,c
 18933  0158AA  A4D8               	btfss	status,2,c
 18934  0158AC  D00E               	goto	l7876
 18935                           
 18936                           ;stkvar	_n @ sp[(-9)+5]
 18937  0158AE  0EFC               	movlw	-4
 18938  0158B0  006F FF8C  F032    	movff	plusw1,btemp
 18939  0158B6  1E32               	comf	btemp^0,f,c
 18940  0158B8  0EFD               	movlw	-3
 18941  0158BA  006F FF8C  F033    	movff	plusw1,btemp+1
 18942  0158C0  1E33               	comf	(btemp+1)^0,f,c
 18943  0158C2  2A32               	incf	btemp^0,f,c
 18944  0158C4  B4D8               	btfsc	status,2,c
 18945  0158C6  2A33               	incf	(btemp+1)^0,f,c
 18946  0158C8  D008               	goto	l2819
 18947  0158CA                     l7876:
 18948                           
 18949                           ;stkvar	_n @ sp[(-9)+5]
 18950  0158CA  0EFC               	movlw	-4
 18951  0158CC  006F FF8C  F032    	movff	plusw1,btemp
 18952  0158D2  0EFD               	movlw	-3
 18953  0158D4  006F FF8C  F033    	movff	plusw1,btemp+1
 18954  0158DA                     l2819:
 18955                           
 18956                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18957  0158DA  0EF5               	movlw	245
 18958  0158DC  26E1               	addwf	fsr1l,f,c
 18959  0158DE  0EFF               	movlw	255
 18960  0158E0  22E2               	addwfc	fsr1h,f,c
 18961  0158E2  0012               	return		;funcret
 18962  0158E4                     __end_of_atoi:
 18963                           	opt callstack 0
 18964                           
 18965 ;; *************** function _isspace *****************
 18966 ;; Defined at:
 18967 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18968 ;; Parameters:    Size  Location     Type
 18969 ;;  c               2  [STACK] int 
 18970 ;; Auto vars:     Size  Location     Type
 18971 ;;		None
 18972 ;; Return value:  Size  Location     Type
 18973 ;;                  2  [STACK] int 
 18974 ;; Registers used:
 18975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18976 ;; Tracked objects:
 18977 ;;		On entry : 0/0
 18978 ;;		On exit  : 0/0
 18979 ;;		Unchanged: 0/0
 18980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18985 ;;Total ram usage:        0 bytes
 18986 ;; Hardware stack levels used:    1
 18987 ;; Hardware stack levels required when called:    6
 18988 ;; This function calls:
 18989 ;;		Nothing
 18990 ;; This function is called by:
 18991 ;;		_atoi
 18992 ;; This function uses a reentrant model
 18993 ;;
 18994                           
 18995                           	psect	text71
 18996  01823E                     __ptext71:
 18997                           	opt callstack 0
 18998  01823E                     _isspace:
 18999                           	opt callstack 0
 19000                           
 19001                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19002  01823E  52E6               	movf	postinc1,f,c
 19003                           
 19004                           ;stkvar	_isspace$5170 @ sp[(-1)+0]
 19005                           
 19006                           ;incstack = 0
 19007  018240  0EFF               	movlw	-1
 19008  018242  6AE3               	clrf	plusw1,c
 19009  018244  2AE3               	incf	plusw1,f,c
 19010                           
 19011                           ;stkvar	_c @ sp[(-1)+-2]
 19012  018246  0EFD               	movlw	-3
 19013  018248  006F FF8C  F032    	movff	plusw1,btemp
 19014  01824E  0E20               	movlw	32
 19015  018250  1832               	xorwf	btemp^0,w,c
 19016  018252  E104               	bnz	u6430
 19017  018254  0EFE               	movlw	-2
 19018  018256  50E3               	movf	plusw1,w,c
 19019  018258  B4D8               	btfsc	status,2,c
 19020  01825A  D012               	goto	l7326
 19021  01825C                     u6430:
 19022                           
 19023                           ;stkvar	_c @ sp[(-1)+-2]
 19024  01825C  0EFD               	movlw	-3
 19025  01825E  50E3               	movf	plusw1,w,c
 19026  018260  0FF7               	addlw	247
 19027  018262  6E3C               	movwf	(btemp+10)^0,c
 19028  018264  0EFE               	movlw	-2
 19029  018266  006F FF8C  F03D    	movff	plusw1,btemp+11
 19030  01826C  0EFF               	movlw	255
 19031  01826E  223D               	addwfc	(btemp+11)^0,f,c
 19032  018270  503D               	movf	(btemp+11)^0,w,c
 19033  018272  E104               	bnz	u6440
 19034  018274  0E05               	movlw	5
 19035  018276  5C3C               	subwf	(btemp+10)^0,w,c
 19036  018278  A0D8               	btfss	status,0,c
 19037  01827A  D002               	goto	l7326
 19038  01827C                     u6440:
 19039                           
 19040                           ;stkvar	_isspace$5170 @ sp[(-1)+0]
 19041  01827C  0EFF               	movlw	-1
 19042  01827E  6AE3               	clrf	plusw1,c
 19043  018280                     l7326:
 19044                           
 19045                           ;stkvar	_isspace$5170 @ sp[(-1)+0]
 19046  018280  0EFF               	movlw	-1
 19047  018282  50E3               	movf	plusw1,w,c
 19048  018284  6E32               	movwf	btemp^0,c
 19049  018286  6A33               	clrf	(btemp+1)^0,c
 19050                           
 19051                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19052  018288  52E5               	movf	postdec1,f,c
 19053  01828A  52E5               	movf	postdec1,f,c
 19054  01828C  52E5               	movf	postdec1,f,c
 19055  01828E  0012               	return		;funcret
 19056  018290                     __end_of_isspace:
 19057                           	opt callstack 0
 19058                           
 19059 ;; *************** function _isdigit *****************
 19060 ;; Defined at:
 19061 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19062 ;; Parameters:    Size  Location     Type
 19063 ;;  c               2  [STACK] int 
 19064 ;; Auto vars:     Size  Location     Type
 19065 ;;		None
 19066 ;; Return value:  Size  Location     Type
 19067 ;;                  2  [STACK] int 
 19068 ;; Registers used:
 19069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19070 ;; Tracked objects:
 19071 ;;		On entry : 0/0
 19072 ;;		On exit  : 0/0
 19073 ;;		Unchanged: 0/0
 19074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19079 ;;Total ram usage:        0 bytes
 19080 ;; Hardware stack levels used:    1
 19081 ;; Hardware stack levels required when called:    6
 19082 ;; This function calls:
 19083 ;;		Nothing
 19084 ;; This function is called by:
 19085 ;;		_vfpfcnvrt
 19086 ;;		_atoi
 19087 ;; This function uses a reentrant model
 19088 ;;
 19089                           
 19090                           	psect	text72
 19091  0186E2                     __ptext72:
 19092                           	opt callstack 0
 19093  0186E2                     _isdigit:
 19094                           	opt callstack 18
 19095                           
 19096                           ;stkvar	_c @ sp[(0)+-2]
 19097                           
 19098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19099                           ;incstack = 0
 19100  0186E2  0EFE               	movlw	-2
 19101  0186E4  50E3               	movf	plusw1,w,c
 19102  0186E6  0FD0               	addlw	208
 19103  0186E8  6E3C               	movwf	(btemp+10)^0,c
 19104  0186EA  0EFF               	movlw	-1
 19105  0186EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 19106  0186F2  0EFF               	movlw	255
 19107  0186F4  223D               	addwfc	(btemp+11)^0,f,c
 19108  0186F6  503D               	movf	(btemp+11)^0,w,c
 19109  0186F8  E106               	bnz	u5390
 19110  0186FA  0E0A               	movlw	10
 19111  0186FC  5C3C               	subwf	(btemp+10)^0,w,c
 19112  0186FE  B0D8               	btfsc	status,0,c
 19113  018700  D002               	goto	u5390
 19114  018702  0E01               	movlw	1
 19115  018704  D001               	goto	u5400
 19116  018706                     u5390:
 19117  018706  0E00               	movlw	0
 19118  018708                     u5400:
 19119  018708  6E32               	movwf	btemp^0,c
 19120  01870A  6A33               	clrf	(btemp+1)^0,c
 19121                           
 19122                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19123  01870C  52E5               	movf	postdec1,f,c
 19124  01870E  52E5               	movf	postdec1,f,c
 19125  018710  0012               	return		;funcret
 19126  018712                     __end_of_isdigit:
 19127                           	opt callstack 0
 19128                           
 19129 ;; *************** function _set_vterm *****************
 19130 ;; Defined at:
 19131 ;;		line 107 in file "mconfig.c"
 19132 ;; Parameters:    Size  Location     Type
 19133 ;;  vterm           1  [STACK] const unsigned char 
 19134 ;; Auto vars:     Size  Location     Type
 19135 ;;		None
 19136 ;; Return value:  Size  Location     Type
 19137 ;;                  1  [STACK] unsigned char 
 19138 ;; Registers used:
 19139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19140 ;; Tracked objects:
 19141 ;;		On entry : 0/1
 19142 ;;		On exit  : 3F/5
 19143 ;;		Unchanged: 0/0
 19144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19149 ;;Total ram usage:        0 bytes
 19150 ;; Hardware stack levels used:    1
 19151 ;; Hardware stack levels required when called:    6
 19152 ;; This function calls:
 19153 ;;		Nothing
 19154 ;; This function is called by:
 19155 ;;		_main
 19156 ;;		_check_help
 19157 ;; This function uses a reentrant model
 19158 ;;
 19159                           
 19160                           	psect	text73
 19161  018CBC                     __ptext73:
 19162                           	opt callstack 0
 19163  018CBC                     _set_vterm:
 19164                           	opt callstack 24
 19165                           
 19166                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19167                           ;stkvar	_vterm @ sp[(0)+-1]
 19168                           
 19169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19170                           ;incstack = 0
 19171  018CBC  0EFF               	movlw	-1
 19172  018CBE  006F FF8C  F03D    	movff	plusw1,btemp+11
 19173  018CC4  0E03               	movlw	3
 19174  018CC6  163D               	andwf	(btemp+11)^0,f,c
 19175  018CC8  0105               	movlb	5	; () banked
 19176  018CCA  51D8               	movf	(_D+216)& (0+255),w,b
 19177  018CCC  183D               	xorwf	(btemp+11)^0,w,c
 19178  018CCE  0BFE               	andlw	-2
 19179  018CD0  183D               	xorwf	(btemp+11)^0,w,c
 19180  018CD2  6FD8               	movwf	(_D+216)& (0+255),b
 19181                           
 19182                           ; BSR set to: 5
 19183                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19184  018CD4  52E5               	movf	postdec1,f,c
 19185  018CD6  0012               	return		;funcret
 19186  018CD8                     __end_of_set_vterm:
 19187                           	opt callstack 0
 19188                           
 19189 ;; *************** function _set_temp_display_help *****************
 19190 ;; Defined at:
 19191 ;;		line 211 in file "mconfig.c"
 19192 ;; Parameters:    Size  Location     Type
 19193 ;;  new_response    1  [STACK] const enum E16501
 19194 ;; Auto vars:     Size  Location     Type
 19195 ;;		None
 19196 ;; Return value:  Size  Location     Type
 19197 ;;                  1  [STACK] enum E16501
 19198 ;; Registers used:
 19199 ;;		wreg, fsr1l, fsr1h
 19200 ;; Tracked objects:
 19201 ;;		On entry : 0/5
 19202 ;;		On exit  : 3F/2
 19203 ;;		Unchanged: 0/0
 19204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19209 ;;Total ram usage:        0 bytes
 19210 ;; Hardware stack levels used:    1
 19211 ;; Hardware stack levels required when called:    6
 19212 ;; This function calls:
 19213 ;;		Nothing
 19214 ;; This function is called by:
 19215 ;;		_check_help
 19216 ;; This function uses a reentrant model
 19217 ;;
 19218                           
 19219                           	psect	text74
 19220  018DBE                     __ptext74:
 19221                           	opt callstack 0
 19222  018DBE                     _set_temp_display_help:
 19223                           	opt callstack 23
 19224                           
 19225                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19226                           
 19227                           ; BSR set to: 5
 19228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19229                           ;incstack = 0
 19230  018DBE  0102               	movlb	2	; () banked
 19231  018DC0  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19232                           
 19233                           ; BSR set to: 2
 19234                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19235                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19236  018DC2  0EFF               	movlw	-1
 19237  018DC4  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19238                           
 19239                           ; BSR set to: 2
 19240                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19241  018DCA  52E5               	movf	postdec1,f,c
 19242  018DCC  0012               	return		;funcret
 19243  018DCE                     __end_of_set_temp_display_help:
 19244                           	opt callstack 0
 19245                           
 19246 ;; *************** function _set_display_info *****************
 19247 ;; Defined at:
 19248 ;;		line 200 in file "mconfig.c"
 19249 ;; Parameters:    Size  Location     Type
 19250 ;;  new_response    1  [STACK] const enum E16501
 19251 ;; Auto vars:     Size  Location     Type
 19252 ;;		None
 19253 ;; Return value:  Size  Location     Type
 19254 ;;                  1  [STACK] enum E16986
 19255 ;; Registers used:
 19256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19257 ;; Tracked objects:
 19258 ;;		On entry : 0/39
 19259 ;;		On exit  : 0/0
 19260 ;;		Unchanged: 0/0
 19261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19266 ;;Total ram usage:        0 bytes
 19267 ;; Hardware stack levels used:    1
 19268 ;; Hardware stack levels required when called:    7
 19269 ;; This function calls:
 19270 ;;		_TimerDone
 19271 ;; This function is called by:
 19272 ;;		_main
 19273 ;;		_check_help
 19274 ;; This function uses a reentrant model
 19275 ;;
 19276                           
 19277                           	psect	text75
 19278  018C46                     __ptext75:
 19279                           	opt callstack 0
 19280  018C46                     _set_display_info:
 19281                           	opt callstack 23
 19282                           
 19283                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19284                           
 19285                           ; BSR set to: 2
 19286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19287                           ;incstack = 0
 19288  018C46  0E07               	movlw	7
 19289  018C48  6EE6               	movwf	postinc1,c
 19290  018C4A  EC9D  F0C5         	call	_TimerDone	;wreg free
 19291  018C4E  5032               	movf	btemp^0,w,c
 19292  018C50  B4D8               	btfsc	status,2,c
 19293  018C52  D006               	goto	l1635
 19294                           
 19295                           ;mconfig.c: 205:   old_info = V.response.info;
 19296  018C54  0102               	movlb	2	; () banked
 19297  018C56  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19298                           
 19299                           ; BSR set to: 2
 19300                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19301                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19302  018C58  0EFF               	movlw	-1
 19303  018C5A  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19304  018C60                     l1635:
 19305                           
 19306                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19307  018C60  52E5               	movf	postdec1,f,c
 19308  018C62  0012               	return		;funcret
 19309  018C64                     __end_of_set_display_info:
 19310                           	opt callstack 0
 19311                           
 19312 ;; *************** function _mode_lamp_dim *****************
 19313 ;; Defined at:
 19314 ;;		line 13 in file "mconfig.c"
 19315 ;; Parameters:    Size  Location     Type
 19316 ;;  level           2  [STACK] const unsigned short 
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;		None
 19319 ;; Return value:  Size  Location     Type
 19320 ;;                  1  [STACK] void 
 19321 ;; Registers used:
 19322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19323 ;; Tracked objects:
 19324 ;;		On entry : 0/2
 19325 ;;		On exit  : 0/0
 19326 ;;		Unchanged: 0/0
 19327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19332 ;;Total ram usage:        0 bytes
 19333 ;; Hardware stack levels used:    1
 19334 ;; Hardware stack levels required when called:    7
 19335 ;; This function calls:
 19336 ;;		_PWM8_LoadDutyValue
 19337 ;; This function is called by:
 19338 ;;		_main
 19339 ;;		_check_help
 19340 ;; This function uses a reentrant model
 19341 ;;
 19342                           
 19343                           	psect	text76
 19344  018D0E                     __ptext76:
 19345                           	opt callstack 0
 19346  018D0E                     _mode_lamp_dim:
 19347                           	opt callstack 23
 19348                           
 19349                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19350                           ;stkvar	_level @ sp[(0)+-2]
 19351                           
 19352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19353                           ;incstack = 0
 19354  018D0E  0EFE               	movlw	-2
 19355  018D10  006F FF8F FFE6     	movff	plusw1,postinc1
 19356  018D16  006F FF8F FFE6     	movff	plusw1,postinc1
 19357  018D1C  EC3D  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19358                           
 19359                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19360  018D20  52E5               	movf	postdec1,f,c
 19361  018D22  52E5               	movf	postdec1,f,c
 19362  018D24  0012               	return		;funcret
 19363  018D26                     __end_of_mode_lamp_dim:
 19364                           	opt callstack 0
 19365                           
 19366 ;; *************** function _mode_lamp_bright *****************
 19367 ;; Defined at:
 19368 ;;		line 18 in file "mconfig.c"
 19369 ;; Parameters:    Size  Location     Type
 19370 ;;		None
 19371 ;; Auto vars:     Size  Location     Type
 19372 ;;		None
 19373 ;; Return value:  Size  Location     Type
 19374 ;;                  1  [STACK] void 
 19375 ;; Registers used:
 19376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19377 ;; Tracked objects:
 19378 ;;		On entry : 0/2
 19379 ;;		On exit  : 0/0
 19380 ;;		Unchanged: 0/0
 19381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19386 ;;Total ram usage:        0 bytes
 19387 ;; Hardware stack levels used:    1
 19388 ;; Hardware stack levels required when called:    7
 19389 ;; This function calls:
 19390 ;;		_PWM8_LoadDutyValue
 19391 ;; This function is called by:
 19392 ;;		_check_help
 19393 ;; This function uses a reentrant model
 19394 ;;
 19395                           
 19396                           	psect	text77
 19397  018DDC                     __ptext77:
 19398                           	opt callstack 0
 19399  018DDC                     _mode_lamp_bright:
 19400                           	opt callstack 22
 19401                           
 19402                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19403                           
 19404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19405                           ;incstack = 0
 19406  018DDC  0E2C               	movlw	44
 19407  018DDE  6EE6               	movwf	postinc1,c
 19408  018DE0  0E01               	movlw	1
 19409  018DE2  6EE6               	movwf	postinc1,c
 19410  018DE4  EC3D  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19411                           
 19412                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19413  018DE8  0012               	return		;funcret
 19414  018DEA                     __end_of_mode_lamp_bright:
 19415                           	opt callstack 0
 19416                           
 19417 ;; *************** function _PWM8_LoadDutyValue *****************
 19418 ;; Defined at:
 19419 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19420 ;; Parameters:    Size  Location     Type
 19421 ;;  dutyValue       2  [STACK] unsigned short 
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;		None
 19424 ;; Return value:  Size  Location     Type
 19425 ;;                  1  [STACK] void 
 19426 ;; Registers used:
 19427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19428 ;; Tracked objects:
 19429 ;;		On entry : 0/2
 19430 ;;		On exit  : 0/0
 19431 ;;		Unchanged: 0/0
 19432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19437 ;;Total ram usage:        0 bytes
 19438 ;; Hardware stack levels used:    1
 19439 ;; Hardware stack levels required when called:    6
 19440 ;; This function calls:
 19441 ;;		Nothing
 19442 ;; This function is called by:
 19443 ;;		_mode_lamp_dim
 19444 ;;		_mode_lamp_bright
 19445 ;; This function uses a reentrant model
 19446 ;;
 19447                           
 19448                           	psect	text78
 19449  01847A                     __ptext78:
 19450                           	opt callstack 0
 19451  01847A                     _PWM8_LoadDutyValue:
 19452                           	opt callstack 23
 19453                           
 19454                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19455                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19456                           
 19457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19458                           ;incstack = 0
 19459  01847A  0EFE               	movlw	-2
 19460  01847C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19461  018482  0EFF               	movlw	-1
 19462  018484  006F FF8C  F03D    	movff	plusw1,btemp+11
 19463  01848A  90D8               	bcf	status,0,c
 19464  01848C  323D               	rrcf	(btemp+11)^0,f,c
 19465  01848E  323C               	rrcf	(btemp+10)^0,f,c
 19466  018490  90D8               	bcf	status,0,c
 19467  018492  323D               	rrcf	(btemp+11)^0,f,c
 19468  018494  323C               	rrcf	(btemp+10)^0,f,c
 19469  018496  503C               	movf	(btemp+10)^0,w,c
 19470  018498  6E61               	movwf	97,c	;volatile
 19471                           
 19472                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19473                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19474  01849A  0EFE               	movlw	-2
 19475  01849C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19476  0184A2  0E03               	movlw	3
 19477  0184A4  163D               	andwf	(btemp+11)^0,f,c
 19478  0184A6  0E06               	movlw	6
 19479  0184A8  6E32               	movwf	btemp^0,c
 19480  0184AA                     u7925:
 19481  0184AA  90D8               	bcf	status,0,c
 19482  0184AC  363D               	rlcf	(btemp+11)^0,f,c
 19483  0184AE  2E32               	decfsz	btemp^0,f,c
 19484  0184B0  D7FC               	goto	u7925
 19485  0184B2  503D               	movf	(btemp+11)^0,w,c
 19486  0184B4  6E60               	movwf	96,c	;volatile
 19487                           
 19488                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19489  0184B6  52E5               	movf	postdec1,f,c
 19490  0184B8  52E5               	movf	postdec1,f,c
 19491  0184BA  0012               	return		;funcret
 19492  0184BC                     __end_of_PWM8_LoadDutyValue:
 19493                           	opt callstack 0
 19494                           
 19495 ;; *************** function _help_button *****************
 19496 ;; Defined at:
 19497 ;;		line 26 in file "mconfig.c"
 19498 ;; Parameters:    Size  Location     Type
 19499 ;;		None
 19500 ;; Auto vars:     Size  Location     Type
 19501 ;;		None
 19502 ;; Return value:  Size  Location     Type
 19503 ;;                  1  [STACK] _Bool 
 19504 ;; Registers used:
 19505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19506 ;; Tracked objects:
 19507 ;;		On entry : 0/2
 19508 ;;		On exit  : 0/0
 19509 ;;		Unchanged: 0/0
 19510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19515 ;;Total ram usage:        0 bytes
 19516 ;; Hardware stack levels used:    1
 19517 ;; Hardware stack levels required when called:    7
 19518 ;; This function calls:
 19519 ;;		_StartTimer
 19520 ;;		_TimerDone
 19521 ;; This function is called by:
 19522 ;;		_check_help
 19523 ;; This function uses a reentrant model
 19524 ;;
 19525                           
 19526                           	psect	text79
 19527  018576                     __ptext79:
 19528                           	opt callstack 0
 19529  018576                     _help_button:
 19530                           	opt callstack 22
 19531                           
 19532                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19533                           
 19534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19535                           ;incstack = 0
 19536  018576  B0CB               	btfsc	203,0,c	;volatile
 19537  018578  D00C               	goto	l1578
 19538                           
 19539                           ;mconfig.c: 29:   V.help = 1;
 19540  01857A  0102               	movlb	2	; () banked
 19541  01857C  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19542                           
 19543                           ; BSR set to: 2
 19544                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19545  01857E  0E08               	movlw	8
 19546  018580  6EE6               	movwf	postinc1,c
 19547  018582  EC9D  F0C5         	call	_TimerDone	;wreg free
 19548  018586  5032               	movf	btemp^0,w,c
 19549  018588  B4D8               	btfsc	status,2,c
 19550  01858A  D003               	goto	l1578
 19551                           
 19552                           ;mconfig.c: 31:    return 1;
 19553  01858C  0E01               	movlw	1
 19554  01858E  6E32               	movwf	btemp^0,c
 19555  018590  0012               	return	
 19556  018592                     l1578:
 19557                           
 19558                           ;mconfig.c: 34:  if (!V.help)
 19559  018592  0102               	movlb	2	; () banked
 19560  018594  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19561  018596  D008               	goto	l8800
 19562                           
 19563                           ; BSR set to: 2
 19564                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19565  018598  0E2C               	movlw	44
 19566  01859A  6EE6               	movwf	postinc1,c
 19567  01859C  0E01               	movlw	1
 19568  01859E  6EE6               	movwf	postinc1,c
 19569  0185A0  0E08               	movlw	8
 19570  0185A2  6EE6               	movwf	postinc1,c
 19571  0185A4  EC9D  F0C2         	call	_StartTimer	;wreg free
 19572  0185A8                     l8800:
 19573                           
 19574                           ;mconfig.c: 37:  return 0;
 19575  0185A8  0E00               	movlw	0
 19576  0185AA  6E32               	movwf	btemp^0,c
 19577                           
 19578                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19579  0185AC  0012               	return		;funcret
 19580  0185AE                     __end_of_help_button:
 19581                           	opt callstack 0
 19582                           
 19583 ;; *************** function _TimerDone *****************
 19584 ;; Defined at:
 19585 ;;		line 20 in file "timers.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;  timer           1  [STACK] const unsigned char 
 19588 ;; Auto vars:     Size  Location     Type
 19589 ;;		None
 19590 ;; Return value:  Size  Location     Type
 19591 ;;                  1  [STACK] _Bool 
 19592 ;; Registers used:
 19593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19594 ;; Tracked objects:
 19595 ;;		On entry : 0/39
 19596 ;;		On exit  : 0/0
 19597 ;;		Unchanged: 0/0
 19598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19603 ;;Total ram usage:        0 bytes
 19604 ;; Hardware stack levels used:    1
 19605 ;; Hardware stack levels required when called:    6
 19606 ;; This function calls:
 19607 ;;		Nothing
 19608 ;; This function is called by:
 19609 ;;		_main
 19610 ;;		_WaitMs
 19611 ;;		_help_button
 19612 ;;		_check_help
 19613 ;;		_set_display_info
 19614 ;; This function uses a reentrant model
 19615 ;;
 19616                           
 19617                           	psect	text80
 19618  018B3A                     __ptext80:
 19619                           	opt callstack 0
 19620  018B3A                     _TimerDone:
 19621                           	opt callstack 23
 19622                           
 19623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19624                           ;incstack = 0
 19625  018B3A  0004               	clrwdt		;# 
 19626                           
 19627                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19628                           ;stkvar	_timer @ sp[(0)+-1]
 19629  018B3C  0EFF               	movlw	-1
 19630  018B3E  50E3               	movf	plusw1,w,c
 19631  018B40  0D02               	mullw	2
 19632  018B42  50F3               	movf	243,w,c
 19633  018B44  0F89               	addlw	low _tickCount
 19634  018B46  6ED9               	movwf	fsr2l,c
 19635  018B48  6ADA               	clrf	fsr2h,c
 19636  018B4A  50DE               	movf	postinc2,w,c
 19637  018B4C  10DE               	iorwf	postinc2,w,c
 19638  018B4E  A4D8               	btfss	status,2,c
 19639  018B50  D002               	goto	l8162
 19640                           
 19641                           ;timers.c: 24:   return 1;
 19642  018B52  0E01               	movlw	1
 19643  018B54  D001               	goto	L20
 19644  018B56                     l8162:
 19645                           
 19646                           ;timers.c: 26:  return 0;
 19647  018B56  0E00               	movlw	0
 19648  018B58                     L20:
 19649  018B58  6E32               	movwf	btemp^0,c
 19650                           
 19651                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19652  018B5A  52E5               	movf	postdec1,f,c
 19653  018B5C  0012               	return		;funcret
 19654  018B5E                     __end_of_TimerDone:
 19655                           	opt callstack 0
 19656                           
 19657 ;; *************** function _StartTimer *****************
 19658 ;; Defined at:
 19659 ;;		line 12 in file "timers.c"
 19660 ;; Parameters:    Size  Location     Type
 19661 ;;  timer           1  [STACK] const unsigned char 
 19662 ;;  count           2  [STACK] const unsigned short 
 19663 ;; Auto vars:     Size  Location     Type
 19664 ;;		None
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  1  [STACK] void 
 19667 ;; Registers used:
 19668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/5
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19678 ;;Total ram usage:        0 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:    6
 19681 ;; This function calls:
 19682 ;;		Nothing
 19683 ;; This function is called by:
 19684 ;;		_main
 19685 ;;		_WaitMs
 19686 ;;		_help_button
 19687 ;;		_check_help
 19688 ;; This function uses a reentrant model
 19689 ;;
 19690                           
 19691                           	psect	text81
 19692  01853A                     __ptext81:
 19693                           	opt callstack 0
 19694  01853A                     _StartTimer:
 19695                           	opt callstack 21
 19696                           
 19697                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19698                           ;stkvar	_count @ sp[(0)+-3]
 19699                           
 19700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19701                           ;incstack = 0
 19702  01853A  0EFD               	movlw	-3
 19703  01853C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19704  018542  0EFE               	movlw	-2
 19705  018544  006F FF8C  F03D    	movff	plusw1,btemp+11
 19706  01854A  90D8               	bcf	status,0,c
 19707  01854C  343C               	rlcf	(btemp+10)^0,w,c
 19708  01854E  6E3A               	movwf	(btemp+8)^0,c
 19709  018550  343D               	rlcf	(btemp+11)^0,w,c
 19710  018552  6E3B               	movwf	(btemp+9)^0,c
 19711                           
 19712                           ;stkvar	_timer @ sp[(0)+-1]
 19713  018554  0EFF               	movlw	-1
 19714  018556  50E3               	movf	plusw1,w,c
 19715  018558  0D02               	mullw	2
 19716  01855A  50F3               	movf	243,w,c
 19717  01855C  0F89               	addlw	low _tickCount
 19718  01855E  6ED9               	movwf	fsr2l,c
 19719  018560  6ADA               	clrf	fsr2h,c
 19720  018562  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19721  018568  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19722                           
 19723                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19724  01856E  52E5               	movf	postdec1,f,c
 19725  018570  52E5               	movf	postdec1,f,c
 19726  018572  52E5               	movf	postdec1,f,c
 19727  018574  0012               	return		;funcret
 19728  018576                     __end_of_StartTimer:
 19729                           	opt callstack 0
 19730                           
 19731 ;; *************** function _display_info *****************
 19732 ;; Defined at:
 19733 ;;		line 190 in file "mconfig.c"
 19734 ;; Parameters:    Size  Location     Type
 19735 ;;		None
 19736 ;; Auto vars:     Size  Location     Type
 19737 ;;		None
 19738 ;; Return value:  Size  Location     Type
 19739 ;;                  1  [STACK] enum E16501
 19740 ;; Registers used:
 19741 ;;		btemp
 19742 ;; Tracked objects:
 19743 ;;		On entry : 0/2
 19744 ;;		On exit  : 0/0
 19745 ;;		Unchanged: 0/0
 19746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19751 ;;Total ram usage:        0 bytes
 19752 ;; Hardware stack levels used:    1
 19753 ;; Hardware stack levels required when called:    6
 19754 ;; This function calls:
 19755 ;;		Nothing
 19756 ;; This function is called by:
 19757 ;;		_check_help
 19758 ;; This function uses a reentrant model
 19759 ;;
 19760                           
 19761                           	psect	text82
 19762  018E3E                     __ptext82:
 19763                           	opt callstack 0
 19764  018E3E                     _display_info:
 19765                           	opt callstack 23
 19766                           
 19767                           ;mconfig.c: 192:  return V.response.info;
 19768                           
 19769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19770                           ;incstack = 0
 19771  018E3E  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19772                           
 19773                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19774  018E44  0012               	return		;funcret
 19775  018E46                     __end_of_display_info:
 19776                           	opt callstack 0
 19777                           
 19778 ;; *************** function _display_help *****************
 19779 ;; Defined at:
 19780 ;;		line 195 in file "mconfig.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;		None
 19783 ;; Auto vars:     Size  Location     Type
 19784 ;;		None
 19785 ;; Return value:  Size  Location     Type
 19786 ;;                  1  [STACK] enum E16501
 19787 ;; Registers used:
 19788 ;;		btemp
 19789 ;; Tracked objects:
 19790 ;;		On entry : 3F/2
 19791 ;;		On exit  : 0/0
 19792 ;;		Unchanged: 0/0
 19793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19798 ;;Total ram usage:        0 bytes
 19799 ;; Hardware stack levels used:    1
 19800 ;; Hardware stack levels required when called:    6
 19801 ;; This function calls:
 19802 ;;		Nothing
 19803 ;; This function is called by:
 19804 ;;		_check_help
 19805 ;; This function uses a reentrant model
 19806 ;;
 19807                           
 19808                           	psect	text83
 19809  018E46                     __ptext83:
 19810                           	opt callstack 0
 19811  018E46                     _display_help:
 19812                           	opt callstack 23
 19813                           
 19814                           ;mconfig.c: 197:  return V.response.help_temp;
 19815                           
 19816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19817                           ;incstack = 0
 19818  018E46  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19819                           
 19820                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19821  018E4C  0012               	return		;funcret
 19822  018E4E                     __end_of_display_help:
 19823                           	opt callstack 0
 19824                           
 19825 ;; *************** function _check_adc_scan *****************
 19826 ;; Defined at:
 19827 ;;		line 56 in file "daq.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;		None
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;		None
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  1  [STACK] _Bool 
 19834 ;; Registers used:
 19835 ;;		btemp
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/39
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19845 ;;Total ram usage:        0 bytes
 19846 ;; Hardware stack levels used:    1
 19847 ;; Hardware stack levels required when called:    6
 19848 ;; This function calls:
 19849 ;;		Nothing
 19850 ;; This function is called by:
 19851 ;;		_main
 19852 ;; This function uses a reentrant model
 19853 ;;
 19854                           
 19855                           	psect	text84
 19856  018E4E                     __ptext84:
 19857                           	opt callstack 0
 19858  018E4E                     _check_adc_scan:
 19859                           	opt callstack 24
 19860                           
 19861                           ;daq.c: 58:  return R.done;
 19862                           
 19863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19864                           ;incstack = 0
 19865  018E4E  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19866                           
 19867                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19868  018E54  0012               	return		;funcret
 19869  018E56                     __end_of_check_adc_scan:
 19870                           	opt callstack 0
 19871                           
 19872 ;; *************** function _calc_model_data *****************
 19873 ;; Defined at:
 19874 ;;		line 55 in file "mbmc.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;		None
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;		None
 19879 ;; Return value:  Size  Location     Type
 19880 ;;                  1  [STACK] void 
 19881 ;; Registers used:
 19882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19883 ;; Tracked objects:
 19884 ;;		On entry : 0/39
 19885 ;;		On exit  : 3F/1
 19886 ;;		Unchanged: 0/0
 19887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19892 ;;Total ram usage:        0 bytes
 19893 ;; Hardware stack levels used:    1
 19894 ;; Hardware stack levels required when called:    9
 19895 ;; This function calls:
 19896 ;;		___fladd
 19897 ;;		___flmul
 19898 ;;		___flsub
 19899 ;;		_lp_filter
 19900 ;; This function is called by:
 19901 ;;		_main
 19902 ;; This function uses a reentrant model
 19903 ;;
 19904                           
 19905                           	psect	text85
 19906  014E6E                     __ptext85:
 19907                           	opt callstack 0
 19908  014E6E                     _calc_model_data:
 19909                           	opt callstack 21
 19910                           
 19911                           ;mbmc.c: 57:  C.c_bat = C.calc[C_BATT];
 19912                           
 19913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19914                           ;incstack = 0
 19915  014E6E  C100  F144         	movff	_C,_C+68
 19916  014E72  C101  F145         	movff	_C+1,_C+69
 19917  014E76  C102  F146         	movff	_C+2,_C+70
 19918  014E7A  C103  F147         	movff	_C+3,_C+71
 19919                           
 19920                           ;mbmc.c: 58:  C.c_pv = C.calc[C_PV];
 19921  014E7E  C104  F148         	movff	_C+4,_C+72
 19922  014E82  C105  F149         	movff	_C+5,_C+73
 19923  014E86  C106  F14A         	movff	_C+6,_C+74
 19924  014E8A  C107  F14B         	movff	_C+7,_C+75
 19925                           
 19926                           ;mbmc.c: 59:  C.v_bat = C.calc[V_BAT];
 19927  014E8E  C110  F154         	movff	_C+16,_C+84
 19928  014E92  C111  F155         	movff	_C+17,_C+85
 19929  014E96  C112  F156         	movff	_C+18,_C+86
 19930  014E9A  C113  F157         	movff	_C+19,_C+87
 19931                           
 19932                           ;mbmc.c: 60:  C.v_pv = C.calc[V_PV];
 19933  014E9E  C114  F150         	movff	_C+20,_C+80
 19934  014EA2  C115  F151         	movff	_C+21,_C+81
 19935  014EA6  C116  F152         	movff	_C+22,_C+82
 19936  014EAA  C117  F153         	movff	_C+23,_C+83
 19937                           
 19938                           ;mbmc.c: 61:  C.v_inverter = C.calc[V_INVERTER];
 19939  014EAE  C130  F164         	movff	_C+48,_C+100
 19940  014EB2  C131  F165         	movff	_C+49,_C+101
 19941  014EB6  C132  F166         	movff	_C+50,_C+102
 19942  014EBA  C133  F167         	movff	_C+51,_C+103
 19943                           
 19944                           ;mbmc.c: 62:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 19945  014EBE  0E01               	movlw	1
 19946  014EC0  6EE6               	movwf	postinc1,c
 19947  014EC2  0E10               	movlw	16
 19948  014EC4  6EE6               	movwf	postinc1,c
 19949  014EC6  0060  F403  FFE6   	movff	_C,postinc1
 19950  014ECC  0060  F407  FFE6   	movff	_C+1,postinc1
 19951  014ED2  0060  F40B  FFE6   	movff	_C+2,postinc1
 19952  014ED8  0060  F40F  FFE6   	movff	_C+3,postinc1
 19953  014EDE  0060  F413  FFE6   	movff	_C+4,postinc1
 19954  014EE4  0060  F417  FFE6   	movff	_C+5,postinc1
 19955  014EEA  0060  F41B  FFE6   	movff	_C+6,postinc1
 19956  014EF0  0060  F41F  FFE6   	movff	_C+7,postinc1
 19957  014EF6  EC8F  F0C1         	call	___flsub	;wreg free
 19958  014EFA  0060  F0CB  FFE6   	movff	btemp,postinc1
 19959  014F00  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19960  014F06  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19961  014F0C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19962  014F12  EC8C  F0B0         	call	_lp_filter	;wreg free
 19963  014F16  0060  F0C8  F140   	movff	btemp,_C+64
 19964  014F1C  0060  F0CC  F141   	movff	btemp+1,_C+65
 19965  014F22  0060  F0D0  F142   	movff	btemp+2,_C+66
 19966  014F28  0060  F0D4  F143   	movff	btemp+3,_C+67
 19967                           
 19968                           ;mbmc.c: 63:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 19969  014F2E  0E01               	movlw	1
 19970  014F30  6EE6               	movwf	postinc1,c
 19971  014F32  0E11               	movlw	17
 19972  014F34  6EE6               	movwf	postinc1,c
 19973  014F36  0060  F553  FFE6   	movff	_C+84,postinc1
 19974  014F3C  0060  F557  FFE6   	movff	_C+85,postinc1
 19975  014F42  0060  F55B  FFE6   	movff	_C+86,postinc1
 19976  014F48  0060  F55F  FFE6   	movff	_C+87,postinc1
 19977  014F4E  0060  F503  FFE6   	movff	_C+64,postinc1
 19978  014F54  0060  F507  FFE6   	movff	_C+65,postinc1
 19979  014F5A  0060  F50B  FFE6   	movff	_C+66,postinc1
 19980  014F60  0060  F50F  FFE6   	movff	_C+67,postinc1
 19981  014F66  ECE8  F092         	call	___flmul	;wreg free
 19982  014F6A  0060  F0CB  FFE6   	movff	btemp,postinc1
 19983  014F70  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19984  014F76  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19985  014F7C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19986  014F82  EC8C  F0B0         	call	_lp_filter	;wreg free
 19987  014F86  0060  F0C8  F168   	movff	btemp,_C+104
 19988  014F8C  0060  F0CC  F169   	movff	btemp+1,_C+105
 19989  014F92  0060  F0D0  F16A   	movff	btemp+2,_C+106
 19990  014F98  0060  F0D4  F16B   	movff	btemp+3,_C+107
 19991                           
 19992                           ;mbmc.c: 64:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 19993  014F9E  0E01               	movlw	1
 19994  014FA0  6EE6               	movwf	postinc1,c
 19995  014FA2  0E12               	movlw	18
 19996  014FA4  6EE6               	movwf	postinc1,c
 19997  014FA6  0060  F543  FFE6   	movff	_C+80,postinc1
 19998  014FAC  0060  F547  FFE6   	movff	_C+81,postinc1
 19999  014FB2  0060  F54B  FFE6   	movff	_C+82,postinc1
 20000  014FB8  0060  F54F  FFE6   	movff	_C+83,postinc1
 20001  014FBE  0060  F523  FFE6   	movff	_C+72,postinc1
 20002  014FC4  0060  F527  FFE6   	movff	_C+73,postinc1
 20003  014FCA  0060  F52B  FFE6   	movff	_C+74,postinc1
 20004  014FD0  0060  F52F  FFE6   	movff	_C+75,postinc1
 20005  014FD6  ECE8  F092         	call	___flmul	;wreg free
 20006  014FDA  0060  F0CB  FFE6   	movff	btemp,postinc1
 20007  014FE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20008  014FE6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20009  014FEC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20010  014FF2  EC8C  F0B0         	call	_lp_filter	;wreg free
 20011  014FF6  0060  F0C8  F170   	movff	btemp,_C+112
 20012  014FFC  0060  F0CC  F171   	movff	btemp+1,_C+113
 20013  015002  0060  F0D0  F172   	movff	btemp+2,_C+114
 20014  015008  0060  F0D4  F173   	movff	btemp+3,_C+115
 20015                           
 20016                           ;mbmc.c: 65:  C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20017  01500E  0E01               	movlw	1
 20018  015010  6EE6               	movwf	postinc1,c
 20019  015012  0E13               	movlw	19
 20020  015014  6EE6               	movwf	postinc1,c
 20021  015016  0E00               	movlw	0
 20022  015018  6EE6               	movwf	postinc1,c
 20023  01501A  0E00               	movlw	0
 20024  01501C  6EE6               	movwf	postinc1,c
 20025  01501E  0E60               	movlw	96
 20026  015020  6EE6               	movwf	postinc1,c
 20027  015022  0EC1               	movlw	193
 20028  015024  6EE6               	movwf	postinc1,c
 20029  015026  0060  F593  FFE6   	movff	_C+100,postinc1
 20030  01502C  0060  F597  FFE6   	movff	_C+101,postinc1
 20031  015032  0060  F59B  FFE6   	movff	_C+102,postinc1
 20032  015038  0060  F59F  FFE6   	movff	_C+103,postinc1
 20033  01503E  0060  F503  FFE6   	movff	_C+64,postinc1
 20034  015044  0060  F507  FFE6   	movff	_C+65,postinc1
 20035  01504A  0060  F50B  FFE6   	movff	_C+66,postinc1
 20036  015050  0060  F50F  FFE6   	movff	_C+67,postinc1
 20037  015056  ECE8  F092         	call	___flmul	;wreg free
 20038  01505A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20039  015060  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20040  015066  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20041  01506C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20042  015072  ECFD  F096         	call	___fladd	;wreg free
 20043  015076  0060  F0CB  FFE6   	movff	btemp,postinc1
 20044  01507C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20045  015082  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20046  015088  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20047  01508E  EC8C  F0B0         	call	_lp_filter	;wreg free
 20048  015092  0060  F0C8  F16C   	movff	btemp,_C+108
 20049  015098  0060  F0CC  F16D   	movff	btemp+1,_C+109
 20050  01509E  0060  F0D0  F16E   	movff	btemp+2,_C+110
 20051  0150A4  0060  F0D4  F16F   	movff	btemp+3,_C+111
 20052                           
 20053                           ;mbmc.c: 66:  C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20054  0150AA  0E01               	movlw	1
 20055  0150AC  6EE6               	movwf	postinc1,c
 20056  0150AE  0E14               	movlw	20
 20057  0150B0  6EE6               	movwf	postinc1,c
 20058  0150B2  0060  F553  FFE6   	movff	_C+84,postinc1
 20059  0150B8  0060  F557  FFE6   	movff	_C+85,postinc1
 20060  0150BE  0060  F55B  FFE6   	movff	_C+86,postinc1
 20061  0150C4  0060  F55F  FFE6   	movff	_C+87,postinc1
 20062  0150CA  0060  F513  FFE6   	movff	_C+68,postinc1
 20063  0150D0  0060  F517  FFE6   	movff	_C+69,postinc1
 20064  0150D6  0060  F51B  FFE6   	movff	_C+70,postinc1
 20065  0150DC  0060  F51F  FFE6   	movff	_C+71,postinc1
 20066  0150E2  ECE8  F092         	call	___flmul	;wreg free
 20067  0150E6  0060  F0CB  FFE6   	movff	btemp,postinc1
 20068  0150EC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20069  0150F2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20070  0150F8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20071  0150FE  EC8C  F0B0         	call	_lp_filter	;wreg free
 20072  015102  0060  F0C8  F174   	movff	btemp,_C+116
 20073  015108  0060  F0CC  F175   	movff	btemp+1,_C+117
 20074  01510E  0060  F0D0  F176   	movff	btemp+2,_C+118
 20075  015114  0060  F0D4  F177   	movff	btemp+3,_C+119
 20076                           
 20077                           ;mbmc.c: 70:  if (C.p_inverter < 0.0)
 20078  01511A  0101               	movlb	1	; () banked
 20079  01511C  AF6F               	btfss	(_C+111)& (0+255),7,b
 20080  01511E  0012               	return	
 20081                           
 20082                           ; BSR set to: 1
 20083                           ;mbmc.c: 71:   C.p_inverter = 0.0001;
 20084  015120  0E17               	movlw	23
 20085  015122  6F6C               	movwf	(_C+108)& (0+255),b
 20086  015124  0EB7               	movlw	183
 20087  015126  6F6D               	movwf	(_C+109)& (0+255),b
 20088  015128  0ED1               	movlw	209
 20089  01512A  6F6E               	movwf	(_C+110)& (0+255),b
 20090  01512C  0E38               	movlw	56
 20091  01512E  6F6F               	movwf	(_C+111)& (0+255),b
 20092                           
 20093                           ; BSR set to: 1
 20094                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20095  015130  0012               	return		;funcret
 20096  015132                     __end_of_calc_model_data:
 20097                           	opt callstack 0
 20098                           
 20099 ;; *************** function _lp_filter *****************
 20100 ;; Defined at:
 20101 ;;		line 17 in file "mbmc.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;  new             4  [STACK] const float 
 20104 ;;  bn              1  [STACK] const unsigned char 
 20105 ;;  slow            1  [STACK] const char 
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;  lp_speed        4  [STACK] float 
 20108 ;; Return value:  Size  Location     Type
 20109 ;;                  4  [STACK] float 
 20110 ;; Registers used:
 20111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20112 ;; Tracked objects:
 20113 ;;		On entry : 0/2
 20114 ;;		On exit  : 0/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20121 ;;Total ram usage:        0 bytes
 20122 ;; Hardware stack levels used:    1
 20123 ;; Hardware stack levels required when called:    8
 20124 ;; This function calls:
 20125 ;;		___fladd
 20126 ;;		___flmul
 20127 ;;		___flsub
 20128 ;; This function is called by:
 20129 ;;		_main
 20130 ;;		_convert_adc_data
 20131 ;;		_calc_model_data
 20132 ;; This function uses a reentrant model
 20133 ;;
 20134                           
 20135                           	psect	text86
 20136  016118                     __ptext86:
 20137                           	opt callstack 0
 20138  016118                     _lp_filter:
 20139                           	opt callstack 0
 20140                           
 20141                           ; BSR set to: 1
 20142                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20143  016118  52E6               	movf	postinc1,f,c
 20144  01611A  52E6               	movf	postinc1,f,c
 20145  01611C  52E6               	movf	postinc1,f,c
 20146  01611E  52E6               	movf	postinc1,f,c
 20147                           
 20148                           ;mbmc.c: 17: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 18: {;mbmc.c: 19:  static float smooth[16 +5];;mbmc.c: 20:  float lp_speed;;mbmc.c: 2
      +                          2:  if (bn >= 16 +5)
 20149                           ;stkvar	_bn @ sp[(-4)+-5]
 20150                           
 20151                           ;incstack = 0
 20152  016120  0EF7               	movlw	-9
 20153  016122  006F FF8C  F032    	movff	plusw1,btemp
 20154  016128  0E14               	movlw	20
 20155  01612A  6432               	cpfsgt	btemp^0,c
 20156  01612C  D011               	goto	l8754
 20157  01612E                     u8150:
 20158                           
 20159                           ;mbmc.c: 23:   return new;
 20160                           ;stkvar	_new @ sp[(-4)+-4]
 20161  01612E  0EF8               	movlw	-8
 20162  016130  006F FF8C  F032    	movff	plusw1,btemp
 20163  016136  0EF9               	movlw	-7
 20164  016138  006F FF8C  F033    	movff	plusw1,btemp+1
 20165  01613E  0EFA               	movlw	-6
 20166  016140  006F FF8C  F034    	movff	plusw1,btemp+2
 20167  016146  0EFB               	movlw	-5
 20168  016148  006F FF8C  F035    	movff	plusw1,btemp+3
 20169  01614E  D0BF               	goto	l1722
 20170  016150                     l8754:
 20171                           
 20172                           ;mbmc.c: 25:  if (slow == (-1)) {
 20173                           ;stkvar	_slow @ sp[(-4)+-6]
 20174  016150  0EF6               	movlw	-10
 20175  016152  28E3               	incf	plusw1,w,c
 20176  016154  A4D8               	btfss	status,2,c
 20177  016156  D012               	goto	l8762
 20178                           
 20179                           ;mbmc.c: 26:   smooth[bn] = 0.0;
 20180                           ;stkvar	_bn @ sp[(-4)+-5]
 20181  016158  0EF7               	movlw	-9
 20182  01615A  50E3               	movf	plusw1,w,c
 20183  01615C  0D04               	mullw	4
 20184  01615E  0E00               	movlw	low lp_filter@smooth
 20185  016160  24F3               	addwf	243,w,c
 20186  016162  6ED9               	movwf	fsr2l,c
 20187  016164  0E03               	movlw	high lp_filter@smooth
 20188  016166  20F4               	addwfc	prodh,w,c
 20189  016168  6EDA               	movwf	fsr2h,c
 20190  01616A  0E00               	movlw	0
 20191  01616C  6EDE               	movwf	postinc2,c
 20192  01616E  0E00               	movlw	0
 20193  016170  6EDE               	movwf	postinc2,c
 20194  016172  0E00               	movlw	0
 20195  016174  6EDE               	movwf	postinc2,c
 20196  016176  0E00               	movlw	0
 20197  016178  6EDD               	movwf	postdec2,c
 20198  01617A  D7D9               	goto	u8150
 20199  01617C                     l8762:
 20200                           
 20201                           ;mbmc.c: 30:  if (slow) {
 20202                           ;stkvar	_slow @ sp[(-4)+-6]
 20203  01617C  0EF6               	movlw	-10
 20204  01617E  50E3               	movf	plusw1,w,c
 20205  016180  B4D8               	btfsc	status,2,c
 20206  016182  D008               	goto	l8766
 20207                           
 20208                           ;mbmc.c: 31:   lp_speed = 0.033;
 20209  016184  0E02               	movlw	2
 20210  016186  6E3A               	movwf	(btemp+8)^0,c
 20211  016188  0E2B               	movlw	43
 20212  01618A  6E3B               	movwf	(btemp+9)^0,c
 20213  01618C  0E07               	movlw	7
 20214  01618E  6E3C               	movwf	(btemp+10)^0,c
 20215  016190  0E3D               	movlw	61
 20216  016192  D007               	goto	L21
 20217  016194                     l8766:
 20218                           
 20219                           ;mbmc.c: 33:   lp_speed = 0.125;
 20220  016194  0E00               	movlw	0
 20221  016196  6E3A               	movwf	(btemp+8)^0,c
 20222  016198  0E00               	movlw	0
 20223  01619A  6E3B               	movwf	(btemp+9)^0,c
 20224  01619C  0E00               	movlw	0
 20225  01619E  6E3C               	movwf	(btemp+10)^0,c
 20226  0161A0  0E3E               	movlw	62
 20227  0161A2                     L21:
 20228  0161A2  6E3D               	movwf	(btemp+11)^0,c
 20229                           
 20230                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20231  0161A4  0EFC               	movlw	-4
 20232  0161A6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20233  0161AC  0EFD               	movlw	-3
 20234  0161AE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20235  0161B4  0EFE               	movlw	-2
 20236  0161B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20237  0161BC  0EFF               	movlw	-1
 20238  0161BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20239                           
 20240                           ;mbmc.c: 36:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20241                           ;stkvar	_bn @ sp[(-4)+-5]
 20242  0161C4  0EF7               	movlw	-9
 20243  0161C6  50E3               	movf	plusw1,w,c
 20244  0161C8  0D04               	mullw	4
 20245  0161CA  0E00               	movlw	low lp_filter@smooth
 20246  0161CC  24F3               	addwf	243,w,c
 20247  0161CE  6ED9               	movwf	fsr2l,c
 20248  0161D0  0E03               	movlw	high lp_filter@smooth
 20249  0161D2  20F4               	addwfc	prodh,w,c
 20250  0161D4  6EDA               	movwf	fsr2h,c
 20251  0161D6  006F FF7B FFE6     	movff	postinc2,postinc1
 20252  0161DC  006F FF7B FFE6     	movff	postinc2,postinc1
 20253  0161E2  006F FF7B FFE6     	movff	postinc2,postinc1
 20254  0161E8  006F FF7B FFE6     	movff	postinc2,postinc1
 20255                           
 20256                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20257  0161EE  0EF8               	movlw	-8
 20258  0161F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20259  0161F6  006F FF8F FFE6     	movff	plusw1,postinc1
 20260  0161FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20261  016202  006F FF8F FFE6     	movff	plusw1,postinc1
 20262                           
 20263                           ;stkvar	_bn @ sp[(-12)+-5]
 20264  016208  0EEF               	movlw	-17
 20265  01620A  50E3               	movf	plusw1,w,c
 20266  01620C  0D04               	mullw	4
 20267  01620E  0E00               	movlw	low lp_filter@smooth
 20268  016210  24F3               	addwf	243,w,c
 20269  016212  6ED9               	movwf	fsr2l,c
 20270  016214  0E03               	movlw	high lp_filter@smooth
 20271  016216  20F4               	addwfc	prodh,w,c
 20272  016218  6EDA               	movwf	fsr2h,c
 20273  01621A  006F FF7B FFE6     	movff	postinc2,postinc1
 20274  016220  006F FF7B FFE6     	movff	postinc2,postinc1
 20275  016226  006F FF7B FFE6     	movff	postinc2,postinc1
 20276  01622C  006F FF7B FFE6     	movff	postinc2,postinc1
 20277                           
 20278                           ;stkvar	_new @ sp[(-16)+-4]
 20279  016232  0EEC               	movlw	-20
 20280  016234  006F FF8F FFE6     	movff	plusw1,postinc1
 20281  01623A  006F FF8F FFE6     	movff	plusw1,postinc1
 20282  016240  006F FF8F FFE6     	movff	plusw1,postinc1
 20283  016246  006F FF8F FFE6     	movff	plusw1,postinc1
 20284  01624C  EC8F  F0C1         	call	___flsub	;wreg free
 20285  016250  0060  F0CB  FFE6   	movff	btemp,postinc1
 20286  016256  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20287  01625C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20288  016262  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20289  016268  ECE8  F092         	call	___flmul	;wreg free
 20290  01626C  0060  F0CB  FFE6   	movff	btemp,postinc1
 20291  016272  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20292  016278  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20293  01627E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20294  016284  ECFD  F096         	call	___fladd	;wreg free
 20295                           
 20296                           ;stkvar	_bn @ sp[(-4)+-5]
 20297  016288  0EF7               	movlw	-9
 20298  01628A  50E3               	movf	plusw1,w,c
 20299  01628C  0D04               	mullw	4
 20300  01628E  0E00               	movlw	low lp_filter@smooth
 20301  016290  24F3               	addwf	243,w,c
 20302  016292  6ED9               	movwf	fsr2l,c
 20303  016294  0E03               	movlw	high lp_filter@smooth
 20304  016296  20F4               	addwfc	prodh,w,c
 20305  016298  6EDA               	movwf	fsr2h,c
 20306  01629A  0060  F0CB  FFDE   	movff	btemp,postinc2
 20307  0162A0  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 20308  0162A6  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 20309  0162AC  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 20310  0162B2  52DD               	movf	postdec2,f,c
 20311  0162B4  52DD               	movf	postdec2,f,c
 20312  0162B6  006F FF78  F032    	movff	postinc2,btemp
 20313  0162BC  006F FF78  F033    	movff	postinc2,btemp+1
 20314  0162C2  006F FF78  F034    	movff	postinc2,btemp+2
 20315  0162C8  006F FF78  F035    	movff	postinc2,btemp+3
 20316  0162CE                     l1722:
 20317                           
 20318                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20319  0162CE  0EF6               	movlw	246
 20320  0162D0  26E1               	addwf	fsr1l,f,c
 20321  0162D2  0EFF               	movlw	255
 20322  0162D4  22E2               	addwfc	fsr1h,f,c
 20323  0162D6  0012               	return		;funcret
 20324  0162D8                     __end_of_lp_filter:
 20325                           	opt callstack 0
 20326                           
 20327 ;; *************** function ___flsub *****************
 20328 ;; Defined at:
 20329 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20330 ;; Parameters:    Size  Location     Type
 20331 ;;  b               4  [STACK] float 
 20332 ;;  a               4  [STACK] float 
 20333 ;; Auto vars:     Size  Location     Type
 20334 ;;		None
 20335 ;; Return value:  Size  Location     Type
 20336 ;;                  4  [STACK] float 
 20337 ;; Registers used:
 20338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20339 ;; Tracked objects:
 20340 ;;		On entry : 0/2
 20341 ;;		On exit  : 0/0
 20342 ;;		Unchanged: 0/0
 20343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20348 ;;Total ram usage:        0 bytes
 20349 ;; Hardware stack levels used:    1
 20350 ;; Hardware stack levels required when called:    7
 20351 ;; This function calls:
 20352 ;;		___fladd
 20353 ;; This function is called by:
 20354 ;;		_conv_raw_result
 20355 ;;		_lp_filter
 20356 ;;		_calc_model_data
 20357 ;;		_efgtoa
 20358 ;; This function uses a reentrant model
 20359 ;;
 20360                           
 20361                           	psect	text87
 20362  01831E                     __ptext87:
 20363                           	opt callstack 0
 20364  01831E                     ___flsub:
 20365                           	opt callstack 16
 20366                           
 20367                           ;stkvar	_a @ sp[(0)+-8]
 20368                           
 20369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20370                           ;incstack = 0
 20371  01831E  0EFB               	movlw	-5
 20372  018320  7EE3               	btg	plusw1,7,c
 20373                           
 20374                           ;stkvar	_a @ sp[(0)+-8]
 20375  018322  0EF8               	movlw	-8
 20376  018324  006F FF8F FFE6     	movff	plusw1,postinc1
 20377  01832A  006F FF8F FFE6     	movff	plusw1,postinc1
 20378  018330  006F FF8F FFE6     	movff	plusw1,postinc1
 20379  018336  006F FF8F FFE6     	movff	plusw1,postinc1
 20380                           
 20381                           ;stkvar	_b @ sp[(-4)+-4]
 20382  01833C  0EF8               	movlw	-8
 20383  01833E  006F FF8F FFE6     	movff	plusw1,postinc1
 20384  018344  006F FF8F FFE6     	movff	plusw1,postinc1
 20385  01834A  006F FF8F FFE6     	movff	plusw1,postinc1
 20386  018350  006F FF8F FFE6     	movff	plusw1,postinc1
 20387  018356  ECFD  F096         	call	___fladd	;wreg free
 20388                           
 20389                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20390  01835A  0EF8               	movlw	248
 20391  01835C  26E1               	addwf	fsr1l,f,c
 20392  01835E  0EFF               	movlw	255
 20393  018360  22E2               	addwfc	fsr1h,f,c
 20394  018362  0012               	return		;funcret
 20395  018364                     __end_of___flsub:
 20396                           	opt callstack 0
 20397                           
 20398 ;; *************** function ___fladd *****************
 20399 ;; Defined at:
 20400 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  b               4  [STACK] float 
 20403 ;;  a               4  [STACK] float 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;  grs             1  [STACK] unsigned char 
 20406 ;;  bexp            1  [STACK] unsigned char 
 20407 ;;  aexp            1  [STACK] unsigned char 
 20408 ;;  signs           1  [STACK] unsigned char 
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  4  [STACK] unsigned char 
 20411 ;; Registers used:
 20412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20413 ;; Tracked objects:
 20414 ;;		On entry : 0/5
 20415 ;;		On exit  : 0/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20422 ;;Total ram usage:        0 bytes
 20423 ;; Hardware stack levels used:    1
 20424 ;; Hardware stack levels required when called:    6
 20425 ;; This function calls:
 20426 ;;		Nothing
 20427 ;; This function is called by:
 20428 ;;		_lp_filter
 20429 ;;		_calc_model_data
 20430 ;;		_efgtoa
 20431 ;;		___flsub
 20432 ;; This function uses a reentrant model
 20433 ;;
 20434                           
 20435                           	psect	text88
 20436  012DFA                     __ptext88:
 20437                           	opt callstack 0
 20438  012DFA                     ___fladd:
 20439                           	opt callstack 0
 20440                           
 20441                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20442  012DFA  52E6               	movf	postinc1,f,c
 20443  012DFC  52E6               	movf	postinc1,f,c
 20444  012DFE  52E6               	movf	postinc1,f,c
 20445  012E00  52E6               	movf	postinc1,f,c
 20446                           
 20447                           ;stkvar	_b @ sp[(-4)+-4]
 20448                           
 20449                           ;incstack = 0
 20450  012E02  0EFB               	movlw	251
 20451  012E04  24E1               	addwf	fsr1l,w,c
 20452  012E06  6ED9               	movwf	fsr2l,c
 20453  012E08  0EFF               	movlw	255
 20454  012E0A  20E2               	addwfc	fsr1h,w,c
 20455  012E0C  6EDA               	movwf	fsr2h,c
 20456  012E0E  50DF               	movf	indf2,w,c
 20457  012E10  6E3D               	movwf	(btemp+11)^0,c
 20458  012E12  0E80               	movlw	128
 20459  012E14  163D               	andwf	(btemp+11)^0,f,c
 20460                           
 20461                           ;stkvar	_signs @ sp[(-4)+3]
 20462  012E16  0EFF               	movlw	-1
 20463  012E18  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20464                           
 20465                           ;stkvar	_b @ sp[(-4)+-4]
 20466  012E1E  0EFB               	movlw	251
 20467  012E20  24E1               	addwf	fsr1l,w,c
 20468  012E22  6ED9               	movwf	fsr2l,c
 20469  012E24  0EFF               	movlw	255
 20470  012E26  20E2               	addwfc	fsr1h,w,c
 20471  012E28  6EDA               	movwf	fsr2h,c
 20472  012E2A  50DF               	movf	indf2,w,c
 20473  012E2C  6E3D               	movwf	(btemp+11)^0,c
 20474  012E2E  90D8               	bcf	status,0,c
 20475  012E30  343D               	rlcf	(btemp+11)^0,w,c
 20476  012E32  6E3C               	movwf	(btemp+10)^0,c
 20477                           
 20478                           ;stkvar	_bexp @ sp[(-4)+1]
 20479  012E34  0EFD               	movlw	-3
 20480  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20481                           
 20482                           ;stkvar	_b @ sp[(-4)+-4]
 20483  012E3C  0EFA               	movlw	250
 20484  012E3E  24E1               	addwf	fsr1l,w,c
 20485  012E40  6ED9               	movwf	fsr2l,c
 20486  012E42  0EFF               	movlw	255
 20487  012E44  20E2               	addwfc	fsr1h,w,c
 20488  012E46  6EDA               	movwf	fsr2h,c
 20489  012E48  AEDF               	btfss	indf2,7,c
 20490  012E4A  D002               	goto	l6396
 20491                           
 20492                           ;stkvar	_bexp @ sp[(-4)+1]
 20493  012E4C  0EFD               	movlw	-3
 20494  012E4E  80E3               	bsf	plusw1,0,c
 20495  012E50                     l6396:
 20496                           
 20497                           ;stkvar	_bexp @ sp[(-4)+1]
 20498  012E50  0EFD               	movlw	-3
 20499  012E52  50E3               	movf	plusw1,w,c
 20500  012E54  B4D8               	btfsc	status,2,c
 20501  012E56  D027               	goto	l6406
 20502                           
 20503                           ;stkvar	_bexp @ sp[(-4)+1]
 20504  012E58  0EFD               	movlw	-3
 20505  012E5A  28E3               	incf	plusw1,w,c
 20506  012E5C  A4D8               	btfss	status,2,c
 20507  012E5E  D018               	goto	l6402
 20508  012E60  0E00               	movlw	0
 20509  012E62  6E3A               	movwf	(btemp+8)^0,c
 20510  012E64  0E00               	movlw	0
 20511  012E66  6E3B               	movwf	(btemp+9)^0,c
 20512  012E68  0E00               	movlw	0
 20513  012E6A  6E3C               	movwf	(btemp+10)^0,c
 20514  012E6C  0E00               	movlw	0
 20515  012E6E  6E3D               	movwf	(btemp+11)^0,c
 20516                           
 20517                           ;stkvar	_b @ sp[(-4)+-4]
 20518  012E70  0EF8               	movlw	-8
 20519  012E72  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20520  012E78  0EF9               	movlw	-7
 20521  012E7A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20522  012E80  0EFA               	movlw	-6
 20523  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20524  012E88  0EFB               	movlw	-5
 20525  012E8A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20526  012E90                     l6402:
 20527                           
 20528                           ;stkvar	_b @ sp[(-4)+-4]
 20529  012E90  0EFA               	movlw	-6
 20530  012E92  8EE3               	bsf	plusw1,7,c
 20531                           
 20532                           ;stkvar	_b @ sp[(-4)+-4]
 20533  012E94  0EFB               	movlw	251
 20534  012E96  24E1               	addwf	fsr1l,w,c
 20535  012E98  6ED9               	movwf	fsr2l,c
 20536  012E9A  0EFF               	movlw	255
 20537  012E9C  20E2               	addwfc	fsr1h,w,c
 20538  012E9E  6EDA               	movwf	fsr2h,c
 20539  012EA0  0E00               	movlw	0
 20540  012EA2  6EDF               	movwf	indf2,c
 20541  012EA4  D018               	goto	l6408
 20542  012EA6                     l6406:
 20543  012EA6  0E00               	movlw	0
 20544  012EA8  6E3A               	movwf	(btemp+8)^0,c
 20545  012EAA  0E00               	movlw	0
 20546  012EAC  6E3B               	movwf	(btemp+9)^0,c
 20547  012EAE  0E00               	movlw	0
 20548  012EB0  6E3C               	movwf	(btemp+10)^0,c
 20549  012EB2  0E00               	movlw	0
 20550  012EB4  6E3D               	movwf	(btemp+11)^0,c
 20551                           
 20552                           ;stkvar	_b @ sp[(-4)+-4]
 20553  012EB6  0EF8               	movlw	-8
 20554  012EB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20555  012EBE  0EF9               	movlw	-7
 20556  012EC0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20557  012EC6  0EFA               	movlw	-6
 20558  012EC8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20559  012ECE  0EFB               	movlw	-5
 20560  012ED0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20561  012ED6                     l6408:
 20562                           
 20563                           ;stkvar	_a @ sp[(-4)+-8]
 20564  012ED6  0EF7               	movlw	247
 20565  012ED8  24E1               	addwf	fsr1l,w,c
 20566  012EDA  6ED9               	movwf	fsr2l,c
 20567  012EDC  0EFF               	movlw	255
 20568  012EDE  20E2               	addwfc	fsr1h,w,c
 20569  012EE0  6EDA               	movwf	fsr2h,c
 20570  012EE2  50DF               	movf	indf2,w,c
 20571  012EE4  6E3D               	movwf	(btemp+11)^0,c
 20572  012EE6  0E80               	movlw	128
 20573  012EE8  163D               	andwf	(btemp+11)^0,f,c
 20574                           
 20575                           ;stkvar	_aexp @ sp[(-4)+2]
 20576  012EEA  0EFE               	movlw	-2
 20577  012EEC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20578                           
 20579                           ;stkvar	_signs @ sp[(-4)+3]
 20580                           ;stkvar	_aexp @ sp[(-4)+2]
 20581  012EF2  50E1               	movf	fsr1l,w,c
 20582  012EF4  0FFE               	addlw	-2
 20583  012EF6  6ED9               	movwf	fsr2l,c
 20584  012EF8  50E2               	movf	fsr1h,w,c
 20585  012EFA  6EDA               	movwf	fsr2h,c
 20586  012EFC  0EFF               	movlw	255
 20587  012EFE  22DA               	addwfc	fsr2h,f,c
 20588  012F00  0EFF               	movlw	-1
 20589  012F02  50E3               	movf	plusw1,w,c
 20590  012F04  18DE               	xorwf	postinc2,w,c
 20591  012F06  B4D8               	btfsc	status,2,c
 20592  012F08  D002               	goto	l6414
 20593                           
 20594                           ;stkvar	_signs @ sp[(-4)+3]
 20595  012F0A  0EFF               	movlw	-1
 20596  012F0C  8CE3               	bsf	plusw1,6,c
 20597  012F0E                     l6414:
 20598                           
 20599                           ;stkvar	_a @ sp[(-4)+-8]
 20600  012F0E  0EF7               	movlw	247
 20601  012F10  24E1               	addwf	fsr1l,w,c
 20602  012F12  6ED9               	movwf	fsr2l,c
 20603  012F14  0EFF               	movlw	255
 20604  012F16  20E2               	addwfc	fsr1h,w,c
 20605  012F18  6EDA               	movwf	fsr2h,c
 20606  012F1A  50DF               	movf	indf2,w,c
 20607  012F1C  6E3D               	movwf	(btemp+11)^0,c
 20608  012F1E  90D8               	bcf	status,0,c
 20609  012F20  343D               	rlcf	(btemp+11)^0,w,c
 20610  012F22  6E3C               	movwf	(btemp+10)^0,c
 20611                           
 20612                           ;stkvar	_aexp @ sp[(-4)+2]
 20613  012F24  0EFE               	movlw	-2
 20614  012F26  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20615                           
 20616                           ;stkvar	_a @ sp[(-4)+-8]
 20617  012F2C  0EF6               	movlw	246
 20618  012F2E  24E1               	addwf	fsr1l,w,c
 20619  012F30  6ED9               	movwf	fsr2l,c
 20620  012F32  0EFF               	movlw	255
 20621  012F34  20E2               	addwfc	fsr1h,w,c
 20622  012F36  6EDA               	movwf	fsr2h,c
 20623  012F38  AEDF               	btfss	indf2,7,c
 20624  012F3A  D002               	goto	l6420
 20625                           
 20626                           ;stkvar	_aexp @ sp[(-4)+2]
 20627  012F3C  0EFE               	movlw	-2
 20628  012F3E  80E3               	bsf	plusw1,0,c
 20629  012F40                     l6420:
 20630                           
 20631                           ;stkvar	_aexp @ sp[(-4)+2]
 20632  012F40  0EFE               	movlw	-2
 20633  012F42  50E3               	movf	plusw1,w,c
 20634  012F44  B4D8               	btfsc	status,2,c
 20635  012F46  D027               	goto	l6430
 20636                           
 20637                           ;stkvar	_aexp @ sp[(-4)+2]
 20638  012F48  0EFE               	movlw	-2
 20639  012F4A  28E3               	incf	plusw1,w,c
 20640  012F4C  A4D8               	btfss	status,2,c
 20641  012F4E  D018               	goto	l6426
 20642  012F50  0E00               	movlw	0
 20643  012F52  6E3A               	movwf	(btemp+8)^0,c
 20644  012F54  0E00               	movlw	0
 20645  012F56  6E3B               	movwf	(btemp+9)^0,c
 20646  012F58  0E00               	movlw	0
 20647  012F5A  6E3C               	movwf	(btemp+10)^0,c
 20648  012F5C  0E00               	movlw	0
 20649  012F5E  6E3D               	movwf	(btemp+11)^0,c
 20650                           
 20651                           ;stkvar	_a @ sp[(-4)+-8]
 20652  012F60  0EF4               	movlw	-12
 20653  012F62  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20654  012F68  0EF5               	movlw	-11
 20655  012F6A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20656  012F70  0EF6               	movlw	-10
 20657  012F72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20658  012F78  0EF7               	movlw	-9
 20659  012F7A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20660  012F80                     l6426:
 20661                           
 20662                           ;stkvar	_a @ sp[(-4)+-8]
 20663  012F80  0EF6               	movlw	-10
 20664  012F82  8EE3               	bsf	plusw1,7,c
 20665                           
 20666                           ;stkvar	_a @ sp[(-4)+-8]
 20667  012F84  0EF7               	movlw	247
 20668  012F86  24E1               	addwf	fsr1l,w,c
 20669  012F88  6ED9               	movwf	fsr2l,c
 20670  012F8A  0EFF               	movlw	255
 20671  012F8C  20E2               	addwfc	fsr1h,w,c
 20672  012F8E  6EDA               	movwf	fsr2h,c
 20673  012F90  0E00               	movlw	0
 20674  012F92  6EDF               	movwf	indf2,c
 20675  012F94  D018               	goto	l6432
 20676  012F96                     l6430:
 20677  012F96  0E00               	movlw	0
 20678  012F98  6E3A               	movwf	(btemp+8)^0,c
 20679  012F9A  0E00               	movlw	0
 20680  012F9C  6E3B               	movwf	(btemp+9)^0,c
 20681  012F9E  0E00               	movlw	0
 20682  012FA0  6E3C               	movwf	(btemp+10)^0,c
 20683  012FA2  0E00               	movlw	0
 20684  012FA4  6E3D               	movwf	(btemp+11)^0,c
 20685                           
 20686                           ;stkvar	_a @ sp[(-4)+-8]
 20687  012FA6  0EF4               	movlw	-12
 20688  012FA8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20689  012FAE  0EF5               	movlw	-11
 20690  012FB0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20691  012FB6  0EF6               	movlw	-10
 20692  012FB8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20693  012FBE  0EF7               	movlw	-9
 20694  012FC0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20695  012FC6                     l6432:
 20696                           
 20697                           ;stkvar	_bexp @ sp[(-4)+1]
 20698                           ;stkvar	_aexp @ sp[(-4)+2]
 20699  012FC6  50E1               	movf	fsr1l,w,c
 20700  012FC8  0FFE               	addlw	-2
 20701  012FCA  6ED9               	movwf	fsr2l,c
 20702  012FCC  50E2               	movf	fsr1h,w,c
 20703  012FCE  6EDA               	movwf	fsr2h,c
 20704  012FD0  0EFF               	movlw	255
 20705  012FD2  22DA               	addwfc	fsr2h,f,c
 20706  012FD4  0EFD               	movlw	-3
 20707  012FD6  50E3               	movf	plusw1,w,c
 20708  012FD8  5CDE               	subwf	postinc2,w,c
 20709  012FDA  B0D8               	btfsc	status,0,c
 20710  012FDC  D0A4               	goto	l6468
 20711                           
 20712                           ;stkvar	_signs @ sp[(-4)+3]
 20713  012FDE  0EFF               	movlw	-1
 20714  012FE0  ACE3               	btfss	plusw1,6,c
 20715  012FE2  D002               	goto	l6438
 20716                           
 20717                           ;stkvar	_signs @ sp[(-4)+3]
 20718  012FE4  0EFF               	movlw	-1
 20719  012FE6  7EE3               	btg	plusw1,7,c
 20720  012FE8                     l6438:
 20721                           
 20722                           ;stkvar	_bexp @ sp[(-4)+1]
 20723                           ;stkvar	_grs @ sp[(-4)+0]
 20724  012FE8  0EFD               	movlw	-3
 20725  012FEA  006F FF8C  F032    	movff	plusw1,btemp
 20726  012FF0  0EFC               	movlw	-4
 20727  012FF2  0060  F0CB  FFE3   	movff	btemp,plusw1
 20728                           
 20729                           ;stkvar	_aexp @ sp[(-4)+2]
 20730                           ;stkvar	_bexp @ sp[(-4)+1]
 20731  012FF8  0EFE               	movlw	-2
 20732  012FFA  006F FF8C  F032    	movff	plusw1,btemp
 20733  013000  0EFD               	movlw	-3
 20734  013002  0060  F0CB  FFE3   	movff	btemp,plusw1
 20735                           
 20736                           ;stkvar	_grs @ sp[(-4)+0]
 20737                           ;stkvar	_aexp @ sp[(-4)+2]
 20738  013008  0EFC               	movlw	-4
 20739  01300A  006F FF8C  F032    	movff	plusw1,btemp
 20740  013010  0EFE               	movlw	-2
 20741  013012  0060  F0CB  FFE3   	movff	btemp,plusw1
 20742                           
 20743                           ;stkvar	_b @ sp[(-4)+-4]
 20744                           ;stkvar	_grs @ sp[(-4)+0]
 20745  013018  0EF8               	movlw	-8
 20746  01301A  006F FF8C  F032    	movff	plusw1,btemp
 20747  013020  0EFC               	movlw	-4
 20748  013022  0060  F0CB  FFE3   	movff	btemp,plusw1
 20749                           
 20750                           ;stkvar	_a @ sp[(-4)+-8]
 20751                           ;stkvar	_b @ sp[(-4)+-4]
 20752  013028  0EF4               	movlw	-12
 20753  01302A  006F FF8C  F032    	movff	plusw1,btemp
 20754  013030  0EF8               	movlw	-8
 20755  013032  0060  F0CB  FFE3   	movff	btemp,plusw1
 20756                           
 20757                           ;stkvar	_grs @ sp[(-4)+0]
 20758                           ;stkvar	_a @ sp[(-4)+-8]
 20759  013038  0EFC               	movlw	-4
 20760  01303A  006F FF8C  F032    	movff	plusw1,btemp
 20761  013040  0EF4               	movlw	-12
 20762  013042  0060  F0CB  FFE3   	movff	btemp,plusw1
 20763                           
 20764                           ;stkvar	_b @ sp[(-4)+-4]
 20765  013048  0EF9               	movlw	249
 20766  01304A  24E1               	addwf	fsr1l,w,c
 20767  01304C  6ED9               	movwf	fsr2l,c
 20768  01304E  0EFF               	movlw	255
 20769  013050  20E2               	addwfc	fsr1h,w,c
 20770  013052  6EDA               	movwf	fsr2h,c
 20771  013054  50DF               	movf	indf2,w,c
 20772  013056  6E3D               	movwf	(btemp+11)^0,c
 20773                           
 20774                           ;stkvar	_grs @ sp[(-4)+0]
 20775  013058  0EFC               	movlw	-4
 20776  01305A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20777                           
 20778                           ;stkvar	_a @ sp[(-4)+-8]
 20779  013060  0EF5               	movlw	245
 20780  013062  24E1               	addwf	fsr1l,w,c
 20781  013064  6ED9               	movwf	fsr2l,c
 20782  013066  0EFF               	movlw	255
 20783  013068  20E2               	addwfc	fsr1h,w,c
 20784  01306A  6EDA               	movwf	fsr2h,c
 20785                           
 20786                           ;stkvar	_b @ sp[(-4)+-4]
 20787  01306C  0EF9               	movlw	249
 20788  01306E  24E1               	addwf	fsr1l,w,c
 20789  013070  6EE9               	movwf	fsr0l,c
 20790  013072  0EFF               	movlw	255
 20791  013074  20E2               	addwfc	fsr1h,w,c
 20792  013076  6EEA               	movwf	fsr0h,c
 20793  013078  006F FF7F FFEF     	movff	indf2,indf0
 20794                           
 20795                           ;stkvar	_grs @ sp[(-4)+0]
 20796                           ;stkvar	_a @ sp[(-4)+-8]
 20797  01307E  0EF5               	movlw	245
 20798  013080  24E1               	addwf	fsr1l,w,c
 20799  013082  6ED9               	movwf	fsr2l,c
 20800  013084  0EFF               	movlw	255
 20801  013086  20E2               	addwfc	fsr1h,w,c
 20802  013088  6EDA               	movwf	fsr2h,c
 20803  01308A  0EFC               	movlw	-4
 20804  01308C  006F FF8F FFDF     	movff	plusw1,indf2
 20805                           
 20806                           ;stkvar	_b @ sp[(-4)+-4]
 20807  013092  0EFA               	movlw	250
 20808  013094  24E1               	addwf	fsr1l,w,c
 20809  013096  6ED9               	movwf	fsr2l,c
 20810  013098  0EFF               	movlw	255
 20811  01309A  20E2               	addwfc	fsr1h,w,c
 20812  01309C  6EDA               	movwf	fsr2h,c
 20813  01309E  50DF               	movf	indf2,w,c
 20814  0130A0  6E3D               	movwf	(btemp+11)^0,c
 20815                           
 20816                           ;stkvar	_grs @ sp[(-4)+0]
 20817  0130A2  0EFC               	movlw	-4
 20818  0130A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20819                           
 20820                           ;stkvar	_a @ sp[(-4)+-8]
 20821  0130AA  0EF6               	movlw	246
 20822  0130AC  24E1               	addwf	fsr1l,w,c
 20823  0130AE  6ED9               	movwf	fsr2l,c
 20824  0130B0  0EFF               	movlw	255
 20825  0130B2  20E2               	addwfc	fsr1h,w,c
 20826  0130B4  6EDA               	movwf	fsr2h,c
 20827                           
 20828                           ;stkvar	_b @ sp[(-4)+-4]
 20829  0130B6  0EFA               	movlw	250
 20830  0130B8  24E1               	addwf	fsr1l,w,c
 20831  0130BA  6EE9               	movwf	fsr0l,c
 20832  0130BC  0EFF               	movlw	255
 20833  0130BE  20E2               	addwfc	fsr1h,w,c
 20834  0130C0  6EEA               	movwf	fsr0h,c
 20835  0130C2  006F FF7F FFEF     	movff	indf2,indf0
 20836                           
 20837                           ;stkvar	_grs @ sp[(-4)+0]
 20838                           ;stkvar	_a @ sp[(-4)+-8]
 20839  0130C8  0EF6               	movlw	246
 20840  0130CA  24E1               	addwf	fsr1l,w,c
 20841  0130CC  6ED9               	movwf	fsr2l,c
 20842  0130CE  0EFF               	movlw	255
 20843  0130D0  20E2               	addwfc	fsr1h,w,c
 20844  0130D2  6EDA               	movwf	fsr2h,c
 20845  0130D4  0EFC               	movlw	-4
 20846  0130D6  006F FF8F FFDF     	movff	plusw1,indf2
 20847                           
 20848                           ;stkvar	_b @ sp[(-4)+-4]
 20849  0130DC  0EFB               	movlw	251
 20850  0130DE  24E1               	addwf	fsr1l,w,c
 20851  0130E0  6ED9               	movwf	fsr2l,c
 20852  0130E2  0EFF               	movlw	255
 20853  0130E4  20E2               	addwfc	fsr1h,w,c
 20854  0130E6  6EDA               	movwf	fsr2h,c
 20855  0130E8  50DF               	movf	indf2,w,c
 20856  0130EA  6E3D               	movwf	(btemp+11)^0,c
 20857                           
 20858                           ;stkvar	_grs @ sp[(-4)+0]
 20859  0130EC  0EFC               	movlw	-4
 20860  0130EE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20861                           
 20862                           ;stkvar	_a @ sp[(-4)+-8]
 20863  0130F4  0EF7               	movlw	247
 20864  0130F6  24E1               	addwf	fsr1l,w,c
 20865  0130F8  6ED9               	movwf	fsr2l,c
 20866  0130FA  0EFF               	movlw	255
 20867  0130FC  20E2               	addwfc	fsr1h,w,c
 20868  0130FE  6EDA               	movwf	fsr2h,c
 20869                           
 20870                           ;stkvar	_b @ sp[(-4)+-4]
 20871  013100  0EFB               	movlw	251
 20872  013102  24E1               	addwf	fsr1l,w,c
 20873  013104  6EE9               	movwf	fsr0l,c
 20874  013106  0EFF               	movlw	255
 20875  013108  20E2               	addwfc	fsr1h,w,c
 20876  01310A  6EEA               	movwf	fsr0h,c
 20877  01310C  006F FF7F FFEF     	movff	indf2,indf0
 20878                           
 20879                           ;stkvar	_grs @ sp[(-4)+0]
 20880                           ;stkvar	_a @ sp[(-4)+-8]
 20881  013112  0EF7               	movlw	247
 20882  013114  24E1               	addwf	fsr1l,w,c
 20883  013116  6ED9               	movwf	fsr2l,c
 20884  013118  0EFF               	movlw	255
 20885  01311A  20E2               	addwfc	fsr1h,w,c
 20886  01311C  6EDA               	movwf	fsr2h,c
 20887  01311E  0EFC               	movlw	-4
 20888  013120  006F FF8F FFDF     	movff	plusw1,indf2
 20889  013126                     l6468:
 20890                           
 20891                           ;stkvar	_grs @ sp[(-4)+0]
 20892  013126  0EFC               	movlw	-4
 20893  013128  6AE3               	clrf	plusw1,c
 20894                           
 20895                           ;stkvar	_aexp @ sp[(-4)+2]
 20896  01312A  0EFE               	movlw	-2
 20897  01312C  50E3               	movf	plusw1,w,c
 20898  01312E  6E3C               	movwf	(btemp+10)^0,c
 20899  013130  6A3D               	clrf	(btemp+11)^0,c
 20900                           
 20901                           ;stkvar	_bexp @ sp[(-4)+1]
 20902  013132  0EFD               	movlw	-3
 20903  013134  50E3               	movf	plusw1,w,c
 20904  013136  5E3C               	subwf	(btemp+10)^0,f,c
 20905  013138  0E00               	movlw	0
 20906  01313A  5A3D               	subwfb	(btemp+11)^0,f,c
 20907  01313C  BE3D               	btfsc	(btemp+11)^0,7,c
 20908  01313E  D062               	goto	l6492
 20909  013140  503D               	movf	(btemp+11)^0,w,c
 20910  013142  E104               	bnz	u4720
 20911  013144  0E1A               	movlw	26
 20912  013146  5C3C               	subwf	(btemp+10)^0,w,c
 20913  013148  A0D8               	btfss	status,0,c
 20914  01314A  D05C               	goto	l6492
 20915  01314C                     u4720:
 20916                           
 20917                           ;stkvar	_b @ sp[(-4)+-4]
 20918  01314C  0EF8               	movlw	-8
 20919  01314E  50E3               	movf	plusw1,w,c
 20920  013150  E10A               	bnz	u4731
 20921  013152  0EF9               	movlw	-7
 20922  013154  50E3               	movf	plusw1,w,c
 20923  013156  E107               	bnz	u4731
 20924  013158  0EFA               	movlw	-6
 20925  01315A  50E3               	movf	plusw1,w,c
 20926  01315C  E104               	bnz	u4731
 20927  01315E  0EFB               	movlw	-5
 20928  013160  50E3               	movf	plusw1,w,c
 20929  013162  B4D8               	btfsc	status,2,c
 20930  013164  D003               	goto	u4730
 20931  013166                     u4731:
 20932  013166  6A3D               	clrf	(btemp+11)^0,c
 20933  013168  2A3D               	incf	(btemp+11)^0,f,c
 20934  01316A  D001               	goto	u4748
 20935  01316C                     u4730:
 20936  01316C  6A3D               	clrf	(btemp+11)^0,c
 20937  01316E                     u4748:
 20938                           
 20939                           ;stkvar	_grs @ sp[(-4)+0]
 20940  01316E  0EFC               	movlw	-4
 20941  013170  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20942                           
 20943                           ;stkvar	_b @ sp[(-4)+-4]
 20944  013176  0EF8               	movlw	-8
 20945  013178  6AE3               	clrf	plusw1,c
 20946  01317A  0EF9               	movlw	-7
 20947  01317C  6AE3               	clrf	plusw1,c
 20948  01317E  0EFA               	movlw	-6
 20949  013180  6AE3               	clrf	plusw1,c
 20950  013182  0EFB               	movlw	-5
 20951  013184  6AE3               	clrf	plusw1,c
 20952                           
 20953                           ;stkvar	_aexp @ sp[(-4)+2]
 20954                           ;stkvar	_bexp @ sp[(-4)+1]
 20955  013186  0EFE               	movlw	-2
 20956  013188  006F FF8C  F032    	movff	plusw1,btemp
 20957  01318E  0EFD               	movlw	-3
 20958  013190  0060  F0CB  FFE3   	movff	btemp,plusw1
 20959  013196  D042               	goto	u4780
 20960  013198                     l6478:
 20961                           
 20962                           ;stkvar	_grs @ sp[(-4)+0]
 20963  013198  0EFC               	movlw	-4
 20964  01319A  A0E3               	btfss	plusw1,0,c
 20965  01319C  D00D               	goto	l6482
 20966                           
 20967                           ;stkvar	_grs @ sp[(-4)+0]
 20968  01319E  0EFC               	movlw	-4
 20969  0131A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 20970  0131A6  90D8               	bcf	status,0,c
 20971  0131A8  323D               	rrcf	(btemp+11)^0,f,c
 20972  0131AA  0E01               	movlw	1
 20973  0131AC  123D               	iorwf	(btemp+11)^0,f,c
 20974                           
 20975                           ;stkvar	_grs @ sp[(-4)+0]
 20976  0131AE  0EFC               	movlw	-4
 20977  0131B0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20978  0131B6  D009               	goto	l6484
 20979  0131B8                     l6482:
 20980                           
 20981                           ;stkvar	_grs @ sp[(-4)+0]
 20982  0131B8  50E1               	movf	fsr1l,w,c
 20983  0131BA  0FFC               	addlw	-4
 20984  0131BC  6ED9               	movwf	fsr2l,c
 20985  0131BE  50E2               	movf	fsr1h,w,c
 20986  0131C0  6EDA               	movwf	fsr2h,c
 20987  0131C2  0EFF               	movlw	255
 20988  0131C4  22DA               	addwfc	fsr2h,f,c
 20989  0131C6  90D8               	bcf	status,0,c
 20990  0131C8  32DF               	rrcf	indf2,f,c
 20991  0131CA                     l6484:
 20992                           
 20993                           ;stkvar	_b @ sp[(-4)+-4]
 20994  0131CA  0EF8               	movlw	-8
 20995  0131CC  A0E3               	btfss	plusw1,0,c
 20996  0131CE  D002               	goto	l6488
 20997                           
 20998                           ;stkvar	_grs @ sp[(-4)+0]
 20999  0131D0  0EFC               	movlw	-4
 21000  0131D2  8EE3               	bsf	plusw1,7,c
 21001  0131D4                     l6488:
 21002  0131D4  0E01               	movlw	1
 21003  0131D6  6E3D               	movwf	(btemp+11)^0,c
 21004                           
 21005                           ;stkvar	_b @ sp[(-4)+-4]
 21006  0131D8  50E1               	movf	fsr1l,w,c
 21007  0131DA  0FF8               	addlw	-8
 21008  0131DC  6ED9               	movwf	fsr2l,c
 21009  0131DE  50E2               	movf	fsr1h,w,c
 21010  0131E0  6EDA               	movwf	fsr2h,c
 21011  0131E2  0EFF               	movlw	255
 21012  0131E4  22DA               	addwfc	fsr2h,f,c
 21013  0131E6  283D               	incf	(btemp+11)^0,w,c
 21014  0131E8  52DE               	movf	postinc2,f,c
 21015  0131EA  D008               	goto	u4770
 21016  0131EC                     u4775:
 21017  0131EC  52DE               	movf	postinc2,f,c
 21018  0131EE  90D8               	bcf	status,0,c
 21019  0131F0  BEDC               	btfsc	preinc2,7,c
 21020  0131F2  80D8               	bsf	status,0,c
 21021  0131F4  32DD               	rrcf	postdec2,f,c
 21022  0131F6  32DD               	rrcf	postdec2,f,c
 21023  0131F8  32DD               	rrcf	postdec2,f,c
 21024  0131FA  32DE               	rrcf	postinc2,f,c
 21025  0131FC                     u4770:
 21026  0131FC  2EE8               	decfsz	wreg,f,c
 21027  0131FE  D7F6               	goto	u4775
 21028                           
 21029                           ;stkvar	_bexp @ sp[(-4)+1]
 21030  013200  0EFD               	movlw	-3
 21031  013202  2AE3               	incf	plusw1,f,c
 21032  013204                     l6492:
 21033                           
 21034                           ;stkvar	_aexp @ sp[(-4)+2]
 21035                           ;stkvar	_bexp @ sp[(-4)+1]
 21036  013204  50E1               	movf	fsr1l,w,c
 21037  013206  0FFD               	addlw	-3
 21038  013208  6ED9               	movwf	fsr2l,c
 21039  01320A  50E2               	movf	fsr1h,w,c
 21040  01320C  6EDA               	movwf	fsr2h,c
 21041  01320E  0EFF               	movlw	255
 21042  013210  22DA               	addwfc	fsr2h,f,c
 21043  013212  0EFE               	movlw	-2
 21044  013214  50E3               	movf	plusw1,w,c
 21045  013216  5CDE               	subwf	postinc2,w,c
 21046  013218  A0D8               	btfss	status,0,c
 21047  01321A  D7BE               	goto	l6478
 21048  01321C                     u4780:
 21049                           
 21050                           ;stkvar	_signs @ sp[(-4)+3]
 21051  01321C  0EFF               	movlw	-1
 21052  01321E  BCE3               	btfsc	plusw1,6,c
 21053  013220  D066               	goto	l6520
 21054                           
 21055                           ;stkvar	_bexp @ sp[(-4)+1]
 21056  013222  0EFD               	movlw	-3
 21057  013224  50E3               	movf	plusw1,w,c
 21058  013226  B4D8               	btfsc	status,2,c
 21059  013228  D0F2               	goto	u4880
 21060                           
 21061                           ;stkvar	_a @ sp[(-4)+-8]
 21062                           ;stkvar	_b @ sp[(-4)+-4]
 21063  01322A  0EF8               	movlw	-8
 21064  01322C  50E3               	movf	plusw1,w,c
 21065  01322E  6E32               	movwf	btemp^0,c
 21066  013230  0EF4               	movlw	-12
 21067  013232  50E3               	movf	plusw1,w,c
 21068  013234  2632               	addwf	btemp^0,f,c
 21069  013236  0EF8               	movlw	-8
 21070  013238  0060  F0CB  FFE3   	movff	btemp,plusw1
 21071  01323E  0EF9               	movlw	-7
 21072  013240  50E3               	movf	plusw1,w,c
 21073  013242  6E32               	movwf	btemp^0,c
 21074  013244  0EF5               	movlw	-11
 21075  013246  50E3               	movf	plusw1,w,c
 21076  013248  2232               	addwfc	btemp^0,f,c
 21077  01324A  0EF9               	movlw	-7
 21078  01324C  0060  F0CB  FFE3   	movff	btemp,plusw1
 21079  013252  0EFA               	movlw	-6
 21080  013254  50E3               	movf	plusw1,w,c
 21081  013256  6E32               	movwf	btemp^0,c
 21082  013258  0EF6               	movlw	-10
 21083  01325A  50E3               	movf	plusw1,w,c
 21084  01325C  2232               	addwfc	btemp^0,f,c
 21085  01325E  0EFA               	movlw	-6
 21086  013260  0060  F0CB  FFE3   	movff	btemp,plusw1
 21087  013266  0EFB               	movlw	-5
 21088  013268  50E3               	movf	plusw1,w,c
 21089  01326A  6E32               	movwf	btemp^0,c
 21090  01326C  0EF7               	movlw	-9
 21091  01326E  50E3               	movf	plusw1,w,c
 21092  013270  2232               	addwfc	btemp^0,f,c
 21093  013272  0EFB               	movlw	-5
 21094  013274  0060  F0CB  FFE3   	movff	btemp,plusw1
 21095                           
 21096                           ;stkvar	_b @ sp[(-4)+-4]
 21097  01327A  0EFB               	movlw	-5
 21098  01327C  A0E3               	btfss	plusw1,0,c
 21099  01327E  D101               	goto	u4920
 21100                           
 21101                           ;stkvar	_grs @ sp[(-4)+0]
 21102  013280  0EFC               	movlw	-4
 21103  013282  A0E3               	btfss	plusw1,0,c
 21104  013284  D00D               	goto	l6510
 21105                           
 21106                           ;stkvar	_grs @ sp[(-4)+0]
 21107  013286  0EFC               	movlw	-4
 21108  013288  006F FF8C  F03D    	movff	plusw1,btemp+11
 21109  01328E  90D8               	bcf	status,0,c
 21110  013290  323D               	rrcf	(btemp+11)^0,f,c
 21111  013292  0E01               	movlw	1
 21112  013294  123D               	iorwf	(btemp+11)^0,f,c
 21113                           
 21114                           ;stkvar	_grs @ sp[(-4)+0]
 21115  013296  0EFC               	movlw	-4
 21116  013298  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21117  01329E  D009               	goto	l6512
 21118  0132A0                     l6510:
 21119                           
 21120                           ;stkvar	_grs @ sp[(-4)+0]
 21121  0132A0  50E1               	movf	fsr1l,w,c
 21122  0132A2  0FFC               	addlw	-4
 21123  0132A4  6ED9               	movwf	fsr2l,c
 21124  0132A6  50E2               	movf	fsr1h,w,c
 21125  0132A8  6EDA               	movwf	fsr2h,c
 21126  0132AA  0EFF               	movlw	255
 21127  0132AC  22DA               	addwfc	fsr2h,f,c
 21128  0132AE  90D8               	bcf	status,0,c
 21129  0132B0  32DF               	rrcf	indf2,f,c
 21130  0132B2                     l6512:
 21131                           
 21132                           ;stkvar	_b @ sp[(-4)+-4]
 21133  0132B2  0EF8               	movlw	-8
 21134  0132B4  A0E3               	btfss	plusw1,0,c
 21135  0132B6  D002               	goto	l6516
 21136                           
 21137                           ;stkvar	_grs @ sp[(-4)+0]
 21138  0132B8  0EFC               	movlw	-4
 21139  0132BA  8EE3               	bsf	plusw1,7,c
 21140  0132BC                     l6516:
 21141  0132BC  0E01               	movlw	1
 21142  0132BE  6E3D               	movwf	(btemp+11)^0,c
 21143                           
 21144                           ;stkvar	_b @ sp[(-4)+-4]
 21145  0132C0  50E1               	movf	fsr1l,w,c
 21146  0132C2  0FF8               	addlw	-8
 21147  0132C4  6ED9               	movwf	fsr2l,c
 21148  0132C6  50E2               	movf	fsr1h,w,c
 21149  0132C8  6EDA               	movwf	fsr2h,c
 21150  0132CA  0EFF               	movlw	255
 21151  0132CC  22DA               	addwfc	fsr2h,f,c
 21152  0132CE  283D               	incf	(btemp+11)^0,w,c
 21153  0132D0  52DE               	movf	postinc2,f,c
 21154  0132D2  D008               	goto	u4840
 21155  0132D4                     u4845:
 21156  0132D4  52DE               	movf	postinc2,f,c
 21157  0132D6  90D8               	bcf	status,0,c
 21158  0132D8  BEDC               	btfsc	preinc2,7,c
 21159  0132DA  80D8               	bsf	status,0,c
 21160  0132DC  32DD               	rrcf	postdec2,f,c
 21161  0132DE  32DD               	rrcf	postdec2,f,c
 21162  0132E0  32DD               	rrcf	postdec2,f,c
 21163  0132E2  32DE               	rrcf	postinc2,f,c
 21164  0132E4                     u4840:
 21165  0132E4  2EE8               	decfsz	wreg,f,c
 21166  0132E6  D7F6               	goto	u4845
 21167                           
 21168                           ;stkvar	_bexp @ sp[(-4)+1]
 21169  0132E8  0EFD               	movlw	-3
 21170  0132EA  2AE3               	incf	plusw1,f,c
 21171  0132EC  D0CA               	goto	u4920
 21172  0132EE                     l6520:
 21173                           
 21174                           ;stkvar	_a @ sp[(-4)+-8]
 21175                           ;stkvar	_b @ sp[(-4)+-4]
 21176  0132EE  50E1               	movf	fsr1l,w,c
 21177  0132F0  0FF8               	addlw	-8
 21178  0132F2  6ED9               	movwf	fsr2l,c
 21179  0132F4  50E2               	movf	fsr1h,w,c
 21180  0132F6  6EDA               	movwf	fsr2h,c
 21181  0132F8  0EFF               	movlw	255
 21182  0132FA  22DA               	addwfc	fsr2h,f,c
 21183  0132FC  0EF4               	movlw	-12
 21184  0132FE  50E3               	movf	plusw1,w,c
 21185  013300  5CDE               	subwf	postinc2,w,c
 21186  013302  0EF5               	movlw	-11
 21187  013304  50E3               	movf	plusw1,w,c
 21188  013306  58DE               	subwfb	postinc2,w,c
 21189  013308  0EF6               	movlw	-10
 21190  01330A  50E3               	movf	plusw1,w,c
 21191  01330C  58DE               	subwfb	postinc2,w,c
 21192  01330E  50DE               	movf	postinc2,w,c
 21193  013310  0A80               	xorlw	128
 21194  013312  6E32               	movwf	btemp^0,c
 21195  013314  0EF7               	movlw	-9
 21196  013316  50E3               	movf	plusw1,w,c
 21197  013318  0A80               	xorlw	128
 21198  01331A  5832               	subwfb	btemp^0,w,c
 21199  01331C  B0D8               	btfsc	status,0,c
 21200  01331E  D053               	goto	l6532
 21201                           
 21202                           ;stkvar	_b @ sp[(-4)+-4]
 21203                           ;stkvar	_a @ sp[(-4)+-8]
 21204  013320  0EF4               	movlw	-12
 21205  013322  006F FF8C  F03A    	movff	plusw1,btemp+8
 21206  013328  0EF5               	movlw	-11
 21207  01332A  006F FF8C  F03B    	movff	plusw1,btemp+9
 21208  013330  0EF6               	movlw	-10
 21209  013332  006F FF8C  F03C    	movff	plusw1,btemp+10
 21210  013338  0EF7               	movlw	-9
 21211  01333A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21212  013340  0EF8               	movlw	-8
 21213  013342  50E3               	movf	plusw1,w,c
 21214  013344  5E3A               	subwf	(btemp+8)^0,f,c
 21215  013346  0EF9               	movlw	-7
 21216  013348  50E3               	movf	plusw1,w,c
 21217  01334A  5A3B               	subwfb	(btemp+9)^0,f,c
 21218  01334C  0EFA               	movlw	-6
 21219  01334E  50E3               	movf	plusw1,w,c
 21220  013350  5A3C               	subwfb	(btemp+10)^0,f,c
 21221  013352  0EFB               	movlw	-5
 21222  013354  50E3               	movf	plusw1,w,c
 21223  013356  5A3D               	subwfb	(btemp+11)^0,f,c
 21224  013358  0EFF               	movlw	255
 21225  01335A  243A               	addwf	(btemp+8)^0,w,c
 21226  01335C  6E36               	movwf	(btemp+4)^0,c
 21227  01335E  0EFF               	movlw	255
 21228  013360  203B               	addwfc	(btemp+9)^0,w,c
 21229  013362  6E37               	movwf	(btemp+5)^0,c
 21230  013364  0EFF               	movlw	255
 21231  013366  203C               	addwfc	(btemp+10)^0,w,c
 21232  013368  6E38               	movwf	(btemp+6)^0,c
 21233  01336A  0EFF               	movlw	255
 21234  01336C  203D               	addwfc	(btemp+11)^0,w,c
 21235  01336E  6E39               	movwf	(btemp+7)^0,c
 21236                           
 21237                           ;stkvar	_b @ sp[(-4)+-4]
 21238  013370  0EF8               	movlw	-8
 21239  013372  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21240  013378  0EF9               	movlw	-7
 21241  01337A  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21242  013380  0EFA               	movlw	-6
 21243  013382  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21244  013388  0EFB               	movlw	-5
 21245  01338A  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21246                           
 21247                           ;stkvar	_signs @ sp[(-4)+3]
 21248  013390  0EFF               	movlw	-1
 21249  013392  7EE3               	btg	plusw1,7,c
 21250                           
 21251                           ;stkvar	_grs @ sp[(-4)+0]
 21252  013394  0EFC               	movlw	-4
 21253  013396  50E3               	movf	plusw1,w,c
 21254  013398  0800               	sublw	0
 21255  01339A  6E3D               	movwf	(btemp+11)^0,c
 21256                           
 21257                           ;stkvar	_grs @ sp[(-4)+0]
 21258  01339C  0EFC               	movlw	-4
 21259  01339E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21260                           
 21261                           ;stkvar	_grs @ sp[(-4)+0]
 21262  0133A4  0EFC               	movlw	-4
 21263  0133A6  50E3               	movf	plusw1,w,c
 21264  0133A8  A4D8               	btfss	status,2,c
 21265  0133AA  D020               	goto	l6534
 21266                           
 21267                           ;stkvar	_b @ sp[(-4)+-4]
 21268  0133AC  50E1               	movf	fsr1l,w,c
 21269  0133AE  0FF8               	addlw	-8
 21270  0133B0  6ED9               	movwf	fsr2l,c
 21271  0133B2  50E2               	movf	fsr1h,w,c
 21272  0133B4  6EDA               	movwf	fsr2h,c
 21273  0133B6  0EFF               	movlw	255
 21274  0133B8  22DA               	addwfc	fsr2h,f,c
 21275  0133BA  2ADE               	incf	postinc2,f,c
 21276  0133BC  0E00               	movlw	0
 21277  0133BE  22DE               	addwfc	postinc2,f,c
 21278  0133C0  22DE               	addwfc	postinc2,f,c
 21279  0133C2  22DE               	addwfc	postinc2,f,c
 21280  0133C4  D013               	goto	l6534
 21281  0133C6                     l6532:
 21282                           
 21283                           ;stkvar	_a @ sp[(-4)+-8]
 21284                           ;stkvar	_b @ sp[(-4)+-4]
 21285  0133C6  50E1               	movf	fsr1l,w,c
 21286  0133C8  0FF8               	addlw	-8
 21287  0133CA  6ED9               	movwf	fsr2l,c
 21288  0133CC  50E2               	movf	fsr1h,w,c
 21289  0133CE  6EDA               	movwf	fsr2h,c
 21290  0133D0  0EFF               	movlw	255
 21291  0133D2  22DA               	addwfc	fsr2h,f,c
 21292  0133D4  0EF4               	movlw	-12
 21293  0133D6  50E3               	movf	plusw1,w,c
 21294  0133D8  5EDE               	subwf	postinc2,f,c
 21295  0133DA  0EF5               	movlw	-11
 21296  0133DC  50E3               	movf	plusw1,w,c
 21297  0133DE  5ADE               	subwfb	postinc2,f,c
 21298  0133E0  0EF6               	movlw	-10
 21299  0133E2  50E3               	movf	plusw1,w,c
 21300  0133E4  5ADE               	subwfb	postinc2,f,c
 21301  0133E6  0EF7               	movlw	-9
 21302  0133E8  50E3               	movf	plusw1,w,c
 21303  0133EA  5ADE               	subwfb	postinc2,f,c
 21304  0133EC                     l6534:
 21305                           
 21306                           ;stkvar	_b @ sp[(-4)+-4]
 21307  0133EC  0EF8               	movlw	-8
 21308  0133EE  50E3               	movf	plusw1,w,c
 21309  0133F0  E145               	bnz	l6556
 21310  0133F2  0EF9               	movlw	-7
 21311  0133F4  50E3               	movf	plusw1,w,c
 21312  0133F6  E142               	bnz	l6556
 21313  0133F8  0EFA               	movlw	-6
 21314  0133FA  50E3               	movf	plusw1,w,c
 21315  0133FC  E13F               	bnz	l6556
 21316  0133FE  0EFB               	movlw	-5
 21317  013400  50E3               	movf	plusw1,w,c
 21318  013402  A4D8               	btfss	status,2,c
 21319  013404  D03B               	goto	l6556
 21320                           
 21321                           ;stkvar	_grs @ sp[(-4)+0]
 21322  013406  0EFC               	movlw	-4
 21323  013408  50E3               	movf	plusw1,w,c
 21324  01340A  A4D8               	btfss	status,2,c
 21325  01340C  D037               	goto	l6556
 21326  01340E                     u4880:
 21327  01340E  0E00               	movlw	0
 21328  013410  6E32               	movwf	btemp^0,c
 21329  013412  0E00               	movlw	0
 21330  013414  6E33               	movwf	(btemp+1)^0,c
 21331  013416  0E00               	movlw	0
 21332  013418  6E34               	movwf	(btemp+2)^0,c
 21333  01341A  0E00               	movlw	0
 21334  01341C  6E35               	movwf	(btemp+3)^0,c
 21335  01341E  D0C6               	goto	l2636
 21336  013420                     l6542:
 21337                           
 21338                           ;stkvar	_b @ sp[(-4)+-4]
 21339  013420  90D8               	bcf	status,0,c
 21340  013422  0EF8               	movlw	-8
 21341  013424  36E3               	rlcf	plusw1,f,c
 21342  013426  0EF9               	movlw	-7
 21343  013428  36E3               	rlcf	plusw1,f,c
 21344  01342A  0EFA               	movlw	-6
 21345  01342C  36E3               	rlcf	plusw1,f,c
 21346  01342E  0EFB               	movlw	-5
 21347  013430  36E3               	rlcf	plusw1,f,c
 21348                           
 21349                           ;stkvar	_grs @ sp[(-4)+0]
 21350  013432  0EFC               	movlw	-4
 21351  013434  AEE3               	btfss	plusw1,7,c
 21352  013436  D002               	goto	l2648
 21353                           
 21354                           ;stkvar	_b @ sp[(-4)+-4]
 21355  013438  0EF8               	movlw	-8
 21356  01343A  80E3               	bsf	plusw1,0,c
 21357  01343C                     l2648:
 21358                           
 21359                           ;stkvar	_grs @ sp[(-4)+0]
 21360  01343C  0EFC               	movlw	-4
 21361  01343E  A0E3               	btfss	plusw1,0,c
 21362  013440  D00E               	goto	l6550
 21363                           
 21364                           ;stkvar	_grs @ sp[(-4)+0]
 21365  013442  0EFC               	movlw	-4
 21366  013444  006F FF8C  F03D    	movff	plusw1,btemp+11
 21367  01344A  90D8               	bcf	status,0,c
 21368  01344C  343D               	rlcf	(btemp+11)^0,w,c
 21369  01344E  6E3C               	movwf	(btemp+10)^0,c
 21370  013450  0E01               	movlw	1
 21371  013452  123C               	iorwf	(btemp+10)^0,f,c
 21372                           
 21373                           ;stkvar	_grs @ sp[(-4)+0]
 21374  013454  0EFC               	movlw	-4
 21375  013456  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21376  01345C  D009               	goto	l6552
 21377  01345E                     l6550:
 21378                           
 21379                           ;stkvar	_grs @ sp[(-4)+0]
 21380  01345E  50E1               	movf	fsr1l,w,c
 21381  013460  0FFC               	addlw	-4
 21382  013462  6ED9               	movwf	fsr2l,c
 21383  013464  50E2               	movf	fsr1h,w,c
 21384  013466  6EDA               	movwf	fsr2h,c
 21385  013468  0EFF               	movlw	255
 21386  01346A  22DA               	addwfc	fsr2h,f,c
 21387  01346C  90D8               	bcf	status,0,c
 21388  01346E  36DF               	rlcf	indf2,f,c
 21389  013470                     l6552:
 21390                           
 21391                           ;stkvar	_bexp @ sp[(-4)+1]
 21392  013470  0EFD               	movlw	-3
 21393  013472  50E3               	movf	plusw1,w,c
 21394  013474  B4D8               	btfsc	status,2,c
 21395  013476  D002               	goto	l6556
 21396                           
 21397                           ;stkvar	_bexp @ sp[(-4)+1]
 21398  013478  0EFD               	movlw	-3
 21399  01347A  06E3               	decf	plusw1,f,c
 21400  01347C                     l6556:
 21401                           
 21402                           ;stkvar	_b @ sp[(-4)+-4]
 21403  01347C  0EFA               	movlw	-6
 21404  01347E  AEE3               	btfss	plusw1,7,c
 21405  013480  D7CF               	goto	l6542
 21406  013482                     u4920:
 21407                           
 21408                           ;stkvar	_aexp @ sp[(-4)+2]
 21409  013482  0EFE               	movlw	-2
 21410  013484  6AE3               	clrf	plusw1,c
 21411                           
 21412                           ;stkvar	_grs @ sp[(-4)+0]
 21413  013486  0EFC               	movlw	-4
 21414  013488  AEE3               	btfss	plusw1,7,c
 21415  01348A  D00F               	goto	l6570
 21416                           
 21417                           ;stkvar	_grs @ sp[(-4)+0]
 21418  01348C  0EFC               	movlw	-4
 21419  01348E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21420  013494  0E7F               	movlw	127
 21421  013496  163D               	andwf	(btemp+11)^0,f,c
 21422  013498  B4D8               	btfsc	status,2,c
 21423  01349A  D004               	goto	l6566
 21424  01349C                     u4940:
 21425                           
 21426                           ;stkvar	_aexp @ sp[(-4)+2]
 21427  01349C  0EFE               	movlw	-2
 21428  01349E  6AE3               	clrf	plusw1,c
 21429  0134A0  2AE3               	incf	plusw1,f,c
 21430  0134A2  D003               	goto	l6570
 21431  0134A4                     l6566:
 21432                           
 21433                           ;stkvar	_b @ sp[(-4)+-4]
 21434  0134A4  0EF8               	movlw	-8
 21435  0134A6  B0E3               	btfsc	plusw1,0,c
 21436  0134A8  D7F9               	goto	u4940
 21437  0134AA                     l6570:
 21438                           
 21439                           ;stkvar	_aexp @ sp[(-4)+2]
 21440  0134AA  0EFE               	movlw	-2
 21441  0134AC  50E3               	movf	plusw1,w,c
 21442  0134AE  B4D8               	btfsc	status,2,c
 21443  0134B0  D02B               	goto	l6582
 21444                           
 21445                           ;stkvar	_b @ sp[(-4)+-4]
 21446  0134B2  50E1               	movf	fsr1l,w,c
 21447  0134B4  0FF8               	addlw	-8
 21448  0134B6  6ED9               	movwf	fsr2l,c
 21449  0134B8  50E2               	movf	fsr1h,w,c
 21450  0134BA  6EDA               	movwf	fsr2h,c
 21451  0134BC  0EFF               	movlw	255
 21452  0134BE  22DA               	addwfc	fsr2h,f,c
 21453  0134C0  2ADE               	incf	postinc2,f,c
 21454  0134C2  0E00               	movlw	0
 21455  0134C4  22DE               	addwfc	postinc2,f,c
 21456  0134C6  22DE               	addwfc	postinc2,f,c
 21457  0134C8  22DE               	addwfc	postinc2,f,c
 21458                           
 21459                           ;stkvar	_b @ sp[(-4)+-4]
 21460  0134CA  0EFB               	movlw	-5
 21461  0134CC  A0E3               	btfss	plusw1,0,c
 21462  0134CE  D01C               	goto	l6582
 21463  0134D0  0E01               	movlw	1
 21464  0134D2  6E3D               	movwf	(btemp+11)^0,c
 21465                           
 21466                           ;stkvar	_b @ sp[(-4)+-4]
 21467  0134D4  50E1               	movf	fsr1l,w,c
 21468  0134D6  0FF8               	addlw	-8
 21469  0134D8  6ED9               	movwf	fsr2l,c
 21470  0134DA  50E2               	movf	fsr1h,w,c
 21471  0134DC  6EDA               	movwf	fsr2h,c
 21472  0134DE  0EFF               	movlw	255
 21473  0134E0  22DA               	addwfc	fsr2h,f,c
 21474  0134E2  283D               	incf	(btemp+11)^0,w,c
 21475  0134E4  52DE               	movf	postinc2,f,c
 21476  0134E6  D008               	goto	u4980
 21477  0134E8                     u4985:
 21478  0134E8  52DE               	movf	postinc2,f,c
 21479  0134EA  90D8               	bcf	status,0,c
 21480  0134EC  BEDC               	btfsc	preinc2,7,c
 21481  0134EE  80D8               	bsf	status,0,c
 21482  0134F0  32DD               	rrcf	postdec2,f,c
 21483  0134F2  32DD               	rrcf	postdec2,f,c
 21484  0134F4  32DD               	rrcf	postdec2,f,c
 21485  0134F6  32DE               	rrcf	postinc2,f,c
 21486  0134F8                     u4980:
 21487  0134F8  2EE8               	decfsz	wreg,f,c
 21488  0134FA  D7F6               	goto	u4985
 21489                           
 21490                           ;stkvar	_bexp @ sp[(-4)+1]
 21491  0134FC  0EFD               	movlw	-3
 21492  0134FE  28E3               	incf	plusw1,w,c
 21493  013500  B4D8               	btfsc	status,2,c
 21494  013502  D002               	goto	l6582
 21495                           
 21496                           ;stkvar	_bexp @ sp[(-4)+1]
 21497  013504  0EFD               	movlw	-3
 21498  013506  2AE3               	incf	plusw1,f,c
 21499  013508                     l6582:
 21500                           
 21501                           ;stkvar	_bexp @ sp[(-4)+1]
 21502  013508  0EFD               	movlw	-3
 21503  01350A  28E3               	incf	plusw1,w,c
 21504  01350C  B4D8               	btfsc	status,2,c
 21505  01350E  D004               	goto	u5010
 21506                           
 21507                           ;stkvar	_bexp @ sp[(-4)+1]
 21508  013510  0EFD               	movlw	-3
 21509  013512  50E3               	movf	plusw1,w,c
 21510  013514  A4D8               	btfss	status,2,c
 21511  013516  D00E               	goto	l6592
 21512  013518                     u5010:
 21513                           
 21514                           ;stkvar	_b @ sp[(-4)+-4]
 21515  013518  0EF8               	movlw	-8
 21516  01351A  6AE3               	clrf	plusw1,c
 21517  01351C  0EF9               	movlw	-7
 21518  01351E  6AE3               	clrf	plusw1,c
 21519  013520  0EFA               	movlw	-6
 21520  013522  6AE3               	clrf	plusw1,c
 21521  013524  0EFB               	movlw	-5
 21522  013526  6AE3               	clrf	plusw1,c
 21523                           
 21524                           ;stkvar	_bexp @ sp[(-4)+1]
 21525  013528  0EFD               	movlw	-3
 21526  01352A  50E3               	movf	plusw1,w,c
 21527  01352C  A4D8               	btfss	status,2,c
 21528  01352E  D002               	goto	l6592
 21529                           
 21530                           ;stkvar	_signs @ sp[(-4)+3]
 21531  013530  0EFF               	movlw	-1
 21532  013532  6AE3               	clrf	plusw1,c
 21533  013534                     l6592:
 21534                           
 21535                           ;stkvar	_bexp @ sp[(-4)+1]
 21536  013534  0EFD               	movlw	-3
 21537  013536  A0E3               	btfss	plusw1,0,c
 21538  013538  D009               	goto	l6596
 21539                           
 21540                           ;stkvar	_b @ sp[(-4)+-4]
 21541  01353A  0EFA               	movlw	250
 21542  01353C  24E1               	addwf	fsr1l,w,c
 21543  01353E  6ED9               	movwf	fsr2l,c
 21544  013540  0EFF               	movlw	255
 21545  013542  20E2               	addwfc	fsr1h,w,c
 21546  013544  6EDA               	movwf	fsr2h,c
 21547  013546  0E00               	movlw	0
 21548  013548  8EDB               	bsf	plusw2,7,c
 21549  01354A  D008               	goto	l6598
 21550  01354C                     l6596:
 21551                           
 21552                           ;stkvar	_b @ sp[(-4)+-4]
 21553  01354C  0EFA               	movlw	250
 21554  01354E  24E1               	addwf	fsr1l,w,c
 21555  013550  6ED9               	movwf	fsr2l,c
 21556  013552  0EFF               	movlw	255
 21557  013554  20E2               	addwfc	fsr1h,w,c
 21558  013556  6EDA               	movwf	fsr2h,c
 21559  013558  0E7F               	movlw	127
 21560  01355A  16DF               	andwf	indf2,f,c
 21561  01355C                     l6598:
 21562                           
 21563                           ;stkvar	_b @ sp[(-4)+-4]
 21564  01355C  0EFB               	movlw	251
 21565  01355E  24E1               	addwf	fsr1l,w,c
 21566  013560  6ED9               	movwf	fsr2l,c
 21567  013562  0EFF               	movlw	255
 21568  013564  20E2               	addwfc	fsr1h,w,c
 21569  013566  6EDA               	movwf	fsr2h,c
 21570                           
 21571                           ;stkvar	_bexp @ sp[(-4)+1]
 21572  013568  0EFD               	movlw	-3
 21573  01356A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21574  013570  90D8               	bcf	status,0,c
 21575  013572  303D               	rrcf	(btemp+11)^0,w,c
 21576  013574  6EDF               	movwf	indf2,c
 21577                           
 21578                           ;stkvar	_signs @ sp[(-4)+3]
 21579  013576  0EFF               	movlw	-1
 21580  013578  AEE3               	btfss	plusw1,7,c
 21581  01357A  D008               	goto	l6604
 21582                           
 21583                           ;stkvar	_b @ sp[(-4)+-4]
 21584  01357C  0EFB               	movlw	251
 21585  01357E  24E1               	addwf	fsr1l,w,c
 21586  013580  6ED9               	movwf	fsr2l,c
 21587  013582  0EFF               	movlw	255
 21588  013584  20E2               	addwfc	fsr1h,w,c
 21589  013586  6EDA               	movwf	fsr2h,c
 21590  013588  0E00               	movlw	0
 21591  01358A  8EDB               	bsf	plusw2,7,c
 21592  01358C                     l6604:
 21593                           
 21594                           ;stkvar	_b @ sp[(-4)+-4]
 21595  01358C  0EF8               	movlw	-8
 21596  01358E  006F FF8C  F032    	movff	plusw1,btemp
 21597  013594  0EF9               	movlw	-7
 21598  013596  006F FF8C  F033    	movff	plusw1,btemp+1
 21599  01359C  0EFA               	movlw	-6
 21600  01359E  006F FF8C  F034    	movff	plusw1,btemp+2
 21601  0135A4  0EFB               	movlw	-5
 21602  0135A6  006F FF8C  F035    	movff	plusw1,btemp+3
 21603  0135AC                     l2636:
 21604                           
 21605                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21606  0135AC  0EF4               	movlw	244
 21607  0135AE  26E1               	addwf	fsr1l,f,c
 21608  0135B0  0EFF               	movlw	255
 21609  0135B2  22E2               	addwfc	fsr1h,f,c
 21610  0135B4  0012               	return		;funcret
 21611  0135B6                     __end_of___fladd:
 21612                           	opt callstack 0
 21613                           
 21614 ;; *************** function ___flmul *****************
 21615 ;; Defined at:
 21616 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21617 ;; Parameters:    Size  Location     Type
 21618 ;;  b               4  [STACK] unsigned char 
 21619 ;;  a               4  [STACK] unsigned char 
 21620 ;; Auto vars:     Size  Location     Type
 21621 ;;  prod            4  [STACK] struct .
 21622 ;;  grs             4  [STACK] unsigned long 
 21623 ;;  temp            2  [STACK] struct .
 21624 ;;  bexp            1  [STACK] unsigned char 
 21625 ;;  aexp            1  [STACK] unsigned char 
 21626 ;;  sign            1  [STACK] unsigned char 
 21627 ;; Return value:  Size  Location     Type
 21628 ;;                  4  [STACK] unsigned char 
 21629 ;; Registers used:
 21630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21631 ;; Tracked objects:
 21632 ;;		On entry : 0/2
 21633 ;;		On exit  : 0/0
 21634 ;;		Unchanged: 0/0
 21635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21640 ;;Total ram usage:        0 bytes
 21641 ;; Hardware stack levels used:    1
 21642 ;; Hardware stack levels required when called:    6
 21643 ;; This function calls:
 21644 ;;		Nothing
 21645 ;; This function is called by:
 21646 ;;		_conv_raw_result
 21647 ;;		_lp_filter
 21648 ;;		_calc_model_data
 21649 ;;		_efgtoa
 21650 ;; This function uses a reentrant model
 21651 ;;
 21652                           
 21653                           	psect	text89
 21654  0125D0                     __ptext89:
 21655                           	opt callstack 0
 21656  0125D0                     ___flmul:
 21657                           	opt callstack 0
 21658                           
 21659                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21660  0125D0  0E0D               	movlw	13
 21661  0125D2  26E1               	addwf	fsr1l,f,c
 21662  0125D4  0E00               	movlw	0
 21663  0125D6  22E2               	addwfc	fsr1h,f,c
 21664                           
 21665                           ;stkvar	_b @ sp[(-13)+-4]
 21666                           
 21667                           ;incstack = 0
 21668  0125D8  0EF2               	movlw	242
 21669  0125DA  24E1               	addwf	fsr1l,w,c
 21670  0125DC  6ED9               	movwf	fsr2l,c
 21671  0125DE  0EFF               	movlw	255
 21672  0125E0  20E2               	addwfc	fsr1h,w,c
 21673  0125E2  6EDA               	movwf	fsr2h,c
 21674  0125E4  50DF               	movf	indf2,w,c
 21675  0125E6  6E3D               	movwf	(btemp+11)^0,c
 21676  0125E8  0E80               	movlw	128
 21677  0125EA  163D               	andwf	(btemp+11)^0,f,c
 21678                           
 21679                           ;stkvar	_sign @ sp[(-13)+12]
 21680  0125EC  0EFF               	movlw	-1
 21681  0125EE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21682                           
 21683                           ;stkvar	_b @ sp[(-13)+-4]
 21684  0125F4  0EF2               	movlw	242
 21685  0125F6  24E1               	addwf	fsr1l,w,c
 21686  0125F8  6ED9               	movwf	fsr2l,c
 21687  0125FA  0EFF               	movlw	255
 21688  0125FC  20E2               	addwfc	fsr1h,w,c
 21689  0125FE  6EDA               	movwf	fsr2h,c
 21690  012600  50DF               	movf	indf2,w,c
 21691  012602  6E3D               	movwf	(btemp+11)^0,c
 21692  012604  90D8               	bcf	status,0,c
 21693  012606  343D               	rlcf	(btemp+11)^0,w,c
 21694  012608  6E3C               	movwf	(btemp+10)^0,c
 21695                           
 21696                           ;stkvar	_bexp @ sp[(-13)+10]
 21697  01260A  0EFD               	movlw	-3
 21698  01260C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21699                           
 21700                           ;stkvar	_b @ sp[(-13)+-4]
 21701  012612  0EF1               	movlw	241
 21702  012614  24E1               	addwf	fsr1l,w,c
 21703  012616  6ED9               	movwf	fsr2l,c
 21704  012618  0EFF               	movlw	255
 21705  01261A  20E2               	addwfc	fsr1h,w,c
 21706  01261C  6EDA               	movwf	fsr2h,c
 21707  01261E  AEDF               	btfss	indf2,7,c
 21708  012620  D002               	goto	l6988
 21709                           
 21710                           ;stkvar	_bexp @ sp[(-13)+10]
 21711  012622  0EFD               	movlw	-3
 21712  012624  80E3               	bsf	plusw1,0,c
 21713  012626                     l6988:
 21714                           
 21715                           ;stkvar	_bexp @ sp[(-13)+10]
 21716  012626  0EFD               	movlw	-3
 21717  012628  50E3               	movf	plusw1,w,c
 21718  01262A  B4D8               	btfsc	status,2,c
 21719  01262C  D01F               	goto	l6996
 21720                           
 21721                           ;stkvar	_bexp @ sp[(-13)+10]
 21722  01262E  0EFD               	movlw	-3
 21723  012630  28E3               	incf	plusw1,w,c
 21724  012632  A4D8               	btfss	status,2,c
 21725  012634  D018               	goto	l6994
 21726  012636  0E00               	movlw	0
 21727  012638  6E3A               	movwf	(btemp+8)^0,c
 21728  01263A  0E00               	movlw	0
 21729  01263C  6E3B               	movwf	(btemp+9)^0,c
 21730  01263E  0E00               	movlw	0
 21731  012640  6E3C               	movwf	(btemp+10)^0,c
 21732  012642  0E00               	movlw	0
 21733  012644  6E3D               	movwf	(btemp+11)^0,c
 21734                           
 21735                           ;stkvar	_b @ sp[(-13)+-4]
 21736  012646  0EEF               	movlw	-17
 21737  012648  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21738  01264E  0EF0               	movlw	-16
 21739  012650  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21740  012656  0EF1               	movlw	-15
 21741  012658  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21742  01265E  0EF2               	movlw	-14
 21743  012660  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21744  012666                     l6994:
 21745                           
 21746                           ;stkvar	_b @ sp[(-13)+-4]
 21747  012666  0EF1               	movlw	-15
 21748  012668  8EE3               	bsf	plusw1,7,c
 21749  01266A  D018               	goto	l6998
 21750  01266C                     l6996:
 21751  01266C  0E00               	movlw	0
 21752  01266E  6E3A               	movwf	(btemp+8)^0,c
 21753  012670  0E00               	movlw	0
 21754  012672  6E3B               	movwf	(btemp+9)^0,c
 21755  012674  0E00               	movlw	0
 21756  012676  6E3C               	movwf	(btemp+10)^0,c
 21757  012678  0E00               	movlw	0
 21758  01267A  6E3D               	movwf	(btemp+11)^0,c
 21759                           
 21760                           ;stkvar	_b @ sp[(-13)+-4]
 21761  01267C  0EEF               	movlw	-17
 21762  01267E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21763  012684  0EF0               	movlw	-16
 21764  012686  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21765  01268C  0EF1               	movlw	-15
 21766  01268E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21767  012694  0EF2               	movlw	-14
 21768  012696  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21769  01269C                     l6998:
 21770                           
 21771                           ;stkvar	_a @ sp[(-13)+-8]
 21772  01269C  0EEE               	movlw	238
 21773  01269E  24E1               	addwf	fsr1l,w,c
 21774  0126A0  6ED9               	movwf	fsr2l,c
 21775  0126A2  0EFF               	movlw	255
 21776  0126A4  20E2               	addwfc	fsr1h,w,c
 21777  0126A6  6EDA               	movwf	fsr2h,c
 21778  0126A8  50DF               	movf	indf2,w,c
 21779  0126AA  6E3D               	movwf	(btemp+11)^0,c
 21780  0126AC  0E80               	movlw	128
 21781  0126AE  163D               	andwf	(btemp+11)^0,f,c
 21782                           
 21783                           ;stkvar	_sign @ sp[(-13)+12]
 21784  0126B0  50E1               	movf	fsr1l,w,c
 21785  0126B2  0FFF               	addlw	-1
 21786  0126B4  6ED9               	movwf	fsr2l,c
 21787  0126B6  50E2               	movf	fsr1h,w,c
 21788  0126B8  6EDA               	movwf	fsr2h,c
 21789  0126BA  0EFF               	movlw	255
 21790  0126BC  22DA               	addwfc	fsr2h,f,c
 21791  0126BE  503D               	movf	(btemp+11)^0,w,c
 21792  0126C0  1ADF               	xorwf	indf2,f,c
 21793                           
 21794                           ;stkvar	_a @ sp[(-13)+-8]
 21795  0126C2  0EEE               	movlw	238
 21796  0126C4  24E1               	addwf	fsr1l,w,c
 21797  0126C6  6ED9               	movwf	fsr2l,c
 21798  0126C8  0EFF               	movlw	255
 21799  0126CA  20E2               	addwfc	fsr1h,w,c
 21800  0126CC  6EDA               	movwf	fsr2h,c
 21801  0126CE  50DF               	movf	indf2,w,c
 21802  0126D0  6E3D               	movwf	(btemp+11)^0,c
 21803  0126D2  90D8               	bcf	status,0,c
 21804  0126D4  343D               	rlcf	(btemp+11)^0,w,c
 21805  0126D6  6E3C               	movwf	(btemp+10)^0,c
 21806                           
 21807                           ;stkvar	_aexp @ sp[(-13)+11]
 21808  0126D8  0EFE               	movlw	-2
 21809  0126DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21810                           
 21811                           ;stkvar	_a @ sp[(-13)+-8]
 21812  0126E0  0EED               	movlw	237
 21813  0126E2  24E1               	addwf	fsr1l,w,c
 21814  0126E4  6ED9               	movwf	fsr2l,c
 21815  0126E6  0EFF               	movlw	255
 21816  0126E8  20E2               	addwfc	fsr1h,w,c
 21817  0126EA  6EDA               	movwf	fsr2h,c
 21818  0126EC  AEDF               	btfss	indf2,7,c
 21819  0126EE  D002               	goto	l7006
 21820                           
 21821                           ;stkvar	_aexp @ sp[(-13)+11]
 21822  0126F0  0EFE               	movlw	-2
 21823  0126F2  80E3               	bsf	plusw1,0,c
 21824  0126F4                     l7006:
 21825                           
 21826                           ;stkvar	_aexp @ sp[(-13)+11]
 21827  0126F4  0EFE               	movlw	-2
 21828  0126F6  50E3               	movf	plusw1,w,c
 21829  0126F8  B4D8               	btfsc	status,2,c
 21830  0126FA  D01F               	goto	l7014
 21831                           
 21832                           ;stkvar	_aexp @ sp[(-13)+11]
 21833  0126FC  0EFE               	movlw	-2
 21834  0126FE  28E3               	incf	plusw1,w,c
 21835  012700  A4D8               	btfss	status,2,c
 21836  012702  D018               	goto	l7012
 21837  012704  0E00               	movlw	0
 21838  012706  6E3A               	movwf	(btemp+8)^0,c
 21839  012708  0E00               	movlw	0
 21840  01270A  6E3B               	movwf	(btemp+9)^0,c
 21841  01270C  0E00               	movlw	0
 21842  01270E  6E3C               	movwf	(btemp+10)^0,c
 21843  012710  0E00               	movlw	0
 21844  012712  6E3D               	movwf	(btemp+11)^0,c
 21845                           
 21846                           ;stkvar	_a @ sp[(-13)+-8]
 21847  012714  0EEB               	movlw	-21
 21848  012716  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21849  01271C  0EEC               	movlw	-20
 21850  01271E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21851  012724  0EED               	movlw	-19
 21852  012726  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21853  01272C  0EEE               	movlw	-18
 21854  01272E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21855  012734                     l7012:
 21856                           
 21857                           ;stkvar	_a @ sp[(-13)+-8]
 21858  012734  0EED               	movlw	-19
 21859  012736  8EE3               	bsf	plusw1,7,c
 21860  012738  D018               	goto	l7016
 21861  01273A                     l7014:
 21862  01273A  0E00               	movlw	0
 21863  01273C  6E3A               	movwf	(btemp+8)^0,c
 21864  01273E  0E00               	movlw	0
 21865  012740  6E3B               	movwf	(btemp+9)^0,c
 21866  012742  0E00               	movlw	0
 21867  012744  6E3C               	movwf	(btemp+10)^0,c
 21868  012746  0E00               	movlw	0
 21869  012748  6E3D               	movwf	(btemp+11)^0,c
 21870                           
 21871                           ;stkvar	_a @ sp[(-13)+-8]
 21872  01274A  0EEB               	movlw	-21
 21873  01274C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21874  012752  0EEC               	movlw	-20
 21875  012754  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21876  01275A  0EED               	movlw	-19
 21877  01275C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21878  012762  0EEE               	movlw	-18
 21879  012764  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21880  01276A                     l7016:
 21881                           
 21882                           ;stkvar	_aexp @ sp[(-13)+11]
 21883  01276A  0EFE               	movlw	-2
 21884  01276C  50E3               	movf	plusw1,w,c
 21885  01276E  B4D8               	btfsc	status,2,c
 21886  012770  D004               	goto	u5950
 21887                           
 21888                           ;stkvar	_bexp @ sp[(-13)+10]
 21889  012772  0EFD               	movlw	-3
 21890  012774  50E3               	movf	plusw1,w,c
 21891  012776  A4D8               	btfss	status,2,c
 21892  012778  D009               	goto	l7024
 21893  01277A                     u5950:
 21894  01277A  0E00               	movlw	0
 21895  01277C  6E32               	movwf	btemp^0,c
 21896  01277E  0E00               	movlw	0
 21897  012780  6E33               	movwf	(btemp+1)^0,c
 21898  012782  0E00               	movlw	0
 21899  012784  6E34               	movwf	(btemp+2)^0,c
 21900  012786  0E00               	movlw	0
 21901  012788  6E35               	movwf	(btemp+3)^0,c
 21902  01278A  D332               	goto	l2717
 21903  01278C                     l7024:
 21904                           
 21905                           ;stkvar	_b @ sp[(-13)+-4]
 21906  01278C  0EEF               	movlw	-17
 21907  01278E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21908                           
 21909                           ;stkvar	_a @ sp[(-13)+-8]
 21910  012794  0EED               	movlw	237
 21911  012796  24E1               	addwf	fsr1l,w,c
 21912  012798  6ED9               	movwf	fsr2l,c
 21913  01279A  0EFF               	movlw	255
 21914  01279C  20E2               	addwfc	fsr1h,w,c
 21915  01279E  6EDA               	movwf	fsr2h,c
 21916  0127A0  50DF               	movf	indf2,w,c
 21917  0127A2  023D               	mulwf	(btemp+11)^0,c
 21918                           
 21919                           ;stkvar	_temp @ sp[(-13)+8]
 21920  0127A4  0EFB               	movlw	-5
 21921  0127A6  006F FFCF FFE3     	movff	prodl,plusw1
 21922  0127AC  0EFC               	movlw	-4
 21923  0127AE  006F FFD3 FFE3     	movff	prodh,plusw1
 21924                           
 21925                           ;stkvar	_temp @ sp[(-13)+8]
 21926  0127B4  0EFB               	movlw	-5
 21927  0127B6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21928  0127BC  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21929  0127C2  6A37               	clrf	(btemp+5)^0,c
 21930  0127C4  6A38               	clrf	(btemp+6)^0,c
 21931  0127C6  6A39               	clrf	(btemp+7)^0,c
 21932                           
 21933                           ;stkvar	_grs @ sp[(-13)+4]
 21934  0127C8  0EF7               	movlw	-9
 21935  0127CA  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21936  0127D0  0EF8               	movlw	-8
 21937  0127D2  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21938  0127D8  0EF9               	movlw	-7
 21939  0127DA  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21940  0127E0  0EFA               	movlw	-6
 21941  0127E2  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21942                           
 21943                           ;stkvar	_temp @ sp[(-13)+8]
 21944  0127E8  0EFC               	movlw	252
 21945  0127EA  24E1               	addwf	fsr1l,w,c
 21946  0127EC  6ED9               	movwf	fsr2l,c
 21947  0127EE  0EFF               	movlw	255
 21948  0127F0  20E2               	addwfc	fsr1h,w,c
 21949  0127F2  6EDA               	movwf	fsr2h,c
 21950  0127F4  50DF               	movf	indf2,w,c
 21951  0127F6  6E3D               	movwf	(btemp+11)^0,c
 21952  0127F8  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21953  0127FE  6A37               	clrf	(btemp+5)^0,c
 21954  012800  6A38               	clrf	(btemp+6)^0,c
 21955  012802  6A39               	clrf	(btemp+7)^0,c
 21956                           
 21957                           ;stkvar	_prod @ sp[(-13)+0]
 21958  012804  0EF3               	movlw	-13
 21959  012806  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21960  01280C  0EF4               	movlw	-12
 21961  01280E  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21962  012814  0EF5               	movlw	-11
 21963  012816  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21964  01281C  0EF6               	movlw	-10
 21965  01281E  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21966                           
 21967                           ;stkvar	_b @ sp[(-13)+-4]
 21968  012824  0EF0               	movlw	240
 21969  012826  24E1               	addwf	fsr1l,w,c
 21970  012828  6ED9               	movwf	fsr2l,c
 21971  01282A  0EFF               	movlw	255
 21972  01282C  20E2               	addwfc	fsr1h,w,c
 21973  01282E  6EDA               	movwf	fsr2h,c
 21974  012830  50DF               	movf	indf2,w,c
 21975  012832  6E3D               	movwf	(btemp+11)^0,c
 21976                           
 21977                           ;stkvar	_a @ sp[(-13)+-8]
 21978  012834  0EEC               	movlw	236
 21979  012836  24E1               	addwf	fsr1l,w,c
 21980  012838  6ED9               	movwf	fsr2l,c
 21981  01283A  0EFF               	movlw	255
 21982  01283C  20E2               	addwfc	fsr1h,w,c
 21983  01283E  6EDA               	movwf	fsr2h,c
 21984  012840  50DF               	movf	indf2,w,c
 21985  012842  023D               	mulwf	(btemp+11)^0,c
 21986                           
 21987                           ;stkvar	_temp @ sp[(-13)+8]
 21988  012844  0EFB               	movlw	-5
 21989  012846  006F FFCF FFE3     	movff	prodl,plusw1
 21990  01284C  0EFC               	movlw	-4
 21991  01284E  006F FFD3 FFE3     	movff	prodh,plusw1
 21992                           
 21993                           ;stkvar	_grs @ sp[(-13)+4]
 21994  012854  50E1               	movf	fsr1l,w,c
 21995  012856  0FF7               	addlw	-9
 21996  012858  6ED9               	movwf	fsr2l,c
 21997  01285A  50E2               	movf	fsr1h,w,c
 21998  01285C  6EDA               	movwf	fsr2h,c
 21999  01285E  0EFF               	movlw	255
 22000  012860  22DA               	addwfc	fsr2h,f,c
 22001                           
 22002                           ;stkvar	_temp @ sp[(-13)+8]
 22003  012862  0EFB               	movlw	-5
 22004  012864  50E3               	movf	plusw1,w,c
 22005  012866  26DE               	addwf	postinc2,f,c
 22006  012868  0E00               	movlw	0
 22007  01286A  22DE               	addwfc	postinc2,f,c
 22008  01286C  22DE               	addwfc	postinc2,f,c
 22009  01286E  22DE               	addwfc	postinc2,f,c
 22010                           
 22011                           ;stkvar	_prod @ sp[(-13)+0]
 22012  012870  50E1               	movf	fsr1l,w,c
 22013  012872  0FF3               	addlw	-13
 22014  012874  6ED9               	movwf	fsr2l,c
 22015  012876  50E2               	movf	fsr1h,w,c
 22016  012878  6EDA               	movwf	fsr2h,c
 22017  01287A  0EFF               	movlw	255
 22018  01287C  22DA               	addwfc	fsr2h,f,c
 22019                           
 22020                           ;stkvar	_temp @ sp[(-13)+8]
 22021  01287E  0EFC               	movlw	252
 22022  012880  24E1               	addwf	fsr1l,w,c
 22023  012882  6EE9               	movwf	fsr0l,c
 22024  012884  0EFF               	movlw	255
 22025  012886  20E2               	addwfc	fsr1h,w,c
 22026  012888  6EEA               	movwf	fsr0h,c
 22027  01288A  50EF               	movf	indf0,w,c
 22028  01288C  26DE               	addwf	postinc2,f,c
 22029  01288E  0E00               	movlw	0
 22030  012890  22DE               	addwfc	postinc2,f,c
 22031  012892  22DE               	addwfc	postinc2,f,c
 22032  012894  22DE               	addwfc	postinc2,f,c
 22033                           
 22034                           ;stkvar	_b @ sp[(-13)+-4]
 22035  012896  0EF1               	movlw	241
 22036  012898  24E1               	addwf	fsr1l,w,c
 22037  01289A  6ED9               	movwf	fsr2l,c
 22038  01289C  0EFF               	movlw	255
 22039  01289E  20E2               	addwfc	fsr1h,w,c
 22040  0128A0  6EDA               	movwf	fsr2h,c
 22041  0128A2  50DF               	movf	indf2,w,c
 22042  0128A4  6E3D               	movwf	(btemp+11)^0,c
 22043                           
 22044                           ;stkvar	_a @ sp[(-13)+-8]
 22045  0128A6  0EEB               	movlw	-21
 22046  0128A8  50E3               	movf	plusw1,w,c
 22047  0128AA  023D               	mulwf	(btemp+11)^0,c
 22048                           
 22049                           ;stkvar	_temp @ sp[(-13)+8]
 22050  0128AC  0EFB               	movlw	-5
 22051  0128AE  006F FFCF FFE3     	movff	prodl,plusw1
 22052  0128B4  0EFC               	movlw	-4
 22053  0128B6  006F FFD3 FFE3     	movff	prodh,plusw1
 22054                           
 22055                           ;stkvar	_grs @ sp[(-13)+4]
 22056  0128BC  50E1               	movf	fsr1l,w,c
 22057  0128BE  0FF7               	addlw	-9
 22058  0128C0  6ED9               	movwf	fsr2l,c
 22059  0128C2  50E2               	movf	fsr1h,w,c
 22060  0128C4  6EDA               	movwf	fsr2h,c
 22061  0128C6  0EFF               	movlw	255
 22062  0128C8  22DA               	addwfc	fsr2h,f,c
 22063                           
 22064                           ;stkvar	_temp @ sp[(-13)+8]
 22065  0128CA  0EFB               	movlw	-5
 22066  0128CC  50E3               	movf	plusw1,w,c
 22067  0128CE  26DE               	addwf	postinc2,f,c
 22068  0128D0  0E00               	movlw	0
 22069  0128D2  22DE               	addwfc	postinc2,f,c
 22070  0128D4  22DE               	addwfc	postinc2,f,c
 22071  0128D6  22DE               	addwfc	postinc2,f,c
 22072                           
 22073                           ;stkvar	_prod @ sp[(-13)+0]
 22074  0128D8  50E1               	movf	fsr1l,w,c
 22075  0128DA  0FF3               	addlw	-13
 22076  0128DC  6ED9               	movwf	fsr2l,c
 22077  0128DE  50E2               	movf	fsr1h,w,c
 22078  0128E0  6EDA               	movwf	fsr2h,c
 22079  0128E2  0EFF               	movlw	255
 22080  0128E4  22DA               	addwfc	fsr2h,f,c
 22081                           
 22082                           ;stkvar	_temp @ sp[(-13)+8]
 22083  0128E6  0EFC               	movlw	252
 22084  0128E8  24E1               	addwf	fsr1l,w,c
 22085  0128EA  6EE9               	movwf	fsr0l,c
 22086  0128EC  0EFF               	movlw	255
 22087  0128EE  20E2               	addwfc	fsr1h,w,c
 22088  0128F0  6EEA               	movwf	fsr0h,c
 22089  0128F2  50EF               	movf	indf0,w,c
 22090  0128F4  26DE               	addwf	postinc2,f,c
 22091  0128F6  0E00               	movlw	0
 22092  0128F8  22DE               	addwfc	postinc2,f,c
 22093  0128FA  22DE               	addwfc	postinc2,f,c
 22094  0128FC  22DE               	addwfc	postinc2,f,c
 22095                           
 22096                           ;stkvar	_grs @ sp[(-13)+4]
 22097  0128FE  50E1               	movf	fsr1l,w,c
 22098  012900  0FF7               	addlw	-9
 22099  012902  6ED9               	movwf	fsr2l,c
 22100  012904  50E2               	movf	fsr1h,w,c
 22101  012906  6EDA               	movwf	fsr2h,c
 22102  012908  0EFF               	movlw	255
 22103  01290A  22DA               	addwfc	fsr2h,f,c
 22104  01290C  0E08               	movlw	8
 22105  01290E                     u5965:
 22106  01290E  90D8               	bcf	status,0,c
 22107  012910  36DE               	rlcf	postinc2,f,c
 22108  012912  36DE               	rlcf	postinc2,f,c
 22109  012914  36DE               	rlcf	postinc2,f,c
 22110  012916  36DD               	rlcf	postdec2,f,c
 22111  012918  52DD               	movf	postdec2,f,c
 22112  01291A  52DD               	movf	postdec2,f,c
 22113  01291C  2EE8               	decfsz	wreg,f,c
 22114  01291E  D7F7               	goto	u5965
 22115                           
 22116                           ;stkvar	_b @ sp[(-13)+-4]
 22117  012920  0EF0               	movlw	240
 22118  012922  24E1               	addwf	fsr1l,w,c
 22119  012924  6ED9               	movwf	fsr2l,c
 22120  012926  0EFF               	movlw	255
 22121  012928  20E2               	addwfc	fsr1h,w,c
 22122  01292A  6EDA               	movwf	fsr2h,c
 22123  01292C  50DF               	movf	indf2,w,c
 22124  01292E  6E3D               	movwf	(btemp+11)^0,c
 22125                           
 22126                           ;stkvar	_a @ sp[(-13)+-8]
 22127  012930  0EEB               	movlw	-21
 22128  012932  50E3               	movf	plusw1,w,c
 22129  012934  023D               	mulwf	(btemp+11)^0,c
 22130                           
 22131                           ;stkvar	_temp @ sp[(-13)+8]
 22132  012936  0EFB               	movlw	-5
 22133  012938  006F FFCF FFE3     	movff	prodl,plusw1
 22134  01293E  0EFC               	movlw	-4
 22135  012940  006F FFD3 FFE3     	movff	prodh,plusw1
 22136                           
 22137                           ;stkvar	_temp @ sp[(-13)+8]
 22138  012946  0EFB               	movlw	-5
 22139  012948  006F FF8C  F03C    	movff	plusw1,btemp+10
 22140  01294E  0EFC               	movlw	-4
 22141  012950  006F FF8C  F03D    	movff	plusw1,btemp+11
 22142                           
 22143                           ;stkvar	_grs @ sp[(-13)+4]
 22144  012956  50E1               	movf	fsr1l,w,c
 22145  012958  0FF7               	addlw	-9
 22146  01295A  6ED9               	movwf	fsr2l,c
 22147  01295C  50E2               	movf	fsr1h,w,c
 22148  01295E  6EDA               	movwf	fsr2h,c
 22149  012960  0EFF               	movlw	255
 22150  012962  22DA               	addwfc	fsr2h,f,c
 22151  012964  503C               	movf	(btemp+10)^0,w,c
 22152  012966  26DE               	addwf	postinc2,f,c
 22153  012968  503D               	movf	(btemp+11)^0,w,c
 22154  01296A  22DE               	addwfc	postinc2,f,c
 22155  01296C  0E00               	movlw	0
 22156  01296E  22DE               	addwfc	postinc2,f,c
 22157  012970  22DE               	addwfc	postinc2,f,c
 22158                           
 22159                           ;stkvar	_b @ sp[(-13)+-4]
 22160  012972  0EEF               	movlw	-17
 22161  012974  006F FF8C  F03D    	movff	plusw1,btemp+11
 22162                           
 22163                           ;stkvar	_a @ sp[(-13)+-8]
 22164  01297A  0EEC               	movlw	236
 22165  01297C  24E1               	addwf	fsr1l,w,c
 22166  01297E  6ED9               	movwf	fsr2l,c
 22167  012980  0EFF               	movlw	255
 22168  012982  20E2               	addwfc	fsr1h,w,c
 22169  012984  6EDA               	movwf	fsr2h,c
 22170  012986  50DF               	movf	indf2,w,c
 22171  012988  023D               	mulwf	(btemp+11)^0,c
 22172                           
 22173                           ;stkvar	_temp @ sp[(-13)+8]
 22174  01298A  0EFB               	movlw	-5
 22175  01298C  006F FFCF FFE3     	movff	prodl,plusw1
 22176  012992  0EFC               	movlw	-4
 22177  012994  006F FFD3 FFE3     	movff	prodh,plusw1
 22178                           
 22179                           ;stkvar	_temp @ sp[(-13)+8]
 22180  01299A  0EFB               	movlw	-5
 22181  01299C  006F FF8C  F03C    	movff	plusw1,btemp+10
 22182  0129A2  0EFC               	movlw	-4
 22183  0129A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 22184                           
 22185                           ;stkvar	_grs @ sp[(-13)+4]
 22186  0129AA  50E1               	movf	fsr1l,w,c
 22187  0129AC  0FF7               	addlw	-9
 22188  0129AE  6ED9               	movwf	fsr2l,c
 22189  0129B0  50E2               	movf	fsr1h,w,c
 22190  0129B2  6EDA               	movwf	fsr2h,c
 22191  0129B4  0EFF               	movlw	255
 22192  0129B6  22DA               	addwfc	fsr2h,f,c
 22193  0129B8  503C               	movf	(btemp+10)^0,w,c
 22194  0129BA  26DE               	addwf	postinc2,f,c
 22195  0129BC  503D               	movf	(btemp+11)^0,w,c
 22196  0129BE  22DE               	addwfc	postinc2,f,c
 22197  0129C0  0E00               	movlw	0
 22198  0129C2  22DE               	addwfc	postinc2,f,c
 22199  0129C4  22DE               	addwfc	postinc2,f,c
 22200                           
 22201                           ;stkvar	_grs @ sp[(-13)+4]
 22202  0129C6  50E1               	movf	fsr1l,w,c
 22203  0129C8  0FF7               	addlw	-9
 22204  0129CA  6ED9               	movwf	fsr2l,c
 22205  0129CC  50E2               	movf	fsr1h,w,c
 22206  0129CE  6EDA               	movwf	fsr2h,c
 22207  0129D0  0EFF               	movlw	255
 22208  0129D2  22DA               	addwfc	fsr2h,f,c
 22209  0129D4  0E08               	movlw	8
 22210  0129D6                     u5975:
 22211  0129D6  90D8               	bcf	status,0,c
 22212  0129D8  36DE               	rlcf	postinc2,f,c
 22213  0129DA  36DE               	rlcf	postinc2,f,c
 22214  0129DC  36DE               	rlcf	postinc2,f,c
 22215  0129DE  36DD               	rlcf	postdec2,f,c
 22216  0129E0  52DD               	movf	postdec2,f,c
 22217  0129E2  52DD               	movf	postdec2,f,c
 22218  0129E4  2EE8               	decfsz	wreg,f,c
 22219  0129E6  D7F7               	goto	u5975
 22220                           
 22221                           ;stkvar	_b @ sp[(-13)+-4]
 22222  0129E8  0EEF               	movlw	-17
 22223  0129EA  006F FF8C  F03D    	movff	plusw1,btemp+11
 22224                           
 22225                           ;stkvar	_a @ sp[(-13)+-8]
 22226  0129F0  0EEB               	movlw	-21
 22227  0129F2  50E3               	movf	plusw1,w,c
 22228  0129F4  023D               	mulwf	(btemp+11)^0,c
 22229                           
 22230                           ;stkvar	_temp @ sp[(-13)+8]
 22231  0129F6  0EFB               	movlw	-5
 22232  0129F8  006F FFCF FFE3     	movff	prodl,plusw1
 22233  0129FE  0EFC               	movlw	-4
 22234  012A00  006F FFD3 FFE3     	movff	prodh,plusw1
 22235                           
 22236                           ;stkvar	_temp @ sp[(-13)+8]
 22237  012A06  0EFB               	movlw	-5
 22238  012A08  006F FF8C  F03C    	movff	plusw1,btemp+10
 22239  012A0E  0EFC               	movlw	-4
 22240  012A10  006F FF8C  F03D    	movff	plusw1,btemp+11
 22241                           
 22242                           ;stkvar	_grs @ sp[(-13)+4]
 22243  012A16  50E1               	movf	fsr1l,w,c
 22244  012A18  0FF7               	addlw	-9
 22245  012A1A  6ED9               	movwf	fsr2l,c
 22246  012A1C  50E2               	movf	fsr1h,w,c
 22247  012A1E  6EDA               	movwf	fsr2h,c
 22248  012A20  0EFF               	movlw	255
 22249  012A22  22DA               	addwfc	fsr2h,f,c
 22250  012A24  503C               	movf	(btemp+10)^0,w,c
 22251  012A26  26DE               	addwf	postinc2,f,c
 22252  012A28  503D               	movf	(btemp+11)^0,w,c
 22253  012A2A  22DE               	addwfc	postinc2,f,c
 22254  012A2C  0E00               	movlw	0
 22255  012A2E  22DE               	addwfc	postinc2,f,c
 22256  012A30  22DE               	addwfc	postinc2,f,c
 22257                           
 22258                           ;stkvar	_b @ sp[(-13)+-4]
 22259  012A32  0EF0               	movlw	240
 22260  012A34  24E1               	addwf	fsr1l,w,c
 22261  012A36  6ED9               	movwf	fsr2l,c
 22262  012A38  0EFF               	movlw	255
 22263  012A3A  20E2               	addwfc	fsr1h,w,c
 22264  012A3C  6EDA               	movwf	fsr2h,c
 22265  012A3E  50DF               	movf	indf2,w,c
 22266  012A40  6E3D               	movwf	(btemp+11)^0,c
 22267                           
 22268                           ;stkvar	_a @ sp[(-13)+-8]
 22269  012A42  0EED               	movlw	237
 22270  012A44  24E1               	addwf	fsr1l,w,c
 22271  012A46  6ED9               	movwf	fsr2l,c
 22272  012A48  0EFF               	movlw	255
 22273  012A4A  20E2               	addwfc	fsr1h,w,c
 22274  012A4C  6EDA               	movwf	fsr2h,c
 22275  012A4E  50DF               	movf	indf2,w,c
 22276  012A50  023D               	mulwf	(btemp+11)^0,c
 22277                           
 22278                           ;stkvar	_temp @ sp[(-13)+8]
 22279  012A52  0EFB               	movlw	-5
 22280  012A54  006F FFCF FFE3     	movff	prodl,plusw1
 22281  012A5A  0EFC               	movlw	-4
 22282  012A5C  006F FFD3 FFE3     	movff	prodh,plusw1
 22283                           
 22284                           ;stkvar	_temp @ sp[(-13)+8]
 22285  012A62  0EFB               	movlw	-5
 22286  012A64  006F FF8C  F03C    	movff	plusw1,btemp+10
 22287  012A6A  0EFC               	movlw	-4
 22288  012A6C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22289                           
 22290                           ;stkvar	_prod @ sp[(-13)+0]
 22291  012A72  50E1               	movf	fsr1l,w,c
 22292  012A74  0FF3               	addlw	-13
 22293  012A76  6ED9               	movwf	fsr2l,c
 22294  012A78  50E2               	movf	fsr1h,w,c
 22295  012A7A  6EDA               	movwf	fsr2h,c
 22296  012A7C  0EFF               	movlw	255
 22297  012A7E  22DA               	addwfc	fsr2h,f,c
 22298  012A80  503C               	movf	(btemp+10)^0,w,c
 22299  012A82  26DE               	addwf	postinc2,f,c
 22300  012A84  503D               	movf	(btemp+11)^0,w,c
 22301  012A86  22DE               	addwfc	postinc2,f,c
 22302  012A88  0E00               	movlw	0
 22303  012A8A  22DE               	addwfc	postinc2,f,c
 22304  012A8C  22DE               	addwfc	postinc2,f,c
 22305                           
 22306                           ;stkvar	_b @ sp[(-13)+-4]
 22307  012A8E  0EF1               	movlw	241
 22308  012A90  24E1               	addwf	fsr1l,w,c
 22309  012A92  6ED9               	movwf	fsr2l,c
 22310  012A94  0EFF               	movlw	255
 22311  012A96  20E2               	addwfc	fsr1h,w,c
 22312  012A98  6EDA               	movwf	fsr2h,c
 22313  012A9A  50DF               	movf	indf2,w,c
 22314  012A9C  6E3D               	movwf	(btemp+11)^0,c
 22315                           
 22316                           ;stkvar	_a @ sp[(-13)+-8]
 22317  012A9E  0EEC               	movlw	236
 22318  012AA0  24E1               	addwf	fsr1l,w,c
 22319  012AA2  6ED9               	movwf	fsr2l,c
 22320  012AA4  0EFF               	movlw	255
 22321  012AA6  20E2               	addwfc	fsr1h,w,c
 22322  012AA8  6EDA               	movwf	fsr2h,c
 22323  012AAA  50DF               	movf	indf2,w,c
 22324  012AAC  023D               	mulwf	(btemp+11)^0,c
 22325                           
 22326                           ;stkvar	_temp @ sp[(-13)+8]
 22327  012AAE  0EFB               	movlw	-5
 22328  012AB0  006F FFCF FFE3     	movff	prodl,plusw1
 22329  012AB6  0EFC               	movlw	-4
 22330  012AB8  006F FFD3 FFE3     	movff	prodh,plusw1
 22331                           
 22332                           ;stkvar	_temp @ sp[(-13)+8]
 22333  012ABE  0EFB               	movlw	-5
 22334  012AC0  006F FF8C  F03C    	movff	plusw1,btemp+10
 22335  012AC6  0EFC               	movlw	-4
 22336  012AC8  006F FF8C  F03D    	movff	plusw1,btemp+11
 22337                           
 22338                           ;stkvar	_prod @ sp[(-13)+0]
 22339  012ACE  50E1               	movf	fsr1l,w,c
 22340  012AD0  0FF3               	addlw	-13
 22341  012AD2  6ED9               	movwf	fsr2l,c
 22342  012AD4  50E2               	movf	fsr1h,w,c
 22343  012AD6  6EDA               	movwf	fsr2h,c
 22344  012AD8  0EFF               	movlw	255
 22345  012ADA  22DA               	addwfc	fsr2h,f,c
 22346  012ADC  503C               	movf	(btemp+10)^0,w,c
 22347  012ADE  26DE               	addwf	postinc2,f,c
 22348  012AE0  503D               	movf	(btemp+11)^0,w,c
 22349  012AE2  22DE               	addwfc	postinc2,f,c
 22350  012AE4  0E00               	movlw	0
 22351  012AE6  22DE               	addwfc	postinc2,f,c
 22352  012AE8  22DE               	addwfc	postinc2,f,c
 22353                           
 22354                           ;stkvar	_b @ sp[(-13)+-4]
 22355  012AEA  0EF1               	movlw	241
 22356  012AEC  24E1               	addwf	fsr1l,w,c
 22357  012AEE  6ED9               	movwf	fsr2l,c
 22358  012AF0  0EFF               	movlw	255
 22359  012AF2  20E2               	addwfc	fsr1h,w,c
 22360  012AF4  6EDA               	movwf	fsr2h,c
 22361  012AF6  50DF               	movf	indf2,w,c
 22362  012AF8  6E3D               	movwf	(btemp+11)^0,c
 22363                           
 22364                           ;stkvar	_a @ sp[(-13)+-8]
 22365  012AFA  0EED               	movlw	237
 22366  012AFC  24E1               	addwf	fsr1l,w,c
 22367  012AFE  6ED9               	movwf	fsr2l,c
 22368  012B00  0EFF               	movlw	255
 22369  012B02  20E2               	addwfc	fsr1h,w,c
 22370  012B04  6EDA               	movwf	fsr2h,c
 22371  012B06  50DF               	movf	indf2,w,c
 22372  012B08  023D               	mulwf	(btemp+11)^0,c
 22373                           
 22374                           ;stkvar	_temp @ sp[(-13)+8]
 22375  012B0A  0EFB               	movlw	-5
 22376  012B0C  006F FFCF FFE3     	movff	prodl,plusw1
 22377  012B12  0EFC               	movlw	-4
 22378  012B14  006F FFD3 FFE3     	movff	prodh,plusw1
 22379                           
 22380                           ;stkvar	_temp @ sp[(-13)+8]
 22381  012B1A  0EFB               	movlw	-5
 22382  012B1C  006F FF8C  F03C    	movff	plusw1,btemp+10
 22383  012B22  0EFC               	movlw	-4
 22384  012B24  006F FF8C  F03D    	movff	plusw1,btemp+11
 22385  012B2A  503C               	movf	(btemp+10)^0,w,c
 22386  012B2C  6E36               	movwf	(btemp+4)^0,c
 22387  012B2E  503D               	movf	(btemp+11)^0,w,c
 22388  012B30  6E37               	movwf	(btemp+5)^0,c
 22389  012B32  6A38               	clrf	(btemp+6)^0,c
 22390  012B34  6A39               	clrf	(btemp+7)^0,c
 22391  012B36  0060  F0E0  F039   	movff	btemp+6,btemp+7
 22392  012B3C  0060  F0DC  F038   	movff	btemp+5,btemp+6
 22393  012B42  0060  F0D8  F037   	movff	btemp+4,btemp+5
 22394  012B48  6A36               	clrf	(btemp+4)^0,c
 22395                           
 22396                           ;stkvar	_prod @ sp[(-13)+0]
 22397  012B4A  50E1               	movf	fsr1l,w,c
 22398  012B4C  0FF3               	addlw	-13
 22399  012B4E  6ED9               	movwf	fsr2l,c
 22400  012B50  50E2               	movf	fsr1h,w,c
 22401  012B52  6EDA               	movwf	fsr2h,c
 22402  012B54  0EFF               	movlw	255
 22403  012B56  22DA               	addwfc	fsr2h,f,c
 22404  012B58  5036               	movf	(btemp+4)^0,w,c
 22405  012B5A  26DE               	addwf	postinc2,f,c
 22406  012B5C  5037               	movf	(btemp+5)^0,w,c
 22407  012B5E  22DE               	addwfc	postinc2,f,c
 22408  012B60  5038               	movf	(btemp+6)^0,w,c
 22409  012B62  22DE               	addwfc	postinc2,f,c
 22410  012B64  5039               	movf	(btemp+7)^0,w,c
 22411  012B66  22DE               	addwfc	postinc2,f,c
 22412                           
 22413                           ;stkvar	_prod @ sp[(-13)+0]
 22414  012B68  50E1               	movf	fsr1l,w,c
 22415  012B6A  0FF3               	addlw	-13
 22416  012B6C  6ED9               	movwf	fsr2l,c
 22417  012B6E  50E2               	movf	fsr1h,w,c
 22418  012B70  6EDA               	movwf	fsr2h,c
 22419  012B72  0EFF               	movlw	255
 22420  012B74  22DA               	addwfc	fsr2h,f,c
 22421                           
 22422                           ;stkvar	_grs @ sp[(-13)+4]
 22423  012B76  0EFA               	movlw	250
 22424  012B78  24E1               	addwf	fsr1l,w,c
 22425  012B7A  6EE9               	movwf	fsr0l,c
 22426  012B7C  0EFF               	movlw	255
 22427  012B7E  20E2               	addwfc	fsr1h,w,c
 22428  012B80  6EEA               	movwf	fsr0h,c
 22429  012B82  50EF               	movf	indf0,w,c
 22430  012B84  26DE               	addwf	postinc2,f,c
 22431  012B86  0E00               	movlw	0
 22432  012B88  22DE               	addwfc	postinc2,f,c
 22433  012B8A  22DE               	addwfc	postinc2,f,c
 22434  012B8C  22DE               	addwfc	postinc2,f,c
 22435                           
 22436                           ;stkvar	_grs @ sp[(-13)+4]
 22437  012B8E  50E1               	movf	fsr1l,w,c
 22438  012B90  0FF7               	addlw	-9
 22439  012B92  6ED9               	movwf	fsr2l,c
 22440  012B94  50E2               	movf	fsr1h,w,c
 22441  012B96  6EDA               	movwf	fsr2h,c
 22442  012B98  0EFF               	movlw	255
 22443  012B9A  22DA               	addwfc	fsr2h,f,c
 22444  012B9C  0E08               	movlw	8
 22445  012B9E                     u5985:
 22446  012B9E  90D8               	bcf	status,0,c
 22447  012BA0  36DE               	rlcf	postinc2,f,c
 22448  012BA2  36DE               	rlcf	postinc2,f,c
 22449  012BA4  36DE               	rlcf	postinc2,f,c
 22450  012BA6  36DD               	rlcf	postdec2,f,c
 22451  012BA8  52DD               	movf	postdec2,f,c
 22452  012BAA  52DD               	movf	postdec2,f,c
 22453  012BAC  2EE8               	decfsz	wreg,f,c
 22454  012BAE  D7F7               	goto	u5985
 22455  012BB0  0E82               	movlw	130
 22456  012BB2  6E3C               	movwf	(btemp+10)^0,c
 22457  012BB4  0EFF               	movlw	255
 22458  012BB6  6E3D               	movwf	(btemp+11)^0,c
 22459                           
 22460                           ;stkvar	_bexp @ sp[(-13)+10]
 22461  012BB8  0EFD               	movlw	-3
 22462  012BBA  50E3               	movf	plusw1,w,c
 22463  012BBC  6E3A               	movwf	(btemp+8)^0,c
 22464  012BBE  6A3B               	clrf	(btemp+9)^0,c
 22465                           
 22466                           ;stkvar	_aexp @ sp[(-13)+11]
 22467  012BC0  0EFE               	movlw	-2
 22468  012BC2  50E3               	movf	plusw1,w,c
 22469  012BC4  263A               	addwf	(btemp+8)^0,f,c
 22470  012BC6  0E00               	movlw	0
 22471  012BC8  223B               	addwfc	(btemp+9)^0,f,c
 22472  012BCA  503C               	movf	(btemp+10)^0,w,c
 22473  012BCC  263A               	addwf	(btemp+8)^0,f,c
 22474  012BCE  503D               	movf	(btemp+11)^0,w,c
 22475  012BD0  223B               	addwfc	(btemp+9)^0,f,c
 22476                           
 22477                           ;stkvar	_temp @ sp[(-13)+8]
 22478  012BD2  0EFB               	movlw	-5
 22479  012BD4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22480  012BDA  0EFC               	movlw	-4
 22481  012BDC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22482  012BE2  D021               	goto	l7086
 22483  012BE4                     l7076:
 22484                           
 22485                           ;stkvar	_prod @ sp[(-13)+0]
 22486  012BE4  90D8               	bcf	status,0,c
 22487  012BE6  0EF3               	movlw	-13
 22488  012BE8  36E3               	rlcf	plusw1,f,c
 22489  012BEA  0EF4               	movlw	-12
 22490  012BEC  36E3               	rlcf	plusw1,f,c
 22491  012BEE  0EF5               	movlw	-11
 22492  012BF0  36E3               	rlcf	plusw1,f,c
 22493  012BF2  0EF6               	movlw	-10
 22494  012BF4  36E3               	rlcf	plusw1,f,c
 22495                           
 22496                           ;stkvar	_grs @ sp[(-13)+4]
 22497  012BF6  0EFA               	movlw	-6
 22498  012BF8  AEE3               	btfss	plusw1,7,c
 22499  012BFA  D002               	goto	l7082
 22500                           
 22501                           ;stkvar	_prod @ sp[(-13)+0]
 22502  012BFC  0EF3               	movlw	-13
 22503  012BFE  80E3               	bsf	plusw1,0,c
 22504  012C00                     l7082:
 22505                           
 22506                           ;stkvar	_grs @ sp[(-13)+4]
 22507  012C00  90D8               	bcf	status,0,c
 22508  012C02  0EF7               	movlw	-9
 22509  012C04  36E3               	rlcf	plusw1,f,c
 22510  012C06  0EF8               	movlw	-8
 22511  012C08  36E3               	rlcf	plusw1,f,c
 22512  012C0A  0EF9               	movlw	-7
 22513  012C0C  36E3               	rlcf	plusw1,f,c
 22514  012C0E  0EFA               	movlw	-6
 22515  012C10  36E3               	rlcf	plusw1,f,c
 22516                           
 22517                           ;stkvar	_temp @ sp[(-13)+8]
 22518  012C12  50E1               	movf	fsr1l,w,c
 22519  012C14  0FFB               	addlw	-5
 22520  012C16  6ED9               	movwf	fsr2l,c
 22521  012C18  50E2               	movf	fsr1h,w,c
 22522  012C1A  6EDA               	movwf	fsr2h,c
 22523  012C1C  0EFF               	movlw	255
 22524  012C1E  22DA               	addwfc	fsr2h,f,c
 22525  012C20  06DE               	decf	postinc2,f,c
 22526  012C22  0E00               	movlw	0
 22527  012C24  5ADD               	subwfb	postdec2,f,c
 22528  012C26                     l7086:
 22529                           
 22530                           ;stkvar	_prod @ sp[(-13)+0]
 22531  012C26  0EF5               	movlw	-11
 22532  012C28  AEE3               	btfss	plusw1,7,c
 22533  012C2A  D7DC               	goto	l7076
 22534                           
 22535                           ;stkvar	_aexp @ sp[(-13)+11]
 22536  012C2C  0EFE               	movlw	-2
 22537  012C2E  6AE3               	clrf	plusw1,c
 22538                           
 22539                           ;stkvar	_grs @ sp[(-13)+4]
 22540  012C30  0EFA               	movlw	-6
 22541  012C32  AEE3               	btfss	plusw1,7,c
 22542  012C34  D020               	goto	l7100
 22543                           
 22544                           ;stkvar	_grs @ sp[(-13)+4]
 22545  012C36  50E1               	movf	fsr1l,w,c
 22546  012C38  0FF7               	addlw	-9
 22547  012C3A  6ED9               	movwf	fsr2l,c
 22548  012C3C  50E2               	movf	fsr1h,w,c
 22549  012C3E  6EDA               	movwf	fsr2h,c
 22550  012C40  0EFF               	movlw	255
 22551  012C42  22DA               	addwfc	fsr2h,f,c
 22552  012C44  0EFF               	movlw	255
 22553  012C46  14DE               	andwf	postinc2,w,c
 22554  012C48  6E3A               	movwf	(btemp+8)^0,c
 22555  012C4A  0EFF               	movlw	255
 22556  012C4C  14DE               	andwf	postinc2,w,c
 22557  012C4E  6E3B               	movwf	(btemp+9)^0,c
 22558  012C50  0EFF               	movlw	255
 22559  012C52  14DE               	andwf	postinc2,w,c
 22560  012C54  6E3C               	movwf	(btemp+10)^0,c
 22561  012C56  0E7F               	movlw	127
 22562  012C58  14DE               	andwf	postinc2,w,c
 22563  012C5A  6E3D               	movwf	(btemp+11)^0,c
 22564  012C5C  503A               	movf	(btemp+8)^0,w,c
 22565  012C5E  103B               	iorwf	(btemp+9)^0,w,c
 22566  012C60  103C               	iorwf	(btemp+10)^0,w,c
 22567  012C62  103D               	iorwf	(btemp+11)^0,w,c
 22568  012C64  B4D8               	btfsc	status,2,c
 22569  012C66  D004               	goto	l7096
 22570  012C68                     u6020:
 22571                           
 22572                           ;stkvar	_aexp @ sp[(-13)+11]
 22573  012C68  0EFE               	movlw	-2
 22574  012C6A  6AE3               	clrf	plusw1,c
 22575  012C6C  2AE3               	incf	plusw1,f,c
 22576  012C6E  D003               	goto	l7100
 22577  012C70                     l7096:
 22578                           
 22579                           ;stkvar	_prod @ sp[(-13)+0]
 22580  012C70  0EF3               	movlw	-13
 22581  012C72  B0E3               	btfsc	plusw1,0,c
 22582  012C74  D7F9               	goto	u6020
 22583  012C76                     l7100:
 22584                           
 22585                           ;stkvar	_aexp @ sp[(-13)+11]
 22586  012C76  0EFE               	movlw	-2
 22587  012C78  50E3               	movf	plusw1,w,c
 22588  012C7A  B4D8               	btfsc	status,2,c
 22589  012C7C  D036               	goto	l7110
 22590                           
 22591                           ;stkvar	_prod @ sp[(-13)+0]
 22592  012C7E  50E1               	movf	fsr1l,w,c
 22593  012C80  0FF3               	addlw	-13
 22594  012C82  6ED9               	movwf	fsr2l,c
 22595  012C84  50E2               	movf	fsr1h,w,c
 22596  012C86  6EDA               	movwf	fsr2h,c
 22597  012C88  0EFF               	movlw	255
 22598  012C8A  22DA               	addwfc	fsr2h,f,c
 22599  012C8C  2ADE               	incf	postinc2,f,c
 22600  012C8E  0E00               	movlw	0
 22601  012C90  22DE               	addwfc	postinc2,f,c
 22602  012C92  22DE               	addwfc	postinc2,f,c
 22603  012C94  22DE               	addwfc	postinc2,f,c
 22604                           
 22605                           ;stkvar	_prod @ sp[(-13)+0]
 22606  012C96  0EF6               	movlw	-10
 22607  012C98  A0E3               	btfss	plusw1,0,c
 22608  012C9A  D027               	goto	l7110
 22609  012C9C  0E01               	movlw	1
 22610  012C9E  6E3D               	movwf	(btemp+11)^0,c
 22611                           
 22612                           ;stkvar	_prod @ sp[(-13)+0]
 22613  012CA0  50E1               	movf	fsr1l,w,c
 22614  012CA2  0FF3               	addlw	-13
 22615  012CA4  6ED9               	movwf	fsr2l,c
 22616  012CA6  50E2               	movf	fsr1h,w,c
 22617  012CA8  6EDA               	movwf	fsr2h,c
 22618  012CAA  0EFF               	movlw	255
 22619  012CAC  22DA               	addwfc	fsr2h,f,c
 22620  012CAE  283D               	incf	(btemp+11)^0,w,c
 22621  012CB0  52DE               	movf	postinc2,f,c
 22622  012CB2  D008               	goto	u6060
 22623  012CB4                     u6065:
 22624  012CB4  52DE               	movf	postinc2,f,c
 22625  012CB6  90D8               	bcf	status,0,c
 22626  012CB8  BEDC               	btfsc	preinc2,7,c
 22627  012CBA  80D8               	bsf	status,0,c
 22628  012CBC  32DD               	rrcf	postdec2,f,c
 22629  012CBE  32DD               	rrcf	postdec2,f,c
 22630  012CC0  32DD               	rrcf	postdec2,f,c
 22631  012CC2  32DE               	rrcf	postinc2,f,c
 22632  012CC4                     u6060:
 22633  012CC4  2EE8               	decfsz	wreg,f,c
 22634  012CC6  D7F6               	goto	u6065
 22635                           
 22636                           ;stkvar	_temp @ sp[(-13)+8]
 22637  012CC8  0EFB               	movlw	-5
 22638  012CCA  50E3               	movf	plusw1,w,c
 22639  012CCC  0F01               	addlw	1
 22640  012CCE  6E32               	movwf	btemp^0,c
 22641  012CD0  0EFB               	movlw	-5
 22642  012CD2  0060  F0CB  FFE3   	movff	btemp,plusw1
 22643  012CD8  6A32               	clrf	btemp^0,c
 22644  012CDA  0EFC               	movlw	-4
 22645  012CDC  50E3               	movf	plusw1,w,c
 22646  012CDE  2032               	addwfc	btemp^0,w,c
 22647  012CE0  6E32               	movwf	btemp^0,c
 22648  012CE2  0EFC               	movlw	-4
 22649  012CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 22650  012CEA                     l7110:
 22651                           
 22652                           ;stkvar	_temp @ sp[(-13)+8]
 22653  012CEA  0EFC               	movlw	-4
 22654  012CEC  BEE3               	btfsc	plusw1,7,c
 22655  012CEE  D020               	goto	l7114
 22656  012CF0  0EFC               	movlw	-4
 22657  012CF2  50E3               	movf	plusw1,w,c
 22658  012CF4  E104               	bnz	u6070
 22659  012CF6  0EFB               	movlw	-5
 22660  012CF8  28E3               	incf	plusw1,w,c
 22661  012CFA  A0D8               	btfss	status,0,c
 22662  012CFC  D019               	goto	l7114
 22663  012CFE                     u6070:
 22664  012CFE  0E00               	movlw	0
 22665  012D00  6E3A               	movwf	(btemp+8)^0,c
 22666  012D02  0E00               	movlw	0
 22667  012D04  6E3B               	movwf	(btemp+9)^0,c
 22668  012D06  0E80               	movlw	128
 22669  012D08  6E3C               	movwf	(btemp+10)^0,c
 22670  012D0A  0E7F               	movlw	127
 22671  012D0C  6E3D               	movwf	(btemp+11)^0,c
 22672                           
 22673                           ;stkvar	_prod @ sp[(-13)+0]
 22674  012D0E  0EF3               	movlw	-13
 22675  012D10  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22676  012D16  0EF4               	movlw	-12
 22677  012D18  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22678  012D1E  0EF5               	movlw	-11
 22679  012D20  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22680  012D26  0EF6               	movlw	-10
 22681  012D28  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22682  012D2E  D044               	goto	l7130
 22683  012D30                     l7114:
 22684                           
 22685                           ;stkvar	_temp @ sp[(-13)+8]
 22686  012D30  0EFC               	movlw	-4
 22687  012D32  BEE3               	btfsc	plusw1,7,c
 22688  012D34  D007               	goto	u6080
 22689  012D36  0EFC               	movlw	-4
 22690  012D38  50E3               	movf	plusw1,w,c
 22691  012D3A  E10F               	bnz	l7120
 22692  012D3C  0EFB               	movlw	-5
 22693  012D3E  04E3               	decf	plusw1,w,c
 22694  012D40  B0D8               	btfsc	status,0,c
 22695  012D42  D00B               	goto	l7120
 22696  012D44                     u6080:
 22697                           
 22698                           ;stkvar	_prod @ sp[(-13)+0]
 22699  012D44  0EF3               	movlw	-13
 22700  012D46  6AE3               	clrf	plusw1,c
 22701  012D48  0EF4               	movlw	-12
 22702  012D4A  6AE3               	clrf	plusw1,c
 22703  012D4C  0EF5               	movlw	-11
 22704  012D4E  6AE3               	clrf	plusw1,c
 22705  012D50  0EF6               	movlw	-10
 22706  012D52  6AE3               	clrf	plusw1,c
 22707                           
 22708                           ;stkvar	_sign @ sp[(-13)+12]
 22709  012D54  0EFF               	movlw	-1
 22710  012D56  6AE3               	clrf	plusw1,c
 22711  012D58  D02F               	goto	l7130
 22712  012D5A                     l7120:
 22713                           
 22714                           ;stkvar	_temp @ sp[(-13)+8]
 22715                           ;stkvar	_bexp @ sp[(-13)+10]
 22716  012D5A  0EFB               	movlw	-5
 22717  012D5C  006F FF8C  F032    	movff	plusw1,btemp
 22718  012D62  0EFD               	movlw	-3
 22719  012D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 22720                           
 22721                           ;stkvar	_prod @ sp[(-13)+0]
 22722  012D6A  50E1               	movf	fsr1l,w,c
 22723  012D6C  0FF3               	addlw	-13
 22724  012D6E  6ED9               	movwf	fsr2l,c
 22725  012D70  50E2               	movf	fsr1h,w,c
 22726  012D72  6EDA               	movwf	fsr2h,c
 22727  012D74  0EFF               	movlw	255
 22728  012D76  22DA               	addwfc	fsr2h,f,c
 22729  012D78  0EFF               	movlw	255
 22730  012D7A  16DE               	andwf	postinc2,f,c
 22731  012D7C  0EFF               	movlw	255
 22732  012D7E  16DE               	andwf	postinc2,f,c
 22733  012D80  0E7F               	movlw	127
 22734  012D82  16DE               	andwf	postinc2,f,c
 22735  012D84  0E00               	movlw	0
 22736  012D86  16DE               	andwf	postinc2,f,c
 22737                           
 22738                           ;stkvar	_bexp @ sp[(-13)+10]
 22739  012D88  0EFD               	movlw	-3
 22740  012D8A  A0E3               	btfss	plusw1,0,c
 22741  012D8C  D008               	goto	l7128
 22742                           
 22743                           ;stkvar	_prod @ sp[(-13)+0]
 22744  012D8E  0EF5               	movlw	245
 22745  012D90  24E1               	addwf	fsr1l,w,c
 22746  012D92  6ED9               	movwf	fsr2l,c
 22747  012D94  0EFF               	movlw	255
 22748  012D96  20E2               	addwfc	fsr1h,w,c
 22749  012D98  6EDA               	movwf	fsr2h,c
 22750  012D9A  0E00               	movlw	0
 22751  012D9C  8EDB               	bsf	plusw2,7,c
 22752  012D9E                     l7128:
 22753                           
 22754                           ;stkvar	_prod @ sp[(-13)+0]
 22755  012D9E  0EF6               	movlw	246
 22756  012DA0  24E1               	addwf	fsr1l,w,c
 22757  012DA2  6ED9               	movwf	fsr2l,c
 22758  012DA4  0EFF               	movlw	255
 22759  012DA6  20E2               	addwfc	fsr1h,w,c
 22760  012DA8  6EDA               	movwf	fsr2h,c
 22761                           
 22762                           ;stkvar	_bexp @ sp[(-13)+10]
 22763  012DAA  0EFD               	movlw	-3
 22764  012DAC  006F FF8C  F03D    	movff	plusw1,btemp+11
 22765  012DB2  90D8               	bcf	status,0,c
 22766  012DB4  303D               	rrcf	(btemp+11)^0,w,c
 22767  012DB6  6EDF               	movwf	indf2,c
 22768  012DB8                     l7130:
 22769                           
 22770                           ;stkvar	_sign @ sp[(-13)+12]
 22771  012DB8  0EFF               	movlw	-1
 22772  012DBA  006F FF8C  F03D    	movff	plusw1,btemp+11
 22773                           
 22774                           ;stkvar	_prod @ sp[(-13)+0]
 22775  012DC0  0EF6               	movlw	246
 22776  012DC2  24E1               	addwf	fsr1l,w,c
 22777  012DC4  6ED9               	movwf	fsr2l,c
 22778  012DC6  0EFF               	movlw	255
 22779  012DC8  20E2               	addwfc	fsr1h,w,c
 22780  012DCA  6EDA               	movwf	fsr2h,c
 22781  012DCC  503D               	movf	(btemp+11)^0,w,c
 22782  012DCE  12DF               	iorwf	indf2,f,c
 22783                           
 22784                           ;stkvar	_prod @ sp[(-13)+0]
 22785  012DD0  0EF3               	movlw	-13
 22786  012DD2  006F FF8C  F032    	movff	plusw1,btemp
 22787  012DD8  0EF4               	movlw	-12
 22788  012DDA  006F FF8C  F033    	movff	plusw1,btemp+1
 22789  012DE0  0EF5               	movlw	-11
 22790  012DE2  006F FF8C  F034    	movff	plusw1,btemp+2
 22791  012DE8  0EF6               	movlw	-10
 22792  012DEA  006F FF8C  F035    	movff	plusw1,btemp+3
 22793  012DF0                     l2717:
 22794                           
 22795                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 22796  012DF0  0EEB               	movlw	235
 22797  012DF2  26E1               	addwf	fsr1l,f,c
 22798  012DF4  0EFF               	movlw	255
 22799  012DF6  22E2               	addwfc	fsr1h,f,c
 22800  012DF8  0012               	return		;funcret
 22801  012DFA                     __end_of___flmul:
 22802                           	opt callstack 0
 22803                           
 22804 ;; *************** function _SYSTEM_Initialize *****************
 22805 ;; Defined at:
 22806 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;		None
 22809 ;; Auto vars:     Size  Location     Type
 22810 ;;		None
 22811 ;; Return value:  Size  Location     Type
 22812 ;;                  1  [STACK] void 
 22813 ;; Registers used:
 22814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22815 ;; Tracked objects:
 22816 ;;		On entry : 0/0
 22817 ;;		On exit  : 3F/3C
 22818 ;;		Unchanged: 0/0
 22819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22824 ;;Total ram usage:        0 bytes
 22825 ;; Hardware stack levels used:    1
 22826 ;; Hardware stack levels required when called:    8
 22827 ;; This function calls:
 22828 ;;		_ADCC_Initialize
 22829 ;;		_CLKREF_Initialize
 22830 ;;		_DMA1_Initialize
 22831 ;;		_DMA2_Initialize
 22832 ;;		_EXT_INT_Initialize
 22833 ;;		_FVR_Initialize
 22834 ;;		_INTERRUPT_Initialize
 22835 ;;		_OSCILLATOR_Initialize
 22836 ;;		_PIN_MANAGER_Initialize
 22837 ;;		_PMD_Initialize
 22838 ;;		_PWM8_Initialize
 22839 ;;		_SPI1_Initialize
 22840 ;;		_TMR2_Initialize
 22841 ;;		_TMR5_Initialize
 22842 ;;		_TMR6_Initialize
 22843 ;;		_UART1_Initialize
 22844 ;;		_UART2_Initialize
 22845 ;; This function is called by:
 22846 ;;		_main
 22847 ;; This function uses a reentrant model
 22848 ;;
 22849                           
 22850                           	psect	text90
 22851  018364                     __ptext90:
 22852                           	opt callstack 0
 22853  018364                     _SYSTEM_Initialize:
 22854                           	opt callstack 22
 22855                           
 22856                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22857                           
 22858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22859                           ;incstack = 0
 22860  018364  EC46  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22861                           
 22862                           ; BSR set to: 57
 22863                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22864  018368  ECCC  F0C6         	call	_PMD_Initialize	;wreg free
 22865                           
 22866                           ; BSR set to: 57
 22867                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22868  01836C  EC0F  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22869                           
 22870                           ; BSR set to: 58
 22871                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22872  018370  ECC1  F0C6         	call	_OSCILLATOR_Initialize	;wreg free
 22873                           
 22874                           ; BSR set to: 57
 22875                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22876  018374  EC2B  F0C7         	call	_FVR_Initialize	;wreg free
 22877                           
 22878                           ; BSR set to: 62
 22879                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22880  018378  ECDC  F0BE         	call	_ADCC_Initialize	;wreg free
 22881                           
 22882                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22883  01837C  EC93  F0C6         	call	_TMR2_Initialize	;wreg free
 22884                           
 22885                           ; BSR set to: 57
 22886                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22887  018380  ECB6  F0C6         	call	_PWM8_Initialize	;wreg free
 22888                           
 22889                           ; BSR set to: 63
 22890                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22891  018384  EC27  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22892                           
 22893                           ; BSR set to: 57
 22894                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22895  018388  ECE4  F0C3         	call	_TMR6_Initialize	;wreg free
 22896                           
 22897                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22898  01838C  ECD5  F0C1         	call	_TMR5_Initialize	;wreg free
 22899                           
 22900                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22901  018390  ECAB  F0BF         	call	_UART1_Initialize	;wreg free
 22902                           
 22903                           ; BSR set to: 57
 22904                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22905  018394  EC3F  F0C0         	call	_UART2_Initialize	;wreg free
 22906                           
 22907                           ; BSR set to: 57
 22908                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22909  018398  ECAB  F0C6         	call	_SPI1_Initialize	;wreg free
 22910                           
 22911                           ; BSR set to: 61
 22912                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22913  01839C  ECC9  F0C0         	call	_DMA2_Initialize	;wreg free
 22914                           
 22915                           ; BSR set to: 59
 22916                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22917  0183A0  ECA7  F0BE         	call	_DMA1_Initialize	;wreg free
 22918                           
 22919                           ; BSR set to: 59
 22920                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22921  0183A4  EC05  F0C7         	call	_CLKREF_Initialize	;wreg free
 22922                           
 22923                           ; BSR set to: 60
 22924                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22925  0183A8  0012               	return		;funcret
 22926  0183AA                     __end_of_SYSTEM_Initialize:
 22927                           	opt callstack 0
 22928                           
 22929 ;; *************** function _UART2_Initialize *****************
 22930 ;; Defined at:
 22931 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22932 ;; Parameters:    Size  Location     Type
 22933 ;;		None
 22934 ;; Auto vars:     Size  Location     Type
 22935 ;;		None
 22936 ;; Return value:  Size  Location     Type
 22937 ;;                  1  [STACK] void 
 22938 ;; Registers used:
 22939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22940 ;; Tracked objects:
 22941 ;;		On entry : 3F/39
 22942 ;;		On exit  : 3F/39
 22943 ;;		Unchanged: 0/0
 22944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;Total ram usage:        0 bytes
 22950 ;; Hardware stack levels used:    1
 22951 ;; Hardware stack levels required when called:    7
 22952 ;; This function calls:
 22953 ;;		_UART2_SetRxInterruptHandler
 22954 ;;		_UART2_SetTxInterruptHandler
 22955 ;; This function is called by:
 22956 ;;		_SYSTEM_Initialize
 22957 ;; This function uses a reentrant model
 22958 ;;
 22959                           
 22960                           	psect	text91
 22961  01807E                     __ptext91:
 22962                           	opt callstack 0
 22963  01807E                     _UART2_Initialize:
 22964                           	opt callstack 22
 22965                           
 22966                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22967                           
 22968                           ; BSR set to: 60
 22969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22970                           ;incstack = 0
 22971  01807E  0139               	movlb	57	; () banked
 22972  018080  9596               	bcf	150,2,b	;volatile
 22973                           
 22974                           ; BSR set to: 57
 22975                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22976  018082  0E82               	movlw	low _UART2_Receive_ISR
 22977  018084  6EE6               	movwf	postinc1,c
 22978  018086  0E8C               	movlw	high _UART2_Receive_ISR
 22979  018088  6EE6               	movwf	postinc1,c
 22980  01808A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22981  01808C  6EE6               	movwf	postinc1,c
 22982  01808E  EC73  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 22983                           
 22984                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22985  018092  0139               	movlb	57	; () banked
 22986  018094  9796               	bcf	150,3,b	;volatile
 22987                           
 22988                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22989  018096  0E9C               	movlw	low _UART2_Transmit_ISR
 22990  018098  6EE6               	movwf	postinc1,c
 22991  01809A  0E87               	movlw	high _UART2_Transmit_ISR
 22992  01809C  6EE6               	movwf	postinc1,c
 22993  01809E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22994  0180A0  6EE6               	movwf	postinc1,c
 22995  0180A2  EC5F  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22996                           
 22997                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22998  0180A6  013D               	movlb	61	; () banked
 22999  0180A8  6BD4               	clrf	212,b	;volatile
 23000                           
 23001                           ; BSR set to: 61
 23002                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23003  0180AA  6BD6               	clrf	214,b	;volatile
 23004                           
 23005                           ; BSR set to: 61
 23006                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23007  0180AC  6BD8               	clrf	216,b	;volatile
 23008                           
 23009                           ; BSR set to: 61
 23010                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23011  0180AE  0EB0               	movlw	176
 23012  0180B0  6FDA               	movwf	218,b	;volatile
 23013                           
 23014                           ; BSR set to: 61
 23015                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23016  0180B2  0E80               	movlw	128
 23017  0180B4  6FDB               	movwf	219,b	;volatile
 23018                           
 23019                           ; BSR set to: 61
 23020                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23021  0180B6  6BDC               	clrf	220,b	;volatile
 23022                           
 23023                           ; BSR set to: 61
 23024                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23025  0180B8  0E82               	movlw	130
 23026  0180BA  6FDD               	movwf	221,b	;volatile
 23027                           
 23028                           ; BSR set to: 61
 23029                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23030  0180BC  0E06               	movlw	6
 23031  0180BE  6FDE               	movwf	222,b	;volatile
 23032                           
 23033                           ; BSR set to: 61
 23034                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23035  0180C0  6BDF               	clrf	223,b	;volatile
 23036                           
 23037                           ; BSR set to: 61
 23038                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23039  0180C2  6BE0               	clrf	224,b	;volatile
 23040                           
 23041                           ; BSR set to: 61
 23042                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23043  0180C4  6BE1               	clrf	225,b	;volatile
 23044                           
 23045                           ; BSR set to: 61
 23046                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23047  0180C6  6BE2               	clrf	226,b	;volatile
 23048                           
 23049                           ; BSR set to: 61
 23050                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23051  0180C8  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 23052                           
 23053                           ; BSR set to: 61
 23054                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23055  0180CA  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 23056                           
 23057                           ; BSR set to: 61
 23058                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23059  0180CC  0E40               	movlw	64
 23060  0180CE  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23061                           
 23062                           ; BSR set to: 61
 23063                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23064  0180D0  6A28               	clrf	_uart2RxHead^0,c	;volatile
 23065                           
 23066                           ; BSR set to: 61
 23067                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23068  0180D2  6A27               	clrf	_uart2RxTail^0,c	;volatile
 23069                           
 23070                           ; BSR set to: 61
 23071                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23072  0180D4  6A26               	clrf	_uart2RxCount^0,c	;volatile
 23073                           
 23074                           ; BSR set to: 61
 23075                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23076  0180D6  0139               	movlb	57	; () banked
 23077  0180D8  8596               	bsf	150,2,b	;volatile
 23078                           
 23079                           ; BSR set to: 57
 23080                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23081  0180DA  0012               	return		;funcret
 23082  0180DC                     __end_of_UART2_Initialize:
 23083                           	opt callstack 0
 23084                           
 23085 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23086 ;; Defined at:
 23087 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23088 ;; Parameters:    Size  Location     Type
 23089 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23090 ;;		 -> UART2_Transmit_ISR(1), 
 23091 ;; Auto vars:     Size  Location     Type
 23092 ;;		None
 23093 ;; Return value:  Size  Location     Type
 23094 ;;                  1  [STACK] void 
 23095 ;; Registers used:
 23096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23097 ;; Tracked objects:
 23098 ;;		On entry : 3F/39
 23099 ;;		On exit  : 0/0
 23100 ;;		Unchanged: 0/0
 23101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23106 ;;Total ram usage:        0 bytes
 23107 ;; Hardware stack levels used:    1
 23108 ;; Hardware stack levels required when called:    6
 23109 ;; This function calls:
 23110 ;;		Nothing
 23111 ;; This function is called by:
 23112 ;;		_UART2_Initialize
 23113 ;; This function uses a reentrant model
 23114 ;;
 23115                           
 23116                           	psect	text92
 23117  0188BE                     __ptext92:
 23118                           	opt callstack 0
 23119  0188BE                     _UART2_SetTxInterruptHandler:
 23120                           	opt callstack 22
 23121                           
 23122                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23123                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23124                           
 23125                           ; BSR set to: 57
 23126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23127                           ;incstack = 0
 23128  0188BE  50E1               	movf	fsr1l,w,c
 23129  0188C0  0FFD               	addlw	-3
 23130  0188C2  6ED9               	movwf	fsr2l,c
 23131  0188C4  50E2               	movf	fsr1h,w,c
 23132  0188C6  6EDA               	movwf	fsr2h,c
 23133  0188C8  0EFF               	movlw	255
 23134  0188CA  22DA               	addwfc	fsr2h,f,c
 23135  0188CC  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 23136  0188D2  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 23137  0188D8  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 23138                           
 23139                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23140  0188DE  52E5               	movf	postdec1,f,c
 23141  0188E0  52E5               	movf	postdec1,f,c
 23142  0188E2  52E5               	movf	postdec1,f,c
 23143  0188E4  0012               	return		;funcret
 23144  0188E6                     __end_of_UART2_SetTxInterruptHandler:
 23145                           	opt callstack 0
 23146                           
 23147 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23148 ;; Defined at:
 23149 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23150 ;; Parameters:    Size  Location     Type
 23151 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23152 ;;		 -> UART2_Receive_ISR(1), 
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;		None
 23155 ;; Return value:  Size  Location     Type
 23156 ;;                  1  [STACK] void 
 23157 ;; Registers used:
 23158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23159 ;; Tracked objects:
 23160 ;;		On entry : 3F/39
 23161 ;;		On exit  : 0/0
 23162 ;;		Unchanged: 0/0
 23163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;Total ram usage:        0 bytes
 23169 ;; Hardware stack levels used:    1
 23170 ;; Hardware stack levels required when called:    6
 23171 ;; This function calls:
 23172 ;;		Nothing
 23173 ;; This function is called by:
 23174 ;;		_UART2_Initialize
 23175 ;; This function uses a reentrant model
 23176 ;;
 23177                           
 23178                           	psect	text93
 23179  0188E6                     __ptext93:
 23180                           	opt callstack 0
 23181  0188E6                     _UART2_SetRxInterruptHandler:
 23182                           	opt callstack 22
 23183                           
 23184                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23185                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23186                           
 23187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23188                           ;incstack = 0
 23189  0188E6  50E1               	movf	fsr1l,w,c
 23190  0188E8  0FFD               	addlw	-3
 23191  0188EA  6ED9               	movwf	fsr2l,c
 23192  0188EC  50E2               	movf	fsr1h,w,c
 23193  0188EE  6EDA               	movwf	fsr2h,c
 23194  0188F0  0EFF               	movlw	255
 23195  0188F2  22DA               	addwfc	fsr2h,f,c
 23196  0188F4  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 23197  0188FA  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 23198  018900  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 23199                           
 23200                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23201  018906  52E5               	movf	postdec1,f,c
 23202  018908  52E5               	movf	postdec1,f,c
 23203  01890A  52E5               	movf	postdec1,f,c
 23204  01890C  0012               	return		;funcret
 23205  01890E                     __end_of_UART2_SetRxInterruptHandler:
 23206                           	opt callstack 0
 23207                           
 23208 ;; *************** function _UART1_Initialize *****************
 23209 ;; Defined at:
 23210 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23211 ;; Parameters:    Size  Location     Type
 23212 ;;		None
 23213 ;; Auto vars:     Size  Location     Type
 23214 ;;		None
 23215 ;; Return value:  Size  Location     Type
 23216 ;;                  1  [STACK] void 
 23217 ;; Registers used:
 23218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23219 ;; Tracked objects:
 23220 ;;		On entry : 0/39
 23221 ;;		On exit  : 3F/39
 23222 ;;		Unchanged: 0/0
 23223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23228 ;;Total ram usage:        0 bytes
 23229 ;; Hardware stack levels used:    1
 23230 ;; Hardware stack levels required when called:    7
 23231 ;; This function calls:
 23232 ;;		_UART1_SetRxInterruptHandler
 23233 ;;		_UART1_SetTxInterruptHandler
 23234 ;; This function is called by:
 23235 ;;		_SYSTEM_Initialize
 23236 ;; This function uses a reentrant model
 23237 ;;
 23238                           
 23239                           	psect	text94
 23240  017F56                     __ptext94:
 23241                           	opt callstack 0
 23242  017F56                     _UART1_Initialize:
 23243                           	opt callstack 22
 23244                           
 23245                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23246                           
 23247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23248                           ;incstack = 0
 23249  017F56  0139               	movlb	57	; () banked
 23250  017F58  9793               	bcf	147,3,b	;volatile
 23251                           
 23252                           ; BSR set to: 57
 23253                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23254  017F5A  0E64               	movlw	low _UART1_Receive_ISR
 23255  017F5C  6EE6               	movwf	postinc1,c
 23256  017F5E  0E8C               	movlw	high _UART1_Receive_ISR
 23257  017F60  6EE6               	movwf	postinc1,c
 23258  017F62  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23259  017F64  6EE6               	movwf	postinc1,c
 23260  017F66  EC9B  F0C4         	call	_UART1_SetRxInterruptHandler	;wreg free
 23261                           
 23262                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23263  017F6A  0139               	movlb	57	; () banked
 23264  017F6C  9993               	bcf	147,4,b	;volatile
 23265                           
 23266                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23267  017F6E  0E70               	movlw	low _UART1_Transmit_ISR
 23268  017F70  6EE6               	movwf	postinc1,c
 23269  017F72  0E87               	movlw	high _UART1_Transmit_ISR
 23270  017F74  6EE6               	movwf	postinc1,c
 23271  017F76  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23272  017F78  6EE6               	movwf	postinc1,c
 23273  017F7A  EC87  F0C4         	call	_UART1_SetTxInterruptHandler	;wreg free
 23274                           
 23275                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23276  017F7E  013D               	movlb	61	; () banked
 23277  017F80  6BEC               	clrf	236,b	;volatile
 23278                           
 23279                           ; BSR set to: 61
 23280                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23281  017F82  6BED               	clrf	237,b	;volatile
 23282                           
 23283                           ; BSR set to: 61
 23284                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23285  017F84  6BEE               	clrf	238,b	;volatile
 23286                           
 23287                           ; BSR set to: 61
 23288                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23289  017F86  6BEF               	clrf	239,b	;volatile
 23290                           
 23291                           ; BSR set to: 61
 23292                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23293  017F88  6BF0               	clrf	240,b	;volatile
 23294                           
 23295                           ; BSR set to: 61
 23296                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23297  017F8A  6BF1               	clrf	241,b	;volatile
 23298                           
 23299                           ; BSR set to: 61
 23300                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23301  017F8C  0EB0               	movlw	176
 23302  017F8E  6FF2               	movwf	242,b	;volatile
 23303                           
 23304                           ; BSR set to: 61
 23305                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23306  017F90  0E80               	movlw	128
 23307  017F92  6FF3               	movwf	243,b	;volatile
 23308                           
 23309                           ; BSR set to: 61
 23310                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23311  017F94  6BF4               	clrf	244,b	;volatile
 23312                           
 23313                           ; BSR set to: 61
 23314                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23315  017F96  0E82               	movlw	130
 23316  017F98  6FF5               	movwf	245,b	;volatile
 23317                           
 23318                           ; BSR set to: 61
 23319                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23320  017F9A  0E06               	movlw	6
 23321  017F9C  6FF6               	movwf	246,b	;volatile
 23322                           
 23323                           ; BSR set to: 61
 23324                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23325  017F9E  6BF7               	clrf	247,b	;volatile
 23326                           
 23327                           ; BSR set to: 61
 23328                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23329  017FA0  6BF8               	clrf	248,b	;volatile
 23330                           
 23331                           ; BSR set to: 61
 23332                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23333  017FA2  6BF9               	clrf	249,b	;volatile
 23334                           
 23335                           ; BSR set to: 61
 23336                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23337  017FA4  6BFA               	clrf	250,b	;volatile
 23338                           
 23339                           ; BSR set to: 61
 23340                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23341  017FA6  6A31               	clrf	_uart1TxHead^0,c	;volatile
 23342                           
 23343                           ; BSR set to: 61
 23344                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23345  017FA8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 23346                           
 23347                           ; BSR set to: 61
 23348                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23349  017FAA  0E40               	movlw	64
 23350  017FAC  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23351                           
 23352                           ; BSR set to: 61
 23353                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23354  017FAE  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 23355                           
 23356                           ; BSR set to: 61
 23357                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23358  017FB0  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 23359                           
 23360                           ; BSR set to: 61
 23361                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23362  017FB2  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 23363                           
 23364                           ; BSR set to: 61
 23365                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23366  017FB4  0139               	movlb	57	; () banked
 23367  017FB6  8793               	bsf	147,3,b	;volatile
 23368                           
 23369                           ; BSR set to: 57
 23370                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23371  017FB8  0012               	return		;funcret
 23372  017FBA                     __end_of_UART1_Initialize:
 23373                           	opt callstack 0
 23374                           
 23375 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23376 ;; Defined at:
 23377 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23378 ;; Parameters:    Size  Location     Type
 23379 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23380 ;;		 -> UART1_Transmit_ISR(1), 
 23381 ;; Auto vars:     Size  Location     Type
 23382 ;;		None
 23383 ;; Return value:  Size  Location     Type
 23384 ;;                  1  [STACK] void 
 23385 ;; Registers used:
 23386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23387 ;; Tracked objects:
 23388 ;;		On entry : 3F/39
 23389 ;;		On exit  : 0/0
 23390 ;;		Unchanged: 0/0
 23391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23396 ;;Total ram usage:        0 bytes
 23397 ;; Hardware stack levels used:    1
 23398 ;; Hardware stack levels required when called:    6
 23399 ;; This function calls:
 23400 ;;		Nothing
 23401 ;; This function is called by:
 23402 ;;		_UART1_Initialize
 23403 ;; This function uses a reentrant model
 23404 ;;
 23405                           
 23406                           	psect	text95
 23407  01890E                     __ptext95:
 23408                           	opt callstack 0
 23409  01890E                     _UART1_SetTxInterruptHandler:
 23410                           	opt callstack 22
 23411                           
 23412                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23413                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23414                           
 23415                           ; BSR set to: 57
 23416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23417                           ;incstack = 0
 23418  01890E  50E1               	movf	fsr1l,w,c
 23419  018910  0FFD               	addlw	-3
 23420  018912  6ED9               	movwf	fsr2l,c
 23421  018914  50E2               	movf	fsr1h,w,c
 23422  018916  6EDA               	movwf	fsr2h,c
 23423  018918  0EFF               	movlw	255
 23424  01891A  22DA               	addwfc	fsr2h,f,c
 23425  01891C  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 23426  018922  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 23427  018928  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 23428                           
 23429                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23430  01892E  52E5               	movf	postdec1,f,c
 23431  018930  52E5               	movf	postdec1,f,c
 23432  018932  52E5               	movf	postdec1,f,c
 23433  018934  0012               	return		;funcret
 23434  018936                     __end_of_UART1_SetTxInterruptHandler:
 23435                           	opt callstack 0
 23436                           
 23437 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23438 ;; Defined at:
 23439 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23440 ;; Parameters:    Size  Location     Type
 23441 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23442 ;;		 -> UART1_Receive_ISR(1), 
 23443 ;; Auto vars:     Size  Location     Type
 23444 ;;		None
 23445 ;; Return value:  Size  Location     Type
 23446 ;;                  1  [STACK] void 
 23447 ;; Registers used:
 23448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23449 ;; Tracked objects:
 23450 ;;		On entry : 3F/39
 23451 ;;		On exit  : 0/0
 23452 ;;		Unchanged: 0/0
 23453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23458 ;;Total ram usage:        0 bytes
 23459 ;; Hardware stack levels used:    1
 23460 ;; Hardware stack levels required when called:    6
 23461 ;; This function calls:
 23462 ;;		Nothing
 23463 ;; This function is called by:
 23464 ;;		_UART1_Initialize
 23465 ;; This function uses a reentrant model
 23466 ;;
 23467                           
 23468                           	psect	text96
 23469  018936                     __ptext96:
 23470                           	opt callstack 0
 23471  018936                     _UART1_SetRxInterruptHandler:
 23472                           	opt callstack 22
 23473                           
 23474                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23475                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23476                           
 23477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23478                           ;incstack = 0
 23479  018936  50E1               	movf	fsr1l,w,c
 23480  018938  0FFD               	addlw	-3
 23481  01893A  6ED9               	movwf	fsr2l,c
 23482  01893C  50E2               	movf	fsr1h,w,c
 23483  01893E  6EDA               	movwf	fsr2h,c
 23484  018940  0EFF               	movlw	255
 23485  018942  22DA               	addwfc	fsr2h,f,c
 23486  018944  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23487  01894A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23488  018950  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23489                           
 23490                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23491  018956  52E5               	movf	postdec1,f,c
 23492  018958  52E5               	movf	postdec1,f,c
 23493  01895A  52E5               	movf	postdec1,f,c
 23494  01895C  0012               	return		;funcret
 23495  01895E                     __end_of_UART1_SetRxInterruptHandler:
 23496                           	opt callstack 0
 23497                           
 23498 ;; *************** function _TMR6_Initialize *****************
 23499 ;; Defined at:
 23500 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23501 ;; Parameters:    Size  Location     Type
 23502 ;;		None
 23503 ;; Auto vars:     Size  Location     Type
 23504 ;;		None
 23505 ;; Return value:  Size  Location     Type
 23506 ;;                  1  [STACK] void 
 23507 ;; Registers used:
 23508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23509 ;; Tracked objects:
 23510 ;;		On entry : 3F/39
 23511 ;;		On exit  : 0/0
 23512 ;;		Unchanged: 0/0
 23513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;Total ram usage:        0 bytes
 23519 ;; Hardware stack levels used:    1
 23520 ;; Hardware stack levels required when called:    7
 23521 ;; This function calls:
 23522 ;;		_TMR6_SetInterruptHandler
 23523 ;; This function is called by:
 23524 ;;		_SYSTEM_Initialize
 23525 ;; This function uses a reentrant model
 23526 ;;
 23527                           
 23528                           	psect	text97
 23529  0187C8                     __ptext97:
 23530                           	opt callstack 0
 23531  0187C8                     _TMR6_Initialize:
 23532                           	opt callstack 22
 23533                           
 23534                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23535                           
 23536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23537                           ;incstack = 0
 23538  0187C8  0E01               	movlw	1
 23539  0187CA  6E96               	movwf	150,c	;volatile
 23540                           
 23541                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23542  0187CC  6A95               	clrf	149,c	;volatile
 23543                           
 23544                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23545  0187CE  6A97               	clrf	151,c	;volatile
 23546                           
 23547                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23548  0187D0  0E7C               	movlw	124
 23549  0187D2  6E93               	movwf	147,c	;volatile
 23550                           
 23551                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23552  0187D4  6A92               	clrf	146,c	;volatile
 23553                           
 23554                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23555  0187D6  0139               	movlb	57	; () banked
 23556  0187D8  91A9               	bcf	169,0,b	;volatile
 23557                           
 23558                           ; BSR set to: 57
 23559                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23560  0187DA  8199               	bsf	153,0,b	;volatile
 23561                           
 23562                           ; BSR set to: 57
 23563                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23564  0187DC  0EF0               	movlw	low _TMR6_DefaultInterruptHandler
 23565  0187DE  6EE6               	movwf	postinc1,c
 23566  0187E0  0E83               	movlw	high _TMR6_DefaultInterruptHandler
 23567  0187E2  6EE6               	movwf	postinc1,c
 23568  0187E4  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23569  0187E6  6EE6               	movwf	postinc1,c
 23570  0187E8  ECAF  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
 23571                           
 23572                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23573  0187EC  0EE0               	movlw	224
 23574  0187EE  6E94               	movwf	148,c	;volatile
 23575                           
 23576                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23577  0187F0  0012               	return		;funcret
 23578  0187F2                     __end_of_TMR6_Initialize:
 23579                           	opt callstack 0
 23580                           
 23581 ;; *************** function _TMR6_SetInterruptHandler *****************
 23582 ;; Defined at:
 23583 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23584 ;; Parameters:    Size  Location     Type
 23585 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23586 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23587 ;; Auto vars:     Size  Location     Type
 23588 ;;		None
 23589 ;; Return value:  Size  Location     Type
 23590 ;;                  1  [STACK] void 
 23591 ;; Registers used:
 23592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23593 ;; Tracked objects:
 23594 ;;		On entry : 3F/39
 23595 ;;		On exit  : 0/0
 23596 ;;		Unchanged: 0/0
 23597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23602 ;;Total ram usage:        0 bytes
 23603 ;; Hardware stack levels used:    1
 23604 ;; Hardware stack levels required when called:    6
 23605 ;; This function calls:
 23606 ;;		Nothing
 23607 ;; This function is called by:
 23608 ;;		_TMR6_Initialize
 23609 ;; This function uses a reentrant model
 23610 ;;
 23611                           
 23612                           	psect	text98
 23613  01895E                     __ptext98:
 23614                           	opt callstack 0
 23615  01895E                     _TMR6_SetInterruptHandler:
 23616                           	opt callstack 22
 23617                           
 23618                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23619                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23620                           
 23621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23622                           ;incstack = 0
 23623  01895E  50E1               	movf	fsr1l,w,c
 23624  018960  0FFD               	addlw	-3
 23625  018962  6ED9               	movwf	fsr2l,c
 23626  018964  50E2               	movf	fsr1h,w,c
 23627  018966  6EDA               	movwf	fsr2h,c
 23628  018968  0EFF               	movlw	255
 23629  01896A  22DA               	addwfc	fsr2h,f,c
 23630  01896C  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23631  018972  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23632  018978  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23633                           
 23634                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23635  01897E  52E5               	movf	postdec1,f,c
 23636  018980  52E5               	movf	postdec1,f,c
 23637  018982  52E5               	movf	postdec1,f,c
 23638  018984  0012               	return		;funcret
 23639  018986                     __end_of_TMR6_SetInterruptHandler:
 23640                           	opt callstack 0
 23641                           
 23642 ;; *************** function _TMR5_Initialize *****************
 23643 ;; Defined at:
 23644 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23645 ;; Parameters:    Size  Location     Type
 23646 ;;		None
 23647 ;; Auto vars:     Size  Location     Type
 23648 ;;		None
 23649 ;; Return value:  Size  Location     Type
 23650 ;;                  1  [STACK] void 
 23651 ;; Registers used:
 23652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23653 ;; Tracked objects:
 23654 ;;		On entry : 0/39
 23655 ;;		On exit  : 0/0
 23656 ;;		Unchanged: 0/0
 23657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23662 ;;Total ram usage:        0 bytes
 23663 ;; Hardware stack levels used:    1
 23664 ;; Hardware stack levels required when called:    7
 23665 ;; This function calls:
 23666 ;;		_TMR5_SetInterruptHandler
 23667 ;; This function is called by:
 23668 ;;		_SYSTEM_Initialize
 23669 ;; This function uses a reentrant model
 23670 ;;
 23671                           
 23672                           	psect	text99
 23673  0183AA                     __ptext99:
 23674                           	opt callstack 0
 23675  0183AA                     _TMR5_Initialize:
 23676                           	opt callstack 22
 23677                           
 23678                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23679                           
 23680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23681                           ;incstack = 0
 23682  0183AA  6A9B               	clrf	155,c	;volatile
 23683                           
 23684                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23685  0183AC  6A9C               	clrf	156,c	;volatile
 23686                           
 23687                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23688  0183AE  0E01               	movlw	1
 23689  0183B0  6E9D               	movwf	157,c	;volatile
 23690                           
 23691                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23692  0183B2  0E63               	movlw	99
 23693  0183B4  6E99               	movwf	153,c	;volatile
 23694                           
 23695                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23696  0183B6  0EC0               	movlw	192
 23697  0183B8  6E98               	movwf	152,c	;volatile
 23698                           
 23699                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23700  0183BA  5098               	movf	152,w,c	;volatile
 23701  0183BC  006F FE64  F032    	movff	16281,btemp	;volatile
 23702  0183C2  6A33               	clrf	(btemp+1)^0,c
 23703  0183C4  0060  F0C8  F033   	movff	btemp,btemp+1
 23704  0183CA  6A32               	clrf	btemp^0,c
 23705  0183CC  1032               	iorwf	btemp^0,w,c
 23706  0183CE  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23707  0183D0  5033               	movf	(btemp+1)^0,w,c
 23708  0183D2  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23709                           
 23710                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23711  0183D4  0139               	movlb	57	; () banked
 23712  0183D6  9DA8               	bcf	168,6,b	;volatile
 23713                           
 23714                           ; BSR set to: 57
 23715                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23716  0183D8  8D98               	bsf	152,6,b	;volatile
 23717                           
 23718                           ; BSR set to: 57
 23719                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23720  0183DA  0E4E               	movlw	low _TMR5_DefaultInterruptHandler
 23721  0183DC  6EE6               	movwf	postinc1,c
 23722  0183DE  0E8A               	movlw	high _TMR5_DefaultInterruptHandler
 23723  0183E0  6EE6               	movwf	postinc1,c
 23724  0183E2  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23725  0183E4  6EE6               	movwf	postinc1,c
 23726  0183E6  ECC3  F0C4         	call	_TMR5_SetInterruptHandler	;wreg free
 23727                           
 23728                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23729  0183EA  0E31               	movlw	49
 23730  0183EC  6E9A               	movwf	154,c	;volatile
 23731                           
 23732                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23733  0183EE  0012               	return		;funcret
 23734  0183F0                     __end_of_TMR5_Initialize:
 23735                           	opt callstack 0
 23736                           
 23737 ;; *************** function _TMR5_SetInterruptHandler *****************
 23738 ;; Defined at:
 23739 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23742 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23743 ;; Auto vars:     Size  Location     Type
 23744 ;;		None
 23745 ;; Return value:  Size  Location     Type
 23746 ;;                  1  [STACK] void 
 23747 ;; Registers used:
 23748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23749 ;; Tracked objects:
 23750 ;;		On entry : 3F/39
 23751 ;;		On exit  : 0/0
 23752 ;;		Unchanged: 0/0
 23753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23758 ;;Total ram usage:        0 bytes
 23759 ;; Hardware stack levels used:    1
 23760 ;; Hardware stack levels required when called:    6
 23761 ;; This function calls:
 23762 ;;		Nothing
 23763 ;; This function is called by:
 23764 ;;		_TMR5_Initialize
 23765 ;; This function uses a reentrant model
 23766 ;;
 23767                           
 23768                           	psect	text100
 23769  018986                     __ptext100:
 23770                           	opt callstack 0
 23771  018986                     _TMR5_SetInterruptHandler:
 23772                           	opt callstack 22
 23773                           
 23774                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23775                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23776                           
 23777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23778                           ;incstack = 0
 23779  018986  50E1               	movf	fsr1l,w,c
 23780  018988  0FFD               	addlw	-3
 23781  01898A  6ED9               	movwf	fsr2l,c
 23782  01898C  50E2               	movf	fsr1h,w,c
 23783  01898E  6EDA               	movwf	fsr2h,c
 23784  018990  0EFF               	movlw	255
 23785  018992  22DA               	addwfc	fsr2h,f,c
 23786  018994  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 23787  01899A  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 23788  0189A0  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 23789                           
 23790                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23791  0189A6  52E5               	movf	postdec1,f,c
 23792  0189A8  52E5               	movf	postdec1,f,c
 23793  0189AA  52E5               	movf	postdec1,f,c
 23794  0189AC  0012               	return		;funcret
 23795  0189AE                     __end_of_TMR5_SetInterruptHandler:
 23796                           	opt callstack 0
 23797                           
 23798 ;; *************** function _TMR2_Initialize *****************
 23799 ;; Defined at:
 23800 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23801 ;; Parameters:    Size  Location     Type
 23802 ;;		None
 23803 ;; Auto vars:     Size  Location     Type
 23804 ;;		None
 23805 ;; Return value:  Size  Location     Type
 23806 ;;                  1  [STACK] void 
 23807 ;; Registers used:
 23808 ;;		wreg, status,2
 23809 ;; Tracked objects:
 23810 ;;		On entry : 0/3E
 23811 ;;		On exit  : 3F/39
 23812 ;;		Unchanged: 0/0
 23813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23818 ;;Total ram usage:        0 bytes
 23819 ;; Hardware stack levels used:    1
 23820 ;; Hardware stack levels required when called:    6
 23821 ;; This function calls:
 23822 ;;		Nothing
 23823 ;; This function is called by:
 23824 ;;		_SYSTEM_Initialize
 23825 ;; This function uses a reentrant model
 23826 ;;
 23827                           
 23828                           	psect	text101
 23829  018D26                     __ptext101:
 23830                           	opt callstack 0
 23831  018D26                     _TMR2_Initialize:
 23832                           	opt callstack 23
 23833                           
 23834                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23835                           
 23836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23837                           ;incstack = 0
 23838  018D26  0E01               	movlw	1
 23839  018D28  6EAE               	movwf	174,c	;volatile
 23840                           
 23841                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23842  018D2A  6AAD               	clrf	173,c	;volatile
 23843                           
 23844                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23845  018D2C  6AAF               	clrf	175,c	;volatile
 23846                           
 23847                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23848  018D2E  0E63               	movlw	99
 23849  018D30  6EAB               	movwf	171,c	;volatile
 23850                           
 23851                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23852  018D32  6AAA               	clrf	170,c	;volatile
 23853                           
 23854                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23855  018D34  0139               	movlb	57	; () banked
 23856  018D36  95A4               	bcf	164,2,b	;volatile
 23857                           
 23858                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23859  018D38  0EC0               	movlw	192
 23860  018D3A  6EAC               	movwf	172,c	;volatile
 23861                           
 23862                           ; BSR set to: 57
 23863                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23864  018D3C  0012               	return		;funcret
 23865  018D3E                     __end_of_TMR2_Initialize:
 23866                           	opt callstack 0
 23867                           
 23868 ;; *************** function _SPI1_Initialize *****************
 23869 ;; Defined at:
 23870 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;		None
 23873 ;; Auto vars:     Size  Location     Type
 23874 ;;		None
 23875 ;; Return value:  Size  Location     Type
 23876 ;;                  1  [STACK] void 
 23877 ;; Registers used:
 23878 ;;		wreg, status,2
 23879 ;; Tracked objects:
 23880 ;;		On entry : 3F/39
 23881 ;;		On exit  : 3F/3D
 23882 ;;		Unchanged: 0/0
 23883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23888 ;;Total ram usage:        0 bytes
 23889 ;; Hardware stack levels used:    1
 23890 ;; Hardware stack levels required when called:    6
 23891 ;; This function calls:
 23892 ;;		Nothing
 23893 ;; This function is called by:
 23894 ;;		_SYSTEM_Initialize
 23895 ;; This function uses a reentrant model
 23896 ;;
 23897                           
 23898                           	psect	text102
 23899  018D56                     __ptext102:
 23900                           	opt callstack 0
 23901  018D56                     _SPI1_Initialize:
 23902                           	opt callstack 23
 23903                           
 23904                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23905                           
 23906                           ; BSR set to: 57
 23907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23908                           ;incstack = 0
 23909  018D56  0E40               	movlw	64
 23910  018D58  013D               	movlb	61	; () banked
 23911  018D5A  6F15               	movwf	21,b	;volatile
 23912                           
 23913                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23914  018D5C  0E03               	movlw	3
 23915  018D5E  6F16               	movwf	22,b	;volatile
 23916                           
 23917                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23918  018D60  0E4F               	movlw	79
 23919  018D62  6F19               	movwf	25,b	;volatile
 23920                           
 23921                           ; BSR set to: 61
 23922                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23923  018D64  6B1C               	clrf	28,b	;volatile
 23924                           
 23925                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23926  018D66  0E83               	movlw	131
 23927  018D68  6F14               	movwf	20,b	;volatile
 23928                           
 23929                           ; BSR set to: 61
 23930                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23931  018D6A  0012               	return		;funcret
 23932  018D6C                     __end_of_SPI1_Initialize:
 23933                           	opt callstack 0
 23934                           
 23935 ;; *************** function _PWM8_Initialize *****************
 23936 ;; Defined at:
 23937 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23938 ;; Parameters:    Size  Location     Type
 23939 ;;		None
 23940 ;; Auto vars:     Size  Location     Type
 23941 ;;		None
 23942 ;; Return value:  Size  Location     Type
 23943 ;;                  1  [STACK] void 
 23944 ;; Registers used:
 23945 ;;		wreg, status,2
 23946 ;; Tracked objects:
 23947 ;;		On entry : 3F/39
 23948 ;;		On exit  : 3F/3F
 23949 ;;		Unchanged: 0/0
 23950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;Total ram usage:        0 bytes
 23956 ;; Hardware stack levels used:    1
 23957 ;; Hardware stack levels required when called:    6
 23958 ;; This function calls:
 23959 ;;		Nothing
 23960 ;; This function is called by:
 23961 ;;		_SYSTEM_Initialize
 23962 ;; This function uses a reentrant model
 23963 ;;
 23964                           
 23965                           	psect	text103
 23966  018D6C                     __ptext103:
 23967                           	opt callstack 0
 23968  018D6C                     _PWM8_Initialize:
 23969                           	opt callstack 23
 23970                           
 23971                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23972                           
 23973                           ; BSR set to: 61
 23974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23975                           ;incstack = 0
 23976  018D6C  0E80               	movlw	128
 23977  018D6E  6E62               	movwf	98,c	;volatile
 23978                           
 23979                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23980  018D70  6A61               	clrf	97,c	;volatile
 23981                           
 23982                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23983  018D72  0E40               	movlw	64
 23984  018D74  6E60               	movwf	96,c	;volatile
 23985                           
 23986                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23987  018D76  013F               	movlb	63	; () banked
 23988  018D78  515F               	movf	95,w,b	;volatile
 23989  018D7A  0B3F               	andlw	-193
 23990  018D7C  0940               	iorlw	64
 23991  018D7E  6F5F               	movwf	95,b	;volatile
 23992                           
 23993                           ; BSR set to: 63
 23994                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23995  018D80  0012               	return		;funcret
 23996  018D82                     __end_of_PWM8_Initialize:
 23997                           	opt callstack 0
 23998                           
 23999 ;; *************** function _PMD_Initialize *****************
 24000 ;; Defined at:
 24001 ;;		line 89 in file "mcc_generated_files/mcc.c"
 24002 ;; Parameters:    Size  Location     Type
 24003 ;;		None
 24004 ;; Auto vars:     Size  Location     Type
 24005 ;;		None
 24006 ;; Return value:  Size  Location     Type
 24007 ;;                  1  [STACK] void 
 24008 ;; Registers used:
 24009 ;;		None
 24010 ;; Tracked objects:
 24011 ;;		On entry : 3F/39
 24012 ;;		On exit  : 3F/39
 24013 ;;		Unchanged: 0/0
 24014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24019 ;;Total ram usage:        0 bytes
 24020 ;; Hardware stack levels used:    1
 24021 ;; Hardware stack levels required when called:    6
 24022 ;; This function calls:
 24023 ;;		Nothing
 24024 ;; This function is called by:
 24025 ;;		_SYSTEM_Initialize
 24026 ;; This function uses a reentrant model
 24027 ;;
 24028                           
 24029                           	psect	text104
 24030  018D98                     __ptext104:
 24031                           	opt callstack 0
 24032  018D98                     _PMD_Initialize:
 24033                           	opt callstack 23
 24034                           
 24035                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 24036                           
 24037                           ; BSR set to: 63
 24038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24039                           ;incstack = 0
 24040  018D98  0139               	movlb	57	; () banked
 24041  018D9A  6BC0               	clrf	192,b	;volatile
 24042                           
 24043                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 24044  018D9C  6BC1               	clrf	193,b	;volatile
 24045                           
 24046                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 24047  018D9E  6BC2               	clrf	194,b	;volatile
 24048                           
 24049                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 24050  018DA0  6BC3               	clrf	195,b	;volatile
 24051                           
 24052                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 24053  018DA2  6BC4               	clrf	196,b	;volatile
 24054                           
 24055                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 24056  018DA4  6BC5               	clrf	197,b	;volatile
 24057                           
 24058                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 24059  018DA6  6BC6               	clrf	198,b	;volatile
 24060                           
 24061                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 24062  018DA8  6BC7               	clrf	199,b	;volatile
 24063                           
 24064                           ; BSR set to: 57
 24065                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24066  018DAA  0012               	return		;funcret
 24067  018DAC                     __end_of_PMD_Initialize:
 24068                           	opt callstack 0
 24069                           
 24070 ;; *************** function _PIN_MANAGER_Initialize *****************
 24071 ;; Defined at:
 24072 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24073 ;; Parameters:    Size  Location     Type
 24074 ;;		None
 24075 ;; Auto vars:     Size  Location     Type
 24076 ;;		None
 24077 ;; Return value:  Size  Location     Type
 24078 ;;                  1  [STACK] void 
 24079 ;; Registers used:
 24080 ;;		wreg, status,2
 24081 ;; Tracked objects:
 24082 ;;		On entry : 3F/39
 24083 ;;		On exit  : 3F/3A
 24084 ;;		Unchanged: 0/0
 24085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24090 ;;Total ram usage:        0 bytes
 24091 ;; Hardware stack levels used:    1
 24092 ;; Hardware stack levels required when called:    6
 24093 ;; This function calls:
 24094 ;;		Nothing
 24095 ;; This function is called by:
 24096 ;;		_SYSTEM_Initialize
 24097 ;; This function uses a reentrant model
 24098 ;;
 24099                           
 24100                           	psect	text105
 24101  017A1E                     __ptext105:
 24102                           	opt callstack 0
 24103  017A1E                     _PIN_MANAGER_Initialize:
 24104                           	opt callstack 23
 24105                           
 24106                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24107                           
 24108                           ; BSR set to: 57
 24109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24110                           ;incstack = 0
 24111  017A1E  0E07               	movlw	7
 24112  017A20  6EBE               	movwf	190,c	;volatile
 24113                           
 24114                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24115  017A22  0E80               	movlw	128
 24116  017A24  6EBD               	movwf	189,c	;volatile
 24117                           
 24118                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24119  017A26  6ABA               	clrf	186,c	;volatile
 24120                           
 24121                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24122  017A28  6ABF               	clrf	191,c	;volatile
 24123                           
 24124                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24125  017A2A  6ABB               	clrf	187,c	;volatile
 24126                           
 24127                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24128  017A2C  0E07               	movlw	7
 24129  017A2E  6EBC               	movwf	188,c	;volatile
 24130                           
 24131                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24132  017A30  6AC6               	clrf	198,c	;volatile
 24133                           
 24134                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24135  017A32  0E0F               	movlw	15
 24136  017A34  6EC7               	movwf	199,c	;volatile
 24137                           
 24138                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24139  017A36  68C2               	setf	194,c	;volatile
 24140                           
 24141                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24142  017A38  0EBF               	movlw	191
 24143  017A3A  6EC3               	movwf	195,c	;volatile
 24144                           
 24145                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24146  017A3C  0E90               	movlw	144
 24147  017A3E  6EC4               	movwf	196,c	;volatile
 24148                           
 24149                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24150  017A40  0E0C               	movlw	12
 24151  017A42  6EC5               	movwf	197,c	;volatile
 24152                           
 24153                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24154  017A44  013A               	movlb	58	; () banked
 24155  017A46  6B70               	clrf	112,b	;volatile
 24156                           
 24157                           ; BSR set to: 58
 24158                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24159  017A48  6B60               	clrf	96,b	;volatile
 24160                           
 24161                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24162  017A4A  0E3C               	movlw	60
 24163  017A4C  6F50               	movwf	80,b	;volatile
 24164                           
 24165                           ; BSR set to: 58
 24166                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24167  017A4E  6B80               	clrf	128,b	;volatile
 24168                           
 24169                           ; BSR set to: 58
 24170                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24171  017A50  6B90               	clrf	144,b	;volatile
 24172                           
 24173                           ; BSR set to: 58
 24174                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24175  017A52  6940               	setf	64,b	;volatile
 24176                           
 24177                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24178  017A54  0E0C               	movlw	12
 24179  017A56  6F71               	movwf	113,b	;volatile
 24180                           
 24181                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24182  017A58  0E0F               	movlw	15
 24183  017A5A  6F91               	movwf	145,b	;volatile
 24184                           
 24185                           ; BSR set to: 58
 24186                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24187  017A5C  6B81               	clrf	129,b	;volatile
 24188                           
 24189                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24190  017A5E  0E83               	movlw	131
 24191  017A60  6F51               	movwf	81,b	;volatile
 24192                           
 24193                           ; BSR set to: 58
 24194                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24195  017A62  6B41               	clrf	65,b	;volatile
 24196                           
 24197                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24198  017A64  0E97               	movlw	151
 24199  017A66  6F61               	movwf	97,b	;volatile
 24200                           
 24201                           ; BSR set to: 58
 24202                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24203  017A68  6B82               	clrf	130,b	;volatile
 24204                           
 24205                           ; BSR set to: 58
 24206                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24207  017A6A  6B92               	clrf	146,b	;volatile
 24208                           
 24209                           ; BSR set to: 58
 24210                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24211  017A6C  6B42               	clrf	66,b	;volatile
 24212                           
 24213                           ; BSR set to: 58
 24214                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24215  017A6E  6B52               	clrf	82,b	;volatile
 24216                           
 24217                           ; BSR set to: 58
 24218                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24219  017A70  6B62               	clrf	98,b	;volatile
 24220                           
 24221                           ; BSR set to: 58
 24222                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24223  017A72  6B72               	clrf	114,b	;volatile
 24224                           
 24225                           ; BSR set to: 58
 24226                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24227  017A74  6943               	setf	67,b	;volatile
 24228                           
 24229                           ; BSR set to: 58
 24230                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24231  017A76  6953               	setf	83,b	;volatile
 24232                           
 24233                           ; BSR set to: 58
 24234                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24235  017A78  6963               	setf	99,b	;volatile
 24236                           
 24237                           ; BSR set to: 58
 24238                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24239  017A7A  6973               	setf	115,b	;volatile
 24240                           
 24241                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24242  017A7C  0E07               	movlw	7
 24243  017A7E  6F83               	movwf	131,b	;volatile
 24244                           
 24245                           ; BSR set to: 58
 24246                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24247  017A80  6993               	setf	147,b	;volatile
 24248                           
 24249                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24250  017A82  0E0F               	movlw	15
 24251  017A84  6FE8               	movwf	232,b	;volatile
 24252                           
 24253                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24254  017A86  0E13               	movlw	19
 24255  017A88  6FDE               	movwf	222,b	;volatile
 24256                           
 24257                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24258  017A8A  0E16               	movlw	22
 24259  017A8C  6F0E               	movwf	14,b	;volatile
 24260                           
 24261                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24262  017A8E  0E1E               	movlw	30
 24263  017A90  6F13               	movwf	19,b	;volatile
 24264                           
 24265                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24266  017A92  0E08               	movlw	8
 24267  017A94  6FC0               	movwf	192,b	;volatile
 24268                           
 24269                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24270  017A96  0E10               	movlw	16
 24271  017A98  6F19               	movwf	25,b	;volatile
 24272                           
 24273                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24274  017A9A  0E09               	movlw	9
 24275  017A9C  6FC1               	movwf	193,b	;volatile
 24276                           
 24277                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24278  017A9E  0E1F               	movlw	31
 24279  017AA0  6F15               	movwf	21,b	;volatile
 24280                           
 24281                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24282  017AA2  0E13               	movlw	19
 24283  017AA4  6F16               	movwf	22,b	;volatile
 24284                           
 24285                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24286  017AA6  0E17               	movlw	23
 24287  017AA8  6FE5               	movwf	229,b	;volatile
 24288                           
 24289                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24290  017AAA  0E14               	movlw	20
 24291  017AAC  6FDF               	movwf	223,b	;volatile
 24292                           
 24293                           ; BSR set to: 58
 24294                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24295  017AAE  0012               	return		;funcret
 24296  017AB0                     __end_of_PIN_MANAGER_Initialize:
 24297                           	opt callstack 0
 24298                           
 24299 ;; *************** function _OSCILLATOR_Initialize *****************
 24300 ;; Defined at:
 24301 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24302 ;; Parameters:    Size  Location     Type
 24303 ;;		None
 24304 ;; Auto vars:     Size  Location     Type
 24305 ;;		None
 24306 ;; Return value:  Size  Location     Type
 24307 ;;                  1  [STACK] void 
 24308 ;; Registers used:
 24309 ;;		wreg, status,2
 24310 ;; Tracked objects:
 24311 ;;		On entry : 3F/3A
 24312 ;;		On exit  : 3F/39
 24313 ;;		Unchanged: 0/0
 24314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;Total ram usage:        0 bytes
 24320 ;; Hardware stack levels used:    1
 24321 ;; Hardware stack levels required when called:    6
 24322 ;; This function calls:
 24323 ;;		Nothing
 24324 ;; This function is called by:
 24325 ;;		_SYSTEM_Initialize
 24326 ;; This function uses a reentrant model
 24327 ;;
 24328                           
 24329                           	psect	text106
 24330  018D82                     __ptext106:
 24331                           	opt callstack 0
 24332  018D82                     _OSCILLATOR_Initialize:
 24333                           	opt callstack 23
 24334                           
 24335                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24336                           
 24337                           ; BSR set to: 58
 24338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24339                           ;incstack = 0
 24340  018D82  0E20               	movlw	32
 24341  018D84  0139               	movlb	57	; () banked
 24342  018D86  6FD9               	movwf	217,b	;volatile
 24343                           
 24344                           ; BSR set to: 57
 24345                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24346  018D88  6BDB               	clrf	219,b	;volatile
 24347                           
 24348                           ; BSR set to: 57
 24349                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24350  018D8A  6BDD               	clrf	221,b	;volatile
 24351                           
 24352                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24353  018D8C  0E02               	movlw	2
 24354  018D8E  6FDF               	movwf	223,b	;volatile
 24355                           
 24356                           ; BSR set to: 57
 24357                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24358  018D90  6BDE               	clrf	222,b	;volatile
 24359  018D92                     l171:
 24360                           
 24361                           ; BSR set to: 57
 24362                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24363  018D92  B1DC               	btfsc	220,0,b	;volatile
 24364  018D94  0012               	return	
 24365  018D96  D7FD               	goto	l171
 24366  018D98                     __end_of_OSCILLATOR_Initialize:
 24367                           	opt callstack 0
 24368                           
 24369 ;; *************** function _INTERRUPT_Initialize *****************
 24370 ;; Defined at:
 24371 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24372 ;; Parameters:    Size  Location     Type
 24373 ;;		None
 24374 ;; Auto vars:     Size  Location     Type
 24375 ;;  state           1  [STACK] _Bool 
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1  [STACK] void 
 24378 ;; Registers used:
 24379 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/0
 24382 ;;		On exit  : 3F/39
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24389 ;;Total ram usage:        0 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:    6
 24392 ;; This function calls:
 24393 ;;		Nothing
 24394 ;; This function is called by:
 24395 ;;		_SYSTEM_Initialize
 24396 ;; This function uses a reentrant model
 24397 ;;
 24398                           
 24399                           	psect	text107
 24400  017E8C                     __ptext107:
 24401                           	opt callstack 0
 24402  017E8C                     _INTERRUPT_Initialize:
 24403                           	opt callstack 0
 24404                           
 24405                           ; BSR set to: 57
 24406                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24407  017E8C  52E6               	movf	postinc1,f,c
 24408                           
 24409                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24410                           
 24411                           ;incstack = 0
 24412  017E8E  8AD2               	bsf	210,5,c	;volatile
 24413                           
 24414                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24415  017E90  AED2               	btfss	16338,7,c	;volatile
 24416  017E92  D003               	goto	u8050
 24417  017E94  6A3D               	clrf	(btemp+11)^0,c
 24418  017E96  2A3D               	incf	(btemp+11)^0,f,c
 24419  017E98  D001               	goto	u8068
 24420  017E9A                     u8050:
 24421  017E9A  6A3D               	clrf	(btemp+11)^0,c
 24422  017E9C                     u8068:
 24423                           
 24424                           ;stkvar	_state @ sp[(-1)+0]
 24425  017E9C  0EFF               	movlw	-1
 24426  017E9E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24427                           
 24428                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24429  017EA4  9ED2               	bcf	16338,7,c	;volatile
 24430                           
 24431                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24432  017EA6  0E55               	movlw	85
 24433  017EA8  6ED4               	movwf	212,c	;volatile
 24434                           
 24435                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24436  017EAA  0EAA               	movlw	170
 24437  017EAC  6ED4               	movwf	212,c	;volatile
 24438                           
 24439                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24440  017EAE  90D4               	bcf	212,0,c	;volatile
 24441                           
 24442                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24443  017EB0  0138               	movlb	56	; () banked
 24444  017EB2  6B9F               	clrf	159,b	;volatile
 24445                           
 24446                           ; BSR set to: 56
 24447                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24448  017EB4  6B9E               	clrf	158,b	;volatile
 24449                           
 24450                           ; BSR set to: 56
 24451                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24452  017EB6  0E08               	movlw	8
 24453  017EB8  6F9D               	movwf	157,b	;volatile
 24454                           
 24455                           ; BSR set to: 56
 24456                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24457  017EBA  0E55               	movlw	85
 24458  017EBC  6ED4               	movwf	212,c	;volatile
 24459                           
 24460                           ; BSR set to: 56
 24461                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24462  017EBE  0EAA               	movlw	170
 24463  017EC0  6ED4               	movwf	212,c	;volatile
 24464                           
 24465                           ; BSR set to: 56
 24466                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24467  017EC2  80D4               	bsf	212,0,c	;volatile
 24468                           
 24469                           ; BSR set to: 56
 24470                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24471                           ;stkvar	_state @ sp[(-1)+0]
 24472  017EC4  0EFF               	movlw	-1
 24473  017EC6  B0E3               	btfsc	plusw1,0,c
 24474  017EC8  D002               	bra	u8075
 24475  017ECA  9ED2               	bcf	16338,7,c	;volatile
 24476  017ECC  D001               	bra	u8076
 24477  017ECE                     u8075:
 24478  017ECE  8ED2               	bsf	16338,7,c	;volatile
 24479  017ED0                     u8076:
 24480                           
 24481                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24482  017ED0  0139               	movlb	57	; () banked
 24483  017ED2  8782               	bsf	130,3,b	;volatile
 24484                           
 24485                           ; BSR set to: 57
 24486                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24487  017ED4  8382               	bsf	130,1,b	;volatile
 24488                           
 24489                           ; BSR set to: 57
 24490                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24491  017ED6  8182               	bsf	130,0,b	;volatile
 24492                           
 24493                           ; BSR set to: 57
 24494                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24495  017ED8  8582               	bsf	130,2,b	;volatile
 24496                           
 24497                           ; BSR set to: 57
 24498                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24499  017EDA  8786               	bsf	134,3,b	;volatile
 24500                           
 24501                           ; BSR set to: 57
 24502                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24503  017EDC  8586               	bsf	134,2,b	;volatile
 24504                           
 24505                           ; BSR set to: 57
 24506                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24507  017EDE  8983               	bsf	131,4,b	;volatile
 24508                           
 24509                           ; BSR set to: 57
 24510                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24511  017EE0  8783               	bsf	131,3,b	;volatile
 24512                           
 24513                           ; BSR set to: 57
 24514                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24515  017EE2  8181               	bsf	129,0,b	;volatile
 24516                           
 24517                           ; BSR set to: 57
 24518                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24519  017EE4  9185               	bcf	133,0,b	;volatile
 24520                           
 24521                           ; BSR set to: 57
 24522                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24523  017EE6  8189               	bsf	137,0,b	;volatile
 24524                           
 24525                           ; BSR set to: 57
 24526                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24527  017EE8  9D88               	bcf	136,6,b	;volatile
 24528                           
 24529                           ; BSR set to: 57
 24530                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24531  017EEA  8581               	bsf	129,2,b	;volatile
 24532                           
 24533                           ; BSR set to: 57
 24534                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24535  017EEC  8781               	bsf	129,3,b	;volatile
 24536                           
 24537                           ; BSR set to: 57
 24538                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24539  017EEE  52E5               	movf	postdec1,f,c
 24540  017EF0  0012               	return		;funcret
 24541  017EF2                     __end_of_INTERRUPT_Initialize:
 24542                           	opt callstack 0
 24543                           
 24544 ;; *************** function _FVR_Initialize *****************
 24545 ;; Defined at:
 24546 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24547 ;; Parameters:    Size  Location     Type
 24548 ;;		None
 24549 ;; Auto vars:     Size  Location     Type
 24550 ;;		None
 24551 ;; Return value:  Size  Location     Type
 24552 ;;                  1  [STACK] void 
 24553 ;; Registers used:
 24554 ;;		wreg, status,2
 24555 ;; Tracked objects:
 24556 ;;		On entry : 3F/39
 24557 ;;		On exit  : 3F/3E
 24558 ;;		Unchanged: 0/0
 24559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24564 ;;Total ram usage:        0 bytes
 24565 ;; Hardware stack levels used:    1
 24566 ;; Hardware stack levels required when called:    6
 24567 ;; This function calls:
 24568 ;;		Nothing
 24569 ;; This function is called by:
 24570 ;;		_SYSTEM_Initialize
 24571 ;; This function uses a reentrant model
 24572 ;;
 24573                           
 24574                           	psect	text108
 24575  018E56                     __ptext108:
 24576                           	opt callstack 0
 24577  018E56                     _FVR_Initialize:
 24578                           	opt callstack 23
 24579                           
 24580                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24581                           
 24582                           ; BSR set to: 57
 24583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24584                           ;incstack = 0
 24585  018E56  0EAF               	movlw	175
 24586  018E58  013E               	movlb	62	; () banked
 24587  018E5A  6FC1               	movwf	193,b	;volatile
 24588                           
 24589                           ; BSR set to: 62
 24590                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24591  018E5C  0012               	return		;funcret
 24592  018E5E                     __end_of_FVR_Initialize:
 24593                           	opt callstack 0
 24594                           
 24595 ;; *************** function _EXT_INT_Initialize *****************
 24596 ;; Defined at:
 24597 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24598 ;; Parameters:    Size  Location     Type
 24599 ;;		None
 24600 ;; Auto vars:     Size  Location     Type
 24601 ;;		None
 24602 ;; Return value:  Size  Location     Type
 24603 ;;                  1  [STACK] void 
 24604 ;; Registers used:
 24605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24606 ;; Tracked objects:
 24607 ;;		On entry : 3F/3F
 24608 ;;		On exit  : 3F/39
 24609 ;;		Unchanged: 0/0
 24610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24615 ;;Total ram usage:        0 bytes
 24616 ;; Hardware stack levels used:    1
 24617 ;; Hardware stack levels required when called:    7
 24618 ;; This function calls:
 24619 ;;		_INT0_SetInterruptHandler
 24620 ;;		_INT1_SetInterruptHandler
 24621 ;; This function is called by:
 24622 ;;		_SYSTEM_Initialize
 24623 ;; This function uses a reentrant model
 24624 ;;
 24625                           
 24626                           	psect	text109
 24627  01864E                     __ptext109:
 24628                           	opt callstack 0
 24629  01864E                     _EXT_INT_Initialize:
 24630                           	opt callstack 22
 24631                           
 24632                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24633                           
 24634                           ; BSR set to: 62
 24635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24636                           ;incstack = 0
 24637  01864E  0139               	movlb	57	; () banked
 24638  018650  91A1               	bcf	161,0,b	;volatile
 24639                           
 24640                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24641  018652  90D2               	bcf	210,0,c	;volatile
 24642                           
 24643                           ; BSR set to: 57
 24644                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24645  018654  0E78               	movlw	low _INT0_DefaultInterruptHandler
 24646  018656  6EE6               	movwf	postinc1,c
 24647  018658  0E8E               	movlw	high _INT0_DefaultInterruptHandler
 24648  01865A  6EE6               	movwf	postinc1,c
 24649  01865C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24650  01865E  6EE6               	movwf	postinc1,c
 24651  018660  ECEB  F0C4         	call	_INT0_SetInterruptHandler	;wreg free
 24652                           
 24653                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24654  018664  0139               	movlb	57	; () banked
 24655  018666  8191               	bsf	145,0,b	;volatile
 24656                           
 24657                           ; BSR set to: 57
 24658                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24659  018668  91A5               	bcf	165,0,b	;volatile
 24660                           
 24661                           ; BSR set to: 57
 24662                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24663  01866A  92D2               	bcf	210,1,c	;volatile
 24664                           
 24665                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24666  01866C  0E76               	movlw	low _INT1_DefaultInterruptHandler
 24667  01866E  6EE6               	movwf	postinc1,c
 24668  018670  0E8E               	movlw	high _INT1_DefaultInterruptHandler
 24669  018672  6EE6               	movwf	postinc1,c
 24670  018674  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24671  018676  6EE6               	movwf	postinc1,c
 24672  018678  ECD7  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
 24673                           
 24674                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24675  01867C  0139               	movlb	57	; () banked
 24676  01867E  8195               	bsf	149,0,b	;volatile
 24677                           
 24678                           ; BSR set to: 57
 24679                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24680  018680  0012               	return		;funcret
 24681  018682                     __end_of_EXT_INT_Initialize:
 24682                           	opt callstack 0
 24683                           
 24684 ;; *************** function _INT1_SetInterruptHandler *****************
 24685 ;; Defined at:
 24686 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24687 ;; Parameters:    Size  Location     Type
 24688 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24689 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24690 ;; Auto vars:     Size  Location     Type
 24691 ;;		None
 24692 ;; Return value:  Size  Location     Type
 24693 ;;                  1  [STACK] void 
 24694 ;; Registers used:
 24695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24696 ;; Tracked objects:
 24697 ;;		On entry : 3F/39
 24698 ;;		On exit  : 0/0
 24699 ;;		Unchanged: 0/0
 24700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24705 ;;Total ram usage:        0 bytes
 24706 ;; Hardware stack levels used:    1
 24707 ;; Hardware stack levels required when called:    6
 24708 ;; This function calls:
 24709 ;;		Nothing
 24710 ;; This function is called by:
 24711 ;;		_EXT_INT_Initialize
 24712 ;;		_start_switch_handler
 24713 ;; This function uses a reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text110
 24717  0189AE                     __ptext110:
 24718                           	opt callstack 0
 24719  0189AE                     _INT1_SetInterruptHandler:
 24720                           	opt callstack 23
 24721                           
 24722                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24723                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24724                           
 24725                           ; BSR set to: 57
 24726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24727                           ;incstack = 0
 24728  0189AE  50E1               	movf	fsr1l,w,c
 24729  0189B0  0FFD               	addlw	-3
 24730  0189B2  6ED9               	movwf	fsr2l,c
 24731  0189B4  50E2               	movf	fsr1h,w,c
 24732  0189B6  6EDA               	movwf	fsr2h,c
 24733  0189B8  0EFF               	movlw	255
 24734  0189BA  22DA               	addwfc	fsr2h,f,c
 24735  0189BC  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24736  0189C2  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24737  0189C8  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24738                           
 24739                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24740  0189CE  52E5               	movf	postdec1,f,c
 24741  0189D0  52E5               	movf	postdec1,f,c
 24742  0189D2  52E5               	movf	postdec1,f,c
 24743  0189D4  0012               	return		;funcret
 24744  0189D6                     __end_of_INT1_SetInterruptHandler:
 24745                           	opt callstack 0
 24746                           
 24747 ;; *************** function _INT0_SetInterruptHandler *****************
 24748 ;; Defined at:
 24749 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24750 ;; Parameters:    Size  Location     Type
 24751 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24752 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24753 ;; Auto vars:     Size  Location     Type
 24754 ;;		None
 24755 ;; Return value:  Size  Location     Type
 24756 ;;                  1  [STACK] void 
 24757 ;; Registers used:
 24758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24759 ;; Tracked objects:
 24760 ;;		On entry : 3F/39
 24761 ;;		On exit  : 0/0
 24762 ;;		Unchanged: 0/0
 24763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24768 ;;Total ram usage:        0 bytes
 24769 ;; Hardware stack levels used:    1
 24770 ;; Hardware stack levels required when called:    6
 24771 ;; This function calls:
 24772 ;;		Nothing
 24773 ;; This function is called by:
 24774 ;;		_EXT_INT_Initialize
 24775 ;; This function uses a reentrant model
 24776 ;;
 24777                           
 24778                           	psect	text111
 24779  0189D6                     __ptext111:
 24780                           	opt callstack 0
 24781  0189D6                     _INT0_SetInterruptHandler:
 24782                           	opt callstack 22
 24783                           
 24784                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24785                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24786                           
 24787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24788                           ;incstack = 0
 24789  0189D6  50E1               	movf	fsr1l,w,c
 24790  0189D8  0FFD               	addlw	-3
 24791  0189DA  6ED9               	movwf	fsr2l,c
 24792  0189DC  50E2               	movf	fsr1h,w,c
 24793  0189DE  6EDA               	movwf	fsr2h,c
 24794  0189E0  0EFF               	movlw	255
 24795  0189E2  22DA               	addwfc	fsr2h,f,c
 24796  0189E4  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24797  0189EA  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24798  0189F0  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24799                           
 24800                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24801  0189F6  52E5               	movf	postdec1,f,c
 24802  0189F8  52E5               	movf	postdec1,f,c
 24803  0189FA  52E5               	movf	postdec1,f,c
 24804  0189FC  0012               	return		;funcret
 24805  0189FE                     __end_of_INT0_SetInterruptHandler:
 24806                           	opt callstack 0
 24807                           
 24808 ;; *************** function _DMA2_Initialize *****************
 24809 ;; Defined at:
 24810 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24811 ;; Parameters:    Size  Location     Type
 24812 ;;		None
 24813 ;; Auto vars:     Size  Location     Type
 24814 ;;		None
 24815 ;; Return value:  Size  Location     Type
 24816 ;;                  1  [STACK] void 
 24817 ;; Registers used:
 24818 ;;		wreg, status,2
 24819 ;; Tracked objects:
 24820 ;;		On entry : 3F/3D
 24821 ;;		On exit  : 3F/3B
 24822 ;;		Unchanged: 0/0
 24823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24828 ;;Total ram usage:        0 bytes
 24829 ;; Hardware stack levels used:    1
 24830 ;; Hardware stack levels required when called:    6
 24831 ;; This function calls:
 24832 ;;		Nothing
 24833 ;; This function is called by:
 24834 ;;		_SYSTEM_Initialize
 24835 ;; This function uses a reentrant model
 24836 ;;
 24837                           
 24838                           	psect	text112
 24839  018192                     __ptext112:
 24840                           	opt callstack 0
 24841  018192                     _DMA2_Initialize:
 24842                           	opt callstack 23
 24843                           
 24844                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24845                           
 24846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24847                           ;incstack = 0
 24848  018192  0E00               	movlw	0
 24849  018194  013B               	movlb	59	; () banked
 24850  018196  6FD9               	movwf	217,b	;volatile
 24851  018198  0E10               	movlw	16
 24852  01819A  6FDA               	movwf	218,b	;volatile
 24853  01819C  0E00               	movlw	0
 24854  01819E  6FDB               	movwf	219,b	;volatile
 24855                           
 24856                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24857  0181A0  0E3F               	movlw	63
 24858  0181A2  6FD1               	movwf	209,b	;volatile
 24859  0181A4  0EBB               	movlw	187
 24860  0181A6  6FD0               	movwf	208,b	;volatile
 24861                           
 24862                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24863  0181A8  0E03               	movlw	3
 24864  0181AA  6FDD               	movwf	221,b	;volatile
 24865                           
 24866                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24867  0181AC  0E00               	movlw	0
 24868  0181AE  6FD8               	movwf	216,b	;volatile
 24869  0181B0  0E01               	movlw	1
 24870  0181B2  6FD7               	movwf	215,b	;volatile
 24871                           
 24872                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24873  0181B4  0E00               	movlw	0
 24874  0181B6  6FCF               	movwf	207,b	;volatile
 24875  0181B8  0E01               	movlw	1
 24876  0181BA  6FCE               	movwf	206,b	;volatile
 24877                           
 24878                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24879  0181BC  0E46               	movlw	70
 24880  0181BE  6FDF               	movwf	223,b	;volatile
 24881                           
 24882                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24883  0181C0  0E3D               	movlw	61
 24884  0181C2  6FDE               	movwf	222,b	;volatile
 24885                           
 24886                           ; BSR set to: 59
 24887                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24888  0181C4  0139               	movlb	57	; () banked
 24889  0181C6  97A5               	bcf	165,3,b	;volatile
 24890                           
 24891                           ; BSR set to: 57
 24892                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24893  0181C8  95A5               	bcf	165,2,b	;volatile
 24894                           
 24895                           ; BSR set to: 57
 24896                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24897  0181CA  9BA5               	bcf	165,5,b	;volatile
 24898                           
 24899                           ; BSR set to: 57
 24900                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24901  0181CC  99A5               	bcf	165,4,b	;volatile
 24902                           
 24903                           ; BSR set to: 57
 24904                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24905  0181CE  9795               	bcf	149,3,b	;volatile
 24906                           
 24907                           ; BSR set to: 57
 24908                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24909  0181D0  9595               	bcf	149,2,b	;volatile
 24910                           
 24911                           ; BSR set to: 57
 24912                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24913  0181D2  9B95               	bcf	149,5,b	;volatile
 24914                           
 24915                           ; BSR set to: 57
 24916                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24917  0181D4  9995               	bcf	149,4,b	;volatile
 24918  0181D6  9ED2               	bcf	16338,7,c	;# 
 24919  0181D8  0139               	banksel	14831	;# 
 24920  0181DA  0E55               	movlw	85	;# 
 24921  0181DC  6FEF               	movwf	14831,b	;# 
 24922  0181DE  0EAA               	movlw	170	;# 
 24923  0181E0  6FEF               	movwf	14831,b	;# 
 24924  0181E2  81EF               	bsf	14831,0,b	;# 
 24925  0181E4  8ED2               	bsf	16338,7,c	;# 
 24926                           
 24927                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24928  0181E6  013B               	movlb	59	; () banked
 24929  0181E8  6BDC               	clrf	220,b	;volatile
 24930                           
 24931                           ; BSR set to: 59
 24932                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24933  0181EA  0012               	return		;funcret
 24934  0181EC                     __end_of_DMA2_Initialize:
 24935                           	opt callstack 0
 24936                           
 24937 ;; *************** function _DMA1_Initialize *****************
 24938 ;; Defined at:
 24939 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24940 ;; Parameters:    Size  Location     Type
 24941 ;;		None
 24942 ;; Auto vars:     Size  Location     Type
 24943 ;;		None
 24944 ;; Return value:  Size  Location     Type
 24945 ;;                  1  [STACK] void 
 24946 ;; Registers used:
 24947 ;;		wreg, status,2
 24948 ;; Tracked objects:
 24949 ;;		On entry : 3F/3B
 24950 ;;		On exit  : 3F/3B
 24951 ;;		Unchanged: 0/0
 24952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24957 ;;Total ram usage:        0 bytes
 24958 ;; Hardware stack levels used:    1
 24959 ;; Hardware stack levels required when called:    6
 24960 ;; This function calls:
 24961 ;;		Nothing
 24962 ;; This function is called by:
 24963 ;;		_SYSTEM_Initialize
 24964 ;; This function uses a reentrant model
 24965 ;;
 24966                           
 24967                           	psect	text113
 24968  017D4E                     __ptext113:
 24969                           	opt callstack 0
 24970  017D4E                     _DMA1_Initialize:
 24971                           	opt callstack 23
 24972                           
 24973                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24974                           
 24975                           ; BSR set to: 59
 24976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24977                           ;incstack = 0
 24978  017D4E  0E00               	movlw	0
 24979  017D50  013B               	movlb	59	; () banked
 24980  017D52  6FF9               	movwf	249,b	;volatile
 24981  017D54  0E10               	movlw	16
 24982  017D56  6FFA               	movwf	250,b	;volatile
 24983  017D58  0E00               	movlw	0
 24984  017D5A  6FFB               	movwf	251,b	;volatile
 24985                           
 24986                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24987  017D5C  0E3D               	movlw	61
 24988  017D5E  6FF1               	movwf	241,b	;volatile
 24989  017D60  0E11               	movlw	17
 24990  017D62  6FF0               	movwf	240,b	;volatile
 24991                           
 24992                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24993  017D64  0E03               	movlw	3
 24994  017D66  6FFD               	movwf	253,b	;volatile
 24995                           
 24996                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24997  017D68  0E00               	movlw	0
 24998  017D6A  6FF8               	movwf	248,b	;volatile
 24999  017D6C  0E01               	movlw	1
 25000  017D6E  6FF7               	movwf	247,b	;volatile
 25001                           
 25002                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25003  017D70  0E00               	movlw	0
 25004  017D72  6FEF               	movwf	239,b	;volatile
 25005  017D74  0E01               	movlw	1
 25006  017D76  6FEE               	movwf	238,b	;volatile
 25007                           
 25008                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25009  017D78  0E15               	movlw	21
 25010  017D7A  6FFF               	movwf	255,b	;volatile
 25011                           
 25012                           ; BSR set to: 59
 25013                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25014  017D7C  6BFE               	clrf	254,b	;volatile
 25015                           
 25016                           ; BSR set to: 59
 25017                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25018  017D7E  0139               	movlb	57	; () banked
 25019  017D80  93A2               	bcf	162,1,b	;volatile
 25020                           
 25021                           ; BSR set to: 57
 25022                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25023  017D82  91A2               	bcf	162,0,b	;volatile
 25024                           
 25025                           ; BSR set to: 57
 25026                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25027  017D84  97A2               	bcf	162,3,b	;volatile
 25028                           
 25029                           ; BSR set to: 57
 25030                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25031  017D86  95A2               	bcf	162,2,b	;volatile
 25032                           
 25033                           ; BSR set to: 57
 25034                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25035  017D88  8392               	bsf	146,1,b	;volatile
 25036                           
 25037                           ; BSR set to: 57
 25038                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25039  017D8A  8192               	bsf	146,0,b	;volatile
 25040                           
 25041                           ; BSR set to: 57
 25042                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25043  017D8C  8792               	bsf	146,3,b	;volatile
 25044                           
 25045                           ; BSR set to: 57
 25046                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25047  017D8E  8592               	bsf	146,2,b	;volatile
 25048                           
 25049                           ; BSR set to: 57
 25050                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25051  017D90  6BF1               	clrf	241,b	;volatile
 25052                           
 25053                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25054  017D92  0E01               	movlw	1
 25055  017D94  6FF2               	movwf	242,b	;volatile
 25056                           
 25057                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25058  017D96  0E04               	movlw	4
 25059  017D98  6FF3               	movwf	243,b	;volatile
 25060                           
 25061                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25062  017D9A  0E02               	movlw	2
 25063  017D9C  6FF4               	movwf	244,b	;volatile
 25064                           
 25065                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25066  017D9E  0E03               	movlw	3
 25067  017DA0  6FF7               	movwf	247,b	;volatile
 25068  017DA2  9ED2               	bcf	16338,7,c	;# 
 25069  017DA4  0139               	banksel	14831	;# 
 25070  017DA6  0E55               	movlw	85	;# 
 25071  017DA8  6FEF               	movwf	14831,b	;# 
 25072  017DAA  0EAA               	movlw	170	;# 
 25073  017DAC  6FEF               	movwf	14831,b	;# 
 25074  017DAE  81EF               	bsf	14831,0,b	;# 
 25075  017DB0  8ED2               	bsf	16338,7,c	;# 
 25076                           
 25077                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25078  017DB2  013B               	movlb	59	; () banked
 25079  017DB4  6BFC               	clrf	252,b	;volatile
 25080                           
 25081                           ; BSR set to: 59
 25082                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25083  017DB6  0012               	return		;funcret
 25084  017DB8                     __end_of_DMA1_Initialize:
 25085                           	opt callstack 0
 25086                           
 25087 ;; *************** function _CLKREF_Initialize *****************
 25088 ;; Defined at:
 25089 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25090 ;; Parameters:    Size  Location     Type
 25091 ;;		None
 25092 ;; Auto vars:     Size  Location     Type
 25093 ;;		None
 25094 ;; Return value:  Size  Location     Type
 25095 ;;                  1  [STACK] void 
 25096 ;; Registers used:
 25097 ;;		wreg, status,2
 25098 ;; Tracked objects:
 25099 ;;		On entry : 3F/3B
 25100 ;;		On exit  : 3F/3C
 25101 ;;		Unchanged: 0/0
 25102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25107 ;;Total ram usage:        0 bytes
 25108 ;; Hardware stack levels used:    1
 25109 ;; Hardware stack levels required when called:    6
 25110 ;; This function calls:
 25111 ;;		Nothing
 25112 ;; This function is called by:
 25113 ;;		_SYSTEM_Initialize
 25114 ;; This function uses a reentrant model
 25115 ;;
 25116                           
 25117                           	psect	text114
 25118  018E0A                     __ptext114:
 25119                           	opt callstack 0
 25120  018E0A                     _CLKREF_Initialize:
 25121                           	opt callstack 23
 25122                           
 25123                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25124                           
 25125                           ; BSR set to: 59
 25126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25127                           ;incstack = 0
 25128  018E0A  013C               	movlb	60	; () banked
 25129  018E0C  6BE6               	clrf	230,b	;volatile
 25130                           
 25131                           ; BSR set to: 60
 25132                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25133  018E0E  0E94               	movlw	148
 25134  018E10  6FE5               	movwf	229,b	;volatile
 25135                           
 25136                           ; BSR set to: 60
 25137                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25138  018E12  0012               	return		;funcret
 25139  018E14                     __end_of_CLKREF_Initialize:
 25140                           	opt callstack 0
 25141                           
 25142 ;; *************** function _ADCC_Initialize *****************
 25143 ;; Defined at:
 25144 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25145 ;; Parameters:    Size  Location     Type
 25146 ;;		None
 25147 ;; Auto vars:     Size  Location     Type
 25148 ;;		None
 25149 ;; Return value:  Size  Location     Type
 25150 ;;                  1  [STACK] void 
 25151 ;; Registers used:
 25152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25153 ;; Tracked objects:
 25154 ;;		On entry : 3F/3E
 25155 ;;		On exit  : 0/0
 25156 ;;		Unchanged: 0/0
 25157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25162 ;;Total ram usage:        0 bytes
 25163 ;; Hardware stack levels used:    1
 25164 ;; Hardware stack levels required when called:    7
 25165 ;; This function calls:
 25166 ;;		_ADCC_SetADIInterruptHandler
 25167 ;;		_ADCC_SetADTIInterruptHandler
 25168 ;; This function is called by:
 25169 ;;		_SYSTEM_Initialize
 25170 ;; This function uses a reentrant model
 25171 ;;
 25172                           
 25173                           	psect	text115
 25174  017DB8                     __ptext115:
 25175                           	opt callstack 0
 25176  017DB8                     _ADCC_Initialize:
 25177                           	opt callstack 22
 25178                           
 25179                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25180                           
 25181                           ; BSR set to: 60
 25182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25183                           ;incstack = 0
 25184  017DB8  013E               	movlb	62	; () banked
 25185  017DBA  6BDE               	clrf	222,b	;volatile
 25186                           
 25187                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25188  017DBC  6BDF               	clrf	223,b	;volatile
 25189                           
 25190                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25191  017DBE  6BE0               	clrf	224,b	;volatile
 25192                           
 25193                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25194  017DC0  6BE1               	clrf	225,b	;volatile
 25195                           
 25196                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25197  017DC2  6BE4               	clrf	228,b	;volatile
 25198                           
 25199                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25200  017DC4  6BE5               	clrf	229,b	;volatile
 25201                           
 25202                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25203  017DC6  6BEA               	clrf	234,b	;volatile
 25204                           
 25205                           ; BSR set to: 62
 25206                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25207  017DC8  0E40               	movlw	64
 25208  017DCA  6FEC               	movwf	236,b	;volatile
 25209                           
 25210                           ; BSR set to: 62
 25211                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25212  017DCC  6BF1               	clrf	241,b	;volatile
 25213                           
 25214                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25215  017DCE  0E20               	movlw	32
 25216  017DD0  6FF3               	movwf	243,b	;volatile
 25217                           
 25218                           ; BSR set to: 62
 25219                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25220  017DD2  6BF4               	clrf	244,b	;volatile
 25221                           
 25222                           ; BSR set to: 62
 25223                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25224  017DD4  6BF5               	clrf	245,b	;volatile
 25225                           
 25226                           ; BSR set to: 62
 25227                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25228  017DD6  6BF6               	clrf	246,b	;volatile
 25229                           
 25230                           ; BSR set to: 62
 25231                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25232  017DD8  6BF7               	clrf	247,b	;volatile
 25233                           
 25234                           ; BSR set to: 62
 25235                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25236  017DDA  6BF9               	clrf	249,b	;volatile
 25237                           
 25238                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25239  017DDC  0E5B               	movlw	91
 25240  017DDE  6FFA               	movwf	250,b	;volatile
 25241                           
 25242                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25243  017DE0  0E27               	movlw	39
 25244  017DE2  6FFB               	movwf	251,b	;volatile
 25245                           
 25246                           ; BSR set to: 62
 25247                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25248  017DE4  6BFC               	clrf	252,b	;volatile
 25249                           
 25250                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25251  017DE6  0E02               	movlw	2
 25252  017DE8  6FFD               	movwf	253,b	;volatile
 25253                           
 25254                           ; BSR set to: 62
 25255                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25256  017DEA  6BFE               	clrf	254,b	;volatile
 25257                           
 25258                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25259  017DEC  0E07               	movlw	7
 25260  017DEE  6FFF               	movwf	255,b	;volatile
 25261                           
 25262                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25263  017DF0  0E84               	movlw	132
 25264  017DF2  6FF8               	movwf	248,b	;volatile
 25265                           
 25266                           ; BSR set to: 62
 25267                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25268  017DF4  0139               	movlb	57	; () banked
 25269  017DF6  95A1               	bcf	161,2,b	;volatile
 25270                           
 25271                           ; BSR set to: 57
 25272                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25273  017DF8  8591               	bsf	145,2,b	;volatile
 25274                           
 25275                           ; BSR set to: 57
 25276                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25277  017DFA  0E7A               	movlw	low _ADCC_DefaultInterruptHandler
 25278  017DFC  6EE6               	movwf	postinc1,c
 25279  017DFE  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 25280  017E00  6EE6               	movwf	postinc1,c
 25281  017E02  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25282  017E04  6EE6               	movwf	postinc1,c
 25283  017E06  EC13  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25284                           
 25285                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25286  017E0A  0139               	movlb	57	; () banked
 25287  017E0C  97A1               	bcf	161,3,b	;volatile
 25288                           
 25289                           ; BSR set to: 57
 25290                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25291  017E0E  8791               	bsf	145,3,b	;volatile
 25292                           
 25293                           ; BSR set to: 57
 25294                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25295  017E10  0E7A               	movlw	low _ADCC_DefaultInterruptHandler
 25296  017E12  6EE6               	movwf	postinc1,c
 25297  017E14  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 25298  017E16  6EE6               	movwf	postinc1,c
 25299  017E18  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25300  017E1A  6EE6               	movwf	postinc1,c
 25301  017E1C  ECFF  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25302                           
 25303                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25304  017E20  0012               	return		;funcret
 25305  017E22                     __end_of_ADCC_Initialize:
 25306                           	opt callstack 0
 25307                           
 25308 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25309 ;; Defined at:
 25310 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25311 ;; Parameters:    Size  Location     Type
 25312 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25313 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25314 ;; Auto vars:     Size  Location     Type
 25315 ;;		None
 25316 ;; Return value:  Size  Location     Type
 25317 ;;                  1  [STACK] void 
 25318 ;; Registers used:
 25319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25320 ;; Tracked objects:
 25321 ;;		On entry : 0/0
 25322 ;;		On exit  : 0/0
 25323 ;;		Unchanged: 0/0
 25324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25329 ;;Total ram usage:        0 bytes
 25330 ;; Hardware stack levels used:    1
 25331 ;; Hardware stack levels required when called:    6
 25332 ;; This function calls:
 25333 ;;		Nothing
 25334 ;; This function is called by:
 25335 ;;		_ADCC_Initialize
 25336 ;;		_start_adc_scan
 25337 ;; This function uses a reentrant model
 25338 ;;
 25339                           
 25340                           	psect	text116
 25341  0189FE                     __ptext116:
 25342                           	opt callstack 0
 25343  0189FE                     _ADCC_SetADTIInterruptHandler:
 25344                           	opt callstack 23
 25345                           
 25346                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25347                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25348                           
 25349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25350                           ;incstack = 0
 25351  0189FE  50E1               	movf	fsr1l,w,c
 25352  018A00  0FFD               	addlw	-3
 25353  018A02  6ED9               	movwf	fsr2l,c
 25354  018A04  50E2               	movf	fsr1h,w,c
 25355  018A06  6EDA               	movwf	fsr2h,c
 25356  018A08  0EFF               	movlw	255
 25357  018A0A  22DA               	addwfc	fsr2h,f,c
 25358  018A0C  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25359  018A12  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25360  018A18  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25361                           
 25362                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25363  018A1E  52E5               	movf	postdec1,f,c
 25364  018A20  52E5               	movf	postdec1,f,c
 25365  018A22  52E5               	movf	postdec1,f,c
 25366  018A24  0012               	return		;funcret
 25367  018A26                     __end_of_ADCC_SetADTIInterruptHandler:
 25368                           	opt callstack 0
 25369                           
 25370 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25371 ;; Defined at:
 25372 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25373 ;; Parameters:    Size  Location     Type
 25374 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25375 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25376 ;; Auto vars:     Size  Location     Type
 25377 ;;		None
 25378 ;; Return value:  Size  Location     Type
 25379 ;;                  1  [STACK] void 
 25380 ;; Registers used:
 25381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25382 ;; Tracked objects:
 25383 ;;		On entry : 6/0
 25384 ;;		On exit  : 0/0
 25385 ;;		Unchanged: 0/0
 25386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25391 ;;Total ram usage:        0 bytes
 25392 ;; Hardware stack levels used:    1
 25393 ;; Hardware stack levels required when called:    6
 25394 ;; This function calls:
 25395 ;;		Nothing
 25396 ;; This function is called by:
 25397 ;;		_ADCC_Initialize
 25398 ;;		_start_adc_scan
 25399 ;; This function uses a reentrant model
 25400 ;;
 25401                           
 25402                           	psect	text117
 25403  018A26                     __ptext117:
 25404                           	opt callstack 0
 25405  018A26                     _ADCC_SetADIInterruptHandler:
 25406                           	opt callstack 23
 25407                           
 25408                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25409                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25410                           
 25411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25412                           ;incstack = 0
 25413  018A26  50E1               	movf	fsr1l,w,c
 25414  018A28  0FFD               	addlw	-3
 25415  018A2A  6ED9               	movwf	fsr2l,c
 25416  018A2C  50E2               	movf	fsr1h,w,c
 25417  018A2E  6EDA               	movwf	fsr2h,c
 25418  018A30  0EFF               	movlw	255
 25419  018A32  22DA               	addwfc	fsr2h,f,c
 25420  018A34  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25421  018A3A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25422  018A40  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25423                           
 25424                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25425  018A46  52E5               	movf	postdec1,f,c
 25426  018A48  52E5               	movf	postdec1,f,c
 25427  018A4A  52E5               	movf	postdec1,f,c
 25428  018A4C  0012               	return		;funcret
 25429  018A4E                     __end_of_ADCC_SetADIInterruptHandler:
 25430                           	opt callstack 0
 25431                           
 25432 ;; *************** function _INT1_ISR *****************
 25433 ;; Defined at:
 25434 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25435 ;; Parameters:    Size  Location     Type
 25436 ;;		None
 25437 ;; Auto vars:     Size  Location     Type
 25438 ;;		None
 25439 ;; Return value:  Size  Location     Type
 25440 ;;                  1    wreg      void 
 25441 ;; Registers used:
 25442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25443 ;; Tracked objects:
 25444 ;;		On entry : 0/0
 25445 ;;		On exit  : 0/0
 25446 ;;		Unchanged: 0/0
 25447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25450 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25451 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25452 ;;Total ram usage:        4 bytes
 25453 ;; Hardware stack levels used:    1
 25454 ;; Hardware stack levels required when called:    5
 25455 ;; This function calls:
 25456 ;;		_INT1_CallBack
 25457 ;; This function is called by:
 25458 ;;		Interrupt level 1
 25459 ;; This function uses a non-reentrant model
 25460 ;;
 25461                           
 25462                           	psect	text118
 25463  0184FC                     __ptext118:
 25464                           	opt callstack 0
 25465  0184FC                     _INT1_ISR:
 25466                           	opt callstack 12
 25467                           
 25468                           ;incstack = 0
 25469  0184FC  006F FF60  F0F6    	movff	status,??_INT1_ISR
 25470  018502  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 25471  018508  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 25472  01850E  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 25473  018514  EE16  F000         	lfsr	1,___intlo_sp
 25474                           
 25475                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25476  018518  0139               	movlb	57	; () banked
 25477  01851A  91A5               	bcf	165,0,b	;volatile
 25478                           
 25479                           ; BSR set to: 57
 25480                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25481  01851C  ECD3  F0C5         	call	_INT1_CallBack	;wreg free
 25482  018520  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25483  018526  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25484  01852C  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25485  018532  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25486  018538  0011               	retfie		f
 25487  01853A                     __end_of_INT1_ISR:
 25488                           	opt callstack 0
 25489                           
 25490 ;; *************** function _INT1_CallBack *****************
 25491 ;; Defined at:
 25492 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25493 ;; Parameters:    Size  Location     Type
 25494 ;;		None
 25495 ;; Auto vars:     Size  Location     Type
 25496 ;;		None
 25497 ;; Return value:  Size  Location     Type
 25498 ;;                  1  [STACK] void 
 25499 ;; Registers used:
 25500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25501 ;; Tracked objects:
 25502 ;;		On entry : 3F/39
 25503 ;;		On exit  : 0/0
 25504 ;;		Unchanged: 0/0
 25505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;Total ram usage:        0 bytes
 25511 ;; Hardware stack levels used:    1
 25512 ;; Hardware stack levels required when called:    4
 25513 ;; This function calls:
 25514 ;;		Absolute function
 25515 ;;		_INT1_DefaultInterruptHandler
 25516 ;;		_switch_handler
 25517 ;; This function is called by:
 25518 ;;		_INT1_ISR
 25519 ;; This function uses a reentrant model
 25520 ;;
 25521                           
 25522                           	psect	text119
 25523  018BA6                     __ptext119:
 25524                           	opt callstack 0
 25525  018BA6                     _INT1_CallBack:
 25526                           	opt callstack 12
 25527                           
 25528                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25529                           
 25530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25531                           ;incstack = 0
 25532  018BA6  5013               	movf	_INT1_InterruptHandler^0,w,c
 25533  018BA8  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25534  018BAA  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25535  018BAC  B4D8               	btfsc	status,2,c
 25536  018BAE  0012               	return	
 25537                           
 25538                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25539  018BB0  D801               	call	u850_28
 25540  018BB2  0012               	return	
 25541  018BB4                     u850_28:
 25542  018BB4  0005               	push	
 25543  018BB6  6EFA               	movwf	pclath,c
 25544  018BB8  5013               	movf	_INT1_InterruptHandler^0,w,c
 25545  018BBA  6EFD               	movwf	tosl,c
 25546  018BBC  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25547  018BBE  6EFE               	movwf	tosh,c
 25548  018BC0  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25549  018BC2  6EFF               	movwf	tosu,c
 25550  018BC4  50FA               	movf	pclath,w,c
 25551  018BC6  0012               	return		;indir
 25552  018BC8                     __end_of_INT1_CallBack:
 25553                           	opt callstack 0
 25554                           
 25555 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25556 ;; Defined at:
 25557 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25558 ;; Parameters:    Size  Location     Type
 25559 ;;		None
 25560 ;; Auto vars:     Size  Location     Type
 25561 ;;		None
 25562 ;; Return value:  Size  Location     Type
 25563 ;;                  1  [STACK] void 
 25564 ;; Registers used:
 25565 ;;		None
 25566 ;; Tracked objects:
 25567 ;;		On entry : 0/39
 25568 ;;		On exit  : 0/0
 25569 ;;		Unchanged: 0/0
 25570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25575 ;;Total ram usage:        0 bytes
 25576 ;; Hardware stack levels used:    1
 25577 ;; Hardware stack levels required when called:    3
 25578 ;; This function calls:
 25579 ;;		Nothing
 25580 ;; This function is called by:
 25581 ;;		_EXT_INT_Initialize
 25582 ;;		_INT1_CallBack
 25583 ;; This function uses a reentrant model
 25584 ;;
 25585                           
 25586                           	psect	text120
 25587  018E76                     __ptext120:
 25588                           	opt callstack 0
 25589  018E76                     _INT1_DefaultInterruptHandler:
 25590                           	opt callstack 12
 25591                           
 25592                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25593                           
 25594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25595                           ;incstack = 0
 25596  018E76  0012               	return		;funcret
 25597  018E78                     __end_of_INT1_DefaultInterruptHandler:
 25598                           	opt callstack 0
 25599                           
 25600 ;; *************** function _switch_handler *****************
 25601 ;; Defined at:
 25602 ;;		line 58 in file "dio.c"
 25603 ;; Parameters:    Size  Location     Type
 25604 ;;		None
 25605 ;; Auto vars:     Size  Location     Type
 25606 ;;  i               1  [STACK] unsigned char 
 25607 ;;  sw_value        1  [STACK] unsigned char 
 25608 ;; Return value:  Size  Location     Type
 25609 ;;                  1  [STACK] void 
 25610 ;; Registers used:
 25611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25612 ;; Tracked objects:
 25613 ;;		On entry : 0/39
 25614 ;;		On exit  : 0/0
 25615 ;;		Unchanged: 0/0
 25616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25621 ;;Total ram usage:        0 bytes
 25622 ;; Hardware stack levels used:    1
 25623 ;; Hardware stack levels required when called:    3
 25624 ;; This function calls:
 25625 ;;		Nothing
 25626 ;; This function is called by:
 25627 ;;		_start_switch_handler
 25628 ;;		_INT1_CallBack
 25629 ;; This function uses a reentrant model
 25630 ;;
 25631                           
 25632                           	psect	text121
 25633  016890                     __ptext121:
 25634                           	opt callstack 0
 25635  016890                     _switch_handler:
 25636                           	opt callstack 0
 25637                           
 25638                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25639  016890  52E6               	movf	postinc1,f,c
 25640  016892  52E6               	movf	postinc1,f,c
 25641                           
 25642                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25643                           ;stkvar	_i @ sp[(-2)+0]
 25644                           
 25645                           ;incstack = 0
 25646  016894  0EFE               	movlw	-2
 25647  016896  6AE3               	clrf	plusw1,c
 25648  016898  9EBD               	bcf	189,7,c	;volatile
 25649  01689A  82BE               	bsf	190,1,c	;volatile
 25650                           
 25651                           ;dio.c: 72:  __nop();
 25652  01689C  F000               	nop	
 25653                           
 25654                           ;dio.c: 73:  __nop();
 25655  01689E  F000               	nop	
 25656                           
 25657                           ;dio.c: 74:  __nop();
 25658  0168A0  F000               	nop	
 25659  0168A2  D019               	goto	l8924
 25660  0168A4                     l8912:
 25661                           
 25662                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25663  0168A4  A6CF               	btfss	207,3,c	;volatile
 25664  0168A6  D011               	goto	u836_20
 25665  0168A8  D00D               	goto	u836_21
 25666  0168AA                     u833_28:
 25667                           
 25668                           ;stkvar	_sw_value @ sp[(-2)+1]
 25669  0168AA  0EFF               	movlw	-1
 25670  0168AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25671                           
 25672                           ;dio.c: 80:    break;
 25673  0168B2  D027               	goto	l8926
 25674  0168B4                     l8914:
 25675                           
 25676                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25677  0168B4  A4CF               	btfss	207,2,c	;volatile
 25678  0168B6  D009               	goto	u836_20
 25679  0168B8  D005               	goto	u836_21
 25680  0168BA                     l8916:
 25681                           
 25682                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25683  0168BA  A2CF               	btfss	207,1,c	;volatile
 25684  0168BC  D006               	goto	u836_20
 25685  0168BE  D002               	goto	u836_21
 25686  0168C0                     l8918:
 25687                           
 25688                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25689  0168C0  A0CF               	btfss	207,0,c	;volatile
 25690  0168C2  D003               	goto	u836_20
 25691  0168C4                     u836_21:
 25692  0168C4  6A3D               	clrf	(btemp+11)^0,c
 25693  0168C6  2A3D               	incf	(btemp+11)^0,f,c
 25694  0168C8  D7F0               	goto	u833_28
 25695  0168CA                     u836_20:
 25696  0168CA  6A3D               	clrf	(btemp+11)^0,c
 25697  0168CC  D7EE               	goto	u833_28
 25698  0168CE                     l8920:
 25699                           
 25700                           ;dio.c: 91:    sw_value = 1;
 25701                           ;stkvar	_sw_value @ sp[(-2)+1]
 25702  0168CE  0EFF               	movlw	-1
 25703  0168D0  6AE3               	clrf	plusw1,c
 25704  0168D2  2AE3               	incf	plusw1,f,c
 25705                           
 25706                           ;dio.c: 92:    break;
 25707  0168D4  D016               	goto	l8926
 25708  0168D6                     l8924:
 25709                           
 25710                           ;stkvar	_i @ sp[(-2)+0]
 25711  0168D6  0EFE               	movlw	-2
 25712  0168D8  50E3               	movf	plusw1,w,c
 25713  0168DA  6E3C               	movwf	(btemp+10)^0,c
 25714  0168DC  6A3D               	clrf	(btemp+11)^0,c
 25715                           
 25716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25717                           ; Switch size 1, requested type "simple"
 25718                           ; Number of cases is 1, Range of values is 0 to 0
 25719                           ; switch strategies available:
 25720                           ; Name         Instructions Cycles
 25721                           ; simple_byte            4     3 (average)
 25722                           ;	Chosen strategy is simple_byte
 25723  0168DE  503D               	movf	(btemp+11)^0,w,c
 25724  0168E0  0A00               	xorlw	0	; case 0
 25725  0168E2  A4D8               	btfss	status,2,c
 25726  0168E4  D7F4               	goto	l8920
 25727                           
 25728                           ; Switch size 1, requested type "simple"
 25729                           ; Number of cases is 4, Range of values is 0 to 3
 25730                           ; switch strategies available:
 25731                           ; Name         Instructions Cycles
 25732                           ; simple_byte           13     7 (average)
 25733                           ;	Chosen strategy is simple_byte
 25734  0168E6  503C               	movf	(btemp+10)^0,w,c
 25735  0168E8  0A00               	xorlw	0	; case 0
 25736  0168EA  B4D8               	btfsc	status,2,c
 25737  0168EC  D7E9               	goto	l8918
 25738  0168EE  0A01               	xorlw	1	; case 1
 25739  0168F0  B4D8               	btfsc	status,2,c
 25740  0168F2  D7E3               	goto	l8916
 25741  0168F4  0A03               	xorlw	3	; case 2
 25742  0168F6  B4D8               	btfsc	status,2,c
 25743  0168F8  D7DD               	goto	l8914
 25744  0168FA  0A01               	xorlw	1	; case 3
 25745  0168FC  B4D8               	btfsc	status,2,c
 25746  0168FE  D7D2               	goto	l8912
 25747  016900  D7E6               	goto	l8920
 25748  016902                     l8926:
 25749                           
 25750                           ;dio.c: 96:   if (sw_value) {
 25751                           ;stkvar	_sw_value @ sp[(-2)+1]
 25752  016902  0EFF               	movlw	-1
 25753  016904  50E3               	movf	plusw1,w,c
 25754  016906  B4D8               	btfsc	status,2,c
 25755  016908  D014               	goto	l8932
 25756                           
 25757                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 25758                           ;stkvar	_i @ sp[(-2)+0]
 25759  01690A  0EFE               	movlw	-2
 25760  01690C  50E3               	movf	plusw1,w,c
 25761  01690E  0D05               	mullw	5
 25762  016910  50F3               	movf	243,w,c
 25763  016912  0F60               	addlw	low _S
 25764  016914  6ED9               	movwf	fsr2l,c
 25765  016916  6ADA               	clrf	fsr2h,c
 25766  016918  04DE               	decf	postinc2,w,c
 25767  01691A  A4D8               	btfss	status,2,c
 25768  01691C  D041               	goto	l8940
 25769                           
 25770                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 25771                           ;stkvar	_i @ sp[(-2)+0]
 25772  01691E  0EFE               	movlw	-2
 25773  016920  50E3               	movf	plusw1,w,c
 25774  016922  0D05               	mullw	5
 25775  016924  50F3               	movf	243,w,c
 25776  016926  0F60               	addlw	low _S
 25777  016928  6ED9               	movwf	fsr2l,c
 25778  01692A  6ADA               	clrf	fsr2h,c
 25779  01692C  0E00               	movlw	0
 25780  01692E  6EDF               	movwf	indf2,c
 25781  016930  D037               	goto	l8940
 25782  016932                     l8932:
 25783                           
 25784                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 25785                           ;stkvar	_i @ sp[(-2)+0]
 25786  016932  0EFE               	movlw	-2
 25787  016934  50E3               	movf	plusw1,w,c
 25788  016936  0D05               	mullw	5
 25789  016938  50F3               	movf	243,w,c
 25790  01693A  0F60               	addlw	low _S
 25791  01693C  6ED9               	movwf	fsr2l,c
 25792  01693E  6ADA               	clrf	fsr2h,c
 25793  016940  50DF               	movf	indf2,w,c
 25794  016942  A4D8               	btfss	status,2,c
 25795  016944  D02D               	goto	l8940
 25796                           
 25797                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 25798                           ;stkvar	_i @ sp[(-2)+0]
 25799  016946  0EFE               	movlw	-2
 25800  016948  50E3               	movf	plusw1,w,c
 25801  01694A  0D05               	mullw	5
 25802  01694C  50F3               	movf	243,w,c
 25803  01694E  0F60               	addlw	low _S
 25804  016950  6ED9               	movwf	fsr2l,c
 25805  016952  6ADA               	clrf	fsr2h,c
 25806  016954  0E01               	movlw	1
 25807  016956  6EDF               	movwf	indf2,c
 25808                           
 25809                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25810  016958  EE20  F2B8         	lfsr	2,_V+184	;volatile
 25811                           
 25812                           ;stkvar	_i @ sp[(-2)+0]
 25813  01695C  0EFE               	movlw	-2
 25814  01695E  50E3               	movf	plusw1,w,c
 25815  016960  0D05               	mullw	5
 25816  016962  50F3               	movf	243,w,c
 25817  016964  0F61               	addlw	low (_S+1)
 25818  016966  6EE9               	movwf	fsr0l,c
 25819  016968  6AEA               	clrf	fsr0h,c
 25820  01696A  006F FF7B FFEE     	movff	postinc2,postinc0
 25821  016970  006F FF7B FFEE     	movff	postinc2,postinc0
 25822  016976  006F FF7B FFEE     	movff	postinc2,postinc0
 25823  01697C  006F FF7B FFEE     	movff	postinc2,postinc0
 25824                           
 25825                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25826                           ;stkvar	_i @ sp[(-2)+0]
 25827  016982  0EFE               	movlw	-2
 25828  016984  006F FF8C  F03D    	movff	plusw1,btemp+11
 25829  01698A  0E01               	movlw	1
 25830  01698C  6E3C               	movwf	(btemp+10)^0,c
 25831  01698E  2A3D               	incf	(btemp+11)^0,f,c
 25832  016990  D002               	goto	u840_24
 25833  016992                     u840_25:
 25834  016992  90D8               	bcf	status,0,c
 25835  016994  363C               	rlcf	(btemp+10)^0,f,c
 25836  016996                     u840_24:
 25837  016996  2E3D               	decfsz	(btemp+11)^0,f,c
 25838  016998  D7FC               	goto	u840_25
 25839  01699A  503C               	movf	(btemp+10)^0,w,c
 25840  01699C  0100               	movlb	0	; () banked
 25841  01699E  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25842  0169A0                     l8940:
 25843                           
 25844                           ;dio.c: 107:  } while (++i < 4);
 25845                           ;stkvar	_i @ sp[(-2)+0]
 25846  0169A0  0EFE               	movlw	-2
 25847  0169A2  2AE3               	incf	plusw1,f,c
 25848  0169A4  0EFE               	movlw	-2
 25849  0169A6  006F FF8C  F032    	movff	plusw1,btemp
 25850  0169AC  0E03               	movlw	3
 25851  0169AE  6432               	cpfsgt	btemp^0,c
 25852  0169B0  D792               	goto	l8924
 25853                           
 25854                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25855  0169B2  92BE               	bcf	190,1,c	;volatile
 25856  0169B4  A4BE               	btfss	190,2,c	;volatile
 25857  0169B6  D002               	goto	u842_20
 25858  0169B8  0E01               	movlw	1
 25859  0169BA  D001               	goto	u842_26
 25860  0169BC                     u842_20:
 25861  0169BC  0E00               	movlw	0
 25862  0169BE                     u842_26:
 25863  0169BE  0AFF               	xorlw	255
 25864  0169C0  6E3D               	movwf	(btemp+11)^0,c
 25865  0169C2  463D               	rlncf	(btemp+11)^0,f,c
 25866  0169C4  463D               	rlncf	(btemp+11)^0,f,c
 25867  0169C6  50BE               	movf	190,w,c	;volatile
 25868  0169C8  183D               	xorwf	(btemp+11)^0,w,c
 25869  0169CA  0BFB               	andlw	-5
 25870  0169CC  183D               	xorwf	(btemp+11)^0,w,c
 25871  0169CE  6EBE               	movwf	190,c	;volatile
 25872  0169D0  8EBD               	bsf	189,7,c	;volatile
 25873                           
 25874                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25875  0169D2  52E5               	movf	postdec1,f,c
 25876  0169D4  52E5               	movf	postdec1,f,c
 25877  0169D6  0012               	return		;funcret
 25878  0169D8                     __end_of_switch_handler:
 25879                           	opt callstack 0
 25880                           
 25881 ;; *************** function _TMR5_ISR *****************
 25882 ;; Defined at:
 25883 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25884 ;; Parameters:    Size  Location     Type
 25885 ;;		None
 25886 ;; Auto vars:     Size  Location     Type
 25887 ;;		None
 25888 ;; Return value:  Size  Location     Type
 25889 ;;                  1    wreg      void 
 25890 ;; Registers used:
 25891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25892 ;; Tracked objects:
 25893 ;;		On entry : 0/0
 25894 ;;		On exit  : 0/0
 25895 ;;		Unchanged: 0/0
 25896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25899 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25900 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25901 ;;Total ram usage:        4 bytes
 25902 ;; Hardware stack levels used:    1
 25903 ;; Hardware stack levels required when called:    5
 25904 ;; This function calls:
 25905 ;;		_TMR5_CallBack
 25906 ;;		_TMR5_WriteTimer
 25907 ;; This function is called by:
 25908 ;;		Interrupt level 1
 25909 ;; This function uses a non-reentrant model
 25910 ;;
 25911                           
 25912                           	psect	text122
 25913  0180DC                     __ptext122:
 25914                           	opt callstack 0
 25915  0180DC                     _TMR5_ISR:
 25916                           	opt callstack 12
 25917                           
 25918                           ;incstack = 0
 25919  0180DC  006F FF60  F1ED    	movff	status,??_TMR5_ISR+2
 25920  0180E2  0060  F0F4  F1EE   	movff	btemp+11,??_TMR5_ISR+3
 25921  0180E8  EE16  F000         	lfsr	1,___intlo_sp
 25922                           
 25923                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25924  0180EC  0139               	movlb	57	; () banked
 25925  0180EE  9DA8               	bcf	168,6,b	;volatile
 25926                           
 25927                           ; BSR set to: 57
 25928                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25929  0180F0  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25930  0180F6  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25931  0180FC  EC5E  F0C2         	call	_TMR5_WriteTimer	;wreg free
 25932                           
 25933                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25934  018100  0102               	movlb	2	; () banked
 25935  018102  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25936  018104  0101               	movlb	1	; () banked
 25937  018106  6FEB               	movwf	??_TMR5_ISR& (0+255),b
 25938  018108  6BEC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25939  01810A  0E05               	movlw	5
 25940  01810C  27EB               	addwf	??_TMR5_ISR& (0+255),f,b
 25941  01810E  0E00               	movlw	0
 25942  018110  23EC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25943  018112  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25944  018114  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25945  018116  51EB               	movf	??_TMR5_ISR& (0+255),w,b
 25946  018118  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25947  01811A  51EC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25948  01811C  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25949  01811E  A0D8               	btfss	status,0,c
 25950  018120  D004               	goto	i1l1045
 25951                           
 25952                           ; BSR set to: 1
 25953                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25954  018122  ECAF  F0C5         	call	_TMR5_CallBack	;wreg free
 25955                           
 25956                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25957  018126  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25958  018128  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25959  01812A                     i1l1045:
 25960  01812A  0060  F7B8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25961  018130  0060  F7B7  FFD8   	movff	??_TMR5_ISR+2,status
 25962  018136  0011               	retfie		f
 25963  018138                     __end_of_TMR5_ISR:
 25964                           	opt callstack 0
 25965                           
 25966 ;; *************** function _TMR5_WriteTimer *****************
 25967 ;; Defined at:
 25968 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25969 ;; Parameters:    Size  Location     Type
 25970 ;;  timerVal        2  [STACK] unsigned short 
 25971 ;; Auto vars:     Size  Location     Type
 25972 ;;		None
 25973 ;; Return value:  Size  Location     Type
 25974 ;;                  1  [STACK] void 
 25975 ;; Registers used:
 25976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25977 ;; Tracked objects:
 25978 ;;		On entry : 3F/39
 25979 ;;		On exit  : 0/0
 25980 ;;		Unchanged: 0/0
 25981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25986 ;;Total ram usage:        0 bytes
 25987 ;; Hardware stack levels used:    1
 25988 ;; Hardware stack levels required when called:    3
 25989 ;; This function calls:
 25990 ;;		Nothing
 25991 ;; This function is called by:
 25992 ;;		_TMR5_ISR
 25993 ;; This function uses a reentrant model
 25994 ;;
 25995                           
 25996                           	psect	text123
 25997  0184BC                     __ptext123:
 25998                           	opt callstack 0
 25999  0184BC                     _TMR5_WriteTimer:
 26000                           	opt callstack 13
 26001                           
 26002                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26003                           
 26004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26005                           ;incstack = 0
 26006  0184BC  A49A               	btfss	154,2,c	;volatile
 26007  0184BE  D00F               	goto	l9060
 26008                           
 26009                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26010  0184C0  909A               	bcf	154,0,c	;volatile
 26011                           
 26012                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26013                           ;stkvar	_timerVal @ sp[(0)+-2]
 26014  0184C2  0EFF               	movlw	255
 26015  0184C4  24E1               	addwf	fsr1l,w,c
 26016  0184C6  6ED9               	movwf	fsr2l,c
 26017  0184C8  0EFF               	movlw	255
 26018  0184CA  20E2               	addwfc	fsr1h,w,c
 26019  0184CC  6EDA               	movwf	fsr2h,c
 26020  0184CE  50DF               	movf	indf2,w,c
 26021  0184D0  6E99               	movwf	153,c	;volatile
 26022                           
 26023                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26024                           ;stkvar	_timerVal @ sp[(0)+-2]
 26025  0184D2  0EFE               	movlw	-2
 26026  0184D4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26027                           
 26028                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26029  0184DA  809A               	bsf	154,0,c	;volatile
 26030                           
 26031                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26032  0184DC  D00C               	goto	l1028
 26033  0184DE                     l9060:
 26034                           
 26035                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26036                           ;stkvar	_timerVal @ sp[(0)+-2]
 26037  0184DE  0EFF               	movlw	255
 26038  0184E0  24E1               	addwf	fsr1l,w,c
 26039  0184E2  6ED9               	movwf	fsr2l,c
 26040  0184E4  0EFF               	movlw	255
 26041  0184E6  20E2               	addwfc	fsr1h,w,c
 26042  0184E8  6EDA               	movwf	fsr2h,c
 26043  0184EA  50DF               	movf	indf2,w,c
 26044  0184EC  6E99               	movwf	153,c	;volatile
 26045                           
 26046                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26047                           ;stkvar	_timerVal @ sp[(0)+-2]
 26048  0184EE  0EFE               	movlw	-2
 26049  0184F0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26050  0184F6                     l1028:
 26051                           
 26052                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26053  0184F6  52E5               	movf	postdec1,f,c
 26054  0184F8  52E5               	movf	postdec1,f,c
 26055  0184FA  0012               	return		;funcret
 26056  0184FC                     __end_of_TMR5_WriteTimer:
 26057                           	opt callstack 0
 26058                           
 26059 ;; *************** function _TMR5_CallBack *****************
 26060 ;; Defined at:
 26061 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26062 ;; Parameters:    Size  Location     Type
 26063 ;;		None
 26064 ;; Auto vars:     Size  Location     Type
 26065 ;;		None
 26066 ;; Return value:  Size  Location     Type
 26067 ;;                  1  [STACK] void 
 26068 ;; Registers used:
 26069 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26070 ;; Tracked objects:
 26071 ;;		On entry : 3F/1
 26072 ;;		On exit  : 0/0
 26073 ;;		Unchanged: 0/0
 26074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26079 ;;Total ram usage:        0 bytes
 26080 ;; Hardware stack levels used:    1
 26081 ;; Hardware stack levels required when called:    4
 26082 ;; This function calls:
 26083 ;;		Absolute function
 26084 ;;		_TMR5_DefaultInterruptHandler
 26085 ;; This function is called by:
 26086 ;;		_TMR5_ISR
 26087 ;; This function uses a reentrant model
 26088 ;;
 26089                           
 26090                           	psect	text124
 26091  018B5E                     __ptext124:
 26092                           	opt callstack 0
 26093  018B5E                     _TMR5_CallBack:
 26094                           	opt callstack 12
 26095                           
 26096                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26097                           
 26098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26099                           ;incstack = 0
 26100  018B5E  0100               	movlb	0	; () banked
 26101  018B60  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26102  018B62  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26103  018B64  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26104  018B66  B4D8               	btfsc	status,2,c
 26105  018B68  0012               	return	
 26106                           
 26107                           ; BSR set to: 0
 26108                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26109  018B6A  D801               	call	u861_28
 26110  018B6C  0012               	return	
 26111  018B6E                     u861_28:
 26112  018B6E  0005               	push	
 26113  018B70  6EFA               	movwf	pclath,c
 26114  018B72  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26115  018B74  6EFD               	movwf	tosl,c
 26116  018B76  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26117  018B78  6EFE               	movwf	tosh,c
 26118  018B7A  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26119  018B7C  6EFF               	movwf	tosu,c
 26120  018B7E  50FA               	movf	pclath,w,c
 26121  018B80  0012               	return		;indir
 26122  018B82                     __end_of_TMR5_CallBack:
 26123                           	opt callstack 0
 26124                           
 26125 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26126 ;; Defined at:
 26127 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26128 ;; Parameters:    Size  Location     Type
 26129 ;;		None
 26130 ;; Auto vars:     Size  Location     Type
 26131 ;;		None
 26132 ;; Return value:  Size  Location     Type
 26133 ;;                  1  [STACK] void 
 26134 ;; Registers used:
 26135 ;;		wreg, status,2, status,0, btemp+11
 26136 ;; Tracked objects:
 26137 ;;		On entry : 3F/0
 26138 ;;		On exit  : 3F/2
 26139 ;;		Unchanged: 0/0
 26140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26145 ;;Total ram usage:        0 bytes
 26146 ;; Hardware stack levels used:    1
 26147 ;; Hardware stack levels required when called:    3
 26148 ;; This function calls:
 26149 ;;		Nothing
 26150 ;; This function is called by:
 26151 ;;		_TMR5_Initialize
 26152 ;;		_TMR5_CallBack
 26153 ;; This function uses a reentrant model
 26154 ;;
 26155                           
 26156                           	psect	text125
 26157  018A4E                     __ptext125:
 26158                           	opt callstack 0
 26159  018A4E                     _TMR5_DefaultInterruptHandler:
 26160                           	opt callstack 12
 26161                           
 26162                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26163                           
 26164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26165                           ;incstack = 0
 26166  018A4E  A0BE               	btfss	190,0,c	;volatile
 26167  018A50  D002               	goto	u811_20
 26168  018A52  0E01               	movlw	1
 26169  018A54  D001               	goto	u811_26
 26170  018A56                     u811_20:
 26171  018A56  0E00               	movlw	0
 26172  018A58                     u811_26:
 26173  018A58  0AFF               	xorlw	255
 26174  018A5A  6E3D               	movwf	(btemp+11)^0,c
 26175  018A5C  50BE               	movf	190,w,c	;volatile
 26176  018A5E  183D               	xorwf	(btemp+11)^0,w,c
 26177  018A60  0BFE               	andlw	-2
 26178  018A62  183D               	xorwf	(btemp+11)^0,w,c
 26179  018A64  6EBE               	movwf	190,c	;volatile
 26180                           
 26181                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26182  018A66  0E01               	movlw	1
 26183  018A68  0102               	movlb	2	; () banked
 26184  018A6A  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26185  018A6C  0E00               	movlw	0
 26186  018A6E  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26187  018A70  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26188  018A72  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26189                           
 26190                           ; BSR set to: 2
 26191                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26192  018A74  0012               	return		;funcret
 26193  018A76                     __end_of_TMR5_DefaultInterruptHandler:
 26194                           	opt callstack 0
 26195                           
 26196 ;; *************** function _INT0_ISR *****************
 26197 ;; Defined at:
 26198 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 26199 ;; Parameters:    Size  Location     Type
 26200 ;;		None
 26201 ;; Auto vars:     Size  Location     Type
 26202 ;;		None
 26203 ;; Return value:  Size  Location     Type
 26204 ;;                  1    wreg      void 
 26205 ;; Registers used:
 26206 ;;		wreg, status,2, status,0, pclath, tosl
 26207 ;; Tracked objects:
 26208 ;;		On entry : 0/0
 26209 ;;		On exit  : 0/0
 26210 ;;		Unchanged: 0/0
 26211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26216 ;;Total ram usage:        0 bytes
 26217 ;; Hardware stack levels used:    1
 26218 ;; Hardware stack levels required when called:    2
 26219 ;; This function calls:
 26220 ;;		_INT0_CallBack
 26221 ;; This function is called by:
 26222 ;;		Interrupt level 2
 26223 ;; This function uses a non-reentrant model
 26224 ;;
 26225                           
 26226                           	psect	text126
 26227  018DEC                     __ptext126:
 26228                           	opt callstack 0
 26229  018DEC                     _INT0_ISR:
 26230                           	opt callstack 12
 26231                           
 26232                           ; BSR set to: 2
 26233                           ;incstack = 0
 26234  018DEC  EE14  F000         	lfsr	1,___inthi_sp
 26235                           
 26236                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 26237  018DF0  0139               	movlb	57	; () banked
 26238  018DF2  91A1               	bcf	161,0,b	;volatile
 26239                           
 26240                           ; BSR set to: 57
 26241                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 26242  018DF4  ECE4  F0C5         	call	_INT0_CallBack	;wreg free
 26243  018DF8  0011               	retfie		f
 26244  018DFA                     __end_of_INT0_ISR:
 26245                           	opt callstack 0
 26246                           
 26247 ;; *************** function _INT0_CallBack *****************
 26248 ;; Defined at:
 26249 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 26250 ;; Parameters:    Size  Location     Type
 26251 ;;		None
 26252 ;; Auto vars:     Size  Location     Type
 26253 ;;		None
 26254 ;; Return value:  Size  Location     Type
 26255 ;;                  1  [STACK] void 
 26256 ;; Registers used:
 26257 ;;		wreg, status,2, status,0, pclath, tosl
 26258 ;; Tracked objects:
 26259 ;;		On entry : 3F/39
 26260 ;;		On exit  : 0/0
 26261 ;;		Unchanged: 0/0
 26262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26267 ;;Total ram usage:        0 bytes
 26268 ;; Hardware stack levels used:    1
 26269 ;; Hardware stack levels required when called:    1
 26270 ;; This function calls:
 26271 ;;		Absolute function
 26272 ;;		_INT0_DefaultInterruptHandler
 26273 ;; This function is called by:
 26274 ;;		_INT0_ISR
 26275 ;; This function uses a reentrant model
 26276 ;;
 26277                           
 26278                           	psect	text127
 26279  018BC8                     __ptext127:
 26280                           	opt callstack 0
 26281  018BC8                     _INT0_CallBack:
 26282                           	opt callstack 12
 26283                           
 26284                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 26285                           
 26286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26287                           ;incstack = 0
 26288  018BC8  5016               	movf	_INT0_InterruptHandler^0,w,c
 26289  018BCA  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 26290  018BCC  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 26291  018BCE  B4D8               	btfsc	status,2,c
 26292  018BD0  0012               	return	
 26293                           
 26294                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 26295  018BD2  D801               	call	u398_48
 26296  018BD4  0012               	return	
 26297  018BD6                     u398_48:
 26298  018BD6  0005               	push	
 26299  018BD8  6EFA               	movwf	pclath,c
 26300  018BDA  5016               	movf	_INT0_InterruptHandler^0,w,c
 26301  018BDC  6EFD               	movwf	tosl,c
 26302  018BDE  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 26303  018BE0  6EFE               	movwf	tosh,c
 26304  018BE2  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 26305  018BE4  6EFF               	movwf	tosu,c
 26306  018BE6  50FA               	movf	pclath,w,c
 26307  018BE8  0012               	return		;indir
 26308  018BEA                     __end_of_INT0_CallBack:
 26309                           	opt callstack 0
 26310                           
 26311 ;; *************** function _INT0_DefaultInterruptHandler *****************
 26312 ;; Defined at:
 26313 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 26314 ;; Parameters:    Size  Location     Type
 26315 ;;		None
 26316 ;; Auto vars:     Size  Location     Type
 26317 ;;		None
 26318 ;; Return value:  Size  Location     Type
 26319 ;;                  1  [STACK] void 
 26320 ;; Registers used:
 26321 ;;		None
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/39
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26331 ;;Total ram usage:        0 bytes
 26332 ;; Hardware stack levels used:    1
 26333 ;; This function calls:
 26334 ;;		Nothing
 26335 ;; This function is called by:
 26336 ;;		_EXT_INT_Initialize
 26337 ;;		_INT0_CallBack
 26338 ;; This function uses a reentrant model
 26339 ;;
 26340                           
 26341                           	psect	text128
 26342  018E78                     __ptext128:
 26343                           	opt callstack 0
 26344  018E78                     _INT0_DefaultInterruptHandler:
 26345                           	opt callstack 12
 26346                           
 26347                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26348                           
 26349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26350                           ;incstack = 0
 26351  018E78  0012               	return		;funcret
 26352  018E7A                     __end_of_INT0_DefaultInterruptHandler:
 26353                           	opt callstack 0
 26354                           
 26355 ;; *************** function _Default_ISR *****************
 26356 ;; Defined at:
 26357 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;		None
 26360 ;; Auto vars:     Size  Location     Type
 26361 ;;		None
 26362 ;; Return value:  Size  Location     Type
 26363 ;;                  1    wreg      void 
 26364 ;; Registers used:
 26365 ;;		None
 26366 ;; Tracked objects:
 26367 ;;		On entry : 0/0
 26368 ;;		On exit  : 0/0
 26369 ;;		Unchanged: 0/0
 26370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26375 ;;Total ram usage:        0 bytes
 26376 ;; Hardware stack levels used:    1
 26377 ;; This function calls:
 26378 ;;		Nothing
 26379 ;; This function is called by:
 26380 ;;		Interrupt level 2
 26381 ;; This function uses a non-reentrant model
 26382 ;;
 26383                           
 26384                           	psect	text129
 26385  018E70                     __ptext129:
 26386                           	opt callstack 0
 26387  018E70                     _Default_ISR:
 26388                           	opt callstack 14
 26389                           
 26390                           ;incstack = 0
 26391  018E70  EE14  F000         	lfsr	1,___inthi_sp
 26392  018E74  0011               	retfie		f
 26393  018E76                     __end_of_Default_ISR:
 26394                           	opt callstack 0
 26395                           
 26396 ;; *************** function _ADCC_ISR *****************
 26397 ;; Defined at:
 26398 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26399 ;; Parameters:    Size  Location     Type
 26400 ;;		None
 26401 ;; Auto vars:     Size  Location     Type
 26402 ;;		None
 26403 ;; Return value:  Size  Location     Type
 26404 ;;                  1    wreg      void 
 26405 ;; Registers used:
 26406 ;;		wreg, status,2, status,0, pclath, tosl
 26407 ;; Tracked objects:
 26408 ;;		On entry : 0/0
 26409 ;;		On exit  : 0/0
 26410 ;;		Unchanged: 0/0
 26411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26416 ;;Total ram usage:        0 bytes
 26417 ;; Hardware stack levels used:    1
 26418 ;; Hardware stack levels required when called:    1
 26419 ;; This function calls:
 26420 ;;		Absolute function
 26421 ;;		_ADCC_DefaultInterruptHandler
 26422 ;;		_adc_int_handler
 26423 ;; This function is called by:
 26424 ;;		Interrupt level 2
 26425 ;; This function uses a non-reentrant model
 26426 ;;
 26427                           
 26428                           	psect	text130
 26429  0187F4                     __ptext130:
 26430                           	opt callstack 0
 26431  0187F4                     _ADCC_ISR:
 26432                           	opt callstack 13
 26433                           
 26434                           ;incstack = 0
 26435  0187F4  EE14  F000         	lfsr	1,___inthi_sp
 26436                           
 26437                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26438  0187F8  0139               	movlb	57	; () banked
 26439  0187FA  95A1               	bcf	161,2,b	;volatile
 26440                           
 26441                           ; BSR set to: 57
 26442                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26443  0187FC  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26444  0187FE  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26445  018800  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26446  018802  B4D8               	btfsc	status,2,c
 26447  018804  0011               	retfie		f
 26448                           
 26449                           ; BSR set to: 57
 26450                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26451  018806  D801               	call	i2u430_48
 26452  018808  0011               	retfie		f
 26453  01880A                     i2u430_48:
 26454  01880A  0005               	push	
 26455  01880C  6EFA               	movwf	pclath,c
 26456  01880E  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26457  018810  6EFD               	movwf	tosl,c
 26458  018812  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26459  018814  6EFE               	movwf	tosh,c
 26460  018816  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26461  018818  6EFF               	movwf	tosu,c
 26462  01881A  50FA               	movf	pclath,w,c
 26463  01881C  0012               	return		;indir
 26464  01881E                     __end_of_ADCC_ISR:
 26465                           	opt callstack 0
 26466                           
 26467 ;; *************** function _adc_int_t_handler *****************
 26468 ;; Defined at:
 26469 ;;		line 128 in file "daq.c"
 26470 ;; Parameters:    Size  Location     Type
 26471 ;;		None
 26472 ;; Auto vars:     Size  Location     Type
 26473 ;;		None
 26474 ;; Return value:  Size  Location     Type
 26475 ;;                  1  [STACK] void 
 26476 ;; Registers used:
 26477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26478 ;; Tracked objects:
 26479 ;;		On entry : 3F/39
 26480 ;;		On exit  : 1/0
 26481 ;;		Unchanged: 0/0
 26482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26487 ;;Total ram usage:        0 bytes
 26488 ;; Hardware stack levels used:    1
 26489 ;; Hardware stack levels required when called:    1
 26490 ;; This function calls:
 26491 ;;		_ADCC_DischargeSampleCapacitor
 26492 ;;		_ADCC_StartConversion
 26493 ;; This function is called by:
 26494 ;;		_start_adc_scan
 26495 ;;		_ADCC_ThresholdISR
 26496 ;; This function uses a reentrant model
 26497 ;;
 26498                           
 26499                           	psect	text131
 26500  017CD0                     __ptext131:
 26501                           	opt callstack 0
 26502  017CD0                     _adc_int_t_handler:
 26503                           	opt callstack 12
 26504                           
 26505                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26506                           
 26507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26508                           ;incstack = 0
 26509  017CD0  013E               	movlb	62	; () banked
 26510  017CD2  51E6               	movf	230,w,b	;volatile
 26511  017CD4  006F FB9C  F032    	movff	16103,btemp	;volatile
 26512  017CDA  6A33               	clrf	(btemp+1)^0,c
 26513  017CDC  0060  F0C8  F033   	movff	btemp,btemp+1
 26514  017CE2  6A32               	clrf	btemp^0,c
 26515  017CE4  2632               	addwf	btemp^0,f,c
 26516  017CE6  0E00               	movlw	0
 26517  017CE8  2233               	addwfc	(btemp+1)^0,f,c
 26518  017CEA  0100               	movlb	0	; () banked
 26519  017CEC  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26520  017CEE  0D02               	mullw	2
 26521  017CF0  50F3               	movf	243,w,c
 26522  017CF2  0FC7               	addlw	low _R
 26523  017CF4  6ED9               	movwf	fsr2l,c
 26524  017CF6  6ADA               	clrf	fsr2h,c
 26525  017CF8  0060  F0CB  FFDE   	movff	btemp,postinc2
 26526  017CFE  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26527  017D04                     l9270:
 26528                           
 26529                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26530  017D04  0100               	movlb	0	; () banked
 26531  017D06  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26532  017D08  0E0D               	movlw	13
 26533  017D0A  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26534  017D0C  D003               	goto	l9276
 26535                           
 26536                           ; BSR set to: 0
 26537                           ;daq.c: 136:    R.done = 1;
 26538  017D0E  0E01               	movlw	1
 26539  017D10  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26540  017D12  0012               	return	
 26541  017D14                     l9276:
 26542                           
 26543                           ; BSR set to: 0
 26544                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26545  017D14  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26546  017D1A  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26547  017D1E  006F FF78  F03A    	movff	postinc2,btemp+8
 26548  017D24  006F FF74  F03B    	movff	postdec2,btemp+9
 26549  017D2A  2A3D               	incf	(btemp+11)^0,f,c
 26550  017D2C  D003               	goto	u877_44
 26551  017D2E                     u877_45:
 26552  017D2E  90D8               	bcf	status,0,c
 26553  017D30  323B               	rrcf	(btemp+9)^0,f,c
 26554  017D32  323A               	rrcf	(btemp+8)^0,f,c
 26555  017D34                     u877_44:
 26556  017D34  2E3D               	decfsz	(btemp+11)^0,f,c
 26557  017D36  D7FB               	goto	u877_45
 26558  017D38  A03A               	btfss	(btemp+8)^0,0,c
 26559  017D3A  D7E4               	goto	l9270
 26560                           
 26561                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26562  017D3C  EC1B  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26563                           
 26564                           ; BSR set to: 62
 26565                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26566  017D40  0100               	movlb	0	; () banked
 26567  017D42  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26568  017D44  0B0F               	andlw	15
 26569  017D46  6EE6               	movwf	postinc1,c
 26570  017D48  ECD6  F0C6         	call	_ADCC_StartConversion	;wreg free
 26571                           
 26572                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26573  017D4C  0012               	return		;funcret
 26574  017D4E                     __end_of_adc_int_t_handler:
 26575                           	opt callstack 0
 26576                           
 26577 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26578 ;; Defined at:
 26579 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26580 ;; Parameters:    Size  Location     Type
 26581 ;;		None
 26582 ;; Auto vars:     Size  Location     Type
 26583 ;;		None
 26584 ;; Return value:  Size  Location     Type
 26585 ;;                  1  [STACK] void 
 26586 ;; Registers used:
 26587 ;;		None
 26588 ;; Tracked objects:
 26589 ;;		On entry : 3F/39
 26590 ;;		On exit  : 0/0
 26591 ;;		Unchanged: 0/0
 26592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26597 ;;Total ram usage:        0 bytes
 26598 ;; Hardware stack levels used:    1
 26599 ;; This function calls:
 26600 ;;		Nothing
 26601 ;; This function is called by:
 26602 ;;		_ADCC_Initialize
 26603 ;;		_ADCC_ISR
 26604 ;;		_ADCC_ThresholdISR
 26605 ;; This function uses a reentrant model
 26606 ;;
 26607                           
 26608                           	psect	text132
 26609  018E7A                     __ptext132:
 26610                           	opt callstack 0
 26611  018E7A                     _ADCC_DefaultInterruptHandler:
 26612                           	opt callstack 13
 26613                           
 26614                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26615                           
 26616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26617                           ;incstack = 0
 26618  018E7A  0012               	return		;funcret
 26619  018E7C                     __end_of_ADCC_DefaultInterruptHandler:
 26620                           	opt callstack 0
 26621                           
 26622 ;; *************** function _adc_int_handler *****************
 26623 ;; Defined at:
 26624 ;;		line 118 in file "daq.c"
 26625 ;; Parameters:    Size  Location     Type
 26626 ;;		None
 26627 ;; Auto vars:     Size  Location     Type
 26628 ;;		None
 26629 ;; Return value:  Size  Location     Type
 26630 ;;                  1  [STACK] void 
 26631 ;; Registers used:
 26632 ;;		None
 26633 ;; Tracked objects:
 26634 ;;		On entry : 3F/39
 26635 ;;		On exit  : 0/0
 26636 ;;		Unchanged: 0/0
 26637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26642 ;;Total ram usage:        0 bytes
 26643 ;; Hardware stack levels used:    1
 26644 ;; This function calls:
 26645 ;;		Nothing
 26646 ;; This function is called by:
 26647 ;;		_start_adc_scan
 26648 ;;		_ADCC_ISR
 26649 ;; This function uses a reentrant model
 26650 ;;
 26651                           
 26652                           	psect	text133
 26653  018E7C                     __ptext133:
 26654                           	opt callstack 0
 26655  018E7C                     _adc_int_handler:
 26656                           	opt callstack 13
 26657                           
 26658                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26659                           
 26660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26661                           ;incstack = 0
 26662  018E7C  0012               	return		;funcret
 26663  018E7E                     __end_of_adc_int_handler:
 26664                           	opt callstack 0
 26665                           
 26666 ;; *************** function _ADCC_ThresholdISR *****************
 26667 ;; Defined at:
 26668 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26669 ;; Parameters:    Size  Location     Type
 26670 ;;		None
 26671 ;; Auto vars:     Size  Location     Type
 26672 ;;		None
 26673 ;; Return value:  Size  Location     Type
 26674 ;;                  1    wreg      void 
 26675 ;; Registers used:
 26676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26677 ;; Tracked objects:
 26678 ;;		On entry : 0/0
 26679 ;;		On exit  : 0/0
 26680 ;;		Unchanged: 0/0
 26681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26684 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26686 ;;Total ram usage:        5 bytes
 26687 ;; Hardware stack levels used:    1
 26688 ;; Hardware stack levels required when called:    2
 26689 ;; This function calls:
 26690 ;;		Absolute function
 26691 ;;		_ADCC_DefaultInterruptHandler
 26692 ;;		_adc_int_t_handler
 26693 ;; This function is called by:
 26694 ;;		Interrupt level 2
 26695 ;; This function uses a non-reentrant model
 26696 ;;
 26697                           
 26698                           	psect	text134
 26699  017E24                     __ptext134:
 26700                           	opt callstack 0
 26701  017E24                     _ADCC_ThresholdISR:
 26702                           	opt callstack 12
 26703                           
 26704                           ;incstack = 0
 26705  017E24  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26706  017E2A  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26707  017E30  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26708  017E36  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26709  017E3C  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26710  017E42  EE14  F000         	lfsr	1,___inthi_sp
 26711                           
 26712                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26713  017E46  0139               	movlb	57	; () banked
 26714  017E48  97A1               	bcf	161,3,b	;volatile
 26715                           
 26716                           ; BSR set to: 57
 26717                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26718  017E4A  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26719  017E4C  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26720  017E4E  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26721  017E50  B4D8               	btfsc	status,2,c
 26722  017E52  D00C               	goto	i2u880_49
 26723                           
 26724                           ; BSR set to: 57
 26725                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26726  017E54  D801               	call	i2u880_48
 26727  017E56  D00A               	goto	i2u880_49
 26728  017E58                     i2u880_48:
 26729  017E58  0005               	push	
 26730  017E5A  6EFA               	movwf	pclath,c
 26731  017E5C  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26732  017E5E  6EFD               	movwf	tosl,c
 26733  017E60  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26734  017E62  6EFE               	movwf	tosh,c
 26735  017E64  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26736  017E66  6EFF               	movwf	tosu,c
 26737  017E68  50FA               	movf	pclath,w,c
 26738  017E6A  0012               	return		;indir
 26739  017E6C                     i2u880_49:
 26740  017E6C  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26741  017E72  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26742  017E78  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26743  017E7E  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26744  017E84  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26745  017E8A  0011               	retfie		f
 26746  017E8C                     __end_of_ADCC_ThresholdISR:
 26747                           	opt callstack 0
 26748                           
 26749 ;; *************** function _UART1_tx_vect_isr *****************
 26750 ;; Defined at:
 26751 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26752 ;; Parameters:    Size  Location     Type
 26753 ;;		None
 26754 ;; Auto vars:     Size  Location     Type
 26755 ;;		None
 26756 ;; Return value:  Size  Location     Type
 26757 ;;                  1    wreg      void 
 26758 ;; Registers used:
 26759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26760 ;; Tracked objects:
 26761 ;;		On entry : 0/0
 26762 ;;		On exit  : 0/0
 26763 ;;		Unchanged: 0/0
 26764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26769 ;;Total ram usage:        0 bytes
 26770 ;; Hardware stack levels used:    1
 26771 ;; Hardware stack levels required when called:    1
 26772 ;; This function calls:
 26773 ;;		Absolute function
 26774 ;;		_UART1_Transmit_ISR
 26775 ;; This function is called by:
 26776 ;;		Interrupt level 2
 26777 ;; This function uses a non-reentrant model
 26778 ;;
 26779                           
 26780                           	psect	text135
 26781  018A78                     __ptext135:
 26782                           	opt callstack 0
 26783  018A78                     _UART1_tx_vect_isr:
 26784                           	opt callstack 13
 26785                           
 26786                           ;incstack = 0
 26787  018A78  EE14  F000         	lfsr	1,___inthi_sp
 26788                           
 26789                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26790  018A7C  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26791  018A7E  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26792  018A80  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26793  018A82  B4D8               	btfsc	status,2,c
 26794  018A84  0011               	retfie		f
 26795                           
 26796                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26797  018A86  D801               	call	i2u882_48
 26798  018A88  0011               	retfie		f
 26799  018A8A                     i2u882_48:
 26800  018A8A  0005               	push	
 26801  018A8C  6EFA               	movwf	pclath,c
 26802  018A8E  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26803  018A90  6EFD               	movwf	tosl,c
 26804  018A92  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26805  018A94  6EFE               	movwf	tosh,c
 26806  018A96  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26807  018A98  6EFF               	movwf	tosu,c
 26808  018A9A  50FA               	movf	pclath,w,c
 26809  018A9C  0012               	return		;indir
 26810  018A9E                     __end_of_UART1_tx_vect_isr:
 26811                           	opt callstack 0
 26812                           
 26813 ;; *************** function _UART1_Transmit_ISR *****************
 26814 ;; Defined at:
 26815 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;		None
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;		None
 26820 ;; Return value:  Size  Location     Type
 26821 ;;                  1  [STACK] void 
 26822 ;; Registers used:
 26823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26824 ;; Tracked objects:
 26825 ;;		On entry : 0/0
 26826 ;;		On exit  : 3B/39
 26827 ;;		Unchanged: 0/0
 26828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26833 ;;Total ram usage:        0 bytes
 26834 ;; Hardware stack levels used:    1
 26835 ;; This function calls:
 26836 ;;		Nothing
 26837 ;; This function is called by:
 26838 ;;		_UART1_Initialize
 26839 ;;		_UART1_tx_vect_isr
 26840 ;; This function uses a reentrant model
 26841 ;;
 26842                           
 26843                           	psect	text136
 26844  018770                     __ptext136:
 26845                           	opt callstack 0
 26846  018770                     _UART1_Transmit_ISR:
 26847                           	opt callstack 13
 26848                           
 26849                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26850                           
 26851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26852                           ;incstack = 0
 26853  018770  0E40               	movlw	64
 26854  018772  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26855  018774  D010               	goto	l581
 26856                           
 26857                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26858  018776  0EBC               	movlw	low _uart1TxBuffer
 26859  018778  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26860  01877A  6ED9               	movwf	fsr2l,c
 26861  01877C  6ADA               	clrf	fsr2h,c
 26862  01877E  0E02               	movlw	high _uart1TxBuffer
 26863  018780  22DA               	addwfc	fsr2h,f,c
 26864  018782  50DF               	movf	indf2,w,c
 26865  018784  013D               	movlb	61	; () banked
 26866  018786  6FEA               	movwf	234,b	;volatile
 26867                           
 26868                           ; BSR set to: 61
 26869  018788  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26870                           
 26871                           ; BSR set to: 61
 26872                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26873  01878A  0E3F               	movlw	63
 26874  01878C  6430               	cpfsgt	_uart1TxTail^0,c
 26875  01878E  D001               	goto	l9012
 26876                           
 26877                           ; BSR set to: 61
 26878                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26879  018790  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26880  018792                     l9012:
 26881                           
 26882                           ; BSR set to: 61
 26883                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26884  018792  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26885                           
 26886                           ;mcc_generated_files/uart1.c: 222:  } else {
 26887  018794  0012               	return	
 26888  018796                     l581:
 26889                           
 26890                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26891  018796  0139               	movlb	57	; () banked
 26892  018798  9993               	bcf	147,4,b	;volatile
 26893                           
 26894                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26895  01879A  0012               	return		;funcret
 26896  01879C                     __end_of_UART1_Transmit_ISR:
 26897                           	opt callstack 0
 26898                           
 26899 ;; *************** function _UART1_rx_vect_isr *****************
 26900 ;; Defined at:
 26901 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26902 ;; Parameters:    Size  Location     Type
 26903 ;;		None
 26904 ;; Auto vars:     Size  Location     Type
 26905 ;;		None
 26906 ;; Return value:  Size  Location     Type
 26907 ;;                  1    wreg      void 
 26908 ;; Registers used:
 26909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26910 ;; Tracked objects:
 26911 ;;		On entry : 0/0
 26912 ;;		On exit  : 0/0
 26913 ;;		Unchanged: 0/0
 26914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26919 ;;Total ram usage:        0 bytes
 26920 ;; Hardware stack levels used:    1
 26921 ;; Hardware stack levels required when called:    1
 26922 ;; This function calls:
 26923 ;;		Absolute function
 26924 ;;		_UART1_Receive_ISR
 26925 ;; This function is called by:
 26926 ;;		Interrupt level 2
 26927 ;; This function uses a non-reentrant model
 26928 ;;
 26929                           
 26930                           	psect	text137
 26931  018AA0                     __ptext137:
 26932                           	opt callstack 0
 26933  018AA0                     _UART1_rx_vect_isr:
 26934                           	opt callstack 13
 26935                           
 26936                           ;incstack = 0
 26937  018AA0  EE14  F000         	lfsr	1,___inthi_sp
 26938                           
 26939                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26940  018AA4  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26941  018AA6  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26942  018AA8  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26943  018AAA  B4D8               	btfsc	status,2,c
 26944  018AAC  0011               	retfie		f
 26945                           
 26946                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26947  018AAE  D801               	call	i2u884_48
 26948  018AB0  0011               	retfie		f
 26949  018AB2                     i2u884_48:
 26950  018AB2  0005               	push	
 26951  018AB4  6EFA               	movwf	pclath,c
 26952  018AB6  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26953  018AB8  6EFD               	movwf	tosl,c
 26954  018ABA  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26955  018ABC  6EFE               	movwf	tosh,c
 26956  018ABE  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26957  018AC0  6EFF               	movwf	tosu,c
 26958  018AC2  50FA               	movf	pclath,w,c
 26959  018AC4  0012               	return		;indir
 26960  018AC6                     __end_of_UART1_rx_vect_isr:
 26961                           	opt callstack 0
 26962                           
 26963 ;; *************** function _UART1_Receive_ISR *****************
 26964 ;; Defined at:
 26965 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26966 ;; Parameters:    Size  Location     Type
 26967 ;;		None
 26968 ;; Auto vars:     Size  Location     Type
 26969 ;;		None
 26970 ;; Return value:  Size  Location     Type
 26971 ;;                  1  [STACK] void 
 26972 ;; Registers used:
 26973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26974 ;; Tracked objects:
 26975 ;;		On entry : 0/0
 26976 ;;		On exit  : 0/0
 26977 ;;		Unchanged: 0/0
 26978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26983 ;;Total ram usage:        0 bytes
 26984 ;; Hardware stack levels used:    1
 26985 ;; This function calls:
 26986 ;;		Nothing
 26987 ;; This function is called by:
 26988 ;;		_UART1_Initialize
 26989 ;;		_UART1_rx_vect_isr
 26990 ;; This function uses a reentrant model
 26991 ;;
 26992                           
 26993                           	psect	text138
 26994  018C64                     __ptext138:
 26995                           	opt callstack 0
 26996  018C64                     _UART1_Receive_ISR:
 26997                           	opt callstack 13
 26998                           
 26999                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 27000                           
 27001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27002                           ;incstack = 0
 27003  018C64  0E00               	movlw	low _uart1RxBuffer
 27004  018C66  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 27005  018C68  6ED9               	movwf	fsr2l,c
 27006  018C6A  6ADA               	clrf	fsr2h,c
 27007  018C6C  0E06               	movlw	high _uart1RxBuffer
 27008  018C6E  22DA               	addwfc	fsr2h,f,c
 27009  018C70  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27010  018C76  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 27011                           
 27012                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 27013  018C78  282E               	incf	_uart1RxHead^0,w,c
 27014  018C7A  B4D8               	btfsc	status,2,c
 27015                           
 27016                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 27017  018C7C  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 27018                           
 27019                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 27020  018C7E  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 27021                           
 27022                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27023  018C80  0012               	return		;funcret
 27024  018C82                     __end_of_UART1_Receive_ISR:
 27025                           	opt callstack 0
 27026                           
 27027 ;; *************** function _UART2_tx_vect_isr *****************
 27028 ;; Defined at:
 27029 ;;		line 195 in file "mcc_generated_files/uart2.c"
 27030 ;; Parameters:    Size  Location     Type
 27031 ;;		None
 27032 ;; Auto vars:     Size  Location     Type
 27033 ;;		None
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1    wreg      void 
 27036 ;; Registers used:
 27037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27038 ;; Tracked objects:
 27039 ;;		On entry : 0/0
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27047 ;;Total ram usage:        0 bytes
 27048 ;; Hardware stack levels used:    1
 27049 ;; Hardware stack levels required when called:    1
 27050 ;; This function calls:
 27051 ;;		Absolute function
 27052 ;;		_UART2_Transmit_ISR
 27053 ;; This function is called by:
 27054 ;;		Interrupt level 2
 27055 ;; This function uses a non-reentrant model
 27056 ;;
 27057                           
 27058                           	psect	text139
 27059  018AC8                     __ptext139:
 27060                           	opt callstack 0
 27061  018AC8                     _UART2_tx_vect_isr:
 27062                           	opt callstack 13
 27063                           
 27064                           ;incstack = 0
 27065  018AC8  EE14  F000         	lfsr	1,___inthi_sp
 27066                           
 27067                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 27068  018ACC  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27069  018ACE  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 27070  018AD0  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 27071  018AD2  B4D8               	btfsc	status,2,c
 27072  018AD4  0011               	retfie		f
 27073                           
 27074                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 27075  018AD6  D801               	call	i2u886_48
 27076  018AD8  0011               	retfie		f
 27077  018ADA                     i2u886_48:
 27078  018ADA  0005               	push	
 27079  018ADC  6EFA               	movwf	pclath,c
 27080  018ADE  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27081  018AE0  6EFD               	movwf	tosl,c
 27082  018AE2  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 27083  018AE4  6EFE               	movwf	tosh,c
 27084  018AE6  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 27085  018AE8  6EFF               	movwf	tosu,c
 27086  018AEA  50FA               	movf	pclath,w,c
 27087  018AEC  0012               	return		;indir
 27088  018AEE                     __end_of_UART2_tx_vect_isr:
 27089                           	opt callstack 0
 27090                           
 27091 ;; *************** function _UART2_Transmit_ISR *****************
 27092 ;; Defined at:
 27093 ;;		line 213 in file "mcc_generated_files/uart2.c"
 27094 ;; Parameters:    Size  Location     Type
 27095 ;;		None
 27096 ;; Auto vars:     Size  Location     Type
 27097 ;;		None
 27098 ;; Return value:  Size  Location     Type
 27099 ;;                  1  [STACK] void 
 27100 ;; Registers used:
 27101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27102 ;; Tracked objects:
 27103 ;;		On entry : 0/0
 27104 ;;		On exit  : 3B/39
 27105 ;;		Unchanged: 0/0
 27106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27111 ;;Total ram usage:        0 bytes
 27112 ;; Hardware stack levels used:    1
 27113 ;; This function calls:
 27114 ;;		Nothing
 27115 ;; This function is called by:
 27116 ;;		_UART2_Initialize
 27117 ;;		_UART2_tx_vect_isr
 27118 ;; This function uses a reentrant model
 27119 ;;
 27120                           
 27121                           	psect	text140
 27122  01879C                     __ptext140:
 27123                           	opt callstack 0
 27124  01879C                     _UART2_Transmit_ISR:
 27125                           	opt callstack 13
 27126                           
 27127                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 27128                           
 27129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27130                           ;incstack = 0
 27131  01879C  0E40               	movlw	64
 27132  01879E  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 27133  0187A0  D010               	goto	l701
 27134                           
 27135                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 27136  0187A2  0E54               	movlw	low _uart2TxBuffer
 27137  0187A4  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 27138  0187A6  6ED9               	movwf	fsr2l,c
 27139  0187A8  6ADA               	clrf	fsr2h,c
 27140  0187AA  0E03               	movlw	high _uart2TxBuffer
 27141  0187AC  22DA               	addwfc	fsr2h,f,c
 27142  0187AE  50DF               	movf	indf2,w,c
 27143  0187B0  013D               	movlb	61	; () banked
 27144  0187B2  6FD2               	movwf	210,b	;volatile
 27145                           
 27146                           ; BSR set to: 61
 27147  0187B4  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 27148                           
 27149                           ; BSR set to: 61
 27150                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 27151  0187B6  0E3F               	movlw	63
 27152  0187B8  642A               	cpfsgt	_uart2TxTail^0,c
 27153  0187BA  D001               	goto	l9034
 27154                           
 27155                           ; BSR set to: 61
 27156                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 27157  0187BC  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 27158  0187BE                     l9034:
 27159                           
 27160                           ; BSR set to: 61
 27161                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 27162  0187BE  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 27163                           
 27164                           ;mcc_generated_files/uart2.c: 224:     }
 27165  0187C0  0012               	return	
 27166  0187C2                     l701:
 27167                           
 27168                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 27169  0187C2  0139               	movlb	57	; () banked
 27170  0187C4  9796               	bcf	150,3,b	;volatile
 27171                           
 27172                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27173  0187C6  0012               	return		;funcret
 27174  0187C8                     __end_of_UART2_Transmit_ISR:
 27175                           	opt callstack 0
 27176                           
 27177 ;; *************** function _UART2_rx_vect_isr *****************
 27178 ;; Defined at:
 27179 ;;		line 203 in file "mcc_generated_files/uart2.c"
 27180 ;; Parameters:    Size  Location     Type
 27181 ;;		None
 27182 ;; Auto vars:     Size  Location     Type
 27183 ;;		None
 27184 ;; Return value:  Size  Location     Type
 27185 ;;                  1    wreg      void 
 27186 ;; Registers used:
 27187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27188 ;; Tracked objects:
 27189 ;;		On entry : 0/0
 27190 ;;		On exit  : 0/0
 27191 ;;		Unchanged: 0/0
 27192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27197 ;;Total ram usage:        0 bytes
 27198 ;; Hardware stack levels used:    1
 27199 ;; Hardware stack levels required when called:    1
 27200 ;; This function calls:
 27201 ;;		Absolute function
 27202 ;;		_UART2_Receive_ISR
 27203 ;; This function is called by:
 27204 ;;		Interrupt level 2
 27205 ;; This function uses a non-reentrant model
 27206 ;;
 27207                           
 27208                           	psect	text141
 27209  018AF0                     __ptext141:
 27210                           	opt callstack 0
 27211  018AF0                     _UART2_rx_vect_isr:
 27212                           	opt callstack 13
 27213                           
 27214                           ;incstack = 0
 27215  018AF0  EE14  F000         	lfsr	1,___inthi_sp
 27216                           
 27217                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 27218  018AF4  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27219  018AF6  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 27220  018AF8  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 27221  018AFA  B4D8               	btfsc	status,2,c
 27222  018AFC  0011               	retfie		f
 27223                           
 27224                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 27225  018AFE  D801               	call	i2u888_48
 27226  018B00  0011               	retfie		f
 27227  018B02                     i2u888_48:
 27228  018B02  0005               	push	
 27229  018B04  6EFA               	movwf	pclath,c
 27230  018B06  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27231  018B08  6EFD               	movwf	tosl,c
 27232  018B0A  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 27233  018B0C  6EFE               	movwf	tosh,c
 27234  018B0E  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 27235  018B10  6EFF               	movwf	tosu,c
 27236  018B12  50FA               	movf	pclath,w,c
 27237  018B14  0012               	return		;indir
 27238  018B16                     __end_of_UART2_rx_vect_isr:
 27239                           	opt callstack 0
 27240                           
 27241 ;; *************** function _UART2_Receive_ISR *****************
 27242 ;; Defined at:
 27243 ;;		line 233 in file "mcc_generated_files/uart2.c"
 27244 ;; Parameters:    Size  Location     Type
 27245 ;;		None
 27246 ;; Auto vars:     Size  Location     Type
 27247 ;;		None
 27248 ;; Return value:  Size  Location     Type
 27249 ;;                  1  [STACK] void 
 27250 ;; Registers used:
 27251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27252 ;; Tracked objects:
 27253 ;;		On entry : 0/0
 27254 ;;		On exit  : 0/0
 27255 ;;		Unchanged: 0/0
 27256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;Total ram usage:        0 bytes
 27262 ;; Hardware stack levels used:    1
 27263 ;; This function calls:
 27264 ;;		Nothing
 27265 ;; This function is called by:
 27266 ;;		_UART2_Initialize
 27267 ;;		_UART2_rx_vect_isr
 27268 ;; This function uses a reentrant model
 27269 ;;
 27270                           
 27271                           	psect	text142
 27272  018C82                     __ptext142:
 27273                           	opt callstack 0
 27274  018C82                     _UART2_Receive_ISR:
 27275                           	opt callstack 13
 27276                           
 27277                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 27278                           
 27279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27280                           ;incstack = 0
 27281  018C82  0E00               	movlw	low _uart2RxBuffer
 27282  018C84  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 27283  018C86  6ED9               	movwf	fsr2l,c
 27284  018C88  6ADA               	clrf	fsr2h,c
 27285  018C8A  0E07               	movlw	high _uart2RxBuffer
 27286  018C8C  22DA               	addwfc	fsr2h,f,c
 27287  018C8E  006F F743 FFDF     	movff	15824,indf2	;volatile
 27288  018C94  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 27289                           
 27290                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 27291  018C96  2828               	incf	_uart2RxHead^0,w,c
 27292  018C98  B4D8               	btfsc	status,2,c
 27293                           
 27294                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 27295  018C9A  6A28               	clrf	_uart2RxHead^0,c	;volatile
 27296                           
 27297                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 27298  018C9C  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 27299                           
 27300                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27301  018C9E  0012               	return		;funcret
 27302  018CA0                     __end_of_UART2_Receive_ISR:
 27303                           	opt callstack 0
 27304                           
 27305 ;; *************** function _TMR6_ISR *****************
 27306 ;; Defined at:
 27307 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 27308 ;; Parameters:    Size  Location     Type
 27309 ;;		None
 27310 ;; Auto vars:     Size  Location     Type
 27311 ;;		None
 27312 ;; Return value:  Size  Location     Type
 27313 ;;                  1    wreg      void 
 27314 ;; Registers used:
 27315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27316 ;; Tracked objects:
 27317 ;;		On entry : 0/0
 27318 ;;		On exit  : 0/0
 27319 ;;		Unchanged: 0/0
 27320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27325 ;;Total ram usage:        1 bytes
 27326 ;; Hardware stack levels used:    1
 27327 ;; Hardware stack levels required when called:    2
 27328 ;; This function calls:
 27329 ;;		_TMR6_CallBack
 27330 ;; This function is called by:
 27331 ;;		Interrupt level 2
 27332 ;; This function uses a non-reentrant model
 27333 ;;
 27334                           
 27335                           	psect	text143
 27336  018CF4                     __ptext143:
 27337                           	opt callstack 0
 27338  018CF4                     _TMR6_ISR:
 27339                           	opt callstack 12
 27340                           
 27341                           ;incstack = 0
 27342  018CF4  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 27343  018CFA  EE14  F000         	lfsr	1,___inthi_sp
 27344                           
 27345                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 27346  018CFE  0139               	movlb	57	; () banked
 27347  018D00  91A9               	bcf	169,0,b	;volatile
 27348                           
 27349                           ; BSR set to: 57
 27350                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 27351  018D02  ECC1  F0C5         	call	_TMR6_CallBack	;wreg free
 27352  018D06  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 27353  018D0C  0011               	retfie		f
 27354  018D0E                     __end_of_TMR6_ISR:
 27355                           	opt callstack 0
 27356                           
 27357 ;; *************** function _TMR6_CallBack *****************
 27358 ;; Defined at:
 27359 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27360 ;; Parameters:    Size  Location     Type
 27361 ;;		None
 27362 ;; Auto vars:     Size  Location     Type
 27363 ;;		None
 27364 ;; Return value:  Size  Location     Type
 27365 ;;                  1  [STACK] void 
 27366 ;; Registers used:
 27367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27368 ;; Tracked objects:
 27369 ;;		On entry : 3F/39
 27370 ;;		On exit  : 0/0
 27371 ;;		Unchanged: 0/0
 27372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27377 ;;Total ram usage:        0 bytes
 27378 ;; Hardware stack levels used:    1
 27379 ;; Hardware stack levels required when called:    1
 27380 ;; This function calls:
 27381 ;;		Absolute function
 27382 ;;		_TMR6_DefaultInterruptHandler
 27383 ;; This function is called by:
 27384 ;;		_TMR6_ISR
 27385 ;; This function uses a reentrant model
 27386 ;;
 27387                           
 27388                           	psect	text144
 27389  018B82                     __ptext144:
 27390                           	opt callstack 0
 27391  018B82                     _TMR6_CallBack:
 27392                           	opt callstack 12
 27393                           
 27394                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27395                           
 27396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27397                           ;incstack = 0
 27398  018B82  0100               	movlb	0	; () banked
 27399  018B84  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27400  018B86  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27401  018B88  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27402  018B8A  B4D8               	btfsc	status,2,c
 27403  018B8C  0012               	return	
 27404                           
 27405                           ; BSR set to: 0
 27406                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27407  018B8E  D801               	call	u858_48
 27408  018B90  0012               	return	
 27409  018B92                     u858_48:
 27410  018B92  0005               	push	
 27411  018B94  6EFA               	movwf	pclath,c
 27412  018B96  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27413  018B98  6EFD               	movwf	tosl,c
 27414  018B9A  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27415  018B9C  6EFE               	movwf	tosh,c
 27416  018B9E  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27417  018BA0  6EFF               	movwf	tosu,c
 27418  018BA2  50FA               	movf	pclath,w,c
 27419  018BA4  0012               	return		;indir
 27420  018BA6                     __end_of_TMR6_CallBack:
 27421                           	opt callstack 0
 27422                           
 27423 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27424 ;; Defined at:
 27425 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27426 ;; Parameters:    Size  Location     Type
 27427 ;;		None
 27428 ;; Auto vars:     Size  Location     Type
 27429 ;;  i               1  [STACK] unsigned char 
 27430 ;; Return value:  Size  Location     Type
 27431 ;;                  1  [STACK] void 
 27432 ;; Registers used:
 27433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27434 ;; Tracked objects:
 27435 ;;		On entry : 3F/0
 27436 ;;		On exit  : 0/0
 27437 ;;		Unchanged: 0/0
 27438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27443 ;;Total ram usage:        0 bytes
 27444 ;; Hardware stack levels used:    1
 27445 ;; This function calls:
 27446 ;;		Nothing
 27447 ;; This function is called by:
 27448 ;;		_TMR6_Initialize
 27449 ;;		_TMR6_CallBack
 27450 ;; This function uses a reentrant model
 27451 ;;
 27452                           
 27453                           	psect	text145
 27454  0183F0                     __ptext145:
 27455                           	opt callstack 0
 27456  0183F0                     _TMR6_DefaultInterruptHandler:
 27457                           	opt callstack 0
 27458                           
 27459                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27460  0183F0  52E6               	movf	postinc1,f,c
 27461                           
 27462                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27463                           ;stkvar	_i @ sp[(-1)+0]
 27464                           
 27465                           ;incstack = 0
 27466  0183F2  0EFF               	movlw	-1
 27467  0183F4  6AE3               	clrf	plusw1,c
 27468  0183F6                     l8698:
 27469                           
 27470                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27471                           ;stkvar	_i @ sp[(-1)+0]
 27472  0183F6  0EFF               	movlw	-1
 27473  0183F8  50E3               	movf	plusw1,w,c
 27474  0183FA  0D02               	mullw	2
 27475  0183FC  50F3               	movf	243,w,c
 27476  0183FE  0F89               	addlw	low _tickCount
 27477  018400  6ED9               	movwf	fsr2l,c
 27478  018402  6ADA               	clrf	fsr2h,c
 27479  018404  50DE               	movf	postinc2,w,c
 27480  018406  10DE               	iorwf	postinc2,w,c
 27481  018408  B4D8               	btfsc	status,2,c
 27482  01840A  D00A               	goto	l8702
 27483                           
 27484                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27485                           ;stkvar	_i @ sp[(-1)+0]
 27486  01840C  0EFF               	movlw	-1
 27487  01840E  50E3               	movf	plusw1,w,c
 27488  018410  0D02               	mullw	2
 27489  018412  50F3               	movf	243,w,c
 27490  018414  0F89               	addlw	low _tickCount
 27491  018416  6ED9               	movwf	fsr2l,c
 27492  018418  6ADA               	clrf	fsr2h,c
 27493  01841A  06DE               	decf	postinc2,f,c
 27494  01841C  0E00               	movlw	0
 27495  01841E  5ADD               	subwfb	postdec2,f,c
 27496  018420                     l8702:
 27497                           
 27498                           ;mcc_generated_files/tmr6.c: 207:  }
 27499                           ;stkvar	_i @ sp[(-1)+0]
 27500  018420  0EFF               	movlw	-1
 27501  018422  2AE3               	incf	plusw1,f,c
 27502                           
 27503                           ;stkvar	_i @ sp[(-1)+0]
 27504  018424  0EFF               	movlw	-1
 27505  018426  006F FF8C  F032    	movff	plusw1,btemp
 27506  01842C  0E0B               	movlw	11
 27507  01842E  6432               	cpfsgt	btemp^0,c
 27508  018430  D7E2               	goto	l8698
 27509                           
 27510                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27511  018432  52E5               	movf	postdec1,f,c
 27512  018434  0012               	return		;funcret
 27513  018436                     __end_of_TMR6_DefaultInterruptHandler:
 27514                           	opt callstack 0
 27515                           
 27516 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27517 ;; Defined at:
 27518 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27519 ;; Parameters:    Size  Location     Type
 27520 ;;		None
 27521 ;; Auto vars:     Size  Location     Type
 27522 ;;		None
 27523 ;; Return value:  Size  Location     Type
 27524 ;;                  1    wreg      void 
 27525 ;; Registers used:
 27526 ;;		None
 27527 ;; Tracked objects:
 27528 ;;		On entry : 0/0
 27529 ;;		On exit  : 3F/0
 27530 ;;		Unchanged: 0/0
 27531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27536 ;;Total ram usage:        0 bytes
 27537 ;; Hardware stack levels used:    1
 27538 ;; This function calls:
 27539 ;;		Nothing
 27540 ;; This function is called by:
 27541 ;;		Interrupt level 2
 27542 ;; This function uses a non-reentrant model
 27543 ;;
 27544                           
 27545                           	psect	text146
 27546  018DFC                     __ptext146:
 27547                           	opt callstack 0
 27548  018DFC                     _DMA1_DMASCNT_ISR:
 27549                           	opt callstack 14
 27550                           
 27551                           ;incstack = 0
 27552  018DFC  EE14  F000         	lfsr	1,___inthi_sp
 27553                           
 27554                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27555  018E00  0139               	movlb	57	; () banked
 27556  018E02  91A2               	bcf	162,0,b	;volatile
 27557                           
 27558                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27559  018E04  0100               	movlb	0	; () banked
 27560  018E06  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27561                           
 27562                           ; BSR set to: 0
 27563  018E08  0011               	retfie		f
 27564  018E0A                     __end_of_DMA1_DMASCNT_ISR:
 27565                           	opt callstack 0
 27566                           
 27567 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27568 ;; Defined at:
 27569 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27570 ;; Parameters:    Size  Location     Type
 27571 ;;		None
 27572 ;; Auto vars:     Size  Location     Type
 27573 ;;		None
 27574 ;; Return value:  Size  Location     Type
 27575 ;;                  1    wreg      void 
 27576 ;; Registers used:
 27577 ;;		None
 27578 ;; Tracked objects:
 27579 ;;		On entry : 0/0
 27580 ;;		On exit  : 3F/39
 27581 ;;		Unchanged: 0/0
 27582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27587 ;;Total ram usage:        0 bytes
 27588 ;; Hardware stack levels used:    1
 27589 ;; This function calls:
 27590 ;;		Nothing
 27591 ;; This function is called by:
 27592 ;;		Interrupt level 2
 27593 ;; This function uses a non-reentrant model
 27594 ;;
 27595                           
 27596                           	psect	text147
 27597  018E14                     __ptext147:
 27598                           	opt callstack 0
 27599  018E14                     _DMA1_DMADCNT_ISR:
 27600                           	opt callstack 14
 27601                           
 27602                           ; BSR set to: 0
 27603                           ;incstack = 0
 27604  018E14  EE14  F000         	lfsr	1,___inthi_sp
 27605                           
 27606                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27607  018E18  0139               	movlb	57	; () banked
 27608  018E1A  93A2               	bcf	162,1,b	;volatile
 27609                           
 27610                           ; BSR set to: 57
 27611  018E1C  0011               	retfie		f
 27612  018E1E                     __end_of_DMA1_DMADCNT_ISR:
 27613                           	opt callstack 0
 27614                           
 27615 ;; *************** function _DMA1_DMAA_ISR *****************
 27616 ;; Defined at:
 27617 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27618 ;; Parameters:    Size  Location     Type
 27619 ;;		None
 27620 ;; Auto vars:     Size  Location     Type
 27621 ;;		None
 27622 ;; Return value:  Size  Location     Type
 27623 ;;                  1    wreg      void 
 27624 ;; Registers used:
 27625 ;;		None
 27626 ;; Tracked objects:
 27627 ;;		On entry : 0/0
 27628 ;;		On exit  : 3F/39
 27629 ;;		Unchanged: 0/0
 27630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27635 ;;Total ram usage:        0 bytes
 27636 ;; Hardware stack levels used:    1
 27637 ;; This function calls:
 27638 ;;		Nothing
 27639 ;; This function is called by:
 27640 ;;		Interrupt level 2
 27641 ;; This function uses a non-reentrant model
 27642 ;;
 27643                           
 27644                           	psect	text148
 27645  018E20                     __ptext148:
 27646                           	opt callstack 0
 27647  018E20                     _DMA1_DMAA_ISR:
 27648                           	opt callstack 14
 27649                           
 27650                           ; BSR set to: 57
 27651                           ;incstack = 0
 27652  018E20  EE14  F000         	lfsr	1,___inthi_sp
 27653                           
 27654                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27655  018E24  0139               	movlb	57	; () banked
 27656  018E26  97A2               	bcf	162,3,b	;volatile
 27657                           
 27658                           ; BSR set to: 57
 27659  018E28  0011               	retfie		f
 27660  018E2A                     __end_of_DMA1_DMAA_ISR:
 27661                           	opt callstack 0
 27662                           
 27663 ;; *************** function _DMA1_DMAOR_ISR *****************
 27664 ;; Defined at:
 27665 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27666 ;; Parameters:    Size  Location     Type
 27667 ;;		None
 27668 ;; Auto vars:     Size  Location     Type
 27669 ;;		None
 27670 ;; Return value:  Size  Location     Type
 27671 ;;                  1    wreg      void 
 27672 ;; Registers used:
 27673 ;;		None
 27674 ;; Tracked objects:
 27675 ;;		On entry : 0/0
 27676 ;;		On exit  : 3F/39
 27677 ;;		Unchanged: 0/0
 27678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27683 ;;Total ram usage:        0 bytes
 27684 ;; Hardware stack levels used:    1
 27685 ;; This function calls:
 27686 ;;		Nothing
 27687 ;; This function is called by:
 27688 ;;		Interrupt level 2
 27689 ;; This function uses a non-reentrant model
 27690 ;;
 27691                           
 27692                           	psect	text149
 27693  018E2C                     __ptext149:
 27694                           	opt callstack 0
 27695  018E2C                     _DMA1_DMAOR_ISR:
 27696                           	opt callstack 14
 27697                           
 27698                           ; BSR set to: 57
 27699                           ;incstack = 0
 27700  018E2C  EE14  F000         	lfsr	1,___inthi_sp
 27701                           
 27702                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27703  018E30  0139               	movlb	57	; () banked
 27704  018E32  95A2               	bcf	162,2,b	;volatile
 27705                           
 27706                           ; BSR set to: 57
 27707  018E34  0011               	retfie		f
 27708  018E36                     __end_of_DMA1_DMAOR_ISR:
 27709                           	opt callstack 0
 27710                           
 27711                           ;
 27712                           ; Interrupt Vector Table @ 0x8
 27713                           ;
 27714                           
 27715                           	psect	ivt0x8
 27716  000008                     __pivt0x8:
 27717                           	opt callstack 0
 27718  000008                     ivt0x8_base:
 27719                           	opt callstack 0
 27720                           
 27721                           ; Vector 0 : SWINT
 27722  000008  639C               	dw	_Default_ISR shr (0+2)
 27723                           
 27724                           ; Vector 1 : HLVD
 27725  00000A  639C               	dw	_Default_ISR shr (0+2)
 27726                           
 27727                           ; Vector 2 : OSF
 27728  00000C  639C               	dw	_Default_ISR shr (0+2)
 27729                           
 27730                           ; Vector 3 : CSW
 27731  00000E  639C               	dw	_Default_ISR shr (0+2)
 27732                           
 27733                           ; Vector 4 : NVM
 27734  000010  639C               	dw	_Default_ISR shr (0+2)
 27735                           
 27736                           ; Vector 5 : SCAN
 27737  000012  639C               	dw	_Default_ISR shr (0+2)
 27738                           
 27739                           ; Vector 6 : CRC
 27740  000014  639C               	dw	_Default_ISR shr (0+2)
 27741                           
 27742                           ; Vector 7 : IOC
 27743  000016  639C               	dw	_Default_ISR shr (0+2)
 27744                           
 27745                           ; Vector 8 : INT0
 27746  000018  637B               	dw	_INT0_ISR shr (0+2)
 27747                           
 27748                           ; Vector 9 : ZCD
 27749  00001A  639C               	dw	_Default_ISR shr (0+2)
 27750                           
 27751                           ; Vector 10 : AD
 27752  00001C  61FD               	dw	_ADCC_ISR shr (0+2)
 27753                           
 27754                           ; Vector 11 : ADT
 27755  00001E  5F89               	dw	_ADCC_ThresholdISR shr (0+2)
 27756                           
 27757                           ; Vector 12 : CMP1
 27758  000020  639C               	dw	_Default_ISR shr (0+2)
 27759                           
 27760                           ; Vector 13 : SMT1
 27761  000022  639C               	dw	_Default_ISR shr (0+2)
 27762                           
 27763                           ; Vector 14 : SMT1PRA
 27764  000024  639C               	dw	_Default_ISR shr (0+2)
 27765                           
 27766                           ; Vector 15 : SMT1PRW
 27767  000026  639C               	dw	_Default_ISR shr (0+2)
 27768                           
 27769                           ; Vector 16 : DMA1SCNT
 27770  000028  637F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27771                           
 27772                           ; Vector 17 : DMA1DCNT
 27773  00002A  6385               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27774                           
 27775                           ; Vector 18 : DMA1OR
 27776  00002C  638B               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27777                           
 27778                           ; Vector 19 : DMA1A
 27779  00002E  6388               	dw	_DMA1_DMAA_ISR shr (0+2)
 27780                           
 27781                           ; Vector 20 : SPI1RX
 27782  000030  639C               	dw	_Default_ISR shr (0+2)
 27783                           
 27784                           ; Vector 21 : SPI1TX
 27785  000032  639C               	dw	_Default_ISR shr (0+2)
 27786                           
 27787                           ; Vector 22 : SPI1
 27788  000034  639C               	dw	_Default_ISR shr (0+2)
 27789                           
 27790                           ; Vector 23 : I2C1RX
 27791  000036  639C               	dw	_Default_ISR shr (0+2)
 27792                           
 27793                           ; Vector 24 : I2C1TX
 27794  000038  639C               	dw	_Default_ISR shr (0+2)
 27795                           
 27796                           ; Vector 25 : I2C1
 27797  00003A  639C               	dw	_Default_ISR shr (0+2)
 27798                           
 27799                           ; Vector 26 : I2C1E
 27800  00003C  639C               	dw	_Default_ISR shr (0+2)
 27801                           
 27802                           ; Vector 27 : U1RX
 27803  00003E  62A8               	dw	_UART1_rx_vect_isr shr (0+2)
 27804                           
 27805                           ; Vector 28 : U1TX
 27806  000040  629E               	dw	_UART1_tx_vect_isr shr (0+2)
 27807                           
 27808                           ; Vector 29 : U1E
 27809  000042  639C               	dw	_Default_ISR shr (0+2)
 27810                           
 27811                           ; Vector 30 : U1
 27812  000044  639C               	dw	_Default_ISR shr (0+2)
 27813                           
 27814                           ; Vector 31 : TMR0
 27815  000046  639C               	dw	_Default_ISR shr (0+2)
 27816                           
 27817                           ; Vector 32 : TMR1
 27818  000048  639C               	dw	_Default_ISR shr (0+2)
 27819                           
 27820                           ; Vector 33 : TMR1G
 27821  00004A  639C               	dw	_Default_ISR shr (0+2)
 27822                           
 27823                           ; Vector 34 : TMR2
 27824  00004C  639C               	dw	_Default_ISR shr (0+2)
 27825                           
 27826                           ; Vector 35 : CCP1
 27827  00004E  639C               	dw	_Default_ISR shr (0+2)
 27828                           
 27829                           ; Vector 36 : Undefined
 27830  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27831                           
 27832                           ; Vector 37 : NCO1
 27833  000052  639C               	dw	_Default_ISR shr (0+2)
 27834                           
 27835                           ; Vector 38 : CWG1
 27836  000054  639C               	dw	_Default_ISR shr (0+2)
 27837                           
 27838                           ; Vector 39 : CLC1
 27839  000056  639C               	dw	_Default_ISR shr (0+2)
 27840                           
 27841                           ; Vector 40 : INT1
 27842  000058  613F               	dw	_INT1_ISR shr (0+2)
 27843                           
 27844                           ; Vector 41 : CMP2
 27845  00005A  639C               	dw	_Default_ISR shr (0+2)
 27846                           
 27847                           ; Vector 42 : DMA2SCNT
 27848  00005C  639C               	dw	_Default_ISR shr (0+2)
 27849                           
 27850                           ; Vector 43 : DMA2DCNT
 27851  00005E  639C               	dw	_Default_ISR shr (0+2)
 27852                           
 27853                           ; Vector 44 : DMA2OR
 27854  000060  639C               	dw	_Default_ISR shr (0+2)
 27855                           
 27856                           ; Vector 45 : DMA2A
 27857  000062  639C               	dw	_Default_ISR shr (0+2)
 27858                           
 27859                           ; Vector 46 : I2C2RX
 27860  000064  639C               	dw	_Default_ISR shr (0+2)
 27861                           
 27862                           ; Vector 47 : I2C2TX
 27863  000066  639C               	dw	_Default_ISR shr (0+2)
 27864                           
 27865                           ; Vector 48 : I2C2
 27866  000068  639C               	dw	_Default_ISR shr (0+2)
 27867                           
 27868                           ; Vector 49 : I2C2E
 27869  00006A  639C               	dw	_Default_ISR shr (0+2)
 27870                           
 27871                           ; Vector 50 : U2RX
 27872  00006C  62BC               	dw	_UART2_rx_vect_isr shr (0+2)
 27873                           
 27874                           ; Vector 51 : U2TX
 27875  00006E  62B2               	dw	_UART2_tx_vect_isr shr (0+2)
 27876                           
 27877                           ; Vector 52 : U2E
 27878  000070  639C               	dw	_Default_ISR shr (0+2)
 27879                           
 27880                           ; Vector 53 : U2
 27881  000072  639C               	dw	_Default_ISR shr (0+2)
 27882                           
 27883                           ; Vector 54 : TMR3
 27884  000074  639C               	dw	_Default_ISR shr (0+2)
 27885                           
 27886                           ; Vector 55 : TMR3G
 27887  000076  639C               	dw	_Default_ISR shr (0+2)
 27888                           
 27889                           ; Vector 56 : TMR4
 27890  000078  639C               	dw	_Default_ISR shr (0+2)
 27891                           
 27892                           ; Vector 57 : CCP2
 27893  00007A  639C               	dw	_Default_ISR shr (0+2)
 27894                           
 27895                           ; Vector 58 : Undefined
 27896  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27897                           
 27898                           ; Vector 59 : CWG2
 27899  00007E  639C               	dw	_Default_ISR shr (0+2)
 27900                           
 27901                           ; Vector 60 : CLC2
 27902  000080  639C               	dw	_Default_ISR shr (0+2)
 27903                           
 27904                           ; Vector 61 : INT2
 27905  000082  639C               	dw	_Default_ISR shr (0+2)
 27906                           
 27907                           ; Vector 62 : Undefined
 27908  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27909                           
 27910                           ; Vector 63 : Undefined
 27911  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27912                           
 27913                           ; Vector 64 : Undefined
 27914  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27915                           
 27916                           ; Vector 65 : Undefined
 27917  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27918                           
 27919                           ; Vector 66 : Undefined
 27920  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27921                           
 27922                           ; Vector 67 : Undefined
 27923  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27924                           
 27925                           ; Vector 68 : Undefined
 27926  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27927                           
 27928                           ; Vector 69 : Undefined
 27929  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27930                           
 27931                           ; Vector 70 : TMR5
 27932  000094  6037               	dw	_TMR5_ISR shr (0+2)
 27933                           
 27934                           ; Vector 71 : TMR5G
 27935  000096  639C               	dw	_Default_ISR shr (0+2)
 27936                           
 27937                           ; Vector 72 : TMR6
 27938  000098  633D               	dw	_TMR6_ISR shr (0+2)
 27939                           
 27940                           ; Vector 73 : CCP3
 27941  00009A  639C               	dw	_Default_ISR shr (0+2)
 27942                           
 27943                           ; Vector 74 : CWG3
 27944  00009C  639C               	dw	_Default_ISR shr (0+2)
 27945                           
 27946                           ; Vector 75 : CLC3
 27947  00009E  639C               	dw	_Default_ISR shr (0+2)
 27948                           
 27949                           ; Vector 76 : Undefined
 27950  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27951                           
 27952                           ; Vector 77 : Undefined
 27953  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27954                           
 27955                           ; Vector 78 : Undefined
 27956  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27957                           
 27958                           ; Vector 79 : Undefined
 27959  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27960                           
 27961                           ; Vector 80 : CCP4
 27962  0000A8  639C               	dw	_Default_ISR shr (0+2)
 27963                           
 27964                           ; Vector 81 : CLC4
 27965  0000AA  639C               	dw	_Default_ISR shr (0+2)
 27966  0000AC                     ivt0x8_undefint:
 27967                           	opt callstack 0
 27968  0000AC  00FF               	reset	
 27969                           
 27970                           	psect	text150
 27971  000000                     __ptext150:
 27972                           	opt callstack 0
 27973                           
 27974                           	psect	rparam
 27975  0000                     
 27976                           	psect	temp
 27977  000032                     btemp:
 27978                           	opt callstack 0
 27979  000032                     	ds	32
 27980  0000                     wtemp0	set	btemp
 27981  0000                     wtemp1	set	btemp+2
 27982  0000                     wtemp2	set	btemp+4
 27983  0000                     wtemp3	set	btemp+6
 27984  0000                     wtemp4	set	btemp+8
 27985  0000                     wtemp5	set	btemp+10
 27986  0000                     wtemp8	set	btemp+1
 27987  0000                     ttemp0	set	btemp
 27988  0000                     ttemp1	set	btemp+3
 27989  0000                     ttemp2	set	btemp+6
 27990  0000                     ttemp3	set	btemp+9
 27991  0000                     ttemp5	set	btemp+1
 27992  0000                     ttemp6	set	btemp+4
 27993  0000                     ttemp7	set	btemp+8
 27994  0000                     ltemp0	set	btemp
 27995  0000                     ltemp1	set	btemp+4
 27996  0000                     ltemp2	set	btemp+8
 27997  0000                     lltemp0	set	btemp
 27998  0000                     lltemp1	set	btemp+8
 27999  0000                     lltemp2	set	btemp+16
 28000  0000                     lltemp3	set	btemp+24
 28001                           tosu	equ	0x3FFF
 28002                           tosh	equ	0x3FFE
 28003                           tosl	equ	0x3FFD
 28004                           stkptr	equ	0x3FFC
 28005                           pclatu	equ	0x3FFB
 28006                           pclath	equ	0x3FFA
 28007                           pcl	equ	0x3FF9
 28008                           tblptru	equ	0x3FF8
 28009                           tblptrh	equ	0x3FF7
 28010                           tblptrl	equ	0x3FF6
 28011                           tablat	equ	0x3FF5
 28012                           prodh	equ	0x3FF4
 28013                           prodl	equ	0x3FF3
 28014                           indf0	equ	0x3FEF
 28015                           postinc0	equ	0x3FEE
 28016                           postdec0	equ	0x3FED
 28017                           preinc0	equ	0x3FEC
 28018                           plusw0	equ	0x3FEB
 28019                           fsr0h	equ	0x3FEA
 28020                           fsr0l	equ	0x3FE9
 28021                           wreg	equ	0x3FE8
 28022                           indf1	equ	0x3FE7
 28023                           postinc1	equ	0x3FE6
 28024                           postdec1	equ	0x3FE5
 28025                           preinc1	equ	0x3FE4
 28026                           plusw1	equ	0x3FE3
 28027                           fsr1h	equ	0x3FE2
 28028                           fsr1l	equ	0x3FE1
 28029                           bsr	equ	0x3FE0
 28030                           indf2	equ	0x3FDF
 28031                           postinc2	equ	0x3FDE
 28032                           postdec2	equ	0x3FDD
 28033                           preinc2	equ	0x3FDC
 28034                           plusw2	equ	0x3FDB
 28035                           fsr2h	equ	0x3FDA
 28036                           fsr2l	equ	0x3FD9
 28037                           status	equ	0x3FD8


Data Sizes:
    Strings     426
    Constant    144
    Data        258
    BSS         1438
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     239
    BANK2           256      0     252
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5198_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4062tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  311348
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168252
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6AE      58        0.0%
DATA                 0      0     6AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec  2 01:06:54 2019

                     _SPI1_Exchange8bit 8C0A                __end_of_set_display_info 8C64  
                                     _C 0100                                       _D 0500  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDC5                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 89AE            __end_of_start_switch_handler 8C0A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8E5E                             __CFG_LVP$ON 000000  
                                   l171 8D92                                     l701 87C2  
                                   l581 8796                                     l835 8C18  
                                   _GIE 01FE97                                     _abs 82D8  
                                   _pad 6D42                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8D26                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8BC8                      _UART1_Transmit_ISR 8770  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8BA6  
                          __CFG_ZCD$OFF 000000                                    l2003 521C  
                                  l1028 84F6                                    l2024 44A0  
                                  l1502 7A16                                    l1264 1F90  
                                  l1256 1DE0                                    l1281 2594  
                                  l2074 1D78                                    l1362 8142  
                                  l1274 202E                                    l1266 1F96  
                                  l1276 20F4                                    l1517 85C6  
                                  l1277 2202                                    l1722 62CE  
                                  l2362 6664                                    l1635 8C60  
                                  l1803 7B3C                                    l1812 716C  
                                  l2358 74DC                                    l2369 6738  
                                  l1921 123A                                    l1578 8592  
                                  l1498 76FC                                    l1595 6F60  
                                  l1587 5BDC                                    l1683 3FD6  
                                  l2636 35AC                                    l2396 65D6  
                                  l2717 2DF0                                    l1950 066A  
                  _ADCC_StartConversion 8DAC                                    l2648 343C  
                                  l1865 6D9E                                    l2681 3B26  
                                  l2819 58DA                                    l7100 2C76  
                                  l7012 2734                                    l2780 6464  
                                  l1885 40BA                                    l1965 0B1A  
                                  l2757 5F46                                    l7110 2CEA  
                                  l7014 273A                                    l7006 26F4  
                                  l7120 2D5A                                    l7024 278C  
                                  l7016 276A                                    l7200 6C5C  
                                  l2944 7CC6                                    l2929 610E  
                                  l7130 2DB8                                    l7114 2D30  
                                  l6402 2E90                                    l2883 6C20  
                                  l6420 2F40                                    l2788 8318  
                                  l7204 6C74                                    l7300 655E  
                                  l2957 7C42                                    l6510 32A0  
                                  l6430 2F96                                    l6414 2F0E  
                                  l6406 2EA6                                    l7150 6766  
                                  l7222 6D28                                    l7214 6CF4  
                                  l7230 7464                                    l7128 2D9E  
                                  l6512 32B2                                    l6520 32EE  
                                  l6432 2FC6                                    l6408 2ED6  
                                  l7082 2C00                                    l6426 2F80  
                                  l7162 679C                                    l7234 74A6  
                                  l7306 656E                                    l9012 8792  
                                  l7076 2BE4                                    l6604 358C  
                                  l6532 33C6                                    l6516 32BC  
                                  l7156 677C                                    l7252 66B2  
                                  l7308 6584                                    l8300 5E10  
                                  l7086 2C26                                    l6550 345E  
                                  l6542 3420                                    l6534 33EC  
                                  l6438 2FE8                                    l7326 8280  
                                  l7238 74DA                                    l7246 6622  
                                  l6710 4AA2                                    l8310 5E72  
                                  l8302 5E26                                    l7096 2C70  
                                  l6552 3470                                    l7184 6876  
                                  l7176 6842                                    l7264 6736  
                                  l7256 6700                                    l7272 82AE  
                                  l8312 5E90                                    l8304 5E44  
                                  l9034 87BE                                    l6570 34AA  
                                  l6482 31B8                                    l8162 8B56  
                                  l7282 64C0                                    l6714 4AEA  
                                  l8242 85D0                                    l8322 5EC4  
                                  l8314 5EA6                                    l9060 84DE  
                                  l6556 347C                                    l6484 31CA  
                                  l6492 3204                                    l6468 3126  
                                  l6396 2E50                                    l6812 5A76  
                                  l6804 59CA                                    l7196 6C4A  
                                  l6652 6402                                    l6708 4A52  
                                  l8332 5F26                                    l9204 7146  
                                  l6582 3508                                    l6566 34A4  
                                  l6478 3198                                    l6638 8308  
                                  l6910 392E                                    l6902 38C8  
                                  l6662 645C                                    l6718 4B58  
                                  l6592 3534                                    l6488 31D4  
                                  l6752 5452                                    l6904 38DA  
                                  l6912 3932                                    l6832 360C  
                                  l6656 6406                                    l6680 7CB6  
                                  l6736 7C32                                    l8272 88A8  
                                  l6842 3662                                    l7298 6542  
                                  l8290 5D96                                    l9162 75A8  
                                  l6596 354C                                    l6764 54EC  
                                  l6924 397C                                    l6852 36EA  
                                  l6844 3692                                    l8702 8420  
                                  l9270 7D04                                    l6598 355C  
                                  l6758 54A6                                    l6942 39F2  
                                  l6918 3960                                    l6870 37AE  
                                  l6862 3740                                    l6838 364C  
                                  l6694 4934                                    l9166 75E6  
                                  l9182 707A                                    l8800 85A8  
                                  l7840 568A                                    l6776 55BE  
                                  l6952 3A66                                    l6928 39A2  
                                  l6864 3770                                    l7850 5720  
                                  l7842 56AC                                    l6970 3AFA  
                                  l6938 39EC                                    l6858 372A  
                                  l8298 5E02                                    l9194 70D6  
                                  l9276 7D14                                    l7860 5788  
                                  l6796 5942                                    l6972 3B0A  
                                  l6964 3AD2                                    l6884 3802  
                                  l6876 37E8                                    l7862 57C6  
                                  l6958 3AA2                                    l6894 3892  
                                  l8920 68CE                                    l8912 68A4  
                                  l7856 574C                                    l8914 68B4  
                                  l6994 2666                                    l8762 617C  
                                  l8754 6150                                    l7866 582E  
                                  l7858 5764                                    l9714 6B36  
                                  l9810 4112                                    l8842 3B62  
                                  l8940 69A0                                    l8932 6932  
                                  l8916 68BA                                    l8924 68D6  
                                  l6996 266C                                    l6988 2626  
                                  l7876 58CA                                    l9740 7942  
                                  l9820 4324                                    l7892 5FD8  
                                  l8852 3C80                                    l8836 3B32  
                                  l8918 68C0                                    l8926 6902  
                                  l6998 269C                                    l8766 6194  
                                  l9726 7878                                    l9750 6D96  
                                  l9806 40F4                                    l7894 6044  
                                  l9736 7904                                    l9728 789A  
                                  l9760 6E2E                                    l9752 6DA8  
                                  l9840 43D6                                    l8864 3D8C  
                                  l8856 3D5A                                    l8698 83F6  
                                  l9746 6D6E                                    l9922 0396  
                                  l9906 02FC                                    l9914 032A  
                                  l8882 3FA4                                    l8890 3FB6  
                                  l9756 6DE4                                    l9772 7B5E  
                                  l9844 4412                                    l9932 04D2  
                                  l8876 3F08                                    l8868 3E28  
                                  l8956 7AF6                                    l9774 7B8A  
                                  l9766 7396                                    l9950 058E  
                                  l9926 0406                                    l9870 00F0  
                                  STR_1 FF60                                    l9944 0554  
                                  l9928 0470                                    STR_2 FFB2  
                                  STR_3 FFE0                                    l9890 0216  
                                  l9858 00AC                                    STR_4 FF4F  
                                  STR_5 FF71                                    l9964 05F6  
                                  l9956 0594                                    l9948 057C  
                                  l9892 022C                                    STR_6 FFB2  
                                  STR_7 FFE0                                    l9798 40AA  
                                  l9982 06B8                                    l9966 0602  
                                  l9878 0146                                    STR_8 FF3E  
                                  STR_9 FF93                                    l9992 077A  
                                  l9888 01EA                                    l9896 0258  
                                  l9986 06F0                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3518  
                                  _T2PR 003FAB                                    u5110 82EC  
                                  u5120 6386                                    u5210 7C74  
                                  u5050 86A6                                    u6020 2C68  
                                  u5220 7C76                                    u5060 86A8  
                                  u5125 637C                                    u5310 4AD0  
                                  u5400 8708                                    u6200 6CA0  
                                  u5240 48CC                                    u6130 67C8  
                                  u5170 6454                                    u5250 4918  
                                  u4610 86D6                                    _T6PR 003F93  
                                  u5315 4AC6                                    u6060 2CC4  
                                  u5420 544C                                    u6220 6D14  
                                  u5180 6456                                    u4620 86D8  
                                  u5340 846E                                    _PMD0 0039C0  
                                  u5165 6436                                    u5245 48C2  
                                  _PMD1 0039C1                                    u6070 2CFE  
                                  u5510 5648                                    u6150 6862  
                                  u5350 8470                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u6080 2D44  
                                  u4720 314C                                    u5440 54A2  
                                  u5600 5AAE                                    u6320 82AA  
                                  u6400 658C                                    u5360 7BF0  
                                  _PMD4 0039C4                                    u6065 2CB4  
                                  _PMD5 0039C5                                    u4730 316C  
                                  u6330 64A0                                    u5290 49F8  
                                  u5370 7BF2                                    u8010 5EBA  
                                  _PMD6 0039C6                                    u4731 3166  
                                  u5451 54AC                                    u5275 4952  
                                  _PMD7 0039C7                                    u5460 54E6  
                                  u5620 5B00                                    u5540 593C  
                                  u6260 74D6                                    u6420 65B6  
                                  u6340 64B4                                    u5276 4958  
                                  u5277 4966                                    u5390 8706  
                                  u6430 825C                                    u5470 5518  
                                  u6350 64EE                                    u6335 6496  
                                  u5295 49EE                                    u4920 3482  
                                  u4840 32E4                                    u6440 827C  
                                  u5560 5992                                    u5800 39E4  
                                  u8050 7E9A                                    u4770 31FC  
                                  u5490 55F6                                    u5570 59C4  
                                  u6355 64E4                                    u4940 349C  
                                  u4780 321C                                    u4748 316E  
                                  u5580 59F6                                    u4845 32D4  
                                  u8150 612E                                    u9030 6B2A  
                                  u8214 3B4C                                    u4775 31EC  
                                  u8215 3B46                                    u4880 340E  
                                  u7440 571C                                    u9200 407E  
                                  u5840 3A40                                    u5760 395A  
                                  u8320 3E6C                                    u9050 6BA6  
                                  u5850 3A7A                                    u9130 7410  
                                  u8314 3E64                                    u8234 3B7C  
                                  u8075 7ECE                                    u8315 3E5E  
                                  u8235 3B76                                    u8076 7ED0  
                                  u8068 7E9C                                    u4980 34F8  
                                  u7460 5874                                    u9060 78C8  
                                  u9220 4090                                    u5860 3AB6  
                                  u7540 60D0                                    u5845 3A30  
                                  u5950 277A                                    u7470 5876  
                                  u9310 43AC                                    u8254 3B9E  
                                  u8255 3B98                                    u9240 40E0  
                                  u8440 7AE2                                    u4985 34E8  
                                  u9137 7402                                    u9250 4338  
                                  u9170 400C                                    u8274 3D74  
                                  u9067 78BA                                    u8275 3D6E  
                                  u9180 400E                                    u9500 0562  
                                  u9420 02A6                                    u5965 290E  
                                  u9261 4368                                    u9270 437E  
                                  u9430 02A8                                    u9350 00DA  
                                  u8294 3E42                                    u8470 7B28  
                                  u5975 29D6                                    u9271 437C  
                                  u8295 3E3C                                    u9280 4392  
                                  u5985 2B9E                                    u9290 4396  
                                  u9530 05C6                                    u8458 7AE4  
                                  u9380 0194                                    u7925 84AA  
                                  u9470 050E                                    u9390 0196  
                                  u9800 10B8                                    u9640 0A18  
                                  u8488 7B2A                                    u9570 0648  
                                  _PLLR 01CEE0                                    u9820 116E  
                                  u9740 0EE4                                    u9900 52B4  
                                  u9830 1170                                    u9910 52FA  
                                  u9940 53D6                                    u9917 52EC  
                                  u9960 4476                                    u9990 455E  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 881E                           __CFG_FCMEN$ON 000000  
                                  _dbuf 017C                                    _atoi 5670  
                                  _ctoa 7B40                                    _main 1D82  
                                  _dtoa 3FDC                                    _nanf 7FBA  
                                  _seed 01CC                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 5132                                    btemp 0032  
                                  _xtoa 445C                  __end_of_check_adc_scan 8E56  
                         ___fpclassifyf 62D8                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 8C28  
             __size_of_clear_hid_pflags 0024                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8AA0                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 8DFA  
                      __end_of_INT1_ISR 853A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 7704           __end_of_OSCILLATOR_Initialize 8D98  
                                 l10002 0926                                   l10102 0FD6  
                                 l10104 0FF0                                   l10040 0C32  
                                 l10024 0B12                                   l10016 0A48  
                                 l10114 1092                                   l10026 0B34  
                                 l10140 119A                                   l10124 10E2  
                                 l10052 0CBA                                   l10060 0D24  
                                 l10212 4490                                   l10160 519E  
                                 l10232 4566                                   l10224 4506  
                                 l10400 1B2A                                   l10320 14F8  
                                 l10218 44CA                                   l10068 0D90  
                                 l10076 0EA2                                   l10180 528E  
                                 l10420 1D00                                   l10316 14A8  
                                 l10190 5348                                   l10414 1CA6  
                                 l10318 14E2                                   l10430 1D24  
                                 l10088 0F3A                                   l10184 52BE  
                                 l10176 5252                                   l10272 47CC  
                                 l10248 465C                                   l10256 46E2  
                                 l10424 1D04                                   l10336 165C  
                                 l10194 5374                                   l10370 191C  
                                 l10346 16F2                                   l10452 4C1A  
                                 l10198 53B0                                   l10390 1A7C  
                                 l10366 18E8                                   l10358 1830  
                                 l10294 1326                                   l10702 5CDA  
                                 l10296 1360                                   l10472 4DF0  
                                 l10464 4D42                                   l10536 7804  
                                 l10298 1376                                   l10458 4CD8  
                                 l10570 6E78                                   l10484 772E  
                                 l10820 1FFC                                   l10486 776E  
                                 l10718 5D3E                                   l10806 1F9A  
                                 l10840 2298                                   l10808 1FC8  
                                 l10762 1DE8                                   l10844 22FA  
                                 l10828 2020                                   l10764 1DFA  
                                 l10756 1DC2                                   PRLOCK 0039EF  
                                 l10870 24FC                                   l10854 2476  
                                 l10862 24C0                                   l10758 1DCA  
                                 l10688 5BAC                                   l10856 24A0  
                                 l10884 2544                                   l10876 250E  
                                 l10878 2526                                   l10888 256A  
                                 l10898 25BE                         __end_of___aodiv 5670  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 35B6                                   _ADCLK 003EFF  
                       __end_of___aomod 5B24                                   _ADPCH 003EF1  
                       __end_of___fldiv 3B30                                   _ADREF 003EFD  
                       __end_of___awdiv 6890                         __end_of___flneg 82D8  
                                 STR_11 FF82                                   STR_20 FEA6  
                                 STR_12 FEB9                                   STR_21 FF93  
                                 STR_13 FEF2                                   STR_30 FE80  
                                 STR_22 FF93                                   STR_14 FEDF  
                                 STR_23 FF82                                   STR_31 FFCD  
                                 STR_15 FF2B                                   STR_32 FFCD  
                                 STR_24 FFFC                                   STR_16 FF05  
                                 STR_25 FFF9                                   STR_33 FFA3  
                                 STR_17 FF18                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFA3                                   STR_50 FFEA  
                                 STR_18 FECC                                   STR_35 FFA3  
                                 STR_51 FFF2                                   STR_27 FFC1  
                                 STR_19 FEA6                                   STR_28 FFD7  
                                 STR_36 FE55                         __end_of___awmod 6D42  
                                 STR_45 FE7F                                   STR_29 FE80  
                                 STR_54 FFF6                                   STR_46 FFE6  
                                 STR_38 FE93                                   STR_47 FFEE  
                                 STR_39 FE6D                                   STR_56 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 2DFA  
                       __end_of___flsub 8364                         __end_of___fltol 65E0  
                                 u10000 45B2                                   u10010 45B4  
                                 u10100 4758                                   u10110 475C  
                                 u10030 4612                                   u10040 4614  
                                 u10210 1540                                   u10060 46DE  
                                 u10220 1542                                   u10070 46FE  
                                 u10310 19D6                                   u10230 1568  
                                 u10320 19D8                                   u10160 13BE  
                                 u10081 472E                                   u10065 46C0  
                                 u10090 4744                                   u10170 13C0  
                                 u10091 4742                                   u10180 13E6  
                                 u10420 4E64                                   u10360 1B7E  
                                 u10280 1746                                   u10450 77E4  
                                 u10540 5D2A                                   u10550 5D2C  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8E70                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8A78  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8138  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8D0E  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 02C4                                   _fputc 6B06  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 847A  
                                 _fputs 78F4                         __end_of_isdigit 8712  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 861A                                   _width 001B  
                                 _putch 8CD8                         __end_of_islower 86B2  
                       __end_of_isspace 8290                _INT1_SetInterruptHandler 89AE  
                       __end_of_isupper 86E2                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 895E  
           _UART1_SetRxInterruptHandler 8936                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 706E                         __end_of_tolower 7CD0  
                       __end_of_strncmp 6118                         __end_of_toupper 7C4C  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8AC6                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 83AA                   __end_of_ringBufS_init 8896  
                       __initialization 7170                       _UART2_rx_vect_isr 8AF0  
                          __end_of_atoi 58E4                            __end_of_ctoa 7BC8  
                          __end_of_main 25D0                            __end_of_dtoa 445C  
                          __end_of_nanf 801C                            __end_of_stoa 53F0  
                          __end_of_xtoa 4816                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8D3E  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8986  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 8A9E                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 87C8                         _PWM8_Initialize 8D6C  
                      _UART1_Initialize 7F56                       _UART2_tx_vect_isr 8AC8  
                    _UART2_Transmit_ISR 879C                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7EF2                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 847A                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 812A                    _start_switch_handler 8BEA  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8DDC                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                u811_20 8A56                                  u811_26 8A58  
                                _OSCFRQ 0039DF                                  u398_48 8BD6  
                                u840_24 6996                                  u840_25 6992  
                                u842_20 69BC                                  u833_28 68AA  
                                u842_26 69BE                                  u850_28 8BB4  
                                u836_20 68CA                                  u836_21 68C4  
                                u861_28 8B6E                                  u858_48 8B92  
                  __size_of_hid_display 0102                                  u877_44 7D34  
                                u877_45 7D2E                        __end_of___xxtofl 5F50  
 __end_of_ADCC_DischargeSampleCapacitor 8E3E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8E36                __end_of_send_lcd_cmd_dma 823E  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8B16  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8E0A  
                      _UART2_Initialize 807E                                  _WaitMs 85AE  
                       _conv_raw_result 3B30                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 65E0  
                                ___fleq 7422                       _ADCC_ThresholdISR 7E24  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 798C  
                                _efgtoa 0000                                  _floorf 4816  
                    ?_ADCC_ThresholdISR 0052                                  _memset 4B82  
                  __size_of_help_button 0038                                  clear_0 71DE  
                                clear_1 71F2                                  clear_2 7204  
                                clear_3 7210                                  clear_4 721C  
                                clear_5 7228                                  clear_6 7234  
                                clear_7 7240                                  clear_8 724C  
                                _printf 801C                      _eaDogM_WriteString 77AC  
                                _strcpy 734E                               ?_ADCC_ISR 0052  
                                _strlen 7852                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 7DB8                          _PMD_Initialize 8D98  
             __end_of_UART2_tx_vect_isr 8AEE                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7F56                            __mediumconst FDC4  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 8192                        __end_of_vfprintf 77AC  
                            _StartTimer 853A           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 83F0                       _SYSTEM_Initialize 8364  
                            __accesstop 0060                 __end_of__initialization 725E  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8E4E                    __end_of_display_info 8E46  
             __end_of_CLKREF_Initialize 8E14                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 84BC  
                 _set_temp_display_help 8DBE                        _clear_hid_pflags 8B16  
             __end_of_ADCC_ThresholdISR 7E8C                  __end_of_ringBufS_flush 7A1E  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 8712  
                          __pidataBANK1 8D3E                            __pidataBANK2 74E6  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 6C2A  
                         __end_of_fputs 798C                           __end_of_srand 864E  
                 __end_of_TMR5_CallBack 8B82                           __end_of_putch 8CF2  
               __end_of_PWM8_Initialize 8D82                 __end_of_TMR6_Initialize 87F2  
                     _adc_int_t_handler 7CD0                  __end_of_PMD_Initialize 8DAC  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 8BA6  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 8E20                          _clear_adc_scan 8E5E  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 83AA  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 0100  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 5B24                 __end_of_conv_raw_result 3FDC  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 8B5E  
                      _DMA1_DMADCNT_ISR 8E14              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8CBC                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8986                 __end_of_ADCC_Initialize 7E22  
                            ??_TMR5_ISR 01EB               __end_of_adc_int_t_handler 7D4E  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8A26  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 89FE  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8C64                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8E64  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 8DFC  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8896  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 84FC  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8D0E                                 __Lparam 0000  
              __end_of_UART1_Initialize 7FBA                       __end_of_hid_input 7B40  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 53F0  
                               ___fladd 2DFA                                 ___aomod 58E4  
                               ___fldiv 35B6                                 ___awdiv 6742  
                               ___flneg 8290                                 ___awmod 6C2A  
                               ___flmul 25D0                                 ___flsub 831E  
                               ___fltol 646E               __end_of_UART1_Receive_ISR 8C82  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 734E                                 __pcinit 7170  
              __end_of_mode_lamp_bright 8DEA                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 8DCE  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8BEA  
                               __ptext2 7EF2                                 __ptext3 8DAC  
                               __ptext4 8E36                                 __ptext5 861A  
                               __ptext6 7264                                 __ptext7 881E  
                               __ptext8 8846                                 __ptext9 8C0A  
                     _UART2_Receive_ISR 8C82                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8D82  
                          __size_of_abs 0046                                 us552999 565A  
                               us563999 5B12                            __size_of_pad 0114  
                               _isalpha 8436                                 _isdigit 86E2  
                               us916999 3FF6                                 _mode_sw 0025  
                               us985999 5144                       __end_of_lp_filter 62D8  
                               us998999 44DC                                 _islower 8682  
                               _isspace 823E                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 80DC  
                               _isupper 86B2              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6F64                                 _tolower 7C4C  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5F50  
                               _toupper 7BC8                    end_of_initialization 725E  
             __size_of_convert_adc_data 00B8     __end_of_UART1_SetTxInterruptHandler 8936  
           _UART1_SetTxInterruptHandler 890E     __end_of_UART2_SetRxInterruptHandler 890E  
           _UART2_SetRxInterruptHandler 88E6                       __end_of_set_vterm 8CD8  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8E70               __end_of_UART2_Receive_ISR 8CA0  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 895E                            _display_help 8E46  
                 _TMR5_InterruptHandler 00C1                            _display_info 8E3E  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8B3A  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 8A4E  
           _ADCC_SetADIInterruptHandler 8A26                              _update_lcd 6E56  
                       _calc_model_data 4E6E                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7D4E  
                       _SPI1_Initialize 8D56                   __end_of_get_vterm_ptr 8770  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 85E4            __end_of_INTERRUPT_Initialize 7EF2  
                            _vterm_dump 69D8                          __end_of___flge 6742  
                        __end_of___fleq 74E6    __end_of_INT0_DefaultInterruptHandler 8E7A  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8E78  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 8192  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0228  
                        __end_of_floorf 4B82             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4E6E  
                        __end_of_printf 807E                __end_of_DMA1_DMADCNT_ISR 8E1E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8BEA  
                        __end_of_strcpy 7422                          __end_of_strlen 78F4  
                   start_initialization 7170    __end_of_TMR5_DefaultInterruptHandler 8A76  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8A4E  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 831E  
                 __end_of_INT1_CallBack 8BC8               __size_of_set_display_info 001E  
                           __end_of_pad 6E56                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 886E                          _switch_handler 6890  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 646E  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 02BC  
              __end_of_DMA1_DMASCNT_ISR 8E0A                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 8E2C                     __end_of_hid_display 7170  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8B3A  
                         _ringBufS_init 886E                             __pdataBANK0 00C7  
                           __pdataBANK1 01D4                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 8682                 __end_of_calc_model_data 5132  
                   __end_of_help_button 85AE         __end_of_eaDogM_WriteStringAtPos 861A  
               __end_of_DMA1_Initialize 7DB8                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 89FE                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01EB                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 69D8                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8D6C                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE55  
                      _convert_adc_data 75A2               __size_of_ringBufS_put_dma 00AA  
                          _init_display 7264                  __end_of_DMA1_DMAOR_ISR 8E36  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 81EC  
                _PIN_MANAGER_Initialize 7A1E                    __end_of_wait_lcd_set 8E6A  
                         __pmediumconst FDC4                               __ptext100 8986  
                             __ptext101 8D26                               __ptext110 89AE  
                             __ptext102 8D56                               __ptext111 89D6  
                             __ptext103 8D6C                               __ptext120 8E76  
                             __ptext112 8192                               __ptext104 8D98  
                             __ptext121 6890                               __ptext113 7D4E  
                             __ptext105 7A1E                               __ptext130 87F4  
                             __ptext122 80DC                               __ptext114 8E0A  
                             __ptext106 8D82                               __ptext131 7CD0  
                             __ptext123 84BC                               __ptext115 7DB8  
                             __ptext107 7E8C                               __ptext140 879C  
                             __ptext132 8E7A                               __ptext124 8B5E  
                             __ptext116 89FE                               __ptext108 8E56  
                             __ptext141 8AF0                               __ptext133 8E7C  
                             __ptext125 8A4E                               __ptext117 8A26  
                             __ptext109 864E                               __ptext150 0000  
                             __ptext142 8C82                               __ptext134 7E24  
                             __ptext126 8DEC                               __ptext118 84FC  
                             __ptext143 8CF4                               __ptext135 8A78  
                             __ptext127 8BC8                               __ptext119 8BA6  
                             __ptext144 8B82                               __ptext136 8770  
                             __ptext128 8E78                               __ptext145 83F0  
                             __ptext137 8AA0                               __ptext129 8E70  
                             __ptext146 8DFC                               __ptext138 8C64  
                             __ptext147 8E14                               __ptext139 8AC8  
                             __ptext148 8E20                               __ptext149 8E2C  
                             _hid_input 7AB0                      __end_of_StartTimer 8576  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 87F4                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6118  
                           _hid_display 706E                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7E8C  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 8DEC  
                              _INT1_ISR 84FC                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0089                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0394  
                             _ring_buf2 0400                                i2u430_48 880A  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u880_48 7E58                                i2u880_49 7E6C  
                              i2u882_48 8A8A                                i2u884_48 8AB2  
              __size_of_TMR5_Initialize 0046                                i2u886_48 8ADA  
                              i2u888_48 8B02                               _set_vterm 8CBC  
                   __size_of_update_lcd 010E                             _help_button 8576  
            __end_of_UART1_Transmit_ISR 879C                                _TMR5_ISR 80DC  
                              _TMR6_ISR 8CF4                               _port_data 01DB  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8B5E                              _ADCON0bits 003EF8  
                    __end_of_check_help 5D4C                               _start_lcd 8E6A  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8B82                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 8C46  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 7184  
                             copy_data1 71A6                               copy_data2 71C8  
              _INT0_SetInterruptHandler 89D6                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 002F     __end_of_UART2_SetTxInterruptHandler 88E6  
           _UART2_SetTxInterruptHandler 88BE                            _uart1RxCount 002C  
                          _uart2RxCount 0026                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 8CA0                            _send_lcd_cmd 8846  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 8E7C  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 88BE  
                 __end_of_DMA1_DMAA_ISR 8E2A                      ___fpclassifyf@F463 00B1  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 5D4C                       ?_DMA1_DMADCNT_ISR 0052  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8DDC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 886E                                __ptext11 706E  
                              __ptext20 8B16                                __ptext12 7AB0  
                              __ptext21 8E5E                                __ptext13 8896  
                              __ptext30 8CA0                                __ptext22 5B24  
                              __ptext14 8DCE                                __ptext31 8138  
                              __ptext23 69D8                                __ptext15 75A2  
                              __ptext40 445C                                __ptext32 77AC  
                              __ptext24 6F64                                __ptext16 3B30  
                              __ptext41 7BC8                                __ptext33 8E64  
                              __ptext25 8742                                __ptext17 7FBA  
                              __ptext50 4816                                __ptext42 8682  
                              __ptext34 8E6A                                __ptext26 85AE  
                              __ptext18 8C28                                __ptext51 62D8  
                              __ptext43 8436                                __ptext35 798C  
                              __ptext27 6E56                                __ptext19 5D4C  
                              __ptext60 82D8                                __ptext52 646E  
                              __ptext44 5F50                                __ptext36 4B82  
                              __ptext28 85E4                                __ptext61 58E4  
                              __ptext53 8290                                __ptext45 5132  
                              __ptext37 801C                                __ptext29 81EC  
                              __ptext70 5670                                __ptext62 53F0  
                              __ptext54 65E0                                __ptext46 0000  
                              __ptext38 7704                                __ptext71 823E  
                              __ptext63 7B40                                __ptext55 7422  
                              __ptext47 7C4C                                __ptext39 1244  
                              __ptext80 8B3A                                __ptext72 86E2  
                              __ptext64 6D42                                __ptext56 35B6  
                              __ptext48 86B2                                __ptext81 853A  
                              __ptext73 8CBC                                __ptext65 7852  
                              __ptext57 6C2A                                __ptext49 734E  
                              __ptext90 8364                                __ptext82 8E3E  
                              __ptext74 8DBE                                __ptext66 78F4  
                              __ptext58 6742                                __ptext91 807E  
                              __ptext83 8E46                                __ptext75 8C46  
                              __ptext67 6B06                                __ptext59 3FDC  
                              __ptext92 88BE                                __ptext84 8E4E  
                              __ptext76 8D0E                                __ptext68 8CD8  
                              __ptext93 88E6                                __ptext85 4E6E  
                              __ptext77 8DDC                                __ptext69 765A  
                              __ptext94 7F56                                __ptext86 6118  
                              __ptext78 847A                                __ptext95 890E  
                              __ptext87 831E                                __ptext79 8576  
                              __ptext96 8936                                __ptext88 2DFA  
                              __ptext97 87C8                                __ptext89 25D0  
                              __ptext98 895E                                __ptext99 83AA  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 765A  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 084E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 01D4  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 8DBE  
                              _spi_link 00A1                                _wdtdelay 8138  
            __end_of_UART2_Transmit_ISR 87C8                                _vfprintf 7704  
              __end_of_convert_adc_data 765A              __end_of_PWM8_LoadDutyValue 84BC  
  __end_of_INT1_DefaultInterruptHandler 8E78   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8E76                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8C28  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 8E64                      _EXT_INT_Initialize 864E  
  __end_of_TMR6_DefaultInterruptHandler 8436   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 83F0    __end_of_ADCC_DefaultInterruptHandler 8E7C  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8E7A  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 881E          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8DCE                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7852                   __end_of_mode_lamp_dim 8D26  
               __end_of_adc_int_handler 8E7E                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6F64  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 8E56  
                __end_of_get_raw_result 8C46                        _send_lcd_cmd_dma 81EC  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 89D6               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8846                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 8E76          __end_of_PIN_MANAGER_Initialize 7AB0  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6B06  
               _eaDogM_WriteStringAtPos 85E4                           _get_vterm_ptr 8742  
                        _check_adc_scan 8E4E               __size_of_UART2_Initialize 005E  
