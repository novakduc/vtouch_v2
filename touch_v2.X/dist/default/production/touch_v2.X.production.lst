

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec  3 01:53:45 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=4,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=4,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=4,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=4,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   177                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   178                           	psect	text151,global,reloc=4,class=CODE,delta=1
   179                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   180                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   181  0000                     
   182                           ; Version 2.10
   183                           ; Generated 31/07/2019 GMT
   184                           ; 
   185                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   186                           ; All rights reserved.
   187                           ; 
   188                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   189                           ; 
   190                           ; Redistribution and use in source and binary forms, with or without modification, are
   191                           ; permitted provided that the following conditions are met:
   192                           ; 
   193                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   194                           ;        conditions and the following disclaimer.
   195                           ; 
   196                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   197                           ;        of conditions and the following disclaimer in the documentation and/or other
   198                           ;        materials provided with the distribution.
   199                           ; 
   200                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   201                           ;        software without specific prior written permission.
   202                           ; 
   203                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   204                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   205                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   206                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   207                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   208                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   209                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   210                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   211                           ; 
   212                           ; 
   213                           ; Code-generator required, PIC18F57K42 Definitions
   214                           ; 
   215                           ; SFR Addresses
   216  0000                     
   217 ;;_k	offset	0
   218 ;;_j	offset	1
   219 ;;_i	offset	2
   220 ;;_inp_index	offset	3
   221 ;;_mode	offset	4
   222 ;;_channel	offset=-1 (param)
   223 ;;_s	offset=-2 (param)
   224 ;;_cmd	offset=-1 (param)
   225 ;;_cmd	offset=-1 (param)
   226 ;;_data	offset=-1 (param)
   227 ;;__this	offset=-2 (param)
   228 ;;_h	offset=-1 (param)
   229 ;;_h	offset=-1 (param)
   230 ;;_i	offset=-1 (param)
   231 ;;_cmd	offset=-1 (param)
   232 ;;_i	offset	0
   233 ;;_chan	offset=-1 (param)
   234 ;;_to_what	offset=-2 (param)
   235 ;;_u	offset	0
   236 ;;_s	offset=-2 (param)
   237 ;;_index	offset=-1 (param)
   238 ;;_arg	offset	0
   239 ;;_exp	offset	4
   240 ;;_sign	offset=-1 (param)
   241 ;;_val	offset=-5 (param)
   242 ;;_h	offset=-1 (param)
   243 ;;_flipper	offset=-1 (param)
   244 ;;_f	offset	0
   245 ;;_ap	offset	6
   246 ;;_s	offset=-3 (param)
   247 ;;_fmt	offset=-5 (param)
   248 ;;_line	offset=-1 (param)
   249 ;;_vterm	offset=-2 (param)
   250 ;;_numMilliseconds	offset=-2 (param)
   251 ;;_vterm	offset=-1 (param)
   252 ;;_r	offset=-1 (param)
   253 ;;_c	offset=-2 (param)
   254 ;;_strPtr	offset=-4 (param)
   255 ;;_strPtr	offset=-1 (param)
   256 ;;_delay	offset=-4 (param)
   257 ;;_strPtr	offset=-2 (param)
   258 ;;__this	offset=-2 (param)
   259 ;;_clearBuffer	offset=-3 (param)
   260 ;;_s	offset	0
   261 ;;_k	offset	2
   262 ;;_dest	offset=-2 (param)
   263 ;;_c	offset=-4 (param)
   264 ;;_n	offset=-6 (param)
   265 ;;_ap	offset	0
   266 ;;_fmt	offset=-3 (param)
   267 ;;_cfmt	offset	0
   268 ;;_fp	offset=-2 (param)
   269 ;;_fmt	offset=-4 (param)
   270 ;;_ap	offset=-6 (param)
   271 ;;_vfpfcnvrt$4663	offset	0
   272 ;;_vfpfcnvrt$4669	offset	2
   273 ;;_vfpfcnvrt$4662	offset	4
   274 ;;_llu	offset	6
   275 ;;_ll	offset	14
   276 ;;_f	offset	22
   277 ;;_ct	offset	26
   278 ;;_cp	offset	29
   279 ;;_c	offset	31
   280 ;;_fp	offset=-2 (param)
   281 ;;_fmt	offset=-4 (param)
   282 ;;_ap	offset=-6 (param)
   283 ;;_xtoa$4648	offset	0
   284 ;;_xtoa$4647	offset	2
   285 ;;_n	offset	4
   286 ;;_c	offset	12
   287 ;;_i	offset	14
   288 ;;_w	offset	16
   289 ;;_p	offset	18
   290 ;;_fp	offset=-2 (param)
   291 ;;_d	offset=-10 (param)
   292 ;;_x	offset=-11 (param)
   293 ;;_toupper$5308	offset	0
   294 ;;_c	offset=-2 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4627	offset	0
   311 ;;_efgtoa$4626	offset	2
   312 ;;_efgtoa$4625	offset	4
   313 ;;_efgtoa$4621	offset	6
   314 ;;_efgtoa$4617	offset	8
   315 ;;_efgtoa$4616	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$5293	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_f1	offset=-4 (param)
   355 ;;_ff1	offset=-4 (param)
   356 ;;_ff2	offset=-8 (param)
   357 ;;_ff1	offset=-4 (param)
   358 ;;_ff2	offset=-8 (param)
   359 ;;_grs	offset	0
   360 ;;_rem	offset	4
   361 ;;_new_exp	offset	8
   362 ;;_aexp	offset	10
   363 ;;_bexp	offset	11
   364 ;;_sign	offset	12
   365 ;;_b	offset=-4 (param)
   366 ;;_a	offset=-8 (param)
   367 ;;_sign	offset	0
   368 ;;_counter	offset	1
   369 ;;_dividend	offset=-2 (param)
   370 ;;_divisor	offset=-4 (param)
   371 ;;_quotient	offset	0
   372 ;;_sign	offset	2
   373 ;;_counter	offset	3
   374 ;;_dividend	offset=-2 (param)
   375 ;;_divisor	offset=-4 (param)
   376 ;;_dtoa$4593	offset	0
   377 ;;_n	offset	2
   378 ;;_i	offset	10
   379 ;;_s	offset	12
   380 ;;_w	offset	14
   381 ;;_p	offset	16
   382 ;;_fp	offset=-2 (param)
   383 ;;_d	offset=-10 (param)
   384 ;;_a	offset=-2 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-8 (param)
   388 ;;_divisor	offset=-16 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	8
   391 ;;_counter	offset	9
   392 ;;_dividend	offset=-8 (param)
   393 ;;_divisor	offset=-16 (param)
   394 ;;_w	offset	0
   395 ;;_fp	offset=-2 (param)
   396 ;;_c	offset=-3 (param)
   397 ;;_w	offset	0
   398 ;;_i	offset	2
   399 ;;_fp	offset=-2 (param)
   400 ;;_buf	offset=-4 (param)
   401 ;;_p	offset=-6 (param)
   402 ;;_a	offset	0
   403 ;;_s	offset=-2 (param)
   404 ;;_i	offset	0
   405 ;;_c	offset	2
   406 ;;_s	offset=-2 (param)
   407 ;;_fp	offset=-4 (param)
   408 ;;_c	offset=-2 (param)
   409 ;;_fp	offset=-4 (param)
   410 ;;_c	offset=-1 (param)
   411 ;;__this	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_atoi$5146	offset	0
   414 ;;_atoi$5144	offset	2
   415 ;;_atoi$5145	offset	4
   416 ;;_n	offset	5
   417 ;;_neg	offset	7
   418 ;;_s	offset=-2 (param)
   419 ;;_isspace$5184	offset	0
   420 ;;_c	offset=-2 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_vterm	offset=-1 (param)
   423 ;;_new_response_info	offset=-1 (param)
   424 ;;_new_response_info	offset=-1 (param)
   425 ;;_level	offset=-2 (param)
   426 ;;_dutyValue	offset=-2 (param)
   427 ;;_timer	offset=-1 (param)
   428 ;;_timer	offset=-1 (param)
   429 ;;_count	offset=-3 (param)
   430 ;;_h	offset=-1 (param)
   431 ;;_lp_speed	offset	0
   432 ;;_new	offset=-4 (param)
   433 ;;_bn	offset=-5 (param)
   434 ;;_slow	offset=-6 (param)
   435 ;;_b	offset=-4 (param)
   436 ;;_a	offset=-8 (param)
   437 ;;_grs	offset	0
   438 ;;_bexp	offset	1
   439 ;;_aexp	offset	2
   440 ;;_signs	offset	3
   441 ;;_b	offset=-4 (param)
   442 ;;_a	offset=-8 (param)
   443 ;;_prod	offset	0
   444 ;;_grs	offset	4
   445 ;;_temp	offset	8
   446 ;;_bexp	offset	10
   447 ;;_aexp	offset	11
   448 ;;_sign	offset	12
   449 ;;_b	offset=-4 (param)
   450 ;;_a	offset=-8 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_state	offset	0
   458 ;;_InterruptHandler	offset=-3 (param)
   459 ;;_InterruptHandler	offset=-3 (param)
   460 ;;_InterruptHandler	offset=-3 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_i	offset	0
   463 ;;_sw_value	offset	1
   464 ;;_timerVal	offset=-2 (param)
   465 ;;_channel	offset=-1 (param)
   466 ;;_i	offset	0
   467                           
   468                           	psect	idataBANK0
   469  01874A                     __pidataBANK0:
   470                           	opt callstack 0
   471                           
   472                           ;initializer for _R
   473  01874A  0000               	dw	0
   474  01874C  0000               	dw	0
   475  01874E  0000               	dw	0
   476  018750  0000               	dw	0
   477  018752  0000               	dw	0
   478  018754  0000               	dw	0
   479  018756  0000               	dw	0
   480  018758  0000               	dw	0
   481  01875A  0000               	dw	0
   482  01875C  0000               	dw	0
   483  01875E  0000               	dw	0
   484  018760  0000               	dw	0
   485  018762  0000               	dw	0
   486  018764  0000               	dw	0
   487  018766  0000               	dw	0
   488  018768  0000               	dw	0
   489  01876A  0F67               	dw	3943
   490  01876C  0F8F               	dw	3983
   491  01876E  00                 	db	0
   492  01876F  0000               	dw	0
   493  018771  00                 	db	0
   494                           
   495                           ;initializer for _H
   496  018772  00                 	db	0
   497  018773  00                 	db	0
   498  018774  01                 	db	1
   499  018775  00                 	db	0
   500  018776  01                 	db	1
   501  018777  00                 	db	0
   502  018778  00                 	db	0
   503                           
   504                           	psect	idataBANK1
   505  018D76                     __pidataBANK1:
   506                           	opt callstack 0
   507                           
   508                           ;initializer for stoa@F1166
   509  018D76  28                 	db	40
   510  018D77  6E                 	db	110
   511  018D78  75                 	db	117
   512  018D79  6C                 	db	108
   513  018D7A  6C                 	db	108
   514  018D7B  29                 	db	41
   515  018D7C  00                 	db	0
   516                           
   517                           ;initializer for _port_data
   518  018D7D  FF                 	db	255
   519  018D7E  00                 	db	0
   520  018D7F  FF                 	db	255
   521  018D80  00                 	db	0
   522  018D81  FF                 	db	255
   523  018D82  00                 	db	0
   524  018D83  FF                 	db	255
   525  018D84  00                 	db	0
   526  018D85  FF                 	db	255
   527  018D86  00                 	db	0
   528  018D87  FF                 	db	255
   529  018D88  00                 	db	0
   530  018D89  FF                 	db	255
   531  018D8A  00                 	db	0
   532  018D8B  FF                 	db	255
   533  018D8C  00                 	db	0
   534                           
   535                           	psect	idataBANK2
   536  0174E0                     __pidataBANK2:
   537                           	opt callstack 0
   538                           
   539                           ;initializer for _V
   540  0174E0  00                 	db	0
   541  0174E1  00                 	db	0
   542  0174E2  00                 	db	0
   543  0174E3  00                 	db	0
   544  0174E4  00                 	db	0
   545  0174E5  00                 	db	0
   546  0174E6  00                 	db	0
   547  0174E7  00                 	db	0
   548  0174E8  00                 	db	0
   549  0174E9  00                 	db	0
   550  0174EA  00                 	db	0
   551  0174EB  00                 	db	0
   552  0174EC  00                 	db	0
   553  0174ED  00                 	db	0
   554  0174EE  00                 	db	0
   555  0174EF  00                 	db	0
   556  0174F0  00                 	db	0
   557  0174F1  00                 	db	0
   558  0174F2  00                 	db	0
   559  0174F3  00                 	db	0
   560  0174F4  00                 	db	0
   561  0174F5  00                 	db	0
   562  0174F6  00                 	db	0
   563  0174F7  00                 	db	0
   564  0174F8  00                 	db	0
   565  0174F9  00                 	db	0
   566  0174FA  00                 	db	0
   567  0174FB  00                 	db	0
   568  0174FC  00                 	db	0
   569  0174FD  00                 	db	0
   570  0174FE  00                 	db	0
   571  0174FF  00                 	db	0
   572  017500  00                 	db	0
   573  017501  00                 	db	0
   574  017502  00                 	db	0
   575  017503  00                 	db	0
   576  017504  00                 	db	0
   577  017505  00                 	db	0
   578  017506  00                 	db	0
   579  017507  00                 	db	0
   580  017508  00                 	db	0
   581  017509  00                 	db	0
   582  01750A  00                 	db	0
   583  01750B  00                 	db	0
   584  01750C  00                 	db	0
   585  01750D  00                 	db	0
   586  01750E  00                 	db	0
   587  01750F  00                 	db	0
   588  017510  00                 	db	0
   589  017511  00                 	db	0
   590  017512  00                 	db	0
   591  017513  00                 	db	0
   592  017514  00                 	db	0
   593  017515  00                 	db	0
   594  017516  00                 	db	0
   595  017517  00                 	db	0
   596  017518  00                 	db	0
   597  017519  00                 	db	0
   598  01751A  00                 	db	0
   599  01751B  00                 	db	0
   600  01751C  00                 	db	0
   601  01751D  00                 	db	0
   602  01751E  00                 	db	0
   603  01751F  00                 	db	0
   604  017520  00                 	db	0
   605  017521  00                 	db	0
   606  017522  00                 	db	0
   607  017523  00                 	db	0
   608  017524  00                 	db	0
   609  017525  00                 	db	0
   610  017526  00                 	db	0
   611  017527  00                 	db	0
   612  017528  00                 	db	0
   613  017529  00                 	db	0
   614  01752A  00                 	db	0
   615  01752B  00                 	db	0
   616  01752C  00                 	db	0
   617  01752D  00                 	db	0
   618  01752E  00                 	db	0
   619  01752F  00                 	db	0
   620  017530  00                 	db	0
   621  017531  00                 	db	0
   622  017532  00                 	db	0
   623  017533  00                 	db	0
   624  017534  00                 	db	0
   625  017535  00                 	db	0
   626  017536  00                 	db	0
   627  017537  00                 	db	0
   628  017538  00                 	db	0
   629  017539  00                 	db	0
   630  01753A  00                 	db	0
   631  01753B  00                 	db	0
   632  01753C  00                 	db	0
   633  01753D  00                 	db	0
   634  01753E  00                 	db	0
   635  01753F  00                 	db	0
   636  017540  00                 	db	0
   637  017541  00                 	db	0
   638  017542  00                 	db	0
   639  017543  00                 	db	0
   640  017544  00                 	db	0
   641  017545  00                 	db	0
   642  017546  00                 	db	0
   643  017547  00                 	db	0
   644  017548  00                 	db	0
   645  017549  00                 	db	0
   646  01754A  00                 	db	0
   647  01754B  00                 	db	0
   648  01754C  00                 	db	0
   649  01754D  00                 	db	0
   650  01754E  00                 	db	0
   651  01754F  00                 	db	0
   652  017550  00                 	db	0
   653  017551  00                 	db	0
   654  017552  00                 	db	0
   655  017553  00                 	db	0
   656  017554  00                 	db	0
   657  017555  00                 	db	0
   658  017556  00                 	db	0
   659  017557  00                 	db	0
   660  017558  00                 	db	0
   661  017559  00                 	db	0
   662  01755A  00                 	db	0
   663  01755B  00                 	db	0
   664  01755C  00                 	db	0
   665  01755D  00                 	db	0
   666  01755E  00                 	db	0
   667  01755F  00                 	db	0
   668  017560  00                 	db	0
   669  017561  0000               	dw	0
   670  017563  0000               	dw	0
   671  017565  0000               	dw	0
   672  017567  0000               	dw	0
   673  017569  00                 	db	0
   674  01756A  00                 	db	0
   675  01756B  00                 	db	0
   676  01756C  00                 	db	0
   677  01756D  00                 	db	0
   678  01756E  00                 	db	0
   679  01756F  0000               	dw	0
   680  017571  0000               	dw	0
   681  017573  0000               	dw	0
   682  017575  0000               	dw	0
   683  017577  0000               	dw	0
   684  017579  0000               	dw	0
   685  01757B  00                 	db	0
   686  01757C  00                 	db	0
   687  01757D  00                 	db	0
   688  01757E  00                 	db	0
   689  01757F  00                 	db	0
   690  017580  00                 	db	0
   691  017581  00                 	db	0
   692  017582  00                 	db	0
   693  017583  00                 	db	0
   694  017584  00                 	db	0
   695  017585  0000               	dw	0
   696  017587  0000               	dw	0
   697  017589  2D                 	db	45
   698  01758A  00                 	db	0
   699  01758B  00                 	db	0
   700  01758C  0000               	dw	0
   701  01758E  0000               	dw	0
   702  017590  0000               	dw	0
   703  017592  0000               	dw	0
   704  017594  0000               	dw	0
   705  017596  0000               	dw	0
   706  017598  0000               	dw	0
   707  01759A  0000               	dw	0
   708                           
   709                           	psect	mediumconst
   710  00FDC4                     __pmediumconst:
   711                           	opt callstack 0
   712  00FDC4  00                 	db	0
   713  00FDC5                     _T:
   714                           	opt callstack 0
   715  00FDC5  63                 	db	99
   716  00FDC6  6F                 	db	111
   717  00FDC7  6D                 	db	109
   718  00FDC8  6D                 	db	109
   719  00FDC9  61                 	db	97
   720  00FDCA  6E                 	db	110
   721  00FDCB  64                 	db	100
   722  00FDCC  73                 	db	115
   723  00FDCD  20                 	db	32
   724  00FDCE  31                 	db	49
   725  00FDCF  00                 	db	0
   726  00FDD0  00                 	db	0
   727  00FDD1  00                 	db	0
   728  00FDD2  00                 	db	0
   729  00FDD3  00                 	db	0
   730  00FDD4  00                 	db	0
   731  00FDD5  00                 	db	0
   732  00FDD6  00                 	db	0
   733  00FDD7  64                 	db	100
   734  00FDD8  69                 	db	105
   735  00FDD9  73                 	db	115
   736  00FDDA  70                 	db	112
   737  00FDDB  6C                 	db	108
   738  00FDDC  61                 	db	97
   739  00FDDD  79                 	db	121
   740  00FDDE  73                 	db	115
   741  00FDDF  20                 	db	32
   742  00FDE0  31                 	db	49
   743  00FDE1  00                 	db	0
   744  00FDE2  00                 	db	0
   745  00FDE3  00                 	db	0
   746  00FDE4  00                 	db	0
   747  00FDE5  00                 	db	0
   748  00FDE6  00                 	db	0
   749  00FDE7  00                 	db	0
   750  00FDE8  00                 	db	0
   751  00FDE9  63                 	db	99
   752  00FDEA  6F                 	db	111
   753  00FDEB  6D                 	db	109
   754  00FDEC  6D                 	db	109
   755  00FDED  61                 	db	97
   756  00FDEE  6E                 	db	110
   757  00FDEF  64                 	db	100
   758  00FDF0  73                 	db	115
   759  00FDF1  20                 	db	32
   760  00FDF2  32                 	db	50
   761  00FDF3  00                 	db	0
   762  00FDF4  00                 	db	0
   763  00FDF5  00                 	db	0
   764  00FDF6  00                 	db	0
   765  00FDF7  00                 	db	0
   766  00FDF8  00                 	db	0
   767  00FDF9  00                 	db	0
   768  00FDFA  00                 	db	0
   769  00FDFB  64                 	db	100
   770  00FDFC  69                 	db	105
   771  00FDFD  73                 	db	115
   772  00FDFE  70                 	db	112
   773  00FDFF  6C                 	db	108
   774  00FE00  61                 	db	97
   775  00FE01  79                 	db	121
   776  00FE02  73                 	db	115
   777  00FE03  20                 	db	32
   778  00FE04  32                 	db	50
   779  00FE05  00                 	db	0
   780  00FE06  00                 	db	0
   781  00FE07  00                 	db	0
   782  00FE08  00                 	db	0
   783  00FE09  00                 	db	0
   784  00FE0A  00                 	db	0
   785  00FE0B  00                 	db	0
   786  00FE0C  00                 	db	0
   787  00FE0D  63                 	db	99
   788  00FE0E  6F                 	db	111
   789  00FE0F  6D                 	db	109
   790  00FE10  6D                 	db	109
   791  00FE11  61                 	db	97
   792  00FE12  6E                 	db	110
   793  00FE13  64                 	db	100
   794  00FE14  73                 	db	115
   795  00FE15  20                 	db	32
   796  00FE16  33                 	db	51
   797  00FE17  00                 	db	0
   798  00FE18  00                 	db	0
   799  00FE19  00                 	db	0
   800  00FE1A  00                 	db	0
   801  00FE1B  00                 	db	0
   802  00FE1C  00                 	db	0
   803  00FE1D  00                 	db	0
   804  00FE1E  00                 	db	0
   805  00FE1F  64                 	db	100
   806  00FE20  69                 	db	105
   807  00FE21  73                 	db	115
   808  00FE22  70                 	db	112
   809  00FE23  6C                 	db	108
   810  00FE24  61                 	db	97
   811  00FE25  79                 	db	121
   812  00FE26  73                 	db	115
   813  00FE27  20                 	db	32
   814  00FE28  33                 	db	51
   815  00FE29  00                 	db	0
   816  00FE2A  00                 	db	0
   817  00FE2B  00                 	db	0
   818  00FE2C  00                 	db	0
   819  00FE2D  00                 	db	0
   820  00FE2E  00                 	db	0
   821  00FE2F  00                 	db	0
   822  00FE30  00                 	db	0
   823  00FE31  63                 	db	99
   824  00FE32  6F                 	db	111
   825  00FE33  6D                 	db	109
   826  00FE34  6D                 	db	109
   827  00FE35  61                 	db	97
   828  00FE36  6E                 	db	110
   829  00FE37  64                 	db	100
   830  00FE38  73                 	db	115
   831  00FE39  20                 	db	32
   832  00FE3A  34                 	db	52
   833  00FE3B  00                 	db	0
   834  00FE3C  00                 	db	0
   835  00FE3D  00                 	db	0
   836  00FE3E  00                 	db	0
   837  00FE3F  00                 	db	0
   838  00FE40  00                 	db	0
   839  00FE41  00                 	db	0
   840  00FE42  00                 	db	0
   841  00FE43  64                 	db	100
   842  00FE44  69                 	db	105
   843  00FE45  73                 	db	115
   844  00FE46  70                 	db	112
   845  00FE47  6C                 	db	108
   846  00FE48  61                 	db	97
   847  00FE49  79                 	db	121
   848  00FE4A  73                 	db	115
   849  00FE4B  20                 	db	32
   850  00FE4C  34                 	db	52
   851  00FE4D  00                 	db	0
   852  00FE4E  00                 	db	0
   853  00FE4F  00                 	db	0
   854  00FE50  00                 	db	0
   855  00FE51  00                 	db	0
   856  00FE52  00                 	db	0
   857  00FE53  00                 	db	0
   858  00FE54  00                 	db	0
   859  00FE55                     __end_of_T:
   860                           	opt callstack 0
   861  0000                     _IVTADL	set	14493
   862  0000                     _IVTADH	set	14494
   863  0000                     _IVTADU	set	14495
   864  0000                     _PIR4bits	set	14756
   865  0000                     _PIE8bits	set	14744
   866  0000                     _PIR8bits	set	14760
   867  0000                     _SCANPR	set	14839
   868  0000                     _DMA2PR	set	14836
   869  0000                     _DMA1PR	set	14835
   870  0000                     _MAINPR	set	14834
   871  0000                     _ISRPR	set	14833
   872  0000                     _PIE2bits	set	14738
   873  0000                     _PIR2bits	set	14754
   874  0000                     _PIE9bits	set	14745
   875  0000                     _PIR9bits	set	14761
   876  0000                     _PIE6bits	set	14742
   877  0000                     _PIE3bits	set	14739
   878  0000                     _PMD7	set	14791
   879  0000                     _PMD6	set	14790
   880  0000                     _PMD5	set	14789
   881  0000                     _PMD4	set	14788
   882  0000                     _PMD3	set	14787
   883  0000                     _PMD2	set	14786
   884  0000                     _PMD1	set	14785
   885  0000                     _PMD0	set	14784
   886  0000                     _OSCTUNE	set	14814
   887  0000                     _OSCFRQ	set	14815
   888  0000                     _OSCEN	set	14813
   889  0000                     _OSCCON3	set	14811
   890  0000                     _OSCCON1	set	14809
   891  0000                     _IPR8bits	set	14728
   892  0000                     _IPR9bits	set	14729
   893  0000                     _IPR5bits	set	14725
   894  0000                     _IPR1bits	set	14721
   895  0000                     _IPR3bits	set	14723
   896  0000                     _IPR6bits	set	14726
   897  0000                     _IPR2bits	set	14722
   898  0000                     _PIE5bits	set	14741
   899  0000                     _PIE1bits	set	14737
   900  0000                     _PIR5bits	set	14757
   901  0000                     _PIR1bits	set	14753
   902  0000                     _PLLR	set	118496
   903  0000                     _SPI1SDIPPS	set	15071
   904  0000                     _U1RXPPS	set	15077
   905  0000                     _RC6PPS	set	14870
   906  0000                     _RC5PPS	set	14869
   907  0000                     _INT1PPS	set	15041
   908  0000                     _RD1PPS	set	14873
   909  0000                     _INT0PPS	set	15040
   910  0000                     _RC3PPS	set	14867
   911  0000                     _RB6PPS	set	14862
   912  0000                     _SPI1SCKPPS	set	15070
   913  0000                     _U2RXPPS	set	15080
   914  0000                     _SLRCONF	set	14995
   915  0000                     _SLRCONE	set	14979
   916  0000                     _SLRCOND	set	14963
   917  0000                     _SLRCONC	set	14947
   918  0000                     _SLRCONB	set	14931
   919  0000                     _SLRCONA	set	14915
   920  0000                     _ODCOND	set	14962
   921  0000                     _ODCONC	set	14946
   922  0000                     _ODCONB	set	14930
   923  0000                     _ODCONA	set	14914
   924  0000                     _ODCONF	set	14994
   925  0000                     _ODCONE	set	14978
   926  0000                     _WPUC	set	14945
   927  0000                     _WPUA	set	14913
   928  0000                     _WPUB	set	14929
   929  0000                     _WPUE	set	14977
   930  0000                     _WPUF	set	14993
   931  0000                     _WPUD	set	14961
   932  0000                     _ANSELA	set	14912
   933  0000                     _ANSELF	set	14992
   934  0000                     _ANSELE	set	14976
   935  0000                     _ANSELB	set	14928
   936  0000                     _ANSELC	set	14944
   937  0000                     _ANSELD	set	14960
   938  0000                     _DMA2SSA	set	15321
   939  0000                     _DMA1SSA	set	15353
   940  0000                     _DMA2DSZ	set	15310
   941  0000                     _DMA2SSZ	set	15319
   942  0000                     _DMA2DSA	set	15312
   943  0000                     _DMA1DSZ	set	15342
   944  0000                     _DMA1SSZ	set	15351
   945  0000                     _DMA1DSA	set	15344
   946  0000                     _DMA1CON0bits	set	15356
   947  0000                     _DMA1CON1bits	set	15357
   948  0000                     _DMA2CON0	set	15324
   949  0000                     _DMA2AIRQ	set	15326
   950  0000                     _DMA2SIRQ	set	15327
   951  0000                     _DMA2CON1	set	15325
   952  0000                     _DMA1CON0	set	15356
   953  0000                     _DMA1AIRQ	set	15358
   954  0000                     _DMA1SIRQ	set	15359
   955  0000                     _DMA1CON1	set	15357
   956  0000                     _CLKRCON	set	15589
   957  0000                     _CLKRCLK	set	15590
   958  0000                     _SPI1INTFbits	set	15642
   959  0000                     _SPI1RXB	set	15632
   960  0000                     _SPI1TXB	set	15633
   961  0000                     _SPI1TCNTL	set	15634
   962  0000                     _SPI1CON0	set	15636
   963  0000                     _SPI1CLK	set	15644
   964  0000                     _SPI1BAUD	set	15641
   965  0000                     _SPI1CON2	set	15638
   966  0000                     _SPI1CON1	set	15637
   967  0000                     _U2RXB	set	15824
   968  0000                     _U2TXB	set	15826
   969  0000                     _U2ERRIE	set	15842
   970  0000                     _U2ERRIR	set	15841
   971  0000                     _U2UIR	set	15840
   972  0000                     _U2FIFO	set	15839
   973  0000                     _U2BRGH	set	15838
   974  0000                     _U2BRGL	set	15837
   975  0000                     _U2CON2	set	15836
   976  0000                     _U2CON1	set	15835
   977  0000                     _U2CON0	set	15834
   978  0000                     _U2P3L	set	15832
   979  0000                     _U2P2L	set	15830
   980  0000                     _U2P1L	set	15828
   981  0000                     _U1RXB	set	15848
   982  0000                     _U1TXB	set	15850
   983  0000                     _U1ERRIE	set	15866
   984  0000                     _U1ERRIR	set	15865
   985  0000                     _U1UIR	set	15864
   986  0000                     _U1FIFO	set	15863
   987  0000                     _U1BRGH	set	15862
   988  0000                     _U1BRGL	set	15861
   989  0000                     _U1CON2	set	15860
   990  0000                     _U1CON1	set	15859
   991  0000                     _U1CON0	set	15858
   992  0000                     _U1P3H	set	15857
   993  0000                     _U1P3L	set	15856
   994  0000                     _U1P2H	set	15855
   995  0000                     _U1P2L	set	15854
   996  0000                     _U1P1H	set	15853
   997  0000                     _U1P1L	set	15852
   998  0000                     _FVRCON	set	16065
   999  0000                     _ADFLTRL	set	16102
  1000  0000                     _ADFLTRH	set	16103
  1001  0000                     _ADCON0bits	set	16120
  1002  0000                     _ADCON0	set	16120
  1003  0000                     _ADCLK	set	16127
  1004  0000                     _ADACT	set	16126
  1005  0000                     _ADREF	set	16125
  1006  0000                     _ADSTAT	set	16124
  1007  0000                     _ADCON3	set	16123
  1008  0000                     _ADCON2	set	16122
  1009  0000                     _ADCON1	set	16121
  1010  0000                     _ADPREH	set	16119
  1011  0000                     _ADPREL	set	16118
  1012  0000                     _ADCAP	set	16117
  1013  0000                     _ADACQH	set	16116
  1014  0000                     _ADACQL	set	16115
  1015  0000                     _ADPCH	set	16113
  1016  0000                     _ADRPT	set	16108
  1017  0000                     _ADACCU	set	16106
  1018  0000                     _ADSTPTH	set	16101
  1019  0000                     _ADSTPTL	set	16100
  1020  0000                     _ADUTHH	set	16097
  1021  0000                     _ADUTHL	set	16096
  1022  0000                     _ADLTHH	set	16095
  1023  0000                     _ADLTHL	set	16094
  1024  0000                     _CCPTMRS1bits	set	16223
  1025  0000                     _PORTFbits	set	16335
  1026  0000                     _LATCbits	set	16316
  1027  0000                     _LATDbits	set	16317
  1028  0000                     _PORTBbits	set	16331
  1029  0000                     _T2CON	set	16300
  1030  0000                     _T2TMR	set	16298
  1031  0000                     _T2PR	set	16299
  1032  0000                     _T2RST	set	16303
  1033  0000                     _T2HLT	set	16301
  1034  0000                     _T2CLKCON	set	16302
  1035  0000                     _PWM8DCL	set	16224
  1036  0000                     _PWM8DCH	set	16225
  1037  0000                     _PWM8CON	set	16226
  1038  0000                     _LATEbits	set	16318
  1039  0000                     _T5CONbits	set	16282
  1040  0000                     _T5CON	set	16282
  1041  0000                     _TMR5L	set	16280
  1042  0000                     _TMR5H	set	16281
  1043  0000                     _T5CLK	set	16285
  1044  0000                     _T5GATE	set	16284
  1045  0000                     _T5GCON	set	16283
  1046  0000                     _T6CON	set	16276
  1047  0000                     _T6TMR	set	16274
  1048  0000                     _T6PR	set	16275
  1049  0000                     _T6RST	set	16279
  1050  0000                     _T6HLT	set	16277
  1051  0000                     _T6CLKCON	set	16278
  1052  0000                     _TRISD	set	16325
  1053  0000                     _TRISC	set	16324
  1054  0000                     _TRISB	set	16323
  1055  0000                     _TRISA	set	16322
  1056  0000                     _TRISF	set	16327
  1057  0000                     _TRISE	set	16326
  1058  0000                     _LATC	set	16316
  1059  0000                     _LATB	set	16315
  1060  0000                     _LATF	set	16319
  1061  0000                     _LATA	set	16314
  1062  0000                     _LATD	set	16317
  1063  0000                     _LATE	set	16318
  1064  0000                     _IVTLOCKbits	set	16340
  1065  0000                     _IVTLOCK	set	16340
  1066  0000                     _INTCON0bits	set	16338
  1067  0000                     _GIE	set	130711
  1068  00FE55                     
  1069                           ; BSR set to: 57
  1070  00FE55  20                 	db	32
  1071  00FE56  4D                 	db	77	;'M'
  1072  00FE57  65                 	db	101	;'e'
  1073  00FE58  73                 	db	115	;'s'
  1074  00FE59  67                 	db	103	;'g'
  1075  00FE5A  20                 	db	32
  1076  00FE5B  25                 	db	37
  1077  00FE5C  64                 	db	100	;'d'
  1078  00FE5D  20                 	db	32
  1079  00FE5E  53                 	db	83	;'S'
  1080  00FE5F  74                 	db	116	;'t'
  1081  00FE60  61                 	db	97	;'a'
  1082  00FE61  63                 	db	99	;'c'
  1083  00FE62  6B                 	db	107	;'k'
  1084  00FE63  20                 	db	32
  1085  00FE64  25                 	db	37
  1086  00FE65  64                 	db	100	;'d'
  1087  00FE66  20                 	db	32
  1088  00FE67  20                 	db	32
  1089  00FE68  20                 	db	32
  1090  00FE69  20                 	db	32
  1091  00FE6A  20                 	db	32
  1092  00FE6B  20                 	db	32
  1093  00FE6C  00                 	db	0
  1094  00FE6D                     STR_39:
  1095                           
  1096                           ; BSR set to: 57
  1097  00FE6D  20                 	db	32
  1098  00FE6E  20                 	db	32
  1099  00FE6F  20                 	db	32
  1100  00FE70  20                 	db	32
  1101  00FE71  20                 	db	32
  1102  00FE72  20                 	db	32
  1103  00FE73  20                 	db	32
  1104  00FE74  20                 	db	32
  1105  00FE75  20                 	db	32
  1106  00FE76  20                 	db	32
  1107  00FE77  20                 	db	32
  1108  00FE78  20                 	db	32
  1109  00FE79  20                 	db	32
  1110  00FE7A  20                 	db	32
  1111  00FE7B  20                 	db	32
  1112  00FE7C  20                 	db	32
  1113  00FE7D  20                 	db	32
  1114  00FE7E  20                 	db	32
  1115  00FE7F  00                 	db	0
  1116  00FE80                     STR_29:
  1117                           
  1118                           ; BSR set to: 57
  1119  00FE80  48                 	db	72	;'H'
  1120  00FE81  45                 	db	69	;'E'
  1121  00FE82  4C                 	db	76	;'L'
  1122  00FE83  50                 	db	80	;'P'
  1123  00FE84  20                 	db	32
  1124  00FE85  25                 	db	37
  1125  00FE86  73                 	db	115	;'s'
  1126  00FE87  20                 	db	32
  1127  00FE88  20                 	db	32
  1128  00FE89  20                 	db	32
  1129  00FE8A  20                 	db	32
  1130  00FE8B  20                 	db	32
  1131  00FE8C  20                 	db	32
  1132  00FE8D  20                 	db	32
  1133  00FE8E  20                 	db	32
  1134  00FE8F  20                 	db	32
  1135  00FE90  20                 	db	32
  1136  00FE91  20                 	db	32
  1137  00FE92  00                 	db	0
  1138  00FE93                     
  1139                           ; BSR set to: 57
  1140  00FE93  44                 	db	68	;'D'
  1141  00FE94  49                 	db	73	;'I'
  1142  00FE95  53                 	db	83	;'S'
  1143  00FE96  50                 	db	80	;'P'
  1144  00FE97  4C                 	db	76	;'L'
  1145  00FE98  41                 	db	65	;'A'
  1146  00FE99  59                 	db	89	;'Y'
  1147  00FE9A  20                 	db	32
  1148  00FE9B  25                 	db	37
  1149  00FE9C  73                 	db	115	;'s'
  1150  00FE9D  20                 	db	32
  1151  00FE9E  20                 	db	32
  1152  00FE9F  20                 	db	32
  1153  00FEA0  20                 	db	32
  1154  00FEA1  20                 	db	32
  1155  00FEA2  20                 	db	32
  1156  00FEA3  20                 	db	32
  1157  00FEA4  20                 	db	32
  1158  00FEA5  00                 	db	0
  1159  00FEA6                     STR_19:
  1160                           
  1161                           ; BSR set to: 57
  1162  00FEA6  52                 	db	82	;'R'
  1163  00FEA7  55                 	db	85	;'U'
  1164  00FEA8  4E                 	db	78	;'N'
  1165  00FEA9  20                 	db	32
  1166  00FEAA  20                 	db	32
  1167  00FEAB  20                 	db	32
  1168  00FEAC  20                 	db	32
  1169  00FEAD  20                 	db	32
  1170  00FEAE  20                 	db	32
  1171  00FEAF  20                 	db	32
  1172  00FEB0  20                 	db	32
  1173  00FEB1  20                 	db	32
  1174  00FEB2  20                 	db	32
  1175  00FEB3  20                 	db	32
  1176  00FEB4  20                 	db	32
  1177  00FEB5  20                 	db	32
  1178  00FEB6  20                 	db	32
  1179  00FEB7  20                 	db	32
  1180  00FEB8  00                 	db	0
  1181  00FEB9                     STR_12:
  1182                           
  1183                           ; BSR set to: 57
  1184  00FEB9  50                 	db	80	;'P'
  1185  00FEBA  56                 	db	86	;'V'
  1186  00FEBB  20                 	db	32
  1187  00FEBC  20                 	db	32
  1188  00FEBD  20                 	db	32
  1189  00FEBE  50                 	db	80	;'P'
  1190  00FEBF  57                 	db	87	;'W'
  1191  00FEC0  52                 	db	82	;'R'
  1192  00FEC1  20                 	db	32
  1193  00FEC2  25                 	db	37
  1194  00FEC3  33                 	db	51	;'3'
  1195  00FEC4  2E                 	db	46
  1196  00FEC5  32                 	db	50	;'2'
  1197  00FEC6  66                 	db	102	;'f'
  1198  00FEC7  20                 	db	32
  1199  00FEC8  20                 	db	32
  1200  00FEC9  20                 	db	32
  1201  00FECA  20                 	db	32
  1202  00FECB  00                 	db	0
  1203  00FECC                     STR_18:
  1204                           
  1205                           ; BSR set to: 57
  1206  00FECC  42                 	db	66	;'B'
  1207  00FECD  41                 	db	65	;'A'
  1208  00FECE  54                 	db	84	;'T'
  1209  00FECF  20                 	db	32
  1210  00FED0  20                 	db	32
  1211  00FED1  50                 	db	80	;'P'
  1212  00FED2  57                 	db	87	;'W'
  1213  00FED3  52                 	db	82	;'R'
  1214  00FED4  20                 	db	32
  1215  00FED5  25                 	db	37
  1216  00FED6  33                 	db	51	;'3'
  1217  00FED7  2E                 	db	46
  1218  00FED8  32                 	db	50	;'2'
  1219  00FED9  66                 	db	102	;'f'
  1220  00FEDA  20                 	db	32
  1221  00FEDB  20                 	db	32
  1222  00FEDC  20                 	db	32
  1223  00FEDD  20                 	db	32
  1224  00FEDE  00                 	db	0
  1225  00FEDF                     STR_14:
  1226                           
  1227                           ; BSR set to: 57
  1228  00FEDF  49                 	db	73	;'I'
  1229  00FEE0  4E                 	db	78	;'N'
  1230  00FEE1  56                 	db	86	;'V'
  1231  00FEE2  20                 	db	32
  1232  00FEE3  20                 	db	32
  1233  00FEE4  50                 	db	80	;'P'
  1234  00FEE5  57                 	db	87	;'W'
  1235  00FEE6  52                 	db	82	;'R'
  1236  00FEE7  20                 	db	32
  1237  00FEE8  25                 	db	37
  1238  00FEE9  33                 	db	51	;'3'
  1239  00FEEA  2E                 	db	46
  1240  00FEEB  32                 	db	50	;'2'
  1241  00FEEC  66                 	db	102	;'f'
  1242  00FEED  20                 	db	32
  1243  00FEEE  20                 	db	32
  1244  00FEEF  20                 	db	32
  1245  00FEF0  20                 	db	32
  1246  00FEF1  00                 	db	0
  1247  00FEF2                     STR_13:
  1248                           
  1249                           ; BSR set to: 57
  1250  00FEF2  4C                 	db	76	;'L'
  1251  00FEF3  4F                 	db	79	;'O'
  1252  00FEF4  41                 	db	65	;'A'
  1253  00FEF5  44                 	db	68	;'D'
  1254  00FEF6  20                 	db	32
  1255  00FEF7  50                 	db	80	;'P'
  1256  00FEF8  57                 	db	87	;'W'
  1257  00FEF9  52                 	db	82	;'R'
  1258  00FEFA  20                 	db	32
  1259  00FEFB  25                 	db	37
  1260  00FEFC  33                 	db	51	;'3'
  1261  00FEFD  2E                 	db	46
  1262  00FEFE  32                 	db	50	;'2'
  1263  00FEFF  66                 	db	102	;'f'
  1264  00FF00  20                 	db	32
  1265  00FF01  20                 	db	32
  1266  00FF02  20                 	db	32
  1267  00FF03  20                 	db	32
  1268  00FF04  00                 	db	0
  1269  00FF05                     STR_16:
  1270                           
  1271                           ; BSR set to: 57
  1272  00FF05  42                 	db	66	;'B'
  1273  00FF06  56                 	db	86	;'V'
  1274  00FF07  20                 	db	32
  1275  00FF08  25                 	db	37
  1276  00FF09  32                 	db	50	;'2'
  1277  00FF0A  2E                 	db	46
  1278  00FF0B  32                 	db	50	;'2'
  1279  00FF0C  66                 	db	102	;'f'
  1280  00FF0D  20                 	db	32
  1281  00FF0E  42                 	db	66	;'B'
  1282  00FF0F  41                 	db	65	;'A'
  1283  00FF10  20                 	db	32
  1284  00FF11  25                 	db	37
  1285  00FF12  32                 	db	50	;'2'
  1286  00FF13  2E                 	db	46
  1287  00FF14  32                 	db	50	;'2'
  1288  00FF15  66                 	db	102	;'f'
  1289  00FF16  20                 	db	32
  1290  00FF17  00                 	db	0
  1291  00FF18                     STR_17:
  1292                           
  1293                           ; BSR set to: 57
  1294  00FF18  43                 	db	67	;'C'
  1295  00FF19  56                 	db	86	;'V'
  1296  00FF1A  20                 	db	32
  1297  00FF1B  25                 	db	37
  1298  00FF1C  32                 	db	50	;'2'
  1299  00FF1D  2E                 	db	46
  1300  00FF1E  32                 	db	50	;'2'
  1301  00FF1F  66                 	db	102	;'f'
  1302  00FF20  20                 	db	32
  1303  00FF21  4C                 	db	76	;'L'
  1304  00FF22  41                 	db	65	;'A'
  1305  00FF23  20                 	db	32
  1306  00FF24  25                 	db	37
  1307  00FF25  32                 	db	50	;'2'
  1308  00FF26  2E                 	db	46
  1309  00FF27  32                 	db	50	;'2'
  1310  00FF28  66                 	db	102	;'f'
  1311  00FF29  20                 	db	32
  1312  00FF2A  00                 	db	0
  1313  00FF2B                     STR_15:
  1314                           
  1315                           ; BSR set to: 57
  1316  00FF2B  50                 	db	80	;'P'
  1317  00FF2C  56                 	db	86	;'V'
  1318  00FF2D  20                 	db	32
  1319  00FF2E  25                 	db	37
  1320  00FF2F  32                 	db	50	;'2'
  1321  00FF30  2E                 	db	46
  1322  00FF31  32                 	db	50	;'2'
  1323  00FF32  66                 	db	102	;'f'
  1324  00FF33  20                 	db	32
  1325  00FF34  50                 	db	80	;'P'
  1326  00FF35  41                 	db	65	;'A'
  1327  00FF36  20                 	db	32
  1328  00FF37  25                 	db	37
  1329  00FF38  32                 	db	50	;'2'
  1330  00FF39  2E                 	db	46
  1331  00FF3A  32                 	db	50	;'2'
  1332  00FF3B  66                 	db	102	;'f'
  1333  00FF3C  20                 	db	32
  1334  00FF3D  00                 	db	0
  1335  00FF3E                     STR_8:
  1336                           
  1337                           ; BSR set to: 57
  1338  00FF3E  20                 	db	32
  1339  00FF3F  56                 	db	86	;'V'
  1340  00FF40  54                 	db	84	;'T'
  1341  00FF41  45                 	db	69	;'E'
  1342  00FF42  52                 	db	82	;'R'
  1343  00FF43  4D                 	db	77	;'M'
  1344  00FF44  20                 	db	32
  1345  00FF45  23                 	db	35
  1346  00FF46  32                 	db	50	;'2'
  1347  00FF47  20                 	db	32
  1348  00FF48  20                 	db	32
  1349  00FF49  20                 	db	32
  1350  00FF4A  20                 	db	32
  1351  00FF4B  20                 	db	32
  1352  00FF4C  20                 	db	32
  1353  00FF4D  20                 	db	32
  1354  00FF4E  00                 	db	0
  1355  00FF4F                     STR_4:
  1356                           
  1357                           ; BSR set to: 57
  1358  00FF4F  20                 	db	32
  1359  00FF50  4E                 	db	78	;'N'
  1360  00FF51  53                 	db	83	;'S'
  1361  00FF52  41                 	db	65	;'A'
  1362  00FF53  53                 	db	83	;'S'
  1363  00FF54  50                 	db	80	;'P'
  1364  00FF55  4F                 	db	79	;'O'
  1365  00FF56  4F                 	db	79	;'O'
  1366  00FF57  4B                 	db	75	;'K'
  1367  00FF58  20                 	db	32
  1368  00FF59  20                 	db	32
  1369  00FF5A  20                 	db	32
  1370  00FF5B  20                 	db	32
  1371  00FF5C  20                 	db	32
  1372  00FF5D  20                 	db	32
  1373  00FF5E  20                 	db	32
  1374  00FF5F  00                 	db	0
  1375  00FF60                     STR_1:
  1376                           
  1377                           ; BSR set to: 57
  1378  00FF60  20                 	db	32
  1379  00FF61  4D                 	db	77	;'M'
  1380  00FF62  42                 	db	66	;'B'
  1381  00FF63  4D                 	db	77	;'M'
  1382  00FF64  43                 	db	67	;'C'
  1383  00FF65  20                 	db	32
  1384  00FF66  53                 	db	83	;'S'
  1385  00FF67  4F                 	db	79	;'O'
  1386  00FF68  4C                 	db	76	;'L'
  1387  00FF69  41                 	db	65	;'A'
  1388  00FF6A  52                 	db	82	;'R'
  1389  00FF6B  4D                 	db	77	;'M'
  1390  00FF6C  4F                 	db	79	;'O'
  1391  00FF6D  4E                 	db	78	;'N'
  1392  00FF6E  20                 	db	32
  1393  00FF6F  20                 	db	32
  1394  00FF70  00                 	db	0
  1395  00FF71                     STR_5:
  1396                           
  1397                           ; BSR set to: 57
  1398  00FF71  20                 	db	32
  1399  00FF72  53                 	db	83	;'S'
  1400  00FF73  45                 	db	69	;'E'
  1401  00FF74  51                 	db	81	;'Q'
  1402  00FF75  55                 	db	85	;'U'
  1403  00FF76  45                 	db	69	;'E'
  1404  00FF77  4E                 	db	78	;'N'
  1405  00FF78  43                 	db	67	;'C'
  1406  00FF79  45                 	db	69	;'E'
  1407  00FF7A  20                 	db	32
  1408  00FF7B  54                 	db	84	;'T'
  1409  00FF7C  45                 	db	69	;'E'
  1410  00FF7D  53                 	db	83	;'S'
  1411  00FF7E  54                 	db	84	;'T'
  1412  00FF7F  20                 	db	32
  1413  00FF80  20                 	db	32
  1414  00FF81  00                 	db	0
  1415  00FF82                     STR_11:
  1416                           
  1417                           ; BSR set to: 57
  1418  00FF82  25                 	db	37
  1419  00FF83  64                 	db	100	;'d'
  1420  00FF84  20                 	db	32
  1421  00FF85  25                 	db	37
  1422  00FF86  32                 	db	50	;'2'
  1423  00FF87  2E                 	db	46
  1424  00FF88  34                 	db	52	;'4'
  1425  00FF89  66                 	db	102	;'f'
  1426  00FF8A  2C                 	db	44
  1427  00FF8B  20                 	db	32
  1428  00FF8C  25                 	db	37
  1429  00FF8D  64                 	db	100	;'d'
  1430  00FF8E  20                 	db	32
  1431  00FF8F  20                 	db	32
  1432  00FF90  20                 	db	32
  1433  00FF91  23                 	db	35
  1434  00FF92  00                 	db	0
  1435  00FF93                     STR_9:
  1436                           
  1437                           ; BSR set to: 57
  1438  00FF93  25                 	db	37
  1439  00FF94  64                 	db	100	;'d'
  1440  00FF95  20                 	db	32
  1441  00FF96  25                 	db	37
  1442  00FF97  32                 	db	50	;'2'
  1443  00FF98  2E                 	db	46
  1444  00FF99  34                 	db	52	;'4'
  1445  00FF9A  66                 	db	102	;'f'
  1446  00FF9B  20                 	db	32
  1447  00FF9C  20                 	db	32
  1448  00FF9D  20                 	db	32
  1449  00FF9E  25                 	db	37
  1450  00FF9F  64                 	db	100	;'d'
  1451  00FFA0  20                 	db	32
  1452  00FFA1  20                 	db	32
  1453  00FFA2  00                 	db	0
  1454  00FFA3                     STR_33:
  1455                           
  1456                           ; BSR set to: 57
  1457  00FFA3  76                 	db	118	;'v'
  1458  00FFA4  74                 	db	116	;'t'
  1459  00FFA5  65                 	db	101	;'e'
  1460  00FFA6  72                 	db	114	;'r'
  1461  00FFA7  6D                 	db	109	;'m'
  1462  00FFA8  20                 	db	32
  1463  00FFA9  25                 	db	37
  1464  00FFAA  78                 	db	120	;'x'
  1465  00FFAB  3A                 	db	58	;':'
  1466  00FFAC  25                 	db	37
  1467  00FFAD  78                 	db	120	;'x'
  1468  00FFAE  20                 	db	32
  1469  00FFAF  20                 	db	32
  1470  00FFB0  20                 	db	32
  1471  00FFB1  00                 	db	0
  1472  00FFB2                     STR_2:
  1473                           
  1474                           ; BSR set to: 57
  1475  00FFB2  20                 	db	32
  1476  00FFB3  56                 	db	86	;'V'
  1477  00FFB4  65                 	db	101	;'e'
  1478  00FFB5  72                 	db	114	;'r'
  1479  00FFB6  73                 	db	115	;'s'
  1480  00FFB7  69                 	db	105	;'i'
  1481  00FFB8  6F                 	db	111	;'o'
  1482  00FFB9  6E                 	db	110	;'n'
  1483  00FFBA  20                 	db	32
  1484  00FFBB  25                 	db	37
  1485  00FFBC  73                 	db	115	;'s'
  1486  00FFBD  20                 	db	32
  1487  00FFBE  20                 	db	32
  1488  00FFBF  20                 	db	32
  1489  00FFC0  00                 	db	0
  1490  00FFC1                     STR_27:
  1491                           
  1492                           ; BSR set to: 57
  1493  00FFC1  44                 	db	68	;'D'
  1494  00FFC2  65                 	db	101	;'e'
  1495  00FFC3  63                 	db	99	;'c'
  1496  00FFC4  20                 	db	32
  1497  00FFC5  20                 	db	32
  1498  00FFC6  32                 	db	50	;'2'
  1499  00FFC7  20                 	db	32
  1500  00FFC8  32                 	db	50	;'2'
  1501  00FFC9  30                 	db	48	;'0'
  1502  00FFCA  31                 	db	49	;'1'
  1503  00FFCB  39                 	db	57	;'9'
  1504  00FFCC  00                 	db	0
  1505  00FFCD                     STR_31:
  1506                           
  1507                           ; BSR set to: 57
  1508  00FFCD  25                 	db	37
  1509  00FFCE  73                 	db	115	;'s'
  1510  00FFCF  20                 	db	32
  1511  00FFD0  20                 	db	32
  1512  00FFD1  20                 	db	32
  1513  00FFD2  20                 	db	32
  1514  00FFD3  20                 	db	32
  1515  00FFD4  20                 	db	32
  1516  00FFD5  20                 	db	32
  1517  00FFD6  00                 	db	0
  1518  00FFD7                     STR_28:
  1519                           
  1520                           ; BSR set to: 57
  1521  00FFD7  31                 	db	49	;'1'
  1522  00FFD8  37                 	db	55	;'7'
  1523  00FFD9  3A                 	db	58	;':'
  1524  00FFDA  35                 	db	53	;'5'
  1525  00FFDB  33                 	db	51	;'3'
  1526  00FFDC  3A                 	db	58	;':'
  1527  00FFDD  33                 	db	51	;'3'
  1528  00FFDE  39                 	db	57	;'9'
  1529  00FFDF  00                 	db	0
  1530  00FFE0                     STR_3:
  1531                           
  1532                           ; BSR set to: 57
  1533  00FFE0  30                 	db	48	;'0'
  1534  00FFE1  2E                 	db	46
  1535  00FFE2  39                 	db	57	;'9'
  1536  00FFE3  39                 	db	57	;'9'
  1537  00FFE4  34                 	db	52	;'4'
  1538  00FFE5  00                 	db	0
  1539  00FFE6                     STR_46:
  1540                           
  1541                           ; BSR set to: 57
  1542  00FFE6  49                 	db	73	;'I'
  1543  00FFE7  4E                 	db	78	;'N'
  1544  00FFE8  46                 	db	70	;'F'
  1545  00FFE9  00                 	db	0
  1546  00FFEA                     STR_50:
  1547                           
  1548                           ; BSR set to: 57
  1549  00FFEA  4E                 	db	78	;'N'
  1550  00FFEB  41                 	db	65	;'A'
  1551  00FFEC  4E                 	db	78	;'N'
  1552  00FFED  00                 	db	0
  1553  00FFEE                     STR_47:
  1554                           
  1555                           ; BSR set to: 57
  1556  00FFEE  69                 	db	105	;'i'
  1557  00FFEF  6E                 	db	110	;'n'
  1558  00FFF0  66                 	db	102	;'f'
  1559  00FFF1  00                 	db	0
  1560  00FFF2                     STR_51:
  1561                           
  1562                           ; BSR set to: 57
  1563  00FFF2  6E                 	db	110	;'n'
  1564  00FFF3  61                 	db	97	;'a'
  1565  00FFF4  6E                 	db	110	;'n'
  1566  00FFF5  00                 	db	0
  1567  00FFF6                     STR_54:
  1568                           
  1569                           ; BSR set to: 57
  1570  00FFF6  6C                 	db	108	;'l'
  1571  00FFF7  66                 	db	102	;'f'
  1572  00FFF8  00                 	db	0
  1573  00FFF9                     STR_25:
  1574                           
  1575                           ; BSR set to: 57
  1576  00FFF9  25                 	db	37
  1577  00FFFA  63                 	db	99	;'c'
  1578  00FFFB  00                 	db	0
  1579  00FFFC                     STR_24:
  1580                           
  1581                           ; BSR set to: 57
  1582  00FFFC  25                 	db	37
  1583  00FFFD  73                 	db	115	;'s'
  1584  00FFFE  00                 	db	0
  1585  0000                     
  1586                           ; #config settings
  1587  00FFFF  00                 	db	0	; dummy byte at the end
  1588  0000                     
  1589                           	psect	cinit
  1590  01716A                     __pcinit:
  1591                           	opt callstack 0
  1592  01716A                     start_initialization:
  1593                           	opt callstack 0
  1594  01716A                     __initialization:
  1595                           	opt callstack 0
  1596                           
  1597                           ; Initialize objects allocated to BANK2 (188 bytes)
  1598                           ; load TBLPTR registers with __pidataBANK2
  1599  01716A  0EE0               	movlw	low __pidataBANK2
  1600  01716C  6EF6               	movwf	tblptrl,c
  1601  01716E  0E74               	movlw	high __pidataBANK2
  1602  017170  6EF7               	movwf	tblptrh,c
  1603  017172  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1604  017174  6EF8               	movwf	tblptru,c
  1605  017176  EE00  F200         	lfsr	0,__pdataBANK2
  1606  01717A  EE20 F0BC          	lfsr	2,188
  1607  01717E                     copy_data0:
  1608  01717E  0009               	tblrd		*+
  1609  017180  006F FFD7 FFEE     	movff	tablat,postinc0
  1610  017186  50DD               	movf	postdec2,w,c
  1611  017188  50D9               	movf	fsr2l,w,c
  1612  01718A  E1F9               	bnz	copy_data0
  1613                           
  1614                           ; Initialize objects allocated to BANK1 (23 bytes)
  1615                           ; load TBLPTR registers with __pidataBANK1
  1616  01718C  0E76               	movlw	low __pidataBANK1
  1617  01718E  6EF6               	movwf	tblptrl,c
  1618  017190  0E8D               	movlw	high __pidataBANK1
  1619  017192  6EF7               	movwf	tblptrh,c
  1620  017194  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1621  017196  6EF8               	movwf	tblptru,c
  1622  017198  EE00  F1D4         	lfsr	0,__pdataBANK1
  1623  01719C  EE20 F017          	lfsr	2,23
  1624  0171A0                     copy_data1:
  1625  0171A0  0009               	tblrd		*+
  1626  0171A2  006F FFD7 FFEE     	movff	tablat,postinc0
  1627  0171A8  50DD               	movf	postdec2,w,c
  1628  0171AA  50D9               	movf	fsr2l,w,c
  1629  0171AC  E1F9               	bnz	copy_data1
  1630                           
  1631                           ; Initialize objects allocated to BANK0 (47 bytes)
  1632                           ; load TBLPTR registers with __pidataBANK0
  1633  0171AE  0E4A               	movlw	low __pidataBANK0
  1634  0171B0  6EF6               	movwf	tblptrl,c
  1635  0171B2  0E87               	movlw	high __pidataBANK0
  1636  0171B4  6EF7               	movwf	tblptrh,c
  1637  0171B6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1638  0171B8  6EF8               	movwf	tblptru,c
  1639  0171BA  EE00  F0C7         	lfsr	0,__pdataBANK0
  1640  0171BE  EE20 F02F          	lfsr	2,47
  1641  0171C2                     copy_data2:
  1642  0171C2  0009               	tblrd		*+
  1643  0171C4  006F FFD7 FFEE     	movff	tablat,postinc0
  1644  0171CA  50DD               	movf	postdec2,w,c
  1645  0171CC  50D9               	movf	fsr2l,w,c
  1646  0171CE  E1F9               	bnz	copy_data2
  1647                           
  1648                           ; Clear objects allocated to BANK7 (255 bytes)
  1649  0171D0  EE01  F300         	lfsr	0,__pbssBANK7
  1650  0171D4  EE20 F0FF          	lfsr	2,255
  1651  0171D8                     clear_0:
  1652  0171D8  6AEE               	clrf	postinc0,c
  1653  0171DA  50DD               	movf	postdec2,w,c
  1654  0171DC  50D9               	movf	fsr2l,w,c
  1655  0171DE  E1FC               	bnz	clear_0
  1656  0171E0  50DA               	movf	fsr2h,w,c
  1657  0171E2  E1FA               	bnz	clear_0
  1658                           
  1659                           ; Clear objects allocated to BANK6 (255 bytes)
  1660  0171E4  EE01  F200         	lfsr	0,__pbssBANK6
  1661  0171E8  EE20 F0FF          	lfsr	2,255
  1662  0171EC                     clear_1:
  1663  0171EC  6AEE               	clrf	postinc0,c
  1664  0171EE  50DD               	movf	postdec2,w,c
  1665  0171F0  50D9               	movf	fsr2l,w,c
  1666  0171F2  E1FC               	bnz	clear_1
  1667  0171F4  50DA               	movf	fsr2h,w,c
  1668  0171F6  E1FA               	bnz	clear_1
  1669                           
  1670                           ; Clear objects allocated to BANK5 (218 bytes)
  1671  0171F8  EE01  F100         	lfsr	0,__pbssBANK5
  1672  0171FC  0EDA               	movlw	218
  1673  0171FE                     clear_2:
  1674  0171FE  6AEE               	clrf	postinc0,c
  1675  017200  06E8               	decf	wreg,f,c
  1676  017202  E1FD               	bnz	clear_2
  1677                           
  1678                           ; Clear objects allocated to BANK4 (67 bytes)
  1679  017204  EE01  F000         	lfsr	0,__pbssBANK4
  1680  017208  0E43               	movlw	67
  1681  01720A                     clear_3:
  1682  01720A  6AEE               	clrf	postinc0,c
  1683  01720C  06E8               	decf	wreg,f,c
  1684  01720E  E1FD               	bnz	clear_3
  1685                           
  1686                           ; Clear objects allocated to BANK3 (215 bytes)
  1687  017210  EE00  F300         	lfsr	0,__pbssBANK3
  1688  017214  0ED7               	movlw	215
  1689  017216                     clear_4:
  1690  017216  6AEE               	clrf	postinc0,c
  1691  017218  06E8               	decf	wreg,f,c
  1692  01721A  E1FD               	bnz	clear_4
  1693                           
  1694                           ; Clear objects allocated to BANK2 (64 bytes)
  1695  01721C  EE00  F2BC         	lfsr	0,__pbssBANK2
  1696  017220  0E40               	movlw	64
  1697  017222                     clear_5:
  1698  017222  6AEE               	clrf	postinc0,c
  1699  017224  06E8               	decf	wreg,f,c
  1700  017226  E1FD               	bnz	clear_5
  1701                           
  1702                           ; Clear objects allocated to BANK1 (212 bytes)
  1703  017228  EE00  F100         	lfsr	0,__pbssBANK1
  1704  01722C  0ED4               	movlw	212
  1705  01722E                     clear_6:
  1706  01722E  6AEE               	clrf	postinc0,c
  1707  017230  06E8               	decf	wreg,f,c
  1708  017232  E1FD               	bnz	clear_6
  1709                           
  1710                           ; Clear objects allocated to BANK0 (103 bytes)
  1711  017234  EE00  F060         	lfsr	0,__pbssBANK0
  1712  017238  0E67               	movlw	103
  1713  01723A                     clear_7:
  1714  01723A  6AEE               	clrf	postinc0,c
  1715  01723C  06E8               	decf	wreg,f,c
  1716  01723E  E1FD               	bnz	clear_7
  1717                           
  1718                           ; Clear objects allocated to COMRAM (49 bytes)
  1719  017240  EE00  F001         	lfsr	0,__pbssCOMRAM
  1720  017244  0E31               	movlw	49
  1721  017246                     clear_8:
  1722  017246  6AEE               	clrf	postinc0,c
  1723  017248  06E8               	decf	wreg,f,c
  1724  01724A  E1FD               	bnz	clear_8
  1725                           
  1726                           ;
  1727                           ; Setup IVTBASE
  1728                           ;
  1729  01724C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1730  01724E  6ED5               	movwf	213,c
  1731  017250  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1732  017252  6ED6               	movwf	214,c
  1733  017254  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1734  017256  6ED7               	movwf	215,c
  1735  017258                     end_of_initialization:
  1736                           	opt callstack 0
  1737  017258                     __end_of__initialization:
  1738                           	opt callstack 0
  1739  017258  0100               	movlb	0
  1740  01725A  EFC1  F08E         	goto	_main	;jump to C main() function
  1741                           
  1742                           	psect	bssCOMRAM
  1743  000001                     __pbssCOMRAM:
  1744                           	opt callstack 0
  1745  000001                     _ADCC_ADTI_InterruptHandler:
  1746                           	opt callstack 0
  1747  000001                     	ds	3
  1748  000004                     _ADCC_ADI_InterruptHandler:
  1749                           	opt callstack 0
  1750  000004                     	ds	3
  1751  000007                     _UART1_TxInterruptHandler:
  1752                           	opt callstack 0
  1753  000007                     	ds	3
  1754  00000A                     _UART1_RxInterruptHandler:
  1755                           	opt callstack 0
  1756  00000A                     	ds	3
  1757  00000D                     _UART2_TxInterruptHandler:
  1758                           	opt callstack 0
  1759  00000D                     	ds	3
  1760  000010                     _UART2_RxInterruptHandler:
  1761                           	opt callstack 0
  1762  000010                     	ds	3
  1763  000013                     _INT1_InterruptHandler:
  1764                           	opt callstack 0
  1765  000013                     	ds	3
  1766  000016                     _INT0_InterruptHandler:
  1767                           	opt callstack 0
  1768  000016                     	ds	3
  1769  000019                     _nout:
  1770                           	opt callstack 0
  1771  000019                     	ds	2
  1772  00001B                     _width:
  1773                           	opt callstack 0
  1774  00001B                     	ds	2
  1775  00001D                     _prec:
  1776                           	opt callstack 0
  1777  00001D                     	ds	2
  1778  00001F                     _flags:
  1779                           	opt callstack 0
  1780  00001F                     	ds	2
  1781  000021                     TMR5_ISR@CountCallBack:
  1782                           	opt callstack 0
  1783  000021                     	ds	2
  1784  000023                     _timer5ReloadVal:
  1785                           	opt callstack 0
  1786  000023                     	ds	2
  1787  000025                     _mode_sw:
  1788                           	opt callstack 0
  1789  000025                     	ds	1
  1790  000026                     _uart2RxCount:
  1791                           	opt callstack 0
  1792  000026                     	ds	1
  1793  000027                     _uart2RxTail:
  1794                           	opt callstack 0
  1795  000027                     	ds	1
  1796  000028                     _uart2RxHead:
  1797                           	opt callstack 0
  1798  000028                     	ds	1
  1799  000029                     _uart2TxBufferRemaining:
  1800                           	opt callstack 0
  1801  000029                     	ds	1
  1802  00002A                     _uart2TxTail:
  1803                           	opt callstack 0
  1804  00002A                     	ds	1
  1805  00002B                     _uart2TxHead:
  1806                           	opt callstack 0
  1807  00002B                     	ds	1
  1808  00002C                     _uart1RxCount:
  1809                           	opt callstack 0
  1810  00002C                     	ds	1
  1811  00002D                     _uart1RxTail:
  1812                           	opt callstack 0
  1813  00002D                     	ds	1
  1814  00002E                     _uart1RxHead:
  1815                           	opt callstack 0
  1816  00002E                     	ds	1
  1817  00002F                     _uart1TxBufferRemaining:
  1818                           	opt callstack 0
  1819  00002F                     	ds	1
  1820  000030                     _uart1TxTail:
  1821                           	opt callstack 0
  1822  000030                     	ds	1
  1823  000031                     _uart1TxHead:
  1824                           	opt callstack 0
  1825  000031                     	ds	1
  1826                           
  1827                           	psect	bssBANK0
  1828  000060                     __pbssBANK0:
  1829                           	opt callstack 0
  1830  000060                     _S:
  1831                           	opt callstack 0
  1832  000060                     	ds	41
  1833  000089                     _tickCount:
  1834                           	opt callstack 0
  1835  000089                     	ds	24
  1836  0000A1                     _spi_link:
  1837                           	opt callstack 0
  1838  0000A1                     	ds	12
  1839  0000AD                     floorf@F524:
  1840                           	opt callstack 0
  1841  0000AD                     	ds	4
  1842  0000B1                     ___fpclassifyf@F463:
  1843                           	opt callstack 0
  1844  0000B1                     	ds	4
  1845  0000B5                     _utctime:
  1846                           	opt callstack 0
  1847  0000B5                     	ds	4
  1848  0000B9                     wdtdelay@dcount:
  1849                           	opt callstack 0
  1850  0000B9                     	ds	4
  1851  0000BD                     _P:
  1852                           	opt callstack 0
  1853  0000BD                     	ds	4
  1854  0000C1                     _TMR5_InterruptHandler:
  1855                           	opt callstack 0
  1856  0000C1                     	ds	3
  1857  0000C4                     _TMR6_InterruptHandler:
  1858                           	opt callstack 0
  1859  0000C4                     	ds	3
  1860                           
  1861                           	psect	dataBANK0
  1862  0000C7                     __pdataBANK0:
  1863                           	opt callstack 0
  1864  0000C7                     _R:
  1865                           	opt callstack 0
  1866  0000C7                     	ds	40
  1867  0000EF                     _H:
  1868                           	opt callstack 0
  1869  0000EF                     	ds	7
  1870                           
  1871                           	psect	bssBANK1
  1872  000100                     __pbssBANK1:
  1873                           	opt callstack 0
  1874  000100                     _C:
  1875                           	opt callstack 0
  1876  000100                     	ds	124
  1877  00017C                     _dbuf:
  1878                           	opt callstack 0
  1879  00017C                     	ds	80
  1880  0001CC                     _seed:
  1881                           	opt callstack 0
  1882  0001CC                     	ds	8
  1883                           
  1884                           	psect	dataBANK1
  1885  0001D4                     __pdataBANK1:
  1886                           	opt callstack 0
  1887  0001D4                     stoa@F1166:
  1888                           	opt callstack 0
  1889  0001D4                     	ds	7
  1890  0001DB                     _port_data:
  1891                           	opt callstack 0
  1892  0001DB                     	ds	16
  1893                           
  1894                           	psect	bssBANK2
  1895  0002BC                     __pbssBANK2:
  1896                           	opt callstack 0
  1897  0002BC                     _uart1TxBuffer:
  1898                           	opt callstack 0
  1899  0002BC                     	ds	64
  1900                           
  1901                           	psect	dataBANK2
  1902  000200                     __pdataBANK2:
  1903                           	opt callstack 0
  1904  000200                     _V:
  1905                           	opt callstack 0
  1906  000200                     	ds	188
  1907                           
  1908                           	psect	bssBANK3
  1909  000300                     __pbssBANK3:
  1910                           	opt callstack 0
  1911  000300                     lp_filter@smooth:
  1912                           	opt callstack 0
  1913  000300                     	ds	84
  1914  000354                     _uart2TxBuffer:
  1915                           	opt callstack 0
  1916  000354                     	ds	64
  1917  000394                     _ring_buf1:
  1918                           	opt callstack 0
  1919  000394                     	ds	67
  1920                           
  1921                           	psect	bssBANK4
  1922  000400                     __pbssBANK4:
  1923                           	opt callstack 0
  1924  000400                     _ring_buf2:
  1925                           	opt callstack 0
  1926  000400                     	ds	67
  1927                           
  1928                           	psect	bssBANK5
  1929  000500                     __pbssBANK5:
  1930                           	opt callstack 0
  1931  000500                     _D:
  1932                           	opt callstack 0
  1933  000500                     	ds	218
  1934                           
  1935                           	psect	bssBANK6
  1936  000600                     __pbssBANK6:
  1937                           	opt callstack 0
  1938  000600                     _uart1RxBuffer:
  1939                           	opt callstack 0
  1940  000600                     	ds	255
  1941                           
  1942                           	psect	bssBANK7
  1943  000700                     __pbssBANK7:
  1944                           	opt callstack 0
  1945  000700                     _uart2RxBuffer:
  1946                           	opt callstack 0
  1947  000700                     	ds	255
  1948                           
  1949                           	psect	cstackBANK1
  1950  0001EB                     __pcstackBANK1:
  1951                           	opt callstack 0
  1952  0001EB                     ??_TMR5_ISR:
  1953                           
  1954                           ; 1 bytes @ 0x0
  1955  0001EB                     	ds	4
  1956                           
  1957                           	psect	cstackBANK0
  1958  0000F6                     __pcstackBANK0:
  1959                           	opt callstack 0
  1960  0000F6                     ??_INT1_ISR:
  1961                           
  1962                           ; 1 bytes @ 0x0
  1963  0000F6                     	ds	4
  1964                           
  1965                           	psect	cstackCOMRAM
  1966  000052                     __pcstackCOMRAM:
  1967                           	opt callstack 0
  1968  000052                     ??_ADCC_ThresholdISR:
  1969  000052                     
  1970                           ; 1 bytes @ 0x0
  1971  000052                     	ds	5
  1972  000057                     ??_TMR6_ISR:
  1973                           
  1974                           ; 1 bytes @ 0x5
  1975  000057                     	ds	1
  1976  000058                     
  1977                           ; 1 bytes @ 0x6
  1978 ;;
  1979 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  1980 ;;
  1981 ;; *************** function _main *****************
  1982 ;; Defined at:
  1983 ;;		line 167 in file "main.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  k               1  [STACK] unsigned char 
  1988 ;;  j               1  [STACK] unsigned char 
  1989 ;;  i               1  [STACK] unsigned char 
  1990 ;;  inp_index       1  [STACK] unsigned char 
  1991 ;;  mode            1  [STACK] enum E17005
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1  [STACK] void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 1/1
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels required when called:   19
  2007 ;; This function calls:
  2008 ;;		_SYSTEM_Initialize
  2009 ;;		_StartTimer
  2010 ;;		_TimerDone
  2011 ;;		_WaitMs
  2012 ;;		_calc_model_data
  2013 ;;		_check_adc_scan
  2014 ;;		_check_enter_button
  2015 ;;		_check_help
  2016 ;;		_clear_adc_scan
  2017 ;;		_clear_hid_pflags
  2018 ;;		_convert_adc_data
  2019 ;;		_eaDogM_WriteCommand
  2020 ;;		_get_raw_result
  2021 ;;		_get_switch
  2022 ;;		_get_vterm_ptr
  2023 ;;		_hid_display
  2024 ;;		_init_display
  2025 ;;		_lp_filter
  2026 ;;		_mode_lamp_dim
  2027 ;;		_set_display_info
  2028 ;;		_set_vterm
  2029 ;;		_sprintf
  2030 ;;		_srand
  2031 ;;		_start_adc_scan
  2032 ;;		_start_switch_handler
  2033 ;;		_update_lcd
  2034 ;; This function is called by:
  2035 ;;		Startup code after reset
  2036 ;; This function uses a reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text0
  2040  011D82                     __ptext0:
  2041                           	opt callstack 0
  2042  011D82                     _main:
  2043                           	opt callstack 0
  2044                           
  2045                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2046  011D82  0E05               	movlw	5
  2047  011D84  26E1               	addwf	fsr1l,f,c
  2048  011D86  0E00               	movlw	0
  2049  011D88  22E2               	addwfc	fsr1h,f,c
  2050                           
  2051                           ;main.c: 169:  UI_STATES mode;;main.c: 170:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2052                           ;stkvar	_inp_index @ sp[(-5)+3]
  2053                           
  2054                           ;incstack = 0
  2055  011D8A  0EFE               	movlw	-2
  2056  011D8C  6AE3               	clrf	plusw1,c
  2057                           
  2058                           ;stkvar	_i @ sp[(-5)+2]
  2059  011D8E  0EFD               	movlw	-3
  2060  011D90  6AE3               	clrf	plusw1,c
  2061                           
  2062                           ;stkvar	_j @ sp[(-5)+1]
  2063  011D92  0EFC               	movlw	-4
  2064  011D94  6AE3               	clrf	plusw1,c
  2065  011D96  2AE3               	incf	plusw1,f,c
  2066                           
  2067                           ;stkvar	_k @ sp[(-5)+0]
  2068  011D98  0EFB               	movlw	-5
  2069  011D9A  6AE3               	clrf	plusw1,c
  2070  011D9C  82E3               	bsf	plusw1,1,c
  2071                           
  2072                           ;main.c: 173:  SYSTEM_Initialize();
  2073  011D9E  ECAE  F0C1         	call	_SYSTEM_Initialize	;wreg free
  2074                           
  2075                           ; BSR set to: 60
  2076                           ;main.c: 176:  (INTCON0bits.GIEH = 1);
  2077  011DA2  8ED2               	bsf	210,7,c	;volatile
  2078                           
  2079                           ; BSR set to: 60
  2080                           ;main.c: 179:  (INTCON0bits.GIEL = 1);
  2081  011DA4  8CD2               	bsf	210,6,c	;volatile
  2082                           
  2083                           ; BSR set to: 60
  2084                           ;main.c: 181:  V.ui_state = UI_STATE_INIT;
  2085  011DA6  0102               	movlb	2	; () banked
  2086  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2087                           
  2088                           ; BSR set to: 2
  2089                           ;main.c: 186:  WaitMs(300);
  2090  011DAA  0E2C               	movlw	44
  2091  011DAC  6EE6               	movwf	postinc1,c
  2092  011DAE  0E01               	movlw	1
  2093  011DB0  6EE6               	movwf	postinc1,c
  2094  011DB2  ECF3  F0C2         	call	_WaitMs	;wreg free
  2095                           
  2096                           ;main.c: 187:  if (PORTBbits.RB0) {
  2097  011DB6  A0CB               	btfss	203,0,c	;volatile
  2098  011DB8  D004               	goto	l10793
  2099                           
  2100                           ;main.c: 188:   mode = UI_STATE_HOST;
  2101                           ;stkvar	_mode @ sp[(-5)+4]
  2102  011DBA  0EFF               	movlw	-1
  2103  011DBC  6AE3               	clrf	plusw1,c
  2104  011DBE  2AE3               	incf	plusw1,f,c
  2105                           
  2106                           ;main.c: 189:  } else {
  2107  011DC0  D004               	goto	l10795
  2108  011DC2                     l10793:
  2109                           
  2110                           ;main.c: 190:   mode = UI_STATE_LOG;
  2111                           ;stkvar	_mode @ sp[(-5)+4]
  2112  011DC2  0EFF               	movlw	-1
  2113  011DC4  6AE3               	clrf	plusw1,c
  2114  011DC6  80E3               	bsf	plusw1,0,c
  2115  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2116  011DCA                     l10795:
  2117                           
  2118                           ;main.c: 193:  if (mode == UI_STATE_HOST) {
  2119                           ;stkvar	_mode @ sp[(-5)+4]
  2120  011DCA  0EFF               	movlw	-1
  2121  011DCC  04E3               	decf	plusw1,w,c
  2122  011DCE  A4D8               	btfss	status,2,c
  2123  011DD0  D007               	goto	l1258
  2124                           
  2125                           ;main.c: 194:   do { LATDbits.LATD0 = 1; } while(0);
  2126  011DD2  80BD               	bsf	189,0,c	;volatile
  2127                           
  2128                           ;main.c: 195:   V.mode_pwm = 70;
  2129  011DD4  0E00               	movlw	0
  2130  011DD6  0102               	movlb	2	; () banked
  2131  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2132  011DDA  0E46               	movlw	70
  2133  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2134                           
  2135                           ;main.c: 196:  } else {
  2136  011DDE  D004               	goto	l10799
  2137  011DE0                     l1258:
  2138  011DE0  90BD               	bcf	189,0,c	;volatile
  2139                           
  2140                           ;main.c: 198:   V.mode_pwm = 0;
  2141  011DE2  0102               	movlb	2	; () banked
  2142  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2143  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2144  011DE8                     l10799:
  2145                           
  2146                           ; BSR set to: 2
  2147                           ;main.c: 200:  mode_lamp_dim(V.mode_pwm);
  2148  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2149  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2150  011DF4  ECA3  F0C6         	call	_mode_lamp_dim	;wreg free
  2151  011DF8  D0D0               	goto	l10843
  2152  011DFA                     l10801:
  2153                           
  2154                           ; BSR set to: 2
  2155                           ;main.c: 211:    init_display();
  2156  011DFA  EC2F  F0B9         	call	_init_display	;wreg free
  2157                           
  2158                           ; BSR set to: 61
  2159                           ;main.c: 212:    eaDogM_WriteCommand(0b00001100);
  2160  011DFE  0E0C               	movlw	12
  2161  011E00  6EE6               	movwf	postinc1,c
  2162  011E02  EC03  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;main.c: 214:    V.ui_state = mode;
  2166                           ;stkvar	_mode @ sp[(-5)+4]
  2167  011E06  0EFF               	movlw	-1
  2168  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;main.c: 215:    srand(1957);
  2172  011E0E  0EA5               	movlw	165
  2173  011E10  6EE6               	movwf	postinc1,c
  2174  011E12  0E07               	movlw	7
  2175  011E14  6EE6               	movwf	postinc1,c
  2176  011E16  EC29  F0C3         	call	_srand	;wreg free
  2177                           
  2178                           ; BSR set to: 1
  2179                           ;main.c: 216:    set_vterm(0);
  2180  011E1A  0E00               	movlw	0
  2181  011E1C  6EE6               	movwf	postinc1,c
  2182  011E1E  EC7A  F0C6         	call	_set_vterm	;wreg free
  2183                           
  2184                           ; BSR set to: 5
  2185                           ;main.c: 217:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2186  011E22  0E60               	movlw	low STR_1
  2187  011E24  6EE6               	movwf	postinc1,c
  2188  011E26  0EFF               	movlw	high STR_1
  2189  011E28  6EE6               	movwf	postinc1,c
  2190  011E2A  0E00               	movlw	0
  2191  011E2C  6EE6               	movwf	postinc1,c
  2192  011E2E  0E00               	movlw	0
  2193  011E30  6EE6               	movwf	postinc1,c
  2194  011E32  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2195  011E36  0060  F0CB  FFE6   	movff	btemp,postinc1
  2196  011E3C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2197  011E42  0E04               	movlw	4
  2198  011E44  6EE6               	movwf	postinc1,c
  2199  011E46  ECAF  F0B7         	call	_sprintf	;wreg free
  2200                           
  2201                           ;main.c: 218:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.994");
  2202  011E4A  0EE0               	movlw	low STR_3
  2203  011E4C  6EE6               	movwf	postinc1,c
  2204  011E4E  0EFF               	movlw	high STR_3
  2205  011E50  6EE6               	movwf	postinc1,c
  2206  011E52  0EB2               	movlw	low STR_2
  2207  011E54  6EE6               	movwf	postinc1,c
  2208  011E56  0EFF               	movlw	high STR_2
  2209  011E58  6EE6               	movwf	postinc1,c
  2210  011E5A  0E00               	movlw	0
  2211  011E5C  6EE6               	movwf	postinc1,c
  2212  011E5E  0E01               	movlw	1
  2213  011E60  6EE6               	movwf	postinc1,c
  2214  011E62  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2215  011E66  0060  F0CB  FFE6   	movff	btemp,postinc1
  2216  011E6C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2217  011E72  0E06               	movlw	6
  2218  011E74  6EE6               	movwf	postinc1,c
  2219  011E76  ECAF  F0B7         	call	_sprintf	;wreg free
  2220                           
  2221                           ;main.c: 219:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2222  011E7A  0E4F               	movlw	low STR_4
  2223  011E7C  6EE6               	movwf	postinc1,c
  2224  011E7E  0EFF               	movlw	high STR_4
  2225  011E80  6EE6               	movwf	postinc1,c
  2226  011E82  0E00               	movlw	0
  2227  011E84  6EE6               	movwf	postinc1,c
  2228  011E86  0E02               	movlw	2
  2229  011E88  6EE6               	movwf	postinc1,c
  2230  011E8A  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2231  011E8E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2232  011E94  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2233  011E9A  0E04               	movlw	4
  2234  011E9C  6EE6               	movwf	postinc1,c
  2235  011E9E  ECAF  F0B7         	call	_sprintf	;wreg free
  2236                           
  2237                           ;main.c: 220:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2238  011EA2  0E71               	movlw	low STR_5
  2239  011EA4  6EE6               	movwf	postinc1,c
  2240  011EA6  0EFF               	movlw	high STR_5
  2241  011EA8  6EE6               	movwf	postinc1,c
  2242  011EAA  0E02               	movlw	2
  2243  011EAC  6EE6               	movwf	postinc1,c
  2244  011EAE  0E00               	movlw	0
  2245  011EB0  6EE6               	movwf	postinc1,c
  2246  011EB2  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2247  011EB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2248  011EBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2249  011EC2  0E04               	movlw	4
  2250  011EC4  6EE6               	movwf	postinc1,c
  2251  011EC6  ECAF  F0B7         	call	_sprintf	;wreg free
  2252                           
  2253                           ;main.c: 221:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.994");
  2254  011ECA  0EE0               	movlw	low STR_3
  2255  011ECC  6EE6               	movwf	postinc1,c
  2256  011ECE  0EFF               	movlw	high STR_3
  2257  011ED0  6EE6               	movwf	postinc1,c
  2258  011ED2  0EB2               	movlw	low STR_2
  2259  011ED4  6EE6               	movwf	postinc1,c
  2260  011ED6  0EFF               	movlw	high STR_2
  2261  011ED8  6EE6               	movwf	postinc1,c
  2262  011EDA  0E02               	movlw	2
  2263  011EDC  6EE6               	movwf	postinc1,c
  2264  011EDE  0E01               	movlw	1
  2265  011EE0  6EE6               	movwf	postinc1,c
  2266  011EE2  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2267  011EE6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2268  011EEC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2269  011EF2  0E06               	movlw	6
  2270  011EF4  6EE6               	movwf	postinc1,c
  2271  011EF6  ECAF  F0B7         	call	_sprintf	;wreg free
  2272                           
  2273                           ;main.c: 222:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2274  011EFA  0E3E               	movlw	low STR_8
  2275  011EFC  6EE6               	movwf	postinc1,c
  2276  011EFE  0EFF               	movlw	high STR_8
  2277  011F00  6EE6               	movwf	postinc1,c
  2278  011F02  0E02               	movlw	2
  2279  011F04  6EE6               	movwf	postinc1,c
  2280  011F06  0E02               	movlw	2
  2281  011F08  6EE6               	movwf	postinc1,c
  2282  011F0A  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2283  011F0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2284  011F14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2285  011F1A  0E04               	movlw	4
  2286  011F1C  6EE6               	movwf	postinc1,c
  2287  011F1E  ECAF  F0B7         	call	_sprintf	;wreg free
  2288                           
  2289                           ;main.c: 223:    update_lcd(0);
  2290  011F22  0E00               	movlw	0
  2291  011F24  6EE6               	movwf	postinc1,c
  2292  011F26  EC28  F0B7         	call	_update_lcd	;wreg free
  2293                           
  2294                           ;main.c: 224:    WaitMs(3000);
  2295  011F2A  0EB8               	movlw	184
  2296  011F2C  6EE6               	movwf	postinc1,c
  2297  011F2E  0E0B               	movlw	11
  2298  011F30  6EE6               	movwf	postinc1,c
  2299  011F32  ECF3  F0C2         	call	_WaitMs	;wreg free
  2300                           
  2301                           ;main.c: 225:    StartTimer(TMR_DISPLAY, 250);
  2302  011F36  0EFA               	movlw	250
  2303  011F38  6EE6               	movwf	postinc1,c
  2304  011F3A  0E00               	movlw	0
  2305  011F3C  6EE6               	movwf	postinc1,c
  2306  011F3E  0E0A               	movlw	10
  2307  011F40  6EE6               	movwf	postinc1,c
  2308  011F42  ECB9  F0C2         	call	_StartTimer	;wreg free
  2309                           
  2310                           ;main.c: 226:    StartTimer(TMR_ADC, 200);
  2311  011F46  0EC8               	movlw	200
  2312  011F48  6EE6               	movwf	postinc1,c
  2313  011F4A  0E00               	movlw	0
  2314  011F4C  6EE6               	movwf	postinc1,c
  2315  011F4E  0E01               	movlw	1
  2316  011F50  6EE6               	movwf	postinc1,c
  2317  011F52  ECB9  F0C2         	call	_StartTimer	;wreg free
  2318                           
  2319                           ;main.c: 227:    StartTimer(TMR_INFO, 3000);
  2320  011F56  0EB8               	movlw	184
  2321  011F58  6EE6               	movwf	postinc1,c
  2322  011F5A  0E0B               	movlw	11
  2323  011F5C  6EE6               	movwf	postinc1,c
  2324  011F5E  0E07               	movlw	7
  2325  011F60  6EE6               	movwf	postinc1,c
  2326  011F62  ECB9  F0C2         	call	_StartTimer	;wreg free
  2327                           
  2328                           ;main.c: 228:    StartTimer(TMR_FLIPPER, 1500);
  2329  011F66  0EDC               	movlw	220
  2330  011F68  6EE6               	movwf	postinc1,c
  2331  011F6A  0E05               	movlw	5
  2332  011F6C  6EE6               	movwf	postinc1,c
  2333  011F6E  0E0B               	movlw	11
  2334  011F70  6EE6               	movwf	postinc1,c
  2335  011F72  ECB9  F0C2         	call	_StartTimer	;wreg free
  2336                           
  2337                           ;main.c: 229:    StartTimer(TMR_HELPDIS, 3000);
  2338  011F76  0EB8               	movlw	184
  2339  011F78  6EE6               	movwf	postinc1,c
  2340  011F7A  0E0B               	movlw	11
  2341  011F7C  6EE6               	movwf	postinc1,c
  2342  011F7E  0E09               	movlw	9
  2343  011F80  6EE6               	movwf	postinc1,c
  2344  011F82  ECB9  F0C2         	call	_StartTimer	;wreg free
  2345                           
  2346                           ;main.c: 231:    start_adc_scan();
  2347  011F86  EC75  F0BF         	call	_start_adc_scan	;wreg free
  2348                           
  2349                           ;main.c: 232:    start_switch_handler();
  2350  011F8A  EC11  F0C6         	call	_start_switch_handler	;wreg free
  2351                           
  2352                           ;main.c: 234:    break;
  2353  011F8E  D01C               	goto	l10845
  2354  011F90                     l1266:
  2355                           
  2356                           ; BSR set to: 2
  2357                           ;main.c: 240:    P.SYSTEM_STABLE = 1;
  2358  011F90  0100               	movlb	0	; () banked
  2359  011F92  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2360                           
  2361                           ;main.c: 241:    break;
  2362  011F94  D019               	goto	l10845
  2363  011F96                     l1268:
  2364                           
  2365                           ; BSR set to: 2
  2366                           ;main.c: 244:    V.ui_state = UI_STATE_INIT;
  2367  011F96  6B00               	clrf	_V& (0+255),b	;volatile
  2368                           
  2369                           ;main.c: 245:    break;
  2370  011F98  D017               	goto	l10845
  2371  011F9A                     l10843:
  2372  011F9A  0102               	movlb	2	; () banked
  2373  011F9C  5100               	movf	_V& (0+255),w,b	;volatile
  2374  011F9E  6E3C               	movwf	(btemp+10)^0,c
  2375  011FA0  6A3D               	clrf	(btemp+11)^0,c
  2376                           
  2377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2378                           ; Switch size 1, requested type "simple"
  2379                           ; Number of cases is 1, Range of values is 0 to 0
  2380                           ; switch strategies available:
  2381                           ; Name         Instructions Cycles
  2382                           ; simple_byte            4     3 (average)
  2383                           ;	Chosen strategy is simple_byte
  2384  011FA2  503D               	movf	(btemp+11)^0,w,c
  2385  011FA4  0A00               	xorlw	0	; case 0
  2386  011FA6  A4D8               	btfss	status,2,c
  2387  011FA8  D7F6               	goto	l1268
  2388                           
  2389                           ; BSR set to: 2
  2390                           ; Switch size 1, requested type "simple"
  2391                           ; Number of cases is 5, Range of values is 0 to 5
  2392                           ; switch strategies available:
  2393                           ; Name         Instructions Cycles
  2394                           ; simple_byte           16     9 (average)
  2395                           ;	Chosen strategy is simple_byte
  2396  011FAA  503C               	movf	(btemp+10)^0,w,c
  2397  011FAC  0A00               	xorlw	0	; case 0
  2398  011FAE  B4D8               	btfsc	status,2,c
  2399  011FB0  D724               	goto	l10801
  2400  011FB2  0A01               	xorlw	1	; case 1
  2401  011FB4  B4D8               	btfsc	status,2,c
  2402  011FB6  D008               	goto	l10845
  2403  011FB8  0A02               	xorlw	2	; case 3
  2404  011FBA  B4D8               	btfsc	status,2,c
  2405  011FBC  D005               	goto	l10845
  2406  011FBE  0A07               	xorlw	7	; case 4
  2407  011FC0  B4D8               	btfsc	status,2,c
  2408  011FC2  D7E6               	goto	l1266
  2409  011FC4  0A01               	xorlw	1	; case 5
  2410  011FC6  D7E7               	goto	l1268
  2411  011FC8                     l10845:
  2412                           
  2413                           ;main.c: 248:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2414  011FC8  0E01               	movlw	1
  2415  011FCA  6EE6               	movwf	postinc1,c
  2416  011FCC  ECB9  F0C5         	call	_TimerDone	;wreg free
  2417  011FD0  5032               	movf	btemp^0,w,c
  2418  011FD2  B4D8               	btfsc	status,2,c
  2419  011FD4  D013               	goto	l10857
  2420  011FD6  EC43  F0C7         	call	_check_adc_scan	;wreg free
  2421  011FDA  5032               	movf	btemp^0,w,c
  2422  011FDC  B4D8               	btfsc	status,2,c
  2423  011FDE  D00E               	goto	l10857
  2424                           
  2425                           ;main.c: 252:    convert_adc_data();
  2426  011FE0  ECCE  F0BA         	call	_convert_adc_data	;wreg free
  2427                           
  2428                           ;main.c: 256:    clear_adc_scan();
  2429  011FE4  EC4B  F0C7         	call	_clear_adc_scan	;wreg free
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 257:    start_adc_scan();
  2433  011FE8  EC75  F0BF         	call	_start_adc_scan	;wreg free
  2434                           
  2435                           ;main.c: 258:    StartTimer(TMR_ADC, 200);
  2436  011FEC  0EC8               	movlw	200
  2437  011FEE  6EE6               	movwf	postinc1,c
  2438  011FF0  0E00               	movlw	0
  2439  011FF2  6EE6               	movwf	postinc1,c
  2440  011FF4  0E01               	movlw	1
  2441  011FF6  6EE6               	movwf	postinc1,c
  2442  011FF8  ECB9  F0C2         	call	_StartTimer	;wreg free
  2443  011FFC                     l10857:
  2444                           
  2445                           ;main.c: 265:   if (TimerDone(TMR_DISPLAY)) {
  2446                           
  2447                           ;main.c: 261:   if (V.ticks) {
  2448  011FFC  0E0A               	movlw	10
  2449  011FFE  6EE6               	movwf	postinc1,c
  2450  012000  ECB9  F0C5         	call	_TimerDone	;wreg free
  2451  012004  5032               	movf	btemp^0,w,c
  2452  012006  B4D8               	btfsc	status,2,c
  2453  012008  D25B               	goto	l10899
  2454                           
  2455                           ;main.c: 266:    if (TimerDone(TMR_HELPDIS)) {
  2456  01200A  0E09               	movlw	9
  2457  01200C  6EE6               	movwf	postinc1,c
  2458  01200E  ECB9  F0C5         	call	_TimerDone	;wreg free
  2459  012012  5032               	movf	btemp^0,w,c
  2460  012014  B4D8               	btfsc	status,2,c
  2461  012016  D004               	goto	l10865
  2462                           
  2463                           ;main.c: 267:     set_display_info(DIS_STR);
  2464  012018  0E00               	movlw	0
  2465  01201A  6EE6               	movwf	postinc1,c
  2466  01201C  EC3F  F0C6         	call	_set_display_info	;wreg free
  2467  012020                     l10865:
  2468                           
  2469                           ;main.c: 269:    calc_model_data();
  2470  012020  EC3B  F0A7         	call	_calc_model_data	;wreg free
  2471                           
  2472                           ;main.c: 276:     hid_display(&H);
  2473                           
  2474                           ;main.c: 271:    if (0) {
  2475  012024  0EEF               	movlw	_H& (0+255)
  2476  012026  6EE6               	movwf	postinc1,c
  2477  012028  EC34  F0B8         	call	_hid_display	;wreg free
  2478                           
  2479                           ;main.c: 277:     switch (H.hid_display) {
  2480  01202C  D224               	goto	l10891
  2481  01202E                     l1276:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;main.c: 279:      V.calib = 0;
  2485  01202E  0102               	movlb	2	; () banked
  2486  012030  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2487                           
  2488                           ; BSR set to: 2
  2489                           ;main.c: 280:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2490  012032  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2491  012038  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2492  01203E  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2493  012044  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2494  01204A  0EB9               	movlw	low STR_12
  2495  01204C  6EE6               	movwf	postinc1,c
  2496  01204E  0EFE               	movlw	high STR_12
  2497  012050  6EE6               	movwf	postinc1,c
  2498  012052  0E00               	movlw	0
  2499  012054  6EE6               	movwf	postinc1,c
  2500  012056  0E00               	movlw	0
  2501  012058  6EE6               	movwf	postinc1,c
  2502  01205A  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2503  01205E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2504  012064  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2505  01206A  0E08               	movlw	8
  2506  01206C  6EE6               	movwf	postinc1,c
  2507  01206E  ECAF  F0B7         	call	_sprintf	;wreg free
  2508                           
  2509                           ;main.c: 281:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2510  012072  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2511  012078  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2512  01207E  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2513  012084  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2514  01208A  0EF2               	movlw	low STR_13
  2515  01208C  6EE6               	movwf	postinc1,c
  2516  01208E  0EFE               	movlw	high STR_13
  2517  012090  6EE6               	movwf	postinc1,c
  2518  012092  0E00               	movlw	0
  2519  012094  6EE6               	movwf	postinc1,c
  2520  012096  0E01               	movlw	1
  2521  012098  6EE6               	movwf	postinc1,c
  2522  01209A  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2523  01209E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2524  0120A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2525  0120AA  0E08               	movlw	8
  2526  0120AC  6EE6               	movwf	postinc1,c
  2527  0120AE  ECAF  F0B7         	call	_sprintf	;wreg free
  2528                           
  2529                           ;main.c: 282:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2530  0120B2  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2531  0120B8  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2532  0120BE  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2533  0120C4  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2534  0120CA  0EDF               	movlw	low STR_14
  2535  0120CC  6EE6               	movwf	postinc1,c
  2536  0120CE  0EFE               	movlw	high STR_14
  2537  0120D0  6EE6               	movwf	postinc1,c
  2538  0120D2  0E00               	movlw	0
  2539  0120D4  6EE6               	movwf	postinc1,c
  2540  0120D6  0E02               	movlw	2
  2541  0120D8  6EE6               	movwf	postinc1,c
  2542  0120DA  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2543  0120DE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2544  0120E4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2545  0120EA  0E08               	movlw	8
  2546  0120EC  6EE6               	movwf	postinc1,c
  2547  0120EE  ECAF  F0B7         	call	_sprintf	;wreg free
  2548                           
  2549                           ;main.c: 283:      break;
  2550  0120F2  D1D6               	goto	l10893
  2551  0120F4                     l1278:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;main.c: 285:      V.calib = 0;
  2555  0120F4  0102               	movlb	2	; () banked
  2556  0120F6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2557                           
  2558                           ; BSR set to: 2
  2559                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2560  0120F8  0060  F413  FFE6   	movff	_C+4,postinc1
  2561  0120FE  0060  F417  FFE6   	movff	_C+5,postinc1
  2562  012104  0060  F41B  FFE6   	movff	_C+6,postinc1
  2563  01210A  0060  F41F  FFE6   	movff	_C+7,postinc1
  2564  012110  0060  F453  FFE6   	movff	_C+20,postinc1
  2565  012116  0060  F457  FFE6   	movff	_C+21,postinc1
  2566  01211C  0060  F45B  FFE6   	movff	_C+22,postinc1
  2567  012122  0060  F45F  FFE6   	movff	_C+23,postinc1
  2568  012128  0E2B               	movlw	low STR_15
  2569  01212A  6EE6               	movwf	postinc1,c
  2570  01212C  0EFF               	movlw	high STR_15
  2571  01212E  6EE6               	movwf	postinc1,c
  2572  012130  0E00               	movlw	0
  2573  012132  6EE6               	movwf	postinc1,c
  2574  012134  0E00               	movlw	0
  2575  012136  6EE6               	movwf	postinc1,c
  2576  012138  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2577  01213C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2578  012142  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2579  012148  0E0C               	movlw	12
  2580  01214A  6EE6               	movwf	postinc1,c
  2581  01214C  ECAF  F0B7         	call	_sprintf	;wreg free
  2582                           
  2583                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2584  012150  0060  F403  FFE6   	movff	_C,postinc1
  2585  012156  0060  F407  FFE6   	movff	_C+1,postinc1
  2586  01215C  0060  F40B  FFE6   	movff	_C+2,postinc1
  2587  012162  0060  F40F  FFE6   	movff	_C+3,postinc1
  2588  012168  0060  F443  FFE6   	movff	_C+16,postinc1
  2589  01216E  0060  F447  FFE6   	movff	_C+17,postinc1
  2590  012174  0060  F44B  FFE6   	movff	_C+18,postinc1
  2591  01217A  0060  F44F  FFE6   	movff	_C+19,postinc1
  2592  012180  0E05               	movlw	low STR_16
  2593  012182  6EE6               	movwf	postinc1,c
  2594  012184  0EFF               	movlw	high STR_16
  2595  012186  6EE6               	movwf	postinc1,c
  2596  012188  0E00               	movlw	0
  2597  01218A  6EE6               	movwf	postinc1,c
  2598  01218C  0E01               	movlw	1
  2599  01218E  6EE6               	movwf	postinc1,c
  2600  012190  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2601  012194  0060  F0CB  FFE6   	movff	btemp,postinc1
  2602  01219A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2603  0121A0  0E0C               	movlw	12
  2604  0121A2  6EE6               	movwf	postinc1,c
  2605  0121A4  ECAF  F0B7         	call	_sprintf	;wreg free
  2606                           
  2607                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2608  0121A8  0060  F503  FFE6   	movff	_C+64,postinc1
  2609  0121AE  0060  F507  FFE6   	movff	_C+65,postinc1
  2610  0121B4  0060  F50B  FFE6   	movff	_C+66,postinc1
  2611  0121BA  0060  F50F  FFE6   	movff	_C+67,postinc1
  2612  0121C0  0060  F423  FFE6   	movff	_C+8,postinc1
  2613  0121C6  0060  F427  FFE6   	movff	_C+9,postinc1
  2614  0121CC  0060  F42B  FFE6   	movff	_C+10,postinc1
  2615  0121D2  0060  F42F  FFE6   	movff	_C+11,postinc1
  2616  0121D8  0E18               	movlw	low STR_17
  2617  0121DA  6EE6               	movwf	postinc1,c
  2618  0121DC  0EFF               	movlw	high STR_17
  2619  0121DE  6EE6               	movwf	postinc1,c
  2620  0121E0  0E00               	movlw	0
  2621  0121E2  6EE6               	movwf	postinc1,c
  2622  0121E4  0E02               	movlw	2
  2623  0121E6  6EE6               	movwf	postinc1,c
  2624  0121E8  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2625  0121EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2626  0121F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2627  0121F8  0E0C               	movlw	12
  2628  0121FA  6EE6               	movwf	postinc1,c
  2629  0121FC  ECAF  F0B7         	call	_sprintf	;wreg free
  2630                           
  2631                           ;main.c: 289:      break;
  2632  012200  D14F               	goto	l10893
  2633  012202                     l1279:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;main.c: 291:      V.calib = 0;
  2637  012202  0102               	movlb	2	; () banked
  2638  012204  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2639                           
  2640                           ; BSR set to: 2
  2641                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2642  012206  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2643  01220C  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2644  012212  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2645  012218  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2646  01221E  0ECC               	movlw	low STR_18
  2647  012220  6EE6               	movwf	postinc1,c
  2648  012222  0EFE               	movlw	high STR_18
  2649  012224  6EE6               	movwf	postinc1,c
  2650  012226  0E00               	movlw	0
  2651  012228  6EE6               	movwf	postinc1,c
  2652  01222A  0E00               	movlw	0
  2653  01222C  6EE6               	movwf	postinc1,c
  2654  01222E  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2655  012232  0060  F0CB  FFE6   	movff	btemp,postinc1
  2656  012238  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2657  01223E  0E08               	movlw	8
  2658  012240  6EE6               	movwf	postinc1,c
  2659  012242  ECAF  F0B7         	call	_sprintf	;wreg free
  2660                           
  2661                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "RUN               ");
  2662  012246  0EA6               	movlw	low STR_19
  2663  012248  6EE6               	movwf	postinc1,c
  2664  01224A  0EFE               	movlw	high STR_19
  2665  01224C  6EE6               	movwf	postinc1,c
  2666  01224E  0E00               	movlw	0
  2667  012250  6EE6               	movwf	postinc1,c
  2668  012252  0E01               	movlw	1
  2669  012254  6EE6               	movwf	postinc1,c
  2670  012256  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2671  01225A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2672  012260  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2673  012266  0E04               	movlw	4
  2674  012268  6EE6               	movwf	postinc1,c
  2675  01226A  ECAF  F0B7         	call	_sprintf	;wreg free
  2676                           
  2677                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "RUN               ");
  2678  01226E  0EA6               	movlw	low STR_19
  2679  012270  6EE6               	movwf	postinc1,c
  2680  012272  0EFE               	movlw	high STR_19
  2681  012274  6EE6               	movwf	postinc1,c
  2682  012276  0E00               	movlw	0
  2683  012278  6EE6               	movwf	postinc1,c
  2684  01227A  0E02               	movlw	2
  2685  01227C  6EE6               	movwf	postinc1,c
  2686  01227E  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2687  012282  0060  F0CB  FFE6   	movff	btemp,postinc1
  2688  012288  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2689  01228E  0E04               	movlw	4
  2690  012290  6EE6               	movwf	postinc1,c
  2691  012292  ECAF  F0B7         	call	_sprintf	;wreg free
  2692                           
  2693                           ;main.c: 295:      break;
  2694  012296  D104               	goto	l10893
  2695  012298                     l10877:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 297:      if (!V.calib) {
  2699  012298  0102               	movlb	2	; () banked
  2700  01229A  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2701  01229C  A4D8               	btfss	status,2,c
  2702  01229E  D02D               	goto	l10881
  2703                           
  2704                           ; BSR set to: 2
  2705                           ;main.c: 298:       lp_filter(0.0, i, -1);
  2706  0122A0  0EFF               	movlw	255
  2707  0122A2  6EE6               	movwf	postinc1,c
  2708                           
  2709                           ;stkvar	_i @ sp[(-6)+2]
  2710  0122A4  0EFC               	movlw	-4
  2711  0122A6  50E3               	movf	plusw1,w,c
  2712  0122A8  6EE6               	movwf	postinc1,c
  2713  0122AA  0E00               	movlw	0
  2714  0122AC  6EE6               	movwf	postinc1,c
  2715  0122AE  0E00               	movlw	0
  2716  0122B0  6EE6               	movwf	postinc1,c
  2717  0122B2  0E00               	movlw	0
  2718  0122B4  6EE6               	movwf	postinc1,c
  2719  0122B6  0E00               	movlw	0
  2720  0122B8  6EE6               	movwf	postinc1,c
  2721  0122BA  EC89  F0B0         	call	_lp_filter	;wreg free
  2722                           
  2723                           ;main.c: 299:       lp_filter(0.0, j, -1);
  2724  0122BE  0EFF               	movlw	255
  2725  0122C0  6EE6               	movwf	postinc1,c
  2726                           
  2727                           ;stkvar	_j @ sp[(-6)+1]
  2728  0122C2  0EFB               	movlw	-5
  2729  0122C4  50E3               	movf	plusw1,w,c
  2730  0122C6  6EE6               	movwf	postinc1,c
  2731  0122C8  0E00               	movlw	0
  2732  0122CA  6EE6               	movwf	postinc1,c
  2733  0122CC  0E00               	movlw	0
  2734  0122CE  6EE6               	movwf	postinc1,c
  2735  0122D0  0E00               	movlw	0
  2736  0122D2  6EE6               	movwf	postinc1,c
  2737  0122D4  0E00               	movlw	0
  2738  0122D6  6EE6               	movwf	postinc1,c
  2739  0122D8  EC89  F0B0         	call	_lp_filter	;wreg free
  2740                           
  2741                           ;main.c: 300:       lp_filter(0.0, k, -1);
  2742  0122DC  0EFF               	movlw	255
  2743  0122DE  6EE6               	movwf	postinc1,c
  2744                           
  2745                           ;stkvar	_k @ sp[(-6)+0]
  2746  0122E0  0EFA               	movlw	-6
  2747  0122E2  50E3               	movf	plusw1,w,c
  2748  0122E4  6EE6               	movwf	postinc1,c
  2749  0122E6  0E00               	movlw	0
  2750  0122E8  6EE6               	movwf	postinc1,c
  2751  0122EA  0E00               	movlw	0
  2752  0122EC  6EE6               	movwf	postinc1,c
  2753  0122EE  0E00               	movlw	0
  2754  0122F0  6EE6               	movwf	postinc1,c
  2755  0122F2  0E00               	movlw	0
  2756  0122F4  6EE6               	movwf	postinc1,c
  2757  0122F6  EC89  F0B0         	call	_lp_filter	;wreg free
  2758  0122FA                     l10881:
  2759                           
  2760                           ;main.c: 302:      V.calib = 1;
  2761  0122FA  0E01               	movlw	1
  2762  0122FC  0102               	movlb	2	; () banked
  2763  0122FE  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2764                           
  2765                           ; BSR set to: 2
  2766                           ;main.c: 303:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2767  012300  0E02               	movlw	2
  2768  012302  6EE6               	movwf	postinc1,c
  2769  012304  EC67  F0C4         	call	_get_switch	;wreg free
  2770  012308  5032               	movf	btemp^0,w,c
  2771  01230A  6EE6               	movwf	postinc1,c
  2772  01230C  0E00               	movlw	0
  2773  01230E  6EE6               	movwf	postinc1,c
  2774                           
  2775                           ;stkvar	_i @ sp[(-7)+2]
  2776  012310  0EFB               	movlw	-5
  2777  012312  50E3               	movf	plusw1,w,c
  2778  012314  0D04               	mullw	4
  2779  012316  0E00               	movlw	low _C
  2780  012318  24F3               	addwf	243,w,c
  2781  01231A  6ED9               	movwf	fsr2l,c
  2782  01231C  0E01               	movlw	high _C
  2783  01231E  20F4               	addwfc	prodh,w,c
  2784  012320  6EDA               	movwf	fsr2h,c
  2785  012322  006F FF7B FFE6     	movff	postinc2,postinc1
  2786  012328  006F FF7B FFE6     	movff	postinc2,postinc1
  2787  01232E  006F FF7B FFE6     	movff	postinc2,postinc1
  2788  012334  006F FF7B FFE6     	movff	postinc2,postinc1
  2789                           
  2790                           ;stkvar	_i @ sp[(-11)+2]
  2791  01233A  0EF7               	movlw	-9
  2792  01233C  50E3               	movf	plusw1,w,c
  2793  01233E  6EE6               	movwf	postinc1,c
  2794  012340  EC30  F0C6         	call	_get_raw_result	;wreg free
  2795  012344  0060  F0CB  FFE6   	movff	btemp,postinc1
  2796  01234A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2797  012350  0E93               	movlw	low STR_9
  2798  012352  6EE6               	movwf	postinc1,c
  2799  012354  0EFF               	movlw	high STR_9
  2800  012356  6EE6               	movwf	postinc1,c
  2801  012358  0E00               	movlw	0
  2802  01235A  6EE6               	movwf	postinc1,c
  2803  01235C  0E00               	movlw	0
  2804  01235E  6EE6               	movwf	postinc1,c
  2805  012360  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2806  012364  0060  F0CB  FFE6   	movff	btemp,postinc1
  2807  01236A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2808  012370  0E0C               	movlw	12
  2809  012372  6EE6               	movwf	postinc1,c
  2810  012374  ECAF  F0B7         	call	_sprintf	;wreg free
  2811                           
  2812                           ;main.c: 304:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  2813  012378  0E03               	movlw	3
  2814  01237A  6EE6               	movwf	postinc1,c
  2815  01237C  EC67  F0C4         	call	_get_switch	;wreg free
  2816  012380  5032               	movf	btemp^0,w,c
  2817  012382  6EE6               	movwf	postinc1,c
  2818  012384  0E00               	movlw	0
  2819  012386  6EE6               	movwf	postinc1,c
  2820                           
  2821                           ;stkvar	_j @ sp[(-7)+1]
  2822  012388  0EFA               	movlw	-6
  2823  01238A  50E3               	movf	plusw1,w,c
  2824  01238C  0D04               	mullw	4
  2825  01238E  0E00               	movlw	low _C
  2826  012390  24F3               	addwf	243,w,c
  2827  012392  6ED9               	movwf	fsr2l,c
  2828  012394  0E01               	movlw	high _C
  2829  012396  20F4               	addwfc	prodh,w,c
  2830  012398  6EDA               	movwf	fsr2h,c
  2831  01239A  006F FF7B FFE6     	movff	postinc2,postinc1
  2832  0123A0  006F FF7B FFE6     	movff	postinc2,postinc1
  2833  0123A6  006F FF7B FFE6     	movff	postinc2,postinc1
  2834  0123AC  006F FF7B FFE6     	movff	postinc2,postinc1
  2835                           
  2836                           ;stkvar	_j @ sp[(-11)+1]
  2837  0123B2  0EF6               	movlw	-10
  2838  0123B4  50E3               	movf	plusw1,w,c
  2839  0123B6  6EE6               	movwf	postinc1,c
  2840  0123B8  EC30  F0C6         	call	_get_raw_result	;wreg free
  2841  0123BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2842  0123C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2843  0123C8  0E93               	movlw	low STR_9
  2844  0123CA  6EE6               	movwf	postinc1,c
  2845  0123CC  0EFF               	movlw	high STR_9
  2846  0123CE  6EE6               	movwf	postinc1,c
  2847  0123D0  0E00               	movlw	0
  2848  0123D2  6EE6               	movwf	postinc1,c
  2849  0123D4  0E01               	movlw	1
  2850  0123D6  6EE6               	movwf	postinc1,c
  2851  0123D8  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2852  0123DC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2853  0123E2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2854  0123E8  0E0C               	movlw	12
  2855  0123EA  6EE6               	movwf	postinc1,c
  2856  0123EC  ECAF  F0B7         	call	_sprintf	;wreg free
  2857                           
  2858                           ;main.c: 305:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  2859                           ;stkvar	_inp_index @ sp[(-5)+3]
  2860  0123F0  0EFE               	movlw	-2
  2861  0123F2  50E3               	movf	plusw1,w,c
  2862  0123F4  6E3C               	movwf	(btemp+10)^0,c
  2863  0123F6  6A3D               	clrf	(btemp+11)^0,c
  2864  0123F8  0E01               	movlw	1
  2865  0123FA  263C               	addwf	(btemp+10)^0,f,c
  2866  0123FC  0E00               	movlw	0
  2867  0123FE  223D               	addwfc	(btemp+11)^0,f,c
  2868  012400  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  2869  012406  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  2870                           
  2871                           ;stkvar	_k @ sp[(-7)+0]
  2872  01240C  0EF9               	movlw	-7
  2873  01240E  50E3               	movf	plusw1,w,c
  2874  012410  0D04               	mullw	4
  2875  012412  0E00               	movlw	low _C
  2876  012414  24F3               	addwf	243,w,c
  2877  012416  6ED9               	movwf	fsr2l,c
  2878  012418  0E01               	movlw	high _C
  2879  01241A  20F4               	addwfc	prodh,w,c
  2880  01241C  6EDA               	movwf	fsr2h,c
  2881  01241E  006F FF7B FFE6     	movff	postinc2,postinc1
  2882  012424  006F FF7B FFE6     	movff	postinc2,postinc1
  2883  01242A  006F FF7B FFE6     	movff	postinc2,postinc1
  2884  012430  006F FF7B FFE6     	movff	postinc2,postinc1
  2885                           
  2886                           ;stkvar	_k @ sp[(-11)+0]
  2887  012436  0EF5               	movlw	-11
  2888  012438  50E3               	movf	plusw1,w,c
  2889  01243A  6EE6               	movwf	postinc1,c
  2890  01243C  EC30  F0C6         	call	_get_raw_result	;wreg free
  2891  012440  0060  F0CB  FFE6   	movff	btemp,postinc1
  2892  012446  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2893  01244C  0E82               	movlw	low STR_11
  2894  01244E  6EE6               	movwf	postinc1,c
  2895  012450  0EFF               	movlw	high STR_11
  2896  012452  6EE6               	movwf	postinc1,c
  2897  012454  0E00               	movlw	0
  2898  012456  6EE6               	movwf	postinc1,c
  2899  012458  0E02               	movlw	2
  2900  01245A  6EE6               	movwf	postinc1,c
  2901  01245C  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  2902  012460  0060  F0CB  FFE6   	movff	btemp,postinc1
  2903  012466  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2904  01246C  0E0C               	movlw	12
  2905  01246E  6EE6               	movwf	postinc1,c
  2906  012470  ECAF  F0B7         	call	_sprintf	;wreg free
  2907                           
  2908                           ;main.c: 306:      break;
  2909  012474  D015               	goto	l10893
  2910  012476                     l10891:
  2911  012476  0100               	movlb	0	; () banked
  2912  012478  51EF               	movf	_H& (0+255),w,b
  2913  01247A  6E3C               	movwf	(btemp+10)^0,c
  2914  01247C  6A3D               	clrf	(btemp+11)^0,c
  2915                           
  2916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2917                           ; Switch size 1, requested type "simple"
  2918                           ; Number of cases is 1, Range of values is 0 to 0
  2919                           ; switch strategies available:
  2920                           ; Name         Instructions Cycles
  2921                           ; simple_byte            4     3 (average)
  2922                           ;	Chosen strategy is simple_byte
  2923  01247E  503D               	movf	(btemp+11)^0,w,c
  2924  012480  0A00               	xorlw	0	; case 0
  2925  012482  A4D8               	btfss	status,2,c
  2926  012484  D00D               	goto	l10893
  2927                           
  2928                           ; BSR set to: 0
  2929                           ; Switch size 1, requested type "simple"
  2930                           ; Number of cases is 4, Range of values is 0 to 3
  2931                           ; switch strategies available:
  2932                           ; Name         Instructions Cycles
  2933                           ; simple_byte           13     7 (average)
  2934                           ;	Chosen strategy is simple_byte
  2935  012486  503C               	movf	(btemp+10)^0,w,c
  2936  012488  0A00               	xorlw	0	; case 0
  2937  01248A  B4D8               	btfsc	status,2,c
  2938  01248C  D633               	goto	l1278
  2939  01248E  0A01               	xorlw	1	; case 1
  2940  012490  B4D8               	btfsc	status,2,c
  2941  012492  D5CD               	goto	l1276
  2942  012494  0A03               	xorlw	3	; case 2
  2943  012496  B4D8               	btfsc	status,2,c
  2944  012498  D6B4               	goto	l1279
  2945  01249A  0A01               	xorlw	1	; case 3
  2946  01249C  B4D8               	btfsc	status,2,c
  2947  01249E  D6FC               	goto	l10877
  2948  0124A0                     l10893:
  2949                           
  2950                           ;main.c: 310:     clear_hid_pflags(&H);
  2951  0124A0  0EEF               	movlw	_H& (0+255)
  2952  0124A2  6EE6               	movwf	postinc1,c
  2953  0124A4  ECA7  F0C5         	call	_clear_hid_pflags	;wreg free
  2954                           
  2955                           ;main.c: 312:    StartTimer(TMR_DISPLAY, 250);
  2956  0124A8  0EFA               	movlw	250
  2957  0124AA  6EE6               	movwf	postinc1,c
  2958  0124AC  0E00               	movlw	0
  2959  0124AE  6EE6               	movwf	postinc1,c
  2960  0124B0  0E0A               	movlw	10
  2961  0124B2  6EE6               	movwf	postinc1,c
  2962  0124B4  ECB9  F0C2         	call	_StartTimer	;wreg free
  2963                           
  2964                           ;main.c: 313:    update_lcd(0);
  2965  0124B8  0E00               	movlw	0
  2966  0124BA  6EE6               	movwf	postinc1,c
  2967  0124BC  EC28  F0B7         	call	_update_lcd	;wreg free
  2968  0124C0                     l10899:
  2969                           
  2970                           ;main.c: 319:   check_help(V.flipper);
  2971  0124C0  0102               	movlb	2	; () banked
  2972  0124C2  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2973  0124C4  6EE6               	movwf	postinc1,c
  2974  0124C6  EC9A  F0AD         	call	_check_help	;wreg free
  2975                           
  2976                           ;main.c: 321:   if (check_enter_button(&H)) {
  2977  0124CA  0EEF               	movlw	_H& (0+255)
  2978  0124CC  6EE6               	movwf	postinc1,c
  2979  0124CE  EC5A  F0C2         	call	_check_enter_button	;wreg free
  2980  0124D2  5032               	movf	btemp^0,w,c
  2981  0124D4  B4D8               	btfsc	status,2,c
  2982  0124D6  D062               	goto	l1283
  2983                           
  2984                           ;main.c: 322:    V.calib = 0;
  2985  0124D8  0102               	movlb	2	; () banked
  2986  0124DA  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2987                           
  2988                           ; BSR set to: 2
  2989                           ;main.c: 323:    inp_index += 3;
  2990                           ;stkvar	_inp_index @ sp[(-5)+3]
  2991  0124DC  0EFE               	movlw	-2
  2992  0124DE  006F FF8C  F032    	movff	plusw1,btemp
  2993  0124E4  0E03               	movlw	3
  2994  0124E6  2632               	addwf	btemp^0,f,c
  2995  0124E8  0EFE               	movlw	-2
  2996  0124EA  0060  F0CB  FFE3   	movff	btemp,plusw1
  2997                           
  2998                           ;main.c: 324:    if (inp_index > 9)
  2999                           ;stkvar	_inp_index @ sp[(-5)+3]
  3000  0124F0  0EFE               	movlw	-2
  3001  0124F2  006F FF8C  F032    	movff	plusw1,btemp
  3002  0124F8  0E09               	movlw	9
  3003  0124FA  6432               	cpfsgt	btemp^0,c
  3004  0124FC  D03A               	goto	l10927
  3005                           
  3006                           ; BSR set to: 2
  3007                           ;main.c: 325:     inp_index = 0;
  3008                           ;stkvar	_inp_index @ sp[(-5)+3]
  3009  0124FE  0EFE               	movlw	-2
  3010  012500  6AE3               	clrf	plusw1,c
  3011  012502  D037               	goto	l10927
  3012  012504                     l10909:
  3013                           
  3014                           ; BSR set to: 2
  3015                           ;main.c: 328:     i = C_BATT;
  3016                           ;stkvar	_i @ sp[(-5)+2]
  3017  012504  0EFD               	movlw	-3
  3018  012506  6AE3               	clrf	plusw1,c
  3019                           
  3020                           ; BSR set to: 2
  3021                           ;main.c: 329:     j = C_PV;
  3022                           ;stkvar	_j @ sp[(-5)+1]
  3023  012508  0EFC               	movlw	-4
  3024  01250A  6AE3               	clrf	plusw1,c
  3025  01250C  2AE3               	incf	plusw1,f,c
  3026                           
  3027                           ; BSR set to: 2
  3028                           ;main.c: 330:     k = V_CC;
  3029                           ;stkvar	_k @ sp[(-5)+0]
  3030  01250E  0EFB               	movlw	-5
  3031  012510  6AE3               	clrf	plusw1,c
  3032  012512  82E3               	bsf	plusw1,1,c
  3033                           
  3034                           ;main.c: 331:     break;
  3035  012514  D043               	goto	l1283
  3036  012516                     l10915:
  3037                           
  3038                           ; BSR set to: 2
  3039                           ;main.c: 333:     i = V_BAT;
  3040                           ;stkvar	_i @ sp[(-5)+2]
  3041  012516  0EFD               	movlw	-3
  3042  012518  6AE3               	clrf	plusw1,c
  3043  01251A  84E3               	bsf	plusw1,2,c
  3044                           
  3045                           ;main.c: 334:     j = V_PV;
  3046                           ;stkvar	_j @ sp[(-5)+1]
  3047  01251C  0EFC               	movlw	-4
  3048  01251E  6AE3               	clrf	plusw1,c
  3049  012520  80E3               	bsf	plusw1,0,c
  3050  012522  84E3               	bsf	plusw1,2,c	;indir
  3051                           
  3052                           ;main.c: 335:     k = V_CBUS;
  3053                           ;stkvar	_k @ sp[(-5)+0]
  3054  012524  0EFB               	movlw	-5
  3055  012526  6AE3               	clrf	plusw1,c
  3056  012528  82E3               	bsf	plusw1,1,c
  3057  01252A  84E3               	bsf	plusw1,2,c	;indir
  3058                           
  3059                           ;main.c: 336:     break;
  3060  01252C  D037               	goto	l1283
  3061  01252E                     l10917:
  3062                           
  3063                           ; BSR set to: 2
  3064                           ;main.c: 338:     i = V_BBAT;
  3065                           ;stkvar	_i @ sp[(-5)+2]
  3066  01252E  0EFD               	movlw	-3
  3067  012530  6AE3               	clrf	plusw1,c
  3068  012532  82E3               	bsf	plusw1,1,c
  3069  012534  86E3               	bsf	plusw1,3,c	;indir
  3070                           
  3071                           ; BSR set to: 2
  3072                           ;main.c: 339:     j = V_TEMP;
  3073  012536  0E0B               	movlw	11
  3074  012538  6E3D               	movwf	(btemp+11)^0,c
  3075                           
  3076                           ;stkvar	_j @ sp[(-5)+1]
  3077  01253A  0EFC               	movlw	-4
  3078  01253C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3079                           
  3080                           ; BSR set to: 2
  3081                           ;main.c: 340:     k = V_INVERTER;
  3082                           ;stkvar	_k @ sp[(-5)+0]
  3083  012542  0EFB               	movlw	-5
  3084  012544  6AE3               	clrf	plusw1,c
  3085  012546  84E3               	bsf	plusw1,2,c
  3086  012548  86E3               	bsf	plusw1,3,c	;indir
  3087                           
  3088                           ;main.c: 341:     break;
  3089  01254A  D028               	goto	l1283
  3090  01254C                     l10923:
  3091                           
  3092                           ; BSR set to: 2
  3093                           ;main.c: 343:     i = channel_ANB5;
  3094  01254C  0E0D               	movlw	13
  3095  01254E  6E3D               	movwf	(btemp+11)^0,c
  3096                           
  3097                           ;stkvar	_i @ sp[(-5)+2]
  3098  012550  0EFD               	movlw	-3
  3099  012552  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3100                           
  3101                           ;main.c: 344:     j = channel_ANB5;
  3102  012558  0E0D               	movlw	13
  3103  01255A  6E3D               	movwf	(btemp+11)^0,c
  3104                           
  3105                           ;stkvar	_j @ sp[(-5)+1]
  3106  01255C  0EFC               	movlw	-4
  3107  01255E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3108                           
  3109                           ;main.c: 345:     k = channel_ANB5;
  3110  012564  0E0D               	movlw	13
  3111  012566  6E3D               	movwf	(btemp+11)^0,c
  3112                           
  3113                           ;stkvar	_k @ sp[(-5)+0]
  3114  012568  0EFB               	movlw	-5
  3115  01256A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3116                           
  3117                           ;main.c: 346:     break;
  3118  012570  D015               	goto	l1283
  3119  012572                     l10927:
  3120                           
  3121                           ; BSR set to: 2
  3122                           ;stkvar	_inp_index @ sp[(-5)+3]
  3123  012572  0EFE               	movlw	-2
  3124  012574  50E3               	movf	plusw1,w,c
  3125  012576  6E3C               	movwf	(btemp+10)^0,c
  3126  012578  6A3D               	clrf	(btemp+11)^0,c
  3127                           
  3128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3129                           ; Switch size 1, requested type "simple"
  3130                           ; Number of cases is 1, Range of values is 0 to 0
  3131                           ; switch strategies available:
  3132                           ; Name         Instructions Cycles
  3133                           ; simple_byte            4     3 (average)
  3134                           ;	Chosen strategy is simple_byte
  3135  01257A  503D               	movf	(btemp+11)^0,w,c
  3136  01257C  0A00               	xorlw	0	; case 0
  3137  01257E  A4D8               	btfss	status,2,c
  3138  012580  D00D               	goto	l1283
  3139                           
  3140                           ; BSR set to: 2
  3141                           ; Switch size 1, requested type "simple"
  3142                           ; Number of cases is 4, Range of values is 0 to 9
  3143                           ; switch strategies available:
  3144                           ; Name         Instructions Cycles
  3145                           ; simple_byte           13     7 (average)
  3146                           ;	Chosen strategy is simple_byte
  3147  012582  503C               	movf	(btemp+10)^0,w,c
  3148  012584  0A00               	xorlw	0	; case 0
  3149  012586  B4D8               	btfsc	status,2,c
  3150  012588  D7BD               	goto	l10909
  3151  01258A  0A03               	xorlw	3	; case 3
  3152  01258C  B4D8               	btfsc	status,2,c
  3153  01258E  D7C3               	goto	l10915
  3154  012590  0A05               	xorlw	5	; case 6
  3155  012592  B4D8               	btfsc	status,2,c
  3156  012594  D7CC               	goto	l10917
  3157  012596  0A0F               	xorlw	15	; case 9
  3158  012598  B4D8               	btfsc	status,2,c
  3159  01259A  D7D8               	goto	l10923
  3160  01259C                     l1283:
  3161                           
  3162                           ;main.c: 355:   if (V.set_sequ) {
  3163  01259C  0102               	movlb	2	; () banked
  3164  01259E  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3165  0125A0  D4FC               	goto	l10843
  3166                           
  3167                           ; BSR set to: 2
  3168                           ;main.c: 356:    if (TimerDone(TMR_INFO)) {
  3169  0125A2  0E07               	movlw	7
  3170  0125A4  6EE6               	movwf	postinc1,c
  3171  0125A6  ECB9  F0C5         	call	_TimerDone	;wreg free
  3172  0125AA  5032               	movf	btemp^0,w,c
  3173  0125AC  B4D8               	btfsc	status,2,c
  3174  0125AE  D00B               	goto	l10937
  3175                           
  3176                           ;main.c: 357:     V.set_sequ = 0;
  3177  0125B0  0102               	movlb	2	; () banked
  3178  0125B2  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3179                           
  3180                           ; BSR set to: 2
  3181                           ;main.c: 358:     set_vterm(0);
  3182  0125B4  0E00               	movlw	0
  3183  0125B6  6EE6               	movwf	postinc1,c
  3184  0125B8  EC7A  F0C6         	call	_set_vterm	;wreg free
  3185                           
  3186                           ; BSR set to: 5
  3187                           ;main.c: 359:     update_lcd(0);
  3188  0125BC  0E00               	movlw	0
  3189  0125BE  6EE6               	movwf	postinc1,c
  3190  0125C0  EC28  F0B7         	call	_update_lcd	;wreg free
  3191                           
  3192                           ;main.c: 360:    } else {
  3193  0125C4  D4EA               	goto	l10843
  3194  0125C6                     l10937:
  3195                           
  3196                           ;main.c: 361:     set_vterm(2);
  3197  0125C6  0E02               	movlw	2
  3198  0125C8  6EE6               	movwf	postinc1,c
  3199  0125CA  EC7A  F0C6         	call	_set_vterm	;wreg free
  3200                           
  3201                           ; BSR set to: 5
  3202                           ;main.c: 362:     update_lcd(2);
  3203  0125CE  0E02               	movlw	2
  3204  0125D0  6EE6               	movwf	postinc1,c
  3205  0125D2  EC28  F0B7         	call	_update_lcd	;wreg free
  3206  0125D6  D4E1               	goto	l10843
  3207  0125D8                     __end_of_main:
  3208                           	opt callstack 0
  3209                           
  3210 ;; *************** function _start_switch_handler *****************
  3211 ;; Defined at:
  3212 ;;		line 119 in file "dio.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1  [STACK] void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 1/4
  3223 ;;		On exit  : 3F/39
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    7
  3233 ;; This function calls:
  3234 ;;		_INT1_SetInterruptHandler
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text1
  3241  018C22                     __ptext1:
  3242                           	opt callstack 0
  3243  018C22                     _start_switch_handler:
  3244                           	opt callstack 23
  3245                           
  3246                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3247                           
  3248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3249                           ;incstack = 0
  3250  018C22  0139               	movlb	57	; () banked
  3251  018C24  9195               	bcf	149,0,b	;volatile
  3252                           
  3253                           ; BSR set to: 57
  3254                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3255  018C26  0E8A               	movlw	low _switch_handler
  3256  018C28  6EE6               	movwf	postinc1,c
  3257  018C2A  0E68               	movlw	high _switch_handler
  3258  018C2C  6EE6               	movwf	postinc1,c
  3259  018C2E  0E01               	movlw	low (_switch_handler shr (0+16))
  3260  018C30  6EE6               	movwf	postinc1,c
  3261  018C32  ECF3  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
  3262                           
  3263                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3264  018C36  0E02               	movlw	2
  3265  018C38  0100               	movlb	0	; () banked
  3266  018C3A  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3270  018C3C  0139               	movlb	57	; () banked
  3271  018C3E  8195               	bsf	149,0,b	;volatile
  3272                           
  3273                           ; BSR set to: 57
  3274                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3275  018C40  0012               	return		;funcret
  3276  018C42                     __end_of_start_switch_handler:
  3277                           	opt callstack 0
  3278                           
  3279 ;; *************** function _start_adc_scan *****************
  3280 ;; Defined at:
  3281 ;;		line 33 in file "daq.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1  [STACK] _Bool 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/5
  3292 ;;		On exit  : 1/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    7
  3302 ;; This function calls:
  3303 ;;		_ADCC_DischargeSampleCapacitor
  3304 ;;		_ADCC_SetADIInterruptHandler
  3305 ;;		_ADCC_SetADTIInterruptHandler
  3306 ;;		_ADCC_StartConversion
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text2
  3313  017EEA                     __ptext2:
  3314                           	opt callstack 0
  3315  017EEA                     _start_adc_scan:
  3316                           	opt callstack 23
  3317                           
  3318                           ;daq.c: 35:  if (R.done)
  3319                           
  3320                           ; BSR set to: 57
  3321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3322                           ;incstack = 0
  3323  017EEA  0100               	movlb	0	; () banked
  3324  017EEC  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  3325  017EEE  A4D8               	btfss	status,2,c
  3326  017EF0  0012               	return	
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;daq.c: 38:  R.scan_index = 0;
  3330  017EF2  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3334  017EF4  013A               	movlb	58	; () banked
  3335  017EF6  5140               	movf	64,w,b	;volatile
  3336  017EF8  006E F940  F032    	movff	14928,btemp	;volatile
  3337  017EFE  6A33               	clrf	(btemp+1)^0,c
  3338  017F00  0060  F0C8  F033   	movff	btemp,btemp+1
  3339  017F06  6A32               	clrf	btemp^0,c
  3340  017F08  2632               	addwf	btemp^0,f,c
  3341  017F0A  0E00               	movlw	0
  3342  017F0C  2233               	addwfc	(btemp+1)^0,f,c
  3343  017F0E  0E77               	movlw	119
  3344  017F10  1432               	andwf	btemp^0,w,c
  3345  017F12  0100               	movlb	0	; () banked
  3346  017F14  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  3347  017F16  0E3C               	movlw	60
  3348  017F18  1433               	andwf	(btemp+1)^0,w,c
  3349  017F1A  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3353  017F1C  0EB4               	movlw	low _adc_int_handler
  3354  017F1E  6EE6               	movwf	postinc1,c
  3355  017F20  0E8E               	movlw	high _adc_int_handler
  3356  017F22  6EE6               	movwf	postinc1,c
  3357  017F24  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3358  017F26  6EE6               	movwf	postinc1,c
  3359  017F28  EC2F  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3360                           
  3361                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3362  017F2C  0ECA               	movlw	low _adc_int_t_handler
  3363  017F2E  6EE6               	movwf	postinc1,c
  3364  017F30  0E7C               	movlw	high _adc_int_t_handler
  3365  017F32  6EE6               	movwf	postinc1,c
  3366  017F34  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3367  017F36  6EE6               	movwf	postinc1,c
  3368  017F38  EC1B  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3369                           
  3370                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3371  017F3C  EC37  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3372                           
  3373                           ; BSR set to: 62
  3374                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3375  017F40  0100               	movlb	0	; () banked
  3376  017F42  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  3377  017F44  0B0F               	andlw	15
  3378  017F46  6EE6               	movwf	postinc1,c
  3379  017F48  ECF2  F0C6         	call	_ADCC_StartConversion	;wreg free
  3380                           
  3381                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3382  017F4C  0012               	return		;funcret
  3383  017F4E                     __end_of_start_adc_scan:
  3384                           	opt callstack 0
  3385                           
  3386 ;; *************** function _ADCC_StartConversion *****************
  3387 ;; Defined at:
  3388 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  channel         1  [STACK] enum E16136
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1  [STACK] void 
  3395 ;; Registers used:
  3396 ;;		fsr1l, fsr1h
  3397 ;; Tracked objects:
  3398 ;;		On entry : 3F/0
  3399 ;;		On exit  : 3F/3E
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    6
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_start_adc_scan
  3413 ;;		_adc_int_t_handler
  3414 ;; This function uses a reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text3
  3418  018DE4                     __ptext3:
  3419                           	opt callstack 0
  3420  018DE4                     _ADCC_StartConversion:
  3421                           	opt callstack 6
  3422                           
  3423                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3424                           ;stkvar	_channel @ sp[(0)+-1]
  3425                           
  3426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3427                           ;incstack = 0
  3428  018DE4  0EFF               	movlw	-1
  3429  018DE6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3430                           
  3431                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3432  018DEC  013E               	movlb	62	; () banked
  3433  018DEE  8FF8               	bsf	248,7,b	;volatile
  3434                           
  3435                           ; BSR set to: 62
  3436                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3437  018DF0  81F8               	bsf	248,0,b	;volatile
  3438                           
  3439                           ; BSR set to: 62
  3440                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3441  018DF2  52E5               	movf	postdec1,f,c
  3442  018DF4  0012               	return		;funcret
  3443  018DF6                     __end_of_ADCC_StartConversion:
  3444                           	opt callstack 0
  3445                           
  3446 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3447 ;; Defined at:
  3448 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1  [STACK] void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 3F/3E
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    6
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_start_adc_scan
  3473 ;;		_adc_int_t_handler
  3474 ;; This function uses a reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text4
  3478  018E6E                     __ptext4:
  3479                           	opt callstack 0
  3480  018E6E                     _ADCC_DischargeSampleCapacitor:
  3481                           	opt callstack 6
  3482                           
  3483                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3484                           
  3485                           ; BSR set to: 62
  3486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3487                           ;incstack = 0
  3488  018E6E  0E3B               	movlw	59
  3489  018E70  013E               	movlb	62	; () banked
  3490  018E72  6FF1               	movwf	241,b	;volatile
  3491                           
  3492                           ; BSR set to: 62
  3493                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3494  018E74  0012               	return		;funcret
  3495  018E76                     __end_of_ADCC_DischargeSampleCapacitor:
  3496                           	opt callstack 0
  3497                           
  3498 ;; *************** function _srand *****************
  3499 ;; Defined at:
  3500 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  s               2  [STACK] unsigned int 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1  [STACK] void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3509 ;; Tracked objects:
  3510 ;;		On entry : 3F/0
  3511 ;;		On exit  : 3F/1
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    6
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text5
  3529  018652                     __ptext5:
  3530                           	opt callstack 0
  3531  018652                     _srand:
  3532                           	opt callstack 24
  3533                           
  3534                           ;stkvar	_s @ sp[(0)+-2]
  3535                           
  3536                           ; BSR set to: 62
  3537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3538                           ;incstack = 0
  3539  018652  0EFE               	movlw	-2
  3540  018654  50E3               	movf	plusw1,w,c
  3541  018656  0FFF               	addlw	255
  3542  018658  6E3C               	movwf	(btemp+10)^0,c
  3543  01865A  0EFF               	movlw	-1
  3544  01865C  006F FF8C  F03D    	movff	plusw1,btemp+11
  3545  018662  0EFF               	movlw	255
  3546  018664  223D               	addwfc	(btemp+11)^0,f,c
  3547  018666  0060  F0F0  F1CC   	movff	btemp+10,_seed
  3548  01866C  0060  F0F4  F1CD   	movff	btemp+11,_seed+1
  3549  018672  0101               	movlb	1	; () banked
  3550  018674  6BCE               	clrf	(_seed+2)& (0+255),b
  3551  018676  6BCF               	clrf	(_seed+3)& (0+255),b
  3552  018678  6BD0               	clrf	(_seed+4)& (0+255),b
  3553  01867A  6BD1               	clrf	(_seed+5)& (0+255),b
  3554  01867C  6BD2               	clrf	(_seed+6)& (0+255),b
  3555  01867E  6BD3               	clrf	(_seed+7)& (0+255),b
  3556                           
  3557                           ; BSR set to: 1
  3558                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3559  018680  52E5               	movf	postdec1,f,c
  3560  018682  52E5               	movf	postdec1,f,c
  3561  018684  0012               	return		;funcret
  3562  018686                     __end_of_srand:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _init_display *****************
  3566 ;; Defined at:
  3567 ;;		line 37 in file "eadog.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1  [STACK] void 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/2
  3578 ;;		On exit  : 3F/3D
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    8
  3588 ;; This function calls:
  3589 ;;		_ringBufS_init
  3590 ;;		_send_lcd_cmd
  3591 ;;		_send_lcd_cmd_long
  3592 ;;		_wdtdelay
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text6
  3599  01725E                     __ptext6:
  3600                           	opt callstack 0
  3601  01725E                     _init_display:
  3602                           	opt callstack 22
  3603                           
  3604                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3605                           
  3606                           ; BSR set to: 1
  3607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3608                           ;incstack = 0
  3609  01725E  0E94               	movlw	low _ring_buf1
  3610  017260  0100               	movlb	0	; () banked
  3611  017262  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3612  017264  0E03               	movlw	high _ring_buf1
  3613  017266  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3614                           
  3615                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3616  017268  0E00               	movlw	low _ring_buf2
  3617  01726A  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3618  01726C  0E04               	movlw	high _ring_buf2
  3619  01726E  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3623  017270  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3624  017276  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3625  01727C  EC53  F0C4         	call	_ringBufS_init	;wreg free
  3626                           
  3627                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3628  017280  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3629  017286  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3630  01728C  EC53  F0C4         	call	_ringBufS_init	;wreg free
  3631                           
  3632                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3633  017290  84BE               	bsf	190,2,c	;volatile
  3634  017292  84BC               	bsf	188,2,c	;volatile
  3635                           
  3636                           ;eadog.c: 46:  wdtdelay(350000);
  3637  017294  0E30               	movlw	48
  3638  017296  6EE6               	movwf	postinc1,c
  3639  017298  0E57               	movlw	87
  3640  01729A  6EE6               	movwf	postinc1,c
  3641  01729C  0E05               	movlw	5
  3642  01729E  6EE6               	movwf	postinc1,c
  3643  0172A0  0E00               	movlw	0
  3644  0172A2  6EE6               	movwf	postinc1,c
  3645  0172A4  EC98  F0C0         	call	_wdtdelay	;wreg free
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3649  0172A8  0E39               	movlw	57
  3650  0172AA  6EE6               	movwf	postinc1,c
  3651  0172AC  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3655  0172B0  0E1D               	movlw	29
  3656  0172B2  6EE6               	movwf	postinc1,c
  3657  0172B4  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3661  0172B8  0E50               	movlw	80
  3662  0172BA  6EE6               	movwf	postinc1,c
  3663  0172BC  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3667  0172C0  0E6C               	movlw	108
  3668  0172C2  6EE6               	movwf	postinc1,c
  3669  0172C4  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3673  0172C8  0E76               	movlw	118
  3674  0172CA  6EE6               	movwf	postinc1,c
  3675  0172CC  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3679  0172D0  0E38               	movlw	56
  3680  0172D2  6EE6               	movwf	postinc1,c
  3681  0172D4  EC2B  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3685  0172D8  0E0F               	movlw	15
  3686  0172DA  6EE6               	movwf	postinc1,c
  3687  0172DC  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3691  0172E0  0E01               	movlw	1
  3692  0172E2  6EE6               	movwf	postinc1,c
  3693  0172E4  EC2B  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3697  0172E8  0E02               	movlw	2
  3698  0172EA  6EE6               	movwf	postinc1,c
  3699  0172EC  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3703  0172F0  0E06               	movlw	6
  3704  0172F2  6EE6               	movwf	postinc1,c
  3705  0172F4  EC3F  F0C4         	call	_send_lcd_cmd	;wreg free
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;eadog.c: 57:  wdtdelay(30);
  3709  0172F8  0E1E               	movlw	30
  3710  0172FA  6EE6               	movwf	postinc1,c
  3711  0172FC  0E00               	movlw	0
  3712  0172FE  6EE6               	movwf	postinc1,c
  3713  017300  0E00               	movlw	0
  3714  017302  6EE6               	movwf	postinc1,c
  3715  017304  0E00               	movlw	0
  3716  017306  6EE6               	movwf	postinc1,c
  3717  017308  EC98  F0C0         	call	_wdtdelay	;wreg free
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3721  01730C  0E02               	movlw	2
  3722  01730E  013D               	movlb	61	; () banked
  3723  017310  6F16               	movwf	22,b	;volatile
  3724                           
  3725                           ; BSR set to: 61
  3726                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3727  017312  0E40               	movlw	64
  3728  017314  6F15               	movwf	21,b	;volatile
  3729                           
  3730                           ; BSR set to: 61
  3731                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3732  017316  0E83               	movlw	131
  3733  017318  6F14               	movwf	20,b	;volatile
  3734                           
  3735                           ; BSR set to: 61
  3736                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3737  01731A  931A               	bcf	26,1,b	;volatile
  3738                           
  3739                           ; BSR set to: 61
  3740                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3741  01731C  0E3F               	movlw	-193
  3742  01731E  013B               	movlb	59	; () banked
  3743  017320  17FD               	andwf	253,f,b	;volatile
  3744                           
  3745                           ; BSR set to: 59
  3746                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3747  017322  9BFD               	bcf	253,5,b	;volatile
  3748                           
  3749                           ; BSR set to: 59
  3750                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3751  017324  51FD               	movf	253,w,b	;volatile
  3752  017326  0BF9               	andlw	-7
  3753  017328  0902               	iorlw	2
  3754  01732A  6FFD               	movwf	253,b	;volatile
  3755                           
  3756                           ; BSR set to: 59
  3757                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3758  01732C  0EE7               	movlw	-25
  3759  01732E  17FD               	andwf	253,f,b	;volatile
  3760                           
  3761                           ; BSR set to: 59
  3762                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3763  017330  81FD               	bsf	253,0,b	;volatile
  3764                           
  3765                           ; BSR set to: 59
  3766                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3767  017332  0E94               	movlw	low _ring_buf1
  3768  017334  6FF9               	movwf	249,b	;volatile
  3769  017336  0E03               	movlw	high _ring_buf1
  3770  017338  6FFA               	movwf	250,b	;volatile
  3771  01733A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3772  01733C  6FFB               	movwf	251,b	;volatile
  3773                           
  3774                           ; BSR set to: 59
  3775                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3776  01733E  9BFC               	bcf	252,5,b	;volatile
  3777                           
  3778                           ; BSR set to: 59
  3779                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3780  017340  013D               	movlb	61	; () banked
  3781  017342  831A               	bsf	26,1,b	;volatile
  3782                           
  3783                           ; BSR set to: 61
  3784                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3785  017344  94BE               	bcf	190,2,c	;volatile
  3786                           
  3787                           ; BSR set to: 61
  3788                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3789  017346  0012               	return		;funcret
  3790  017348                     __end_of_init_display:
  3791                           	opt callstack 0
  3792                           
  3793 ;; *************** function _send_lcd_cmd_long *****************
  3794 ;; Defined at:
  3795 ;;		line 114 in file "eadog.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  cmd             1  [STACK] const unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1  [STACK] void 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3804 ;; Tracked objects:
  3805 ;;		On entry : 3F/0
  3806 ;;		On exit  : 3F/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    7
  3816 ;; This function calls:
  3817 ;;		_SPI1_Exchange8bit
  3818 ;;		_wdtdelay
  3819 ;; This function is called by:
  3820 ;;		_init_display
  3821 ;; This function uses a reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text7
  3825  018856                     __ptext7:
  3826                           	opt callstack 0
  3827  018856                     _send_lcd_cmd_long:
  3828                           	opt callstack 22
  3829                           
  3830                           ; BSR set to: 61
  3831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3832                           ;incstack = 0
  3833                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3834  018856  92BC               	bcf	188,1,c	;volatile
  3835                           
  3836                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3837  018858  94BC               	bcf	188,2,c	;volatile
  3838                           
  3839                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3840                           ;stkvar	_cmd @ sp[(0)+-1]
  3841  01885A  0EFF               	movlw	-1
  3842  01885C  50E3               	movf	plusw1,w,c
  3843  01885E  6EE6               	movwf	postinc1,c
  3844  018860  EC21  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3845                           
  3846                           ; BSR set to: 57
  3847                           ;eadog.c: 119:  wdtdelay(800);
  3848  018864  0E20               	movlw	32
  3849  018866  6EE6               	movwf	postinc1,c
  3850  018868  0E03               	movlw	3
  3851  01886A  6EE6               	movwf	postinc1,c
  3852  01886C  0E00               	movlw	0
  3853  01886E  6EE6               	movwf	postinc1,c
  3854  018870  0E00               	movlw	0
  3855  018872  6EE6               	movwf	postinc1,c
  3856  018874  EC98  F0C0         	call	_wdtdelay	;wreg free
  3857                           
  3858                           ; BSR set to: 0
  3859  018878  82BC               	bsf	188,1,c	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3863  01887A  52E5               	movf	postdec1,f,c
  3864  01887C  0012               	return		;funcret
  3865  01887E                     __end_of_send_lcd_cmd_long:
  3866                           	opt callstack 0
  3867                           
  3868 ;; *************** function _send_lcd_cmd *****************
  3869 ;; Defined at:
  3870 ;;		line 102 in file "eadog.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  cmd             1  [STACK] const unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1  [STACK] void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3879 ;; Tracked objects:
  3880 ;;		On entry : 3F/0
  3881 ;;		On exit  : 3F/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    7
  3891 ;; This function calls:
  3892 ;;		_SPI1_Exchange8bit
  3893 ;;		_wdtdelay
  3894 ;; This function is called by:
  3895 ;;		_init_display
  3896 ;; This function uses a reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text8
  3900  01887E                     __ptext8:
  3901                           	opt callstack 0
  3902  01887E                     _send_lcd_cmd:
  3903                           	opt callstack 22
  3904                           
  3905                           ; BSR set to: 0
  3906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3907                           ;incstack = 0
  3908                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3909  01887E  92BC               	bcf	188,1,c	;volatile
  3910                           
  3911                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3912  018880  94BC               	bcf	188,2,c	;volatile
  3913                           
  3914                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3915                           ;stkvar	_cmd @ sp[(0)+-1]
  3916  018882  0EFF               	movlw	-1
  3917  018884  50E3               	movf	plusw1,w,c
  3918  018886  6EE6               	movwf	postinc1,c
  3919  018888  EC21  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3920                           
  3921                           ; BSR set to: 57
  3922                           ;eadog.c: 107:  wdtdelay(30);
  3923  01888C  0E1E               	movlw	30
  3924  01888E  6EE6               	movwf	postinc1,c
  3925  018890  0E00               	movlw	0
  3926  018892  6EE6               	movwf	postinc1,c
  3927  018894  0E00               	movlw	0
  3928  018896  6EE6               	movwf	postinc1,c
  3929  018898  0E00               	movlw	0
  3930  01889A  6EE6               	movwf	postinc1,c
  3931  01889C  EC98  F0C0         	call	_wdtdelay	;wreg free
  3932                           
  3933                           ; BSR set to: 0
  3934  0188A0  82BC               	bsf	188,1,c	;volatile
  3935                           
  3936                           ; BSR set to: 0
  3937                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3938  0188A2  52E5               	movf	postdec1,f,c
  3939  0188A4  0012               	return		;funcret
  3940  0188A6                     __end_of_send_lcd_cmd:
  3941                           	opt callstack 0
  3942                           
  3943 ;; *************** function _SPI1_Exchange8bit *****************
  3944 ;; Defined at:
  3945 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  data            1  [STACK] unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1  [STACK] unsigned char 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 3F/39
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    6
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_send_lcd_cmd
  3970 ;;		_send_lcd_cmd_long
  3971 ;; This function uses a reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text9
  3975  018C42                     __ptext9:
  3976                           	opt callstack 0
  3977  018C42                     _SPI1_Exchange8bit:
  3978                           	opt callstack 22
  3979                           
  3980                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3981                           
  3982                           ; BSR set to: 0
  3983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3984                           ;incstack = 0
  3985  018C42  0E01               	movlw	1
  3986  018C44  013D               	movlb	61	; () banked
  3987  018C46  6F12               	movwf	18,b	;volatile
  3988                           
  3989                           ; BSR set to: 61
  3990                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3991                           ;stkvar	_data @ sp[(0)+-1]
  3992  018C48  0EFF               	movlw	-1
  3993  018C4A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3994  018C50                     l835:
  3995                           
  3996                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3997  018C50  0139               	movlb	57	; () banked
  3998  018C52  A9A2               	btfss	162,4,b	;volatile
  3999  018C54  D7FD               	goto	l835
  4000                           
  4001                           ; BSR set to: 57
  4002                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4003  018C56  006F F440  F032    	movff	15632,btemp	;volatile
  4004                           
  4005                           ; BSR set to: 57
  4006                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4007  018C5C  52E5               	movf	postdec1,f,c
  4008  018C5E  0012               	return		;funcret
  4009  018C60                     __end_of_SPI1_Exchange8bit:
  4010                           	opt callstack 0
  4011                           
  4012 ;; *************** function _ringBufS_init *****************
  4013 ;; Defined at:
  4014 ;;		line 22 in file "ringbufs.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  _this           2  [STACK] PTR volatile struct ring
  4017 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1  [STACK] void 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    7
  4036 ;; This function calls:
  4037 ;;		_memset
  4038 ;; This function is called by:
  4039 ;;		_init_display
  4040 ;; This function uses a reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text10
  4044  0188A6                     __ptext10:
  4045                           	opt callstack 0
  4046  0188A6                     _ringBufS_init:
  4047                           	opt callstack 22
  4048                           
  4049                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4050                           
  4051                           ; BSR set to: 57
  4052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4053                           ;incstack = 0
  4054  0188A6  0E43               	movlw	67
  4055  0188A8  6EE6               	movwf	postinc1,c
  4056  0188AA  0E00               	movlw	0
  4057  0188AC  6EE6               	movwf	postinc1,c
  4058  0188AE  0E00               	movlw	0
  4059  0188B0  6EE6               	movwf	postinc1,c
  4060  0188B2  0E00               	movlw	0
  4061  0188B4  6EE6               	movwf	postinc1,c
  4062                           
  4063                           ;stkvar	__this @ sp[(-4)+-2]
  4064  0188B6  0EFA               	movlw	-6
  4065  0188B8  006F FF8F FFE6     	movff	plusw1,postinc1
  4066  0188BE  006F FF8F FFE6     	movff	plusw1,postinc1
  4067  0188C4  ECC5  F0A5         	call	_memset	;wreg free
  4068                           
  4069                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4070  0188C8  52E5               	movf	postdec1,f,c
  4071  0188CA  52E5               	movf	postdec1,f,c
  4072  0188CC  0012               	return		;funcret
  4073  0188CE                     __end_of_ringBufS_init:
  4074                           	opt callstack 0
  4075                           
  4076 ;; *************** function _hid_display *****************
  4077 ;; Defined at:
  4078 ;;		line 17 in file "hid.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  h               1  [STACK] PTR struct H_data
  4081 ;;		 -> H(7), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1  [STACK] PTR struct H_data
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4088 ;; Tracked objects:
  4089 ;;		On entry : 3C/1
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    8
  4100 ;; This function calls:
  4101 ;;		_hid_input
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text11
  4108  017068                     __ptext11:
  4109                           	opt callstack 0
  4110  017068                     _hid_display:
  4111                           	opt callstack 22
  4112                           
  4113                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4114                           ;stkvar	_h @ sp[(0)+-1]
  4115                           
  4116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4117                           ;incstack = 0
  4118  017068  0EFF               	movlw	-1
  4119  01706A  50E3               	movf	plusw1,w,c
  4120  01706C  6EE6               	movwf	postinc1,c
  4121  01706E  EC55  F0BD         	call	_hid_input	;wreg free
  4122                           
  4123                           ;hid.c: 21:  switch (h->h_state) {
  4124  017072  D066               	goto	l9229
  4125  017074                     l9207:
  4126                           
  4127                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4128                           ;stkvar	_h @ sp[(0)+-1]
  4129  017074  0EFF               	movlw	-1
  4130  017076  50E3               	movf	plusw1,w,c
  4131  017078  6ED9               	movwf	fsr2l,c
  4132  01707A  6ADA               	clrf	fsr2h,c
  4133  01707C  0E01               	movlw	1
  4134  01707E  26D9               	addwf	fsr2l,f,c
  4135  017080  0E01               	movlw	1
  4136  017082  6EDF               	movwf	indf2,c
  4137                           
  4138                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4139                           ;stkvar	_h @ sp[(0)+-1]
  4140  017084  0EFF               	movlw	-1
  4141  017086  50E3               	movf	plusw1,w,c
  4142  017088  6ED9               	movwf	fsr2l,c
  4143  01708A  6ADA               	clrf	fsr2h,c
  4144  01708C  0E00               	movlw	0
  4145  01708E  6EDF               	movwf	indf2,c
  4146                           
  4147                           ;hid.c: 25:   h->wait_enter = 1;
  4148                           ;stkvar	_h @ sp[(0)+-1]
  4149  017090  0EFF               	movlw	-1
  4150  017092  50E3               	movf	plusw1,w,c
  4151  017094  6ED9               	movwf	fsr2l,c
  4152  017096  6ADA               	clrf	fsr2h,c
  4153  017098  0E04               	movlw	4
  4154  01709A  26D9               	addwf	fsr2l,f,c
  4155  01709C  0E01               	movlw	1
  4156  01709E  6EDF               	movwf	indf2,c
  4157                           
  4158                           ;hid.c: 26:   h->wait_select = 1;
  4159                           ;stkvar	_h @ sp[(0)+-1]
  4160  0170A0  0EFF               	movlw	-1
  4161  0170A2  50E3               	movf	plusw1,w,c
  4162  0170A4  6ED9               	movwf	fsr2l,c
  4163  0170A6  6ADA               	clrf	fsr2h,c
  4164  0170A8  0E02               	movlw	2
  4165  0170AA  26D9               	addwf	fsr2l,f,c
  4166  0170AC  0E01               	movlw	1
  4167  0170AE  6EDF               	movwf	indf2,c
  4168                           
  4169                           ;hid.c: 27:   h->select_p = SW_OFF;
  4170                           ;stkvar	_h @ sp[(0)+-1]
  4171  0170B0  0EFF               	movlw	-1
  4172  0170B2  50E3               	movf	plusw1,w,c
  4173  0170B4  6ED9               	movwf	fsr2l,c
  4174  0170B6  6ADA               	clrf	fsr2h,c
  4175  0170B8  0E03               	movlw	3
  4176  0170BA  26D9               	addwf	fsr2l,f,c
  4177  0170BC  0E00               	movlw	0
  4178  0170BE  6EDF               	movwf	indf2,c
  4179                           
  4180                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4181                           ;stkvar	_h @ sp[(0)+-1]
  4182  0170C0  0EFF               	movlw	-1
  4183  0170C2  50E3               	movf	plusw1,w,c
  4184  0170C4  6ED9               	movwf	fsr2l,c
  4185  0170C6  6ADA               	clrf	fsr2h,c
  4186  0170C8  0E05               	movlw	5
  4187  0170CA  26D9               	addwf	fsr2l,f,c
  4188  0170CC  0E00               	movlw	0
  4189  0170CE  D036               	goto	L1
  4190  0170D0                     l9219:
  4191                           
  4192                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4193                           ;stkvar	_h @ sp[(0)+-1]
  4194  0170D0  0EFF               	movlw	-1
  4195  0170D2  50E3               	movf	plusw1,w,c
  4196  0170D4  6ED9               	movwf	fsr2l,c
  4197  0170D6  6ADA               	clrf	fsr2h,c
  4198  0170D8  0E02               	movlw	2
  4199  0170DA  26D9               	addwf	fsr2l,f,c
  4200  0170DC  50DF               	movf	indf2,w,c
  4201  0170DE  A4D8               	btfss	status,2,c
  4202  0170E0  D042               	goto	l1815
  4203                           
  4204                           ;stkvar	_h @ sp[(0)+-1]
  4205  0170E2  0EFF               	movlw	-1
  4206  0170E4  50E3               	movf	plusw1,w,c
  4207  0170E6  6ED9               	movwf	fsr2l,c
  4208  0170E8  6ADA               	clrf	fsr2h,c
  4209  0170EA  0E03               	movlw	3
  4210  0170EC  26D9               	addwf	fsr2l,f,c
  4211  0170EE  50DF               	movf	indf2,w,c
  4212  0170F0  A4D8               	btfss	status,2,c
  4213  0170F2  D039               	goto	l1815
  4214                           
  4215                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4216                           ;stkvar	_h @ sp[(0)+-1]
  4217  0170F4  0EFF               	movlw	-1
  4218  0170F6  50E3               	movf	plusw1,w,c
  4219  0170F8  6ED9               	movwf	fsr2l,c
  4220  0170FA  6ADA               	clrf	fsr2h,c
  4221  0170FC  0E06               	movlw	6
  4222  0170FE  26D9               	addwf	fsr2l,f,c
  4223                           
  4224                           ;stkvar	_h @ sp[(0)+-1]
  4225  017100  0EFF               	movlw	-1
  4226  017102  50E3               	movf	plusw1,w,c
  4227  017104  6EE9               	movwf	fsr0l,c
  4228  017106  6AEA               	clrf	fsr0h,c
  4229  017108  0E06               	movlw	6
  4230  01710A  26E9               	addwf	fsr0l,f,c
  4231  01710C  2AEF               	incf	indf0,f,c
  4232  01710E  50EF               	movf	indf0,w,c
  4233  017110  0B03               	andlw	3
  4234  017112  6EDF               	movwf	indf2,c
  4235                           
  4236                           ;hid.c: 34:    h->hid_display = h->sequence;
  4237                           ;stkvar	_h @ sp[(0)+-1]
  4238  017114  0EFF               	movlw	-1
  4239  017116  50E3               	movf	plusw1,w,c
  4240  017118  6ED9               	movwf	fsr2l,c
  4241  01711A  6ADA               	clrf	fsr2h,c
  4242  01711C  0E06               	movlw	6
  4243  01711E  26D9               	addwf	fsr2l,f,c
  4244                           
  4245                           ;stkvar	_h @ sp[(0)+-1]
  4246  017120  0EFF               	movlw	-1
  4247  017122  50E3               	movf	plusw1,w,c
  4248  017124  6EE9               	movwf	fsr0l,c
  4249  017126  6AEA               	clrf	fsr0h,c
  4250  017128  006F FF7F FFEF     	movff	indf2,indf0
  4251                           
  4252                           ;hid.c: 35:    h->wait_select = 1;
  4253                           ;stkvar	_h @ sp[(0)+-1]
  4254  01712E  0EFF               	movlw	-1
  4255  017130  50E3               	movf	plusw1,w,c
  4256  017132  6ED9               	movwf	fsr2l,c
  4257  017134  6ADA               	clrf	fsr2h,c
  4258  017136  0E02               	movlw	2
  4259  017138  26D9               	addwf	fsr2l,f,c
  4260  01713A  0E01               	movlw	1
  4261  01713C                     L1:
  4262  01713C  6EDF               	movwf	indf2,c
  4263  01713E  D013               	goto	l1815
  4264  017140                     l9229:
  4265                           
  4266                           ;stkvar	_h @ sp[(0)+-1]
  4267  017140  0EFF               	movlw	-1
  4268  017142  50E3               	movf	plusw1,w,c
  4269  017144  6ED9               	movwf	fsr2l,c
  4270  017146  6ADA               	clrf	fsr2h,c
  4271  017148  0E01               	movlw	1
  4272  01714A  26D9               	addwf	fsr2l,f,c
  4273  01714C  50DF               	movf	indf2,w,c
  4274  01714E  6E3C               	movwf	(btemp+10)^0,c
  4275  017150  6A3D               	clrf	(btemp+11)^0,c
  4276                           
  4277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4278                           ; Switch size 1, requested type "simple"
  4279                           ; Number of cases is 1, Range of values is 0 to 0
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            4     3 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284  017152  503D               	movf	(btemp+11)^0,w,c
  4285  017154  0A00               	xorlw	0	; case 0
  4286  017156  A4D8               	btfss	status,2,c
  4287  017158  D7BB               	goto	l9219
  4288                           
  4289                           ; Switch size 1, requested type "simple"
  4290                           ; Number of cases is 2, Range of values is 0 to 1
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte            7     4 (average)
  4294                           ;	Chosen strategy is simple_byte
  4295  01715A  503C               	movf	(btemp+10)^0,w,c
  4296  01715C  0A00               	xorlw	0	; case 0
  4297  01715E  B4D8               	btfsc	status,2,c
  4298  017160  D789               	goto	l9207
  4299  017162  0A01               	xorlw	1	; case 1
  4300  017164  D7B5               	goto	l9219
  4301  017166                     l1815:
  4302                           
  4303                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4304  017166  52E5               	movf	postdec1,f,c
  4305  017168  0012               	return		;funcret
  4306  01716A                     __end_of_hid_display:
  4307                           	opt callstack 0
  4308                           
  4309 ;; *************** function _hid_input *****************
  4310 ;; Defined at:
  4311 ;;		line 3 in file "hid.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  h               1  [STACK] PTR struct H_data
  4314 ;;		 -> H(7), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1  [STACK] PTR struct H_data
  4319 ;; Registers used:
  4320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/1
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;Total ram usage:        0 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    7
  4333 ;; This function calls:
  4334 ;;		_get_switch
  4335 ;; This function is called by:
  4336 ;;		_hid_display
  4337 ;; This function uses a reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text12
  4341  017AAA                     __ptext12:
  4342                           	opt callstack 0
  4343  017AAA                     _hid_input:
  4344                           	opt callstack 22
  4345                           
  4346                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4347                           
  4348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4349                           ;incstack = 0
  4350  017AAA  0E02               	movlw	2
  4351  017AAC  6EE6               	movwf	postinc1,c
  4352  017AAE  EC67  F0C4         	call	_get_switch	;wreg free
  4353  017AB2  5032               	movf	btemp^0,w,c
  4354  017AB4  B4D8               	btfsc	status,2,c
  4355  017AB6  D01C               	goto	l8979
  4356                           
  4357                           ;hid.c: 6:   h->wait_select = 0;
  4358                           ;stkvar	_h @ sp[(0)+-1]
  4359  017AB8  0EFF               	movlw	-1
  4360  017ABA  50E3               	movf	plusw1,w,c
  4361  017ABC  6ED9               	movwf	fsr2l,c
  4362  017ABE  6ADA               	clrf	fsr2h,c
  4363  017AC0  0E02               	movlw	2
  4364  017AC2  26D9               	addwf	fsr2l,f,c
  4365  017AC4  0E00               	movlw	0
  4366  017AC6  6EDF               	movwf	indf2,c
  4367                           
  4368                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4369  017AC8  0E02               	movlw	2
  4370  017ACA  6EE6               	movwf	postinc1,c
  4371  017ACC  EC67  F0C4         	call	_get_switch	;wreg free
  4372  017AD0  5032               	movf	btemp^0,w,c
  4373  017AD2  B4D8               	btfsc	status,2,c
  4374  017AD4  D003               	goto	u8470
  4375  017AD6  6A3D               	clrf	(btemp+11)^0,c
  4376  017AD8  2A3D               	incf	(btemp+11)^0,f,c
  4377  017ADA  D001               	goto	u8488
  4378  017ADC                     u8470:
  4379  017ADC  6A3D               	clrf	(btemp+11)^0,c
  4380  017ADE                     u8488:
  4381                           
  4382                           ;stkvar	_h @ sp[(0)+-1]
  4383  017ADE  0EFF               	movlw	-1
  4384  017AE0  50E3               	movf	plusw1,w,c
  4385  017AE2  6ED9               	movwf	fsr2l,c
  4386  017AE4  6ADA               	clrf	fsr2h,c
  4387  017AE6  0E03               	movlw	3
  4388  017AE8  26D9               	addwf	fsr2l,f,c
  4389  017AEA  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4390  017AF0                     l8979:
  4391                           
  4392                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4393  017AF0  0E03               	movlw	3
  4394  017AF2  6EE6               	movwf	postinc1,c
  4395  017AF4  EC67  F0C4         	call	_get_switch	;wreg free
  4396  017AF8  5032               	movf	btemp^0,w,c
  4397  017AFA  B4D8               	btfsc	status,2,c
  4398  017AFC  D01C               	goto	l1806
  4399                           
  4400                           ;hid.c: 11:   h->wait_enter = 0;
  4401                           ;stkvar	_h @ sp[(0)+-1]
  4402  017AFE  0EFF               	movlw	-1
  4403  017B00  50E3               	movf	plusw1,w,c
  4404  017B02  6ED9               	movwf	fsr2l,c
  4405  017B04  6ADA               	clrf	fsr2h,c
  4406  017B06  0E04               	movlw	4
  4407  017B08  26D9               	addwf	fsr2l,f,c
  4408  017B0A  0E00               	movlw	0
  4409  017B0C  6EDF               	movwf	indf2,c
  4410                           
  4411                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4412  017B0E  0E03               	movlw	3
  4413  017B10  6EE6               	movwf	postinc1,c
  4414  017B12  EC67  F0C4         	call	_get_switch	;wreg free
  4415  017B16  5032               	movf	btemp^0,w,c
  4416  017B18  B4D8               	btfsc	status,2,c
  4417  017B1A  D003               	goto	u8500
  4418  017B1C  6A3D               	clrf	(btemp+11)^0,c
  4419  017B1E  2A3D               	incf	(btemp+11)^0,f,c
  4420  017B20  D001               	goto	u8518
  4421  017B22                     u8500:
  4422  017B22  6A3D               	clrf	(btemp+11)^0,c
  4423  017B24                     u8518:
  4424                           
  4425                           ;stkvar	_h @ sp[(0)+-1]
  4426  017B24  0EFF               	movlw	-1
  4427  017B26  50E3               	movf	plusw1,w,c
  4428  017B28  6ED9               	movwf	fsr2l,c
  4429  017B2A  6ADA               	clrf	fsr2h,c
  4430  017B2C  0E05               	movlw	5
  4431  017B2E  26D9               	addwf	fsr2l,f,c
  4432  017B30  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4433  017B36                     l1806:
  4434                           
  4435                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4436  017B36  52E5               	movf	postdec1,f,c
  4437  017B38  0012               	return		;funcret
  4438  017B3A                     __end_of_hid_input:
  4439                           	opt callstack 0
  4440                           
  4441 ;; *************** function _get_switch *****************
  4442 ;; Defined at:
  4443 ;;		line 18 in file "dio.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  i               1  [STACK] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1  [STACK] enum E17013
  4450 ;; Registers used:
  4451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/2
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4461 ;;Total ram usage:        0 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    6
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;;		_hid_input
  4469 ;; This function uses a reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text13
  4473  0188CE                     __ptext13:
  4474                           	opt callstack 0
  4475  0188CE                     _get_switch:
  4476                           	opt callstack 22
  4477                           
  4478                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4479                           ;stkvar	_i @ sp[(0)+-1]
  4480                           
  4481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4482                           ;incstack = 0
  4483  0188CE  0EFF               	movlw	-1
  4484  0188D0  006F FF8C  F032    	movff	plusw1,btemp
  4485  0188D6  0E03               	movlw	3
  4486  0188D8  6432               	cpfsgt	btemp^0,c
  4487  0188DA  D002               	goto	l8295
  4488                           
  4489                           ;dio.c: 21:   return SW_OFF;
  4490  0188DC  0E00               	movlw	0
  4491  0188DE  D008               	goto	L2
  4492  0188E0                     l8295:
  4493                           
  4494                           ;dio.c: 23:  return S.button[i].sw;
  4495                           ;stkvar	_i @ sp[(0)+-1]
  4496  0188E0  0EFF               	movlw	-1
  4497  0188E2  50E3               	movf	plusw1,w,c
  4498  0188E4  0D05               	mullw	5
  4499  0188E6  50F3               	movf	243,w,c
  4500  0188E8  0F60               	addlw	low _S
  4501  0188EA  6ED9               	movwf	fsr2l,c
  4502  0188EC  6ADA               	clrf	fsr2h,c
  4503  0188EE  50DF               	movf	indf2,w,c
  4504  0188F0                     L2:
  4505  0188F0  6E32               	movwf	btemp^0,c
  4506                           
  4507                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4508  0188F2  52E5               	movf	postdec1,f,c
  4509  0188F4  0012               	return		;funcret
  4510  0188F6                     __end_of_get_switch:
  4511                           	opt callstack 0
  4512                           
  4513 ;; *************** function _eaDogM_WriteCommand *****************
  4514 ;; Defined at:
  4515 ;;		line 160 in file "eadog.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  cmd             1  [STACK] const unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1  [STACK] void 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4524 ;; Tracked objects:
  4525 ;;		On entry : 3F/3D
  4526 ;;		On exit  : 3F/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4533 ;;Total ram usage:        0 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:   16
  4536 ;; This function calls:
  4537 ;;		_send_lcd_cmd_dma
  4538 ;; This function is called by:
  4539 ;;		_main
  4540 ;; This function uses a reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text14
  4544  018E06                     __ptext14:
  4545                           	opt callstack 0
  4546  018E06                     _eaDogM_WriteCommand:
  4547                           	opt callstack 14
  4548                           
  4549                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  4550                           ;stkvar	_cmd @ sp[(0)+-1]
  4551                           
  4552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4553                           ;incstack = 0
  4554  018E06  0EFF               	movlw	-1
  4555  018E08  50E3               	movf	plusw1,w,c
  4556  018E0A  6EE6               	movwf	postinc1,c
  4557  018E0C  ECF2  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  4558                           
  4559                           ; BSR set to: 0
  4560                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4561  018E10  52E5               	movf	postdec1,f,c
  4562  018E12  0012               	return		;funcret
  4563  018E14                     __end_of_eaDogM_WriteCommand:
  4564                           	opt callstack 0
  4565                           
  4566 ;; *************** function _convert_adc_data *****************
  4567 ;; Defined at:
  4568 ;;		line 39 in file "mbmc.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  i               1  [STACK] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1  [STACK] void 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/39
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    9
  4589 ;; This function calls:
  4590 ;;		_conv_raw_result
  4591 ;;		_lp_filter
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text15
  4598  01759C                     __ptext15:
  4599                           	opt callstack 0
  4600  01759C                     _convert_adc_data:
  4601                           	opt callstack 0
  4602                           
  4603                           ; BSR set to: 0
  4604                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4605  01759C  52E6               	movf	postinc1,f,c
  4606                           
  4607                           ;mbmc.c: 41:  uint8_t i = 0;
  4608                           ;stkvar	_i @ sp[(-1)+0]
  4609                           
  4610                           ;incstack = 0
  4611  01759E  0EFF               	movlw	-1
  4612  0175A0  6AE3               	clrf	plusw1,c
  4613  0175A2                     l9185:
  4614                           
  4615                           ;mbmc.c: 44:   if (V.calib) {
  4616  0175A2  0102               	movlb	2	; () banked
  4617  0175A4  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4618  0175A6  B4D8               	btfsc	status,2,c
  4619  0175A8  D01B               	goto	l9189
  4620                           
  4621                           ; BSR set to: 2
  4622                           ;mbmc.c: 45:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4623  0175AA  0E01               	movlw	1
  4624  0175AC  6EE6               	movwf	postinc1,c
  4625                           
  4626                           ;stkvar	_i @ sp[(-2)+0]
  4627  0175AE  0EFE               	movlw	-2
  4628  0175B0  50E3               	movf	plusw1,w,c
  4629  0175B2  6EE6               	movwf	postinc1,c
  4630  0175B4  0E01               	movlw	1
  4631  0175B6  6EE6               	movwf	postinc1,c
  4632                           
  4633                           ;stkvar	_i @ sp[(-4)+0]
  4634  0175B8  0EFC               	movlw	-4
  4635  0175BA  50E3               	movf	plusw1,w,c
  4636  0175BC  6EE6               	movwf	postinc1,c
  4637  0175BE  EC9C  F09D         	call	_conv_raw_result	;wreg free
  4638  0175C2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4639  0175C8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4640  0175CE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4641  0175D4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4642  0175DA  EC89  F0B0         	call	_lp_filter	;wreg free
  4643  0175DE  D01A               	goto	L3
  4644  0175E0                     l9189:
  4645                           
  4646                           ; BSR set to: 2
  4647                           ;mbmc.c: 47:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4648  0175E0  0E00               	movlw	0
  4649  0175E2  6EE6               	movwf	postinc1,c
  4650                           
  4651                           ;stkvar	_i @ sp[(-2)+0]
  4652  0175E4  0EFE               	movlw	-2
  4653  0175E6  50E3               	movf	plusw1,w,c
  4654  0175E8  6EE6               	movwf	postinc1,c
  4655  0175EA  0E00               	movlw	0
  4656  0175EC  6EE6               	movwf	postinc1,c
  4657                           
  4658                           ;stkvar	_i @ sp[(-4)+0]
  4659  0175EE  0EFC               	movlw	-4
  4660  0175F0  50E3               	movf	plusw1,w,c
  4661  0175F2  6EE6               	movwf	postinc1,c
  4662  0175F4  EC9C  F09D         	call	_conv_raw_result	;wreg free
  4663  0175F8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4664  0175FE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4665  017604  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4666  01760A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4667  017610  EC89  F0B0         	call	_lp_filter	;wreg free
  4668  017614                     L3:
  4669                           
  4670                           ;stkvar	_i @ sp[(-1)+0]
  4671  017614  0EFF               	movlw	-1
  4672  017616  50E3               	movf	plusw1,w,c
  4673  017618  0D04               	mullw	4
  4674  01761A  0E00               	movlw	low _C
  4675  01761C  24F3               	addwf	243,w,c
  4676  01761E  6ED9               	movwf	fsr2l,c
  4677  017620  0E01               	movlw	high _C
  4678  017622  20F4               	addwfc	prodh,w,c
  4679  017624  6EDA               	movwf	fsr2h,c
  4680  017626  0060  F0CB  FFDE   	movff	btemp,postinc2
  4681  01762C  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4682  017632  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4683  017638  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4684                           
  4685                           ;mbmc.c: 49:  } while (++i < 16);
  4686                           ;stkvar	_i @ sp[(-1)+0]
  4687  01763E  0EFF               	movlw	-1
  4688  017640  2AE3               	incf	plusw1,f,c
  4689  017642  0EFF               	movlw	-1
  4690  017644  006F FF8C  F032    	movff	plusw1,btemp
  4691  01764A  0E0F               	movlw	15
  4692  01764C  6432               	cpfsgt	btemp^0,c
  4693  01764E  D7A9               	goto	l9185
  4694                           
  4695                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4696  017650  52E5               	movf	postdec1,f,c
  4697  017652  0012               	return		;funcret
  4698  017654                     __end_of_convert_adc_data:
  4699                           	opt callstack 0
  4700                           
  4701 ;; *************** function _conv_raw_result *****************
  4702 ;; Defined at:
  4703 ;;		line 80 in file "daq.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  chan            1  [STACK] const enum E16136
  4706 ;;  to_what         1  [STACK] const enum E16198
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  4  [STACK] float 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4713 ;; Tracked objects:
  4714 ;;		On entry : 3F/2
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    8
  4725 ;; This function calls:
  4726 ;;		___fldiv
  4727 ;;		___flmul
  4728 ;;		___flsub
  4729 ;;		___xxtofl
  4730 ;;		_get_raw_result
  4731 ;;		_nanf
  4732 ;; This function is called by:
  4733 ;;		_convert_adc_data
  4734 ;; This function uses a reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text16
  4738  013B38                     __ptext16:
  4739                           	opt callstack 0
  4740  013B38                     _conv_raw_result:
  4741                           	opt callstack 21
  4742                           
  4743                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4744                           
  4745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4746                           ;incstack = 0
  4747  013B38  D242               	goto	l8913
  4748  013B3A                     l8859:
  4749                           
  4750                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4751                           ;stkvar	_chan @ sp[(0)+-1]
  4752  013B3A  0EFF               	movlw	-1
  4753  013B3C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4754  013B42  0E77               	movlw	119
  4755  013B44  6E3A               	movwf	(btemp+8)^0,c
  4756  013B46  0E3C               	movlw	60
  4757  013B48  6E3B               	movwf	(btemp+9)^0,c
  4758  013B4A  2A3D               	incf	(btemp+11)^0,f,c
  4759  013B4C  D003               	goto	u8244
  4760  013B4E                     u8245:
  4761  013B4E  343B               	rlcf	(btemp+9)^0,w,c
  4762  013B50  323B               	rrcf	(btemp+9)^0,f,c
  4763  013B52  323A               	rrcf	(btemp+8)^0,f,c
  4764  013B54                     u8244:
  4765  013B54  2E3D               	decfsz	(btemp+11)^0,f,c
  4766  013B56  D7FB               	goto	u8245
  4767  013B58  B03A               	btfsc	(btemp+8)^0,0,c
  4768  013B5A  D007               	goto	l8865
  4769                           
  4770                           ;daq.c: 86:    return nanf("");
  4771  013B5C  0E7F               	movlw	low (STR_39+18)
  4772  013B5E  6EE6               	movwf	postinc1,c
  4773  013B60  0EFE               	movlw	high (STR_39+18)
  4774  013B62  6EE6               	movwf	postinc1,c
  4775  013B64  ECD9  F0BF         	call	_nanf	;wreg free
  4776  013B68  D23A               	goto	l1685
  4777  013B6A                     l8865:
  4778                           
  4779                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4780                           ;stkvar	_chan @ sp[(0)+-1]
  4781  013B6A  0EFF               	movlw	-1
  4782  013B6C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4783  013B72  0E03               	movlw	3
  4784  013B74  6E3A               	movwf	(btemp+8)^0,c
  4785  013B76  0E00               	movlw	0
  4786  013B78  6E3B               	movwf	(btemp+9)^0,c
  4787  013B7A  2A3D               	incf	(btemp+11)^0,f,c
  4788  013B7C  D003               	goto	u8264
  4789  013B7E                     u8265:
  4790  013B7E  343B               	rlcf	(btemp+9)^0,w,c
  4791  013B80  323B               	rrcf	(btemp+9)^0,f,c
  4792  013B82  323A               	rrcf	(btemp+8)^0,f,c
  4793  013B84                     u8264:
  4794  013B84  2E3D               	decfsz	(btemp+11)^0,f,c
  4795  013B86  D7FB               	goto	u8265
  4796  013B88  A03A               	btfss	(btemp+8)^0,0,c
  4797  013B8A  D0EB               	goto	l8879
  4798                           
  4799                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4800                           ;stkvar	_chan @ sp[(0)+-1]
  4801  013B8C  0EFF               	movlw	-1
  4802  013B8E  006F FF8C  F03D    	movff	plusw1,btemp+11
  4803  013B94  0E01               	movlw	1
  4804  013B96  6E3A               	movwf	(btemp+8)^0,c
  4805  013B98  0E00               	movlw	0
  4806  013B9A  6E3B               	movwf	(btemp+9)^0,c
  4807  013B9C  2A3D               	incf	(btemp+11)^0,f,c
  4808  013B9E  D003               	goto	u8284
  4809  013BA0                     u8285:
  4810  013BA0  343B               	rlcf	(btemp+9)^0,w,c
  4811  013BA2  323B               	rrcf	(btemp+9)^0,f,c
  4812  013BA4  323A               	rrcf	(btemp+8)^0,f,c
  4813  013BA6                     u8284:
  4814  013BA6  2E3D               	decfsz	(btemp+11)^0,f,c
  4815  013BA8  D7FB               	goto	u8285
  4816  013BAA  A03A               	btfss	(btemp+8)^0,0,c
  4817  013BAC  D06D               	goto	l8875
  4818                           
  4819                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4820  013BAE  0E7B               	movlw	123
  4821  013BB0  6EE6               	movwf	postinc1,c
  4822  013BB2  0E14               	movlw	20
  4823  013BB4  6EE6               	movwf	postinc1,c
  4824  013BB6  0EAE               	movlw	174
  4825  013BB8  6EE6               	movwf	postinc1,c
  4826  013BBA  0E3D               	movlw	61
  4827  013BBC  6EE6               	movwf	postinc1,c
  4828  013BBE  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4829  013BC4  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4830  013BCA  0E00               	movlw	0
  4831  013BCC  BE3B               	btfsc	(btemp+9)^0,7,c
  4832  013BCE  0EFF               	movlw	255
  4833  013BD0  6E3C               	movwf	(btemp+10)^0,c
  4834  013BD2  6E3D               	movwf	(btemp+11)^0,c
  4835  013BD4  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4836  013BDA  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4837  013BE0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4838  013BE6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4839  013BEC  0E01               	movlw	1
  4840  013BEE  6EE6               	movwf	postinc1,c
  4841  013BF0  ECA3  F0AE         	call	___xxtofl	;wreg free
  4842  013BF4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4843  013BFA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4844  013C00  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4845  013C06  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4846                           
  4847                           ;stkvar	_chan @ sp[(-8)+-1]
  4848  013C0C  0EF7               	movlw	-9
  4849  013C0E  50E3               	movf	plusw1,w,c
  4850  013C10  6EE6               	movwf	postinc1,c
  4851  013C12  EC30  F0C6         	call	_get_raw_result	;wreg free
  4852  013C16  0060  F0C8  F03C   	movff	btemp,btemp+10
  4853  013C1C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4854  013C22  503C               	movf	(btemp+10)^0,w,c
  4855  013C24  6E36               	movwf	(btemp+4)^0,c
  4856  013C26  503D               	movf	(btemp+11)^0,w,c
  4857  013C28  6E37               	movwf	(btemp+5)^0,c
  4858  013C2A  6A38               	clrf	(btemp+6)^0,c
  4859  013C2C  6A39               	clrf	(btemp+7)^0,c
  4860  013C2E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4861  013C34  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4862  013C3A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4863  013C40  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4864  013C46  0E00               	movlw	0
  4865  013C48  6EE6               	movwf	postinc1,c
  4866  013C4A  ECA3  F0AE         	call	___xxtofl	;wreg free
  4867  013C4E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4868  013C54  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4869  013C5A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4870  013C60  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4871  013C66  EC8B  F0C1         	call	___flsub	;wreg free
  4872  013C6A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4873  013C70  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4874  013C76  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4875  013C7C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4876  013C82  ECEC  F092         	call	___flmul	;wreg free
  4877  013C86  D1AB               	goto	l1685
  4878  013C88                     l8875:
  4879                           
  4880                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4881  013C88  0E29               	movlw	41
  4882  013C8A  6EE6               	movwf	postinc1,c
  4883  013C8C  0E5C               	movlw	92
  4884  013C8E  6EE6               	movwf	postinc1,c
  4885  013C90  0E0F               	movlw	15
  4886  013C92  6EE6               	movwf	postinc1,c
  4887  013C94  0E3D               	movlw	61
  4888  013C96  6EE6               	movwf	postinc1,c
  4889  013C98  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4890  013C9E  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4891  013CA4  0E00               	movlw	0
  4892  013CA6  BE3B               	btfsc	(btemp+9)^0,7,c
  4893  013CA8  0EFF               	movlw	255
  4894  013CAA  6E3C               	movwf	(btemp+10)^0,c
  4895  013CAC  6E3D               	movwf	(btemp+11)^0,c
  4896  013CAE  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4897  013CB4  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4898  013CBA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4899  013CC0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4900  013CC6  0E01               	movlw	1
  4901  013CC8  6EE6               	movwf	postinc1,c
  4902  013CCA  ECA3  F0AE         	call	___xxtofl	;wreg free
  4903  013CCE  0060  F0CB  FFE6   	movff	btemp,postinc1
  4904  013CD4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4905  013CDA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4906  013CE0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4907                           
  4908                           ;stkvar	_chan @ sp[(-8)+-1]
  4909  013CE6  0EF7               	movlw	-9
  4910  013CE8  50E3               	movf	plusw1,w,c
  4911  013CEA  6EE6               	movwf	postinc1,c
  4912  013CEC  EC30  F0C6         	call	_get_raw_result	;wreg free
  4913  013CF0  0060  F0C8  F03C   	movff	btemp,btemp+10
  4914  013CF6  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4915  013CFC  503C               	movf	(btemp+10)^0,w,c
  4916  013CFE  6E36               	movwf	(btemp+4)^0,c
  4917  013D00  503D               	movf	(btemp+11)^0,w,c
  4918  013D02  6E37               	movwf	(btemp+5)^0,c
  4919  013D04  6A38               	clrf	(btemp+6)^0,c
  4920  013D06  6A39               	clrf	(btemp+7)^0,c
  4921  013D08  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4922  013D0E  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4923  013D14  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4924  013D1A  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4925  013D20  0E00               	movlw	0
  4926  013D22  6EE6               	movwf	postinc1,c
  4927  013D24  ECA3  F0AE         	call	___xxtofl	;wreg free
  4928  013D28  0060  F0CB  FFE6   	movff	btemp,postinc1
  4929  013D2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4930  013D34  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4931  013D3A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4932  013D40  EC8B  F0C1         	call	___flsub	;wreg free
  4933  013D44  0060  F0CB  FFE6   	movff	btemp,postinc1
  4934  013D4A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4935  013D50  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4936  013D56  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4937  013D5C  ECEC  F092         	call	___flmul	;wreg free
  4938  013D60  D13E               	goto	l1685
  4939  013D62                     l8879:
  4940                           
  4941                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4942                           ;stkvar	_chan @ sp[(0)+-1]
  4943  013D62  0EFF               	movlw	-1
  4944  013D64  006F FF8C  F03D    	movff	plusw1,btemp+11
  4945  013D6A  0E00               	movlw	0
  4946  013D6C  6E3A               	movwf	(btemp+8)^0,c
  4947  013D6E  0E08               	movlw	8
  4948  013D70  6E3B               	movwf	(btemp+9)^0,c
  4949  013D72  2A3D               	incf	(btemp+11)^0,f,c
  4950  013D74  D003               	goto	u8304
  4951  013D76                     u8305:
  4952  013D76  343B               	rlcf	(btemp+9)^0,w,c
  4953  013D78  323B               	rrcf	(btemp+9)^0,f,c
  4954  013D7A  323A               	rrcf	(btemp+8)^0,f,c
  4955  013D7C                     u8304:
  4956  013D7C  2E3D               	decfsz	(btemp+11)^0,f,c
  4957  013D7E  D7FB               	goto	u8305
  4958  013D80  A03A               	btfss	(btemp+8)^0,0,c
  4959  013D82  D008               	goto	l8887
  4960                           
  4961                           ;daq.c: 96:     return 25.0;
  4962  013D84  0E00               	movlw	0
  4963  013D86  6E32               	movwf	btemp^0,c
  4964  013D88  0E00               	movlw	0
  4965  013D8A  6E33               	movwf	(btemp+1)^0,c
  4966  013D8C  0EC8               	movlw	200
  4967  013D8E  6E34               	movwf	(btemp+2)^0,c
  4968  013D90  0E41               	movlw	65
  4969  013D92  D113               	goto	L4
  4970  013D94                     l8887:
  4971                           
  4972                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4973  013D94  0E00               	movlw	0
  4974  013D96  6EE6               	movwf	postinc1,c
  4975  013D98  0E00               	movlw	0
  4976  013D9A  6EE6               	movwf	postinc1,c
  4977  013D9C  0E7A               	movlw	122
  4978  013D9E  6EE6               	movwf	postinc1,c
  4979  013DA0  0E44               	movlw	68
  4980  013DA2  6EE6               	movwf	postinc1,c
  4981  013DA4  0E61               	movlw	97
  4982  013DA6  6EE6               	movwf	postinc1,c
  4983  013DA8  0E03               	movlw	3
  4984  013DAA  6EE6               	movwf	postinc1,c
  4985  013DAC  0E84               	movlw	132
  4986  013DAE  6EE6               	movwf	postinc1,c
  4987  013DB0  0E40               	movlw	64
  4988  013DB2  6EE6               	movwf	postinc1,c
  4989                           
  4990                           ;stkvar	_chan @ sp[(-8)+-1]
  4991  013DB4  0EF7               	movlw	-9
  4992  013DB6  50E3               	movf	plusw1,w,c
  4993  013DB8  6EE6               	movwf	postinc1,c
  4994  013DBA  EC30  F0C6         	call	_get_raw_result	;wreg free
  4995  013DBE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4996  013DC4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4997  013DCA  503C               	movf	(btemp+10)^0,w,c
  4998  013DCC  6E36               	movwf	(btemp+4)^0,c
  4999  013DCE  503D               	movf	(btemp+11)^0,w,c
  5000  013DD0  6E37               	movwf	(btemp+5)^0,c
  5001  013DD2  6A38               	clrf	(btemp+6)^0,c
  5002  013DD4  6A39               	clrf	(btemp+7)^0,c
  5003  013DD6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5004  013DDC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5005  013DE2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5006  013DE8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5007  013DEE  0E00               	movlw	0
  5008  013DF0  6EE6               	movwf	postinc1,c
  5009  013DF2  ECA3  F0AE         	call	___xxtofl	;wreg free
  5010  013DF6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5011  013DFC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5012  013E02  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5013  013E08  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5014  013E0E  ECEC  F092         	call	___flmul	;wreg free
  5015  013E12  0060  F0CB  FFE6   	movff	btemp,postinc1
  5016  013E18  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5017  013E1E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5018  013E24  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5019  013E2A  ECDF  F09A         	call	___fldiv	;wreg free
  5020  013E2E  D0D7               	goto	l1685
  5021  013E30                     l8891:
  5022                           
  5023                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5024                           ;stkvar	_chan @ sp[(0)+-1]
  5025  013E30  0EFF               	movlw	-1
  5026  013E32  006F FF8C  F03D    	movff	plusw1,btemp+11
  5027  013E38  0E03               	movlw	3
  5028  013E3A  6E3A               	movwf	(btemp+8)^0,c
  5029  013E3C  0E00               	movlw	0
  5030  013E3E  6E3B               	movwf	(btemp+9)^0,c
  5031  013E40  2A3D               	incf	(btemp+11)^0,f,c
  5032  013E42  D003               	goto	u8324
  5033  013E44                     u8325:
  5034  013E44  343B               	rlcf	(btemp+9)^0,w,c
  5035  013E46  323B               	rrcf	(btemp+9)^0,f,c
  5036  013E48  323A               	rrcf	(btemp+8)^0,f,c
  5037  013E4A                     u8324:
  5038  013E4A  2E3D               	decfsz	(btemp+11)^0,f,c
  5039  013E4C  D7FB               	goto	u8325
  5040  013E4E  B03A               	btfsc	(btemp+8)^0,0,c
  5041  013E50  D011               	goto	u8350
  5042                           
  5043                           ;stkvar	_chan @ sp[(0)+-1]
  5044  013E52  0EFF               	movlw	-1
  5045  013E54  006F FF8C  F03D    	movff	plusw1,btemp+11
  5046  013E5A  0E00               	movlw	0
  5047  013E5C  6E3A               	movwf	(btemp+8)^0,c
  5048  013E5E  0E08               	movlw	8
  5049  013E60  6E3B               	movwf	(btemp+9)^0,c
  5050  013E62  2A3D               	incf	(btemp+11)^0,f,c
  5051  013E64  D003               	goto	u8344
  5052  013E66                     u8345:
  5053  013E66  343B               	rlcf	(btemp+9)^0,w,c
  5054  013E68  323B               	rrcf	(btemp+9)^0,f,c
  5055  013E6A  323A               	rrcf	(btemp+8)^0,f,c
  5056  013E6C                     u8344:
  5057  013E6C  2E3D               	decfsz	(btemp+11)^0,f,c
  5058  013E6E  D7FB               	goto	u8345
  5059  013E70  A03A               	btfss	(btemp+8)^0,0,c
  5060  013E72  D04E               	goto	l8899
  5061  013E74                     u8350:
  5062                           
  5063                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5064  013E74  0E00               	movlw	0
  5065  013E76  6EE6               	movwf	postinc1,c
  5066  013E78  0E00               	movlw	0
  5067  013E7A  6EE6               	movwf	postinc1,c
  5068  013E7C  0E7A               	movlw	122
  5069  013E7E  6EE6               	movwf	postinc1,c
  5070  013E80  0E44               	movlw	68
  5071  013E82  6EE6               	movwf	postinc1,c
  5072  013E84  0E00               	movlw	0
  5073  013E86  6EE6               	movwf	postinc1,c
  5074  013E88  0E00               	movlw	0
  5075  013E8A  6EE6               	movwf	postinc1,c
  5076  013E8C  0E20               	movlw	32
  5077  013E8E  6EE6               	movwf	postinc1,c
  5078  013E90  0E3F               	movlw	63
  5079  013E92  6EE6               	movwf	postinc1,c
  5080                           
  5081                           ;stkvar	_chan @ sp[(-8)+-1]
  5082  013E94  0EF7               	movlw	-9
  5083  013E96  50E3               	movf	plusw1,w,c
  5084  013E98  6EE6               	movwf	postinc1,c
  5085  013E9A  EC30  F0C6         	call	_get_raw_result	;wreg free
  5086  013E9E  0060  F0C8  F03C   	movff	btemp,btemp+10
  5087  013EA4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5088  013EAA  503C               	movf	(btemp+10)^0,w,c
  5089  013EAC  6E36               	movwf	(btemp+4)^0,c
  5090  013EAE  503D               	movf	(btemp+11)^0,w,c
  5091  013EB0  6E37               	movwf	(btemp+5)^0,c
  5092  013EB2  6A38               	clrf	(btemp+6)^0,c
  5093  013EB4  6A39               	clrf	(btemp+7)^0,c
  5094  013EB6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5095  013EBC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5096  013EC2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5097  013EC8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5098  013ECE  0E00               	movlw	0
  5099  013ED0  6EE6               	movwf	postinc1,c
  5100  013ED2  ECA3  F0AE         	call	___xxtofl	;wreg free
  5101  013ED6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5102  013EDC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5103  013EE2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5104  013EE8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5105  013EEE  ECEC  F092         	call	___flmul	;wreg free
  5106  013EF2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5107  013EF8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5108  013EFE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5109  013F04  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5110  013F0A  ECDF  F09A         	call	___fldiv	;wreg free
  5111  013F0E  D067               	goto	l1685
  5112  013F10                     l8899:
  5113                           
  5114                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5115  013F10  0E00               	movlw	0
  5116  013F12  6EE6               	movwf	postinc1,c
  5117  013F14  0E00               	movlw	0
  5118  013F16  6EE6               	movwf	postinc1,c
  5119  013F18  0E7A               	movlw	122
  5120  013F1A  6EE6               	movwf	postinc1,c
  5121  013F1C  0E44               	movlw	68
  5122  013F1E  6EE6               	movwf	postinc1,c
  5123  013F20  0E61               	movlw	97
  5124  013F22  6EE6               	movwf	postinc1,c
  5125  013F24  0E03               	movlw	3
  5126  013F26  6EE6               	movwf	postinc1,c
  5127  013F28  0E84               	movlw	132
  5128  013F2A  6EE6               	movwf	postinc1,c
  5129  013F2C  0E40               	movlw	64
  5130  013F2E  6EE6               	movwf	postinc1,c
  5131                           
  5132                           ;stkvar	_chan @ sp[(-8)+-1]
  5133  013F30  0EF7               	movlw	-9
  5134  013F32  50E3               	movf	plusw1,w,c
  5135  013F34  6EE6               	movwf	postinc1,c
  5136  013F36  EC30  F0C6         	call	_get_raw_result	;wreg free
  5137  013F3A  0060  F0C8  F03C   	movff	btemp,btemp+10
  5138  013F40  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5139  013F46  503C               	movf	(btemp+10)^0,w,c
  5140  013F48  6E36               	movwf	(btemp+4)^0,c
  5141  013F4A  503D               	movf	(btemp+11)^0,w,c
  5142  013F4C  6E37               	movwf	(btemp+5)^0,c
  5143  013F4E  6A38               	clrf	(btemp+6)^0,c
  5144  013F50  6A39               	clrf	(btemp+7)^0,c
  5145  013F52  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5146  013F58  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5147  013F5E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5148  013F64  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5149  013F6A  0E00               	movlw	0
  5150  013F6C  6EE6               	movwf	postinc1,c
  5151  013F6E  ECA3  F0AE         	call	___xxtofl	;wreg free
  5152  013F72  0060  F0CB  FFE6   	movff	btemp,postinc1
  5153  013F78  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5154  013F7E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5155  013F84  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5156  013F8A  ECEC  F092         	call	___flmul	;wreg free
  5157  013F8E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5158  013F94  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5159  013F9A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5160  013FA0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5161  013FA6  ECDF  F09A         	call	___fldiv	;wreg free
  5162  013FAA  D019               	goto	l1685
  5163  013FAC                     l8905:
  5164                           
  5165                           ;daq.c: 109:   return 0.0;
  5166  013FAC  0E00               	movlw	0
  5167  013FAE  6E32               	movwf	btemp^0,c
  5168  013FB0  0E00               	movlw	0
  5169  013FB2  6E33               	movwf	(btemp+1)^0,c
  5170  013FB4  0E00               	movlw	0
  5171  013FB6  6E34               	movwf	(btemp+2)^0,c
  5172  013FB8  0E00               	movlw	0
  5173  013FBA                     L4:
  5174  013FBA  6E35               	movwf	(btemp+3)^0,c
  5175  013FBC  D010               	goto	l1685
  5176  013FBE                     l8913:
  5177                           
  5178                           ;stkvar	_to_what @ sp[(0)+-2]
  5179  013FBE  0EFE               	movlw	-2
  5180  013FC0  50E3               	movf	plusw1,w,c
  5181  013FC2  6E3C               	movwf	(btemp+10)^0,c
  5182  013FC4  6A3D               	clrf	(btemp+11)^0,c
  5183                           
  5184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5185                           ; Switch size 1, requested type "simple"
  5186                           ; Number of cases is 1, Range of values is 0 to 0
  5187                           ; switch strategies available:
  5188                           ; Name         Instructions Cycles
  5189                           ; simple_byte            4     3 (average)
  5190                           ;	Chosen strategy is simple_byte
  5191  013FC6  503D               	movf	(btemp+11)^0,w,c
  5192  013FC8  0A00               	xorlw	0	; case 0
  5193  013FCA  A4D8               	btfss	status,2,c
  5194  013FCC  D7EF               	goto	l8905
  5195                           
  5196                           ; Switch size 1, requested type "simple"
  5197                           ; Number of cases is 2, Range of values is 0 to 1
  5198                           ; switch strategies available:
  5199                           ; Name         Instructions Cycles
  5200                           ; simple_byte            7     4 (average)
  5201                           ;	Chosen strategy is simple_byte
  5202  013FCE  503C               	movf	(btemp+10)^0,w,c
  5203  013FD0  0A00               	xorlw	0	; case 0
  5204  013FD2  B4D8               	btfsc	status,2,c
  5205  013FD4  D5B2               	goto	l8859
  5206  013FD6  0A01               	xorlw	1	; case 1
  5207  013FD8  B4D8               	btfsc	status,2,c
  5208  013FDA  D72A               	goto	l8891
  5209  013FDC  D7E7               	goto	l8905
  5210  013FDE                     l1685:
  5211                           
  5212                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5213  013FDE  52E5               	movf	postdec1,f,c
  5214  013FE0  52E5               	movf	postdec1,f,c
  5215  013FE2  0012               	return		;funcret
  5216  013FE4                     __end_of_conv_raw_result:
  5217                           	opt callstack 0
  5218                           
  5219 ;; *************** function _nanf *****************
  5220 ;; Defined at:
  5221 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  s               2  [STACK] PTR const unsigned char 
  5224 ;;		 -> STR_45(1), 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  u               4  [STACK] struct .
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  4  [STACK] float 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/2
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    6
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_conv_raw_result
  5247 ;; This function uses a reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text17
  5251  017FB2                     __ptext17:
  5252                           	opt callstack 0
  5253  017FB2                     _nanf:
  5254                           	opt callstack 0
  5255                           
  5256                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5257  017FB2  52E6               	movf	postinc1,f,c
  5258  017FB4  52E6               	movf	postinc1,f,c
  5259  017FB6  52E6               	movf	postinc1,f,c
  5260  017FB8  52E6               	movf	postinc1,f,c
  5261                           
  5262                           ;incstack = 0
  5263  017FBA  0EFF               	movlw	255
  5264  017FBC  6E3A               	movwf	(btemp+8)^0,c
  5265  017FBE  0EFF               	movlw	255
  5266  017FC0  6E3B               	movwf	(btemp+9)^0,c
  5267  017FC2  0EFF               	movlw	255
  5268  017FC4  6E3C               	movwf	(btemp+10)^0,c
  5269  017FC6  0E7F               	movlw	127
  5270  017FC8  6E3D               	movwf	(btemp+11)^0,c
  5271                           
  5272                           ;stkvar	_u @ sp[(-4)+0]
  5273  017FCA  0EFC               	movlw	-4
  5274  017FCC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5275  017FD2  0EFD               	movlw	-3
  5276  017FD4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5277  017FDA  0EFE               	movlw	-2
  5278  017FDC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5279  017FE2  0EFF               	movlw	-1
  5280  017FE4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5281                           
  5282                           ;stkvar	_u @ sp[(-4)+0]
  5283  017FEA  0EFC               	movlw	-4
  5284  017FEC  006F FF8C  F032    	movff	plusw1,btemp
  5285  017FF2  0EFD               	movlw	-3
  5286  017FF4  006F FF8C  F033    	movff	plusw1,btemp+1
  5287  017FFA  0EFE               	movlw	-2
  5288  017FFC  006F FF8C  F034    	movff	plusw1,btemp+2
  5289  018002  0EFF               	movlw	-1
  5290  018004  006F FF8C  F035    	movff	plusw1,btemp+3
  5291                           
  5292                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5293  01800A  0EFA               	movlw	250
  5294  01800C  26E1               	addwf	fsr1l,f,c
  5295  01800E  0EFF               	movlw	255
  5296  018010  22E2               	addwfc	fsr1h,f,c
  5297  018012  0012               	return		;funcret
  5298  018014                     __end_of_nanf:
  5299                           	opt callstack 0
  5300                           
  5301 ;; *************** function _get_raw_result *****************
  5302 ;; Defined at:
  5303 ;;		line 72 in file "daq.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  index           1  [STACK] const enum E16136
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  2  [STACK] unsigned short 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/2
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5321 ;;Total ram usage:        0 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    6
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_main
  5328 ;;		_conv_raw_result
  5329 ;; This function uses a reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text18
  5333  018C60                     __ptext18:
  5334                           	opt callstack 0
  5335  018C60                     _get_raw_result:
  5336                           	opt callstack 24
  5337                           
  5338                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5339                           ;stkvar	_index @ sp[(0)+-1]
  5340                           
  5341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5342                           ;incstack = 0
  5343  018C60  0EFF               	movlw	-1
  5344  018C62  50E3               	movf	plusw1,w,c
  5345  018C64  0D02               	mullw	2
  5346  018C66  50F3               	movf	243,w,c
  5347  018C68  0FC7               	addlw	low _R
  5348  018C6A  6ED9               	movwf	fsr2l,c
  5349  018C6C  6ADA               	clrf	fsr2h,c
  5350  018C6E  006F FF78  F032    	movff	postinc2,btemp
  5351  018C74  006F FF74  F033    	movff	postdec2,btemp+1
  5352                           
  5353                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5354  018C7A  52E5               	movf	postdec1,f,c
  5355  018C7C  0012               	return		;funcret
  5356  018C7E                     __end_of_get_raw_result:
  5357                           	opt callstack 0
  5358                           
  5359 ;; *************** function ___xxtofl *****************
  5360 ;; Defined at:
  5361 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  sign            1  [STACK] unsigned char 
  5364 ;;  val             4  [STACK] long 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  arg             4  [STACK] unsigned long 
  5367 ;;  exp             1  [STACK] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  4  [STACK] unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/2
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    6
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_conv_raw_result
  5388 ;; This function uses a reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text19
  5392  015D46                     __ptext19:
  5393                           	opt callstack 0
  5394  015D46                     ___xxtofl:
  5395                           	opt callstack 0
  5396                           
  5397                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5398  015D46  0E05               	movlw	5
  5399  015D48  26E1               	addwf	fsr1l,f,c
  5400  015D4A  0E00               	movlw	0
  5401  015D4C  22E2               	addwfc	fsr1h,f,c
  5402                           
  5403                           ;stkvar	_sign @ sp[(-5)+-1]
  5404                           
  5405                           ;incstack = 0
  5406  015D4E  0EFA               	movlw	-6
  5407  015D50  50E3               	movf	plusw1,w,c
  5408  015D52  B4D8               	btfsc	status,2,c
  5409  015D54  D01D               	goto	l8313
  5410                           
  5411                           ;stkvar	_val @ sp[(-5)+-5]
  5412  015D56  0EF9               	movlw	-7
  5413  015D58  AEE3               	btfss	plusw1,7,c
  5414  015D5A  D01A               	goto	l8313
  5415                           
  5416                           ;stkvar	_val @ sp[(-5)+-5]
  5417  015D5C  0EF6               	movlw	-10
  5418  015D5E  006F FF8C  F03A    	movff	plusw1,btemp+8
  5419  015D64  0EF7               	movlw	-9
  5420  015D66  006F FF8C  F03B    	movff	plusw1,btemp+9
  5421  015D6C  0EF8               	movlw	-8
  5422  015D6E  006F FF8C  F03C    	movff	plusw1,btemp+10
  5423  015D74  0EF9               	movlw	-7
  5424  015D76  006F FF8C  F03D    	movff	plusw1,btemp+11
  5425  015D7C  1E3A               	comf	(btemp+8)^0,f,c
  5426  015D7E  1E3B               	comf	(btemp+9)^0,f,c
  5427  015D80  1E3C               	comf	(btemp+10)^0,f,c
  5428  015D82  1E3D               	comf	(btemp+11)^0,f,c
  5429  015D84  2A3A               	incf	(btemp+8)^0,f,c
  5430  015D86  0E00               	movlw	0
  5431  015D88  223B               	addwfc	(btemp+9)^0,f,c
  5432  015D8A  223C               	addwfc	(btemp+10)^0,f,c
  5433  015D8C  223D               	addwfc	(btemp+11)^0,f,c
  5434  015D8E  D010               	goto	L5
  5435  015D90                     l8313:
  5436                           
  5437                           ;stkvar	_val @ sp[(-5)+-5]
  5438  015D90  0EF6               	movlw	-10
  5439  015D92  006F FF8C  F03A    	movff	plusw1,btemp+8
  5440  015D98  0EF7               	movlw	-9
  5441  015D9A  006F FF8C  F03B    	movff	plusw1,btemp+9
  5442  015DA0  0EF8               	movlw	-8
  5443  015DA2  006F FF8C  F03C    	movff	plusw1,btemp+10
  5444  015DA8  0EF9               	movlw	-7
  5445  015DAA  006F FF8C  F03D    	movff	plusw1,btemp+11
  5446  015DB0                     L5:
  5447                           
  5448                           ;stkvar	_arg @ sp[(-5)+0]
  5449  015DB0  0EFB               	movlw	-5
  5450  015DB2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5451  015DB8  0EFC               	movlw	-4
  5452  015DBA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5453  015DC0  0EFD               	movlw	-3
  5454  015DC2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5455  015DC8  0EFE               	movlw	-2
  5456  015DCA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5457                           
  5458                           ;stkvar	_val @ sp[(-5)+-5]
  5459  015DD0  0EF6               	movlw	-10
  5460  015DD2  50E3               	movf	plusw1,w,c
  5461  015DD4  E113               	bnz	l8321
  5462  015DD6  0EF7               	movlw	-9
  5463  015DD8  50E3               	movf	plusw1,w,c
  5464  015DDA  E110               	bnz	l8321
  5465  015DDC  0EF8               	movlw	-8
  5466  015DDE  50E3               	movf	plusw1,w,c
  5467  015DE0  E10D               	bnz	l8321
  5468  015DE2  0EF9               	movlw	-7
  5469  015DE4  50E3               	movf	plusw1,w,c
  5470  015DE6  A4D8               	btfss	status,2,c
  5471  015DE8  D009               	goto	l8321
  5472  015DEA  0E00               	movlw	0
  5473  015DEC  6E32               	movwf	btemp^0,c
  5474  015DEE  0E00               	movlw	0
  5475  015DF0  6E33               	movwf	(btemp+1)^0,c
  5476  015DF2  0E00               	movlw	0
  5477  015DF4  6E34               	movwf	(btemp+2)^0,c
  5478  015DF6  0E00               	movlw	0
  5479  015DF8  6E35               	movwf	(btemp+3)^0,c
  5480  015DFA  D0A2               	goto	l2764
  5481  015DFC                     l8321:
  5482  015DFC  0E96               	movlw	150
  5483  015DFE  6E3D               	movwf	(btemp+11)^0,c
  5484                           
  5485                           ;stkvar	_exp @ sp[(-5)+4]
  5486  015E00  0EFF               	movlw	-1
  5487  015E02  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5488  015E08  D00B               	goto	l8325
  5489  015E0A                     l8323:
  5490                           
  5491                           ;stkvar	_exp @ sp[(-5)+4]
  5492  015E0A  0EFF               	movlw	-1
  5493  015E0C  2AE3               	incf	plusw1,f,c
  5494                           
  5495                           ;stkvar	_arg @ sp[(-5)+0]
  5496  015E0E  90D8               	bcf	status,0,c
  5497  015E10  0EFE               	movlw	-2
  5498  015E12  32E3               	rrcf	plusw1,f,c
  5499  015E14  0EFD               	movlw	-3
  5500  015E16  32E3               	rrcf	plusw1,f,c
  5501  015E18  0EFC               	movlw	-4
  5502  015E1A  32E3               	rrcf	plusw1,f,c
  5503  015E1C  0EFB               	movlw	-5
  5504  015E1E  32E3               	rrcf	plusw1,f,c
  5505  015E20                     l8325:
  5506                           
  5507                           ;stkvar	_arg @ sp[(-5)+0]
  5508  015E20  50E1               	movf	fsr1l,w,c
  5509  015E22  0FFB               	addlw	-5
  5510  015E24  6ED9               	movwf	fsr2l,c
  5511  015E26  50E2               	movf	fsr1h,w,c
  5512  015E28  6EDA               	movwf	fsr2h,c
  5513  015E2A  0EFF               	movlw	255
  5514  015E2C  22DA               	addwfc	fsr2h,f,c
  5515  015E2E  52DE               	movf	postinc2,f,c
  5516  015E30  52DE               	movf	postinc2,f,c
  5517  015E32  52DE               	movf	postinc2,f,c
  5518  015E34  0EFE               	movlw	254
  5519  015E36  14DD               	andwf	postdec2,w,c
  5520  015E38  B4D8               	btfsc	status,2,c
  5521  015E3A  D018               	goto	l8333
  5522  015E3C  D7E6               	goto	l8323
  5523  015E3E                     l8327:
  5524                           
  5525                           ;stkvar	_exp @ sp[(-5)+4]
  5526  015E3E  0EFF               	movlw	-1
  5527  015E40  2AE3               	incf	plusw1,f,c
  5528                           
  5529                           ;stkvar	_arg @ sp[(-5)+0]
  5530  015E42  50E1               	movf	fsr1l,w,c
  5531  015E44  0FFB               	addlw	-5
  5532  015E46  6ED9               	movwf	fsr2l,c
  5533  015E48  50E2               	movf	fsr1h,w,c
  5534  015E4A  6EDA               	movwf	fsr2h,c
  5535  015E4C  0EFF               	movlw	255
  5536  015E4E  22DA               	addwfc	fsr2h,f,c
  5537  015E50  2ADE               	incf	postinc2,f,c
  5538  015E52  0E00               	movlw	0
  5539  015E54  22DE               	addwfc	postinc2,f,c
  5540  015E56  22DE               	addwfc	postinc2,f,c
  5541  015E58  22DE               	addwfc	postinc2,f,c
  5542                           
  5543                           ;stkvar	_arg @ sp[(-5)+0]
  5544  015E5A  90D8               	bcf	status,0,c
  5545  015E5C  0EFE               	movlw	-2
  5546  015E5E  32E3               	rrcf	plusw1,f,c
  5547  015E60  0EFD               	movlw	-3
  5548  015E62  32E3               	rrcf	plusw1,f,c
  5549  015E64  0EFC               	movlw	-4
  5550  015E66  32E3               	rrcf	plusw1,f,c
  5551  015E68  0EFB               	movlw	-5
  5552  015E6A  32E3               	rrcf	plusw1,f,c
  5553  015E6C                     l8333:
  5554                           
  5555                           ;stkvar	_arg @ sp[(-5)+0]
  5556  015E6C  50E1               	movf	fsr1l,w,c
  5557  015E6E  0FFB               	addlw	-5
  5558  015E70  6ED9               	movwf	fsr2l,c
  5559  015E72  50E2               	movf	fsr1h,w,c
  5560  015E74  6EDA               	movwf	fsr2h,c
  5561  015E76  0EFF               	movlw	255
  5562  015E78  22DA               	addwfc	fsr2h,f,c
  5563  015E7A  52DE               	movf	postinc2,f,c
  5564  015E7C  52DE               	movf	postinc2,f,c
  5565  015E7E  52DE               	movf	postinc2,f,c
  5566  015E80  0EFF               	movlw	255
  5567  015E82  14DD               	andwf	postdec2,w,c
  5568  015E84  B4D8               	btfsc	status,2,c
  5569  015E86  D00C               	goto	l8337
  5570  015E88  D7DA               	goto	l8327
  5571  015E8A                     l8335:
  5572                           
  5573                           ;stkvar	_exp @ sp[(-5)+4]
  5574  015E8A  0EFF               	movlw	-1
  5575  015E8C  06E3               	decf	plusw1,f,c
  5576                           
  5577                           ;stkvar	_arg @ sp[(-5)+0]
  5578  015E8E  90D8               	bcf	status,0,c
  5579  015E90  0EFB               	movlw	-5
  5580  015E92  36E3               	rlcf	plusw1,f,c
  5581  015E94  0EFC               	movlw	-4
  5582  015E96  36E3               	rlcf	plusw1,f,c
  5583  015E98  0EFD               	movlw	-3
  5584  015E9A  36E3               	rlcf	plusw1,f,c
  5585  015E9C  0EFE               	movlw	-2
  5586  015E9E  36E3               	rlcf	plusw1,f,c
  5587  015EA0                     l8337:
  5588                           
  5589                           ;stkvar	_arg @ sp[(-5)+0]
  5590  015EA0  0EFD               	movlw	-3
  5591  015EA2  BEE3               	btfsc	plusw1,7,c
  5592  015EA4  D007               	goto	u8040
  5593                           
  5594                           ;stkvar	_exp @ sp[(-5)+4]
  5595  015EA6  0EFF               	movlw	-1
  5596  015EA8  006F FF8C  F032    	movff	plusw1,btemp
  5597  015EAE  0E02               	movlw	2
  5598  015EB0  6032               	cpfslt	btemp^0,c
  5599  015EB2  D7EB               	goto	l8335
  5600  015EB4                     u8040:
  5601                           
  5602                           ;stkvar	_exp @ sp[(-5)+4]
  5603  015EB4  0EFF               	movlw	-1
  5604  015EB6  B0E3               	btfsc	plusw1,0,c
  5605  015EB8  D002               	goto	l8345
  5606                           
  5607                           ;stkvar	_arg @ sp[(-5)+0]
  5608  015EBA  0EFD               	movlw	-3
  5609  015EBC  9EE3               	bcf	plusw1,7,c
  5610  015EBE                     l8345:
  5611                           
  5612                           ;stkvar	_exp @ sp[(-5)+4]
  5613  015EBE  50E1               	movf	fsr1l,w,c
  5614  015EC0  0FFF               	addlw	-1
  5615  015EC2  6ED9               	movwf	fsr2l,c
  5616  015EC4  50E2               	movf	fsr1h,w,c
  5617  015EC6  6EDA               	movwf	fsr2h,c
  5618  015EC8  0EFF               	movlw	255
  5619  015ECA  22DA               	addwfc	fsr2h,f,c
  5620  015ECC  90D8               	bcf	status,0,c
  5621  015ECE  32DF               	rrcf	indf2,f,c
  5622                           
  5623                           ;stkvar	_exp @ sp[(-5)+4]
  5624  015ED0  0EFF               	movlw	-1
  5625  015ED2  006F FF8C  F03D    	movff	plusw1,btemp+11
  5626  015ED8  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5627  015EDE  6A37               	clrf	(btemp+5)^0,c
  5628  015EE0  6A38               	clrf	(btemp+6)^0,c
  5629  015EE2  6A39               	clrf	(btemp+7)^0,c
  5630  015EE4  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5631  015EEA  6A38               	clrf	(btemp+6)^0,c
  5632  015EEC  6A37               	clrf	(btemp+5)^0,c
  5633  015EEE  6A36               	clrf	(btemp+4)^0,c
  5634                           
  5635                           ;stkvar	_arg @ sp[(-5)+0]
  5636  015EF0  50E1               	movf	fsr1l,w,c
  5637  015EF2  0FFB               	addlw	-5
  5638  015EF4  6ED9               	movwf	fsr2l,c
  5639  015EF6  50E2               	movf	fsr1h,w,c
  5640  015EF8  6EDA               	movwf	fsr2h,c
  5641  015EFA  0EFF               	movlw	255
  5642  015EFC  22DA               	addwfc	fsr2h,f,c
  5643  015EFE  5036               	movf	(btemp+4)^0,w,c
  5644  015F00  12DE               	iorwf	postinc2,f,c
  5645  015F02  5037               	movf	(btemp+5)^0,w,c
  5646  015F04  12DE               	iorwf	postinc2,f,c
  5647  015F06  5038               	movf	(btemp+6)^0,w,c
  5648  015F08  12DE               	iorwf	postinc2,f,c
  5649  015F0A  5039               	movf	(btemp+7)^0,w,c
  5650  015F0C  12DE               	iorwf	postinc2,f,c
  5651                           
  5652                           ;stkvar	_sign @ sp[(-5)+-1]
  5653  015F0E  0EFA               	movlw	-6
  5654  015F10  50E3               	movf	plusw1,w,c
  5655  015F12  B4D8               	btfsc	status,2,c
  5656  015F14  D005               	goto	l8355
  5657                           
  5658                           ;stkvar	_val @ sp[(-5)+-5]
  5659  015F16  0EF9               	movlw	-7
  5660  015F18  AEE3               	btfss	plusw1,7,c
  5661  015F1A  D002               	goto	l8355
  5662                           
  5663                           ;stkvar	_arg @ sp[(-5)+0]
  5664  015F1C  0EFE               	movlw	-2
  5665  015F1E  8EE3               	bsf	plusw1,7,c
  5666  015F20                     l8355:
  5667                           
  5668                           ;stkvar	_arg @ sp[(-5)+0]
  5669  015F20  0EFB               	movlw	-5
  5670  015F22  006F FF8C  F032    	movff	plusw1,btemp
  5671  015F28  0EFC               	movlw	-4
  5672  015F2A  006F FF8C  F033    	movff	plusw1,btemp+1
  5673  015F30  0EFD               	movlw	-3
  5674  015F32  006F FF8C  F034    	movff	plusw1,btemp+2
  5675  015F38  0EFE               	movlw	-2
  5676  015F3A  006F FF8C  F035    	movff	plusw1,btemp+3
  5677  015F40                     l2764:
  5678                           
  5679                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5680  015F40  0EF6               	movlw	246
  5681  015F42  26E1               	addwf	fsr1l,f,c
  5682  015F44  0EFF               	movlw	255
  5683  015F46  22E2               	addwfc	fsr1h,f,c
  5684  015F48  0012               	return		;funcret
  5685  015F4A                     __end_of___xxtofl:
  5686                           	opt callstack 0
  5687                           
  5688 ;; *************** function _clear_hid_pflags *****************
  5689 ;; Defined at:
  5690 ;;		line 51 in file "hid.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  h               1  [STACK] PTR struct H_data
  5693 ;;		 -> H(7), 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1  [STACK] void 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/2
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5709 ;;Total ram usage:        0 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    6
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_main
  5716 ;; This function uses a reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text20
  5720  018B4E                     __ptext20:
  5721                           	opt callstack 0
  5722  018B4E                     _clear_hid_pflags:
  5723                           	opt callstack 24
  5724                           
  5725                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  5726                           ;stkvar	_h @ sp[(0)+-1]
  5727                           
  5728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5729                           ;incstack = 0
  5730  018B4E  0EFF               	movlw	-1
  5731  018B50  50E3               	movf	plusw1,w,c
  5732  018B52  6ED9               	movwf	fsr2l,c
  5733  018B54  6ADA               	clrf	fsr2h,c
  5734  018B56  0E03               	movlw	3
  5735  018B58  26D9               	addwf	fsr2l,f,c
  5736  018B5A  0E00               	movlw	0
  5737  018B5C  6EDF               	movwf	indf2,c
  5738                           
  5739                           ;hid.c: 54:  h->enter_p = SW_OFF;
  5740                           ;stkvar	_h @ sp[(0)+-1]
  5741  018B5E  0EFF               	movlw	-1
  5742  018B60  50E3               	movf	plusw1,w,c
  5743  018B62  6ED9               	movwf	fsr2l,c
  5744  018B64  6ADA               	clrf	fsr2h,c
  5745  018B66  0E05               	movlw	5
  5746  018B68  26D9               	addwf	fsr2l,f,c
  5747  018B6A  0E00               	movlw	0
  5748  018B6C  6EDF               	movwf	indf2,c
  5749                           
  5750                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5751  018B6E  52E5               	movf	postdec1,f,c
  5752  018B70  0012               	return		;funcret
  5753  018B72                     __end_of_clear_hid_pflags:
  5754                           	opt callstack 0
  5755                           
  5756 ;; *************** function _clear_adc_scan *****************
  5757 ;; Defined at:
  5758 ;;		line 64 in file "daq.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1  [STACK] void 
  5765 ;; Registers used:
  5766 ;;		None
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/39
  5769 ;;		On exit  : 3F/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    6
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text21
  5787  018E96                     __ptext21:
  5788                           	opt callstack 0
  5789  018E96                     _clear_adc_scan:
  5790                           	opt callstack 24
  5791                           
  5792                           ;daq.c: 66:  R.done = 0;
  5793                           
  5794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5795                           ;incstack = 0
  5796  018E96  0100               	movlb	0	; () banked
  5797  018E98  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5798                           
  5799                           ; BSR set to: 0
  5800                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5801  018E9A  0012               	return		;funcret
  5802  018E9C                     __end_of_clear_adc_scan:
  5803                           	opt callstack 0
  5804                           
  5805 ;; *************** function _check_help *****************
  5806 ;; Defined at:
  5807 ;;		line 40 in file "mconfig.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  flipper         1  [STACK] const _Bool 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  estatus         1    0        _Bool 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1  [STACK] _Bool 
  5814 ;; Registers used:
  5815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5816 ;; Tracked objects:
  5817 ;;		On entry : 3F/2
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5825 ;;Total ram usage:        0 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:   18
  5828 ;; This function calls:
  5829 ;;		_StartTimer
  5830 ;;		_TimerDone
  5831 ;;		_display_help
  5832 ;;		_display_info
  5833 ;;		_get_vterm_ptr
  5834 ;;		_help_button
  5835 ;;		_mode_lamp_bright
  5836 ;;		_mode_lamp_dim
  5837 ;;		_set_display_info
  5838 ;;		_set_temp_display_help
  5839 ;;		_set_vterm
  5840 ;;		_sprintf
  5841 ;;		_update_lcd
  5842 ;;		_vterm_dump
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text22
  5849  015B34                     __ptext22:
  5850                           	opt callstack 0
  5851  015B34                     _check_help:
  5852                           	opt callstack 12
  5853                           
  5854                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5855                           
  5856                           ; BSR set to: 0
  5857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5858                           ;incstack = 0
  5859  015B34  ECD7  F0C2         	call	_help_button	;wreg free
  5860  015B38  5032               	movf	btemp^0,w,c
  5861  015B3A  B4D8               	btfsc	status,2,c
  5862  015B3C  D0D0               	goto	l10741
  5863  015B3E  EC3B  F0C7         	call	_display_info	;wreg free
  5864  015B42  0432               	decf	btemp^0,w,c
  5865  015B44  B4D8               	btfsc	status,2,c
  5866  015B46  D0CB               	goto	l10741
  5867                           
  5868                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5869  015B48  0EDC               	movlw	220
  5870  015B4A  6EE6               	movwf	postinc1,c
  5871  015B4C  0E05               	movlw	5
  5872  015B4E  6EE6               	movwf	postinc1,c
  5873  015B50  0E0B               	movlw	11
  5874  015B52  6EE6               	movwf	postinc1,c
  5875  015B54  ECB9  F0C2         	call	_StartTimer	;wreg free
  5876                           
  5877                           ;mconfig.c: 48:   if (V.debug)
  5878  015B58  0102               	movlb	2	; () banked
  5879  015B5A  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5880                           
  5881                           ; BSR set to: 2
  5882                           ;mconfig.c: 49:    vterm_dump();
  5883  015B5C  ECE9  F0B4         	call	_vterm_dump	;wreg free
  5884                           
  5885                           ;mconfig.c: 51:   set_vterm(1);
  5886  015B60  0E01               	movlw	1
  5887  015B62  6EE6               	movwf	postinc1,c
  5888  015B64  EC7A  F0C6         	call	_set_vterm	;wreg free
  5889                           
  5890                           ; BSR set to: 5
  5891                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5892  015B68  EC3B  F0C7         	call	_display_info	;wreg free
  5893  015B6C  5032               	movf	btemp^0,w,c
  5894  015B6E  6EE6               	movwf	postinc1,c
  5895  015B70  ECFB  F0C6         	call	_set_temp_display_help	;wreg free
  5896                           
  5897                           ; BSR set to: 2
  5898                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5899  015B74  0E01               	movlw	1
  5900  015B76  6EE6               	movwf	postinc1,c
  5901  015B78  EC3F  F0C6         	call	_set_display_info	;wreg free
  5902                           
  5903                           ;mconfig.c: 54:   if (flipper) {
  5904                           ;stkvar	_flipper @ sp[(0)+-1]
  5905  015B7C  0EFF               	movlw	-1
  5906  015B7E  50E3               	movf	plusw1,w,c
  5907  015B80  B4D8               	btfsc	status,2,c
  5908  015B82  D019               	goto	l10727
  5909                           
  5910                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5911  015B84  0EC1               	movlw	low STR_27
  5912  015B86  6EE6               	movwf	postinc1,c
  5913  015B88  0EFF               	movlw	high STR_27
  5914  015B8A  6EE6               	movwf	postinc1,c
  5915  015B8C  0E80               	movlw	low STR_29
  5916  015B8E  6EE6               	movwf	postinc1,c
  5917  015B90  0EFE               	movlw	high STR_29
  5918  015B92  6EE6               	movwf	postinc1,c
  5919  015B94  0E01               	movlw	1
  5920  015B96  6EE6               	movwf	postinc1,c
  5921  015B98  0E00               	movlw	0
  5922  015B9A  6EE6               	movwf	postinc1,c
  5923  015B9C  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  5924  015BA0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5925  015BA6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5926  015BAC  0E06               	movlw	6
  5927  015BAE  6EE6               	movwf	postinc1,c
  5928  015BB0  ECAF  F0B7         	call	_sprintf	;wreg free
  5929                           
  5930                           ;mconfig.c: 56:   } else {
  5931  015BB4  D018               	goto	l1589
  5932  015BB6                     l10727:
  5933                           
  5934                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5935  015BB6  0ED7               	movlw	low STR_28
  5936  015BB8  6EE6               	movwf	postinc1,c
  5937  015BBA  0EFF               	movlw	high STR_28
  5938  015BBC  6EE6               	movwf	postinc1,c
  5939  015BBE  0E80               	movlw	low STR_29
  5940  015BC0  6EE6               	movwf	postinc1,c
  5941  015BC2  0EFE               	movlw	high STR_29
  5942  015BC4  6EE6               	movwf	postinc1,c
  5943  015BC6  0E01               	movlw	1
  5944  015BC8  6EE6               	movwf	postinc1,c
  5945  015BCA  0E00               	movlw	0
  5946  015BCC  6EE6               	movwf	postinc1,c
  5947  015BCE  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  5948  015BD2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5949  015BD8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5950  015BDE  0E06               	movlw	6
  5951  015BE0  6EE6               	movwf	postinc1,c
  5952  015BE2  ECAF  F0B7         	call	_sprintf	;wreg free
  5953  015BE6                     l1589:
  5954                           
  5955                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5956  015BE6  0102               	movlb	2	; () banked
  5957  015BE8  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5958  015BEA  32E8               	rrcf	wreg,f,c
  5959  015BEC  32E8               	rrcf	wreg,f,c
  5960  015BEE  0B03               	andlw	3
  5961  015BF0  0D24               	mullw	36
  5962  015BF2  0E12               	movlw	18
  5963  015BF4  26F3               	addwf	243,f,c
  5964  015BF6  0E00               	movlw	0
  5965  015BF8  22F4               	addwfc	244,f,c
  5966  015BFA  0EC5               	movlw	low _T
  5967  015BFC  6E3C               	movwf	(btemp+10)^0,c
  5968  015BFE  0EFD               	movlw	high _T
  5969  015C00  6E3D               	movwf	(btemp+11)^0,c
  5970  015C02  50F3               	movf	243,w,c
  5971  015C04  263C               	addwf	(btemp+10)^0,f,c
  5972  015C06  50F4               	movf	244,w,c
  5973  015C08  223D               	addwfc	(btemp+11)^0,f,c
  5974  015C0A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5975  015C10  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5976  015C16  0ECD               	movlw	low STR_31
  5977  015C18  6EE6               	movwf	postinc1,c
  5978  015C1A  0EFF               	movlw	high STR_31
  5979  015C1C  6EE6               	movwf	postinc1,c
  5980  015C1E  0E01               	movlw	1
  5981  015C20  6EE6               	movwf	postinc1,c
  5982  015C22  0E01               	movlw	1
  5983  015C24  6EE6               	movwf	postinc1,c
  5984  015C26  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  5985  015C2A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5986  015C30  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5987  015C36  0E06               	movlw	6
  5988  015C38  6EE6               	movwf	postinc1,c
  5989  015C3A  ECAF  F0B7         	call	_sprintf	;wreg free
  5990                           
  5991                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5992  015C3E  0102               	movlb	2	; () banked
  5993  015C40  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5994  015C42  32E8               	rrcf	wreg,f,c
  5995  015C44  32E8               	rrcf	wreg,f,c
  5996  015C46  0B03               	andlw	3
  5997  015C48  0D24               	mullw	36
  5998  015C4A  0EC5               	movlw	low _T
  5999  015C4C  6E3C               	movwf	(btemp+10)^0,c
  6000  015C4E  0EFD               	movlw	high _T
  6001  015C50  6E3D               	movwf	(btemp+11)^0,c
  6002  015C52  50F3               	movf	243,w,c
  6003  015C54  263C               	addwf	(btemp+10)^0,f,c
  6004  015C56  50F4               	movf	244,w,c
  6005  015C58  223D               	addwfc	(btemp+11)^0,f,c
  6006  015C5A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6007  015C60  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6008  015C66  0ECD               	movlw	low STR_31
  6009  015C68  6EE6               	movwf	postinc1,c
  6010  015C6A  0EFF               	movlw	high STR_31
  6011  015C6C  6EE6               	movwf	postinc1,c
  6012  015C6E  0E01               	movlw	1
  6013  015C70  6EE6               	movwf	postinc1,c
  6014  015C72  0E02               	movlw	2
  6015  015C74  6EE6               	movwf	postinc1,c
  6016  015C76  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6017  015C7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6018  015C80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6019  015C86  0E06               	movlw	6
  6020  015C88  6EE6               	movwf	postinc1,c
  6021  015C8A  ECAF  F0B7         	call	_sprintf	;wreg free
  6022                           
  6023                           ;mconfig.c: 61:   V.help_id++;
  6024  015C8E  EE20  F29B         	lfsr	2,_V+155	;volatile
  6025  015C92  38DF               	swapf	223,w,c
  6026  015C94  6E3D               	movwf	(btemp+11)^0,c
  6027  015C96  323D               	rrcf	(btemp+11)^0,f,c
  6028  015C98  303D               	rrcf	(btemp+11)^0,w,c
  6029  015C9A  0B03               	andlw	3
  6030  015C9C  6E3D               	movwf	(btemp+11)^0,c
  6031  015C9E  2A3D               	incf	(btemp+11)^0,f,c
  6032  015CA0  3A3D               	swapf	(btemp+11)^0,f,c
  6033  015CA2  363D               	rlcf	(btemp+11)^0,f,c
  6034  015CA4  363D               	rlcf	(btemp+11)^0,f,c
  6035  015CA6  50DF               	movf	223,w,c
  6036  015CA8  183D               	xorwf	(btemp+11)^0,w,c
  6037  015CAA  0B3F               	andlw	-193
  6038  015CAC  183D               	xorwf	(btemp+11)^0,w,c
  6039  015CAE  6EDF               	movwf	223,c
  6040                           
  6041                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6042  015CB0  0EB8               	movlw	184
  6043  015CB2  6EE6               	movwf	postinc1,c
  6044  015CB4  0E0B               	movlw	11
  6045  015CB6  6EE6               	movwf	postinc1,c
  6046  015CB8  0E09               	movlw	9
  6047  015CBA  6EE6               	movwf	postinc1,c
  6048  015CBC  ECB9  F0C2         	call	_StartTimer	;wreg free
  6049                           
  6050                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6051  015CC0  0EB8               	movlw	184
  6052  015CC2  6EE6               	movwf	postinc1,c
  6053  015CC4  0E0B               	movlw	11
  6054  015CC6  6EE6               	movwf	postinc1,c
  6055  015CC8  0E07               	movlw	7
  6056  015CCA  6EE6               	movwf	postinc1,c
  6057  015CCC  ECB9  F0C2         	call	_StartTimer	;wreg free
  6058                           
  6059                           ;mconfig.c: 64:   mode_lamp_bright();
  6060  015CD0  EC0A  F0C7         	call	_mode_lamp_bright	;wreg free
  6061                           
  6062                           ;mconfig.c: 65:   update_lcd(1);
  6063  015CD4  0E01               	movlw	1
  6064  015CD6  6EE6               	movwf	postinc1,c
  6065  015CD8  EC28  F0B7         	call	_update_lcd	;wreg free
  6066                           
  6067                           ;mconfig.c: 67:  } else {
  6068  015CDC  D032               	goto	l1590
  6069  015CDE                     l10741:
  6070                           
  6071                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6072  015CDE  0E09               	movlw	9
  6073  015CE0  6EE6               	movwf	postinc1,c
  6074  015CE2  ECB9  F0C5         	call	_TimerDone	;wreg free
  6075  015CE6  5032               	movf	btemp^0,w,c
  6076  015CE8  B4D8               	btfsc	status,2,c
  6077  015CEA  D02B               	goto	l1590
  6078                           
  6079                           ;mconfig.c: 69:    set_vterm(0);
  6080  015CEC  0E00               	movlw	0
  6081  015CEE  6EE6               	movwf	postinc1,c
  6082  015CF0  EC7A  F0C6         	call	_set_vterm	;wreg free
  6083                           
  6084                           ; BSR set to: 5
  6085                           ;mconfig.c: 70:    V.help = 0;
  6086  015CF4  0102               	movlb	2	; () banked
  6087  015CF6  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6088                           
  6089                           ; BSR set to: 2
  6090                           ;mconfig.c: 71:    set_display_info(display_help());
  6091  015CF8  EC3F  F0C7         	call	_display_help	;wreg free
  6092  015CFC  5032               	movf	btemp^0,w,c
  6093  015CFE  6EE6               	movwf	postinc1,c
  6094  015D00  EC3F  F0C6         	call	_set_display_info	;wreg free
  6095                           
  6096                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6097  015D04  0060  FA57  FFE6   	movff	_V+149,postinc1
  6098  015D0A  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6099  015D10  ECA3  F0C6         	call	_mode_lamp_dim	;wreg free
  6100                           
  6101                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6102  015D14  0E0B               	movlw	11
  6103  015D16  6EE6               	movwf	postinc1,c
  6104  015D18  ECB9  F0C5         	call	_TimerDone	;wreg free
  6105  015D1C  5032               	movf	btemp^0,w,c
  6106  015D1E  B4D8               	btfsc	status,2,c
  6107  015D20  D010               	goto	l1590
  6108                           
  6109                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6110  015D22  0102               	movlb	2	; () banked
  6111  015D24  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6112  015D26  A4D8               	btfss	status,2,c
  6113  015D28  D002               	goto	u10600
  6114  015D2A  0E01               	movlw	1
  6115  015D2C  D001               	goto	u10610
  6116  015D2E                     u10600:
  6117  015D2E  0E00               	movlw	0
  6118  015D30                     u10610:
  6119  015D30  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6120                           
  6121                           ; BSR set to: 2
  6122                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6123  015D32  0EDC               	movlw	220
  6124  015D34  6EE6               	movwf	postinc1,c
  6125  015D36  0E05               	movlw	5
  6126  015D38  6EE6               	movwf	postinc1,c
  6127  015D3A  0E0B               	movlw	11
  6128  015D3C  6EE6               	movwf	postinc1,c
  6129  015D3E  ECB9  F0C2         	call	_StartTimer	;wreg free
  6130  015D42                     l1590:
  6131                           
  6132                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6133  015D42  52E5               	movf	postdec1,f,c
  6134  015D44  0012               	return		;funcret
  6135  015D46                     __end_of_check_help:
  6136                           	opt callstack 0
  6137                           
  6138 ;; *************** function _vterm_dump *****************
  6139 ;; Defined at:
  6140 ;;		line 121 in file "mconfig.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1  [STACK] void 
  6147 ;; Registers used:
  6148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6149 ;; Tracked objects:
  6150 ;;		On entry : 3F/2
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6158 ;;Total ram usage:        0 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:   17
  6161 ;; This function calls:
  6162 ;;		_WaitMs
  6163 ;;		_eaDogM_WriteStringAtPos
  6164 ;;		_get_vterm_ptr
  6165 ;;		_sprintf
  6166 ;;		_wait_lcd_done
  6167 ;; This function is called by:
  6168 ;;		_check_help
  6169 ;; This function uses a reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text23
  6173  0169D2                     __ptext23:
  6174                           	opt callstack 0
  6175  0169D2                     _vterm_dump:
  6176                           	opt callstack 12
  6177                           
  6178                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6179                           
  6180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6181                           ;incstack = 0
  6182  0169D2  0E01               	movlw	1
  6183  0169D4  6EE6               	movwf	postinc1,c
  6184  0169D6  0E00               	movlw	0
  6185  0169D8  6EE6               	movwf	postinc1,c
  6186  0169DA  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6187  0169DE  0060  F0CB  FFE6   	movff	btemp,postinc1
  6188  0169E4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6189  0169EA  0E00               	movlw	0
  6190  0169EC  6EE6               	movwf	postinc1,c
  6191  0169EE  0E00               	movlw	0
  6192  0169F0  6EE6               	movwf	postinc1,c
  6193  0169F2  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6194  0169F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  6195  0169FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6196  016A02  0EA3               	movlw	low STR_33
  6197  016A04  6EE6               	movwf	postinc1,c
  6198  016A06  0EFF               	movlw	high STR_33
  6199  016A08  6EE6               	movwf	postinc1,c
  6200  016A0A  0E01               	movlw	low (_V+1)
  6201  016A0C  6EE6               	movwf	postinc1,c
  6202  016A0E  0E02               	movlw	high (_V+1)
  6203  016A10  6EE6               	movwf	postinc1,c
  6204  016A12  0E08               	movlw	8
  6205  016A14  6EE6               	movwf	postinc1,c
  6206  016A16  ECAF  F0B7         	call	_sprintf	;wreg free
  6207                           
  6208                           ;mconfig.c: 124:  wait_lcd_done();
  6209  016A1A  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6213  016A1E  0E01               	movlw	low (_V+1)
  6214  016A20  6EE6               	movwf	postinc1,c
  6215  016A22  0E02               	movlw	high (_V+1)
  6216  016A24  6EE6               	movwf	postinc1,c
  6217  016A26  0E00               	movlw	0
  6218  016A28  6EE6               	movwf	postinc1,c
  6219  016A2A  0E00               	movlw	0
  6220  016A2C  6EE6               	movwf	postinc1,c
  6221  016A2E  EC0E  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6222                           
  6223                           ; BSR set to: 59
  6224                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6225  016A32  0E01               	movlw	1
  6226  016A34  6EE6               	movwf	postinc1,c
  6227  016A36  0E01               	movlw	1
  6228  016A38  6EE6               	movwf	postinc1,c
  6229  016A3A  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6230  016A3E  0060  F0CB  FFE6   	movff	btemp,postinc1
  6231  016A44  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6232  016A4A  0E00               	movlw	0
  6233  016A4C  6EE6               	movwf	postinc1,c
  6234  016A4E  0E01               	movlw	1
  6235  016A50  6EE6               	movwf	postinc1,c
  6236  016A52  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6237  016A56  0060  F0CB  FFE6   	movff	btemp,postinc1
  6238  016A5C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6239  016A62  0EA3               	movlw	low STR_33
  6240  016A64  6EE6               	movwf	postinc1,c
  6241  016A66  0EFF               	movlw	high STR_33
  6242  016A68  6EE6               	movwf	postinc1,c
  6243  016A6A  0E01               	movlw	low (_V+1)
  6244  016A6C  6EE6               	movwf	postinc1,c
  6245  016A6E  0E02               	movlw	high (_V+1)
  6246  016A70  6EE6               	movwf	postinc1,c
  6247  016A72  0E08               	movlw	8
  6248  016A74  6EE6               	movwf	postinc1,c
  6249  016A76  ECAF  F0B7         	call	_sprintf	;wreg free
  6250                           
  6251                           ;mconfig.c: 127:  wait_lcd_done();
  6252  016A7A  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  6253                           
  6254                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6255  016A7E  0E01               	movlw	low (_V+1)
  6256  016A80  6EE6               	movwf	postinc1,c
  6257  016A82  0E02               	movlw	high (_V+1)
  6258  016A84  6EE6               	movwf	postinc1,c
  6259  016A86  0E00               	movlw	0
  6260  016A88  6EE6               	movwf	postinc1,c
  6261  016A8A  0E01               	movlw	1
  6262  016A8C  6EE6               	movwf	postinc1,c
  6263  016A8E  EC0E  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6264                           
  6265                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6266  016A92  0E01               	movlw	1
  6267  016A94  6EE6               	movwf	postinc1,c
  6268  016A96  0E02               	movlw	2
  6269  016A98  6EE6               	movwf	postinc1,c
  6270  016A9A  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6271  016A9E  0060  F0CB  FFE6   	movff	btemp,postinc1
  6272  016AA4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6273  016AAA  0E00               	movlw	0
  6274  016AAC  6EE6               	movwf	postinc1,c
  6275  016AAE  0E02               	movlw	2
  6276  016AB0  6EE6               	movwf	postinc1,c
  6277  016AB2  ECBD  F0C3         	call	_get_vterm_ptr	;wreg free
  6278  016AB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  6279  016ABC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6280  016AC2  0EA3               	movlw	low STR_33
  6281  016AC4  6EE6               	movwf	postinc1,c
  6282  016AC6  0EFF               	movlw	high STR_33
  6283  016AC8  6EE6               	movwf	postinc1,c
  6284  016ACA  0E01               	movlw	low (_V+1)
  6285  016ACC  6EE6               	movwf	postinc1,c
  6286  016ACE  0E02               	movlw	high (_V+1)
  6287  016AD0  6EE6               	movwf	postinc1,c
  6288  016AD2  0E08               	movlw	8
  6289  016AD4  6EE6               	movwf	postinc1,c
  6290  016AD6  ECAF  F0B7         	call	_sprintf	;wreg free
  6291                           
  6292                           ;mconfig.c: 130:  wait_lcd_done();
  6293  016ADA  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6297  016ADE  0E01               	movlw	low (_V+1)
  6298  016AE0  6EE6               	movwf	postinc1,c
  6299  016AE2  0E02               	movlw	high (_V+1)
  6300  016AE4  6EE6               	movwf	postinc1,c
  6301  016AE6  0E00               	movlw	0
  6302  016AE8  6EE6               	movwf	postinc1,c
  6303  016AEA  0E02               	movlw	2
  6304  016AEC  6EE6               	movwf	postinc1,c
  6305  016AEE  EC0E  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6306                           
  6307                           ; BSR set to: 59
  6308                           ;mconfig.c: 132:  WaitMs(3000);
  6309  016AF2  0EB8               	movlw	184
  6310  016AF4  6EE6               	movwf	postinc1,c
  6311  016AF6  0E0B               	movlw	11
  6312  016AF8  6EE6               	movwf	postinc1,c
  6313  016AFA  ECF3  F0C2         	call	_WaitMs	;wreg free
  6314                           
  6315                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6316  016AFE  0012               	return		;funcret
  6317  016B00                     __end_of_vterm_dump:
  6318                           	opt callstack 0
  6319                           
  6320 ;; *************** function _sprintf *****************
  6321 ;; Defined at:
  6322 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  s               2  [STACK] PTR unsigned char 
  6325 ;;		 -> D.lcd(216), D(218), V(188), 
  6326 ;;  fmt             2  [STACK] PTR const unsigned char 
  6327 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6328 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6329 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6330 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6331 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6332 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6333 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6334 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6335 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6336 ;;		 -> STR_1(17), 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  f               6  [STACK] struct _IO_FILE
  6339 ;;  ap              2  [STACK] PTR void [1]
  6340 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6341 ;;  ret             2    0        int 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2  [STACK] int 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/5
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   14
  6358 ;; This function calls:
  6359 ;;		_vfprintf
  6360 ;; This function is called by:
  6361 ;;		_main
  6362 ;;		_check_help
  6363 ;;		_vterm_dump
  6364 ;; This function uses a reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text24
  6368  016F5E                     __ptext24:
  6369                           	opt callstack 0
  6370  016F5E                     _sprintf:
  6371                           	opt callstack 0
  6372                           
  6373                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6374  016F5E  0E08               	movlw	8
  6375  016F60  26E1               	addwf	fsr1l,f,c
  6376  016F62  0E00               	movlw	0
  6377  016F64  22E2               	addwfc	fsr1h,f,c
  6378                           
  6379                           ;incstack = 0
  6380  016F66  0EFE               	movlw	254
  6381  016F68  6E3C               	movwf	(btemp+10)^0,c
  6382  016F6A  0EFF               	movlw	255
  6383  016F6C  6E3D               	movwf	(btemp+11)^0,c
  6384                           
  6385                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6386  016F6E  0EF5               	movlw	245
  6387  016F70  24E1               	addwf	fsr1l,w,c
  6388  016F72  6E3A               	movwf	(btemp+8)^0,c
  6389  016F74  0EFF               	movlw	255
  6390  016F76  20E2               	addwfc	fsr1h,w,c
  6391  016F78  6E3B               	movwf	(btemp+9)^0,c
  6392  016F7A  503C               	movf	(btemp+10)^0,w,c
  6393  016F7C  263A               	addwf	(btemp+8)^0,f,c
  6394  016F7E  503D               	movf	(btemp+11)^0,w,c
  6395  016F80  223B               	addwfc	(btemp+9)^0,f,c
  6396                           
  6397                           ;stkvar	_ap @ sp[(-8)+6]
  6398  016F82  0EFF               	movlw	-1
  6399  016F84  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  6400  016F8A  0EFE               	movlw	-2
  6401  016F8C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  6402                           
  6403                           ;stkvar	_s @ sp[(-8)+-3]
  6404  016F92  0EF5               	movlw	-11
  6405  016F94  006F FF8C  F03C    	movff	plusw1,btemp+10
  6406  016F9A  0EF6               	movlw	-10
  6407  016F9C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6408                           
  6409                           ;stkvar	_f @ sp[(-8)+0]
  6410  016FA2  0EF9               	movlw	-7
  6411  016FA4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6412  016FAA  0EF8               	movlw	-8
  6413  016FAC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6414                           
  6415                           ;stkvar	_f @ sp[(-8)+0]
  6416  016FB2  0EFA               	movlw	250
  6417  016FB4  24E1               	addwf	fsr1l,w,c
  6418  016FB6  6ED9               	movwf	fsr2l,c
  6419  016FB8  0EFF               	movlw	255
  6420  016FBA  20E2               	addwfc	fsr1h,w,c
  6421  016FBC  6EDA               	movwf	fsr2h,c
  6422  016FBE  0E00               	movlw	0
  6423  016FC0  6EDE               	movwf	postinc2,c
  6424  016FC2  0E00               	movlw	0
  6425  016FC4  6EDD               	movwf	postdec2,c
  6426                           
  6427                           ;stkvar	_f @ sp[(-8)+0]
  6428  016FC6  0EFC               	movlw	252
  6429  016FC8  24E1               	addwf	fsr1l,w,c
  6430  016FCA  6ED9               	movwf	fsr2l,c
  6431  016FCC  0EFF               	movlw	255
  6432  016FCE  20E2               	addwfc	fsr1h,w,c
  6433  016FD0  6EDA               	movwf	fsr2h,c
  6434  016FD2  0E00               	movlw	0
  6435  016FD4  6EDE               	movwf	postinc2,c
  6436  016FD6  0E00               	movlw	0
  6437  016FD8  6EDD               	movwf	postdec2,c
  6438                           
  6439                           ;stkvar	_ap @ sp[(-8)+6]
  6440  016FDA  0EFE               	movlw	254
  6441  016FDC  24E1               	addwf	fsr1l,w,c
  6442  016FDE  6E32               	movwf	btemp^0,c
  6443  016FE0  0EFF               	movlw	255
  6444  016FE2  20E2               	addwfc	fsr1h,w,c
  6445  016FE4  6E33               	movwf	(btemp+1)^0,c
  6446  016FE6  0060  F0CB  FFE6   	movff	btemp,postinc1
  6447  016FEC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6448                           
  6449                           ;stkvar	_fmt @ sp[(-10)+-5]
  6450  016FF2  0EF1               	movlw	-15
  6451  016FF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6452  016FFA  006F FF8F FFE6     	movff	plusw1,postinc1
  6453                           
  6454                           ;stkvar	_f @ sp[(-12)+0]
  6455  017000  0EF4               	movlw	244
  6456  017002  24E1               	addwf	fsr1l,w,c
  6457  017004  6E32               	movwf	btemp^0,c
  6458  017006  0EFF               	movlw	255
  6459  017008  20E2               	addwfc	fsr1h,w,c
  6460  01700A  6E33               	movwf	(btemp+1)^0,c
  6461  01700C  0060  F0CB  FFE6   	movff	btemp,postinc1
  6462  017012  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6463  017018  EC7F  F0BB         	call	_vfprintf	;wreg free
  6464                           
  6465                           ;stkvar	_f @ sp[(-8)+0]
  6466  01701C  0EFA               	movlw	250
  6467  01701E  24E1               	addwf	fsr1l,w,c
  6468  017020  6ED9               	movwf	fsr2l,c
  6469  017022  0EFF               	movlw	255
  6470  017024  20E2               	addwfc	fsr1h,w,c
  6471  017026  6EDA               	movwf	fsr2h,c
  6472  017028  006F FF78  F03C    	movff	postinc2,btemp+10
  6473  01702E  006F FF74  F03D    	movff	postdec2,btemp+11
  6474                           
  6475                           ;stkvar	_s @ sp[(-8)+-3]
  6476  017034  0EF5               	movlw	-11
  6477  017036  006F FF8C  F03A    	movff	plusw1,btemp+8
  6478  01703C  0EF6               	movlw	-10
  6479  01703E  006F FF8C  F03B    	movff	plusw1,btemp+9
  6480  017044  503C               	movf	(btemp+10)^0,w,c
  6481  017046  243A               	addwf	(btemp+8)^0,w,c
  6482  017048  6ED9               	movwf	fsr2l,c
  6483  01704A  503D               	movf	(btemp+11)^0,w,c
  6484  01704C  203B               	addwfc	(btemp+9)^0,w,c
  6485  01704E  6EDA               	movwf	fsr2h,c
  6486  017050  0E00               	movlw	0
  6487  017052  6EDF               	movwf	indf2,c
  6488                           
  6489                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6490  017054  0EF8               	movlw	248
  6491  017056  26E1               	addwf	fsr1l,f,c
  6492  017058  0EFF               	movlw	255
  6493  01705A  22E2               	addwfc	fsr1h,f,c
  6494  01705C  52E5               	movf	postdec1,f,c
  6495  01705E  50E7               	movf	indf1,w,c
  6496  017060  5EE1               	subwf	fsr1l,f,c
  6497  017062  0E00               	movlw	0
  6498  017064  5AE2               	subwfb	fsr1h,f,c
  6499  017066  0012               	return		;funcret
  6500  017068                     __end_of_sprintf:
  6501                           	opt callstack 0
  6502                           
  6503 ;; *************** function _get_vterm_ptr *****************
  6504 ;; Defined at:
  6505 ;;		line 116 in file "mconfig.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  line            1  [STACK] const unsigned char 
  6508 ;;  vterm           1  [STACK] const unsigned char 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2  [STACK] PTR unsigned char 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/5
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6524 ;;Total ram usage:        0 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    6
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;;		_check_help
  6532 ;;		_vterm_dump
  6533 ;; This function uses a reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text25
  6537  01877A                     __ptext25:
  6538                           	opt callstack 0
  6539  01877A                     _get_vterm_ptr:
  6540                           	opt callstack 24
  6541                           
  6542                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6543                           ;stkvar	_vterm @ sp[(0)+-2]
  6544                           
  6545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6546                           ;incstack = 0
  6547  01877A  0EFE               	movlw	-2
  6548  01877C  50E3               	movf	plusw1,w,c
  6549  01877E  0B03               	andlw	3
  6550  018780  0D36               	mullw	54
  6551  018782  0E00               	movlw	low _D
  6552  018784  6E32               	movwf	btemp^0,c
  6553  018786  0E05               	movlw	high _D
  6554  018788  6E33               	movwf	(btemp+1)^0,c
  6555  01878A  50F3               	movf	243,w,c
  6556  01878C  2632               	addwf	btemp^0,f,c
  6557  01878E  50F4               	movf	244,w,c
  6558  018790  2233               	addwfc	(btemp+1)^0,f,c
  6559                           
  6560                           ;stkvar	_line @ sp[(0)+-1]
  6561  018792  0EFF               	movlw	-1
  6562  018794  50E3               	movf	plusw1,w,c
  6563  018796  0B03               	andlw	3
  6564  018798  0D12               	mullw	18
  6565  01879A  50F3               	movf	243,w,c
  6566  01879C  2632               	addwf	btemp^0,f,c
  6567  01879E  50F4               	movf	244,w,c
  6568  0187A0  2233               	addwfc	(btemp+1)^0,f,c
  6569                           
  6570                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6571  0187A2  52E5               	movf	postdec1,f,c
  6572  0187A4  52E5               	movf	postdec1,f,c
  6573  0187A6  0012               	return		;funcret
  6574  0187A8                     __end_of_get_vterm_ptr:
  6575                           	opt callstack 0
  6576                           
  6577 ;; *************** function _WaitMs *****************
  6578 ;; Defined at:
  6579 ;;		line 32 in file "timers.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  numMilliseco    2  [STACK] const unsigned short 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1  [STACK] void 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/2
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    7
  6600 ;; This function calls:
  6601 ;;		_StartTimer
  6602 ;;		_TimerDone
  6603 ;; This function is called by:
  6604 ;;		_main
  6605 ;;		_vterm_dump
  6606 ;; This function uses a reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text26
  6610  0185E6                     __ptext26:
  6611                           	opt callstack 0
  6612  0185E6                     _WaitMs:
  6613                           	opt callstack 21
  6614                           
  6615                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6616                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6617                           
  6618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6619                           ;incstack = 0
  6620  0185E6  0EFE               	movlw	-2
  6621  0185E8  006F FF8F FFE6     	movff	plusw1,postinc1
  6622  0185EE  006F FF8F FFE6     	movff	plusw1,postinc1
  6623  0185F4  0E00               	movlw	0
  6624  0185F6  6EE6               	movwf	postinc1,c
  6625  0185F8  ECB9  F0C2         	call	_StartTimer	;wreg free
  6626                           
  6627                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6628  0185FC  D005               	goto	l8265
  6629  0185FE                     l1519:
  6630                           
  6631                           ;timers.c: 36:   __nop();
  6632  0185FE  F000               	nop	
  6633                           
  6634                           ;timers.c: 37:   __nop();
  6635  018600  F000               	nop	
  6636                           
  6637                           ;timers.c: 38:   __nop();
  6638  018602  F000               	nop	
  6639                           
  6640                           ;timers.c: 39:   __nop();
  6641  018604  F000               	nop	
  6642  018606  0004               	clrwdt		;# 
  6643  018608                     l8265:
  6644                           
  6645                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6646  018608  0E00               	movlw	0
  6647  01860A  6EE6               	movwf	postinc1,c
  6648  01860C  ECB9  F0C5         	call	_TimerDone	;wreg free
  6649  018610  5032               	movf	btemp^0,w,c
  6650  018612  B4D8               	btfsc	status,2,c
  6651  018614  D7F4               	goto	l1519
  6652                           
  6653                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6654  018616  52E5               	movf	postdec1,f,c
  6655  018618  52E5               	movf	postdec1,f,c
  6656  01861A  0012               	return		;funcret
  6657  01861C                     __end_of_WaitMs:
  6658                           	opt callstack 0
  6659                           
  6660 ;; *************** function _update_lcd *****************
  6661 ;; Defined at:
  6662 ;;		line 85 in file "mconfig.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  vterm           1  [STACK] unsigned char 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1  [STACK] unsigned char 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/5
  6673 ;;		On exit  : 1/1
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6680 ;;Total ram usage:        0 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:   17
  6683 ;; This function calls:
  6684 ;;		_eaDogM_WriteStringAtPos
  6685 ;;		_wait_lcd_done
  6686 ;; This function is called by:
  6687 ;;		_main
  6688 ;;		_check_help
  6689 ;; This function uses a reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text27
  6693  016E50                     __ptext27:
  6694                           	opt callstack 0
  6695  016E50                     _update_lcd:
  6696                           	opt callstack 13
  6697                           
  6698                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6699                           ;stkvar	_vterm @ sp[(0)+-1]
  6700                           
  6701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6702                           ;incstack = 0
  6703  016E50  0EFF               	movlw	-1
  6704  016E52  006F FF8C  F032    	movff	plusw1,btemp
  6705  016E58  0E03               	movlw	3
  6706  016E5A  1632               	andwf	btemp^0,f,c
  6707  016E5C  0EFF               	movlw	-1
  6708  016E5E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6709                           
  6710                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6711  016E64  0105               	movlb	5	; () banked
  6712  016E66  A1D8               	btfss	(_D+216)& (0+255),0,b
  6713  016E68  D004               	goto	l10609
  6714                           
  6715                           ; BSR set to: 5
  6716                           ;stkvar	_vterm @ sp[(0)+-1]
  6717  016E6A  0EFF               	movlw	-1
  6718  016E6C  50E3               	movf	plusw1,w,c
  6719  016E6E  B4D8               	btfsc	status,2,c
  6720  016E70  D074               	goto	l1597
  6721  016E72                     l10609:
  6722                           
  6723                           ; BSR set to: 5
  6724                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6725                           ;stkvar	_vterm @ sp[(0)+-1]
  6726  016E72  0EFF               	movlw	-1
  6727  016E74  50E3               	movf	plusw1,w,c
  6728  016E76  0D36               	mullw	54
  6729  016E78  0E10               	movlw	low (_D+16)
  6730  016E7A  24F3               	addwf	243,w,c
  6731  016E7C  6ED9               	movwf	fsr2l,c
  6732  016E7E  0E05               	movlw	high (_D+16)
  6733  016E80  20F4               	addwfc	prodh,w,c
  6734  016E82  6EDA               	movwf	fsr2h,c
  6735  016E84  0E00               	movlw	0
  6736  016E86  6EDF               	movwf	indf2,c
  6737                           
  6738                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6739                           ;stkvar	_vterm @ sp[(0)+-1]
  6740  016E88  0EFF               	movlw	-1
  6741  016E8A  50E3               	movf	plusw1,w,c
  6742  016E8C  0D36               	mullw	54
  6743  016E8E  0E22               	movlw	low (_D+34)
  6744  016E90  24F3               	addwf	243,w,c
  6745  016E92  6ED9               	movwf	fsr2l,c
  6746  016E94  0E05               	movlw	high (_D+34)
  6747  016E96  20F4               	addwfc	prodh,w,c
  6748  016E98  6EDA               	movwf	fsr2h,c
  6749  016E9A  0E00               	movlw	0
  6750  016E9C  6EDF               	movwf	indf2,c
  6751                           
  6752                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6753                           ;stkvar	_vterm @ sp[(0)+-1]
  6754  016E9E  0EFF               	movlw	-1
  6755  016EA0  50E3               	movf	plusw1,w,c
  6756  016EA2  0D36               	mullw	54
  6757  016EA4  0E34               	movlw	low (_D+52)
  6758  016EA6  24F3               	addwf	243,w,c
  6759  016EA8  6ED9               	movwf	fsr2l,c
  6760  016EAA  0E05               	movlw	high (_D+52)
  6761  016EAC  20F4               	addwfc	prodh,w,c
  6762  016EAE  6EDA               	movwf	fsr2h,c
  6763  016EB0  0E00               	movlw	0
  6764  016EB2  6EDF               	movwf	indf2,c
  6765                           
  6766                           ; BSR set to: 5
  6767                           ;mconfig.c: 95:  wait_lcd_done();
  6768  016EB4  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6772                           ;stkvar	_vterm @ sp[(0)+-1]
  6773  016EB8  0EFF               	movlw	-1
  6774  016EBA  50E3               	movf	plusw1,w,c
  6775  016EBC  0D36               	mullw	54
  6776  016EBE  0E00               	movlw	low _D
  6777  016EC0  6E3C               	movwf	(btemp+10)^0,c
  6778  016EC2  0E05               	movlw	high _D
  6779  016EC4  6E3D               	movwf	(btemp+11)^0,c
  6780  016EC6  50F3               	movf	243,w,c
  6781  016EC8  263C               	addwf	(btemp+10)^0,f,c
  6782  016ECA  50F4               	movf	244,w,c
  6783  016ECC  223D               	addwfc	(btemp+11)^0,f,c
  6784  016ECE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6785  016ED4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6786  016EDA  0E00               	movlw	0
  6787  016EDC  6EE6               	movwf	postinc1,c
  6788  016EDE  0E00               	movlw	0
  6789  016EE0  6EE6               	movwf	postinc1,c
  6790  016EE2  EC0E  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6791                           
  6792                           ; BSR set to: 59
  6793                           ;mconfig.c: 97:  wait_lcd_done();
  6794  016EE6  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6798                           ;stkvar	_vterm @ sp[(0)+-1]
  6799  016EEA  0EFF               	movlw	-1
  6800  016EEC  50E3               	movf	plusw1,w,c
  6801  016EEE  0D36               	mullw	54
  6802  016EF0  0E00               	movlw	low _D
  6803  016EF2  6E3C               	movwf	(btemp+10)^0,c
  6804  016EF4  0E05               	movlw	high _D
  6805  016EF6  6E3D               	movwf	(btemp+11)^0,c
  6806  016EF8  0E12               	movlw	18
  6807  016EFA  263C               	addwf	(btemp+10)^0,f,c
  6808  016EFC  0E00               	movlw	0
  6809  016EFE  223D               	addwfc	(btemp+11)^0,f,c
  6810  016F00  50F3               	movf	243,w,c
  6811  016F02  263C               	addwf	(btemp+10)^0,f,c
  6812  016F04  50F4               	movf	244,w,c
  6813  016F06  223D               	addwfc	(btemp+11)^0,f,c
  6814  016F08  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6815  016F0E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6816  016F14  0E00               	movlw	0
  6817  016F16  6EE6               	movwf	postinc1,c
  6818  016F18  0E01               	movlw	1
  6819  016F1A  6EE6               	movwf	postinc1,c
  6820  016F1C  EC0E  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6821                           
  6822                           ; BSR set to: 59
  6823                           ;mconfig.c: 99:  wait_lcd_done();
  6824  016F20  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6828                           ;stkvar	_vterm @ sp[(0)+-1]
  6829  016F24  0EFF               	movlw	-1
  6830  016F26  50E3               	movf	plusw1,w,c
  6831  016F28  0D36               	mullw	54
  6832  016F2A  0E00               	movlw	low _D
  6833  016F2C  6E3C               	movwf	(btemp+10)^0,c
  6834  016F2E  0E05               	movlw	high _D
  6835  016F30  6E3D               	movwf	(btemp+11)^0,c
  6836  016F32  0E24               	movlw	36
  6837  016F34  263C               	addwf	(btemp+10)^0,f,c
  6838  016F36  0E00               	movlw	0
  6839  016F38  223D               	addwfc	(btemp+11)^0,f,c
  6840  016F3A  50F3               	movf	243,w,c
  6841  016F3C  263C               	addwf	(btemp+10)^0,f,c
  6842  016F3E  50F4               	movf	244,w,c
  6843  016F40  223D               	addwfc	(btemp+11)^0,f,c
  6844  016F42  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6845  016F48  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6846  016F4E  0E00               	movlw	0
  6847  016F50  6EE6               	movwf	postinc1,c
  6848  016F52  0E02               	movlw	2
  6849  016F54  6EE6               	movwf	postinc1,c
  6850  016F56  EC0E  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6851  016F5A                     l1597:
  6852                           
  6853                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6854  016F5A  52E5               	movf	postdec1,f,c
  6855  016F5C  0012               	return		;funcret
  6856  016F5E                     __end_of_update_lcd:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6860 ;; Defined at:
  6861 ;;		line 252 in file "eadog.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  r               1  [STACK] const unsigned char 
  6864 ;;  c               1  [STACK] const unsigned char 
  6865 ;;  strPtr          2  [STACK] PTR unsigned char 
  6866 ;;		 -> D.lcd(216), D(218), V(188), 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1  [STACK] void 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6873 ;; Tracked objects:
  6874 ;;		On entry : 3F/0
  6875 ;;		On exit  : 3F/3B
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:   16
  6885 ;; This function calls:
  6886 ;;		_eaDogM_WriteString
  6887 ;;		_send_lcd_cmd_dma
  6888 ;; This function is called by:
  6889 ;;		_update_lcd
  6890 ;;		_vterm_dump
  6891 ;; This function uses a reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text28
  6895  01861C                     __ptext28:
  6896                           	opt callstack 0
  6897  01861C                     _eaDogM_WriteStringAtPos:
  6898                           	opt callstack 13
  6899                           
  6900                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6901                           ;stkvar	_c @ sp[(0)+-2]
  6902                           
  6903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6904                           ;incstack = 0
  6905  01861C  0EFE               	movlw	-2
  6906  01861E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6907                           
  6908                           ;stkvar	_r @ sp[(0)+-1]
  6909  018624  0EFF               	movlw	-1
  6910  018626  50E3               	movf	plusw1,w,c
  6911  018628  0D10               	mullw	16
  6912  01862A  50F3               	movf	243,w,c
  6913  01862C  243D               	addwf	(btemp+11)^0,w,c
  6914  01862E  0F80               	addlw	128
  6915  018630  6EE6               	movwf	postinc1,c
  6916  018632  ECF2  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  6917                           
  6918                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6919                           ;stkvar	_strPtr @ sp[(0)+-4]
  6920  018636  0EFC               	movlw	-4
  6921  018638  006F FF8F FFE6     	movff	plusw1,postinc1
  6922  01863E  006F FF8F FFE6     	movff	plusw1,postinc1
  6923  018644  ECD3  F0BB         	call	_eaDogM_WriteString	;wreg free
  6924                           
  6925                           ; BSR set to: 59
  6926                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6927  018648  52E5               	movf	postdec1,f,c
  6928  01864A  52E5               	movf	postdec1,f,c
  6929  01864C  52E5               	movf	postdec1,f,c
  6930  01864E  52E5               	movf	postdec1,f,c
  6931  018650  0012               	return		;funcret
  6932  018652                     __end_of_eaDogM_WriteStringAtPos:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function _send_lcd_cmd_dma *****************
  6936 ;; Defined at:
  6937 ;;		line 205 in file "eadog.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  strPtr          1  [STACK] unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1  [STACK] void 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/3D
  6948 ;;		On exit  : 3F/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:   15
  6958 ;; This function calls:
  6959 ;;		_printf
  6960 ;;		_ringBufS_flush
  6961 ;;		_start_lcd
  6962 ;;		_wait_lcd_done
  6963 ;;		_wait_lcd_set
  6964 ;; This function is called by:
  6965 ;;		_eaDogM_WriteCommand
  6966 ;;		_eaDogM_WriteStringAtPos
  6967 ;; This function uses a reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text29
  6971  0181E4                     __ptext29:
  6972                           	opt callstack 0
  6973  0181E4                     _send_lcd_cmd_dma:
  6974                           	opt callstack 13
  6975                           
  6976                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6977                           
  6978                           ; BSR set to: 59
  6979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6980                           ;incstack = 0
  6981  0181E4  EC4E  F0C7         	call	_wait_lcd_set	;wreg free
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6985  0181E8  0E00               	movlw	0
  6986  0181EA  6EE6               	movwf	postinc1,c
  6987  0181EC  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6988  0181F2  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6989  0181F8  ECC3  F0BC         	call	_ringBufS_flush	;wreg free
  6990  0181FC  92BC               	bcf	188,1,c	;volatile
  6991  0181FE  94BC               	bcf	188,2,c	;volatile
  6992                           
  6993                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6994  018200  013B               	movlb	59	; () banked
  6995  018202  9FFC               	bcf	252,7,b	;volatile
  6996                           
  6997                           ; BSR set to: 59
  6998                           ;eadog.c: 214:  DMA1SSZ = 1;
  6999  018204  0E00               	movlw	0
  7000  018206  6FF8               	movwf	248,b	;volatile
  7001  018208  0E01               	movlw	1
  7002  01820A  6FF7               	movwf	247,b	;volatile
  7003                           
  7004                           ; BSR set to: 59
  7005                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  7006  01820C  8FFC               	bsf	252,7,b	;volatile
  7007                           
  7008                           ; BSR set to: 59
  7009                           ;eadog.c: 216:  printf("%c", strPtr);
  7010                           ;stkvar	_strPtr @ sp[(0)+-1]
  7011  01820E  0EFF               	movlw	-1
  7012  018210  50E3               	movf	plusw1,w,c
  7013  018212  6EE6               	movwf	postinc1,c
  7014  018214  0E00               	movlw	0
  7015  018216  6EE6               	movwf	postinc1,c
  7016  018218  0EF9               	movlw	low STR_25
  7017  01821A  6EE6               	movwf	postinc1,c
  7018  01821C  0EFF               	movlw	high STR_25
  7019  01821E  6EE6               	movwf	postinc1,c
  7020  018220  0E04               	movlw	4
  7021  018222  6EE6               	movwf	postinc1,c
  7022  018224  EC0A  F0C0         	call	_printf	;wreg free
  7023                           
  7024                           ;eadog.c: 217:  start_lcd();
  7025  018228  EC51  F0C7         	call	_start_lcd	;wreg free
  7026                           
  7027                           ; BSR set to: 59
  7028                           ;eadog.c: 218:  wait_lcd_done();
  7029  01822C  EC6C  F0C6         	call	_wait_lcd_done	;wreg free
  7030                           
  7031                           ; BSR set to: 0
  7032  018230  82BC               	bsf	188,1,c	;volatile
  7033                           
  7034                           ; BSR set to: 0
  7035                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7036  018232  52E5               	movf	postdec1,f,c
  7037  018234  0012               	return		;funcret
  7038  018236                     __end_of_send_lcd_cmd_dma:
  7039                           	opt callstack 0
  7040                           
  7041 ;; *************** function _wait_lcd_done *****************
  7042 ;; Defined at:
  7043 ;;		line 141 in file "eadog.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1  [STACK] void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/2
  7054 ;;		On exit  : 3F/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    7
  7064 ;; This function calls:
  7065 ;;		_wdtdelay
  7066 ;; This function is called by:
  7067 ;;		_send_lcd_cmd_dma
  7068 ;;		_update_lcd
  7069 ;;		_vterm_dump
  7070 ;; This function uses a reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text30
  7074  018CD8                     __ptext30:
  7075                           	opt callstack 0
  7076  018CD8                     _wait_lcd_done:
  7077                           	opt callstack 22
  7078                           
  7079                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  7080                           
  7081                           ; BSR set to: 0
  7082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7083                           ;incstack = 0
  7084  018CD8  0100               	movlb	0	; () banked
  7085  018CDA  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  7086  018CDC  D7FD               	goto	_wait_lcd_done
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;eadog.c: 144:  wdtdelay(50);
  7090  018CDE  0E32               	movlw	50
  7091  018CE0  6EE6               	movwf	postinc1,c
  7092  018CE2  0E00               	movlw	0
  7093  018CE4  6EE6               	movwf	postinc1,c
  7094  018CE6  0E00               	movlw	0
  7095  018CE8  6EE6               	movwf	postinc1,c
  7096  018CEA  0E00               	movlw	0
  7097  018CEC  6EE6               	movwf	postinc1,c
  7098  018CEE  EC98  F0C0         	call	_wdtdelay	;wreg free
  7099                           
  7100                           ; BSR set to: 0
  7101                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7102  018CF2  0012               	return		;funcret
  7103  018CF4                     __end_of_wait_lcd_done:
  7104                           	opt callstack 0
  7105                           
  7106 ;; *************** function _wdtdelay *****************
  7107 ;; Defined at:
  7108 ;;		line 22 in file "eadog.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  delay           4  [STACK] const unsigned long 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1  [STACK] void 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 3F/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:    6
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_init_display
  7133 ;;		_send_lcd_cmd
  7134 ;;		_send_lcd_cmd_long
  7135 ;;		_wait_lcd_done
  7136 ;; This function uses a reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text31
  7140  018130                     __ptext31:
  7141                           	opt callstack 0
  7142  018130                     _wdtdelay:
  7143                           	opt callstack 22
  7144                           
  7145                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7146                           
  7147                           ; BSR set to: 0
  7148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7149                           ;incstack = 0
  7150  018130  0100               	movlb	0	; () banked
  7151  018132  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  7152  018134  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7153  018136  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7154  018138  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7155  01813A                     l1364:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;eadog.c: 27:   __nop();
  7159  01813A  F000               	nop	
  7160  01813C  0004               	clrwdt		;# 
  7161                           
  7162                           ;eadog.c: 29:  };
  7163  01813E  0E01               	movlw	1
  7164  018140  0100               	movlb	0	; () banked
  7165  018142  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  7166  018144  0E00               	movlw	0
  7167  018146  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7168  018148  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7169  01814A  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;stkvar	_delay @ sp[(0)+-4]
  7173  01814C  0EFC               	movlw	-4
  7174  01814E  006F FF8C  F032    	movff	plusw1,btemp
  7175  018154  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  7176  018156  5C32               	subwf	btemp^0,w,c
  7177  018158  0EFD               	movlw	-3
  7178  01815A  006F FF8C  F032    	movff	plusw1,btemp
  7179  018160  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7180  018162  5832               	subwfb	btemp^0,w,c
  7181  018164  0EFE               	movlw	-2
  7182  018166  006F FF8C  F032    	movff	plusw1,btemp
  7183  01816C  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7184  01816E  5832               	subwfb	btemp^0,w,c
  7185  018170  0EFF               	movlw	-1
  7186  018172  006F FF8C  F032    	movff	plusw1,btemp
  7187  018178  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7188  01817A  5832               	subwfb	btemp^0,w,c
  7189  01817C  B0D8               	btfsc	status,0,c
  7190  01817E  D7DD               	goto	l1364
  7191                           
  7192                           ; BSR set to: 0
  7193                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7194  018180  52E5               	movf	postdec1,f,c
  7195  018182  52E5               	movf	postdec1,f,c
  7196  018184  52E5               	movf	postdec1,f,c
  7197  018186  52E5               	movf	postdec1,f,c
  7198  018188  0012               	return		;funcret
  7199  01818A                     __end_of_wdtdelay:
  7200                           	opt callstack 0
  7201                           
  7202 ;; *************** function _eaDogM_WriteString *****************
  7203 ;; Defined at:
  7204 ;;		line 184 in file "eadog.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  strPtr          2  [STACK] PTR unsigned char 
  7207 ;;		 -> D.lcd(216), D(218), V(188), 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1  [STACK] void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7214 ;; Tracked objects:
  7215 ;;		On entry : 3F/0
  7216 ;;		On exit  : 3F/3B
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:   15
  7226 ;; This function calls:
  7227 ;;		_printf
  7228 ;;		_ringBufS_flush
  7229 ;;		_start_lcd
  7230 ;;		_strlen
  7231 ;;		_wait_lcd_set
  7232 ;; This function is called by:
  7233 ;;		_eaDogM_WriteStringAtPos
  7234 ;; This function uses a reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text32
  7238  0177A6                     __ptext32:
  7239                           	opt callstack 0
  7240  0177A6                     _eaDogM_WriteString:
  7241                           	opt callstack 13
  7242                           
  7243                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  7244                           
  7245                           ; BSR set to: 0
  7246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7247                           ;incstack = 0
  7248  0177A6  EC4E  F0C7         	call	_wait_lcd_set	;wreg free
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  7252  0177AA  0E00               	movlw	0
  7253  0177AC  6EE6               	movwf	postinc1,c
  7254  0177AE  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7255  0177B4  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7256  0177BA  ECC3  F0BC         	call	_ringBufS_flush	;wreg free
  7257  0177BE  94BC               	bcf	188,2,c	;volatile
  7258                           
  7259                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7260                           ;stkvar	_strPtr @ sp[(0)+-2]
  7261  0177C0  0EFE               	movlw	-2
  7262  0177C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7263  0177C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7264  0177CE  EC26  F0BC         	call	_strlen	;wreg free
  7265  0177D2  5033               	movf	(btemp+1)^0,w,c
  7266  0177D4  E104               	bnz	u10510
  7267  0177D6  0E41               	movlw	65
  7268  0177D8  5C32               	subwf	btemp^0,w,c
  7269  0177DA  A0D8               	btfss	status,0,c
  7270  0177DC  D010               	goto	l10575
  7271  0177DE                     u10510:
  7272                           
  7273                           ;stkvar	_strPtr @ sp[(0)+-2]
  7274  0177DE  0EFE               	movlw	-2
  7275  0177E0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7276  0177E6  0EFF               	movlw	-1
  7277  0177E8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7278  0177EE  0E40               	movlw	64
  7279  0177F0  243C               	addwf	(btemp+10)^0,w,c
  7280  0177F2  6ED9               	movwf	fsr2l,c
  7281  0177F4  0E00               	movlw	0
  7282  0177F6  203D               	addwfc	(btemp+11)^0,w,c
  7283  0177F8  6EDA               	movwf	fsr2h,c
  7284  0177FA  0E00               	movlw	0
  7285  0177FC  6EDF               	movwf	indf2,c
  7286  0177FE                     l10575:
  7287                           
  7288                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  7289  0177FE  013B               	movlb	59	; () banked
  7290  017800  9FFC               	bcf	252,7,b	;volatile
  7291                           
  7292                           ; BSR set to: 59
  7293                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  7294                           ;stkvar	_strPtr @ sp[(0)+-2]
  7295  017802  0EFE               	movlw	-2
  7296  017804  006F FF8F FFE6     	movff	plusw1,postinc1
  7297  01780A  006F FF8F FFE6     	movff	plusw1,postinc1
  7298  017810  EC26  F0BC         	call	_strlen	;wreg free
  7299  017814  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  7300  01781A  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  7301                           
  7302                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  7303  017820  013B               	movlb	59	; () banked
  7304  017822  8FFC               	bsf	252,7,b	;volatile
  7305                           
  7306                           ; BSR set to: 59
  7307                           ;eadog.c: 195:  printf("%s", strPtr);
  7308                           ;stkvar	_strPtr @ sp[(0)+-2]
  7309  017824  0EFE               	movlw	-2
  7310  017826  006F FF8F FFE6     	movff	plusw1,postinc1
  7311  01782C  006F FF8F FFE6     	movff	plusw1,postinc1
  7312  017832  0EFC               	movlw	low STR_24
  7313  017834  6EE6               	movwf	postinc1,c
  7314  017836  0EFF               	movlw	high STR_24
  7315  017838  6EE6               	movwf	postinc1,c
  7316  01783A  0E04               	movlw	4
  7317  01783C  6EE6               	movwf	postinc1,c
  7318  01783E  EC0A  F0C0         	call	_printf	;wreg free
  7319                           
  7320                           ;eadog.c: 196:  start_lcd();
  7321  017842  EC51  F0C7         	call	_start_lcd	;wreg free
  7322                           
  7323                           ; BSR set to: 59
  7324                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7325  017846  52E5               	movf	postdec1,f,c
  7326  017848  52E5               	movf	postdec1,f,c
  7327  01784A  0012               	return		;funcret
  7328  01784C                     __end_of_eaDogM_WriteString:
  7329                           	opt callstack 0
  7330                           
  7331 ;; *************** function _wait_lcd_set *****************
  7332 ;; Defined at:
  7333 ;;		line 131 in file "eadog.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;		None
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1  [STACK] void 
  7340 ;; Registers used:
  7341 ;;		None
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/3D
  7344 ;;		On exit  : 3F/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7351 ;;Total ram usage:        0 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    6
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_eaDogM_WriteString
  7358 ;;		_send_lcd_cmd_dma
  7359 ;; This function uses a reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text33
  7363  018E9C                     __ptext33:
  7364                           	opt callstack 0
  7365  018E9C                     _wait_lcd_set:
  7366                           	opt callstack 21
  7367                           
  7368                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  7369                           
  7370                           ; BSR set to: 59
  7371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7372                           ;incstack = 0
  7373  018E9C  0100               	movlb	0	; () banked
  7374  018E9E  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  7375                           
  7376                           ; BSR set to: 0
  7377                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7378  018EA0  0012               	return		;funcret
  7379  018EA2                     __end_of_wait_lcd_set:
  7380                           	opt callstack 0
  7381                           
  7382 ;; *************** function _start_lcd *****************
  7383 ;; Defined at:
  7384 ;;		line 126 in file "eadog.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1  [STACK] void 
  7391 ;; Registers used:
  7392 ;;		None
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/3B
  7395 ;;		On exit  : 3F/3B
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    6
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_eaDogM_WriteString
  7409 ;;		_send_lcd_cmd_dma
  7410 ;; This function uses a reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text34
  7414  018EA2                     __ptext34:
  7415                           	opt callstack 0
  7416  018EA2                     _start_lcd:
  7417                           	opt callstack 21
  7418                           
  7419                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  7420                           
  7421                           ; BSR set to: 0
  7422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7423                           ;incstack = 0
  7424  018EA2  013B               	movlb	59	; () banked
  7425  018EA4  8DFC               	bsf	252,6,b	;volatile
  7426                           
  7427                           ; BSR set to: 59
  7428                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7429  018EA6  0012               	return		;funcret
  7430  018EA8                     __end_of_start_lcd:
  7431                           	opt callstack 0
  7432                           
  7433 ;; *************** function _ringBufS_flush *****************
  7434 ;; Defined at:
  7435 ;;		line 76 in file "ringbufs.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7438 ;;		 -> ring_buf1(67), 
  7439 ;;  clearBuffer     1  [STACK] const char 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1  [STACK] void 
  7444 ;; Registers used:
  7445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7446 ;; Tracked objects:
  7447 ;;		On entry : 3F/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    7
  7458 ;; This function calls:
  7459 ;;		_memset
  7460 ;; This function is called by:
  7461 ;;		_eaDogM_WriteString
  7462 ;;		_send_lcd_cmd_dma
  7463 ;; This function uses a reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text35
  7467  017986                     __ptext35:
  7468                           	opt callstack 0
  7469  017986                     _ringBufS_flush:
  7470                           	opt callstack 20
  7471                           
  7472                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7473                           ;stkvar	__this @ sp[(0)+-2]
  7474                           
  7475                           ; BSR set to: 59
  7476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7477                           ;incstack = 0
  7478  017986  0EFE               	movlw	-2
  7479  017988  006F FF8C  F03C    	movff	plusw1,btemp+10
  7480  01798E  0EFF               	movlw	-1
  7481  017990  006F FF8C  F03D    	movff	plusw1,btemp+11
  7482  017996  0E42               	movlw	66
  7483  017998  243C               	addwf	(btemp+10)^0,w,c
  7484  01799A  6ED9               	movwf	fsr2l,c
  7485  01799C  0E00               	movlw	0
  7486  01799E  203D               	addwfc	(btemp+11)^0,w,c
  7487  0179A0  6EDA               	movwf	fsr2h,c
  7488  0179A2  0E00               	movlw	0
  7489  0179A4  6EDF               	movwf	indf2,c
  7490                           
  7491                           ;ringbufs.c: 79:  _this->head = 0;
  7492                           ;stkvar	__this @ sp[(0)+-2]
  7493  0179A6  0EFE               	movlw	-2
  7494  0179A8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7495  0179AE  0EFF               	movlw	-1
  7496  0179B0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7497  0179B6  0E40               	movlw	64
  7498  0179B8  243C               	addwf	(btemp+10)^0,w,c
  7499  0179BA  6ED9               	movwf	fsr2l,c
  7500  0179BC  0E00               	movlw	0
  7501  0179BE  203D               	addwfc	(btemp+11)^0,w,c
  7502  0179C0  6EDA               	movwf	fsr2h,c
  7503  0179C2  0E00               	movlw	0
  7504  0179C4  6EDF               	movwf	indf2,c
  7505                           
  7506                           ;ringbufs.c: 80:  _this->tail = 0;
  7507                           ;stkvar	__this @ sp[(0)+-2]
  7508  0179C6  0EFE               	movlw	-2
  7509  0179C8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7510  0179CE  0EFF               	movlw	-1
  7511  0179D0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7512  0179D6  0E41               	movlw	65
  7513  0179D8  243C               	addwf	(btemp+10)^0,w,c
  7514  0179DA  6ED9               	movwf	fsr2l,c
  7515  0179DC  0E00               	movlw	0
  7516  0179DE  203D               	addwfc	(btemp+11)^0,w,c
  7517  0179E0  6EDA               	movwf	fsr2h,c
  7518  0179E2  0E00               	movlw	0
  7519  0179E4  6EDF               	movwf	indf2,c
  7520                           
  7521                           ;ringbufs.c: 81:  if (clearBuffer) {
  7522                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7523  0179E6  0EFD               	movlw	-3
  7524  0179E8  50E3               	movf	plusw1,w,c
  7525  0179EA  B4D8               	btfsc	status,2,c
  7526  0179EC  D011               	goto	l1504
  7527                           
  7528                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7529  0179EE  0E40               	movlw	64
  7530  0179F0  6EE6               	movwf	postinc1,c
  7531  0179F2  0E00               	movlw	0
  7532  0179F4  6EE6               	movwf	postinc1,c
  7533  0179F6  0E00               	movlw	0
  7534  0179F8  6EE6               	movwf	postinc1,c
  7535  0179FA  0E00               	movlw	0
  7536  0179FC  6EE6               	movwf	postinc1,c
  7537                           
  7538                           ;stkvar	__this @ sp[(-4)+-2]
  7539  0179FE  0EFA               	movlw	-6
  7540  017A00  006F FF8F FFE6     	movff	plusw1,postinc1
  7541  017A06  006F FF8F FFE6     	movff	plusw1,postinc1
  7542  017A0C  ECC5  F0A5         	call	_memset	;wreg free
  7543  017A10                     l1504:
  7544                           
  7545                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7546  017A10  52E5               	movf	postdec1,f,c
  7547  017A12  52E5               	movf	postdec1,f,c
  7548  017A14  52E5               	movf	postdec1,f,c
  7549  017A16  0012               	return		;funcret
  7550  017A18                     __end_of_ringBufS_flush:
  7551                           	opt callstack 0
  7552                           
  7553 ;; *************** function _memset *****************
  7554 ;; Defined at:
  7555 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  dest            2  [STACK] PTR void 
  7558 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7559 ;;  c               2  [STACK] int 
  7560 ;;  n               2  [STACK] unsigned int 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  s               2  [STACK] PTR unsigned char 
  7563 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7564 ;;  k               2  [STACK] unsigned int 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  2  [STACK] PTR void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;Total ram usage:        0 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    6
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_ringBufS_init
  7585 ;;		_ringBufS_flush
  7586 ;; This function uses a reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text36
  7590  014B8A                     __ptext36:
  7591                           	opt callstack 0
  7592  014B8A                     _memset:
  7593                           	opt callstack 0
  7594                           
  7595                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7596  014B8A  52E6               	movf	postinc1,f,c
  7597  014B8C  52E6               	movf	postinc1,f,c
  7598  014B8E  52E6               	movf	postinc1,f,c
  7599  014B90  52E6               	movf	postinc1,f,c
  7600                           
  7601                           ;stkvar	_dest @ sp[(-4)+-2]
  7602                           
  7603                           ;incstack = 0
  7604  014B92  0EFA               	movlw	-6
  7605  014B94  006F FF8C  F03C    	movff	plusw1,btemp+10
  7606  014B9A  0EFB               	movlw	-5
  7607  014B9C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7608                           
  7609                           ;stkvar	_s @ sp[(-4)+0]
  7610  014BA2  0EFD               	movlw	-3
  7611  014BA4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7612  014BAA  0EFC               	movlw	-4
  7613  014BAC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7614                           
  7615                           ;stkvar	_n @ sp[(-4)+-6]
  7616  014BB2  0EF6               	movlw	-10
  7617  014BB4  006F FF8C  F032    	movff	plusw1,btemp
  7618  014BBA  0EF7               	movlw	-9
  7619  014BBC  50E3               	movf	plusw1,w,c
  7620  014BBE  1032               	iorwf	btemp^0,w,c
  7621  014BC0  B4D8               	btfsc	status,2,c
  7622  014BC2  D154               	goto	u10480
  7623                           
  7624                           ;stkvar	_c @ sp[(-4)+-4]
  7625                           ;stkvar	_s @ sp[(-4)+0]
  7626  014BC4  0EFC               	movlw	-4
  7627  014BC6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7628  014BCC  0EFD               	movlw	-3
  7629  014BCE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7630  014BD4  0EF8               	movlw	-8
  7631  014BD6  006F FF8F FFDF     	movff	plusw1,indf2
  7632                           
  7633                           ;stkvar	_c @ sp[(-4)+-4]
  7634                           ;stkvar	_n @ sp[(-4)+-6]
  7635                           ;stkvar	_s @ sp[(-4)+0]
  7636  014BDC  0EFC               	movlw	-4
  7637  014BDE  006F FF8C  F03C    	movff	plusw1,btemp+10
  7638  014BE4  0EFD               	movlw	-3
  7639  014BE6  006F FF8C  F03D    	movff	plusw1,btemp+11
  7640  014BEC  0EF6               	movlw	-10
  7641  014BEE  50E3               	movf	plusw1,w,c
  7642  014BF0  263C               	addwf	(btemp+10)^0,f,c
  7643  014BF2  0EF7               	movlw	-9
  7644  014BF4  50E3               	movf	plusw1,w,c
  7645  014BF6  223D               	addwfc	(btemp+11)^0,f,c
  7646  014BF8  0EFF               	movlw	255
  7647  014BFA  243C               	addwf	(btemp+10)^0,w,c
  7648  014BFC  6ED9               	movwf	fsr2l,c
  7649  014BFE  0EFF               	movlw	255
  7650  014C00  203D               	addwfc	(btemp+11)^0,w,c
  7651  014C02  6EDA               	movwf	fsr2h,c
  7652  014C04  0EF8               	movlw	-8
  7653  014C06  006F FF8F FFDF     	movff	plusw1,indf2
  7654                           
  7655                           ;stkvar	_n @ sp[(-4)+-6]
  7656  014C0C  0EF7               	movlw	-9
  7657  014C0E  50E3               	movf	plusw1,w,c
  7658  014C10  E108               	bnz	l10491
  7659  014C12  0EF6               	movlw	-10
  7660  014C14  006F FF8C  F032    	movff	plusw1,btemp
  7661  014C1A  0E03               	movlw	3
  7662  014C1C  5E32               	subwf	btemp^0,f,c
  7663  014C1E  A0D8               	btfss	status,0,c
  7664  014C20  D125               	goto	u10480
  7665  014C22                     l10491:
  7666                           
  7667                           ;stkvar	_c @ sp[(-4)+-4]
  7668                           ;stkvar	_s @ sp[(-4)+0]
  7669  014C22  0EFC               	movlw	-4
  7670  014C24  006F FF8C  F03C    	movff	plusw1,btemp+10
  7671  014C2A  0EFD               	movlw	-3
  7672  014C2C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7673  014C32  0E01               	movlw	1
  7674  014C34  243C               	addwf	(btemp+10)^0,w,c
  7675  014C36  6ED9               	movwf	fsr2l,c
  7676  014C38  0E00               	movlw	0
  7677  014C3A  203D               	addwfc	(btemp+11)^0,w,c
  7678  014C3C  6EDA               	movwf	fsr2h,c
  7679  014C3E  0EF8               	movlw	-8
  7680  014C40  006F FF8F FFDF     	movff	plusw1,indf2
  7681                           
  7682                           ;stkvar	_c @ sp[(-4)+-4]
  7683                           ;stkvar	_s @ sp[(-4)+0]
  7684  014C46  0EFC               	movlw	-4
  7685  014C48  006F FF8C  F03C    	movff	plusw1,btemp+10
  7686  014C4E  0EFD               	movlw	-3
  7687  014C50  006F FF8C  F03D    	movff	plusw1,btemp+11
  7688  014C56  0E02               	movlw	2
  7689  014C58  243C               	addwf	(btemp+10)^0,w,c
  7690  014C5A  6ED9               	movwf	fsr2l,c
  7691  014C5C  0E00               	movlw	0
  7692  014C5E  203D               	addwfc	(btemp+11)^0,w,c
  7693  014C60  6EDA               	movwf	fsr2h,c
  7694  014C62  0EF8               	movlw	-8
  7695  014C64  006F FF8F FFDF     	movff	plusw1,indf2
  7696                           
  7697                           ;stkvar	_c @ sp[(-4)+-4]
  7698                           ;stkvar	_n @ sp[(-4)+-6]
  7699                           ;stkvar	_s @ sp[(-4)+0]
  7700  014C6A  0EFC               	movlw	-4
  7701  014C6C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7702  014C72  0EFD               	movlw	-3
  7703  014C74  006F FF8C  F03D    	movff	plusw1,btemp+11
  7704  014C7A  0EF6               	movlw	-10
  7705  014C7C  50E3               	movf	plusw1,w,c
  7706  014C7E  263C               	addwf	(btemp+10)^0,f,c
  7707  014C80  0EF7               	movlw	-9
  7708  014C82  50E3               	movf	plusw1,w,c
  7709  014C84  223D               	addwfc	(btemp+11)^0,f,c
  7710  014C86  0EFE               	movlw	254
  7711  014C88  243C               	addwf	(btemp+10)^0,w,c
  7712  014C8A  6ED9               	movwf	fsr2l,c
  7713  014C8C  0EFF               	movlw	255
  7714  014C8E  203D               	addwfc	(btemp+11)^0,w,c
  7715  014C90  6EDA               	movwf	fsr2h,c
  7716  014C92  0EF8               	movlw	-8
  7717  014C94  006F FF8F FFDF     	movff	plusw1,indf2
  7718                           
  7719                           ;stkvar	_c @ sp[(-4)+-4]
  7720                           ;stkvar	_n @ sp[(-4)+-6]
  7721                           ;stkvar	_s @ sp[(-4)+0]
  7722  014C9A  0EFC               	movlw	-4
  7723  014C9C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7724  014CA2  0EFD               	movlw	-3
  7725  014CA4  006F FF8C  F03D    	movff	plusw1,btemp+11
  7726  014CAA  0EF6               	movlw	-10
  7727  014CAC  50E3               	movf	plusw1,w,c
  7728  014CAE  263C               	addwf	(btemp+10)^0,f,c
  7729  014CB0  0EF7               	movlw	-9
  7730  014CB2  50E3               	movf	plusw1,w,c
  7731  014CB4  223D               	addwfc	(btemp+11)^0,f,c
  7732  014CB6  0EFD               	movlw	253
  7733  014CB8  243C               	addwf	(btemp+10)^0,w,c
  7734  014CBA  6ED9               	movwf	fsr2l,c
  7735  014CBC  0EFF               	movlw	255
  7736  014CBE  203D               	addwfc	(btemp+11)^0,w,c
  7737  014CC0  6EDA               	movwf	fsr2h,c
  7738  014CC2  0EF8               	movlw	-8
  7739  014CC4  006F FF8F FFDF     	movff	plusw1,indf2
  7740                           
  7741                           ;stkvar	_n @ sp[(-4)+-6]
  7742  014CCA  0EF7               	movlw	-9
  7743  014CCC  50E3               	movf	plusw1,w,c
  7744  014CCE  E108               	bnz	l10497
  7745  014CD0  0EF6               	movlw	-10
  7746  014CD2  006F FF8C  F032    	movff	plusw1,btemp
  7747  014CD8  0E07               	movlw	7
  7748  014CDA  5E32               	subwf	btemp^0,f,c
  7749  014CDC  A0D8               	btfss	status,0,c
  7750  014CDE  D0C6               	goto	u10480
  7751  014CE0                     l10497:
  7752                           
  7753                           ;stkvar	_c @ sp[(-4)+-4]
  7754                           ;stkvar	_s @ sp[(-4)+0]
  7755  014CE0  0EFC               	movlw	-4
  7756  014CE2  006F FF8C  F03C    	movff	plusw1,btemp+10
  7757  014CE8  0EFD               	movlw	-3
  7758  014CEA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7759  014CF0  0E03               	movlw	3
  7760  014CF2  243C               	addwf	(btemp+10)^0,w,c
  7761  014CF4  6ED9               	movwf	fsr2l,c
  7762  014CF6  0E00               	movlw	0
  7763  014CF8  203D               	addwfc	(btemp+11)^0,w,c
  7764  014CFA  6EDA               	movwf	fsr2h,c
  7765  014CFC  0EF8               	movlw	-8
  7766  014CFE  006F FF8F FFDF     	movff	plusw1,indf2
  7767                           
  7768                           ;stkvar	_c @ sp[(-4)+-4]
  7769                           ;stkvar	_n @ sp[(-4)+-6]
  7770                           ;stkvar	_s @ sp[(-4)+0]
  7771  014D04  0EFC               	movlw	-4
  7772  014D06  006F FF8C  F03C    	movff	plusw1,btemp+10
  7773  014D0C  0EFD               	movlw	-3
  7774  014D0E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7775  014D14  0EF6               	movlw	-10
  7776  014D16  50E3               	movf	plusw1,w,c
  7777  014D18  263C               	addwf	(btemp+10)^0,f,c
  7778  014D1A  0EF7               	movlw	-9
  7779  014D1C  50E3               	movf	plusw1,w,c
  7780  014D1E  223D               	addwfc	(btemp+11)^0,f,c
  7781  014D20  0EFC               	movlw	252
  7782  014D22  243C               	addwf	(btemp+10)^0,w,c
  7783  014D24  6ED9               	movwf	fsr2l,c
  7784  014D26  0EFF               	movlw	255
  7785  014D28  203D               	addwfc	(btemp+11)^0,w,c
  7786  014D2A  6EDA               	movwf	fsr2h,c
  7787  014D2C  0EF8               	movlw	-8
  7788  014D2E  006F FF8F FFDF     	movff	plusw1,indf2
  7789                           
  7790                           ;stkvar	_n @ sp[(-4)+-6]
  7791  014D34  0EF7               	movlw	-9
  7792  014D36  50E3               	movf	plusw1,w,c
  7793  014D38  E108               	bnz	l10503
  7794  014D3A  0EF6               	movlw	-10
  7795  014D3C  006F FF8C  F032    	movff	plusw1,btemp
  7796  014D42  0E09               	movlw	9
  7797  014D44  5E32               	subwf	btemp^0,f,c
  7798  014D46  A0D8               	btfss	status,0,c
  7799  014D48  D091               	goto	u10480
  7800  014D4A                     l10503:
  7801                           
  7802                           ;stkvar	_s @ sp[(-4)+0]
  7803  014D4A  0EFC               	movlw	-4
  7804  014D4C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7805  014D52  1E3C               	comf	(btemp+10)^0,f,c
  7806  014D54  0EFD               	movlw	-3
  7807  014D56  006F FF8C  F03D    	movff	plusw1,btemp+11
  7808  014D5C  1E3D               	comf	(btemp+11)^0,f,c
  7809  014D5E  2A3C               	incf	(btemp+10)^0,f,c
  7810  014D60  B4D8               	btfsc	status,2,c
  7811  014D62  2A3D               	incf	(btemp+11)^0,f,c
  7812  014D64  0E03               	movlw	3
  7813  014D66  163C               	andwf	(btemp+10)^0,f,c
  7814  014D68  0E00               	movlw	0
  7815  014D6A  163D               	andwf	(btemp+11)^0,f,c
  7816                           
  7817                           ;stkvar	_k @ sp[(-4)+2]
  7818  014D6C  0EFE               	movlw	-2
  7819  014D6E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7820  014D74  0EFF               	movlw	-1
  7821  014D76  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7822                           
  7823                           ;stkvar	_k @ sp[(-4)+2]
  7824                           ;stkvar	_s @ sp[(-4)+0]
  7825  014D7C  0EFC               	movlw	-4
  7826  014D7E  50E3               	movf	plusw1,w,c
  7827  014D80  6E32               	movwf	btemp^0,c
  7828  014D82  0EFE               	movlw	-2
  7829  014D84  50E3               	movf	plusw1,w,c
  7830  014D86  2632               	addwf	btemp^0,f,c
  7831  014D88  0EFC               	movlw	-4
  7832  014D8A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7833  014D90  0EFD               	movlw	-3
  7834  014D92  50E3               	movf	plusw1,w,c
  7835  014D94  6E32               	movwf	btemp^0,c
  7836  014D96  0EFF               	movlw	-1
  7837  014D98  50E3               	movf	plusw1,w,c
  7838  014D9A  2232               	addwfc	btemp^0,f,c
  7839  014D9C  0EFD               	movlw	-3
  7840  014D9E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7841                           
  7842                           ;stkvar	_k @ sp[(-4)+2]
  7843                           ;stkvar	_n @ sp[(-4)+-6]
  7844  014DA4  0EF6               	movlw	-10
  7845  014DA6  50E3               	movf	plusw1,w,c
  7846  014DA8  6E32               	movwf	btemp^0,c
  7847  014DAA  0EFE               	movlw	-2
  7848  014DAC  50E3               	movf	plusw1,w,c
  7849  014DAE  5E32               	subwf	btemp^0,f,c
  7850  014DB0  0EF6               	movlw	-10
  7851  014DB2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7852  014DB8  0EF7               	movlw	-9
  7853  014DBA  50E3               	movf	plusw1,w,c
  7854  014DBC  6E32               	movwf	btemp^0,c
  7855  014DBE  0EFF               	movlw	-1
  7856  014DC0  50E3               	movf	plusw1,w,c
  7857  014DC2  5A32               	subwfb	btemp^0,f,c
  7858  014DC4  0EF7               	movlw	-9
  7859  014DC6  0060  F0CB  FFE3   	movff	btemp,plusw1
  7860  014DCC  0EFC               	movlw	252
  7861  014DCE  6E3C               	movwf	(btemp+10)^0,c
  7862  014DD0  0EFF               	movlw	255
  7863  014DD2  6E3D               	movwf	(btemp+11)^0,c
  7864                           
  7865                           ;stkvar	_n @ sp[(-4)+-6]
  7866  014DD4  0EF6               	movlw	-10
  7867  014DD6  006F FF8C  F032    	movff	plusw1,btemp
  7868  014DDC  503C               	movf	(btemp+10)^0,w,c
  7869  014DDE  1632               	andwf	btemp^0,f,c
  7870  014DE0  0EF6               	movlw	-10
  7871  014DE2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7872  014DE8  0EF7               	movlw	-9
  7873  014DEA  006F FF8C  F032    	movff	plusw1,btemp
  7874  014DF0  503D               	movf	(btemp+11)^0,w,c
  7875  014DF2  1632               	andwf	btemp^0,f,c
  7876  014DF4  0EF7               	movlw	-9
  7877  014DF6  D02E               	goto	L6
  7878  014DF8                     l10511:
  7879                           
  7880                           ;stkvar	_c @ sp[(-4)+-4]
  7881                           ;stkvar	_s @ sp[(-4)+0]
  7882  014DF8  0EFC               	movlw	-4
  7883  014DFA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7884  014E00  0EFD               	movlw	-3
  7885  014E02  006F FF8F FFDA     	movff	plusw1,fsr2h
  7886  014E08  0EF8               	movlw	-8
  7887  014E0A  006F FF8F FFDF     	movff	plusw1,indf2
  7888                           
  7889                           ;stkvar	_n @ sp[(-4)+-6]
  7890  014E10  0EF6               	movlw	-10
  7891  014E12  006F FF8C  F032    	movff	plusw1,btemp
  7892  014E18  0E01               	movlw	1
  7893  014E1A  5E32               	subwf	btemp^0,f,c
  7894  014E1C  0EF6               	movlw	-10
  7895  014E1E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7896  014E24  0EF7               	movlw	-9
  7897  014E26  006F FF8C  F032    	movff	plusw1,btemp
  7898  014E2C  0E00               	movlw	0
  7899  014E2E  5A32               	subwfb	btemp^0,f,c
  7900  014E30  0EF7               	movlw	-9
  7901  014E32  0060  F0CB  FFE3   	movff	btemp,plusw1
  7902                           
  7903                           ;stkvar	_s @ sp[(-4)+0]
  7904  014E38  0EFC               	movlw	-4
  7905  014E3A  50E3               	movf	plusw1,w,c
  7906  014E3C  0F01               	addlw	1
  7907  014E3E  6E32               	movwf	btemp^0,c
  7908  014E40  0EFC               	movlw	-4
  7909  014E42  0060  F0CB  FFE3   	movff	btemp,plusw1
  7910  014E48  6A32               	clrf	btemp^0,c
  7911  014E4A  0EFD               	movlw	-3
  7912  014E4C  50E3               	movf	plusw1,w,c
  7913  014E4E  2032               	addwfc	btemp^0,w,c
  7914  014E50  6E32               	movwf	btemp^0,c
  7915  014E52  0EFD               	movlw	-3
  7916  014E54                     L6:
  7917  014E54  0060  F0CB  FFE3   	movff	btemp,plusw1
  7918                           
  7919                           ;stkvar	_n @ sp[(-4)+-6]
  7920  014E5A  0EF6               	movlw	-10
  7921  014E5C  006F FF8C  F032    	movff	plusw1,btemp
  7922  014E62  0EF7               	movlw	-9
  7923  014E64  50E3               	movf	plusw1,w,c
  7924  014E66  1032               	iorwf	btemp^0,w,c
  7925  014E68  A4D8               	btfss	status,2,c
  7926  014E6A  D7C6               	goto	l10511
  7927  014E6C                     u10480:
  7928                           
  7929                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7930  014E6C  0EF6               	movlw	246
  7931  014E6E  26E1               	addwf	fsr1l,f,c
  7932  014E70  0EFF               	movlw	255
  7933  014E72  22E2               	addwfc	fsr1h,f,c
  7934  014E74  0012               	return		;funcret
  7935  014E76                     __end_of_memset:
  7936                           	opt callstack 0
  7937                           
  7938 ;; *************** function _printf *****************
  7939 ;; Defined at:
  7940 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  fmt             2  [STACK] PTR const unsigned char 
  7943 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  ap              2  [STACK] PTR void [1]
  7946 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7947 ;;  ret             2    0        int 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  2  [STACK] int 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7952 ;; Tracked objects:
  7953 ;;		On entry : 3F/3B
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;Total ram usage:        0 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:   14
  7964 ;; This function calls:
  7965 ;;		_vfprintf
  7966 ;; This function is called by:
  7967 ;;		_eaDogM_WriteString
  7968 ;;		_send_lcd_cmd_dma
  7969 ;; This function uses a reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text37
  7973  018014                     __ptext37:
  7974                           	opt callstack 0
  7975  018014                     _printf:
  7976                           	opt callstack 0
  7977                           
  7978                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7979  018014  52E6               	movf	postinc1,f,c
  7980  018016  52E6               	movf	postinc1,f,c
  7981                           
  7982                           ;stkvar	?_printf @ sp[(-2)+-3]
  7983                           
  7984                           ;incstack = 0
  7985  018018  0EFB               	movlw	251
  7986  01801A  24E1               	addwf	fsr1l,w,c
  7987  01801C  6E3C               	movwf	(btemp+10)^0,c
  7988  01801E  0EFF               	movlw	255
  7989  018020  20E2               	addwfc	fsr1h,w,c
  7990  018022  6E3D               	movwf	(btemp+11)^0,c
  7991                           
  7992                           ;stkvar	_ap @ sp[(-2)+0]
  7993  018024  0EFF               	movlw	-1
  7994  018026  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7995  01802C  0EFE               	movlw	-2
  7996  01802E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7997                           
  7998                           ;stkvar	_ap @ sp[(-2)+0]
  7999  018034  0EFE               	movlw	254
  8000  018036  24E1               	addwf	fsr1l,w,c
  8001  018038  6E32               	movwf	btemp^0,c
  8002  01803A  0EFF               	movlw	255
  8003  01803C  20E2               	addwfc	fsr1h,w,c
  8004  01803E  6E33               	movwf	(btemp+1)^0,c
  8005  018040  0060  F0CB  FFE6   	movff	btemp,postinc1
  8006  018046  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8007                           
  8008                           ;stkvar	_fmt @ sp[(-4)+-3]
  8009  01804C  0EF9               	movlw	-7
  8010  01804E  006F FF8F FFE6     	movff	plusw1,postinc1
  8011  018054  006F FF8F FFE6     	movff	plusw1,postinc1
  8012  01805A  0E00               	movlw	0
  8013  01805C  6EE6               	movwf	postinc1,c
  8014  01805E  0E00               	movlw	0
  8015  018060  6EE6               	movwf	postinc1,c
  8016  018062  EC7F  F0BB         	call	_vfprintf	;wreg free
  8017                           
  8018                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8019  018066  52E5               	movf	postdec1,f,c
  8020  018068  52E5               	movf	postdec1,f,c
  8021  01806A  52E5               	movf	postdec1,f,c
  8022  01806C  50E7               	movf	indf1,w,c
  8023  01806E  5EE1               	subwf	fsr1l,f,c
  8024  018070  0E00               	movlw	0
  8025  018072  5AE2               	subwfb	fsr1h,f,c
  8026  018074  0012               	return		;funcret
  8027  018076                     __end_of_printf:
  8028                           	opt callstack 0
  8029                           
  8030 ;; *************** function _vfprintf *****************
  8031 ;; Defined at:
  8032 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8035 ;;		 -> f(6), NULL(0), 
  8036 ;;  fmt             2  [STACK] PTR const unsigned char 
  8037 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8038 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8039 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8040 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8041 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8042 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8043 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8044 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8045 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8046 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8047 ;;  ap              2  [STACK] PTR PTR void 
  8048 ;;		 -> ap(2), ap(2), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  cfmt            2  [STACK] PTR unsigned char 
  8051 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8052 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8053 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8054 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8055 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8056 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8057 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8058 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8059 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8060 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  2  [STACK] int 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/5
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   13
  8077 ;; This function calls:
  8078 ;;		_vfpfcnvrt
  8079 ;; This function is called by:
  8080 ;;		_sprintf
  8081 ;;		_printf
  8082 ;; This function uses a reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text38
  8086  0176FE                     __ptext38:
  8087                           	opt callstack 0
  8088  0176FE                     _vfprintf:
  8089                           	opt callstack 0
  8090                           
  8091                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8092  0176FE  52E6               	movf	postinc1,f,c
  8093  017700  52E6               	movf	postinc1,f,c
  8094                           
  8095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8096                           ;stkvar	_fmt @ sp[(-2)+-4]
  8097                           
  8098                           ;incstack = 0
  8099  017702  0EFA               	movlw	-6
  8100  017704  006F FF8C  F03C    	movff	plusw1,btemp+10
  8101  01770A  0EFB               	movlw	-5
  8102  01770C  006F FF8C  F03D    	movff	plusw1,btemp+11
  8103                           
  8104                           ;stkvar	_cfmt @ sp[(-2)+0]
  8105  017712  0EFF               	movlw	-1
  8106  017714  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8107  01771A  0EFE               	movlw	-2
  8108  01771C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8109                           
  8110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8111  017722  6A19               	clrf	_nout^0,c
  8112  017724  6A1A               	clrf	(_nout+1)^0,c
  8113                           
  8114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8115  017726  D020               	goto	l10525
  8116  017728                     l10523:
  8117                           
  8118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8119                           ;stkvar	_ap @ sp[(-2)+-6]
  8120  017728  0EF8               	movlw	-8
  8121  01772A  006F FF8F FFE6     	movff	plusw1,postinc1
  8122  017730  006F FF8F FFE6     	movff	plusw1,postinc1
  8123                           
  8124                           ;stkvar	_cfmt @ sp[(-4)+0]
  8125  017736  0EFC               	movlw	252
  8126  017738  24E1               	addwf	fsr1l,w,c
  8127  01773A  6E32               	movwf	btemp^0,c
  8128  01773C  0EFF               	movlw	255
  8129  01773E  20E2               	addwfc	fsr1h,w,c
  8130  017740  6E33               	movwf	(btemp+1)^0,c
  8131  017742  0060  F0CB  FFE6   	movff	btemp,postinc1
  8132  017748  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8133                           
  8134                           ;stkvar	_fp @ sp[(-6)+-2]
  8135  01774E  0EF8               	movlw	-8
  8136  017750  006F FF8F FFE6     	movff	plusw1,postinc1
  8137  017756  006F FF8F FFE6     	movff	plusw1,postinc1
  8138  01775C  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8139  017760  5032               	movf	btemp^0,w,c
  8140  017762  2619               	addwf	_nout^0,f,c
  8141  017764  5033               	movf	(btemp+1)^0,w,c
  8142  017766  221A               	addwfc	(_nout+1)^0,f,c
  8143  017768                     l10525:
  8144                           
  8145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8146                           ;stkvar	_cfmt @ sp[(-2)+0]
  8147  017768  50E1               	movf	fsr1l,w,c
  8148  01776A  0FFE               	addlw	-2
  8149  01776C  6ED9               	movwf	fsr2l,c
  8150  01776E  50E2               	movf	fsr1h,w,c
  8151  017770  6EDA               	movwf	fsr2h,c
  8152  017772  0EFF               	movlw	255
  8153  017774  22DA               	addwfc	fsr2h,f,c
  8154  017776  006F FF7B FFF6     	movff	postinc2,tblptrl
  8155  01777C  006F FF77 FFF7     	movff	postdec2,tblptrh
  8156  017782                     	if	0	;tblptru may be non-zero
  8157  017782                     	endif
  8158  017782                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8159  017782  0E00               	movlw	low (__mediumconst shr (0+16))
  8160  017784  6EF8               	movwf	tblptru,c
  8161  017786                     	endif
  8162  017786  0008               	tblrd		*
  8163  017788  50F5               	movf	tablat,w,c
  8164  01778A  0900               	iorlw	0
  8165  01778C  A4D8               	btfss	status,2,c
  8166  01778E  D7CC               	goto	l10523
  8167                           
  8168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8169  017790  0060  F064  F032   	movff	_nout,btemp
  8170  017796  0060  F068  F033   	movff	_nout+1,btemp+1
  8171                           
  8172                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8173  01779C  0EF8               	movlw	248
  8174  01779E  26E1               	addwf	fsr1l,f,c
  8175  0177A0  0EFF               	movlw	255
  8176  0177A2  22E2               	addwfc	fsr1h,f,c
  8177  0177A4  0012               	return		;funcret
  8178  0177A6                     __end_of_vfprintf:
  8179                           	opt callstack 0
  8180                           
  8181 ;; *************** function _vfpfcnvrt *****************
  8182 ;; Defined at:
  8183 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8186 ;;		 -> f(6), NULL(0), 
  8187 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8188 ;;		 -> cfmt(2), 
  8189 ;;  ap              2  [STACK] PTR PTR void 
  8190 ;;		 -> ap(2), ap(2), 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  llu             8  [STACK] unsigned long long 
  8193 ;;  ll              8  [STACK] long long 
  8194 ;;  f               4  [STACK] long long 
  8195 ;;  ct              3  [STACK] unsigned char [3]
  8196 ;;  vp              3    0        PTR void 
  8197 ;;  cp              2  [STACK] PTR unsigned char 
  8198 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8199 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  8200 ;;		 -> STR_3(6), V(188), 
  8201 ;;  i               2    0        int 
  8202 ;;  done            2    0        int 
  8203 ;;  c               1  [STACK] unsigned char 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  2  [STACK] int 
  8206 ;; Registers used:
  8207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/5
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8217 ;;Total ram usage:        0 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:   12
  8220 ;; This function calls:
  8221 ;;		_atoi
  8222 ;;		_ctoa
  8223 ;;		_dtoa
  8224 ;;		_efgtoa
  8225 ;;		_fputc
  8226 ;;		_isdigit
  8227 ;;		_isupper
  8228 ;;		_stoa
  8229 ;;		_strncmp
  8230 ;;		_tolower
  8231 ;;		_xtoa
  8232 ;; This function is called by:
  8233 ;;		_vfprintf
  8234 ;; This function uses a reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text39
  8238  011244                     __ptext39:
  8239                           	opt callstack 0
  8240  011244                     _vfpfcnvrt:
  8241                           	opt callstack 0
  8242                           
  8243                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8244  011244  0E20               	movlw	32
  8245  011246  26E1               	addwf	fsr1l,f,c
  8246  011248  0E00               	movlw	0
  8247  01124A  22E2               	addwfc	fsr1h,f,c
  8248                           
  8249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8250                           ;stkvar	_fmt @ sp[(-32)+-4]
  8251                           
  8252                           ;incstack = 0
  8253  01124C  0EDC               	movlw	-36
  8254  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8255  011254  0EDD               	movlw	-35
  8256  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8257  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8258  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8259  011268                     	if	0	;tblptru may be non-zero
  8260  011268                     	endif
  8261  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8262  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8263  01126A  6EF8               	movwf	tblptru,c
  8264  01126C                     	endif
  8265  01126C  0008               	tblrd		*
  8266  01126E  50F5               	movf	tablat,w,c
  8267  011270  0A25               	xorlw	37
  8268  011272  A4D8               	btfss	status,2,c
  8269  011274  EF92  F08E         	goto	l10469
  8270                           
  8271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8272                           ;stkvar	_fmt @ sp[(-32)+-4]
  8273  011278  0EDC               	movlw	-36
  8274  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8275  011280  0EDD               	movlw	-35
  8276  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8277  011288  2ADE               	incf	postinc2,f,c
  8278  01128A  0E00               	movlw	0
  8279  01128C  22DD               	addwfc	postdec2,f,c
  8280                           
  8281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8282  01128E  6A1B               	clrf	_width^0,c
  8283  011290  6A1C               	clrf	(_width+1)^0,c
  8284  011292  6A1F               	clrf	_flags^0,c
  8285  011294  6A20               	clrf	(_flags+1)^0,c
  8286                           
  8287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8288  011296  681D               	setf	_prec^0,c
  8289  011298  681E               	setf	(_prec+1)^0,c
  8290                           
  8291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8292                           ;stkvar	_fmt @ sp[(-32)+-4]
  8293  01129A  0EDC               	movlw	-36
  8294  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8295  0112A2  0EDD               	movlw	-35
  8296  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8297  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8298  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8299  0112B6                     	if	0	;tblptru may be non-zero
  8300  0112B6                     	endif
  8301  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8302  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8303  0112B8  6EF8               	movwf	tblptru,c
  8304  0112BA                     	endif
  8305  0112BA  0008               	tblrd		*
  8306  0112BC  50F5               	movf	tablat,w,c
  8307  0112BE  0A2A               	xorlw	42
  8308  0112C0  A4D8               	btfss	status,2,c
  8309  0112C2  D031               	goto	l10333
  8310                           
  8311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8312                           ;stkvar	_fmt @ sp[(-32)+-4]
  8313  0112C4  0EDC               	movlw	-36
  8314  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8315  0112CC  0EDD               	movlw	-35
  8316  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8317  0112D4  2ADE               	incf	postinc2,f,c
  8318  0112D6  0E00               	movlw	0
  8319  0112D8  22DD               	addwfc	postdec2,f,c
  8320                           
  8321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8322                           ;stkvar	_ap @ sp[(-32)+-6]
  8323  0112DA  0EDA               	movlw	-38
  8324  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8325  0112E2  0EDB               	movlw	-37
  8326  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8327  0112EA  0E02               	movlw	2
  8328  0112EC  5EDE               	subwf	postinc2,f,c
  8329  0112EE  0E00               	movlw	0
  8330  0112F0  5ADD               	subwfb	postdec2,f,c
  8331  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  8332  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  8333  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8334  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8335  01130A  006F FF78  F01B    	movff	postinc2,_width
  8336  011310  006F FF74  F01C    	movff	postdec2,_width+1
  8337                           
  8338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8339  011316  AE1C               	btfss	(_width+1)^0,7,c
  8340  011318  D066               	goto	u10240
  8341                           
  8342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8343  01131A  801F               	bsf	_flags^0,0,c
  8344                           
  8345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8346  01131C  6C1B               	negf	_width^0,c
  8347  01131E  1E1C               	comf	(_width+1)^0,f,c
  8348  011320  B0D8               	btfsc	status,0,c
  8349  011322  2A1C               	incf	(_width+1)^0,f,c
  8350  011324  D060               	goto	u10240
  8351  011326                     l10333:
  8352                           
  8353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8354                           ;stkvar	_fmt @ sp[(-32)+-4]
  8355  011326  0EDC               	movlw	-36
  8356  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8357  01132E  0EDD               	movlw	-35
  8358  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8359  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  8360  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  8361  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8362  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8363  01134E  EC40  F0AB         	call	_atoi	;wreg free
  8364  011352  0060  F0C8  F01B   	movff	btemp,_width
  8365  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  8366                           
  8367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8368  01135E  D00B               	goto	l10337
  8369  011360                     l10335:
  8370                           
  8371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8372                           ;stkvar	_fmt @ sp[(-32)+-4]
  8373  011360  0EDC               	movlw	-36
  8374  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8375  011368  0EDD               	movlw	-35
  8376  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8377  011370  2ADE               	incf	postinc2,f,c
  8378  011372  0E00               	movlw	0
  8379  011374  22DD               	addwfc	postdec2,f,c
  8380  011376                     l10337:
  8381  011376  0ED0               	movlw	208
  8382  011378  6E3C               	movwf	(btemp+10)^0,c
  8383  01137A  0EFF               	movlw	255
  8384  01137C  6E3D               	movwf	(btemp+11)^0,c
  8385                           
  8386                           ;stkvar	_fmt @ sp[(-32)+-4]
  8387  01137E  0EDC               	movlw	-36
  8388  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8389  011386  0EDD               	movlw	-35
  8390  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8391  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8392  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8393  01139A                     	if	0	;tblptru may be non-zero
  8394  01139A                     	endif
  8395  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8396  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8397  01139C  6EF8               	movwf	tblptru,c
  8398  01139E                     	endif
  8399  01139E  0008               	tblrd		*
  8400  0113A0  50F5               	movf	tablat,w,c
  8401  0113A2  6E3A               	movwf	(btemp+8)^0,c
  8402  0113A4  6A3B               	clrf	(btemp+9)^0,c
  8403  0113A6  503C               	movf	(btemp+10)^0,w,c
  8404  0113A8  263A               	addwf	(btemp+8)^0,f,c
  8405  0113AA  503D               	movf	(btemp+11)^0,w,c
  8406  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  8407  0113AE  503B               	movf	(btemp+9)^0,w,c
  8408  0113B0  E106               	bnz	u10220
  8409  0113B2  0E0A               	movlw	10
  8410  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  8411  0113B6  B0D8               	btfsc	status,0,c
  8412  0113B8  D002               	goto	u10220
  8413  0113BA  0E01               	movlw	1
  8414  0113BC  D001               	goto	u10230
  8415  0113BE                     u10220:
  8416  0113BE  0E00               	movlw	0
  8417  0113C0                     u10230:
  8418  0113C0  6E3C               	movwf	(btemp+10)^0,c
  8419  0113C2  6A3D               	clrf	(btemp+11)^0,c
  8420                           
  8421                           ;stkvar	_vfpfcnvrt$4662 @ sp[(-32)+4]
  8422  0113C4  0EE4               	movlw	-28
  8423  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8424  0113CC  0EE5               	movlw	-27
  8425  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8426                           
  8427                           ;stkvar	_vfpfcnvrt$4662 @ sp[(-32)+4]
  8428  0113D4  0EE4               	movlw	-28
  8429  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  8430  0113DC  0EE5               	movlw	-27
  8431  0113DE  50E3               	movf	plusw1,w,c
  8432  0113E0  1032               	iorwf	btemp^0,w,c
  8433  0113E2  A4D8               	btfss	status,2,c
  8434  0113E4  D7BD               	goto	l10335
  8435  0113E6                     u10240:
  8436                           
  8437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8438                           ;stkvar	_fmt @ sp[(-32)+-4]
  8439  0113E6  0EDC               	movlw	-36
  8440  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8441  0113EE  0EDD               	movlw	-35
  8442  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8443  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8444  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8445  011402                     	if	0	;tblptru may be non-zero
  8446  011402                     	endif
  8447  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8448  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8449  011404  6EF8               	movwf	tblptru,c
  8450  011406                     	endif
  8451  011406  0008               	tblrd		*
  8452  011408  50F5               	movf	tablat,w,c
  8453  01140A  0A2E               	xorlw	46
  8454  01140C  A4D8               	btfss	status,2,c
  8455  01140E  D0AC               	goto	u10290
  8456                           
  8457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8458  011410  6A1D               	clrf	_prec^0,c
  8459  011412  6A1E               	clrf	(_prec+1)^0,c
  8460                           
  8461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8462                           ;stkvar	_fmt @ sp[(-32)+-4]
  8463  011414  0EDC               	movlw	-36
  8464  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8465  01141C  0EDD               	movlw	-35
  8466  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8467  011424  2ADE               	incf	postinc2,f,c
  8468  011426  0E00               	movlw	0
  8469  011428  22DD               	addwfc	postdec2,f,c
  8470                           
  8471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8472                           ;stkvar	_fmt @ sp[(-32)+-4]
  8473  01142A  0EDC               	movlw	-36
  8474  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8475  011432  0EDD               	movlw	-35
  8476  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8477  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8478  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8479  011446                     	if	0	;tblptru may be non-zero
  8480  011446                     	endif
  8481  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8482  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8483  011448  6EF8               	movwf	tblptru,c
  8484  01144A                     	endif
  8485  01144A  0008               	tblrd		*
  8486  01144C  50F5               	movf	tablat,w,c
  8487  01144E  0A2A               	xorlw	42
  8488  011450  A4D8               	btfss	status,2,c
  8489  011452  D02A               	goto	l10355
  8490                           
  8491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8492                           ;stkvar	_fmt @ sp[(-32)+-4]
  8493  011454  0EDC               	movlw	-36
  8494  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8495  01145C  0EDD               	movlw	-35
  8496  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8497  011464  2ADE               	incf	postinc2,f,c
  8498  011466  0E00               	movlw	0
  8499  011468  22DD               	addwfc	postdec2,f,c
  8500                           
  8501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8502                           ;stkvar	_ap @ sp[(-32)+-6]
  8503  01146A  0EDA               	movlw	-38
  8504  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8505  011472  0EDB               	movlw	-37
  8506  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8507  01147A  0E02               	movlw	2
  8508  01147C  5EDE               	subwf	postinc2,f,c
  8509  01147E  0E00               	movlw	0
  8510  011480  5ADD               	subwfb	postdec2,f,c
  8511  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8512  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8513  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8514  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8515  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8516  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8517                           
  8518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8519  0114A6  D060               	goto	u10290
  8520  0114A8                     l10355:
  8521                           
  8522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8523                           ;stkvar	_fmt @ sp[(-32)+-4]
  8524  0114A8  0EDC               	movlw	-36
  8525  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8526  0114B0  0EDD               	movlw	-35
  8527  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8528  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8529  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8530  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8531  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8532  0114D0  EC40  F0AB         	call	_atoi	;wreg free
  8533  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8534  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8535                           
  8536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8537  0114E0  D00B               	goto	l10359
  8538  0114E2                     l10357:
  8539                           
  8540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8541                           ;stkvar	_fmt @ sp[(-32)+-4]
  8542  0114E2  0EDC               	movlw	-36
  8543  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8544  0114EA  0EDD               	movlw	-35
  8545  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8546  0114F2  2ADE               	incf	postinc2,f,c
  8547  0114F4  0E00               	movlw	0
  8548  0114F6  22DD               	addwfc	postdec2,f,c
  8549  0114F8                     l10359:
  8550  0114F8  0ED0               	movlw	208
  8551  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8552  0114FC  0EFF               	movlw	255
  8553  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8554                           
  8555                           ;stkvar	_fmt @ sp[(-32)+-4]
  8556  011500  0EDC               	movlw	-36
  8557  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8558  011508  0EDD               	movlw	-35
  8559  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8560  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8561  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8562  01151C                     	if	0	;tblptru may be non-zero
  8563  01151C                     	endif
  8564  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8565  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8566  01151E  6EF8               	movwf	tblptru,c
  8567  011520                     	endif
  8568  011520  0008               	tblrd		*
  8569  011522  50F5               	movf	tablat,w,c
  8570  011524  6E3A               	movwf	(btemp+8)^0,c
  8571  011526  6A3B               	clrf	(btemp+9)^0,c
  8572  011528  503C               	movf	(btemp+10)^0,w,c
  8573  01152A  263A               	addwf	(btemp+8)^0,f,c
  8574  01152C  503D               	movf	(btemp+11)^0,w,c
  8575  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8576  011530  503B               	movf	(btemp+9)^0,w,c
  8577  011532  E106               	bnz	u10270
  8578  011534  0E0A               	movlw	10
  8579  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8580  011538  B0D8               	btfsc	status,0,c
  8581  01153A  D002               	goto	u10270
  8582  01153C  0E01               	movlw	1
  8583  01153E  D001               	goto	u10280
  8584  011540                     u10270:
  8585  011540  0E00               	movlw	0
  8586  011542                     u10280:
  8587  011542  6E3C               	movwf	(btemp+10)^0,c
  8588  011544  6A3D               	clrf	(btemp+11)^0,c
  8589                           
  8590                           ;stkvar	_vfpfcnvrt$4663 @ sp[(-32)+0]
  8591  011546  0EE0               	movlw	-32
  8592  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8593  01154E  0EE1               	movlw	-31
  8594  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8595                           
  8596                           ;stkvar	_vfpfcnvrt$4663 @ sp[(-32)+0]
  8597  011556  0EE0               	movlw	-32
  8598  011558  006F FF8C  F032    	movff	plusw1,btemp
  8599  01155E  0EE1               	movlw	-31
  8600  011560  50E3               	movf	plusw1,w,c
  8601  011562  1032               	iorwf	btemp^0,w,c
  8602  011564  A4D8               	btfss	status,2,c
  8603  011566  D7BD               	goto	l10357
  8604  011568                     u10290:
  8605                           
  8606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8607                           ;stkvar	_fmt @ sp[(-32)+-4]
  8608  011568  0EDC               	movlw	-36
  8609  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8610  011570  0EDD               	movlw	-35
  8611  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8612  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8613  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8614  011584                     	if	0	;tblptru may be non-zero
  8615  011584                     	endif
  8616  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8617  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8618  011586  6EF8               	movwf	tblptru,c
  8619  011588                     	endif
  8620  011588  0008               	tblrd		*
  8621  01158A  50F5               	movf	tablat,w,c
  8622  01158C  6EE6               	movwf	postinc1,c
  8623  01158E  0E00               	movlw	0
  8624  011590  6EE6               	movwf	postinc1,c
  8625  011592  EC23  F0BE         	call	_tolower	;wreg free
  8626                           
  8627                           ;stkvar	_ct @ sp[(-32)+26]
  8628  011596  0EFA               	movlw	-6
  8629  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8630                           
  8631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8632                           ;stkvar	_ct @ sp[(-32)+26]
  8633  01159E  0EFA               	movlw	-6
  8634  0115A0  50E3               	movf	plusw1,w,c
  8635  0115A2  B4D8               	btfsc	status,2,c
  8636  0115A4  D05B               	goto	l10375
  8637                           
  8638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8639                           ;stkvar	_ct @ sp[(-32)+26]
  8640  0115A6  0EFB               	movlw	251
  8641  0115A8  24E1               	addwf	fsr1l,w,c
  8642  0115AA  6ED9               	movwf	fsr2l,c
  8643  0115AC  0EFF               	movlw	255
  8644  0115AE  20E2               	addwfc	fsr1h,w,c
  8645  0115B0  6EDA               	movwf	fsr2h,c
  8646                           
  8647                           ;stkvar	_fmt @ sp[(-32)+-4]
  8648  0115B2  0EDC               	movlw	-36
  8649  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8650  0115BA  0EDD               	movlw	-35
  8651  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8652  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8653  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8654  0115CE  0E01               	movlw	1
  8655  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8656  0115D2  0E00               	movlw	0
  8657  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8658  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8659  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8660  0115E2                     	if	0	;tblptru may be non-zero
  8661  0115E2                     	endif
  8662  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8663  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8664  0115E4  6EF8               	movwf	tblptru,c
  8665  0115E6                     	endif
  8666  0115E6  0008               	tblrd		*
  8667  0115E8  50F5               	movf	tablat,w,c
  8668  0115EA  6EE6               	movwf	postinc1,c
  8669  0115EC  0E00               	movlw	0
  8670  0115EE  6EE6               	movwf	postinc1,c
  8671  0115F0  EC23  F0BE         	call	_tolower	;wreg free
  8672  0115F4  5032               	movf	btemp^0,w,c
  8673  0115F6  6EDF               	movwf	indf2,c
  8674                           
  8675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8676                           ;stkvar	_ct @ sp[(-32)+26]
  8677  0115F8  0EFB               	movlw	251
  8678  0115FA  24E1               	addwf	fsr1l,w,c
  8679  0115FC  6ED9               	movwf	fsr2l,c
  8680  0115FE  0EFF               	movlw	255
  8681  011600  20E2               	addwfc	fsr1h,w,c
  8682  011602  6EDA               	movwf	fsr2h,c
  8683  011604  50DF               	movf	indf2,w,c
  8684  011606  B4D8               	btfsc	status,2,c
  8685  011608  D029               	goto	l10375
  8686                           
  8687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8688                           ;stkvar	_ct @ sp[(-32)+26]
  8689  01160A  0EFC               	movlw	252
  8690  01160C  24E1               	addwf	fsr1l,w,c
  8691  01160E  6ED9               	movwf	fsr2l,c
  8692  011610  0EFF               	movlw	255
  8693  011612  20E2               	addwfc	fsr1h,w,c
  8694  011614  6EDA               	movwf	fsr2h,c
  8695                           
  8696                           ;stkvar	_fmt @ sp[(-32)+-4]
  8697  011616  0EDC               	movlw	-36
  8698  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8699  01161E  0EDD               	movlw	-35
  8700  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8701  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8702  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8703  011632  0E02               	movlw	2
  8704  011634  263C               	addwf	(btemp+10)^0,f,c
  8705  011636  0E00               	movlw	0
  8706  011638  223D               	addwfc	(btemp+11)^0,f,c
  8707  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8708  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8709  011646                     	if	0	;tblptru may be non-zero
  8710  011646                     	endif
  8711  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8712  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8713  011648  6EF8               	movwf	tblptru,c
  8714  01164A                     	endif
  8715  01164A  0008               	tblrd		*
  8716  01164C  50F5               	movf	tablat,w,c
  8717  01164E  6EE6               	movwf	postinc1,c
  8718  011650  0E00               	movlw	0
  8719  011652  6EE6               	movwf	postinc1,c
  8720  011654  EC23  F0BE         	call	_tolower	;wreg free
  8721  011658  5032               	movf	btemp^0,w,c
  8722  01165A  6EDF               	movwf	indf2,c
  8723  01165C                     l10375:
  8724                           
  8725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8726                           ;stkvar	_fmt @ sp[(-32)+-4]
  8727  01165C  0EDC               	movlw	-36
  8728  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8729  011664  0EDD               	movlw	-35
  8730  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8731  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8732  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8733  011678                     	if	0	;tblptru may be non-zero
  8734  011678                     	endif
  8735  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8736  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8737  01167A  6EF8               	movwf	tblptru,c
  8738  01167C                     	endif
  8739  01167C  0008               	tblrd		*
  8740  01167E  50F5               	movf	tablat,w,c
  8741  011680  0A63               	xorlw	99
  8742  011682  A4D8               	btfss	status,2,c
  8743  011684  D036               	goto	l10385
  8744                           
  8745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8746                           ;stkvar	_fmt @ sp[(-32)+-4]
  8747  011686  0EDC               	movlw	-36
  8748  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8749  01168E  0EDD               	movlw	-35
  8750  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8751  011696  2ADE               	incf	postinc2,f,c
  8752  011698  0E00               	movlw	0
  8753  01169A  22DD               	addwfc	postdec2,f,c
  8754                           
  8755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8756                           ;stkvar	_ap @ sp[(-32)+-6]
  8757  01169C  0EDA               	movlw	-38
  8758  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8759  0116A4  0EDB               	movlw	-37
  8760  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8761  0116AC  0E02               	movlw	2
  8762  0116AE  5EDE               	subwf	postinc2,f,c
  8763  0116B0  0E00               	movlw	0
  8764  0116B2  5ADD               	subwfb	postdec2,f,c
  8765  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8766  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8767  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8768  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8769  0116CC  50DF               	movf	indf2,w,c
  8770  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8771                           
  8772                           ;stkvar	_c @ sp[(-32)+31]
  8773  0116D0  0EFF               	movlw	-1
  8774  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8775                           
  8776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8777                           ;stkvar	_c @ sp[(-32)+31]
  8778  0116D8  0EFF               	movlw	-1
  8779  0116DA  50E3               	movf	plusw1,w,c
  8780  0116DC  6EE6               	movwf	postinc1,c
  8781                           
  8782                           ;stkvar	_fp @ sp[(-33)+-2]
  8783  0116DE  0EDD               	movlw	-35
  8784  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8785  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8786  0116EC  EC9D  F0BD         	call	_ctoa	;wreg free
  8787  0116F0  D343               	goto	l2081
  8788  0116F2                     l10385:
  8789                           
  8790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8791                           ;stkvar	_fmt @ sp[(-32)+-4]
  8792  0116F2  0EDC               	movlw	-36
  8793  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8794  0116FA  0EDD               	movlw	-35
  8795  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8796  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8797  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8798  01170E                     	if	0	;tblptru may be non-zero
  8799  01170E                     	endif
  8800  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8801  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8802  011710  6EF8               	movwf	tblptru,c
  8803  011712                     	endif
  8804  011712  0008               	tblrd		*
  8805  011714  50F5               	movf	tablat,w,c
  8806  011716  0A64               	xorlw	100
  8807  011718  B4D8               	btfsc	status,2,c
  8808  01171A  D015               	goto	u10340
  8809                           
  8810                           ;stkvar	_fmt @ sp[(-32)+-4]
  8811  01171C  0EDC               	movlw	-36
  8812  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8813  011724  0EDD               	movlw	-35
  8814  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8815  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8816  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8817  011738                     	if	0	;tblptru may be non-zero
  8818  011738                     	endif
  8819  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8820  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8821  01173A  6EF8               	movwf	tblptru,c
  8822  01173C                     	endif
  8823  01173C  0008               	tblrd		*
  8824  01173E  50F5               	movf	tablat,w,c
  8825  011740  0A69               	xorlw	105
  8826  011742  A4D8               	btfss	status,2,c
  8827  011744  D075               	goto	l10397
  8828  011746                     u10340:
  8829                           
  8830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8831                           ;stkvar	_fmt @ sp[(-32)+-4]
  8832  011746  0EDC               	movlw	-36
  8833  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8834  01174E  0EDD               	movlw	-35
  8835  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8836  011756  2ADE               	incf	postinc2,f,c
  8837  011758  0E00               	movlw	0
  8838  01175A  22DD               	addwfc	postdec2,f,c
  8839                           
  8840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8841                           ;stkvar	_ap @ sp[(-32)+-6]
  8842  01175C  0EDA               	movlw	-38
  8843  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8844  011764  0EDB               	movlw	-37
  8845  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8846  01176C  0E02               	movlw	2
  8847  01176E  5EDE               	subwf	postinc2,f,c
  8848  011770  0E00               	movlw	0
  8849  011772  5ADD               	subwfb	postdec2,f,c
  8850  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8851  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8852  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8853  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8854  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8855  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8856                           
  8857                           ;stkvar	_ll @ sp[(-32)+14]
  8858  011798  0EEE               	movlw	-18
  8859  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8860  0117A0  0EEF               	movlw	-17
  8861  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8862  0117A8  6A32               	clrf	btemp^0,c
  8863  0117AA  BEE3               	btfsc	plusw1,7,c
  8864  0117AC  6832               	setf	btemp^0,c
  8865  0117AE  0EF0               	movlw	-16
  8866  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8867  0117B6  0EF1               	movlw	-15
  8868  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8869  0117BE  0EF2               	movlw	-14
  8870  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8871  0117C6  0EF3               	movlw	-13
  8872  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8873  0117CE  0EF4               	movlw	-12
  8874  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8875  0117D6  0EF5               	movlw	-11
  8876  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8877                           
  8878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8879                           ;stkvar	_ll @ sp[(-32)+14]
  8880  0117DE  50E1               	movf	fsr1l,w,c
  8881  0117E0  0FEE               	addlw	-18
  8882  0117E2  6ED9               	movwf	fsr2l,c
  8883  0117E4  50E2               	movf	fsr1h,w,c
  8884  0117E6  6EDA               	movwf	fsr2h,c
  8885  0117E8  0EFF               	movlw	255
  8886  0117EA  22DA               	addwfc	fsr2h,f,c
  8887  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8888  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8889  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8890  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8891  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8892  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8893  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8894  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8895                           
  8896                           ;stkvar	_fp @ sp[(-40)+-2]
  8897  01181C  0ED6               	movlw	-42
  8898  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8899  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8900  01182A  ECF2  F09F         	call	_dtoa	;wreg free
  8901  01182E  D2A4               	goto	l2081
  8902  011830                     l10397:
  8903                           
  8904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8905                           ;stkvar	_ct @ sp[(-32)+26]
  8906  011830  0EFA               	movlw	-6
  8907  011832  006F FF8C  F032    	movff	plusw1,btemp
  8908  011838  0E66               	movlw	102
  8909  01183A  1832               	xorwf	btemp^0,w,c
  8910  01183C  A4D8               	btfss	status,2,c
  8911  01183E  D06E               	goto	l10409
  8912                           
  8913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8914                           ;stkvar	_fmt @ sp[(-32)+-4]
  8915  011840  0EDC               	movlw	-36
  8916  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8917  011848  0EDD               	movlw	-35
  8918  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8919  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8920  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8921  01185C                     	if	0	;tblptru may be non-zero
  8922  01185C                     	endif
  8923  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8924  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8925  01185E  6EF8               	movwf	tblptru,c
  8926  011860                     	endif
  8927                           
  8928                           ;stkvar	_c @ sp[(-32)+31]
  8929  011860  0008               	tblrd		*
  8930  011862  0EFF               	movlw	-1
  8931  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8932                           
  8933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8934                           ;stkvar	_fmt @ sp[(-32)+-4]
  8935  01186A  0EDC               	movlw	-36
  8936  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8937  011872  0EDD               	movlw	-35
  8938  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8939  01187A  2ADE               	incf	postinc2,f,c
  8940  01187C  0E00               	movlw	0
  8941  01187E  22DD               	addwfc	postdec2,f,c
  8942                           
  8943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8944                           ;stkvar	_ap @ sp[(-32)+-6]
  8945  011880  0EDA               	movlw	-38
  8946  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8947  011888  0EDB               	movlw	-37
  8948  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8949  011890  0E04               	movlw	4
  8950  011892  5EDE               	subwf	postinc2,f,c
  8951  011894  0E00               	movlw	0
  8952  011896  5ADD               	subwfb	postdec2,f,c
  8953  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8954  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8955  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8956  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8957  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8958  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8959  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8960  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8961                           
  8962                           ;stkvar	_f @ sp[(-32)+22]
  8963  0118C8  0EF6               	movlw	-10
  8964  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8965  0118D0  0EF7               	movlw	-9
  8966  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8967  0118D8  0EF8               	movlw	-8
  8968  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8969  0118E0  0EF9               	movlw	-7
  8970  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8971  0118E8                     l10405:
  8972                           
  8973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8974                           ;stkvar	_c @ sp[(-32)+31]
  8975  0118E8  0EFF               	movlw	-1
  8976  0118EA  50E3               	movf	plusw1,w,c
  8977  0118EC  6EE6               	movwf	postinc1,c
  8978                           
  8979                           ;stkvar	_f @ sp[(-33)+22]
  8980  0118EE  0EF5               	movlw	-11
  8981  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8982  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8983  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8984  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8985                           
  8986                           ;stkvar	_fp @ sp[(-37)+-2]
  8987  011908  0ED9               	movlw	-39
  8988  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8989  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8990  011916  EC00  F080         	call	_efgtoa	;wreg free
  8991  01191A  D22E               	goto	l2081
  8992  01191C                     l10409:
  8993                           
  8994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8995  01191C  0E02               	movlw	2
  8996  01191E  6EE6               	movwf	postinc1,c
  8997  011920  0E00               	movlw	0
  8998  011922  6EE6               	movwf	postinc1,c
  8999  011924  0EF6               	movlw	low STR_54
  9000  011926  6EE6               	movwf	postinc1,c
  9001  011928  0EFF               	movlw	high STR_54
  9002  01192A  6EE6               	movwf	postinc1,c
  9003                           
  9004                           ;stkvar	_ct @ sp[(-36)+26]
  9005  01192C  0EF6               	movlw	246
  9006  01192E  24E1               	addwf	fsr1l,w,c
  9007  011930  6E32               	movwf	btemp^0,c
  9008  011932  0EFF               	movlw	255
  9009  011934  20E2               	addwfc	fsr1h,w,c
  9010  011936  6E33               	movwf	(btemp+1)^0,c
  9011  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  9012  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  9013  011944  ECA5  F0AF         	call	_strncmp	;wreg free
  9014  011948  5032               	movf	btemp^0,w,c
  9015  01194A  1033               	iorwf	(btemp+1)^0,w,c
  9016  01194C  A4D8               	btfss	status,2,c
  9017  01194E  D096               	goto	l10429
  9018                           
  9019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9020                           ;stkvar	_fmt @ sp[(-32)+-4]
  9021  011950  0EDC               	movlw	-36
  9022  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9023  011958  0EDD               	movlw	-35
  9024  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9025  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  9026  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  9027  01196C  0E01               	movlw	1
  9028  01196E  263C               	addwf	(btemp+10)^0,f,c
  9029  011970  0E00               	movlw	0
  9030  011972  223D               	addwfc	(btemp+11)^0,f,c
  9031  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  9032  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  9033  011980                     	if	0	;tblptru may be non-zero
  9034  011980                     	endif
  9035  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9036  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9037  011982  6EF8               	movwf	tblptru,c
  9038  011984                     	endif
  9039                           
  9040                           ;stkvar	_c @ sp[(-32)+31]
  9041  011984  0008               	tblrd		*
  9042  011986  0EFF               	movlw	-1
  9043  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9044  01198E  0EBF               	movlw	191
  9045  011990  6E3C               	movwf	(btemp+10)^0,c
  9046  011992  0EFF               	movlw	255
  9047  011994  6E3D               	movwf	(btemp+11)^0,c
  9048                           
  9049                           ;stkvar	_fmt @ sp[(-32)+-4]
  9050  011996  0EDC               	movlw	-36
  9051  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9052  01199E  0EDD               	movlw	-35
  9053  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9054  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9055  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9056  0119B2                     	if	0	;tblptru may be non-zero
  9057  0119B2                     	endif
  9058  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9059  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9060  0119B4  6EF8               	movwf	tblptru,c
  9061  0119B6                     	endif
  9062  0119B6  0008               	tblrd		*
  9063  0119B8  50F5               	movf	tablat,w,c
  9064  0119BA  6E3A               	movwf	(btemp+8)^0,c
  9065  0119BC  6A3B               	clrf	(btemp+9)^0,c
  9066  0119BE  503C               	movf	(btemp+10)^0,w,c
  9067  0119C0  263A               	addwf	(btemp+8)^0,f,c
  9068  0119C2  503D               	movf	(btemp+11)^0,w,c
  9069  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  9070  0119C6  503B               	movf	(btemp+9)^0,w,c
  9071  0119C8  E106               	bnz	u10370
  9072  0119CA  0E1A               	movlw	26
  9073  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  9074  0119CE  B0D8               	btfsc	status,0,c
  9075  0119D0  D002               	goto	u10370
  9076  0119D2  0E01               	movlw	1
  9077  0119D4  D001               	goto	u10380
  9078  0119D6                     u10370:
  9079  0119D6  0E00               	movlw	0
  9080  0119D8                     u10380:
  9081  0119D8  6E3C               	movwf	(btemp+10)^0,c
  9082  0119DA  6A3D               	clrf	(btemp+11)^0,c
  9083                           
  9084                           ;stkvar	_vfpfcnvrt$4669 @ sp[(-32)+2]
  9085  0119DC  0EE2               	movlw	-30
  9086  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9087  0119E4  0EE3               	movlw	-29
  9088  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9089                           
  9090                           ;stkvar	_vfpfcnvrt$4669 @ sp[(-32)+2]
  9091  0119EC  0EE2               	movlw	-30
  9092  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  9093  0119F4  0EE3               	movlw	-29
  9094  0119F6  50E3               	movf	plusw1,w,c
  9095  0119F8  1032               	iorwf	btemp^0,w,c
  9096                           
  9097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9098                           ;stkvar	_ap @ sp[(-32)+-6]
  9099                           
  9100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9101                           
  9102                           ;stkvar	_f @ sp[(-32)+22]
  9103                           
  9104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9105                           ;stkvar	_ap @ sp[(-32)+-6]
  9106  0119FA  0EDA               	movlw	-38
  9107  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9108  011A02  0EDB               	movlw	-37
  9109  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9110  011A0A  0E04               	movlw	4
  9111  011A0C  5EDE               	subwf	postinc2,f,c
  9112  011A0E  0E00               	movlw	0
  9113  011A10  5ADD               	subwfb	postdec2,f,c
  9114  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  9115  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  9116  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9117  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9118  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  9119  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  9120  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  9121  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  9122                           
  9123                           ;stkvar	_f @ sp[(-32)+22]
  9124  011A42  0EF6               	movlw	-10
  9125  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9126  011A4A  0EF7               	movlw	-9
  9127  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9128  011A52  0EF8               	movlw	-8
  9129  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9130  011A5A  0EF9               	movlw	-7
  9131  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9132                           
  9133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9134                           ;stkvar	_fmt @ sp[(-32)+-4]
  9135  011A62  0EDC               	movlw	-36
  9136  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9137  011A6A  0EDD               	movlw	-35
  9138  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9139  011A72  0E02               	movlw	2
  9140  011A74  26DE               	addwf	postinc2,f,c
  9141  011A76  0E00               	movlw	0
  9142  011A78  22DD               	addwfc	postdec2,f,c
  9143  011A7A  D736               	goto	l10405
  9144  011A7C                     l10429:
  9145                           
  9146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9147                           ;stkvar	_fmt @ sp[(-32)+-4]
  9148  011A7C  0EDC               	movlw	-36
  9149  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9150  011A84  0EDD               	movlw	-35
  9151  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9152  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9153  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9154  011A98                     	if	0	;tblptru may be non-zero
  9155  011A98                     	endif
  9156  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9157  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9158  011A9A  6EF8               	movwf	tblptru,c
  9159  011A9C                     	endif
  9160  011A9C  0008               	tblrd		*
  9161  011A9E  50F5               	movf	tablat,w,c
  9162  011AA0  0A73               	xorlw	115
  9163  011AA2  A4D8               	btfss	status,2,c
  9164  011AA4  D042               	goto	l10439
  9165                           
  9166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9167                           ;stkvar	_fmt @ sp[(-32)+-4]
  9168  011AA6  0EDC               	movlw	-36
  9169  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9170  011AAE  0EDD               	movlw	-35
  9171  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9172  011AB6  2ADE               	incf	postinc2,f,c
  9173  011AB8  0E00               	movlw	0
  9174  011ABA  22DD               	addwfc	postdec2,f,c
  9175                           
  9176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9177                           ;stkvar	_ap @ sp[(-32)+-6]
  9178  011ABC  0EDA               	movlw	-38
  9179  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9180  011AC4  0EDB               	movlw	-37
  9181  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9182  011ACC  0E02               	movlw	2
  9183  011ACE  5EDE               	subwf	postinc2,f,c
  9184  011AD0  0E00               	movlw	0
  9185  011AD2  5ADD               	subwfb	postdec2,f,c
  9186  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  9187  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  9188  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9189  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9190  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  9191  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  9192                           
  9193                           ;stkvar	_cp @ sp[(-32)+29]
  9194  011AF8  0EFE               	movlw	-2
  9195  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9196  011B00  0EFD               	movlw	-3
  9197  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9198                           
  9199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9200                           ;stkvar	_cp @ sp[(-32)+29]
  9201  011B08  0EFD               	movlw	-3
  9202  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9203  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9204                           
  9205                           ;stkvar	_fp @ sp[(-34)+-2]
  9206  011B16  0EDC               	movlw	-36
  9207  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9208  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9209  011B24  ECA1  F0A8         	call	_stoa	;wreg free
  9210  011B28  D127               	goto	l2081
  9211  011B2A                     l10439:
  9212                           
  9213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9214                           ;stkvar	_fmt @ sp[(-32)+-4]
  9215  011B2A  0EDC               	movlw	-36
  9216  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9217  011B32  0EDD               	movlw	-35
  9218  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9219  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9220  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9221  011B46                     	if	0	;tblptru may be non-zero
  9222  011B46                     	endif
  9223  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9224  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9225  011B48  6EF8               	movwf	tblptru,c
  9226  011B4A                     	endif
  9227  011B4A  0008               	tblrd		*
  9228  011B4C  50F5               	movf	tablat,w,c
  9229  011B4E  0A78               	xorlw	120
  9230  011B50  B4D8               	btfsc	status,2,c
  9231  011B52  D015               	goto	u10420
  9232                           
  9233                           ;stkvar	_fmt @ sp[(-32)+-4]
  9234  011B54  0EDC               	movlw	-36
  9235  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9236  011B5C  0EDD               	movlw	-35
  9237  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9238  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9239  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9240  011B70                     	if	0	;tblptru may be non-zero
  9241  011B70                     	endif
  9242  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9243  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9244  011B72  6EF8               	movwf	tblptru,c
  9245  011B74                     	endif
  9246  011B74  0008               	tblrd		*
  9247  011B76  50F5               	movf	tablat,w,c
  9248  011B78  0A58               	xorlw	88
  9249  011B7A  A4D8               	btfss	status,2,c
  9250  011B7C  D094               	goto	l10453
  9251  011B7E                     u10420:
  9252                           
  9253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9254                           ;stkvar	_fmt @ sp[(-32)+-4]
  9255  011B7E  0EDC               	movlw	-36
  9256  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9257  011B86  0EDD               	movlw	-35
  9258  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9259  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9260  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9261  011B9A                     	if	0	;tblptru may be non-zero
  9262  011B9A                     	endif
  9263  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9264  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9265  011B9C  6EF8               	movwf	tblptru,c
  9266  011B9E                     	endif
  9267                           
  9268                           ;stkvar	_c @ sp[(-32)+31]
  9269  011B9E  0008               	tblrd		*
  9270  011BA0  0EFF               	movlw	-1
  9271  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9272                           
  9273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9274                           ;stkvar	_fmt @ sp[(-32)+-4]
  9275  011BA8  0EDC               	movlw	-36
  9276  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9277  011BB0  0EDD               	movlw	-35
  9278  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9279  011BB8  2ADE               	incf	postinc2,f,c
  9280  011BBA  0E00               	movlw	0
  9281  011BBC  22DD               	addwfc	postdec2,f,c
  9282                           
  9283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9284                           ;stkvar	_ap @ sp[(-32)+-6]
  9285  011BBE  0EDA               	movlw	-38
  9286  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9287  011BC6  0EDB               	movlw	-37
  9288  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9289  011BCE  0E02               	movlw	2
  9290  011BD0  5EDE               	subwf	postinc2,f,c
  9291  011BD2  0E00               	movlw	0
  9292  011BD4  5ADD               	subwfb	postdec2,f,c
  9293  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  9294  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  9295  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9296  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9297  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  9298  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  9299  011BFA  503C               	movf	(btemp+10)^0,w,c
  9300  011BFC  6E42               	movwf	(btemp+16)^0,c
  9301  011BFE  503D               	movf	(btemp+11)^0,w,c
  9302  011C00  6E43               	movwf	(btemp+17)^0,c
  9303  011C02  6A44               	clrf	(btemp+18)^0,c
  9304  011C04  6A45               	clrf	(btemp+19)^0,c
  9305  011C06  6A46               	clrf	(btemp+20)^0,c
  9306  011C08  6A47               	clrf	(btemp+21)^0,c
  9307  011C0A  6A48               	clrf	(btemp+22)^0,c
  9308  011C0C  6A49               	clrf	(btemp+23)^0,c
  9309                           
  9310                           ;stkvar	_llu @ sp[(-32)+6]
  9311  011C0E  0EE6               	movlw	-26
  9312  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  9313  011C16  0EE7               	movlw	-25
  9314  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  9315  011C1E  0EE8               	movlw	-24
  9316  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  9317  011C26  0EE9               	movlw	-23
  9318  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  9319  011C2E  0EEA               	movlw	-22
  9320  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  9321  011C36  0EEB               	movlw	-21
  9322  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  9323  011C3E  0EEC               	movlw	-20
  9324  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  9325  011C46  0EED               	movlw	-19
  9326  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  9327                           
  9328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9329                           ;stkvar	_c @ sp[(-32)+31]
  9330  011C4E  0EFF               	movlw	-1
  9331  011C50  50E3               	movf	plusw1,w,c
  9332  011C52  6EE6               	movwf	postinc1,c
  9333                           
  9334                           ;stkvar	_llu @ sp[(-33)+6]
  9335  011C54  50E1               	movf	fsr1l,w,c
  9336  011C56  0FE5               	addlw	-27
  9337  011C58  6ED9               	movwf	fsr2l,c
  9338  011C5A  50E2               	movf	fsr1h,w,c
  9339  011C5C  6EDA               	movwf	fsr2h,c
  9340  011C5E  0EFF               	movlw	255
  9341  011C60  22DA               	addwfc	fsr2h,f,c
  9342  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9343  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9344  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9345  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9346  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9347  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9348  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9349  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9350                           
  9351                           ;stkvar	_fp @ sp[(-41)+-2]
  9352  011C92  0ED5               	movlw	-43
  9353  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9354  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9355  011CA0  EC32  F0A2         	call	_xtoa	;wreg free
  9356  011CA4  D069               	goto	l2081
  9357  011CA6                     l10453:
  9358                           
  9359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9360                           ;stkvar	_fmt @ sp[(-32)+-4]
  9361  011CA6  0EDC               	movlw	-36
  9362  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9363  011CAE  0EDD               	movlw	-35
  9364  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9365  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9366  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9367  011CC2                     	if	0	;tblptru may be non-zero
  9368  011CC2                     	endif
  9369  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9370  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9371  011CC4  6EF8               	movwf	tblptru,c
  9372  011CC6                     	endif
  9373  011CC6  0008               	tblrd		*
  9374  011CC8  50F5               	movf	tablat,w,c
  9375  011CCA  0A25               	xorlw	37
  9376  011CCC  A4D8               	btfss	status,2,c
  9377  011CCE  D01A               	goto	l10463
  9378                           
  9379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9380                           ;stkvar	_fmt @ sp[(-32)+-4]
  9381  011CD0  0EDC               	movlw	-36
  9382  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9383  011CD8  0EDD               	movlw	-35
  9384  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9385  011CE0  2ADE               	incf	postinc2,f,c
  9386  011CE2  0E00               	movlw	0
  9387  011CE4  22DD               	addwfc	postdec2,f,c
  9388                           
  9389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9390                           ;stkvar	_fp @ sp[(-32)+-2]
  9391  011CE6  0EDE               	movlw	-34
  9392  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9393  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9394  011CF4  0E25               	movlw	37
  9395  011CF6  6EE6               	movwf	postinc1,c
  9396  011CF8  0E00               	movlw	0
  9397  011CFA  6EE6               	movwf	postinc1,c
  9398  011CFC  EC80  F0B5         	call	_fputc	;wreg free
  9399  011D00                     l10459:
  9400                           
  9401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9402  011D00  0E01               	movlw	1
  9403  011D02  D00C               	goto	L7
  9404  011D04                     l10463:
  9405                           
  9406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9407                           ;stkvar	_fmt @ sp[(-32)+-4]
  9408  011D04  0EDC               	movlw	-36
  9409  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9410  011D0C  0EDD               	movlw	-35
  9411  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9412  011D14  2ADE               	incf	postinc2,f,c
  9413  011D16  0E00               	movlw	0
  9414  011D18  22DD               	addwfc	postdec2,f,c
  9415                           
  9416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9417  011D1A  0E00               	movlw	0
  9418  011D1C                     L7:
  9419  011D1C  6E32               	movwf	btemp^0,c
  9420  011D1E  0E00               	movlw	0
  9421  011D20  6E33               	movwf	(btemp+1)^0,c
  9422  011D22  D02A               	goto	l2081
  9423  011D24                     l10469:
  9424                           
  9425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9426                           ;stkvar	_fp @ sp[(-32)+-2]
  9427  011D24  0EDE               	movlw	-34
  9428  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9429  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9430                           
  9431                           ;stkvar	_fmt @ sp[(-34)+-4]
  9432  011D32  0EDA               	movlw	-38
  9433  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9434  011D3A  0EDB               	movlw	-37
  9435  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9436  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9437  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9438  011D4E                     	if	0	;tblptru may be non-zero
  9439  011D4E                     	endif
  9440  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9441  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9442  011D50  6EF8               	movwf	tblptru,c
  9443  011D52                     	endif
  9444  011D52  0008               	tblrd		*
  9445  011D54  50F5               	movf	tablat,w,c
  9446  011D56  6EE6               	movwf	postinc1,c
  9447  011D58  0E00               	movlw	0
  9448  011D5A  6EE6               	movwf	postinc1,c
  9449  011D5C  EC80  F0B5         	call	_fputc	;wreg free
  9450                           
  9451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9452                           ;stkvar	_fmt @ sp[(-32)+-4]
  9453  011D60  0EDC               	movlw	-36
  9454  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9455  011D68  0EDD               	movlw	-35
  9456  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9457  011D70  2ADE               	incf	postinc2,f,c
  9458  011D72  0E00               	movlw	0
  9459  011D74  22DD               	addwfc	postdec2,f,c
  9460  011D76  D7C4               	goto	l10459
  9461  011D78                     l2081:
  9462                           
  9463                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9464  011D78  0EDA               	movlw	218
  9465  011D7A  26E1               	addwf	fsr1l,f,c
  9466  011D7C  0EFF               	movlw	255
  9467  011D7E  22E2               	addwfc	fsr1h,f,c
  9468  011D80  0012               	return		;funcret
  9469  011D82                     __end_of_vfpfcnvrt:
  9470                           	opt callstack 0
  9471                           
  9472 ;; *************** function _xtoa *****************
  9473 ;; Defined at:
  9474 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9477 ;;		 -> f(6), NULL(0), 
  9478 ;;  d               8  [STACK] unsigned long long 
  9479 ;;  x               1  [STACK] unsigned char 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  n               8  [STACK] unsigned long long 
  9482 ;;  c               2  [STACK] int 
  9483 ;;  i               2  [STACK] int 
  9484 ;;  w               2  [STACK] int 
  9485 ;;  p               2  [STACK] int 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  2  [STACK] int 
  9488 ;; Registers used:
  9489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/5
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9499 ;;Total ram usage:        0 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:   11
  9502 ;; This function calls:
  9503 ;;		_isalpha
  9504 ;;		_isupper
  9505 ;;		_pad
  9506 ;;		_toupper
  9507 ;; This function is called by:
  9508 ;;		_vfpfcnvrt
  9509 ;; This function uses a reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text40
  9513  014464                     __ptext40:
  9514                           	opt callstack 0
  9515  014464                     _xtoa:
  9516                           	opt callstack 0
  9517                           
  9518                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9519  014464  0E14               	movlw	20
  9520  014466  26E1               	addwf	fsr1l,f,c
  9521  014468  0E00               	movlw	0
  9522  01446A  22E2               	addwfc	fsr1h,f,c
  9523                           
  9524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9525                           
  9526                           ;incstack = 0
  9527  01446C  AE1E               	btfss	(_prec+1)^0,7,c
  9528                           
  9529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9530  01446E  921F               	bcf	_flags^0,1,c
  9531                           
  9532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9533  014470  BE1E               	btfsc	(_prec+1)^0,7,c
  9534  014472  D005               	goto	u10020
  9535  014474  501E               	movf	(_prec+1)^0,w,c
  9536  014476  E110               	bnz	l10251
  9537  014478  041D               	decf	_prec^0,w,c
  9538  01447A  B0D8               	btfsc	status,0,c
  9539  01447C  D00D               	goto	l10251
  9540  01447E                     u10020:
  9541  01447E  0E01               	movlw	1
  9542  014480  6E3C               	movwf	(btemp+10)^0,c
  9543  014482  0E00               	movlw	0
  9544  014484  6E3D               	movwf	(btemp+11)^0,c
  9545                           
  9546                           ;stkvar	_p @ sp[(-20)+18]
  9547  014486  0EFE               	movlw	-2
  9548  014488  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9549  01448E  0EFF               	movlw	-1
  9550  014490  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9551  014496  D008               	goto	l2031
  9552  014498                     l10251:
  9553                           
  9554                           ;stkvar	_p @ sp[(-20)+18]
  9555  014498  0EFE               	movlw	-2
  9556  01449A  0060  F077  FFE3   	movff	_prec,plusw1
  9557  0144A0  0EFF               	movlw	-1
  9558  0144A2  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9559  0144A8                     l2031:
  9560                           
  9561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9562                           ;stkvar	_w @ sp[(-20)+16]
  9563  0144A8  0EFC               	movlw	-4
  9564  0144AA  0060  F06F  FFE3   	movff	_width,plusw1
  9565  0144B0  0EFD               	movlw	-3
  9566  0144B2  0060  F073  FFE3   	movff	_width+1,plusw1
  9567                           
  9568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9569  0144B8  A81F               	btfss	_flags^0,4,c
  9570  0144BA  D00B               	goto	l10257
  9571                           
  9572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9573                           ;stkvar	_w @ sp[(-20)+16]
  9574  0144BC  50E1               	movf	fsr1l,w,c
  9575  0144BE  0FFC               	addlw	-4
  9576  0144C0  6ED9               	movwf	fsr2l,c
  9577  0144C2  50E2               	movf	fsr1h,w,c
  9578  0144C4  6EDA               	movwf	fsr2h,c
  9579  0144C6  0EFF               	movlw	255
  9580  0144C8  22DA               	addwfc	fsr2h,f,c
  9581  0144CA  0EFE               	movlw	254
  9582  0144CC  26DE               	addwf	postinc2,f,c
  9583  0144CE  0EFF               	movlw	255
  9584  0144D0  22DD               	addwfc	postdec2,f,c
  9585  0144D2                     l10257:
  9586                           
  9587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9588                           ;stkvar	_d @ sp[(-20)+-10]
  9589  0144D2  0EE2               	movlw	226
  9590  0144D4  24E1               	addwf	fsr1l,w,c
  9591  0144D6  6ED9               	movwf	fsr2l,c
  9592  0144D8  0EFF               	movlw	255
  9593  0144DA  20E2               	addwfc	fsr1h,w,c
  9594  0144DC  6EDA               	movwf	fsr2h,c
  9595                           
  9596                           ;stkvar	_n @ sp[(-20)+4]
  9597  0144DE  0E08               	movlw	8
  9598  0144E0  6E32               	movwf	btemp^0,c
  9599  0144E2  0EF0               	movlw	-16
  9600  0144E4                     us1004999:
  9601  0144E4  006F FF7B FFE3     	movff	postinc2,plusw1
  9602  0144EA  28E8               	incf	wreg,w,c
  9603  0144EC  2E32               	decfsz	btemp^0,f,c
  9604  0144EE  D7FA               	bra	us1004999
  9605                           
  9606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9607  0144F0  0E4F               	movlw	79
  9608  0144F2  6E3C               	movwf	(btemp+10)^0,c
  9609  0144F4  0E00               	movlw	0
  9610  0144F6  6E3D               	movwf	(btemp+11)^0,c
  9611                           
  9612                           ;stkvar	_i @ sp[(-20)+14]
  9613  0144F8  0EFA               	movlw	-6
  9614  0144FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9615  014500  0EFB               	movlw	-5
  9616  014502  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9617                           
  9618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9619  014508  0101               	movlb	1	; () banked
  9620  01450A  6BCB               	clrf	(_dbuf+79)& (0+255),b
  9621                           
  9622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9623  01450C  D0EE               	goto	l10295
  9624  01450E                     l10263:
  9625                           
  9626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9627                           ;stkvar	_i @ sp[(-20)+14]
  9628  01450E  50E1               	movf	fsr1l,w,c
  9629  014510  0FFA               	addlw	-6
  9630  014512  6ED9               	movwf	fsr2l,c
  9631  014514  50E2               	movf	fsr1h,w,c
  9632  014516  6EDA               	movwf	fsr2h,c
  9633  014518  0EFF               	movlw	255
  9634  01451A  22DA               	addwfc	fsr2h,f,c
  9635  01451C  06DE               	decf	postinc2,f,c
  9636  01451E  0E00               	movlw	0
  9637  014520  5ADD               	subwfb	postdec2,f,c
  9638                           
  9639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9640                           ;stkvar	_n @ sp[(-20)+4]
  9641  014522  0EF0               	movlw	-16
  9642  014524  006F FF8C  F03C    	movff	plusw1,btemp+10
  9643  01452A  0EF1               	movlw	-15
  9644  01452C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9645  014532  0E0F               	movlw	15
  9646  014534  163C               	andwf	(btemp+10)^0,f,c
  9647  014536  0E00               	movlw	0
  9648  014538  163D               	andwf	(btemp+11)^0,f,c
  9649                           
  9650                           ;stkvar	_c @ sp[(-20)+12]
  9651  01453A  0EF8               	movlw	-8
  9652  01453C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9653  014542  0EF9               	movlw	-7
  9654  014544  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9655                           
  9656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9657                           ;stkvar	_c @ sp[(-20)+12]
  9658  01454A  0EF9               	movlw	-7
  9659  01454C  BEE3               	btfsc	plusw1,7,c
  9660  01454E  D00F               	goto	l10271
  9661  014550  0EF9               	movlw	-7
  9662  014552  50E3               	movf	plusw1,w,c
  9663  014554  E108               	bnz	u10050
  9664  014556  0EF8               	movlw	-8
  9665  014558  006F FF8C  F032    	movff	plusw1,btemp
  9666  01455E  0E0A               	movlw	10
  9667  014560  5E32               	subwf	btemp^0,f,c
  9668  014562  A0D8               	btfss	status,0,c
  9669  014564  D004               	goto	l10271
  9670  014566                     u10050:
  9671                           
  9672                           ;stkvar	_c @ sp[(-20)+12]
  9673  014566  0EF8               	movlw	-8
  9674  014568  50E3               	movf	plusw1,w,c
  9675  01456A  0F57               	addlw	87
  9676  01456C  D003               	goto	L8
  9677  01456E                     l10271:
  9678                           
  9679                           ;stkvar	_c @ sp[(-20)+12]
  9680  01456E  0EF8               	movlw	-8
  9681  014570  50E3               	movf	plusw1,w,c
  9682  014572  0F30               	addlw	48
  9683  014574                     L8:
  9684  014574  6E3C               	movwf	(btemp+10)^0,c
  9685  014576  0EF9               	movlw	-7
  9686  014578  006F FF8C  F03D    	movff	plusw1,btemp+11
  9687  01457E  0E00               	movlw	0
  9688  014580  223D               	addwfc	(btemp+11)^0,f,c
  9689                           
  9690                           ;stkvar	_c @ sp[(-20)+12]
  9691  014582  0EF8               	movlw	-8
  9692  014584  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9693  01458A  0EF9               	movlw	-7
  9694  01458C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9695  014592  0EBF               	movlw	191
  9696  014594  6E3C               	movwf	(btemp+10)^0,c
  9697  014596  0EFF               	movlw	255
  9698  014598  6E3D               	movwf	(btemp+11)^0,c
  9699                           
  9700                           ;stkvar	_x @ sp[(-20)+-11]
  9701  01459A  0EE1               	movlw	-31
  9702  01459C  50E3               	movf	plusw1,w,c
  9703  01459E  6E3A               	movwf	(btemp+8)^0,c
  9704  0145A0  6A3B               	clrf	(btemp+9)^0,c
  9705  0145A2  503C               	movf	(btemp+10)^0,w,c
  9706  0145A4  263A               	addwf	(btemp+8)^0,f,c
  9707  0145A6  503D               	movf	(btemp+11)^0,w,c
  9708  0145A8  223B               	addwfc	(btemp+9)^0,f,c
  9709  0145AA  503B               	movf	(btemp+9)^0,w,c
  9710  0145AC  E106               	bnz	u10060
  9711  0145AE  0E1A               	movlw	26
  9712  0145B0  5C3A               	subwf	(btemp+8)^0,w,c
  9713  0145B2  B0D8               	btfsc	status,0,c
  9714  0145B4  D002               	goto	u10060
  9715  0145B6  0E01               	movlw	1
  9716  0145B8  D001               	goto	u10070
  9717  0145BA                     u10060:
  9718  0145BA  0E00               	movlw	0
  9719  0145BC                     u10070:
  9720  0145BC  6E3C               	movwf	(btemp+10)^0,c
  9721  0145BE  6A3D               	clrf	(btemp+11)^0,c
  9722                           
  9723                           ;stkvar	_xtoa$4647 @ sp[(-20)+2]
  9724  0145C0  0EEE               	movlw	-18
  9725  0145C2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9726  0145C8  0EEF               	movlw	-17
  9727  0145CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9728                           
  9729                           ;stkvar	_xtoa$4647 @ sp[(-20)+2]
  9730  0145D0  0EEE               	movlw	-18
  9731  0145D2  006F FF8C  F032    	movff	plusw1,btemp
  9732  0145D8  0EEF               	movlw	-17
  9733  0145DA  50E3               	movf	plusw1,w,c
  9734  0145DC  1032               	iorwf	btemp^0,w,c
  9735  0145DE  B4D8               	btfsc	status,2,c
  9736  0145E0  D041               	goto	l10287
  9737  0145E2  0E9F               	movlw	159
  9738  0145E4  6E3C               	movwf	(btemp+10)^0,c
  9739  0145E6  0EFF               	movlw	255
  9740  0145E8  6E3D               	movwf	(btemp+11)^0,c
  9741                           
  9742                           ;stkvar	_c @ sp[(-20)+12]
  9743  0145EA  0EF8               	movlw	-8
  9744  0145EC  006F FF8C  F03A    	movff	plusw1,btemp+8
  9745  0145F2  0EF9               	movlw	-7
  9746  0145F4  006F FF8C  F03B    	movff	plusw1,btemp+9
  9747  0145FA  0E20               	movlw	32
  9748  0145FC  123A               	iorwf	(btemp+8)^0,f,c
  9749  0145FE  0E00               	movlw	0
  9750  014600  123B               	iorwf	(btemp+9)^0,f,c
  9751  014602  503C               	movf	(btemp+10)^0,w,c
  9752  014604  263A               	addwf	(btemp+8)^0,f,c
  9753  014606  503D               	movf	(btemp+11)^0,w,c
  9754  014608  223B               	addwfc	(btemp+9)^0,f,c
  9755  01460A  503B               	movf	(btemp+9)^0,w,c
  9756  01460C  E106               	bnz	u10090
  9757  01460E  0E1A               	movlw	26
  9758  014610  5C3A               	subwf	(btemp+8)^0,w,c
  9759  014612  B0D8               	btfsc	status,0,c
  9760  014614  D002               	goto	u10090
  9761  014616  0E01               	movlw	1
  9762  014618  D001               	goto	u10100
  9763  01461A                     u10090:
  9764  01461A  0E00               	movlw	0
  9765  01461C                     u10100:
  9766  01461C  6E3C               	movwf	(btemp+10)^0,c
  9767  01461E  6A3D               	clrf	(btemp+11)^0,c
  9768                           
  9769                           ;stkvar	_xtoa$4648 @ sp[(-20)+0]
  9770  014620  0EEC               	movlw	-20
  9771  014622  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9772  014628  0EED               	movlw	-19
  9773  01462A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9774                           
  9775                           ;stkvar	_xtoa$4648 @ sp[(-20)+0]
  9776  014630  0EEC               	movlw	-20
  9777  014632  006F FF8C  F032    	movff	plusw1,btemp
  9778  014638  0EED               	movlw	-19
  9779  01463A  50E3               	movf	plusw1,w,c
  9780  01463C  1032               	iorwf	btemp^0,w,c
  9781  01463E  B4D8               	btfsc	status,2,c
  9782  014640  D011               	goto	l10287
  9783                           
  9784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9785                           ;stkvar	_c @ sp[(-20)+12]
  9786  014642  0EF8               	movlw	-8
  9787  014644  006F FF8F FFE6     	movff	plusw1,postinc1
  9788  01464A  006F FF8F FFE6     	movff	plusw1,postinc1
  9789  014650  ECE1  F0BD         	call	_toupper	;wreg free
  9790                           
  9791                           ;stkvar	_c @ sp[(-20)+12]
  9792  014654  0EF8               	movlw	-8
  9793  014656  0060  F0CB  FFE3   	movff	btemp,plusw1
  9794  01465C  0EF9               	movlw	-7
  9795  01465E  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9796  014664                     l10287:
  9797                           
  9798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9799                           ;stkvar	_c @ sp[(-20)+12]
  9800                           ;stkvar	_i @ sp[(-20)+14]
  9801  014664  0EFA               	movlw	-6
  9802  014666  006F FF8C  F03C    	movff	plusw1,btemp+10
  9803  01466C  0EFB               	movlw	-5
  9804  01466E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9805  014674  0E7C               	movlw	low _dbuf
  9806  014676  243C               	addwf	(btemp+10)^0,w,c
  9807  014678  6ED9               	movwf	fsr2l,c
  9808  01467A  0E01               	movlw	high _dbuf
  9809  01467C  203D               	addwfc	(btemp+11)^0,w,c
  9810  01467E  6EDA               	movwf	fsr2h,c
  9811  014680  0EF8               	movlw	-8
  9812  014682  006F FF8F FFDF     	movff	plusw1,indf2
  9813                           
  9814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9815                           ;stkvar	_p @ sp[(-20)+18]
  9816  014688  50E1               	movf	fsr1l,w,c
  9817  01468A  0FFE               	addlw	-2
  9818  01468C  6ED9               	movwf	fsr2l,c
  9819  01468E  50E2               	movf	fsr1h,w,c
  9820  014690  6EDA               	movwf	fsr2h,c
  9821  014692  0EFF               	movlw	255
  9822  014694  22DA               	addwfc	fsr2h,f,c
  9823  014696  06DE               	decf	postinc2,f,c
  9824  014698  0E00               	movlw	0
  9825  01469A  5ADD               	subwfb	postdec2,f,c
  9826                           
  9827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9828                           ;stkvar	_w @ sp[(-20)+16]
  9829  01469C  50E1               	movf	fsr1l,w,c
  9830  01469E  0FFC               	addlw	-4
  9831  0146A0  6ED9               	movwf	fsr2l,c
  9832  0146A2  50E2               	movf	fsr1h,w,c
  9833  0146A4  6EDA               	movwf	fsr2h,c
  9834  0146A6  0EFF               	movlw	255
  9835  0146A8  22DA               	addwfc	fsr2h,f,c
  9836  0146AA  06DE               	decf	postinc2,f,c
  9837  0146AC  0E00               	movlw	0
  9838  0146AE  5ADD               	subwfb	postdec2,f,c
  9839                           
  9840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9841  0146B0  0E04               	movlw	4
  9842  0146B2  6E3D               	movwf	(btemp+11)^0,c
  9843                           
  9844                           ;stkvar	_n @ sp[(-20)+4]
  9845  0146B4  50E1               	movf	fsr1l,w,c
  9846  0146B6  0FF0               	addlw	-16
  9847  0146B8  6ED9               	movwf	fsr2l,c
  9848  0146BA  50E2               	movf	fsr1h,w,c
  9849  0146BC  6EDA               	movwf	fsr2h,c
  9850  0146BE  0EFF               	movlw	255
  9851  0146C0  22DA               	addwfc	fsr2h,f,c
  9852  0146C2  283D               	incf	(btemp+11)^0,w,c
  9853  0146C4  52DE               	movf	postinc2,f,c
  9854  0146C6  D00F               	goto	u10120
  9855  0146C8                     u10125:
  9856  0146C8  52DE               	movf	postinc2,f,c
  9857  0146CA  52DE               	movf	postinc2,f,c
  9858  0146CC  52DE               	movf	postinc2,f,c
  9859  0146CE  52DE               	movf	postinc2,f,c
  9860  0146D0  52DE               	movf	postinc2,f,c
  9861  0146D2  52DE               	movf	postinc2,f,c
  9862  0146D4  90D8               	bcf	status,0,c
  9863  0146D6  32DD               	rrcf	postdec2,f,c
  9864  0146D8  32DD               	rrcf	postdec2,f,c
  9865  0146DA  32DD               	rrcf	postdec2,f,c
  9866  0146DC  32DD               	rrcf	postdec2,f,c
  9867  0146DE  32DD               	rrcf	postdec2,f,c
  9868  0146E0  32DD               	rrcf	postdec2,f,c
  9869  0146E2  32DD               	rrcf	postdec2,f,c
  9870  0146E4  32DE               	rrcf	postinc2,f,c
  9871  0146E6                     u10120:
  9872  0146E6  2EE8               	decfsz	wreg,f,c
  9873  0146E8  D7EF               	goto	u10125
  9874  0146EA                     l10295:
  9875                           
  9876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9877                           ;stkvar	_i @ sp[(-20)+14]
  9878  0146EA  0EFB               	movlw	-5
  9879  0146EC  BEE3               	btfsc	plusw1,7,c
  9880  0146EE  D03A               	goto	u10170
  9881  0146F0  0EFB               	movlw	-5
  9882  0146F2  50E3               	movf	plusw1,w,c
  9883  0146F4  E108               	bnz	u10130
  9884  0146F6  0EFA               	movlw	-6
  9885  0146F8  006F FF8C  F032    	movff	plusw1,btemp
  9886  0146FE  0E02               	movlw	2
  9887  014700  5E32               	subwf	btemp^0,f,c
  9888  014702  A0D8               	btfss	status,0,c
  9889  014704  D02F               	goto	u10170
  9890  014706                     u10130:
  9891                           
  9892                           ;stkvar	_n @ sp[(-20)+4]
  9893  014706  0EF0               	movlw	-16
  9894  014708  50E3               	movf	plusw1,w,c
  9895  01470A  E115               	bnz	u10141
  9896  01470C  0EF1               	movlw	-15
  9897  01470E  50E3               	movf	plusw1,w,c
  9898  014710  E112               	bnz	u10141
  9899  014712  0EF2               	movlw	-14
  9900  014714  50E3               	movf	plusw1,w,c
  9901  014716  E10F               	bnz	u10141
  9902  014718  0EF3               	movlw	-13
  9903  01471A  50E3               	movf	plusw1,w,c
  9904  01471C  E10C               	bnz	u10141
  9905  01471E  0EF4               	movlw	-12
  9906  014720  50E3               	movf	plusw1,w,c
  9907  014722  E109               	bnz	u10141
  9908  014724  0EF5               	movlw	-11
  9909  014726  50E3               	movf	plusw1,w,c
  9910  014728  E106               	bnz	u10141
  9911  01472A  0EF6               	movlw	-10
  9912  01472C  50E3               	movf	plusw1,w,c
  9913  01472E  E103               	bnz	u10141
  9914  014730  0EF7               	movlw	-9
  9915  014732  50E3               	movf	plusw1,w,c
  9916  014734  A4D8               	btfss	status,2,c
  9917  014736                     u10141:
  9918  014736  D6EB               	goto	l10263
  9919                           
  9920                           ;stkvar	_p @ sp[(-20)+18]
  9921  014738  0EFF               	movlw	-1
  9922  01473A  BEE3               	btfsc	plusw1,7,c
  9923  01473C  D007               	goto	u10150
  9924  01473E  0EFF               	movlw	-1
  9925  014740  50E3               	movf	plusw1,w,c
  9926  014742  E103               	bnz	u10151
  9927  014744  0EFE               	movlw	-2
  9928  014746  04E3               	decf	plusw1,w,c
  9929  014748  B0D8               	btfsc	status,0,c
  9930  01474A                     u10151:
  9931  01474A  D6E1               	goto	l10263
  9932  01474C                     u10150:
  9933                           
  9934                           ;stkvar	_w @ sp[(-20)+16]
  9935  01474C  0EFD               	movlw	-3
  9936  01474E  BEE3               	btfsc	plusw1,7,c
  9937  014750  D009               	goto	u10170
  9938  014752  0EFD               	movlw	-3
  9939  014754  50E3               	movf	plusw1,w,c
  9940  014756  E104               	bnz	u10160
  9941  014758  0EFC               	movlw	-4
  9942  01475A  04E3               	decf	plusw1,w,c
  9943  01475C  A0D8               	btfss	status,0,c
  9944  01475E  D002               	goto	u10170
  9945  014760                     u10160:
  9946  014760  B21F               	btfsc	_flags^0,1,c
  9947  014762  D6D5               	goto	l10263
  9948  014764                     u10170:
  9949                           
  9950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9951  014764  A81F               	btfss	_flags^0,4,c
  9952  014766  D036               	goto	l10311
  9953                           
  9954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9955                           ;stkvar	_i @ sp[(-20)+14]
  9956  014768  50E1               	movf	fsr1l,w,c
  9957  01476A  0FFA               	addlw	-6
  9958  01476C  6ED9               	movwf	fsr2l,c
  9959  01476E  50E2               	movf	fsr1h,w,c
  9960  014770  6EDA               	movwf	fsr2h,c
  9961  014772  0EFF               	movlw	255
  9962  014774  22DA               	addwfc	fsr2h,f,c
  9963  014776  06DE               	decf	postinc2,f,c
  9964  014778  0E00               	movlw	0
  9965  01477A  5ADD               	subwfb	postdec2,f,c
  9966                           
  9967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9968                           ;stkvar	_x @ sp[(-20)+-11]
  9969                           ;stkvar	_i @ sp[(-20)+14]
  9970  01477C  0EFA               	movlw	-6
  9971  01477E  006F FF8C  F03C    	movff	plusw1,btemp+10
  9972  014784  0EFB               	movlw	-5
  9973  014786  006F FF8C  F03D    	movff	plusw1,btemp+11
  9974  01478C  0E7C               	movlw	low _dbuf
  9975  01478E  243C               	addwf	(btemp+10)^0,w,c
  9976  014790  6ED9               	movwf	fsr2l,c
  9977  014792  0E01               	movlw	high _dbuf
  9978  014794  203D               	addwfc	(btemp+11)^0,w,c
  9979  014796  6EDA               	movwf	fsr2h,c
  9980  014798  0EE1               	movlw	-31
  9981  01479A  006F FF8F FFDF     	movff	plusw1,indf2
  9982                           
  9983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9984                           ;stkvar	_i @ sp[(-20)+14]
  9985  0147A0  50E1               	movf	fsr1l,w,c
  9986  0147A2  0FFA               	addlw	-6
  9987  0147A4  6ED9               	movwf	fsr2l,c
  9988  0147A6  50E2               	movf	fsr1h,w,c
  9989  0147A8  6EDA               	movwf	fsr2h,c
  9990  0147AA  0EFF               	movlw	255
  9991  0147AC  22DA               	addwfc	fsr2h,f,c
  9992  0147AE  06DE               	decf	postinc2,f,c
  9993  0147B0  0E00               	movlw	0
  9994  0147B2  5ADD               	subwfb	postdec2,f,c
  9995                           
  9996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9997                           ;stkvar	_i @ sp[(-20)+14]
  9998  0147B4  0EFA               	movlw	-6
  9999  0147B6  006F FF8C  F03C    	movff	plusw1,btemp+10
 10000  0147BC  0EFB               	movlw	-5
 10001  0147BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 10002  0147C4  0E7C               	movlw	low _dbuf
 10003  0147C6  243C               	addwf	(btemp+10)^0,w,c
 10004  0147C8  6ED9               	movwf	fsr2l,c
 10005  0147CA  0E01               	movlw	high _dbuf
 10006  0147CC  203D               	addwfc	(btemp+11)^0,w,c
 10007  0147CE  6EDA               	movwf	fsr2h,c
 10008  0147D0  0E30               	movlw	48
 10009  0147D2  6EDF               	movwf	indf2,c
 10010  0147D4                     l10311:
 10011                           
 10012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10013                           ;stkvar	_w @ sp[(-20)+16]
 10014  0147D4  0EFC               	movlw	-4
 10015  0147D6  006F FF8F FFE6     	movff	plusw1,postinc1
 10016  0147DC  006F FF8F FFE6     	movff	plusw1,postinc1
 10017                           
 10018                           ;stkvar	_i @ sp[(-22)+14]
 10019  0147E2  0E7C               	movlw	low _dbuf
 10020  0147E4  6E3C               	movwf	(btemp+10)^0,c
 10021  0147E6  0E01               	movlw	high _dbuf
 10022  0147E8  6E3D               	movwf	(btemp+11)^0,c
 10023  0147EA  0EF8               	movlw	-8
 10024  0147EC  50E3               	movf	plusw1,w,c
 10025  0147EE  263C               	addwf	(btemp+10)^0,f,c
 10026  0147F0  0EF9               	movlw	-7
 10027  0147F2  50E3               	movf	plusw1,w,c
 10028  0147F4  223D               	addwfc	(btemp+11)^0,f,c
 10029  0147F6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10030  0147FC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10031                           
 10032                           ;stkvar	_fp @ sp[(-24)+-2]
 10033  014802  0EE6               	movlw	-26
 10034  014804  006F FF8F FFE6     	movff	plusw1,postinc1
 10035  01480A  006F FF8F FFE6     	movff	plusw1,postinc1
 10036  014810  EC9E  F0B6         	call	_pad	;wreg free
 10037                           
 10038                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10039  014814  0EE1               	movlw	225
 10040  014816  26E1               	addwf	fsr1l,f,c
 10041  014818  0EFF               	movlw	255
 10042  01481A  22E2               	addwfc	fsr1h,f,c
 10043  01481C  0012               	return		;funcret
 10044  01481E                     __end_of_xtoa:
 10045                           	opt callstack 0
 10046                           
 10047 ;; *************** function _toupper *****************
 10048 ;; Defined at:
 10049 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  c               2  [STACK] int 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  2  [STACK] int 
 10056 ;; Registers used:
 10057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/1
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10067 ;;Total ram usage:        0 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    7
 10070 ;; This function calls:
 10071 ;;		_islower
 10072 ;; This function is called by:
 10073 ;;		_xtoa
 10074 ;; This function uses a reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text41
 10078  017BC2                     __ptext41:
 10079                           	opt callstack 0
 10080  017BC2                     _toupper:
 10081                           	opt callstack 0
 10082                           
 10083                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10084  017BC2  52E6               	movf	postinc1,f,c
 10085  017BC4  52E6               	movf	postinc1,f,c
 10086                           
 10087                           ;stkvar	_c @ sp[(-2)+-2]
 10088                           
 10089                           ;incstack = 0
 10090  017BC6  0EFC               	movlw	-4
 10091  017BC8  50E3               	movf	plusw1,w,c
 10092  017BCA  0F9F               	addlw	159
 10093  017BCC  6E3C               	movwf	(btemp+10)^0,c
 10094  017BCE  0EFD               	movlw	-3
 10095  017BD0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10096  017BD6  0EFF               	movlw	255
 10097  017BD8  223D               	addwfc	(btemp+11)^0,f,c
 10098  017BDA  503D               	movf	(btemp+11)^0,w,c
 10099  017BDC  E106               	bnz	u5390
 10100  017BDE  0E1A               	movlw	26
 10101  017BE0  5C3C               	subwf	(btemp+10)^0,w,c
 10102  017BE2  B0D8               	btfsc	status,0,c
 10103  017BE4  D002               	goto	u5390
 10104  017BE6  0E01               	movlw	1
 10105  017BE8  D001               	goto	u5400
 10106  017BEA                     u5390:
 10107  017BEA  0E00               	movlw	0
 10108  017BEC                     u5400:
 10109  017BEC  6E3C               	movwf	(btemp+10)^0,c
 10110  017BEE  6A3D               	clrf	(btemp+11)^0,c
 10111                           
 10112                           ;stkvar	_toupper$5308 @ sp[(-2)+0]
 10113  017BF0  0EFE               	movlw	-2
 10114  017BF2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10115  017BF8  0EFF               	movlw	-1
 10116  017BFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10117                           
 10118                           ;stkvar	_toupper$5308 @ sp[(-2)+0]
 10119  017C00  0EFE               	movlw	-2
 10120  017C02  006F FF8C  F032    	movff	plusw1,btemp
 10121  017C08  0EFF               	movlw	-1
 10122  017C0A  50E3               	movf	plusw1,w,c
 10123  017C0C  1032               	iorwf	btemp^0,w,c
 10124  017C0E  B4D8               	btfsc	status,2,c
 10125  017C10  D00D               	goto	l6759
 10126                           
 10127                           ;stkvar	_c @ sp[(-2)+-2]
 10128  017C12  0EFC               	movlw	-4
 10129  017C14  006F FF8C  F032    	movff	plusw1,btemp
 10130  017C1A  0EFD               	movlw	-3
 10131  017C1C  006F FF8C  F033    	movff	plusw1,btemp+1
 10132  017C22  0E5F               	movlw	95
 10133  017C24  1632               	andwf	btemp^0,f,c
 10134  017C26  0E00               	movlw	0
 10135  017C28  1633               	andwf	(btemp+1)^0,f,c
 10136  017C2A  D008               	goto	l2964
 10137  017C2C                     l6759:
 10138                           
 10139                           ;stkvar	_c @ sp[(-2)+-2]
 10140  017C2C  0EFC               	movlw	-4
 10141  017C2E  006F FF8C  F032    	movff	plusw1,btemp
 10142  017C34  0EFD               	movlw	-3
 10143  017C36  006F FF8C  F033    	movff	plusw1,btemp+1
 10144  017C3C                     l2964:
 10145                           
 10146                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10147  017C3C  52E5               	movf	postdec1,f,c
 10148  017C3E  52E5               	movf	postdec1,f,c
 10149  017C40  52E5               	movf	postdec1,f,c
 10150  017C42  52E5               	movf	postdec1,f,c
 10151  017C44  0012               	return		;funcret
 10152  017C46                     __end_of_toupper:
 10153                           	opt callstack 0
 10154                           
 10155 ;; *************** function _islower *****************
 10156 ;; Defined at:
 10157 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  c               2  [STACK] int 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;		None
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  2  [STACK] int 
 10164 ;; Registers used:
 10165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10175 ;;Total ram usage:        0 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    6
 10178 ;; This function calls:
 10179 ;;		Nothing
 10180 ;; This function is called by:
 10181 ;;		_toupper
 10182 ;; This function uses a reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text42
 10186  0186BA                     __ptext42:
 10187                           	opt callstack 0
 10188  0186BA                     _islower:
 10189                           	opt callstack 16
 10190                           
 10191                           ;stkvar	_c @ sp[(0)+-2]
 10192                           
 10193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10194                           ;incstack = 0
 10195  0186BA  0EFE               	movlw	-2
 10196  0186BC  50E3               	movf	plusw1,w,c
 10197  0186BE  0F9F               	addlw	159
 10198  0186C0  6E3C               	movwf	(btemp+10)^0,c
 10199  0186C2  0EFF               	movlw	-1
 10200  0186C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 10201  0186CA  0EFF               	movlw	255
 10202  0186CC  223D               	addwfc	(btemp+11)^0,f,c
 10203  0186CE  503D               	movf	(btemp+11)^0,w,c
 10204  0186D0  E106               	bnz	u5080
 10205  0186D2  0E1A               	movlw	26
 10206  0186D4  5C3C               	subwf	(btemp+10)^0,w,c
 10207  0186D6  B0D8               	btfsc	status,0,c
 10208  0186D8  D002               	goto	u5080
 10209  0186DA  0E01               	movlw	1
 10210  0186DC  D001               	goto	u5090
 10211  0186DE                     u5080:
 10212  0186DE  0E00               	movlw	0
 10213  0186E0                     u5090:
 10214  0186E0  6E32               	movwf	btemp^0,c
 10215  0186E2  6A33               	clrf	(btemp+1)^0,c
 10216                           
 10217                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10218  0186E4  52E5               	movf	postdec1,f,c
 10219  0186E6  52E5               	movf	postdec1,f,c
 10220  0186E8  0012               	return		;funcret
 10221  0186EA                     __end_of_islower:
 10222                           	opt callstack 0
 10223                           
 10224 ;; *************** function _isalpha *****************
 10225 ;; Defined at:
 10226 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  c               2  [STACK] int 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;		None
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  2  [STACK] int 
 10233 ;; Registers used:
 10234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10244 ;;Total ram usage:        0 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    6
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_xtoa
 10251 ;; This function uses a reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text43
 10255  01842E                     __ptext43:
 10256                           	opt callstack 0
 10257  01842E                     _isalpha:
 10258                           	opt callstack 17
 10259                           
 10260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10261                           ;incstack = 0
 10262  01842E  0E9F               	movlw	159
 10263  018430  6E3C               	movwf	(btemp+10)^0,c
 10264  018432  0EFF               	movlw	255
 10265  018434  6E3D               	movwf	(btemp+11)^0,c
 10266                           
 10267                           ;stkvar	_c @ sp[(0)+-2]
 10268  018436  0EFE               	movlw	-2
 10269  018438  006F FF8C  F03A    	movff	plusw1,btemp+8
 10270  01843E  0EFF               	movlw	-1
 10271  018440  006F FF8C  F03B    	movff	plusw1,btemp+9
 10272  018446  0E20               	movlw	32
 10273  018448  123A               	iorwf	(btemp+8)^0,f,c
 10274  01844A  0E00               	movlw	0
 10275  01844C  123B               	iorwf	(btemp+9)^0,f,c
 10276  01844E  503C               	movf	(btemp+10)^0,w,c
 10277  018450  263A               	addwf	(btemp+8)^0,f,c
 10278  018452  503D               	movf	(btemp+11)^0,w,c
 10279  018454  223B               	addwfc	(btemp+9)^0,f,c
 10280  018456  503B               	movf	(btemp+9)^0,w,c
 10281  018458  E106               	bnz	u5370
 10282  01845A  0E1A               	movlw	26
 10283  01845C  5C3A               	subwf	(btemp+8)^0,w,c
 10284  01845E  B0D8               	btfsc	status,0,c
 10285  018460  D002               	goto	u5370
 10286  018462  0E01               	movlw	1
 10287  018464  D001               	goto	u5380
 10288  018466                     u5370:
 10289  018466  0E00               	movlw	0
 10290  018468                     u5380:
 10291  018468  6E32               	movwf	btemp^0,c
 10292  01846A  6A33               	clrf	(btemp+1)^0,c
 10293                           
 10294                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10295  01846C  52E5               	movf	postdec1,f,c
 10296  01846E  52E5               	movf	postdec1,f,c
 10297  018470  0012               	return		;funcret
 10298  018472                     __end_of_isalpha:
 10299                           	opt callstack 0
 10300                           
 10301 ;; *************** function _strncmp *****************
 10302 ;; Defined at:
 10303 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  _l              2  [STACK] PTR const unsigned char 
 10306 ;;		 -> ct(3), 
 10307 ;;  _r              2  [STACK] PTR const unsigned char 
 10308 ;;		 -> STR_56(3), 
 10309 ;;  n               2  [STACK] unsigned int 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  r               2  [STACK] PTR const unsigned char 
 10312 ;;		 -> STR_56(3), 
 10313 ;;  l               2  [STACK] PTR const unsigned char 
 10314 ;;		 -> ct(3), 
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  2  [STACK] int 
 10317 ;; Registers used:
 10318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/5
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10328 ;;Total ram usage:        0 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:    6
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_vfpfcnvrt
 10335 ;; This function uses a reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text44
 10339  015F4A                     __ptext44:
 10340                           	opt callstack 0
 10341  015F4A                     _strncmp:
 10342                           	opt callstack 0
 10343                           
 10344                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10345  015F4A  52E6               	movf	postinc1,f,c
 10346  015F4C  52E6               	movf	postinc1,f,c
 10347  015F4E  52E6               	movf	postinc1,f,c
 10348  015F50  52E6               	movf	postinc1,f,c
 10349                           
 10350                           ;stkvar	__l @ sp[(-4)+-2]
 10351                           
 10352                           ;incstack = 0
 10353  015F52  0EFA               	movlw	-6
 10354  015F54  006F FF8C  F03C    	movff	plusw1,btemp+10
 10355  015F5A  0EFB               	movlw	-5
 10356  015F5C  006F FF8C  F03D    	movff	plusw1,btemp+11
 10357                           
 10358                           ;stkvar	_l @ sp[(-4)+2]
 10359  015F62  0EFF               	movlw	-1
 10360  015F64  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10361  015F6A  0EFE               	movlw	-2
 10362  015F6C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10363                           
 10364                           ;stkvar	__r @ sp[(-4)+-4]
 10365  015F72  0EF8               	movlw	-8
 10366  015F74  006F FF8C  F03C    	movff	plusw1,btemp+10
 10367  015F7A  0EF9               	movlw	-7
 10368  015F7C  006F FF8C  F03D    	movff	plusw1,btemp+11
 10369                           
 10370                           ;stkvar	_r @ sp[(-4)+0]
 10371  015F82  0EFD               	movlw	-3
 10372  015F84  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10373  015F8A  0EFC               	movlw	-4
 10374  015F8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10375                           
 10376                           ;stkvar	_n @ sp[(-4)+-6]
 10377  015F92  0EF6               	movlw	-10
 10378  015F94  006F FF8C  F032    	movff	plusw1,btemp
 10379  015F9A  0E01               	movlw	1
 10380  015F9C  5E32               	subwf	btemp^0,f,c
 10381  015F9E  0EF6               	movlw	-10
 10382  015FA0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10383  015FA6  0EF7               	movlw	-9
 10384  015FA8  006F FF8C  F032    	movff	plusw1,btemp
 10385  015FAE  0E00               	movlw	0
 10386  015FB0  5A32               	subwfb	btemp^0,f,c
 10387  015FB2  0EF7               	movlw	-9
 10388  015FB4  0060  F0CB  FFE3   	movff	btemp,plusw1
 10389  015FBA  0EF6               	movlw	-10
 10390  015FBC  28E3               	incf	plusw1,w,c
 10391  015FBE  E13F               	bnz	l7917
 10392  015FC0  0EF7               	movlw	-9
 10393  015FC2  28E3               	incf	plusw1,w,c
 10394  015FC4  A4D8               	btfss	status,2,c
 10395  015FC6  D03B               	goto	l7917
 10396  015FC8  0E00               	movlw	0
 10397  015FCA  6E32               	movwf	btemp^0,c
 10398  015FCC  0E00               	movlw	0
 10399  015FCE  6E33               	movwf	(btemp+1)^0,c
 10400  015FD0  D09B               	goto	l2936
 10401  015FD2                     l7915:
 10402                           
 10403                           ;stkvar	_l @ sp[(-4)+2]
 10404  015FD2  0EFE               	movlw	-2
 10405  015FD4  50E3               	movf	plusw1,w,c
 10406  015FD6  0F01               	addlw	1
 10407  015FD8  6E32               	movwf	btemp^0,c
 10408  015FDA  0EFE               	movlw	-2
 10409  015FDC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10410  015FE2  6A32               	clrf	btemp^0,c
 10411  015FE4  0EFF               	movlw	-1
 10412  015FE6  50E3               	movf	plusw1,w,c
 10413  015FE8  2032               	addwfc	btemp^0,w,c
 10414  015FEA  6E32               	movwf	btemp^0,c
 10415  015FEC  0EFF               	movlw	-1
 10416  015FEE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10417                           
 10418                           ;stkvar	_r @ sp[(-4)+0]
 10419  015FF4  0EFC               	movlw	-4
 10420  015FF6  50E3               	movf	plusw1,w,c
 10421  015FF8  0F01               	addlw	1
 10422  015FFA  6E32               	movwf	btemp^0,c
 10423  015FFC  0EFC               	movlw	-4
 10424  015FFE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10425  016004  6A32               	clrf	btemp^0,c
 10426  016006  0EFD               	movlw	-3
 10427  016008  50E3               	movf	plusw1,w,c
 10428  01600A  2032               	addwfc	btemp^0,w,c
 10429  01600C  6E32               	movwf	btemp^0,c
 10430  01600E  0EFD               	movlw	-3
 10431  016010  0060  F0CB  FFE3   	movff	btemp,plusw1
 10432                           
 10433                           ;stkvar	_n @ sp[(-4)+-6]
 10434  016016  0EF6               	movlw	-10
 10435  016018  006F FF8C  F032    	movff	plusw1,btemp
 10436  01601E  0E01               	movlw	1
 10437  016020  5E32               	subwf	btemp^0,f,c
 10438  016022  0EF6               	movlw	-10
 10439  016024  0060  F0CB  FFE3   	movff	btemp,plusw1
 10440  01602A  0EF7               	movlw	-9
 10441  01602C  006F FF8C  F032    	movff	plusw1,btemp
 10442  016032  0E00               	movlw	0
 10443  016034  5A32               	subwfb	btemp^0,f,c
 10444  016036  0EF7               	movlw	-9
 10445  016038  0060  F0CB  FFE3   	movff	btemp,plusw1
 10446  01603E                     l7917:
 10447                           
 10448                           ;stkvar	_l @ sp[(-4)+2]
 10449  01603E  0EFE               	movlw	-2
 10450  016040  006F FF8F FFD9     	movff	plusw1,fsr2l
 10451  016046  0EFF               	movlw	-1
 10452  016048  006F FF8F FFDA     	movff	plusw1,fsr2h
 10453  01604E  50DF               	movf	indf2,w,c
 10454  016050  B4D8               	btfsc	status,2,c
 10455  016052  D03B               	goto	u7570
 10456                           
 10457                           ;stkvar	_r @ sp[(-4)+0]
 10458  016054  50E1               	movf	fsr1l,w,c
 10459  016056  0FFC               	addlw	-4
 10460  016058  6ED9               	movwf	fsr2l,c
 10461  01605A  50E2               	movf	fsr1h,w,c
 10462  01605C  6EDA               	movwf	fsr2h,c
 10463  01605E  0EFF               	movlw	255
 10464  016060  22DA               	addwfc	fsr2h,f,c
 10465  016062  006F FF7B FFF6     	movff	postinc2,tblptrl
 10466  016068  006F FF77 FFF7     	movff	postdec2,tblptrh
 10467  01606E                     	if	0	;tblptru may be non-zero
 10468  01606E                     	endif
 10469  01606E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10470  01606E  0E00               	movlw	low (__mediumconst shr (0+16))
 10471  016070  6EF8               	movwf	tblptru,c
 10472  016072                     	endif
 10473  016072  0008               	tblrd		*
 10474  016074  50F5               	movf	tablat,w,c
 10475  016076  0900               	iorlw	0
 10476  016078  B4D8               	btfsc	status,2,c
 10477  01607A  D027               	goto	u7570
 10478                           
 10479                           ;stkvar	_n @ sp[(-4)+-6]
 10480  01607C  0EF6               	movlw	-10
 10481  01607E  006F FF8C  F032    	movff	plusw1,btemp
 10482  016084  0EF7               	movlw	-9
 10483  016086  50E3               	movf	plusw1,w,c
 10484  016088  1032               	iorwf	btemp^0,w,c
 10485  01608A  B4D8               	btfsc	status,2,c
 10486  01608C  D01E               	goto	u7570
 10487                           
 10488                           ;stkvar	_l @ sp[(-4)+2]
 10489  01608E  0EFE               	movlw	-2
 10490  016090  006F FF8F FFD9     	movff	plusw1,fsr2l
 10491  016096  0EFF               	movlw	-1
 10492  016098  006F FF8F FFDA     	movff	plusw1,fsr2h
 10493  01609E  50DF               	movf	indf2,w,c
 10494  0160A0  6E3D               	movwf	(btemp+11)^0,c
 10495                           
 10496                           ;stkvar	_r @ sp[(-4)+0]
 10497  0160A2  50E1               	movf	fsr1l,w,c
 10498  0160A4  0FFC               	addlw	-4
 10499  0160A6  6ED9               	movwf	fsr2l,c
 10500  0160A8  50E2               	movf	fsr1h,w,c
 10501  0160AA  6EDA               	movwf	fsr2h,c
 10502  0160AC  0EFF               	movlw	255
 10503  0160AE  22DA               	addwfc	fsr2h,f,c
 10504  0160B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10505  0160B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10506  0160BC                     	if	0	;tblptru may be non-zero
 10507  0160BC                     	endif
 10508  0160BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10509  0160BC  0E00               	movlw	low (__mediumconst shr (0+16))
 10510  0160BE  6EF8               	movwf	tblptru,c
 10511  0160C0                     	endif
 10512  0160C0  0008               	tblrd		*
 10513  0160C2  50F5               	movf	tablat,w,c
 10514  0160C4  183D               	xorwf	(btemp+11)^0,w,c
 10515  0160C6  B4D8               	btfsc	status,2,c
 10516  0160C8  D784               	goto	l7915
 10517  0160CA                     u7570:
 10518                           
 10519                           ;stkvar	_l @ sp[(-4)+2]
 10520  0160CA  0EFE               	movlw	-2
 10521  0160CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10522  0160D2  0EFF               	movlw	-1
 10523  0160D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10524  0160DA  50DF               	movf	indf2,w,c
 10525  0160DC  6E32               	movwf	btemp^0,c
 10526  0160DE  6A33               	clrf	(btemp+1)^0,c
 10527                           
 10528                           ;stkvar	_r @ sp[(-4)+0]
 10529  0160E0  50E1               	movf	fsr1l,w,c
 10530  0160E2  0FFC               	addlw	-4
 10531  0160E4  6ED9               	movwf	fsr2l,c
 10532  0160E6  50E2               	movf	fsr1h,w,c
 10533  0160E8  6EDA               	movwf	fsr2h,c
 10534  0160EA  0EFF               	movlw	255
 10535  0160EC  22DA               	addwfc	fsr2h,f,c
 10536  0160EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10537  0160F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10538  0160FA                     	if	0	;tblptru may be non-zero
 10539  0160FA                     	endif
 10540  0160FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10541  0160FA  0E00               	movlw	low (__mediumconst shr (0+16))
 10542  0160FC  6EF8               	movwf	tblptru,c
 10543  0160FE                     	endif
 10544  0160FE  0008               	tblrd		*
 10545  016100  50F5               	movf	tablat,w,c
 10546  016102  5E32               	subwf	btemp^0,f,c
 10547  016104  0E00               	movlw	0
 10548  016106  5A33               	subwfb	(btemp+1)^0,f,c
 10549  016108                     l2936:
 10550                           
 10551                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10552  016108  0EF6               	movlw	246
 10553  01610A  26E1               	addwf	fsr1l,f,c
 10554  01610C  0EFF               	movlw	255
 10555  01610E  22E2               	addwfc	fsr1h,f,c
 10556  016110  0012               	return		;funcret
 10557  016112                     __end_of_strncmp:
 10558                           	opt callstack 0
 10559                           
 10560 ;; *************** function _stoa *****************
 10561 ;; Defined at:
 10562 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10565 ;;		 -> f(6), NULL(0), 
 10566 ;;  s               2  [STACK] PTR unsigned char 
 10567 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10568 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
 10569 ;;		 -> STR_3(6), V(188), 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  nuls            7  [STACK] unsigned char [7]
 10572 ;;  l               2  [STACK] int 
 10573 ;;  p               2  [STACK] int 
 10574 ;;  cp              2  [STACK] PTR unsigned char 
 10575 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10576 ;;		 -> STR_27(12), D.lcd(216), D(218), T(144), 
 10577 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10578 ;;  w               2  [STACK] int 
 10579 ;;  i               2  [STACK] int 
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  2  [STACK] int 
 10582 ;; Registers used:
 10583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/5
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10593 ;;Total ram usage:        0 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:    9
 10596 ;; This function calls:
 10597 ;;		_fputc
 10598 ;;		_strlen
 10599 ;; This function is called by:
 10600 ;;		_vfpfcnvrt
 10601 ;; This function uses a reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text45
 10605  015142                     __ptext45:
 10606                           	opt callstack 0
 10607  015142                     _stoa:
 10608                           	opt callstack 0
 10609                           
 10610                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10611  015142  0E11               	movlw	17
 10612  015144  26E1               	addwf	fsr1l,f,c
 10613  015146  0E00               	movlw	0
 10614  015148  22E2               	addwfc	fsr1h,f,c
 10615                           
 10616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10617                           
 10618                           ;incstack = 0
 10619  01514A  EE20  F1D4         	lfsr	2,stoa@F1166
 10620                           
 10621                           ;stkvar	_nuls @ sp[(-17)+0]
 10622  01514E  0E07               	movlw	7
 10623  015150  6E32               	movwf	btemp^0,c
 10624  015152  0EEF               	movlw	-17
 10625  015154                     us991999:
 10626  015154  006F FF7B FFE3     	movff	postinc2,plusw1
 10627  01515A  28E8               	incf	wreg,w,c
 10628  01515C  2E32               	decfsz	btemp^0,f,c
 10629  01515E  D7FA               	bra	us991999
 10630                           
 10631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10632                           ;stkvar	_s @ sp[(-17)+-4]
 10633  015160  0EEB               	movlw	-21
 10634  015162  006F FF8C  F03C    	movff	plusw1,btemp+10
 10635  015168  0EEC               	movlw	-20
 10636  01516A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10637                           
 10638                           ;stkvar	_cp @ sp[(-17)+11]
 10639  015170  0EFB               	movlw	-5
 10640  015172  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10641  015178  0EFA               	movlw	-6
 10642  01517A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10643                           
 10644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10645                           ;stkvar	_cp @ sp[(-17)+11]
 10646  015180  0EFA               	movlw	-6
 10647  015182  006F FF8C  F032    	movff	plusw1,btemp
 10648  015188  0EFB               	movlw	-5
 10649  01518A  50E3               	movf	plusw1,w,c
 10650  01518C  1032               	iorwf	btemp^0,w,c
 10651  01518E  A4D8               	btfss	status,2,c
 10652  015190  D00E               	goto	l10199
 10653                           
 10654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10655                           ;stkvar	_nuls @ sp[(-17)+0]
 10656  015192  0EEF               	movlw	239
 10657  015194  24E1               	addwf	fsr1l,w,c
 10658  015196  6E3C               	movwf	(btemp+10)^0,c
 10659  015198  0EFF               	movlw	255
 10660  01519A  20E2               	addwfc	fsr1h,w,c
 10661  01519C  6E3D               	movwf	(btemp+11)^0,c
 10662                           
 10663                           ;stkvar	_cp @ sp[(-17)+11]
 10664  01519E  0EFB               	movlw	-5
 10665  0151A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10666  0151A6  0EFA               	movlw	-6
 10667  0151A8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10668  0151AE                     l10199:
 10669                           
 10670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10671                           ;stkvar	_cp @ sp[(-17)+11]
 10672  0151AE  0EFA               	movlw	-6
 10673  0151B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10674  0151B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10675  0151BC  EC26  F0BC         	call	_strlen	;wreg free
 10676                           
 10677                           ;stkvar	_l @ sp[(-17)+7]
 10678  0151C0  0EF6               	movlw	-10
 10679  0151C2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10680  0151C8  0EF7               	movlw	-9
 10681  0151CA  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10682                           
 10683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10684                           ;stkvar	_p @ sp[(-17)+9]
 10685  0151D0  0EF8               	movlw	-8
 10686  0151D2  0060  F077  FFE3   	movff	_prec,plusw1
 10687  0151D8  0EF9               	movlw	-7
 10688  0151DA  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10689                           
 10690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10691                           ;stkvar	_p @ sp[(-17)+9]
 10692  0151E0  0EF9               	movlw	-7
 10693  0151E2  BEE3               	btfsc	plusw1,7,c
 10694  0151E4  D023               	goto	l2010
 10695                           
 10696                           ;stkvar	_l @ sp[(-17)+7]
 10697                           ;stkvar	_p @ sp[(-17)+9]
 10698  0151E6  50E1               	movf	fsr1l,w,c
 10699  0151E8  0FF8               	addlw	-8
 10700  0151EA  6ED9               	movwf	fsr2l,c
 10701  0151EC  50E2               	movf	fsr1h,w,c
 10702  0151EE  6EDA               	movwf	fsr2h,c
 10703  0151F0  0EFF               	movlw	255
 10704  0151F2  22DA               	addwfc	fsr2h,f,c
 10705  0151F4  0EF6               	movlw	-10
 10706  0151F6  50E3               	movf	plusw1,w,c
 10707  0151F8  5CDE               	subwf	postinc2,w,c
 10708  0151FA  50DE               	movf	postinc2,w,c
 10709  0151FC  0A80               	xorlw	128
 10710  0151FE  6E32               	movwf	btemp^0,c
 10711  015200  0EF7               	movlw	-9
 10712  015202  50E3               	movf	plusw1,w,c
 10713  015204  0A80               	xorlw	128
 10714  015206  5832               	subwfb	btemp^0,w,c
 10715  015208  B0D8               	btfsc	status,0,c
 10716  01520A  D010               	goto	l2010
 10717                           
 10718                           ;stkvar	_p @ sp[(-17)+9]
 10719                           ;stkvar	_l @ sp[(-17)+7]
 10720  01520C  0EF8               	movlw	-8
 10721  01520E  006F FF8C  F032    	movff	plusw1,btemp
 10722  015214  0EF6               	movlw	-10
 10723  015216  0060  F0CB  FFE3   	movff	btemp,plusw1
 10724  01521C  0EF9               	movlw	-7
 10725  01521E  006F FF8C  F032    	movff	plusw1,btemp
 10726  015224  0EF7               	movlw	-9
 10727  015226  0060  F0CB  FFE3   	movff	btemp,plusw1
 10728  01522C                     l2010:
 10729                           
 10730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10731                           ;stkvar	_l @ sp[(-17)+7]
 10732                           ;stkvar	_p @ sp[(-17)+9]
 10733  01522C  0EF6               	movlw	-10
 10734  01522E  006F FF8C  F032    	movff	plusw1,btemp
 10735  015234  0EF8               	movlw	-8
 10736  015236  0060  F0CB  FFE3   	movff	btemp,plusw1
 10737  01523C  0EF7               	movlw	-9
 10738  01523E  006F FF8C  F032    	movff	plusw1,btemp
 10739  015244  0EF9               	movlw	-7
 10740  015246  0060  F0CB  FFE3   	movff	btemp,plusw1
 10741                           
 10742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10743                           ;stkvar	_w @ sp[(-17)+13]
 10744  01524C  0EFC               	movlw	-4
 10745  01524E  0060  F06F  FFE3   	movff	_width,plusw1
 10746  015254  0EFD               	movlw	-3
 10747  015256  0060  F073  FFE3   	movff	_width+1,plusw1
 10748                           
 10749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10750  01525C  A01F               	btfss	_flags^0,0,c
 10751  01525E  D01F               	goto	l10219
 10752  015260  D031               	goto	u9960
 10753  015262                     l10215:
 10754                           
 10755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10756                           ;stkvar	_fp @ sp[(-17)+-2]
 10757  015262  0EED               	movlw	-19
 10758  015264  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  01526A  006F FF8F FFE6     	movff	plusw1,postinc1
 10760  015270  0E20               	movlw	32
 10761  015272  6EE6               	movwf	postinc1,c
 10762  015274  0E00               	movlw	0
 10763  015276  6EE6               	movwf	postinc1,c
 10764  015278  EC80  F0B5         	call	_fputc	;wreg free
 10765                           
 10766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10767                           ;stkvar	_l @ sp[(-17)+7]
 10768  01527C  0EF6               	movlw	-10
 10769  01527E  50E3               	movf	plusw1,w,c
 10770  015280  0F01               	addlw	1
 10771  015282  6E32               	movwf	btemp^0,c
 10772  015284  0EF6               	movlw	-10
 10773  015286  0060  F0CB  FFE3   	movff	btemp,plusw1
 10774  01528C  6A32               	clrf	btemp^0,c
 10775  01528E  0EF7               	movlw	-9
 10776  015290  50E3               	movf	plusw1,w,c
 10777  015292  2032               	addwfc	btemp^0,w,c
 10778  015294  6E32               	movwf	btemp^0,c
 10779  015296  0EF7               	movlw	-9
 10780  015298  0060  F0CB  FFE3   	movff	btemp,plusw1
 10781  01529E                     l10219:
 10782                           
 10783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10784                           ;stkvar	_w @ sp[(-17)+13]
 10785                           ;stkvar	_l @ sp[(-17)+7]
 10786  01529E  50E1               	movf	fsr1l,w,c
 10787  0152A0  0FF6               	addlw	-10
 10788  0152A2  6ED9               	movwf	fsr2l,c
 10789  0152A4  50E2               	movf	fsr1h,w,c
 10790  0152A6  6EDA               	movwf	fsr2h,c
 10791  0152A8  0EFF               	movlw	255
 10792  0152AA  22DA               	addwfc	fsr2h,f,c
 10793  0152AC  0EFC               	movlw	-4
 10794  0152AE  50E3               	movf	plusw1,w,c
 10795  0152B0  5CDE               	subwf	postinc2,w,c
 10796  0152B2  50DE               	movf	postinc2,w,c
 10797  0152B4  0A80               	xorlw	128
 10798  0152B6  6E32               	movwf	btemp^0,c
 10799  0152B8  0EFD               	movlw	-3
 10800  0152BA  50E3               	movf	plusw1,w,c
 10801  0152BC  0A80               	xorlw	128
 10802  0152BE  5832               	subwfb	btemp^0,w,c
 10803  0152C0  A0D8               	btfss	status,0,c
 10804  0152C2  D7CF               	goto	l10215
 10805  0152C4                     u9960:
 10806                           
 10807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10808                           ;stkvar	_i @ sp[(-17)+15]
 10809  0152C4  0EFE               	movlw	-2
 10810  0152C6  6AE3               	clrf	plusw1,c
 10811  0152C8  0EFF               	movlw	-1
 10812  0152CA  6AE3               	clrf	plusw1,c
 10813                           
 10814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10815  0152CC  D045               	goto	l10229
 10816  0152CE                     l10223:
 10817                           
 10818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10819                           ;stkvar	_fp @ sp[(-17)+-2]
 10820  0152CE  0EED               	movlw	-19
 10821  0152D0  006F FF8F FFE6     	movff	plusw1,postinc1
 10822  0152D6  006F FF8F FFE6     	movff	plusw1,postinc1
 10823                           
 10824                           ;stkvar	_cp @ sp[(-19)+11]
 10825  0152DC  0EF8               	movlw	-8
 10826  0152DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 10827  0152E4  0EF9               	movlw	-7
 10828  0152E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 10829  0152EC  0E00               	movlw	low (__mediumconst shr (0+16))
 10830  0152EE  6EF8               	movwf	tblptru,c
 10831  0152F0  0E1F               	movlw	(high __ramtop+-1)
 10832  0152F2  64F7               	cpfsgt	tblptrh,c
 10833  0152F4  D003               	bra	u9977
 10834  0152F6  0008               	tblrd		*
 10835  0152F8  50F5               	movf	tablat,w,c
 10836  0152FA  D007               	bra	u9970
 10837  0152FC                     u9977:
 10838  0152FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10839  015302  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10840  015308  50EF               	movf	indf0,w,c
 10841  01530A                     u9970:
 10842  01530A  6EE6               	movwf	postinc1,c
 10843  01530C  0E00               	movlw	0
 10844  01530E  6EE6               	movwf	postinc1,c
 10845  015310  EC80  F0B5         	call	_fputc	;wreg free
 10846                           
 10847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10848                           ;stkvar	_cp @ sp[(-17)+11]
 10849  015314  0EFA               	movlw	-6
 10850  015316  50E3               	movf	plusw1,w,c
 10851  015318  0F01               	addlw	1
 10852  01531A  6E32               	movwf	btemp^0,c
 10853  01531C  0EFA               	movlw	-6
 10854  01531E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10855  015324  6A32               	clrf	btemp^0,c
 10856  015326  0EFB               	movlw	-5
 10857  015328  50E3               	movf	plusw1,w,c
 10858  01532A  2032               	addwfc	btemp^0,w,c
 10859  01532C  6E32               	movwf	btemp^0,c
 10860  01532E  0EFB               	movlw	-5
 10861  015330  0060  F0CB  FFE3   	movff	btemp,plusw1
 10862                           
 10863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10864                           ;stkvar	_i @ sp[(-17)+15]
 10865  015336  0EFE               	movlw	-2
 10866  015338  50E3               	movf	plusw1,w,c
 10867  01533A  0F01               	addlw	1
 10868  01533C  6E32               	movwf	btemp^0,c
 10869  01533E  0EFE               	movlw	-2
 10870  015340  0060  F0CB  FFE3   	movff	btemp,plusw1
 10871  015346  6A32               	clrf	btemp^0,c
 10872  015348  0EFF               	movlw	-1
 10873  01534A  50E3               	movf	plusw1,w,c
 10874  01534C  2032               	addwfc	btemp^0,w,c
 10875  01534E  6E32               	movwf	btemp^0,c
 10876  015350  0EFF               	movlw	-1
 10877  015352  0060  F0CB  FFE3   	movff	btemp,plusw1
 10878  015358                     l10229:
 10879                           
 10880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10881                           ;stkvar	_p @ sp[(-17)+9]
 10882                           ;stkvar	_i @ sp[(-17)+15]
 10883  015358  50E1               	movf	fsr1l,w,c
 10884  01535A  0FFE               	addlw	-2
 10885  01535C  6ED9               	movwf	fsr2l,c
 10886  01535E  50E2               	movf	fsr1h,w,c
 10887  015360  6EDA               	movwf	fsr2h,c
 10888  015362  0EFF               	movlw	255
 10889  015364  22DA               	addwfc	fsr2h,f,c
 10890  015366  0EF8               	movlw	-8
 10891  015368  50E3               	movf	plusw1,w,c
 10892  01536A  5CDE               	subwf	postinc2,w,c
 10893  01536C  50DE               	movf	postinc2,w,c
 10894  01536E  0A80               	xorlw	128
 10895  015370  6E32               	movwf	btemp^0,c
 10896  015372  0EF9               	movlw	-7
 10897  015374  50E3               	movf	plusw1,w,c
 10898  015376  0A80               	xorlw	128
 10899  015378  5832               	subwfb	btemp^0,w,c
 10900  01537A  A0D8               	btfss	status,0,c
 10901  01537C  D7A8               	goto	l10223
 10902                           
 10903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10904  01537E  B01F               	btfsc	_flags^0,0,c
 10905  015380  D01F               	goto	l10237
 10906  015382  D031               	goto	u10000
 10907  015384                     l10233:
 10908                           
 10909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10910                           ;stkvar	_fp @ sp[(-17)+-2]
 10911  015384  0EED               	movlw	-19
 10912  015386  006F FF8F FFE6     	movff	plusw1,postinc1
 10913  01538C  006F FF8F FFE6     	movff	plusw1,postinc1
 10914  015392  0E20               	movlw	32
 10915  015394  6EE6               	movwf	postinc1,c
 10916  015396  0E00               	movlw	0
 10917  015398  6EE6               	movwf	postinc1,c
 10918  01539A  EC80  F0B5         	call	_fputc	;wreg free
 10919                           
 10920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10921                           ;stkvar	_l @ sp[(-17)+7]
 10922  01539E  0EF6               	movlw	-10
 10923  0153A0  50E3               	movf	plusw1,w,c
 10924  0153A2  0F01               	addlw	1
 10925  0153A4  6E32               	movwf	btemp^0,c
 10926  0153A6  0EF6               	movlw	-10
 10927  0153A8  0060  F0CB  FFE3   	movff	btemp,plusw1
 10928  0153AE  6A32               	clrf	btemp^0,c
 10929  0153B0  0EF7               	movlw	-9
 10930  0153B2  50E3               	movf	plusw1,w,c
 10931  0153B4  2032               	addwfc	btemp^0,w,c
 10932  0153B6  6E32               	movwf	btemp^0,c
 10933  0153B8  0EF7               	movlw	-9
 10934  0153BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10935  0153C0                     l10237:
 10936                           
 10937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10938                           ;stkvar	_w @ sp[(-17)+13]
 10939                           ;stkvar	_l @ sp[(-17)+7]
 10940  0153C0  50E1               	movf	fsr1l,w,c
 10941  0153C2  0FF6               	addlw	-10
 10942  0153C4  6ED9               	movwf	fsr2l,c
 10943  0153C6  50E2               	movf	fsr1h,w,c
 10944  0153C8  6EDA               	movwf	fsr2h,c
 10945  0153CA  0EFF               	movlw	255
 10946  0153CC  22DA               	addwfc	fsr2h,f,c
 10947  0153CE  0EFC               	movlw	-4
 10948  0153D0  50E3               	movf	plusw1,w,c
 10949  0153D2  5CDE               	subwf	postinc2,w,c
 10950  0153D4  50DE               	movf	postinc2,w,c
 10951  0153D6  0A80               	xorlw	128
 10952  0153D8  6E32               	movwf	btemp^0,c
 10953  0153DA  0EFD               	movlw	-3
 10954  0153DC  50E3               	movf	plusw1,w,c
 10955  0153DE  0A80               	xorlw	128
 10956  0153E0  5832               	subwfb	btemp^0,w,c
 10957  0153E2  A0D8               	btfss	status,0,c
 10958  0153E4  D7CF               	goto	l10233
 10959  0153E6                     u10000:
 10960                           
 10961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10962                           ;stkvar	_l @ sp[(-17)+7]
 10963  0153E6  0EF6               	movlw	-10
 10964  0153E8  006F FF8C  F032    	movff	plusw1,btemp
 10965  0153EE  0EF7               	movlw	-9
 10966  0153F0  006F FF8C  F033    	movff	plusw1,btemp+1
 10967                           
 10968                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10969  0153F6  0EEB               	movlw	235
 10970  0153F8  26E1               	addwf	fsr1l,f,c
 10971  0153FA  0EFF               	movlw	255
 10972  0153FC  22E2               	addwfc	fsr1h,f,c
 10973  0153FE  0012               	return		;funcret
 10974  015400                     __end_of_stoa:
 10975                           	opt callstack 0
 10976                           
 10977 ;; *************** function _efgtoa *****************
 10978 ;; Defined at:
 10979 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10982 ;;		 -> f(6), NULL(0), 
 10983 ;;  f               4  [STACK] PTR struct _IO_FILE
 10984 ;;  c               1  [STACK] unsigned char 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;  u               4  [STACK] unsigned char 
 10987 ;;  g               4  [STACK] unsigned char 
 10988 ;;  l               4  [STACK] unsigned char 
 10989 ;;  h               4  [STACK] unsigned char 
 10990 ;;  ou              4  [STACK] unsigned char 
 10991 ;;  n               2  [STACK] int 
 10992 ;;  e               2  [STACK] int 
 10993 ;;  i               2  [STACK] int 
 10994 ;;  w               2  [STACK] int 
 10995 ;;  p               2  [STACK] int 
 10996 ;;  sign            2  [STACK] int 
 10997 ;;  d               2  [STACK] int 
 10998 ;;  ne              2  [STACK] int 
 10999 ;;  m               2  [STACK] int 
 11000 ;;  pp              2  [STACK] int 
 11001 ;;  t               2  [STACK] int 
 11002 ;;  mode            1  [STACK] unsigned char 
 11003 ;;  nmode           1  [STACK] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  2  [STACK] int 
 11006 ;; Registers used:
 11007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/5
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11017 ;;Total ram usage:        0 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:   11
 11020 ;; This function calls:
 11021 ;;		___awdiv
 11022 ;;		___awmod
 11023 ;;		___fladd
 11024 ;;		___fldiv
 11025 ;;		___fleq
 11026 ;;		___flge
 11027 ;;		___flmul
 11028 ;;		___flneg
 11029 ;;		___flsub
 11030 ;;		___fltol
 11031 ;;		___fpclassifyf
 11032 ;;		_floorf
 11033 ;;		_isupper
 11034 ;;		_pad
 11035 ;;		_strcpy
 11036 ;;		_tolower
 11037 ;; This function is called by:
 11038 ;;		_vfpfcnvrt
 11039 ;; This function uses a reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text46
 11043  010000                     __ptext46:
 11044                           	opt callstack 0
 11045  010000                     _efgtoa:
 11046                           	opt callstack 0
 11047                           
 11048                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11049  010000  0E38               	movlw	56
 11050  010002  26E1               	addwf	fsr1l,f,c
 11051  010004  0E00               	movlw	0
 11052  010006  22E2               	addwfc	fsr1h,f,c
 11053                           
 11054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11055                           ;stkvar	_sign @ sp[(-56)+42]
 11056                           
 11057                           ;incstack = 0
 11058  010008  0EF2               	movlw	-14
 11059  01000A  6AE3               	clrf	plusw1,c
 11060  01000C  0EF3               	movlw	-13
 11061  01000E  6AE3               	clrf	plusw1,c
 11062                           
 11063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11064                           ;stkvar	_f @ sp[(-56)+-6]
 11065  010010  0EC2               	movlw	-62
 11066  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 11067  010018  0EC3               	movlw	-61
 11068  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 11069  010020  0EC4               	movlw	-60
 11070  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 11071  010028  0EC5               	movlw	-59
 11072  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 11073                           
 11074                           ;stkvar	_g @ sp[(-56)+16]
 11075  010030  0ED8               	movlw	-40
 11076  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11077  010038  0ED9               	movlw	-39
 11078  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11079  010040  0EDA               	movlw	-38
 11080  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11081  010048  0EDB               	movlw	-37
 11082  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11083                           
 11084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11085                           ;stkvar	_g @ sp[(-56)+16]
 11086  010050  0EDB               	movlw	-37
 11087  010052  AEE3               	btfss	plusw1,7,c
 11088  010054  D02B               	goto	l9897
 11089                           
 11090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11091  010056  0E01               	movlw	1
 11092  010058  6E3C               	movwf	(btemp+10)^0,c
 11093  01005A  0E00               	movlw	0
 11094  01005C  6E3D               	movwf	(btemp+11)^0,c
 11095                           
 11096                           ;stkvar	_sign @ sp[(-56)+42]
 11097  01005E  0EF2               	movlw	-14
 11098  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11099  010066  0EF3               	movlw	-13
 11100  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11103                           ;stkvar	_g @ sp[(-56)+16]
 11104  01006E  0ED8               	movlw	-40
 11105  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11106  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11107  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11108  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11109  010088  EC44  F0C1         	call	___flneg	;wreg free
 11110                           
 11111                           ;stkvar	_g @ sp[(-56)+16]
 11112  01008C  0ED8               	movlw	-40
 11113  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11114  010094  0ED9               	movlw	-39
 11115  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11116  01009C  0EDA               	movlw	-38
 11117  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11118  0100A4  0EDB               	movlw	-37
 11119  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11120  0100AC                     l9897:
 11121                           
 11122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11123                           ;stkvar	_n @ sp[(-56)+32]
 11124  0100AC  0EE8               	movlw	-24
 11125  0100AE  6AE3               	clrf	plusw1,c
 11126  0100B0  0EE9               	movlw	-23
 11127  0100B2  6AE3               	clrf	plusw1,c
 11128                           
 11129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11130                           ;stkvar	_w @ sp[(-56)+38]
 11131  0100B4  0EEE               	movlw	-18
 11132  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 11133  0100BC  0EEF               	movlw	-17
 11134  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 11135                           
 11136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11137                           ;stkvar	_sign @ sp[(-56)+42]
 11138  0100C4  0EF2               	movlw	-14
 11139  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 11140  0100CC  0EF3               	movlw	-13
 11141  0100CE  50E3               	movf	plusw1,w,c
 11142  0100D0  1032               	iorwf	btemp^0,w,c
 11143  0100D2  A4D8               	btfss	status,2,c
 11144  0100D4  D002               	goto	u9410
 11145  0100D6  A41F               	btfss	_flags^0,2,c
 11146  0100D8  D036               	goto	l9917
 11147  0100DA                     u9410:
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11150                           ;stkvar	_sign @ sp[(-56)+42]
 11151  0100DA  0EF2               	movlw	-14
 11152  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 11153  0100E2  0EF3               	movlw	-13
 11154  0100E4  50E3               	movf	plusw1,w,c
 11155  0100E6  1032               	iorwf	btemp^0,w,c
 11156  0100E8  A4D8               	btfss	status,2,c
 11157  0100EA  D002               	goto	l9909
 11158  0100EC  0E2B               	movlw	43
 11159  0100EE  D001               	goto	L9
 11160  0100F0                     l9909:
 11161  0100F0  0E2D               	movlw	45
 11162  0100F2                     L9:
 11163  0100F2  6E3C               	movwf	(btemp+10)^0,c
 11164  0100F4  0E00               	movlw	0
 11165  0100F6  6E3D               	movwf	(btemp+11)^0,c
 11166                           
 11167                           ;stkvar	_efgtoa$4616 @ sp[(-56)+10]
 11168  0100F8  0ED2               	movlw	-46
 11169  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11170  010100  0ED3               	movlw	-45
 11171  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11172                           
 11173                           ;stkvar	_efgtoa$4616 @ sp[(-56)+10]
 11174  010108  0ED2               	movlw	-46
 11175  01010A  006F FF8C  F17C    	movff	plusw1,_dbuf
 11176                           
 11177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11178                           ;stkvar	_n @ sp[(-56)+32]
 11179  010110  0EE8               	movlw	-24
 11180  010112  50E3               	movf	plusw1,w,c
 11181  010114  0F01               	addlw	1
 11182  010116  6E32               	movwf	btemp^0,c
 11183  010118  0EE8               	movlw	-24
 11184  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11185  010120  6A32               	clrf	btemp^0,c
 11186  010122  0EE9               	movlw	-23
 11187  010124  50E3               	movf	plusw1,w,c
 11188  010126  2032               	addwfc	btemp^0,w,c
 11189  010128  6E32               	movwf	btemp^0,c
 11190  01012A  0EE9               	movlw	-23
 11191  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11192                           
 11193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11194                           ;stkvar	_w @ sp[(-56)+38]
 11195  010132  50E1               	movf	fsr1l,w,c
 11196  010134  0FEE               	addlw	-18
 11197  010136  6ED9               	movwf	fsr2l,c
 11198  010138  50E2               	movf	fsr1h,w,c
 11199  01013A  6EDA               	movwf	fsr2h,c
 11200  01013C  0EFF               	movlw	255
 11201  01013E  22DA               	addwfc	fsr2h,f,c
 11202  010140  06DE               	decf	postinc2,f,c
 11203  010142  0E00               	movlw	0
 11204  010144  5ADD               	subwfb	postdec2,f,c
 11205  010146                     l9917:
 11206                           
 11207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11208                           ;stkvar	_g @ sp[(-56)+16]
 11209  010146  0ED8               	movlw	-40
 11210  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11211  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11213  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11214  010160  EC69  F0B1         	call	___fpclassifyf	;wreg free
 11215  010164  0432               	decf	btemp^0,w,c
 11216  010166  1033               	iorwf	(btemp+1)^0,w,c
 11217  010168  A4D8               	btfss	status,2,c
 11218  01016A  D076               	goto	l9935
 11219  01016C  0EBF               	movlw	191
 11220  01016E  6E3C               	movwf	(btemp+10)^0,c
 11221  010170  0EFF               	movlw	255
 11222  010172  6E3D               	movwf	(btemp+11)^0,c
 11223                           
 11224                           ;stkvar	_c @ sp[(-56)+-7]
 11225  010174  0EC1               	movlw	-63
 11226  010176  50E3               	movf	plusw1,w,c
 11227  010178  6E3A               	movwf	(btemp+8)^0,c
 11228  01017A  6A3B               	clrf	(btemp+9)^0,c
 11229  01017C  503C               	movf	(btemp+10)^0,w,c
 11230  01017E  263A               	addwf	(btemp+8)^0,f,c
 11231  010180  503D               	movf	(btemp+11)^0,w,c
 11232  010182  223B               	addwfc	(btemp+9)^0,f,c
 11233  010184  503B               	movf	(btemp+9)^0,w,c
 11234  010186  E106               	bnz	u9440
 11235  010188  0E1A               	movlw	26
 11236  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 11237  01018C  B0D8               	btfsc	status,0,c
 11238  01018E  D002               	goto	u9440
 11239  010190  0E01               	movlw	1
 11240  010192  D001               	goto	u9450
 11241  010194                     u9440:
 11242  010194  0E00               	movlw	0
 11243  010196                     u9450:
 11244  010196  6E3C               	movwf	(btemp+10)^0,c
 11245  010198  6A3D               	clrf	(btemp+11)^0,c
 11246                           
 11247                           ;stkvar	_efgtoa$4617 @ sp[(-56)+8]
 11248  01019A  0ED0               	movlw	-48
 11249  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11250  0101A2  0ED1               	movlw	-47
 11251  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11252                           
 11253                           ;stkvar	_efgtoa$4617 @ sp[(-56)+8]
 11254  0101AA  0ED0               	movlw	-48
 11255  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 11256  0101B2  0ED1               	movlw	-47
 11257  0101B4  50E3               	movf	plusw1,w,c
 11258  0101B6  1032               	iorwf	btemp^0,w,c
 11259  0101B8  B4D8               	btfsc	status,2,c
 11260  0101BA  D017               	goto	l9927
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11263  0101BC  0EE6               	movlw	low STR_46
 11264  0101BE  6EE6               	movwf	postinc1,c
 11265  0101C0  0EFF               	movlw	high STR_46
 11266  0101C2  6EE6               	movwf	postinc1,c
 11267                           
 11268                           ;stkvar	_n @ sp[(-58)+32]
 11269  0101C4  0E7C               	movlw	low _dbuf
 11270  0101C6  6E3C               	movwf	(btemp+10)^0,c
 11271  0101C8  0E01               	movlw	high _dbuf
 11272  0101CA  6E3D               	movwf	(btemp+11)^0,c
 11273  0101CC  0EE6               	movlw	-26
 11274  0101CE  50E3               	movf	plusw1,w,c
 11275  0101D0  263C               	addwf	(btemp+10)^0,f,c
 11276  0101D2  0EE7               	movlw	-25
 11277  0101D4  50E3               	movf	plusw1,w,c
 11278  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 11279  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11280  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11281  0101E4  ECA4  F0B9         	call	_strcpy	;wreg free
 11282                           
 11283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11284  0101E8  D016               	goto	l9929
 11285  0101EA                     l9927:
 11286                           
 11287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11288  0101EA  0EEE               	movlw	low STR_47
 11289  0101EC  6EE6               	movwf	postinc1,c
 11290  0101EE  0EFF               	movlw	high STR_47
 11291  0101F0  6EE6               	movwf	postinc1,c
 11292                           
 11293                           ;stkvar	_n @ sp[(-58)+32]
 11294  0101F2  0E7C               	movlw	low _dbuf
 11295  0101F4  6E3C               	movwf	(btemp+10)^0,c
 11296  0101F6  0E01               	movlw	high _dbuf
 11297  0101F8  6E3D               	movwf	(btemp+11)^0,c
 11298  0101FA  0EE6               	movlw	-26
 11299  0101FC  50E3               	movf	plusw1,w,c
 11300  0101FE  263C               	addwf	(btemp+10)^0,f,c
 11301  010200  0EE7               	movlw	-25
 11302  010202  50E3               	movf	plusw1,w,c
 11303  010204  223D               	addwfc	(btemp+11)^0,f,c
 11304  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11305  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11306  010212  ECA4  F0B9         	call	_strcpy	;wreg free
 11307  010216                     l9929:
 11308                           
 11309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11310                           ;stkvar	_w @ sp[(-56)+38]
 11311  010216  50E1               	movf	fsr1l,w,c
 11312  010218  0FEE               	addlw	-18
 11313  01021A  6ED9               	movwf	fsr2l,c
 11314  01021C  50E2               	movf	fsr1h,w,c
 11315  01021E  6EDA               	movwf	fsr2h,c
 11316  010220  0EFF               	movlw	255
 11317  010222  22DA               	addwfc	fsr2h,f,c
 11318  010224  0EFD               	movlw	253
 11319  010226  26DE               	addwf	postinc2,f,c
 11320  010228  0EFF               	movlw	255
 11321  01022A  22DD               	addwfc	postdec2,f,c
 11322  01022C                     l9931:
 11323                           
 11324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11325                           ;stkvar	_w @ sp[(-56)+38]
 11326  01022C  0EEE               	movlw	-18
 11327  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11328  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11329  01023A  0E7C               	movlw	low _dbuf
 11330  01023C  6EE6               	movwf	postinc1,c
 11331  01023E  0E01               	movlw	high _dbuf
 11332  010240  6EE6               	movwf	postinc1,c
 11333                           
 11334                           ;stkvar	_fp @ sp[(-60)+-2]
 11335  010242  0EC2               	movlw	-62
 11336  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11337  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11338  010250  EC9E  F0B6         	call	_pad	;wreg free
 11339  010254  EF1D  F089         	goto	l1928
 11340  010258                     l9935:
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11343                           ;stkvar	_g @ sp[(-56)+16]
 11344  010258  0ED8               	movlw	-40
 11345  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11346  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11347  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11348  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11349  010272  EC69  F0B1         	call	___fpclassifyf	;wreg free
 11350  010276  5032               	movf	btemp^0,w,c
 11351  010278  1033               	iorwf	(btemp+1)^0,w,c
 11352  01027A  A4D8               	btfss	status,2,c
 11353  01027C  D056               	goto	l9953
 11354  01027E  0EBF               	movlw	191
 11355  010280  6E3C               	movwf	(btemp+10)^0,c
 11356  010282  0EFF               	movlw	255
 11357  010284  6E3D               	movwf	(btemp+11)^0,c
 11358                           
 11359                           ;stkvar	_c @ sp[(-56)+-7]
 11360  010286  0EC1               	movlw	-63
 11361  010288  50E3               	movf	plusw1,w,c
 11362  01028A  6E3A               	movwf	(btemp+8)^0,c
 11363  01028C  6A3B               	clrf	(btemp+9)^0,c
 11364  01028E  503C               	movf	(btemp+10)^0,w,c
 11365  010290  263A               	addwf	(btemp+8)^0,f,c
 11366  010292  503D               	movf	(btemp+11)^0,w,c
 11367  010294  223B               	addwfc	(btemp+9)^0,f,c
 11368  010296  503B               	movf	(btemp+9)^0,w,c
 11369  010298  E106               	bnz	u9480
 11370  01029A  0E1A               	movlw	26
 11371  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 11372  01029E  B0D8               	btfsc	status,0,c
 11373  0102A0  D002               	goto	u9480
 11374  0102A2  0E01               	movlw	1
 11375  0102A4  D001               	goto	u9490
 11376  0102A6                     u9480:
 11377  0102A6  0E00               	movlw	0
 11378  0102A8                     u9490:
 11379  0102A8  6E3C               	movwf	(btemp+10)^0,c
 11380  0102AA  6A3D               	clrf	(btemp+11)^0,c
 11381                           
 11382                           ;stkvar	_efgtoa$4621 @ sp[(-56)+6]
 11383  0102AC  0ECE               	movlw	-50
 11384  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11385  0102B4  0ECF               	movlw	-49
 11386  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11387                           
 11388                           ;stkvar	_efgtoa$4621 @ sp[(-56)+6]
 11389  0102BC  0ECE               	movlw	-50
 11390  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 11391  0102C4  0ECF               	movlw	-49
 11392  0102C6  50E3               	movf	plusw1,w,c
 11393  0102C8  1032               	iorwf	btemp^0,w,c
 11394  0102CA  B4D8               	btfsc	status,2,c
 11395  0102CC  D017               	goto	l9945
 11396                           
 11397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11398  0102CE  0EEA               	movlw	low STR_50
 11399  0102D0  6EE6               	movwf	postinc1,c
 11400  0102D2  0EFF               	movlw	high STR_50
 11401  0102D4  6EE6               	movwf	postinc1,c
 11402                           
 11403                           ;stkvar	_n @ sp[(-58)+32]
 11404  0102D6  0E7C               	movlw	low _dbuf
 11405  0102D8  6E3C               	movwf	(btemp+10)^0,c
 11406  0102DA  0E01               	movlw	high _dbuf
 11407  0102DC  6E3D               	movwf	(btemp+11)^0,c
 11408  0102DE  0EE6               	movlw	-26
 11409  0102E0  50E3               	movf	plusw1,w,c
 11410  0102E2  263C               	addwf	(btemp+10)^0,f,c
 11411  0102E4  0EE7               	movlw	-25
 11412  0102E6  50E3               	movf	plusw1,w,c
 11413  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 11414  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11415  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11416  0102F6  ECA4  F0B9         	call	_strcpy	;wreg free
 11417                           
 11418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11419  0102FA  D78D               	goto	l9929
 11420  0102FC                     l9945:
 11421                           
 11422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11423  0102FC  0EF2               	movlw	low STR_51
 11424  0102FE  6EE6               	movwf	postinc1,c
 11425  010300  0EFF               	movlw	high STR_51
 11426  010302  6EE6               	movwf	postinc1,c
 11427                           
 11428                           ;stkvar	_n @ sp[(-58)+32]
 11429  010304  0E7C               	movlw	low _dbuf
 11430  010306  6E3C               	movwf	(btemp+10)^0,c
 11431  010308  0E01               	movlw	high _dbuf
 11432  01030A  6E3D               	movwf	(btemp+11)^0,c
 11433  01030C  0EE6               	movlw	-26
 11434  01030E  50E3               	movf	plusw1,w,c
 11435  010310  263C               	addwf	(btemp+10)^0,f,c
 11436  010312  0EE7               	movlw	-25
 11437  010314  50E3               	movf	plusw1,w,c
 11438  010316  223D               	addwfc	(btemp+11)^0,f,c
 11439  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11440  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11441  010324  ECA4  F0B9         	call	_strcpy	;wreg free
 11442  010328  D776               	goto	l9929
 11443  01032A                     l9953:
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11446  01032A  0E00               	movlw	0
 11447  01032C  6E3A               	movwf	(btemp+8)^0,c
 11448  01032E  0E00               	movlw	0
 11449  010330  6E3B               	movwf	(btemp+9)^0,c
 11450  010332  0E80               	movlw	128
 11451  010334  6E3C               	movwf	(btemp+10)^0,c
 11452  010336  0E3F               	movlw	63
 11453  010338  6E3D               	movwf	(btemp+11)^0,c
 11454                           
 11455                           ;stkvar	_u @ sp[(-56)+12]
 11456  01033A  0ED4               	movlw	-44
 11457  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11458  010342  0ED5               	movlw	-43
 11459  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11460  01034A  0ED6               	movlw	-42
 11461  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11462  010352  0ED7               	movlw	-41
 11463  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11464                           
 11465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11466                           ;stkvar	_e @ sp[(-56)+34]
 11467  01035A  0EEA               	movlw	-22
 11468  01035C  6AE3               	clrf	plusw1,c
 11469  01035E  0EEB               	movlw	-21
 11470  010360  6AE3               	clrf	plusw1,c
 11471                           
 11472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11473  010362  0E00               	movlw	0
 11474  010364  6EE6               	movwf	postinc1,c
 11475  010366  0E00               	movlw	0
 11476  010368  6EE6               	movwf	postinc1,c
 11477  01036A  0E00               	movlw	0
 11478  01036C  6EE6               	movwf	postinc1,c
 11479  01036E  0E00               	movlw	0
 11480  010370  6EE6               	movwf	postinc1,c
 11481                           
 11482                           ;stkvar	_g @ sp[(-60)+16]
 11483  010372  0ED4               	movlw	-44
 11484  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11485  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11486  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11487  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11488  01038C  EC0E  F0BA         	call	___fleq	;wreg free
 11489  010390  A032               	btfss	btemp& (0+255),0,c
 11490  010392  D039               	goto	l9965
 11491  010394  D0BC               	goto	u9530
 11492  010396                     l9961:
 11493                           
 11494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11495  010396  0E00               	movlw	0
 11496  010398  6EE6               	movwf	postinc1,c
 11497  01039A  0E00               	movlw	0
 11498  01039C  6EE6               	movwf	postinc1,c
 11499  01039E  0E20               	movlw	32
 11500  0103A0  6EE6               	movwf	postinc1,c
 11501  0103A2  0E41               	movlw	65
 11502  0103A4  6EE6               	movwf	postinc1,c
 11503                           
 11504                           ;stkvar	_u @ sp[(-60)+12]
 11505  0103A6  0ED0               	movlw	-48
 11506  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11507  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11508  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11509  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11510  0103C0  ECEC  F092         	call	___flmul	;wreg free
 11511                           
 11512                           ;stkvar	_u @ sp[(-56)+12]
 11513  0103C4  0ED4               	movlw	-44
 11514  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11515  0103CC  0ED5               	movlw	-43
 11516  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11517  0103D4  0ED6               	movlw	-42
 11518  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11519  0103DC  0ED7               	movlw	-41
 11520  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11521                           
 11522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11523                           ;stkvar	_e @ sp[(-56)+34]
 11524  0103E4  0EEA               	movlw	-22
 11525  0103E6  50E3               	movf	plusw1,w,c
 11526  0103E8  0F01               	addlw	1
 11527  0103EA  6E32               	movwf	btemp^0,c
 11528  0103EC  0EEA               	movlw	-22
 11529  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11530  0103F4  6A32               	clrf	btemp^0,c
 11531  0103F6  0EEB               	movlw	-21
 11532  0103F8  50E3               	movf	plusw1,w,c
 11533  0103FA  2032               	addwfc	btemp^0,w,c
 11534  0103FC  6E32               	movwf	btemp^0,c
 11535  0103FE  0EEB               	movlw	-21
 11536  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11537  010406                     l9965:
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11540  010406  0E00               	movlw	0
 11541  010408  6EE6               	movwf	postinc1,c
 11542  01040A  0E00               	movlw	0
 11543  01040C  6EE6               	movwf	postinc1,c
 11544  01040E  0E20               	movlw	32
 11545  010410  6EE6               	movwf	postinc1,c
 11546  010412  0E41               	movlw	65
 11547  010414  6EE6               	movwf	postinc1,c
 11548                           
 11549                           ;stkvar	_u @ sp[(-60)+12]
 11550  010416  0ED0               	movlw	-48
 11551  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11552  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11553  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11554  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11555  010430  ECEC  F092         	call	___flmul	;wreg free
 11556  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11557  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11558  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11559  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11560                           
 11561                           ;stkvar	_g @ sp[(-60)+16]
 11562  01044C  0ED4               	movlw	-44
 11563  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11564  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11565  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11566  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  010466  ECED  F0B2         	call	___flge	;wreg free
 11568  01046A  A032               	btfss	btemp& (0+255),0,c
 11569  01046C  D032               	goto	l9971
 11570  01046E  D793               	goto	l9961
 11571  010470                     l9967:
 11572                           
 11573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11574  010470  0E00               	movlw	0
 11575  010472  6EE6               	movwf	postinc1,c
 11576  010474  0E00               	movlw	0
 11577  010476  6EE6               	movwf	postinc1,c
 11578  010478  0E20               	movlw	32
 11579  01047A  6EE6               	movwf	postinc1,c
 11580  01047C  0E41               	movlw	65
 11581  01047E  6EE6               	movwf	postinc1,c
 11582                           
 11583                           ;stkvar	_u @ sp[(-60)+12]
 11584  010480  0ED0               	movlw	-48
 11585  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11586  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11587  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11588  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11589  01049A  ECDF  F09A         	call	___fldiv	;wreg free
 11590                           
 11591                           ;stkvar	_u @ sp[(-56)+12]
 11592  01049E  0ED4               	movlw	-44
 11593  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11594  0104A6  0ED5               	movlw	-43
 11595  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11596  0104AE  0ED6               	movlw	-42
 11597  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11598  0104B6  0ED7               	movlw	-41
 11599  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11600                           
 11601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11602                           ;stkvar	_e @ sp[(-56)+34]
 11603  0104BE  50E1               	movf	fsr1l,w,c
 11604  0104C0  0FEA               	addlw	-22
 11605  0104C2  6ED9               	movwf	fsr2l,c
 11606  0104C4  50E2               	movf	fsr1h,w,c
 11607  0104C6  6EDA               	movwf	fsr2h,c
 11608  0104C8  0EFF               	movlw	255
 11609  0104CA  22DA               	addwfc	fsr2h,f,c
 11610  0104CC  06DE               	decf	postinc2,f,c
 11611  0104CE  0E00               	movlw	0
 11612  0104D0  5ADD               	subwfb	postdec2,f,c
 11613  0104D2                     l9971:
 11614                           
 11615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11616                           ;stkvar	_u @ sp[(-56)+12]
 11617  0104D2  0ED4               	movlw	-44
 11618  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11619  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11620  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11621  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11622                           
 11623                           ;stkvar	_g @ sp[(-60)+16]
 11624  0104EC  0ED4               	movlw	-44
 11625  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11626  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11627  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11628  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11629  010506  ECED  F0B2         	call	___flge	;wreg free
 11630  01050A  A032               	btfss	btemp& (0+255),0,c
 11631  01050C  D7B1               	goto	l9967
 11632  01050E                     u9530:
 11633                           
 11634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11635                           ;stkvar	_c @ sp[(-56)+-7]
 11636  01050E  0EC1               	movlw	-63
 11637  010510  50E3               	movf	plusw1,w,c
 11638  010512  6EE6               	movwf	postinc1,c
 11639  010514  0E00               	movlw	0
 11640  010516  6EE6               	movwf	postinc1,c
 11641  010518  EC23  F0BE         	call	_tolower	;wreg free
 11642                           
 11643                           ;stkvar	_mode @ sp[(-56)+54]
 11644  01051C  0EFE               	movlw	-2
 11645  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11646                           
 11647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11648                           ;stkvar	_mode @ sp[(-56)+54]
 11649                           ;stkvar	_nmode @ sp[(-56)+55]
 11650  010524  0EFE               	movlw	-2
 11651  010526  006F FF8C  F032    	movff	plusw1,btemp
 11652  01052C  0EFF               	movlw	-1
 11653  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11654                           
 11655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11656                           ;stkvar	_mode @ sp[(-56)+54]
 11657  010534  0EFE               	movlw	-2
 11658  010536  006F FF8C  F032    	movff	plusw1,btemp
 11659  01053C  0E67               	movlw	103
 11660  01053E  1832               	xorwf	btemp^0,w,c
 11661  010540  A4D8               	btfss	status,2,c
 11662  010542  D025               	goto	l9989
 11663                           
 11664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11665  010544  501D               	movf	_prec^0,w,c
 11666  010546  101E               	iorwf	(_prec+1)^0,w,c
 11667  010548  A4D8               	btfss	status,2,c
 11668  01054A  D004               	goto	l9983
 11669                           
 11670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11671  01054C  0E00               	movlw	0
 11672  01054E  6E1E               	movwf	(_prec+1)^0,c
 11673  010550  0E01               	movlw	1
 11674  010552  6E1D               	movwf	_prec^0,c
 11675  010554                     l9983:
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11678  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11679  010556  D005               	goto	u9560
 11680  010558  501E               	movf	(_prec+1)^0,w,c
 11681  01055A  E110               	bnz	l9987
 11682  01055C  041D               	decf	_prec^0,w,c
 11683  01055E  B0D8               	btfsc	status,0,c
 11684  010560  D00D               	goto	l9987
 11685  010562                     u9560:
 11686  010562  0E06               	movlw	6
 11687  010564  6E3C               	movwf	(btemp+10)^0,c
 11688  010566  0E00               	movlw	0
 11689  010568  6E3D               	movwf	(btemp+11)^0,c
 11690                           
 11691                           ;stkvar	_p @ sp[(-56)+40]
 11692  01056A  0EF0               	movlw	-16
 11693  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11694  010572  0EF1               	movlw	-15
 11695  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11696  01057A  D00C               	goto	l9995
 11697  01057C                     l9987:
 11698                           
 11699                           ;stkvar	_p @ sp[(-56)+40]
 11700  01057C  0EF0               	movlw	-16
 11701  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11702  010584  0EF1               	movlw	-15
 11703  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11704  01058C  D003               	goto	l9995
 11705  01058E                     l9989:
 11706                           
 11707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11708  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11709  010590  D7F5               	goto	l9987
 11710  010592  D7E7               	goto	u9560
 11711  010594                     l9995:
 11712                           
 11713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11714                           ;stkvar	_mode @ sp[(-56)+54]
 11715  010594  0EFE               	movlw	-2
 11716  010596  006F FF8C  F032    	movff	plusw1,btemp
 11717  01059C  0E67               	movlw	103
 11718  01059E  1832               	xorwf	btemp^0,w,c
 11719  0105A0  A4D8               	btfss	status,2,c
 11720  0105A2  D02F               	goto	l10005
 11721                           
 11722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11723                           ;stkvar	_e @ sp[(-56)+34]
 11724  0105A4  0EEB               	movlw	-21
 11725  0105A6  AEE3               	btfss	plusw1,7,c
 11726  0105A8  D00E               	goto	u9590
 11727  0105AA  0EEA               	movlw	-22
 11728  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11729  0105B2  0EFC               	movlw	252
 11730  0105B4  5E32               	subwf	btemp^0,f,c
 11731  0105B6  0EEB               	movlw	-21
 11732  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11733  0105BE  0EFF               	movlw	255
 11734  0105C0  5A32               	subwfb	btemp^0,f,c
 11735  0105C2  A0D8               	btfss	status,0,c
 11736  0105C4  D018               	goto	l10003
 11737  0105C6                     u9590:
 11738                           
 11739                           ;stkvar	_e @ sp[(-56)+34]
 11740                           ;stkvar	_p @ sp[(-56)+40]
 11741  0105C6  0EF0               	movlw	-16
 11742  0105C8  50E3               	movf	plusw1,w,c
 11743  0105CA  0FFF               	addlw	255
 11744  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11745  0105CE  0EF1               	movlw	-15
 11746  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11747  0105D6  0EFF               	movlw	255
 11748  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11749  0105DA  0EEA               	movlw	-22
 11750  0105DC  50E3               	movf	plusw1,w,c
 11751  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11752  0105E0  503D               	movf	(btemp+11)^0,w,c
 11753  0105E2  0A80               	xorlw	128
 11754  0105E4  6E32               	movwf	btemp^0,c
 11755  0105E6  0EEB               	movlw	-21
 11756  0105E8  50E3               	movf	plusw1,w,c
 11757  0105EA  0A80               	xorlw	128
 11758  0105EC  5832               	subwfb	btemp^0,w,c
 11759  0105EE  A0D8               	btfss	status,0,c
 11760  0105F0  D002               	goto	l10003
 11761                           
 11762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11763  0105F2  0E66               	movlw	102
 11764  0105F4  D001               	goto	L10
 11765  0105F6                     l10003:
 11766                           
 11767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11768  0105F6  0E65               	movlw	101
 11769  0105F8                     L10:
 11770  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11771                           
 11772                           ;stkvar	_nmode @ sp[(-56)+55]
 11773  0105FA  0EFF               	movlw	-1
 11774  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11775  010602                     l10005:
 11776                           
 11777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11778                           ;stkvar	_p @ sp[(-56)+40]
 11779                           ;stkvar	_m @ sp[(-56)+48]
 11780  010602  0EF0               	movlw	-16
 11781  010604  006F FF8C  F032    	movff	plusw1,btemp
 11782  01060A  0EF8               	movlw	-8
 11783  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11784  010612  0EF1               	movlw	-15
 11785  010614  006F FF8C  F032    	movff	plusw1,btemp
 11786  01061A  0EF9               	movlw	-7
 11787  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11788                           
 11789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11790                           ;stkvar	_mode @ sp[(-56)+54]
 11791  010622  0EFE               	movlw	-2
 11792  010624  006F FF8C  F032    	movff	plusw1,btemp
 11793  01062A  0E67               	movlw	103
 11794  01062C  1832               	xorwf	btemp^0,w,c
 11795  01062E  A4D8               	btfss	status,2,c
 11796  010630  D00B               	goto	u9630
 11797                           
 11798                           ;stkvar	_nmode @ sp[(-56)+55]
 11799  010632  0EFF               	movlw	-1
 11800  010634  006F FF8C  F032    	movff	plusw1,btemp
 11801  01063A  0E66               	movlw	102
 11802  01063C  1832               	xorwf	btemp^0,w,c
 11803  01063E  A4D8               	btfss	status,2,c
 11804  010640  D014               	goto	l1957
 11805                           
 11806                           ;stkvar	_e @ sp[(-56)+34]
 11807  010642  0EEB               	movlw	-21
 11808  010644  AEE3               	btfss	plusw1,7,c
 11809  010646  D011               	goto	l1957
 11810  010648                     u9630:
 11811                           
 11812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11813                           ;stkvar	_m @ sp[(-56)+48]
 11814  010648  0EF8               	movlw	-8
 11815  01064A  50E3               	movf	plusw1,w,c
 11816  01064C  0F01               	addlw	1
 11817  01064E  6E32               	movwf	btemp^0,c
 11818  010650  0EF8               	movlw	-8
 11819  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11820  010658  6A32               	clrf	btemp^0,c
 11821  01065A  0EF9               	movlw	-7
 11822  01065C  50E3               	movf	plusw1,w,c
 11823  01065E  2032               	addwfc	btemp^0,w,c
 11824  010660  6E32               	movwf	btemp^0,c
 11825  010662  0EF9               	movlw	-7
 11826  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11827  01066A                     l1957:
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11830                           ;stkvar	_nmode @ sp[(-56)+55]
 11831  01066A  0EFF               	movlw	-1
 11832  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11833  010672  0E66               	movlw	102
 11834  010674  1832               	xorwf	btemp^0,w,c
 11835  010676  A4D8               	btfss	status,2,c
 11836  010678  D03B               	goto	l10025
 11837                           
 11838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11839                           ;stkvar	_e @ sp[(-56)+34]
 11840  01067A  0EEB               	movlw	-21
 11841  01067C  AEE3               	btfss	plusw1,7,c
 11842  01067E  D01C               	goto	l10021
 11843                           
 11844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11845  010680  0E00               	movlw	0
 11846  010682  6E3A               	movwf	(btemp+8)^0,c
 11847  010684  0E00               	movlw	0
 11848  010686  6E3B               	movwf	(btemp+9)^0,c
 11849  010688  0E80               	movlw	128
 11850  01068A  6E3C               	movwf	(btemp+10)^0,c
 11851  01068C  0E3F               	movlw	63
 11852  01068E  6E3D               	movwf	(btemp+11)^0,c
 11853                           
 11854                           ;stkvar	_u @ sp[(-56)+12]
 11855  010690  0ED4               	movlw	-44
 11856  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11857  010698  0ED5               	movlw	-43
 11858  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11859  0106A0  0ED6               	movlw	-42
 11860  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11861  0106A8  0ED7               	movlw	-41
 11862  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11863                           
 11864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11865                           ;stkvar	_e @ sp[(-56)+34]
 11866  0106B0  0EEA               	movlw	-22
 11867  0106B2  6AE3               	clrf	plusw1,c
 11868  0106B4  0EEB               	movlw	-21
 11869  0106B6  6AE3               	clrf	plusw1,c
 11870  0106B8                     l10021:
 11871                           
 11872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11873                           ;stkvar	_mode @ sp[(-56)+54]
 11874  0106B8  0EFE               	movlw	-2
 11875  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11876  0106C0  0E67               	movlw	103
 11877  0106C2  1832               	xorwf	btemp^0,w,c
 11878  0106C4  B4D8               	btfsc	status,2,c
 11879  0106C6  D014               	goto	l10025
 11880                           
 11881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11882                           ;stkvar	_e @ sp[(-56)+34]
 11883                           ;stkvar	_m @ sp[(-56)+48]
 11884  0106C8  0EF8               	movlw	-8
 11885  0106CA  50E3               	movf	plusw1,w,c
 11886  0106CC  6E32               	movwf	btemp^0,c
 11887  0106CE  0EEA               	movlw	-22
 11888  0106D0  50E3               	movf	plusw1,w,c
 11889  0106D2  2632               	addwf	btemp^0,f,c
 11890  0106D4  0EF8               	movlw	-8
 11891  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11892  0106DC  0EF9               	movlw	-7
 11893  0106DE  50E3               	movf	plusw1,w,c
 11894  0106E0  6E32               	movwf	btemp^0,c
 11895  0106E2  0EEB               	movlw	-21
 11896  0106E4  50E3               	movf	plusw1,w,c
 11897  0106E6  2232               	addwfc	btemp^0,f,c
 11898  0106E8  0EF9               	movlw	-7
 11899  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11900  0106F0                     l10025:
 11901                           
 11902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11903                           ;stkvar	_i @ sp[(-56)+36]
 11904  0106F0  0EEC               	movlw	-20
 11905  0106F2  6AE3               	clrf	plusw1,c
 11906  0106F4  0EED               	movlw	-19
 11907  0106F6  6AE3               	clrf	plusw1,c
 11908                           
 11909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11910                           ;stkvar	_g @ sp[(-56)+16]
 11911  0106F8  0ED8               	movlw	-40
 11912  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11913  010700  0ED9               	movlw	-39
 11914  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11915  010708  0EDA               	movlw	-38
 11916  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11917  010710  0EDB               	movlw	-37
 11918  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11919                           
 11920                           ;stkvar	_h @ sp[(-56)+24]
 11921  010718  0EE0               	movlw	-32
 11922  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11923  010720  0EE1               	movlw	-31
 11924  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11925  010728  0EE2               	movlw	-30
 11926  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11927  010730  0EE3               	movlw	-29
 11928  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11929                           
 11930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11931                           ;stkvar	_u @ sp[(-56)+12]
 11932  010738  0ED4               	movlw	-44
 11933  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11934  010740  0ED5               	movlw	-43
 11935  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11936  010748  0ED6               	movlw	-42
 11937  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11938  010750  0ED7               	movlw	-41
 11939  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11940                           
 11941                           ;stkvar	_ou @ sp[(-56)+28]
 11942  010758  0EE4               	movlw	-28
 11943  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11944  010760  0EE5               	movlw	-27
 11945  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11946  010768  0EE6               	movlw	-26
 11947  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11948  010770  0EE7               	movlw	-25
 11949  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11950                           
 11951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11952  010778  D0D6               	goto	l10041
 11953  01077A                     l10031:
 11954                           
 11955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11956                           ;stkvar	_u @ sp[(-56)+12]
 11957  01077A  0ED4               	movlw	-44
 11958  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11959  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11960  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11961  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11962                           
 11963                           ;stkvar	_h @ sp[(-60)+24]
 11964  010794  0EDC               	movlw	-36
 11965  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11966  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11967  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11968  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11969  0107AE  ECDF  F09A         	call	___fldiv	;wreg free
 11970  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11971  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11972  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11973  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11974  0107CA  EC0F  F0A4         	call	_floorf	;wreg free
 11975                           
 11976                           ;stkvar	_l @ sp[(-56)+20]
 11977  0107CE  0EDC               	movlw	-36
 11978  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11979  0107D6  0EDD               	movlw	-35
 11980  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11981  0107DE  0EDE               	movlw	-34
 11982  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11983  0107E6  0EDF               	movlw	-33
 11984  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11985                           
 11986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11987                           ;stkvar	_l @ sp[(-56)+20]
 11988  0107EE  0EDC               	movlw	-36
 11989  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11990  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11991  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11992  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11993  010808  EC34  F0B2         	call	___fltol	;wreg free
 11994  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11995  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11996                           
 11997                           ;stkvar	_d @ sp[(-56)+44]
 11998  010818  0EF4               	movlw	-12
 11999  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12000  010820  0EF5               	movlw	-11
 12001  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12002                           
 12003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12004                           ;stkvar	_u @ sp[(-56)+12]
 12005  010828  0ED4               	movlw	-44
 12006  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12007  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12008  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12009  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12010                           
 12011                           ;stkvar	_l @ sp[(-60)+20]
 12012  010842  0ED8               	movlw	-40
 12013  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12014  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12015  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12016  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12017  01085C  ECEC  F092         	call	___flmul	;wreg free
 12018  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 12019  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12020  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12021  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12022                           
 12023                           ;stkvar	_h @ sp[(-60)+24]
 12024  010878  0EDC               	movlw	-36
 12025  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12026  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12027  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12028  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12029  010892  EC8B  F0C1         	call	___flsub	;wreg free
 12030                           
 12031                           ;stkvar	_h @ sp[(-56)+24]
 12032  010896  0EE0               	movlw	-32
 12033  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 12034  01089E  0EE1               	movlw	-31
 12035  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12036  0108A6  0EE2               	movlw	-30
 12037  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12038  0108AE  0EE3               	movlw	-29
 12039  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12040                           
 12041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12042  0108B6  0E00               	movlw	0
 12043  0108B8  6EE6               	movwf	postinc1,c
 12044  0108BA  0E00               	movlw	0
 12045  0108BC  6EE6               	movwf	postinc1,c
 12046  0108BE  0E20               	movlw	32
 12047  0108C0  6EE6               	movwf	postinc1,c
 12048  0108C2  0E41               	movlw	65
 12049  0108C4  6EE6               	movwf	postinc1,c
 12050                           
 12051                           ;stkvar	_u @ sp[(-60)+12]
 12052  0108C6  0ED0               	movlw	-48
 12053  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12054  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12055  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12056  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12057  0108E0  ECDF  F09A         	call	___fldiv	;wreg free
 12058                           
 12059                           ;stkvar	_u @ sp[(-56)+12]
 12060  0108E4  0ED4               	movlw	-44
 12061  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12062  0108EC  0ED5               	movlw	-43
 12063  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12064  0108F4  0ED6               	movlw	-42
 12065  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12066  0108FC  0ED7               	movlw	-41
 12067  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12068                           
 12069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12070                           ;stkvar	_i @ sp[(-56)+36]
 12071  010904  0EEC               	movlw	-20
 12072  010906  50E3               	movf	plusw1,w,c
 12073  010908  0F01               	addlw	1
 12074  01090A  6E32               	movwf	btemp^0,c
 12075  01090C  0EEC               	movlw	-20
 12076  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12077  010914  6A32               	clrf	btemp^0,c
 12078  010916  0EED               	movlw	-19
 12079  010918  50E3               	movf	plusw1,w,c
 12080  01091A  2032               	addwfc	btemp^0,w,c
 12081  01091C  6E32               	movwf	btemp^0,c
 12082  01091E  0EED               	movlw	-19
 12083  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 12084  010926                     l10041:
 12085                           
 12086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12087                           ;stkvar	_m @ sp[(-56)+48]
 12088                           ;stkvar	_i @ sp[(-56)+36]
 12089  010926  50E1               	movf	fsr1l,w,c
 12090  010928  0FEC               	addlw	-20
 12091  01092A  6ED9               	movwf	fsr2l,c
 12092  01092C  50E2               	movf	fsr1h,w,c
 12093  01092E  6EDA               	movwf	fsr2h,c
 12094  010930  0EFF               	movlw	255
 12095  010932  22DA               	addwfc	fsr2h,f,c
 12096  010934  0EF8               	movlw	-8
 12097  010936  50E3               	movf	plusw1,w,c
 12098  010938  5CDE               	subwf	postinc2,w,c
 12099  01093A  50DE               	movf	postinc2,w,c
 12100  01093C  0A80               	xorlw	128
 12101  01093E  6E32               	movwf	btemp^0,c
 12102  010940  0EF9               	movlw	-7
 12103  010942  50E3               	movf	plusw1,w,c
 12104  010944  0A80               	xorlw	128
 12105  010946  5832               	subwfb	btemp^0,w,c
 12106  010948  A0D8               	btfss	status,0,c
 12107  01094A  D717               	goto	l10031
 12108                           
 12109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12110  01094C  0E00               	movlw	0
 12111  01094E  6EE6               	movwf	postinc1,c
 12112  010950  0E00               	movlw	0
 12113  010952  6EE6               	movwf	postinc1,c
 12114  010954  0EA0               	movlw	160
 12115  010956  6EE6               	movwf	postinc1,c
 12116  010958  0E40               	movlw	64
 12117  01095A  6EE6               	movwf	postinc1,c
 12118                           
 12119                           ;stkvar	_u @ sp[(-60)+12]
 12120  01095C  0ED0               	movlw	-48
 12121  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12122  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12123  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12124  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12125  010976  ECEC  F092         	call	___flmul	;wreg free
 12126                           
 12127                           ;stkvar	_l @ sp[(-56)+20]
 12128  01097A  0EDC               	movlw	-36
 12129  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12130  010982  0EDD               	movlw	-35
 12131  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12132  01098A  0EDE               	movlw	-34
 12133  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12134  010992  0EDF               	movlw	-33
 12135  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12136                           
 12137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12138                           ;stkvar	_l @ sp[(-56)+20]
 12139  01099A  0EDC               	movlw	-36
 12140  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12141  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12142  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12143  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12144                           
 12145                           ;stkvar	_h @ sp[(-60)+24]
 12146  0109B4  0EDC               	movlw	-36
 12147  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12148  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12149  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12150  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12151  0109CE  ECED  F0B2         	call	___flge	;wreg free
 12152  0109D2  A032               	btfss	btemp& (0+255),0,c
 12153  0109D4  D021               	goto	u9700
 12154                           
 12155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12156                           ;stkvar	_l @ sp[(-56)+20]
 12157                           
 12158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12159                           
 12160                           ;stkvar	_l @ sp[(-56)+20]
 12161                           
 12162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12163  0109D6  0EDC               	movlw	-36
 12164  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12165  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12166  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12167  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12168                           
 12169                           ;stkvar	_h @ sp[(-60)+24]
 12170  0109F0  0EDC               	movlw	-36
 12171  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12172  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12173  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12174  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12175  010A0A  EC0E  F0BA         	call	___fleq	;wreg free
 12176  010A0E  A032               	btfss	btemp& (0+255),0,c
 12177  010A10  D01B               	goto	l10055
 12178                           
 12179                           ;stkvar	_d @ sp[(-56)+44]
 12180  010A12  0EF4               	movlw	-12
 12181  010A14  B0E3               	btfsc	plusw1,0,c
 12182  010A16  D018               	goto	l10055
 12183  010A18                     u9700:
 12184                           
 12185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12186  010A18  0E00               	movlw	0
 12187  010A1A  6E3A               	movwf	(btemp+8)^0,c
 12188  010A1C  0E00               	movlw	0
 12189  010A1E  6E3B               	movwf	(btemp+9)^0,c
 12190  010A20  0E00               	movlw	0
 12191  010A22  6E3C               	movwf	(btemp+10)^0,c
 12192  010A24  0E00               	movlw	0
 12193  010A26  6E3D               	movwf	(btemp+11)^0,c
 12194                           
 12195                           ;stkvar	_l @ sp[(-56)+20]
 12196  010A28  0EDC               	movlw	-36
 12197  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12198  010A30  0EDD               	movlw	-35
 12199  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12200  010A38  0EDE               	movlw	-34
 12201  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12202  010A40  0EDF               	movlw	-33
 12203  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12204  010A48                     l10055:
 12205                           
 12206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12207                           ;stkvar	_l @ sp[(-56)+20]
 12208  010A48  0EDC               	movlw	-36
 12209  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12210  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12211  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12212  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12213                           
 12214                           ;stkvar	_g @ sp[(-60)+16]
 12215  010A62  0ED4               	movlw	-44
 12216  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12217  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12218  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12219  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12220  010A7C  EC01  F097         	call	___fladd	;wreg free
 12221                           
 12222                           ;stkvar	_h @ sp[(-56)+24]
 12223  010A80  0EE0               	movlw	-32
 12224  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 12225  010A88  0EE1               	movlw	-31
 12226  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12227  010A90  0EE2               	movlw	-30
 12228  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12229  010A98  0EE3               	movlw	-29
 12230  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12231                           
 12232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12233                           ;stkvar	_ou @ sp[(-56)+28]
 12234  010AA0  0EE4               	movlw	-28
 12235  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12236  010AA8  0EE5               	movlw	-27
 12237  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12238  010AB0  0EE6               	movlw	-26
 12239  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12240  010AB8  0EE7               	movlw	-25
 12241  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12242                           
 12243                           ;stkvar	_u @ sp[(-56)+12]
 12244  010AC0  0ED4               	movlw	-44
 12245  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12246  010AC8  0ED5               	movlw	-43
 12247  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12248  010AD0  0ED6               	movlw	-42
 12249  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12250  010AD8  0ED7               	movlw	-41
 12251  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12252                           
 12253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12254                           ;stkvar	_nmode @ sp[(-56)+55]
 12255  010AE0  0EFF               	movlw	-1
 12256  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 12257  010AE8  0E65               	movlw	101
 12258  010AEA  1832               	xorwf	btemp^0,w,c
 12259  010AEC  B4D8               	btfsc	status,2,c
 12260  010AEE  D011               	goto	l10063
 12261                           
 12262                           ;stkvar	_e @ sp[(-56)+34]
 12263                           ;stkvar	_ne @ sp[(-56)+46]
 12264  010AF0  0EEA               	movlw	-22
 12265  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 12266  010AF8  0EF6               	movlw	-10
 12267  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12268  010B00  0EEB               	movlw	-21
 12269  010B02  006F FF8C  F032    	movff	plusw1,btemp
 12270  010B08  0EF7               	movlw	-9
 12271  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12272  010B10  D004               	goto	l1972
 12273  010B12                     l10063:
 12274                           
 12275                           ;stkvar	_ne @ sp[(-56)+46]
 12276  010B12  0EF6               	movlw	-10
 12277  010B14  6AE3               	clrf	plusw1,c
 12278  010B16  0EF7               	movlw	-9
 12279  010B18  6AE3               	clrf	plusw1,c
 12280  010B1A                     l1972:
 12281                           
 12282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12283                           ;stkvar	_pp @ sp[(-56)+50]
 12284  010B1A  0EFA               	movlw	-6
 12285  010B1C  6AE3               	clrf	plusw1,c
 12286  010B1E  0EFB               	movlw	-5
 12287  010B20  6AE3               	clrf	plusw1,c
 12288                           
 12289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12290                           ;stkvar	_t @ sp[(-56)+52]
 12291  010B22  0EFC               	movlw	-4
 12292  010B24  6AE3               	clrf	plusw1,c
 12293  010B26  0EFD               	movlw	-3
 12294  010B28  6AE3               	clrf	plusw1,c
 12295                           
 12296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12297                           ;stkvar	_i @ sp[(-56)+36]
 12298  010B2A  0EEC               	movlw	-20
 12299  010B2C  6AE3               	clrf	plusw1,c
 12300  010B2E  0EED               	movlw	-19
 12301  010B30  6AE3               	clrf	plusw1,c
 12302                           
 12303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12304  010B32  D1B7               	goto	l10115
 12305  010B34                     l10065:
 12306                           
 12307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12308                           ;stkvar	_u @ sp[(-56)+12]
 12309  010B34  0ED4               	movlw	-44
 12310  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12311  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12312  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12313  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12314                           
 12315                           ;stkvar	_h @ sp[(-60)+24]
 12316  010B4E  0EDC               	movlw	-36
 12317  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12318  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12319  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12320  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  010B68  ECDF  F09A         	call	___fldiv	;wreg free
 12322  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 12323  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12324  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12325  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12326  010B84  EC0F  F0A4         	call	_floorf	;wreg free
 12327                           
 12328                           ;stkvar	_l @ sp[(-56)+20]
 12329  010B88  0EDC               	movlw	-36
 12330  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12331  010B90  0EDD               	movlw	-35
 12332  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12333  010B98  0EDE               	movlw	-34
 12334  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12335  010BA0  0EDF               	movlw	-33
 12336  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12337                           
 12338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12339                           ;stkvar	_l @ sp[(-56)+20]
 12340  010BA8  0EDC               	movlw	-36
 12341  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12342  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12343  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12344  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  010BC2  EC34  F0B2         	call	___fltol	;wreg free
 12346  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 12347  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12348                           
 12349                           ;stkvar	_d @ sp[(-56)+44]
 12350  010BD2  0EF4               	movlw	-12
 12351  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12352  010BDA  0EF5               	movlw	-11
 12353  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12354                           
 12355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12356  010BE2  B81F               	btfsc	_flags^0,4,c
 12357  010BE4  D026               	goto	l10079
 12358                           
 12359                           ;stkvar	_d @ sp[(-56)+44]
 12360  010BE6  0EF4               	movlw	-12
 12361  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 12362  010BEE  0EF5               	movlw	-11
 12363  010BF0  50E3               	movf	plusw1,w,c
 12364  010BF2  1032               	iorwf	btemp^0,w,c
 12365  010BF4  A4D8               	btfss	status,2,c
 12366  010BF6  D01D               	goto	l10079
 12367                           
 12368                           ;stkvar	_mode @ sp[(-56)+54]
 12369  010BF8  0EFE               	movlw	-2
 12370  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 12371  010C00  0E67               	movlw	103
 12372  010C02  1832               	xorwf	btemp^0,w,c
 12373  010C04  A4D8               	btfss	status,2,c
 12374  010C06  D015               	goto	l10079
 12375                           
 12376                           ;stkvar	_ne @ sp[(-56)+46]
 12377  010C08  0EF7               	movlw	-9
 12378  010C0A  AEE3               	btfss	plusw1,7,c
 12379  010C0C  D012               	goto	l10079
 12380                           
 12381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12382                           ;stkvar	_t @ sp[(-56)+52]
 12383  010C0E  0EFC               	movlw	-4
 12384  010C10  50E3               	movf	plusw1,w,c
 12385  010C12  0F01               	addlw	1
 12386  010C14  6E32               	movwf	btemp^0,c
 12387  010C16  0EFC               	movlw	-4
 12388  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 12389  010C1E  6A32               	clrf	btemp^0,c
 12390  010C20  0EFD               	movlw	-3
 12391  010C22  50E3               	movf	plusw1,w,c
 12392  010C24  2032               	addwfc	btemp^0,w,c
 12393  010C26  6E32               	movwf	btemp^0,c
 12394  010C28  0EFD               	movlw	-3
 12395  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12396                           
 12397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12398  010C30  D0AF               	goto	l10107
 12399  010C32                     l10079:
 12400                           
 12401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12402                           ;stkvar	_pp @ sp[(-56)+50]
 12403  010C32  0EFA               	movlw	-6
 12404  010C34  006F FF8C  F032    	movff	plusw1,btemp
 12405  010C3A  0EFB               	movlw	-5
 12406  010C3C  50E3               	movf	plusw1,w,c
 12407  010C3E  1032               	iorwf	btemp^0,w,c
 12408  010C40  A4D8               	btfss	status,2,c
 12409  010C42  D070               	goto	l10099
 12410                           
 12411                           ;stkvar	_ne @ sp[(-56)+46]
 12412  010C44  0EF7               	movlw	-9
 12413  010C46  AEE3               	btfss	plusw1,7,c
 12414  010C48  D06D               	goto	l10099
 12415                           
 12416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12417                           ;stkvar	_n @ sp[(-56)+32]
 12418  010C4A  0EE8               	movlw	-24
 12419  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12420  010C52  0EE9               	movlw	-23
 12421  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 12422  010C5A  0E7C               	movlw	low _dbuf
 12423  010C5C  243C               	addwf	(btemp+10)^0,w,c
 12424  010C5E  6ED9               	movwf	fsr2l,c
 12425  010C60  0E01               	movlw	high _dbuf
 12426  010C62  203D               	addwfc	(btemp+11)^0,w,c
 12427  010C64  6EDA               	movwf	fsr2h,c
 12428  010C66  0E2E               	movlw	46
 12429  010C68  6EDF               	movwf	indf2,c
 12430                           
 12431                           ;stkvar	_n @ sp[(-56)+32]
 12432  010C6A  0EE8               	movlw	-24
 12433  010C6C  50E3               	movf	plusw1,w,c
 12434  010C6E  0F01               	addlw	1
 12435  010C70  6E32               	movwf	btemp^0,c
 12436  010C72  0EE8               	movlw	-24
 12437  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12438  010C7A  6A32               	clrf	btemp^0,c
 12439  010C7C  0EE9               	movlw	-23
 12440  010C7E  50E3               	movf	plusw1,w,c
 12441  010C80  2032               	addwfc	btemp^0,w,c
 12442  010C82  6E32               	movwf	btemp^0,c
 12443  010C84  0EE9               	movlw	-23
 12444  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12445                           
 12446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12447                           ;stkvar	_w @ sp[(-56)+38]
 12448  010C8C  50E1               	movf	fsr1l,w,c
 12449  010C8E  0FEE               	addlw	-18
 12450  010C90  6ED9               	movwf	fsr2l,c
 12451  010C92  50E2               	movf	fsr1h,w,c
 12452  010C94  6EDA               	movwf	fsr2h,c
 12453  010C96  0EFF               	movlw	255
 12454  010C98  22DA               	addwfc	fsr2h,f,c
 12455  010C9A  06DE               	decf	postinc2,f,c
 12456  010C9C  0E00               	movlw	0
 12457  010C9E  5ADD               	subwfb	postdec2,f,c
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12460  010CA0  0E01               	movlw	1
 12461  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12462  010CA4  0E00               	movlw	0
 12463  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12464                           
 12465                           ;stkvar	_pp @ sp[(-56)+50]
 12466  010CA8  0EFA               	movlw	-6
 12467  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12468  010CB0  0EFB               	movlw	-5
 12469  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12470  010CB8  D035               	goto	l10099
 12471  010CBA                     l10091:
 12472                           
 12473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12474                           ;stkvar	_n @ sp[(-56)+32]
 12475  010CBA  0EE8               	movlw	-24
 12476  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12477  010CC2  0EE9               	movlw	-23
 12478  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12479  010CCA  0E7C               	movlw	low _dbuf
 12480  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12481  010CCE  6ED9               	movwf	fsr2l,c
 12482  010CD0  0E01               	movlw	high _dbuf
 12483  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12484  010CD4  6EDA               	movwf	fsr2h,c
 12485  010CD6  0E30               	movlw	48
 12486  010CD8  6EDF               	movwf	indf2,c
 12487                           
 12488                           ;stkvar	_n @ sp[(-56)+32]
 12489  010CDA  0EE8               	movlw	-24
 12490  010CDC  50E3               	movf	plusw1,w,c
 12491  010CDE  0F01               	addlw	1
 12492  010CE0  6E32               	movwf	btemp^0,c
 12493  010CE2  0EE8               	movlw	-24
 12494  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12495  010CEA  6A32               	clrf	btemp^0,c
 12496  010CEC  0EE9               	movlw	-23
 12497  010CEE  50E3               	movf	plusw1,w,c
 12498  010CF0  2032               	addwfc	btemp^0,w,c
 12499  010CF2  6E32               	movwf	btemp^0,c
 12500  010CF4  0EE9               	movlw	-23
 12501  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12502                           
 12503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12504                           ;stkvar	_w @ sp[(-56)+38]
 12505  010CFC  50E1               	movf	fsr1l,w,c
 12506  010CFE  0FEE               	addlw	-18
 12507  010D00  6ED9               	movwf	fsr2l,c
 12508  010D02  50E2               	movf	fsr1h,w,c
 12509  010D04  6EDA               	movwf	fsr2h,c
 12510  010D06  0EFF               	movlw	255
 12511  010D08  22DA               	addwfc	fsr2h,f,c
 12512  010D0A  06DE               	decf	postinc2,f,c
 12513  010D0C  0E00               	movlw	0
 12514  010D0E  5ADD               	subwfb	postdec2,f,c
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12517                           ;stkvar	_t @ sp[(-56)+52]
 12518  010D10  50E1               	movf	fsr1l,w,c
 12519  010D12  0FFC               	addlw	-4
 12520  010D14  6ED9               	movwf	fsr2l,c
 12521  010D16  50E2               	movf	fsr1h,w,c
 12522  010D18  6EDA               	movwf	fsr2h,c
 12523  010D1A  0EFF               	movlw	255
 12524  010D1C  22DA               	addwfc	fsr2h,f,c
 12525  010D1E  06DE               	decf	postinc2,f,c
 12526  010D20  0E00               	movlw	0
 12527  010D22  5ADD               	subwfb	postdec2,f,c
 12528  010D24                     l10099:
 12529                           
 12530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12531                           ;stkvar	_t @ sp[(-56)+52]
 12532  010D24  0EFC               	movlw	-4
 12533  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12534  010D2C  0EFD               	movlw	-3
 12535  010D2E  50E3               	movf	plusw1,w,c
 12536  010D30  1032               	iorwf	btemp^0,w,c
 12537  010D32  A4D8               	btfss	status,2,c
 12538  010D34  D7C2               	goto	l10091
 12539                           
 12540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12541                           ;stkvar	_n @ sp[(-56)+32]
 12542  010D36  0EE8               	movlw	-24
 12543  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12544  010D3E  0EE9               	movlw	-23
 12545  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12546  010D46  0E7C               	movlw	low _dbuf
 12547  010D48  243C               	addwf	(btemp+10)^0,w,c
 12548  010D4A  6ED9               	movwf	fsr2l,c
 12549  010D4C  0E01               	movlw	high _dbuf
 12550  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12551  010D50  6EDA               	movwf	fsr2h,c
 12552                           
 12553                           ;stkvar	_d @ sp[(-56)+44]
 12554  010D52  0EF4               	movlw	-12
 12555  010D54  50E3               	movf	plusw1,w,c
 12556  010D56  0F30               	addlw	48
 12557  010D58  6EDF               	movwf	indf2,c
 12558                           
 12559                           ;stkvar	_n @ sp[(-56)+32]
 12560  010D5A  0EE8               	movlw	-24
 12561  010D5C  50E3               	movf	plusw1,w,c
 12562  010D5E  0F01               	addlw	1
 12563  010D60  6E32               	movwf	btemp^0,c
 12564  010D62  0EE8               	movlw	-24
 12565  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12566  010D6A  6A32               	clrf	btemp^0,c
 12567  010D6C  0EE9               	movlw	-23
 12568  010D6E  50E3               	movf	plusw1,w,c
 12569  010D70  2032               	addwfc	btemp^0,w,c
 12570  010D72  6E32               	movwf	btemp^0,c
 12571  010D74  0EE9               	movlw	-23
 12572  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12575                           ;stkvar	_w @ sp[(-56)+38]
 12576  010D7C  50E1               	movf	fsr1l,w,c
 12577  010D7E  0FEE               	addlw	-18
 12578  010D80  6ED9               	movwf	fsr2l,c
 12579  010D82  50E2               	movf	fsr1h,w,c
 12580  010D84  6EDA               	movwf	fsr2h,c
 12581  010D86  0EFF               	movlw	255
 12582  010D88  22DA               	addwfc	fsr2h,f,c
 12583  010D8A  06DE               	decf	postinc2,f,c
 12584  010D8C  0E00               	movlw	0
 12585  010D8E  5ADD               	subwfb	postdec2,f,c
 12586  010D90                     l10107:
 12587                           
 12588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12589                           ;stkvar	_u @ sp[(-56)+12]
 12590  010D90  0ED4               	movlw	-44
 12591  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12592  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12593  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12594  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12595                           
 12596                           ;stkvar	_l @ sp[(-60)+20]
 12597  010DAA  0ED8               	movlw	-40
 12598  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12599  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12600  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12601  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12602  010DC4  ECEC  F092         	call	___flmul	;wreg free
 12603  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12604  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12605  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12606  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12607                           
 12608                           ;stkvar	_h @ sp[(-60)+24]
 12609  010DE0  0EDC               	movlw	-36
 12610  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12611  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12612  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12613  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12614  010DFA  EC8B  F0C1         	call	___flsub	;wreg free
 12615                           
 12616                           ;stkvar	_h @ sp[(-56)+24]
 12617  010DFE  0EE0               	movlw	-32
 12618  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12619  010E06  0EE1               	movlw	-31
 12620  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12621  010E0E  0EE2               	movlw	-30
 12622  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12623  010E16  0EE3               	movlw	-29
 12624  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12625                           
 12626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12627  010E1E  0E00               	movlw	0
 12628  010E20  6EE6               	movwf	postinc1,c
 12629  010E22  0E00               	movlw	0
 12630  010E24  6EE6               	movwf	postinc1,c
 12631  010E26  0E20               	movlw	32
 12632  010E28  6EE6               	movwf	postinc1,c
 12633  010E2A  0E41               	movlw	65
 12634  010E2C  6EE6               	movwf	postinc1,c
 12635                           
 12636                           ;stkvar	_u @ sp[(-60)+12]
 12637  010E2E  0ED0               	movlw	-48
 12638  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12639  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12640  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12641  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12642  010E48  ECDF  F09A         	call	___fldiv	;wreg free
 12643                           
 12644                           ;stkvar	_u @ sp[(-56)+12]
 12645  010E4C  0ED4               	movlw	-44
 12646  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12647  010E54  0ED5               	movlw	-43
 12648  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12649  010E5C  0ED6               	movlw	-42
 12650  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12651  010E64  0ED7               	movlw	-41
 12652  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12653                           
 12654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12655                           ;stkvar	_ne @ sp[(-56)+46]
 12656  010E6C  50E1               	movf	fsr1l,w,c
 12657  010E6E  0FF6               	addlw	-10
 12658  010E70  6ED9               	movwf	fsr2l,c
 12659  010E72  50E2               	movf	fsr1h,w,c
 12660  010E74  6EDA               	movwf	fsr2h,c
 12661  010E76  0EFF               	movlw	255
 12662  010E78  22DA               	addwfc	fsr2h,f,c
 12663  010E7A  06DE               	decf	postinc2,f,c
 12664  010E7C  0E00               	movlw	0
 12665  010E7E  5ADD               	subwfb	postdec2,f,c
 12666                           
 12667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12668                           ;stkvar	_i @ sp[(-56)+36]
 12669  010E80  0EEC               	movlw	-20
 12670  010E82  50E3               	movf	plusw1,w,c
 12671  010E84  0F01               	addlw	1
 12672  010E86  6E32               	movwf	btemp^0,c
 12673  010E88  0EEC               	movlw	-20
 12674  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12675  010E90  6A32               	clrf	btemp^0,c
 12676  010E92  0EED               	movlw	-19
 12677  010E94  50E3               	movf	plusw1,w,c
 12678  010E96  2032               	addwfc	btemp^0,w,c
 12679  010E98  6E32               	movwf	btemp^0,c
 12680  010E9A  0EED               	movlw	-19
 12681  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12682  010EA2                     l10115:
 12683                           
 12684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12685                           ;stkvar	_m @ sp[(-56)+48]
 12686                           ;stkvar	_i @ sp[(-56)+36]
 12687  010EA2  50E1               	movf	fsr1l,w,c
 12688  010EA4  0FEC               	addlw	-20
 12689  010EA6  6ED9               	movwf	fsr2l,c
 12690  010EA8  50E2               	movf	fsr1h,w,c
 12691  010EAA  6EDA               	movwf	fsr2h,c
 12692  010EAC  0EFF               	movlw	255
 12693  010EAE  22DA               	addwfc	fsr2h,f,c
 12694  010EB0  0EF8               	movlw	-8
 12695  010EB2  50E3               	movf	plusw1,w,c
 12696  010EB4  5CDE               	subwf	postinc2,w,c
 12697  010EB6  50DE               	movf	postinc2,w,c
 12698  010EB8  0A80               	xorlw	128
 12699  010EBA  6E32               	movwf	btemp^0,c
 12700  010EBC  0EF9               	movlw	-7
 12701  010EBE  50E3               	movf	plusw1,w,c
 12702  010EC0  0A80               	xorlw	128
 12703  010EC2  5832               	subwfb	btemp^0,w,c
 12704  010EC4  B0D8               	btfsc	status,0,c
 12705  010EC6  D00E               	goto	u9800
 12706                           
 12707                           ;stkvar	_n @ sp[(-56)+32]
 12708  010EC8  0EE9               	movlw	-23
 12709  010ECA  BEE3               	btfsc	plusw1,7,c
 12710  010ECC  D633               	goto	l10065
 12711  010ECE  0EE9               	movlw	-23
 12712  010ED0  50E3               	movf	plusw1,w,c
 12713  010ED2  E108               	bnz	u9800
 12714  010ED4  0EE8               	movlw	-24
 12715  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12716  010EDC  0E4B               	movlw	75
 12717  010EDE  5E32               	subwf	btemp^0,f,c
 12718  010EE0  A0D8               	btfss	status,0,c
 12719  010EE2  D628               	goto	l10065
 12720  010EE4                     u9800:
 12721                           
 12722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12723                           ;stkvar	_pp @ sp[(-56)+50]
 12724  010EE4  0EFA               	movlw	-6
 12725  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12726  010EEC  0EFB               	movlw	-5
 12727  010EEE  50E3               	movf	plusw1,w,c
 12728  010EF0  1032               	iorwf	btemp^0,w,c
 12729  010EF2  B4D8               	btfsc	status,2,c
 12730  010EF4  A81F               	btfss	_flags^0,4,c
 12731  010EF6  D021               	goto	l10127
 12732                           
 12733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12734                           ;stkvar	_n @ sp[(-56)+32]
 12735  010EF8  0EE8               	movlw	-24
 12736  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12737  010F00  0EE9               	movlw	-23
 12738  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12739  010F08  0E7C               	movlw	low _dbuf
 12740  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12741  010F0C  6ED9               	movwf	fsr2l,c
 12742  010F0E  0E01               	movlw	high _dbuf
 12743  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12744  010F12  6EDA               	movwf	fsr2h,c
 12745  010F14  0E2E               	movlw	46
 12746  010F16  6EDF               	movwf	indf2,c
 12747                           
 12748                           ;stkvar	_n @ sp[(-56)+32]
 12749  010F18  0EE8               	movlw	-24
 12750  010F1A  50E3               	movf	plusw1,w,c
 12751  010F1C  0F01               	addlw	1
 12752  010F1E  6E32               	movwf	btemp^0,c
 12753  010F20  0EE8               	movlw	-24
 12754  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12755  010F28  6A32               	clrf	btemp^0,c
 12756  010F2A  0EE9               	movlw	-23
 12757  010F2C  50E3               	movf	plusw1,w,c
 12758  010F2E  2032               	addwfc	btemp^0,w,c
 12759  010F30  6E32               	movwf	btemp^0,c
 12760  010F32  0EE9               	movlw	-23
 12761  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12762  010F3A                     l10127:
 12763                           
 12764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12765                           ;stkvar	_n @ sp[(-56)+32]
 12766  010F3A  0EE8               	movlw	-24
 12767  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12768  010F42  0EE9               	movlw	-23
 12769  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12770  010F4A  0E7C               	movlw	low _dbuf
 12771  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12772  010F4E  6ED9               	movwf	fsr2l,c
 12773  010F50  0E01               	movlw	high _dbuf
 12774  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12775  010F54  6EDA               	movwf	fsr2h,c
 12776  010F56  0E00               	movlw	0
 12777  010F58  6EDF               	movwf	indf2,c
 12778                           
 12779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12780                           ;stkvar	_nmode @ sp[(-56)+55]
 12781  010F5A  0EFF               	movlw	-1
 12782  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12783  010F62  0E65               	movlw	101
 12784  010F64  1832               	xorwf	btemp^0,w,c
 12785  010F66  A4D8               	btfss	status,2,c
 12786  010F68  EF16  F081         	goto	l9931
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12789  010F6C  0E4F               	movlw	79
 12790  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12791  010F70  0E00               	movlw	0
 12792  010F72  6E3D               	movwf	(btemp+11)^0,c
 12793                           
 12794                           ;stkvar	_i @ sp[(-56)+36]
 12795  010F74  0EEC               	movlw	-20
 12796  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12797  010F7C  0EED               	movlw	-19
 12798  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12801                           ;stkvar	_i @ sp[(-56)+36]
 12802  010F84  0EEC               	movlw	-20
 12803  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12804  010F8C  0EED               	movlw	-19
 12805  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12806  010F94  0E7C               	movlw	low _dbuf
 12807  010F96  243C               	addwf	(btemp+10)^0,w,c
 12808  010F98  6ED9               	movwf	fsr2l,c
 12809  010F9A  0E01               	movlw	high _dbuf
 12810  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12811  010F9E  6EDA               	movwf	fsr2h,c
 12812  010FA0  0E00               	movlw	0
 12813  010FA2  6EDF               	movwf	indf2,c
 12814                           
 12815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12816                           ;stkvar	_sign @ sp[(-56)+42]
 12817  010FA4  0EF2               	movlw	-14
 12818  010FA6  6AE3               	clrf	plusw1,c
 12819  010FA8  0EF3               	movlw	-13
 12820  010FAA  6AE3               	clrf	plusw1,c
 12821                           
 12822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12823                           ;stkvar	_e @ sp[(-56)+34]
 12824  010FAC  0EEB               	movlw	-21
 12825  010FAE  AEE3               	btfss	plusw1,7,c
 12826  010FB0  D012               	goto	l10141
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12829  010FB2  0E01               	movlw	1
 12830  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12831  010FB6  0E00               	movlw	0
 12832  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12833                           
 12834                           ;stkvar	_sign @ sp[(-56)+42]
 12835  010FBA  0EF2               	movlw	-14
 12836  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12837  010FC2  0EF3               	movlw	-13
 12838  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12839                           
 12840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12841                           ;stkvar	_e @ sp[(-56)+34]
 12842                           ;stkvar	_e @ sp[(-56)+34]
 12843  010FCA  0EEA               	movlw	-22
 12844  010FCC  6CE3               	negf	plusw1,c
 12845  010FCE  0EEB               	movlw	-21
 12846  010FD0  1EE3               	comf	plusw1,f,c
 12847  010FD2  B0D8               	btfsc	status,0,c
 12848  010FD4  2AE3               	incf	plusw1,f,c
 12849  010FD6                     l10141:
 12850                           
 12851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12852  010FD6  0E02               	movlw	2
 12853  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12854  010FDA  0E00               	movlw	0
 12855  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12856                           
 12857                           ;stkvar	_p @ sp[(-56)+40]
 12858  010FDE  0EF0               	movlw	-16
 12859  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12860  010FE6  0EF1               	movlw	-15
 12861  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12864  010FEE  D051               	goto	l10153
 12865  010FF0                     l10143:
 12866                           
 12867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12868                           ;stkvar	_i @ sp[(-56)+36]
 12869  010FF0  50E1               	movf	fsr1l,w,c
 12870  010FF2  0FEC               	addlw	-20
 12871  010FF4  6ED9               	movwf	fsr2l,c
 12872  010FF6  50E2               	movf	fsr1h,w,c
 12873  010FF8  6EDA               	movwf	fsr2h,c
 12874  010FFA  0EFF               	movlw	255
 12875  010FFC  22DA               	addwfc	fsr2h,f,c
 12876  010FFE  06DE               	decf	postinc2,f,c
 12877  011000  0E00               	movlw	0
 12878  011002  5ADD               	subwfb	postdec2,f,c
 12879                           
 12880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12881                           ;stkvar	_i @ sp[(-56)+36]
 12882  011004  0EEC               	movlw	-20
 12883  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12884  01100C  0EED               	movlw	-19
 12885  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12886  011014  0E7C               	movlw	low _dbuf
 12887  011016  243C               	addwf	(btemp+10)^0,w,c
 12888  011018  6ED9               	movwf	fsr2l,c
 12889  01101A  0E01               	movlw	high _dbuf
 12890  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12891  01101E  6EDA               	movwf	fsr2h,c
 12892  011020  0E0A               	movlw	10
 12893  011022  6EE6               	movwf	postinc1,c
 12894  011024  0E00               	movlw	0
 12895  011026  6EE6               	movwf	postinc1,c
 12896                           
 12897                           ;stkvar	_e @ sp[(-58)+34]
 12898  011028  0EE8               	movlw	-24
 12899  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12900  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12901  011036  EC12  F0B6         	call	___awmod	;wreg free
 12902  01103A  5032               	movf	btemp^0,w,c
 12903  01103C  0F30               	addlw	48
 12904  01103E  6EDF               	movwf	indf2,c
 12905                           
 12906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12907  011040  0E0A               	movlw	10
 12908  011042  6EE6               	movwf	postinc1,c
 12909  011044  0E00               	movlw	0
 12910  011046  6EE6               	movwf	postinc1,c
 12911                           
 12912                           ;stkvar	_e @ sp[(-58)+34]
 12913  011048  0EE8               	movlw	-24
 12914  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12915  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12916  011056  EC9E  F0B3         	call	___awdiv	;wreg free
 12917                           
 12918                           ;stkvar	_e @ sp[(-56)+34]
 12919  01105A  0EEA               	movlw	-22
 12920  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12921  011062  0EEB               	movlw	-21
 12922  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12923                           
 12924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12925                           ;stkvar	_p @ sp[(-56)+40]
 12926  01106A  50E1               	movf	fsr1l,w,c
 12927  01106C  0FF0               	addlw	-16
 12928  01106E  6ED9               	movwf	fsr2l,c
 12929  011070  50E2               	movf	fsr1h,w,c
 12930  011072  6EDA               	movwf	fsr2h,c
 12931  011074  0EFF               	movlw	255
 12932  011076  22DA               	addwfc	fsr2h,f,c
 12933  011078  06DE               	decf	postinc2,f,c
 12934  01107A  0E00               	movlw	0
 12935  01107C  5ADD               	subwfb	postdec2,f,c
 12936                           
 12937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12938                           ;stkvar	_w @ sp[(-56)+38]
 12939  01107E  50E1               	movf	fsr1l,w,c
 12940  011080  0FEE               	addlw	-18
 12941  011082  6ED9               	movwf	fsr2l,c
 12942  011084  50E2               	movf	fsr1h,w,c
 12943  011086  6EDA               	movwf	fsr2h,c
 12944  011088  0EFF               	movlw	255
 12945  01108A  22DA               	addwfc	fsr2h,f,c
 12946  01108C  06DE               	decf	postinc2,f,c
 12947  01108E  0E00               	movlw	0
 12948  011090  5ADD               	subwfb	postdec2,f,c
 12949  011092                     l10153:
 12950                           
 12951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12952                           ;stkvar	_e @ sp[(-56)+34]
 12953  011092  0EEA               	movlw	-22
 12954  011094  006F FF8C  F032    	movff	plusw1,btemp
 12955  01109A  0EEB               	movlw	-21
 12956  01109C  50E3               	movf	plusw1,w,c
 12957  01109E  1032               	iorwf	btemp^0,w,c
 12958  0110A0  A4D8               	btfss	status,2,c
 12959  0110A2  D7A6               	goto	l10143
 12960                           
 12961                           ;stkvar	_p @ sp[(-56)+40]
 12962  0110A4  0EF1               	movlw	-15
 12963  0110A6  BEE3               	btfsc	plusw1,7,c
 12964  0110A8  D007               	goto	u9860
 12965  0110AA  0EF1               	movlw	-15
 12966  0110AC  50E3               	movf	plusw1,w,c
 12967  0110AE  E1A0               	bnz	l10143
 12968  0110B0  0EF0               	movlw	-16
 12969  0110B2  04E3               	decf	plusw1,w,c
 12970  0110B4  B0D8               	btfsc	status,0,c
 12971  0110B6  D79C               	goto	l10143
 12972  0110B8                     u9860:
 12973                           
 12974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12975                           ;stkvar	_i @ sp[(-56)+36]
 12976  0110B8  50E1               	movf	fsr1l,w,c
 12977  0110BA  0FEC               	addlw	-20
 12978  0110BC  6ED9               	movwf	fsr2l,c
 12979  0110BE  50E2               	movf	fsr1h,w,c
 12980  0110C0  6EDA               	movwf	fsr2h,c
 12981  0110C2  0EFF               	movlw	255
 12982  0110C4  22DA               	addwfc	fsr2h,f,c
 12983  0110C6  06DE               	decf	postinc2,f,c
 12984  0110C8  0E00               	movlw	0
 12985  0110CA  5ADD               	subwfb	postdec2,f,c
 12986                           
 12987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12988                           ;stkvar	_sign @ sp[(-56)+42]
 12989  0110CC  0EF2               	movlw	-14
 12990  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12991  0110D4  0EF3               	movlw	-13
 12992  0110D6  50E3               	movf	plusw1,w,c
 12993  0110D8  1032               	iorwf	btemp^0,w,c
 12994  0110DA  A4D8               	btfss	status,2,c
 12995  0110DC  D002               	goto	l10163
 12996  0110DE  0E2B               	movlw	43
 12997  0110E0  D001               	goto	L11
 12998  0110E2                     l10163:
 12999  0110E2  0E2D               	movlw	45
 13000  0110E4                     L11:
 13001  0110E4  6E3C               	movwf	(btemp+10)^0,c
 13002  0110E6  0E00               	movlw	0
 13003  0110E8  6E3D               	movwf	(btemp+11)^0,c
 13004                           
 13005                           ;stkvar	_efgtoa$4625 @ sp[(-56)+4]
 13006  0110EA  0ECC               	movlw	-52
 13007  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13008  0110F2  0ECD               	movlw	-51
 13009  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13010                           
 13011                           ;stkvar	_efgtoa$4625 @ sp[(-56)+4]
 13012                           ;stkvar	_i @ sp[(-56)+36]
 13013  0110FA  0EEC               	movlw	-20
 13014  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13015  011102  0EED               	movlw	-19
 13016  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 13017  01110A  0E7C               	movlw	low _dbuf
 13018  01110C  243C               	addwf	(btemp+10)^0,w,c
 13019  01110E  6ED9               	movwf	fsr2l,c
 13020  011110  0E01               	movlw	high _dbuf
 13021  011112  203D               	addwfc	(btemp+11)^0,w,c
 13022  011114  6EDA               	movwf	fsr2h,c
 13023  011116  0ECC               	movlw	-52
 13024  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13025                           
 13026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13027                           ;stkvar	_w @ sp[(-56)+38]
 13028  01111E  50E1               	movf	fsr1l,w,c
 13029  011120  0FEE               	addlw	-18
 13030  011122  6ED9               	movwf	fsr2l,c
 13031  011124  50E2               	movf	fsr1h,w,c
 13032  011126  6EDA               	movwf	fsr2h,c
 13033  011128  0EFF               	movlw	255
 13034  01112A  22DA               	addwfc	fsr2h,f,c
 13035  01112C  06DE               	decf	postinc2,f,c
 13036  01112E  0E00               	movlw	0
 13037  011130  5ADD               	subwfb	postdec2,f,c
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13040                           ;stkvar	_i @ sp[(-56)+36]
 13041  011132  50E1               	movf	fsr1l,w,c
 13042  011134  0FEC               	addlw	-20
 13043  011136  6ED9               	movwf	fsr2l,c
 13044  011138  50E2               	movf	fsr1h,w,c
 13045  01113A  6EDA               	movwf	fsr2h,c
 13046  01113C  0EFF               	movlw	255
 13047  01113E  22DA               	addwfc	fsr2h,f,c
 13048  011140  06DE               	decf	postinc2,f,c
 13049  011142  0E00               	movlw	0
 13050  011144  5ADD               	subwfb	postdec2,f,c
 13051  011146  0EBF               	movlw	191
 13052  011148  6E3C               	movwf	(btemp+10)^0,c
 13053  01114A  0EFF               	movlw	255
 13054  01114C  6E3D               	movwf	(btemp+11)^0,c
 13055                           
 13056                           ;stkvar	_c @ sp[(-56)+-7]
 13057  01114E  0EC1               	movlw	-63
 13058  011150  50E3               	movf	plusw1,w,c
 13059  011152  6E3A               	movwf	(btemp+8)^0,c
 13060  011154  6A3B               	clrf	(btemp+9)^0,c
 13061  011156  503C               	movf	(btemp+10)^0,w,c
 13062  011158  263A               	addwf	(btemp+8)^0,f,c
 13063  01115A  503D               	movf	(btemp+11)^0,w,c
 13064  01115C  223B               	addwfc	(btemp+9)^0,f,c
 13065  01115E  503B               	movf	(btemp+9)^0,w,c
 13066  011160  E106               	bnz	u9880
 13067  011162  0E1A               	movlw	26
 13068  011164  5C3A               	subwf	(btemp+8)^0,w,c
 13069  011166  B0D8               	btfsc	status,0,c
 13070  011168  D002               	goto	u9880
 13071  01116A  0E01               	movlw	1
 13072  01116C  D001               	goto	u9890
 13073  01116E                     u9880:
 13074  01116E  0E00               	movlw	0
 13075  011170                     u9890:
 13076  011170  6E3C               	movwf	(btemp+10)^0,c
 13077  011172  6A3D               	clrf	(btemp+11)^0,c
 13078                           
 13079                           ;stkvar	_efgtoa$4627 @ sp[(-56)+0]
 13080  011174  0EC8               	movlw	-56
 13081  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13082  01117C  0EC9               	movlw	-55
 13083  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13084                           
 13085                           ;stkvar	_efgtoa$4627 @ sp[(-56)+0]
 13086  011184  0EC8               	movlw	-56
 13087  011186  006F FF8C  F032    	movff	plusw1,btemp
 13088  01118C  0EC9               	movlw	-55
 13089  01118E  50E3               	movf	plusw1,w,c
 13090  011190  1032               	iorwf	btemp^0,w,c
 13091  011192  A4D8               	btfss	status,2,c
 13092  011194  D002               	goto	l10179
 13093  011196  0E65               	movlw	101
 13094  011198  D001               	goto	L12
 13095  01119A                     l10179:
 13096  01119A  0E45               	movlw	69
 13097  01119C                     L12:
 13098  01119C  6E3C               	movwf	(btemp+10)^0,c
 13099  01119E  0E00               	movlw	0
 13100  0111A0  6E3D               	movwf	(btemp+11)^0,c
 13101                           
 13102                           ;stkvar	_efgtoa$4626 @ sp[(-56)+2]
 13103  0111A2  0ECA               	movlw	-54
 13104  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13105  0111AA  0ECB               	movlw	-53
 13106  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13107                           
 13108                           ;stkvar	_efgtoa$4626 @ sp[(-56)+2]
 13109                           ;stkvar	_i @ sp[(-56)+36]
 13110  0111B2  0EEC               	movlw	-20
 13111  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13112  0111BA  0EED               	movlw	-19
 13113  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13114  0111C2  0E7C               	movlw	low _dbuf
 13115  0111C4  243C               	addwf	(btemp+10)^0,w,c
 13116  0111C6  6ED9               	movwf	fsr2l,c
 13117  0111C8  0E01               	movlw	high _dbuf
 13118  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 13119  0111CC  6EDA               	movwf	fsr2h,c
 13120  0111CE  0ECA               	movlw	-54
 13121  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13122                           
 13123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13124                           ;stkvar	_w @ sp[(-56)+38]
 13125  0111D6  50E1               	movf	fsr1l,w,c
 13126  0111D8  0FEE               	addlw	-18
 13127  0111DA  6ED9               	movwf	fsr2l,c
 13128  0111DC  50E2               	movf	fsr1h,w,c
 13129  0111DE  6EDA               	movwf	fsr2h,c
 13130  0111E0  0EFF               	movlw	255
 13131  0111E2  22DA               	addwfc	fsr2h,f,c
 13132  0111E4  06DE               	decf	postinc2,f,c
 13133  0111E6  0E00               	movlw	0
 13134  0111E8  5ADD               	subwfb	postdec2,f,c
 13135                           
 13136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13137                           ;stkvar	_i @ sp[(-56)+36]
 13138  0111EA  0EEC               	movlw	-20
 13139  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13140  0111F2  0EED               	movlw	-19
 13141  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13142  0111FA  0E7C               	movlw	low _dbuf
 13143  0111FC  243C               	addwf	(btemp+10)^0,w,c
 13144  0111FE  6E3A               	movwf	(btemp+8)^0,c
 13145  011200  0E01               	movlw	high _dbuf
 13146  011202  203D               	addwfc	(btemp+11)^0,w,c
 13147  011204  6E3B               	movwf	(btemp+9)^0,c
 13148  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 13149  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 13150                           
 13151                           ;stkvar	_n @ sp[(-58)+32]
 13152  011212  0E7C               	movlw	low _dbuf
 13153  011214  6E3C               	movwf	(btemp+10)^0,c
 13154  011216  0E01               	movlw	high _dbuf
 13155  011218  6E3D               	movwf	(btemp+11)^0,c
 13156  01121A  0EE6               	movlw	-26
 13157  01121C  50E3               	movf	plusw1,w,c
 13158  01121E  263C               	addwf	(btemp+10)^0,f,c
 13159  011220  0EE7               	movlw	-25
 13160  011222  50E3               	movf	plusw1,w,c
 13161  011224  223D               	addwfc	(btemp+11)^0,f,c
 13162  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 13163  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 13164  011232  ECA4  F0B9         	call	_strcpy	;wreg free
 13165  011236  EF16  F081         	goto	l9931
 13166  01123A                     l1928:
 13167                           
 13168                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13169  01123A  0EC1               	movlw	193
 13170  01123C  26E1               	addwf	fsr1l,f,c
 13171  01123E  0EFF               	movlw	255
 13172  011240  22E2               	addwfc	fsr1h,f,c
 13173  011242  0012               	return		;funcret
 13174  011244                     __end_of_efgtoa:
 13175                           	opt callstack 0
 13176                           
 13177 ;; *************** function _tolower *****************
 13178 ;; Defined at:
 13179 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;  c               2  [STACK] int 
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;		None
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  2  [STACK] int 
 13186 ;; Registers used:
 13187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/5
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13197 ;;Total ram usage:        0 bytes
 13198 ;; Hardware stack levels used:    1
 13199 ;; Hardware stack levels required when called:    7
 13200 ;; This function calls:
 13201 ;;		_isupper
 13202 ;; This function is called by:
 13203 ;;		_efgtoa
 13204 ;;		_vfpfcnvrt
 13205 ;; This function uses a reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text47
 13209  017C46                     __ptext47:
 13210                           	opt callstack 0
 13211  017C46                     _tolower:
 13212                           	opt callstack 0
 13213                           
 13214                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13215  017C46  52E6               	movf	postinc1,f,c
 13216  017C48  52E6               	movf	postinc1,f,c
 13217                           
 13218                           ;stkvar	_c @ sp[(-2)+-2]
 13219                           
 13220                           ;incstack = 0
 13221  017C4A  0EFC               	movlw	-4
 13222  017C4C  50E3               	movf	plusw1,w,c
 13223  017C4E  0FBF               	addlw	191
 13224  017C50  6E3C               	movwf	(btemp+10)^0,c
 13225  017C52  0EFD               	movlw	-3
 13226  017C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 13227  017C5A  0EFF               	movlw	255
 13228  017C5C  223D               	addwfc	(btemp+11)^0,f,c
 13229  017C5E  503D               	movf	(btemp+11)^0,w,c
 13230  017C60  E106               	bnz	u5240
 13231  017C62  0E1A               	movlw	26
 13232  017C64  5C3C               	subwf	(btemp+10)^0,w,c
 13233  017C66  B0D8               	btfsc	status,0,c
 13234  017C68  D002               	goto	u5240
 13235  017C6A  0E01               	movlw	1
 13236  017C6C  D001               	goto	u5250
 13237  017C6E                     u5240:
 13238  017C6E  0E00               	movlw	0
 13239  017C70                     u5250:
 13240  017C70  6E3C               	movwf	(btemp+10)^0,c
 13241  017C72  6A3D               	clrf	(btemp+11)^0,c
 13242                           
 13243                           ;stkvar	_tolower$5293 @ sp[(-2)+0]
 13244  017C74  0EFE               	movlw	-2
 13245  017C76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13246  017C7C  0EFF               	movlw	-1
 13247  017C7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13248                           
 13249                           ;stkvar	_tolower$5293 @ sp[(-2)+0]
 13250  017C84  0EFE               	movlw	-2
 13251  017C86  006F FF8C  F032    	movff	plusw1,btemp
 13252  017C8C  0EFF               	movlw	-1
 13253  017C8E  50E3               	movf	plusw1,w,c
 13254  017C90  1032               	iorwf	btemp^0,w,c
 13255  017C92  B4D8               	btfsc	status,2,c
 13256  017C94  D00D               	goto	l6703
 13257                           
 13258                           ;stkvar	_c @ sp[(-2)+-2]
 13259  017C96  0EFC               	movlw	-4
 13260  017C98  006F FF8C  F032    	movff	plusw1,btemp
 13261  017C9E  0EFD               	movlw	-3
 13262  017CA0  006F FF8C  F033    	movff	plusw1,btemp+1
 13263  017CA6  0E20               	movlw	32
 13264  017CA8  1232               	iorwf	btemp^0,f,c
 13265  017CAA  0E00               	movlw	0
 13266  017CAC  1233               	iorwf	(btemp+1)^0,f,c
 13267  017CAE  D008               	goto	l2951
 13268  017CB0                     l6703:
 13269                           
 13270                           ;stkvar	_c @ sp[(-2)+-2]
 13271  017CB0  0EFC               	movlw	-4
 13272  017CB2  006F FF8C  F032    	movff	plusw1,btemp
 13273  017CB8  0EFD               	movlw	-3
 13274  017CBA  006F FF8C  F033    	movff	plusw1,btemp+1
 13275  017CC0                     l2951:
 13276                           
 13277                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13278  017CC0  52E5               	movf	postdec1,f,c
 13279  017CC2  52E5               	movf	postdec1,f,c
 13280  017CC4  52E5               	movf	postdec1,f,c
 13281  017CC6  52E5               	movf	postdec1,f,c
 13282  017CC8  0012               	return		;funcret
 13283  017CCA                     __end_of_tolower:
 13284                           	opt callstack 0
 13285                           
 13286 ;; *************** function _isupper *****************
 13287 ;; Defined at:
 13288 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;  c               2  [STACK] int 
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;		None
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  2  [STACK] int 
 13295 ;; Registers used:
 13296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/0
 13299 ;;		On exit  : 0/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13306 ;;Total ram usage:        0 bytes
 13307 ;; Hardware stack levels used:    1
 13308 ;; Hardware stack levels required when called:    6
 13309 ;; This function calls:
 13310 ;;		Nothing
 13311 ;; This function is called by:
 13312 ;;		_efgtoa
 13313 ;;		_xtoa
 13314 ;;		_vfpfcnvrt
 13315 ;;		_tolower
 13316 ;; This function uses a reentrant model
 13317 ;;
 13318                           
 13319                           	psect	text48
 13320  0186EA                     __ptext48:
 13321                           	opt callstack 0
 13322  0186EA                     _isupper:
 13323                           	opt callstack 17
 13324                           
 13325                           ;stkvar	_c @ sp[(0)+-2]
 13326                           
 13327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13328                           ;incstack = 0
 13329  0186EA  0EFE               	movlw	-2
 13330  0186EC  50E3               	movf	plusw1,w,c
 13331  0186EE  0FBF               	addlw	191
 13332  0186F0  6E3C               	movwf	(btemp+10)^0,c
 13333  0186F2  0EFF               	movlw	-1
 13334  0186F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13335  0186FA  0EFF               	movlw	255
 13336  0186FC  223D               	addwfc	(btemp+11)^0,f,c
 13337  0186FE  503D               	movf	(btemp+11)^0,w,c
 13338  018700  E106               	bnz	u4640
 13339  018702  0E1A               	movlw	26
 13340  018704  5C3C               	subwf	(btemp+10)^0,w,c
 13341  018706  B0D8               	btfsc	status,0,c
 13342  018708  D002               	goto	u4640
 13343  01870A  0E01               	movlw	1
 13344  01870C  D001               	goto	u4650
 13345  01870E                     u4640:
 13346  01870E  0E00               	movlw	0
 13347  018710                     u4650:
 13348  018710  6E32               	movwf	btemp^0,c
 13349  018712  6A33               	clrf	(btemp+1)^0,c
 13350                           
 13351                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13352  018714  52E5               	movf	postdec1,f,c
 13353  018716  52E5               	movf	postdec1,f,c
 13354  018718  0012               	return		;funcret
 13355  01871A                     __end_of_isupper:
 13356                           	opt callstack 0
 13357                           
 13358 ;; *************** function _strcpy *****************
 13359 ;; Defined at:
 13360 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  dest            2  [STACK] PTR unsigned char 
 13363 ;;		 -> dbuf(80), 
 13364 ;;  src             2  [STACK] PTR const unsigned char 
 13365 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13366 ;;		 -> dbuf(80), 
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;  d               2  [STACK] PTR unsigned char 
 13369 ;;		 -> dbuf(80), 
 13370 ;;  s               2  [STACK] PTR const unsigned char 
 13371 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13372 ;;		 -> dbuf(80), 
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  2  [STACK] PTR unsigned char 
 13375 ;; Registers used:
 13376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/5
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13386 ;;Total ram usage:        0 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    6
 13389 ;; This function calls:
 13390 ;;		Nothing
 13391 ;; This function is called by:
 13392 ;;		_efgtoa
 13393 ;; This function uses a reentrant model
 13394 ;;
 13395                           
 13396                           	psect	text49
 13397  017348                     __ptext49:
 13398                           	opt callstack 0
 13399  017348                     _strcpy:
 13400                           	opt callstack 0
 13401                           
 13402                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13403  017348  52E6               	movf	postinc1,f,c
 13404  01734A  52E6               	movf	postinc1,f,c
 13405  01734C  52E6               	movf	postinc1,f,c
 13406  01734E  52E6               	movf	postinc1,f,c
 13407                           
 13408                           ;stkvar	_src @ sp[(-4)+-4]
 13409                           
 13410                           ;incstack = 0
 13411  017350  0EF8               	movlw	-8
 13412  017352  006F FF8C  F03C    	movff	plusw1,btemp+10
 13413  017358  0EF9               	movlw	-7
 13414  01735A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13415                           
 13416                           ;stkvar	_s @ sp[(-4)+2]
 13417  017360  0EFF               	movlw	-1
 13418  017362  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13419  017368  0EFE               	movlw	-2
 13420  01736A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13421                           
 13422                           ;stkvar	_dest @ sp[(-4)+-2]
 13423  017370  0EFA               	movlw	-6
 13424  017372  006F FF8C  F03C    	movff	plusw1,btemp+10
 13425  017378  0EFB               	movlw	-5
 13426  01737A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13427                           
 13428                           ;stkvar	_d @ sp[(-4)+0]
 13429  017380  0EFD               	movlw	-3
 13430  017382  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13431  017388  0EFC               	movlw	-4
 13432  01738A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13433  017390                     l9805:
 13434                           
 13435                           ;stkvar	_s @ sp[(-4)+2]
 13436  017390  50E1               	movf	fsr1l,w,c
 13437  017392  0FFE               	addlw	-2
 13438  017394  6ED9               	movwf	fsr2l,c
 13439  017396  50E2               	movf	fsr1h,w,c
 13440  017398  6EDA               	movwf	fsr2h,c
 13441  01739A  0EFF               	movlw	255
 13442  01739C  22DA               	addwfc	fsr2h,f,c
 13443  01739E  006F FF7C  F03C    	movff	indf2,btemp+10
 13444  0173A4  0E01               	movlw	1
 13445  0173A6  26DE               	addwf	postinc2,f,c
 13446  0173A8  006F FF7C  F03D    	movff	indf2,btemp+11
 13447  0173AE  0E00               	movlw	0
 13448  0173B0  22DD               	addwfc	postdec2,f,c
 13449  0173B2  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13450  0173B8  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13451  0173BE  0E00               	movlw	low (__mediumconst shr (0+16))
 13452  0173C0  6EF8               	movwf	tblptru,c
 13453                           
 13454                           ;stkvar	_d @ sp[(-4)+0]
 13455  0173C2  50E1               	movf	fsr1l,w,c
 13456  0173C4  0FFC               	addlw	-4
 13457  0173C6  6ED9               	movwf	fsr2l,c
 13458  0173C8  50E2               	movf	fsr1h,w,c
 13459  0173CA  6EDA               	movwf	fsr2h,c
 13460  0173CC  0EFF               	movlw	255
 13461  0173CE  22DA               	addwfc	fsr2h,f,c
 13462  0173D0  006F FF7C  F03C    	movff	indf2,btemp+10
 13463  0173D6  0E01               	movlw	1
 13464  0173D8  26DE               	addwf	postinc2,f,c
 13465  0173DA  006F FF7C  F03D    	movff	indf2,btemp+11
 13466  0173E0  0E00               	movlw	0
 13467  0173E2  22DD               	addwfc	postdec2,f,c
 13468  0173E4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13469  0173EA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13470  0173F0  0E1F               	movlw	(high __ramtop+-1)
 13471  0173F2  64F7               	cpfsgt	tblptrh,c
 13472  0173F4  D003               	bra	u9197
 13473  0173F6  0008               	tblrd		*
 13474  0173F8  50F5               	movf	tablat,w,c
 13475  0173FA  D007               	bra	u9190
 13476  0173FC                     u9197:
 13477  0173FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13478  017402  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13479  017408  50EF               	movf	indf0,w,c
 13480  01740A                     u9190:
 13481  01740A  6EDF               	movwf	indf2,c
 13482  01740C  50DF               	movf	indf2,w,c
 13483  01740E  A4D8               	btfss	status,2,c
 13484  017410  D7BF               	goto	l9805
 13485                           
 13486                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13487  017412  0EF8               	movlw	248
 13488  017414  26E1               	addwf	fsr1l,f,c
 13489  017416  0EFF               	movlw	255
 13490  017418  22E2               	addwfc	fsr1h,f,c
 13491  01741A  0012               	return		;funcret
 13492  01741C                     __end_of_strcpy:
 13493                           	opt callstack 0
 13494                           
 13495 ;; *************** function _floorf *****************
 13496 ;; Defined at:
 13497 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  x               4  [STACK] float 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  u               4  [STACK] struct .
 13502 ;;  m               4  [STACK] unsigned long 
 13503 ;;  e               2  [STACK] int 
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  4  [STACK] float 
 13506 ;; Registers used:
 13507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/5
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13517 ;;Total ram usage:        0 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    6
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_efgtoa
 13524 ;; This function uses a reentrant model
 13525 ;;
 13526                           
 13527                           	psect	text50
 13528  01481E                     __ptext50:
 13529                           	opt callstack 0
 13530  01481E                     _floorf:
 13531                           	opt callstack 0
 13532                           
 13533                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13534  01481E  0E0A               	movlw	10
 13535  014820  26E1               	addwf	fsr1l,f,c
 13536  014822  0E00               	movlw	0
 13537  014824  22E2               	addwfc	fsr1h,f,c
 13538                           
 13539                           ;incstack = 0
 13540  014826  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13541  01482C  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13542  014832  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13543  014838  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13544                           
 13545                           ;stkvar	_u @ sp[(-10)+0]
 13546  01483E  0EF6               	movlw	-10
 13547  014840  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13548  014846  0EF7               	movlw	-9
 13549  014848  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13550  01484E  0EF8               	movlw	-8
 13551  014850  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13552  014856  0EF9               	movlw	-7
 13553  014858  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13554                           
 13555                           ;stkvar	_x @ sp[(-10)+-4]
 13556  01485E  0EF2               	movlw	-14
 13557  014860  006F FF8C  F03A    	movff	plusw1,btemp+8
 13558  014866  0EF3               	movlw	-13
 13559  014868  006F FF8C  F03B    	movff	plusw1,btemp+9
 13560  01486E  0EF4               	movlw	-12
 13561  014870  006F FF8C  F03C    	movff	plusw1,btemp+10
 13562  014876  0EF5               	movlw	-11
 13563  014878  006F FF8C  F03D    	movff	plusw1,btemp+11
 13564                           
 13565                           ;stkvar	_u @ sp[(-10)+0]
 13566  01487E  0EF6               	movlw	-10
 13567  014880  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13568  014886  0EF7               	movlw	-9
 13569  014888  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13570  01488E  0EF8               	movlw	-8
 13571  014890  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13572  014896  0EF9               	movlw	-7
 13573  014898  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13574  01489E  0E81               	movlw	129
 13575  0148A0  6E3C               	movwf	(btemp+10)^0,c
 13576  0148A2  0EFF               	movlw	255
 13577  0148A4  6E3D               	movwf	(btemp+11)^0,c
 13578                           
 13579                           ;stkvar	_u @ sp[(-10)+0]
 13580  0148A6  0EF6               	movlw	-10
 13581  0148A8  006F FF8C  F036    	movff	plusw1,btemp+4
 13582  0148AE  0EF7               	movlw	-9
 13583  0148B0  006F FF8C  F037    	movff	plusw1,btemp+5
 13584  0148B6  0EF8               	movlw	-8
 13585  0148B8  006F FF8C  F038    	movff	plusw1,btemp+6
 13586  0148BE  0EF9               	movlw	-7
 13587  0148C0  006F FF8C  F039    	movff	plusw1,btemp+7
 13588  0148C6  0E18               	movlw	24
 13589  0148C8  D005               	goto	u5270
 13590  0148CA                     u5275:
 13591  0148CA  90D8               	bcf	status,0,c
 13592  0148CC  3239               	rrcf	(btemp+7)^0,f,c
 13593  0148CE  3238               	rrcf	(btemp+6)^0,f,c
 13594  0148D0  3237               	rrcf	(btemp+5)^0,f,c
 13595  0148D2  3236               	rrcf	(btemp+4)^0,f,c
 13596  0148D4                     u5270:
 13597  0148D4  2EE8               	decfsz	wreg,f,c
 13598  0148D6  D7F9               	goto	u5275
 13599  0148D8  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13600  0148DE  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13601  0148E4  0EFF               	movlw	255
 13602  0148E6  163A               	andwf	(btemp+8)^0,f,c
 13603  0148E8  0E00               	movlw	0
 13604  0148EA  163B               	andwf	(btemp+9)^0,f,c
 13605  0148EC  503C               	movf	(btemp+10)^0,w,c
 13606  0148EE  263A               	addwf	(btemp+8)^0,f,c
 13607  0148F0  503D               	movf	(btemp+11)^0,w,c
 13608  0148F2  223B               	addwfc	(btemp+9)^0,f,c
 13609                           
 13610                           ;stkvar	_e @ sp[(-10)+8]
 13611  0148F4  0EFE               	movlw	-2
 13612  0148F6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13613  0148FC  0EFF               	movlw	-1
 13614  0148FE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13615                           
 13616                           ;stkvar	_e @ sp[(-10)+8]
 13617  014904  0EFF               	movlw	-1
 13618  014906  BEE3               	btfsc	plusw1,7,c
 13619  014908  D019               	goto	l6717
 13620  01490A  0EFF               	movlw	-1
 13621  01490C  50E3               	movf	plusw1,w,c
 13622  01490E  E108               	bnz	u5280
 13623  014910  0EFE               	movlw	-2
 13624  014912  006F FF8C  F032    	movff	plusw1,btemp
 13625  014918  0E17               	movlw	23
 13626  01491A  5E32               	subwf	btemp^0,f,c
 13627  01491C  A0D8               	btfss	status,0,c
 13628  01491E  D00E               	goto	l6717
 13629  014920                     u5280:
 13630                           
 13631                           ;stkvar	_x @ sp[(-10)+-4]
 13632  014920  0EF2               	movlw	-14
 13633  014922  006F FF8C  F032    	movff	plusw1,btemp
 13634  014928  0EF3               	movlw	-13
 13635  01492A  006F FF8C  F033    	movff	plusw1,btemp+1
 13636  014930  0EF4               	movlw	-12
 13637  014932  006F FF8C  F034    	movff	plusw1,btemp+2
 13638  014938  0EF5               	movlw	-11
 13639  01493A  D11F               	goto	L13
 13640  01493C                     l6717:
 13641                           
 13642                           ;stkvar	_e @ sp[(-10)+8]
 13643  01493C  0EFF               	movlw	-1
 13644  01493E  BEE3               	btfsc	plusw1,7,c
 13645  014940  D0B4               	goto	l6733
 13646                           
 13647                           ;stkvar	_e @ sp[(-10)+8]
 13648  014942  0EFE               	movlw	-2
 13649  014944  006F FF8C  F03D    	movff	plusw1,btemp+11
 13650  01494A  0EFF               	movlw	255
 13651  01494C  6E36               	movwf	(btemp+4)^0,c
 13652  01494E  0EFF               	movlw	255
 13653  014950  6E37               	movwf	(btemp+5)^0,c
 13654  014952  0E7F               	movlw	127
 13655  014954  6E38               	movwf	(btemp+6)^0,c
 13656  014956  0E00               	movlw	0
 13657  014958  6E39               	movwf	(btemp+7)^0,c
 13658  01495A                     u5305:
 13659  01495A  663D               	tstfsz	(btemp+11)^0,c
 13660  01495C  D001               	goto	u5306
 13661  01495E  D007               	goto	u5307
 13662  014960                     u5306:
 13663  014960  3439               	rlcf	(btemp+7)^0,w,c
 13664  014962  3239               	rrcf	(btemp+7)^0,f,c
 13665  014964  3238               	rrcf	(btemp+6)^0,f,c
 13666  014966  3237               	rrcf	(btemp+5)^0,f,c
 13667  014968  3236               	rrcf	(btemp+4)^0,f,c
 13668  01496A  2E3D               	decfsz	(btemp+11)^0,f,c
 13669  01496C  D7F6               	goto	u5305
 13670  01496E                     u5307:
 13671                           
 13672                           ;stkvar	_m @ sp[(-10)+4]
 13673  01496E  0EFA               	movlw	-6
 13674  014970  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13675  014976  0EFB               	movlw	-5
 13676  014978  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13677  01497E  0EFC               	movlw	-4
 13678  014980  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13679  014986  0EFD               	movlw	-3
 13680  014988  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13681                           
 13682                           ;stkvar	_m @ sp[(-10)+4]
 13683                           ;stkvar	_u @ sp[(-10)+0]
 13684  01498E  0EF6               	movlw	-10
 13685  014990  006F FF8C  F03A    	movff	plusw1,btemp+8
 13686  014996  0EF7               	movlw	-9
 13687  014998  006F FF8C  F03B    	movff	plusw1,btemp+9
 13688  01499E  0EF8               	movlw	-8
 13689  0149A0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13690  0149A6  0EF9               	movlw	-7
 13691  0149A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13692  0149AE  0EFA               	movlw	-6
 13693  0149B0  50E3               	movf	plusw1,w,c
 13694  0149B2  163A               	andwf	(btemp+8)^0,f,c
 13695  0149B4  0EFB               	movlw	-5
 13696  0149B6  50E3               	movf	plusw1,w,c
 13697  0149B8  163B               	andwf	(btemp+9)^0,f,c
 13698  0149BA  0EFC               	movlw	-4
 13699  0149BC  50E3               	movf	plusw1,w,c
 13700  0149BE  163C               	andwf	(btemp+10)^0,f,c
 13701  0149C0  0EFD               	movlw	-3
 13702  0149C2  50E3               	movf	plusw1,w,c
 13703  0149C4  163D               	andwf	(btemp+11)^0,f,c
 13704  0149C6  503A               	movf	(btemp+8)^0,w,c
 13705  0149C8  103B               	iorwf	(btemp+9)^0,w,c
 13706  0149CA  103C               	iorwf	(btemp+10)^0,w,c
 13707  0149CC  103D               	iorwf	(btemp+11)^0,w,c
 13708  0149CE  B4D8               	btfsc	status,2,c
 13709  0149D0  D7A7               	goto	u5280
 13710                           
 13711                           ;stkvar	_u @ sp[(-10)+0]
 13712  0149D2  0EF6               	movlw	-10
 13713  0149D4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13714  0149DA  0EF7               	movlw	-9
 13715  0149DC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13716  0149E2  0EF8               	movlw	-8
 13717  0149E4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13718  0149EA  0EF9               	movlw	-7
 13719  0149EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13720  0149F2  0E20               	movlw	32
 13721  0149F4  D005               	goto	u5320
 13722  0149F6                     u5325:
 13723  0149F6  90D8               	bcf	status,0,c
 13724  0149F8  323D               	rrcf	(btemp+11)^0,f,c
 13725  0149FA  323C               	rrcf	(btemp+10)^0,f,c
 13726  0149FC  323B               	rrcf	(btemp+9)^0,f,c
 13727  0149FE  323A               	rrcf	(btemp+8)^0,f,c
 13728  014A00                     u5320:
 13729  014A00  2EE8               	decfsz	wreg,f,c
 13730  014A02  D7F9               	goto	u5325
 13731  014A04  503A               	movf	(btemp+8)^0,w,c
 13732  014A06  B4D8               	btfsc	status,2,c
 13733  014A08  D028               	goto	l6731
 13734                           
 13735                           ;stkvar	_m @ sp[(-10)+4]
 13736                           ;stkvar	_u @ sp[(-10)+0]
 13737  014A0A  0EF6               	movlw	-10
 13738  014A0C  50E3               	movf	plusw1,w,c
 13739  014A0E  6E32               	movwf	btemp^0,c
 13740  014A10  0EFA               	movlw	-6
 13741  014A12  50E3               	movf	plusw1,w,c
 13742  014A14  2632               	addwf	btemp^0,f,c
 13743  014A16  0EF6               	movlw	-10
 13744  014A18  0060  F0CB  FFE3   	movff	btemp,plusw1
 13745  014A1E  0EF7               	movlw	-9
 13746  014A20  50E3               	movf	plusw1,w,c
 13747  014A22  6E32               	movwf	btemp^0,c
 13748  014A24  0EFB               	movlw	-5
 13749  014A26  50E3               	movf	plusw1,w,c
 13750  014A28  2232               	addwfc	btemp^0,f,c
 13751  014A2A  0EF7               	movlw	-9
 13752  014A2C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13753  014A32  0EF8               	movlw	-8
 13754  014A34  50E3               	movf	plusw1,w,c
 13755  014A36  6E32               	movwf	btemp^0,c
 13756  014A38  0EFC               	movlw	-4
 13757  014A3A  50E3               	movf	plusw1,w,c
 13758  014A3C  2232               	addwfc	btemp^0,f,c
 13759  014A3E  0EF8               	movlw	-8
 13760  014A40  0060  F0CB  FFE3   	movff	btemp,plusw1
 13761  014A46  0EF9               	movlw	-7
 13762  014A48  50E3               	movf	plusw1,w,c
 13763  014A4A  6E32               	movwf	btemp^0,c
 13764  014A4C  0EFD               	movlw	-3
 13765  014A4E  50E3               	movf	plusw1,w,c
 13766  014A50  2232               	addwfc	btemp^0,f,c
 13767  014A52  0EF9               	movlw	-7
 13768  014A54  0060  F0CB  FFE3   	movff	btemp,plusw1
 13769  014A5A                     l6731:
 13770                           
 13771                           ;stkvar	_m @ sp[(-10)+4]
 13772  014A5A  0EFA               	movlw	-6
 13773  014A5C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13774  014A62  0EFB               	movlw	-5
 13775  014A64  006F FF8C  F03B    	movff	plusw1,btemp+9
 13776  014A6A  0EFC               	movlw	-4
 13777  014A6C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13778  014A72  0EFD               	movlw	-3
 13779  014A74  006F FF8C  F03D    	movff	plusw1,btemp+11
 13780  014A7A  1C3A               	comf	(btemp+8)^0,w,c
 13781  014A7C  6E36               	movwf	(btemp+4)^0,c
 13782  014A7E  1C3B               	comf	(btemp+9)^0,w,c
 13783  014A80  6E37               	movwf	(btemp+5)^0,c
 13784  014A82  1C3C               	comf	(btemp+10)^0,w,c
 13785  014A84  6E38               	movwf	(btemp+6)^0,c
 13786  014A86  1C3D               	comf	(btemp+11)^0,w,c
 13787  014A88  6E39               	movwf	(btemp+7)^0,c
 13788                           
 13789                           ;stkvar	_u @ sp[(-10)+0]
 13790  014A8A  50E1               	movf	fsr1l,w,c
 13791  014A8C  0FF6               	addlw	-10
 13792  014A8E  6ED9               	movwf	fsr2l,c
 13793  014A90  50E2               	movf	fsr1h,w,c
 13794  014A92  6EDA               	movwf	fsr2h,c
 13795  014A94  0EFF               	movlw	255
 13796  014A96  22DA               	addwfc	fsr2h,f,c
 13797  014A98  5036               	movf	(btemp+4)^0,w,c
 13798  014A9A  16DE               	andwf	postinc2,f,c
 13799  014A9C  5037               	movf	(btemp+5)^0,w,c
 13800  014A9E  16DE               	andwf	postinc2,f,c
 13801  014AA0  5038               	movf	(btemp+6)^0,w,c
 13802  014AA2  16DE               	andwf	postinc2,f,c
 13803  014AA4  5039               	movf	(btemp+7)^0,w,c
 13804  014AA6  16DE               	andwf	postinc2,f,c
 13805  014AA8  D05B               	goto	l6741
 13806  014AAA                     l6733:
 13807                           
 13808                           ;stkvar	_u @ sp[(-10)+0]
 13809  014AAA  0EF6               	movlw	-10
 13810  014AAC  006F FF8C  F03A    	movff	plusw1,btemp+8
 13811  014AB2  0EF7               	movlw	-9
 13812  014AB4  006F FF8C  F03B    	movff	plusw1,btemp+9
 13813  014ABA  0EF8               	movlw	-8
 13814  014ABC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13815  014AC2  0EF9               	movlw	-7
 13816  014AC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13817  014ACA  0E20               	movlw	32
 13818  014ACC  D005               	goto	u5340
 13819  014ACE                     u5345:
 13820  014ACE  90D8               	bcf	status,0,c
 13821  014AD0  323D               	rrcf	(btemp+11)^0,f,c
 13822  014AD2  323C               	rrcf	(btemp+10)^0,f,c
 13823  014AD4  323B               	rrcf	(btemp+9)^0,f,c
 13824  014AD6  323A               	rrcf	(btemp+8)^0,f,c
 13825  014AD8                     u5340:
 13826  014AD8  2EE8               	decfsz	wreg,f,c
 13827  014ADA  D7F9               	goto	u5345
 13828  014ADC  663A               	tstfsz	(btemp+8)^0,c
 13829  014ADE  D009               	goto	l6737
 13830                           
 13831                           ;stkvar	_u @ sp[(-10)+0]
 13832  014AE0  0EF6               	movlw	-10
 13833  014AE2  6AE3               	clrf	plusw1,c
 13834  014AE4  0EF7               	movlw	-9
 13835  014AE6  6AE3               	clrf	plusw1,c
 13836  014AE8  0EF8               	movlw	-8
 13837  014AEA  6AE3               	clrf	plusw1,c
 13838  014AEC  0EF9               	movlw	-7
 13839  014AEE  6AE3               	clrf	plusw1,c
 13840  014AF0  D037               	goto	l6741
 13841  014AF2                     l6737:
 13842                           
 13843                           ;stkvar	_u @ sp[(-10)+0]
 13844  014AF2  0EF6               	movlw	-10
 13845  014AF4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13846  014AFA  0EF7               	movlw	-9
 13847  014AFC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13848  014B02  0EF8               	movlw	-8
 13849  014B04  006F FF8C  F03C    	movff	plusw1,btemp+10
 13850  014B0A  0EF9               	movlw	-7
 13851  014B0C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13852  014B12  90D8               	bcf	status,0,c
 13853  014B14  343A               	rlcf	(btemp+8)^0,w,c
 13854  014B16  6E36               	movwf	(btemp+4)^0,c
 13855  014B18  343B               	rlcf	(btemp+9)^0,w,c
 13856  014B1A  6E37               	movwf	(btemp+5)^0,c
 13857  014B1C  343C               	rlcf	(btemp+10)^0,w,c
 13858  014B1E  6E38               	movwf	(btemp+6)^0,c
 13859  014B20  343D               	rlcf	(btemp+11)^0,w,c
 13860  014B22  6E39               	movwf	(btemp+7)^0,c
 13861  014B24  5036               	movf	(btemp+4)^0,w,c
 13862  014B26  1037               	iorwf	(btemp+5)^0,w,c
 13863  014B28  1038               	iorwf	(btemp+6)^0,w,c
 13864  014B2A  1039               	iorwf	(btemp+7)^0,w,c
 13865  014B2C  B4D8               	btfsc	status,2,c
 13866  014B2E  D018               	goto	l6741
 13867  014B30  0E00               	movlw	0
 13868  014B32  6E3A               	movwf	(btemp+8)^0,c
 13869  014B34  0E00               	movlw	0
 13870  014B36  6E3B               	movwf	(btemp+9)^0,c
 13871  014B38  0E80               	movlw	128
 13872  014B3A  6E3C               	movwf	(btemp+10)^0,c
 13873  014B3C  0EBF               	movlw	191
 13874  014B3E  6E3D               	movwf	(btemp+11)^0,c
 13875                           
 13876                           ;stkvar	_u @ sp[(-10)+0]
 13877  014B40  0EF6               	movlw	-10
 13878  014B42  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13879  014B48  0EF7               	movlw	-9
 13880  014B4A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13881  014B50  0EF8               	movlw	-8
 13882  014B52  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13883  014B58  0EF9               	movlw	-7
 13884  014B5A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13885  014B60                     l6741:
 13886                           
 13887                           ;stkvar	_u @ sp[(-10)+0]
 13888  014B60  0EF6               	movlw	-10
 13889  014B62  006F FF8C  F032    	movff	plusw1,btemp
 13890  014B68  0EF7               	movlw	-9
 13891  014B6A  006F FF8C  F033    	movff	plusw1,btemp+1
 13892  014B70  0EF8               	movlw	-8
 13893  014B72  006F FF8C  F034    	movff	plusw1,btemp+2
 13894  014B78  0EF9               	movlw	-7
 13895  014B7A                     L13:
 13896  014B7A  006F FF8C  F035    	movff	plusw1,btemp+3
 13897                           
 13898                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13899  014B80  0EF2               	movlw	242
 13900  014B82  26E1               	addwf	fsr1l,f,c
 13901  014B84  0EFF               	movlw	255
 13902  014B86  22E2               	addwfc	fsr1h,f,c
 13903  014B88  0012               	return		;funcret
 13904  014B8A                     __end_of_floorf:
 13905                           	opt callstack 0
 13906                           
 13907 ;; *************** function ___fpclassifyf *****************
 13908 ;; Defined at:
 13909 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  x               4  [STACK] float 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  u               4  [STACK] struct .
 13914 ;;  e               2  [STACK] int 
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  2  [STACK] int 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/5
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;Total ram usage:        0 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    6
 13931 ;; This function calls:
 13932 ;;		Nothing
 13933 ;; This function is called by:
 13934 ;;		_efgtoa
 13935 ;; This function uses a reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text51
 13939  0162D2                     __ptext51:
 13940                           	opt callstack 0
 13941  0162D2                     ___fpclassifyf:
 13942                           	opt callstack 0
 13943                           
 13944                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13945  0162D2  0E06               	movlw	6
 13946  0162D4  26E1               	addwf	fsr1l,f,c
 13947  0162D6  0E00               	movlw	0
 13948  0162D8  22E2               	addwfc	fsr1h,f,c
 13949                           
 13950                           ;incstack = 0
 13951  0162DA  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13952  0162E0  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13953  0162E6  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13954  0162EC  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13955                           
 13956                           ;stkvar	_u @ sp[(-6)+0]
 13957  0162F2  0EFA               	movlw	-6
 13958  0162F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13959  0162FA  0EFB               	movlw	-5
 13960  0162FC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13961  016302  0EFC               	movlw	-4
 13962  016304  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13963  01630A  0EFD               	movlw	-3
 13964  01630C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13965                           
 13966                           ;stkvar	_x @ sp[(-6)+-4]
 13967  016312  0EF6               	movlw	-10
 13968  016314  006F FF8C  F03A    	movff	plusw1,btemp+8
 13969  01631A  0EF7               	movlw	-9
 13970  01631C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13971  016322  0EF8               	movlw	-8
 13972  016324  006F FF8C  F03C    	movff	plusw1,btemp+10
 13973  01632A  0EF9               	movlw	-7
 13974  01632C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13975                           
 13976                           ;stkvar	_u @ sp[(-6)+0]
 13977  016332  0EFA               	movlw	-6
 13978  016334  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13979  01633A  0EFB               	movlw	-5
 13980  01633C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13981  016342  0EFC               	movlw	-4
 13982  016344  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13983  01634A  0EFD               	movlw	-3
 13984  01634C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13985                           
 13986                           ;stkvar	_u @ sp[(-6)+0]
 13987  016352  0EFA               	movlw	-6
 13988  016354  006F FF8C  F03A    	movff	plusw1,btemp+8
 13989  01635A  0EFB               	movlw	-5
 13990  01635C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13991  016362  0EFC               	movlw	-4
 13992  016364  006F FF8C  F03C    	movff	plusw1,btemp+10
 13993  01636A  0EFD               	movlw	-3
 13994  01636C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13995  016372  0E18               	movlw	24
 13996  016374  D005               	goto	u5150
 13997  016376                     u5155:
 13998  016376  90D8               	bcf	status,0,c
 13999  016378  323D               	rrcf	(btemp+11)^0,f,c
 14000  01637A  323C               	rrcf	(btemp+10)^0,f,c
 14001  01637C  323B               	rrcf	(btemp+9)^0,f,c
 14002  01637E  323A               	rrcf	(btemp+8)^0,f,c
 14003  016380                     u5150:
 14004  016380  2EE8               	decfsz	wreg,f,c
 14005  016382  D7F9               	goto	u5155
 14006  016384  0060  F0E8  F038   	movff	btemp+8,btemp+6
 14007  01638A  0060  F0EC  F039   	movff	btemp+9,btemp+7
 14008  016390  0EFF               	movlw	255
 14009  016392  1638               	andwf	(btemp+6)^0,f,c
 14010  016394  0E00               	movlw	0
 14011  016396  1639               	andwf	(btemp+7)^0,f,c
 14012                           
 14013                           ;stkvar	_e @ sp[(-6)+4]
 14014  016398  0EFE               	movlw	-2
 14015  01639A  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14016  0163A0  0EFF               	movlw	-1
 14017  0163A2  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14018                           
 14019                           ;stkvar	_e @ sp[(-6)+4]
 14020  0163A8  0EFE               	movlw	-2
 14021  0163AA  006F FF8C  F032    	movff	plusw1,btemp
 14022  0163B0  0EFF               	movlw	-1
 14023  0163B2  50E3               	movf	plusw1,w,c
 14024  0163B4  1032               	iorwf	btemp^0,w,c
 14025  0163B6  A4D8               	btfss	status,2,c
 14026  0163B8  D023               	goto	l6679
 14027                           
 14028                           ;stkvar	_u @ sp[(-6)+0]
 14029  0163BA  0EFA               	movlw	-6
 14030  0163BC  006F FF8C  F03A    	movff	plusw1,btemp+8
 14031  0163C2  0EFB               	movlw	-5
 14032  0163C4  006F FF8C  F03B    	movff	plusw1,btemp+9
 14033  0163CA  0EFC               	movlw	-4
 14034  0163CC  006F FF8C  F03C    	movff	plusw1,btemp+10
 14035  0163D2  0EFD               	movlw	-3
 14036  0163D4  006F FF8C  F03D    	movff	plusw1,btemp+11
 14037  0163DA  90D8               	bcf	status,0,c
 14038  0163DC  343A               	rlcf	(btemp+8)^0,w,c
 14039  0163DE  6E36               	movwf	(btemp+4)^0,c
 14040  0163E0  343B               	rlcf	(btemp+9)^0,w,c
 14041  0163E2  6E37               	movwf	(btemp+5)^0,c
 14042  0163E4  343C               	rlcf	(btemp+10)^0,w,c
 14043  0163E6  6E38               	movwf	(btemp+6)^0,c
 14044  0163E8  343D               	rlcf	(btemp+11)^0,w,c
 14045  0163EA  6E39               	movwf	(btemp+7)^0,c
 14046  0163EC  5036               	movf	(btemp+4)^0,w,c
 14047  0163EE  1037               	iorwf	(btemp+5)^0,w,c
 14048  0163F0  1038               	iorwf	(btemp+6)^0,w,c
 14049  0163F2  1039               	iorwf	(btemp+7)^0,w,c
 14050  0163F4  A4D8               	btfss	status,2,c
 14051  0163F6  D002               	goto	l6675
 14052  0163F8  0E02               	movlw	2
 14053  0163FA  D02E               	goto	L14
 14054  0163FC                     l6675:
 14055  0163FC  0E03               	movlw	3
 14056  0163FE  D02C               	goto	L14
 14057  016400                     l6679:
 14058                           
 14059                           ;stkvar	_e @ sp[(-6)+4]
 14060  016400  0EFE               	movlw	-2
 14061  016402  28E3               	incf	plusw1,w,c
 14062  016404  E128               	bnz	l6685
 14063  016406  0EFF               	movlw	-1
 14064  016408  50E3               	movf	plusw1,w,c
 14065  01640A  A4D8               	btfss	status,2,c
 14066  01640C  D024               	goto	l6685
 14067                           
 14068                           ;stkvar	_u @ sp[(-6)+0]
 14069  01640E  0EFA               	movlw	-6
 14070  016410  006F FF8C  F03A    	movff	plusw1,btemp+8
 14071  016416  0EFB               	movlw	-5
 14072  016418  006F FF8C  F03B    	movff	plusw1,btemp+9
 14073  01641E  0EFC               	movlw	-4
 14074  016420  006F FF8C  F03C    	movff	plusw1,btemp+10
 14075  016426  0EFD               	movlw	-3
 14076  016428  006F FF8C  F03D    	movff	plusw1,btemp+11
 14077  01642E  0E09               	movlw	9
 14078  016430                     u5195:
 14079  016430  90D8               	bcf	status,0,c
 14080  016432  363A               	rlcf	(btemp+8)^0,f,c
 14081  016434  363B               	rlcf	(btemp+9)^0,f,c
 14082  016436  363C               	rlcf	(btemp+10)^0,f,c
 14083  016438  363D               	rlcf	(btemp+11)^0,f,c
 14084  01643A  2EE8               	decfsz	wreg,f,c
 14085  01643C  D7F9               	goto	u5195
 14086  01643E  503A               	movf	(btemp+8)^0,w,c
 14087  016440  103B               	iorwf	(btemp+9)^0,w,c
 14088  016442  103C               	iorwf	(btemp+10)^0,w,c
 14089  016444  103D               	iorwf	(btemp+11)^0,w,c
 14090  016446  A4D8               	btfss	status,2,c
 14091  016448  D002               	goto	u5200
 14092  01644A  0E01               	movlw	1
 14093  01644C  D001               	goto	u5210
 14094  01644E                     u5200:
 14095  01644E  0E00               	movlw	0
 14096  016450                     u5210:
 14097  016450  6E32               	movwf	btemp^0,c
 14098  016452  6A33               	clrf	(btemp+1)^0,c
 14099  016454  D004               	goto	l2787
 14100  016456                     l6685:
 14101  016456  0E04               	movlw	4
 14102  016458                     L14:
 14103  016458  6E32               	movwf	btemp^0,c
 14104  01645A  0E00               	movlw	0
 14105  01645C  6E33               	movwf	(btemp+1)^0,c
 14106  01645E                     l2787:
 14107                           
 14108                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14109  01645E  0EF6               	movlw	246
 14110  016460  26E1               	addwf	fsr1l,f,c
 14111  016462  0EFF               	movlw	255
 14112  016464  22E2               	addwfc	fsr1h,f,c
 14113  016466  0012               	return		;funcret
 14114  016468                     __end_of___fpclassifyf:
 14115                           	opt callstack 0
 14116                           
 14117 ;; *************** function ___fltol *****************
 14118 ;; Defined at:
 14119 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;  f1              4  [STACK] int 
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;  exp1            1  [STACK] unsigned char 
 14124 ;;  sign1           1  [STACK] unsigned char 
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  4  [STACK] long 
 14127 ;; Registers used:
 14128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/5
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14138 ;;Total ram usage:        0 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    6
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_efgtoa
 14145 ;; This function uses a reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text52
 14149  016468                     __ptext52:
 14150                           	opt callstack 0
 14151  016468                     ___fltol:
 14152                           	opt callstack 0
 14153                           
 14154                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14155  016468  52E6               	movf	postinc1,f,c
 14156  01646A  52E6               	movf	postinc1,f,c
 14157                           
 14158                           ;stkvar	_f1 @ sp[(-2)+-4]
 14159                           
 14160                           ;incstack = 0
 14161  01646C  0EFA               	movlw	-6
 14162  01646E  006F FF8C  F03A    	movff	plusw1,btemp+8
 14163  016474  0EFB               	movlw	-5
 14164  016476  006F FF8C  F03B    	movff	plusw1,btemp+9
 14165  01647C  0EFC               	movlw	-4
 14166  01647E  006F FF8C  F03C    	movff	plusw1,btemp+10
 14167  016484  0EFD               	movlw	-3
 14168  016486  006F FF8C  F03D    	movff	plusw1,btemp+11
 14169  01648C  0E18               	movlw	24
 14170  01648E  D005               	goto	u6360
 14171  016490                     u6365:
 14172  016490  90D8               	bcf	status,0,c
 14173  016492  323D               	rrcf	(btemp+11)^0,f,c
 14174  016494  323C               	rrcf	(btemp+10)^0,f,c
 14175  016496  323B               	rrcf	(btemp+9)^0,f,c
 14176  016498  323A               	rrcf	(btemp+8)^0,f,c
 14177  01649A                     u6360:
 14178  01649A  2EE8               	decfsz	wreg,f,c
 14179  01649C  D7F9               	goto	u6365
 14180                           
 14181                           ;stkvar	_exp1 @ sp[(-2)+0]
 14182  01649E  0EFE               	movlw	-2
 14183  0164A0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14184  0164A6  0EFE               	movlw	-2
 14185  0164A8  50E3               	movf	plusw1,w,c
 14186  0164AA  A4D8               	btfss	status,2,c
 14187  0164AC  D006               	goto	l7305
 14188  0164AE                     u6370:
 14189  0164AE  0E00               	movlw	0
 14190  0164B0  6E32               	movwf	btemp^0,c
 14191  0164B2  6A33               	clrf	(btemp+1)^0,c
 14192  0164B4  6A34               	clrf	(btemp+2)^0,c
 14193  0164B6  6A35               	clrf	(btemp+3)^0,c
 14194  0164B8  D08B               	goto	l2403
 14195  0164BA                     l7305:
 14196                           
 14197                           ;stkvar	_f1 @ sp[(-2)+-4]
 14198  0164BA  0EFA               	movlw	-6
 14199  0164BC  006F FF8C  F03A    	movff	plusw1,btemp+8
 14200  0164C2  0EFB               	movlw	-5
 14201  0164C4  006F FF8C  F03B    	movff	plusw1,btemp+9
 14202  0164CA  0EFC               	movlw	-4
 14203  0164CC  006F FF8C  F03C    	movff	plusw1,btemp+10
 14204  0164D2  0EFD               	movlw	-3
 14205  0164D4  006F FF8C  F03D    	movff	plusw1,btemp+11
 14206  0164DA  0E20               	movlw	32
 14207  0164DC  D005               	goto	u6380
 14208  0164DE                     u6385:
 14209  0164DE  90D8               	bcf	status,0,c
 14210  0164E0  323D               	rrcf	(btemp+11)^0,f,c
 14211  0164E2  323C               	rrcf	(btemp+10)^0,f,c
 14212  0164E4  323B               	rrcf	(btemp+9)^0,f,c
 14213  0164E6  323A               	rrcf	(btemp+8)^0,f,c
 14214  0164E8                     u6380:
 14215  0164E8  2EE8               	decfsz	wreg,f,c
 14216  0164EA  D7F9               	goto	u6385
 14217                           
 14218                           ;stkvar	_sign1 @ sp[(-2)+1]
 14219  0164EC  0EFF               	movlw	-1
 14220  0164EE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14221                           
 14222                           ;stkvar	_f1 @ sp[(-2)+-4]
 14223  0164F4  0EFC               	movlw	-4
 14224  0164F6  8EE3               	bsf	plusw1,7,c
 14225                           
 14226                           ;stkvar	_f1 @ sp[(-2)+-4]
 14227  0164F8  50E1               	movf	fsr1l,w,c
 14228  0164FA  0FFA               	addlw	-6
 14229  0164FC  6ED9               	movwf	fsr2l,c
 14230  0164FE  50E2               	movf	fsr1h,w,c
 14231  016500  6EDA               	movwf	fsr2h,c
 14232  016502  0EFF               	movlw	255
 14233  016504  22DA               	addwfc	fsr2h,f,c
 14234  016506  0EFF               	movlw	255
 14235  016508  16DE               	andwf	postinc2,f,c
 14236  01650A  0EFF               	movlw	255
 14237  01650C  16DE               	andwf	postinc2,f,c
 14238  01650E  0EFF               	movlw	255
 14239  016510  16DE               	andwf	postinc2,f,c
 14240  016512  0E00               	movlw	0
 14241  016514  16DE               	andwf	postinc2,f,c
 14242                           
 14243                           ;stkvar	_exp1 @ sp[(-2)+0]
 14244  016516  0EFE               	movlw	-2
 14245  016518  006F FF8C  F032    	movff	plusw1,btemp
 14246  01651E  0E96               	movlw	150
 14247  016520  5E32               	subwf	btemp^0,f,c
 14248  016522  0EFE               	movlw	-2
 14249  016524  0060  F0CB  FFE3   	movff	btemp,plusw1
 14250                           
 14251                           ;stkvar	_exp1 @ sp[(-2)+0]
 14252  01652A  0EFE               	movlw	-2
 14253  01652C  AEE3               	btfss	plusw1,7,c
 14254  01652E  D014               	goto	l7323
 14255                           
 14256                           ;stkvar	_exp1 @ sp[(-2)+0]
 14257  016530  0EFE               	movlw	-2
 14258  016532  50E3               	movf	plusw1,w,c
 14259  016534  0A80               	xorlw	128
 14260  016536  0F97               	addlw	151
 14261  016538  A0D8               	btfss	status,0,c
 14262  01653A  D7B9               	goto	u6370
 14263  01653C                     l7321:
 14264                           
 14265                           ;stkvar	_f1 @ sp[(-2)+-4]
 14266  01653C  90D8               	bcf	status,0,c
 14267  01653E  0EFD               	movlw	-3
 14268  016540  32E3               	rrcf	plusw1,f,c
 14269  016542  0EFC               	movlw	-4
 14270  016544  32E3               	rrcf	plusw1,f,c
 14271  016546  0EFB               	movlw	-5
 14272  016548  32E3               	rrcf	plusw1,f,c
 14273  01654A  0EFA               	movlw	-6
 14274  01654C  32E3               	rrcf	plusw1,f,c
 14275                           
 14276                           ;stkvar	_exp1 @ sp[(-2)+0]
 14277  01654E  0EFE               	movlw	-2
 14278  016550  2AE3               	incf	plusw1,f,c
 14279  016552  B4D8               	btfsc	status,2,c
 14280  016554  D018               	goto	u6430
 14281  016556  D7F2               	goto	l7321
 14282  016558                     l7323:
 14283                           
 14284                           ;stkvar	_exp1 @ sp[(-2)+0]
 14285  016558  0EFE               	movlw	-2
 14286  01655A  006F FF8C  F032    	movff	plusw1,btemp
 14287  016560  0E1F               	movlw	31
 14288  016562  6432               	cpfsgt	btemp^0,c
 14289  016564  D00C               	goto	l7331
 14290  016566  D7A3               	goto	u6370
 14291  016568                     l7329:
 14292                           
 14293                           ;stkvar	_f1 @ sp[(-2)+-4]
 14294  016568  90D8               	bcf	status,0,c
 14295  01656A  0EFA               	movlw	-6
 14296  01656C  36E3               	rlcf	plusw1,f,c
 14297  01656E  0EFB               	movlw	-5
 14298  016570  36E3               	rlcf	plusw1,f,c
 14299  016572  0EFC               	movlw	-4
 14300  016574  36E3               	rlcf	plusw1,f,c
 14301  016576  0EFD               	movlw	-3
 14302  016578  36E3               	rlcf	plusw1,f,c
 14303                           
 14304                           ;stkvar	_exp1 @ sp[(-2)+0]
 14305  01657A  0EFE               	movlw	-2
 14306  01657C  06E3               	decf	plusw1,f,c
 14307  01657E                     l7331:
 14308                           
 14309                           ;stkvar	_exp1 @ sp[(-2)+0]
 14310  01657E  0EFE               	movlw	-2
 14311  016580  50E3               	movf	plusw1,w,c
 14312  016582  A4D8               	btfss	status,2,c
 14313  016584  D7F1               	goto	l7329
 14314  016586                     u6430:
 14315                           
 14316                           ;stkvar	_sign1 @ sp[(-2)+1]
 14317  016586  0EFF               	movlw	-1
 14318  016588  50E3               	movf	plusw1,w,c
 14319  01658A  B4D8               	btfsc	status,2,c
 14320  01658C  D011               	goto	u6450
 14321                           
 14322                           ;stkvar	_f1 @ sp[(-2)+-4]
 14323                           ;stkvar	_f1 @ sp[(-2)+-4]
 14324  01658E  0EFA               	movlw	-6
 14325  016590  6CE3               	negf	plusw1,c
 14326  016592  0EFB               	movlw	-5
 14327  016594  1EE3               	comf	plusw1,f,c
 14328  016596  0EFC               	movlw	-4
 14329  016598  1EE3               	comf	plusw1,f,c
 14330  01659A  0EFD               	movlw	-3
 14331  01659C  1EE3               	comf	plusw1,f,c
 14332  01659E  E308               	bnc	u6450
 14333  0165A0  0EFB               	movlw	-5
 14334  0165A2  2AE3               	incf	plusw1,f,c
 14335  0165A4  E305               	bnc	u6450
 14336  0165A6  0EFC               	movlw	-4
 14337  0165A8  2AE3               	incf	plusw1,f,c
 14338  0165AA  E302               	bnc	u6450
 14339  0165AC  0EFD               	movlw	-3
 14340  0165AE  2AE3               	incf	plusw1,f,c
 14341  0165B0                     u6450:
 14342                           
 14343                           ;stkvar	_f1 @ sp[(-2)+-4]
 14344  0165B0  0EFA               	movlw	-6
 14345  0165B2  006F FF8C  F032    	movff	plusw1,btemp
 14346  0165B8  0EFB               	movlw	-5
 14347  0165BA  006F FF8C  F033    	movff	plusw1,btemp+1
 14348  0165C0  0EFC               	movlw	-4
 14349  0165C2  006F FF8C  F034    	movff	plusw1,btemp+2
 14350  0165C8  0EFD               	movlw	-3
 14351  0165CA  006F FF8C  F035    	movff	plusw1,btemp+3
 14352  0165D0                     l2403:
 14353                           
 14354                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14355  0165D0  0EFA               	movlw	250
 14356  0165D2  26E1               	addwf	fsr1l,f,c
 14357  0165D4  0EFF               	movlw	255
 14358  0165D6  22E2               	addwfc	fsr1h,f,c
 14359  0165D8  0012               	return		;funcret
 14360  0165DA                     __end_of___fltol:
 14361                           	opt callstack 0
 14362                           
 14363 ;; *************** function ___flneg *****************
 14364 ;; Defined at:
 14365 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  f1              4  [STACK] long 
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;		None
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  4  [STACK] long 
 14372 ;; Registers used:
 14373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/5
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14383 ;;Total ram usage:        0 bytes
 14384 ;; Hardware stack levels used:    1
 14385 ;; Hardware stack levels required when called:    6
 14386 ;; This function calls:
 14387 ;;		Nothing
 14388 ;; This function is called by:
 14389 ;;		_efgtoa
 14390 ;; This function uses a reentrant model
 14391 ;;
 14392                           
 14393                           	psect	text53
 14394  018288                     __ptext53:
 14395                           	opt callstack 0
 14396  018288                     ___flneg:
 14397                           	opt callstack 17
 14398                           
 14399                           ;stkvar	_f1 @ sp[(0)+-4]
 14400                           
 14401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14402                           ;incstack = 0
 14403  018288  0EFC               	movlw	-4
 14404  01828A  50E3               	movf	plusw1,w,c
 14405  01828C  E10A               	bnz	u6350
 14406  01828E  0EFD               	movlw	-3
 14407  018290  50E3               	movf	plusw1,w,c
 14408  018292  E107               	bnz	u6350
 14409  018294  0EFE               	movlw	-2
 14410  018296  50E3               	movf	plusw1,w,c
 14411  018298  E104               	bnz	u6350
 14412  01829A  0EFF               	movlw	-1
 14413  01829C  50E3               	movf	plusw1,w,c
 14414  01829E  B4D8               	btfsc	status,2,c
 14415  0182A0  D002               	goto	l7295
 14416  0182A2                     u6350:
 14417                           
 14418                           ;stkvar	_f1 @ sp[(0)+-4]
 14419  0182A2  0EFF               	movlw	-1
 14420  0182A4  7EE3               	btg	plusw1,7,c
 14421  0182A6                     l7295:
 14422                           
 14423                           ;stkvar	_f1 @ sp[(0)+-4]
 14424  0182A6  0EFC               	movlw	-4
 14425  0182A8  006F FF8C  F032    	movff	plusw1,btemp
 14426  0182AE  0EFD               	movlw	-3
 14427  0182B0  006F FF8C  F033    	movff	plusw1,btemp+1
 14428  0182B6  0EFE               	movlw	-2
 14429  0182B8  006F FF8C  F034    	movff	plusw1,btemp+2
 14430  0182BE  0EFF               	movlw	-1
 14431  0182C0  006F FF8C  F035    	movff	plusw1,btemp+3
 14432                           
 14433                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14434  0182C6  52E5               	movf	postdec1,f,c
 14435  0182C8  52E5               	movf	postdec1,f,c
 14436  0182CA  52E5               	movf	postdec1,f,c
 14437  0182CC  52E5               	movf	postdec1,f,c
 14438  0182CE  0012               	return		;funcret
 14439  0182D0                     __end_of___flneg:
 14440                           	opt callstack 0
 14441                           
 14442 ;; *************** function ___flge *****************
 14443 ;; Defined at:
 14444 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;  ff1             4  [STACK] long 
 14447 ;;  ff2             4  [STACK] long 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;		None               void
 14452 ;; Registers used:
 14453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/5
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14463 ;;Total ram usage:        0 bytes
 14464 ;; Hardware stack levels used:    1
 14465 ;; Hardware stack levels required when called:    6
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_efgtoa
 14470 ;; This function uses a reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text54
 14474  0165DA                     __ptext54:
 14475                           	opt callstack 0
 14476  0165DA                     ___flge:
 14477                           	opt callstack 17
 14478                           
 14479                           ;stkvar	_ff1 @ sp[(0)+-4]
 14480                           
 14481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14482                           ;incstack = 0
 14483  0165DA  50E1               	movf	fsr1l,w,c
 14484  0165DC  0FFC               	addlw	-4
 14485  0165DE  6ED9               	movwf	fsr2l,c
 14486  0165E0  50E2               	movf	fsr1h,w,c
 14487  0165E2  6EDA               	movwf	fsr2h,c
 14488  0165E4  0EFF               	movlw	255
 14489  0165E6  22DA               	addwfc	fsr2h,f,c
 14490  0165E8  0E00               	movlw	0
 14491  0165EA  14DE               	andwf	postinc2,w,c
 14492  0165EC  6E3A               	movwf	(btemp+8)^0,c
 14493  0165EE  0E00               	movlw	0
 14494  0165F0  14DE               	andwf	postinc2,w,c
 14495  0165F2  6E3B               	movwf	(btemp+9)^0,c
 14496  0165F4  0E80               	movlw	128
 14497  0165F6  14DE               	andwf	postinc2,w,c
 14498  0165F8  6E3C               	movwf	(btemp+10)^0,c
 14499  0165FA  0E7F               	movlw	127
 14500  0165FC  14DE               	andwf	postinc2,w,c
 14501  0165FE  6E3D               	movwf	(btemp+11)^0,c
 14502  016600  503A               	movf	(btemp+8)^0,w,c
 14503  016602  103B               	iorwf	(btemp+9)^0,w,c
 14504  016604  103C               	iorwf	(btemp+10)^0,w,c
 14505  016606  103D               	iorwf	(btemp+11)^0,w,c
 14506  016608  A4D8               	btfss	status,2,c
 14507  01660A  D008               	goto	l7269
 14508                           
 14509                           ;stkvar	_ff1 @ sp[(0)+-4]
 14510  01660C  0EFC               	movlw	-4
 14511  01660E  6AE3               	clrf	plusw1,c
 14512  016610  0EFD               	movlw	-3
 14513  016612  6AE3               	clrf	plusw1,c
 14514  016614  0EFE               	movlw	-2
 14515  016616  6AE3               	clrf	plusw1,c
 14516  016618  0EFF               	movlw	-1
 14517  01661A  6AE3               	clrf	plusw1,c
 14518  01661C                     l7269:
 14519                           
 14520                           ;stkvar	_ff2 @ sp[(0)+-8]
 14521  01661C  50E1               	movf	fsr1l,w,c
 14522  01661E  0FF8               	addlw	-8
 14523  016620  6ED9               	movwf	fsr2l,c
 14524  016622  50E2               	movf	fsr1h,w,c
 14525  016624  6EDA               	movwf	fsr2h,c
 14526  016626  0EFF               	movlw	255
 14527  016628  22DA               	addwfc	fsr2h,f,c
 14528  01662A  0E00               	movlw	0
 14529  01662C  14DE               	andwf	postinc2,w,c
 14530  01662E  6E3A               	movwf	(btemp+8)^0,c
 14531  016630  0E00               	movlw	0
 14532  016632  14DE               	andwf	postinc2,w,c
 14533  016634  6E3B               	movwf	(btemp+9)^0,c
 14534  016636  0E80               	movlw	128
 14535  016638  14DE               	andwf	postinc2,w,c
 14536  01663A  6E3C               	movwf	(btemp+10)^0,c
 14537  01663C  0E7F               	movlw	127
 14538  01663E  14DE               	andwf	postinc2,w,c
 14539  016640  6E3D               	movwf	(btemp+11)^0,c
 14540  016642  503A               	movf	(btemp+8)^0,w,c
 14541  016644  103B               	iorwf	(btemp+9)^0,w,c
 14542  016646  103C               	iorwf	(btemp+10)^0,w,c
 14543  016648  103D               	iorwf	(btemp+11)^0,w,c
 14544  01664A  A4D8               	btfss	status,2,c
 14545  01664C  D008               	goto	l2369
 14546                           
 14547                           ;stkvar	_ff2 @ sp[(0)+-8]
 14548  01664E  0EF8               	movlw	-8
 14549  016650  6AE3               	clrf	plusw1,c
 14550  016652  0EF9               	movlw	-7
 14551  016654  6AE3               	clrf	plusw1,c
 14552  016656  0EFA               	movlw	-6
 14553  016658  6AE3               	clrf	plusw1,c
 14554  01665A  0EFB               	movlw	-5
 14555  01665C  6AE3               	clrf	plusw1,c
 14556  01665E                     l2369:
 14557                           
 14558                           ;stkvar	_ff1 @ sp[(0)+-4]
 14559  01665E  0EFF               	movlw	-1
 14560  016660  AEE3               	btfss	plusw1,7,c
 14561  016662  D024               	goto	l7275
 14562                           
 14563                           ;stkvar	_ff1 @ sp[(0)+-4]
 14564  016664  0E00               	movlw	0
 14565  016666  6E3A               	movwf	(btemp+8)^0,c
 14566  016668  0E00               	movlw	0
 14567  01666A  6E3B               	movwf	(btemp+9)^0,c
 14568  01666C  0E00               	movlw	0
 14569  01666E  6E3C               	movwf	(btemp+10)^0,c
 14570  016670  0E80               	movlw	128
 14571  016672  6E3D               	movwf	(btemp+11)^0,c
 14572  016674  0EFC               	movlw	-4
 14573  016676  50E3               	movf	plusw1,w,c
 14574  016678  5E3A               	subwf	(btemp+8)^0,f,c
 14575  01667A  0EFD               	movlw	-3
 14576  01667C  50E3               	movf	plusw1,w,c
 14577  01667E  5A3B               	subwfb	(btemp+9)^0,f,c
 14578  016680  0EFE               	movlw	-2
 14579  016682  50E3               	movf	plusw1,w,c
 14580  016684  5A3C               	subwfb	(btemp+10)^0,f,c
 14581  016686  0EFF               	movlw	-1
 14582  016688  50E3               	movf	plusw1,w,c
 14583  01668A  5A3D               	subwfb	(btemp+11)^0,f,c
 14584                           
 14585                           ;stkvar	_ff1 @ sp[(0)+-4]
 14586  01668C  0EFC               	movlw	-4
 14587  01668E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14588  016694  0EFD               	movlw	-3
 14589  016696  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14590  01669C  0EFE               	movlw	-2
 14591  01669E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14592  0166A4  0EFF               	movlw	-1
 14593  0166A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14594  0166AC                     l7275:
 14595                           
 14596                           ;stkvar	_ff2 @ sp[(0)+-8]
 14597  0166AC  0EFB               	movlw	-5
 14598  0166AE  AEE3               	btfss	plusw1,7,c
 14599  0166B0  D024               	goto	l7279
 14600                           
 14601                           ;stkvar	_ff2 @ sp[(0)+-8]
 14602  0166B2  0E00               	movlw	0
 14603  0166B4  6E3A               	movwf	(btemp+8)^0,c
 14604  0166B6  0E00               	movlw	0
 14605  0166B8  6E3B               	movwf	(btemp+9)^0,c
 14606  0166BA  0E00               	movlw	0
 14607  0166BC  6E3C               	movwf	(btemp+10)^0,c
 14608  0166BE  0E80               	movlw	128
 14609  0166C0  6E3D               	movwf	(btemp+11)^0,c
 14610  0166C2  0EF8               	movlw	-8
 14611  0166C4  50E3               	movf	plusw1,w,c
 14612  0166C6  5E3A               	subwf	(btemp+8)^0,f,c
 14613  0166C8  0EF9               	movlw	-7
 14614  0166CA  50E3               	movf	plusw1,w,c
 14615  0166CC  5A3B               	subwfb	(btemp+9)^0,f,c
 14616  0166CE  0EFA               	movlw	-6
 14617  0166D0  50E3               	movf	plusw1,w,c
 14618  0166D2  5A3C               	subwfb	(btemp+10)^0,f,c
 14619  0166D4  0EFB               	movlw	-5
 14620  0166D6  50E3               	movf	plusw1,w,c
 14621  0166D8  5A3D               	subwfb	(btemp+11)^0,f,c
 14622                           
 14623                           ;stkvar	_ff2 @ sp[(0)+-8]
 14624  0166DA  0EF8               	movlw	-8
 14625  0166DC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14626  0166E2  0EF9               	movlw	-7
 14627  0166E4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14628  0166EA  0EFA               	movlw	-6
 14629  0166EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14630  0166F2  0EFB               	movlw	-5
 14631  0166F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14632  0166FA                     l7279:
 14633                           
 14634                           ;stkvar	_ff1 @ sp[(0)+-4]
 14635  0166FA  0EFF               	movlw	-1
 14636  0166FC  7EE3               	btg	plusw1,7,c
 14637                           
 14638                           ;stkvar	_ff2 @ sp[(0)+-8]
 14639  0166FE  0EFB               	movlw	-5
 14640  016700  7EE3               	btg	plusw1,7,c
 14641                           
 14642                           ;stkvar	_ff2 @ sp[(0)+-8]
 14643                           ;stkvar	_ff1 @ sp[(0)+-4]
 14644  016702  50E1               	movf	fsr1l,w,c
 14645  016704  0FFC               	addlw	-4
 14646  016706  6ED9               	movwf	fsr2l,c
 14647  016708  50E2               	movf	fsr1h,w,c
 14648  01670A  6EDA               	movwf	fsr2h,c
 14649  01670C  0EFF               	movlw	255
 14650  01670E  22DA               	addwfc	fsr2h,f,c
 14651  016710  0EF8               	movlw	-8
 14652  016712  50E3               	movf	plusw1,w,c
 14653  016714  5CDE               	subwf	postinc2,w,c
 14654  016716  0EF9               	movlw	-7
 14655  016718  50E3               	movf	plusw1,w,c
 14656  01671A  58DE               	subwfb	postinc2,w,c
 14657  01671C  0EFA               	movlw	-6
 14658  01671E  50E3               	movf	plusw1,w,c
 14659  016720  58DE               	subwfb	postinc2,w,c
 14660  016722  0EFB               	movlw	-5
 14661  016724  50E3               	movf	plusw1,w,c
 14662  016726  58DE               	subwfb	postinc2,w,c
 14663  016728  B0D8               	btfsc	status,0,c
 14664  01672A  D002               	goto	l7287
 14665  01672C  9032               	bcf	btemp& (0+255),0,c
 14666  01672E  D001               	goto	l2376
 14667  016730                     l7287:
 14668  016730  8032               	bsf	btemp& (0+255),0,c
 14669  016732                     l2376:
 14670                           
 14671                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14672  016732  0EF8               	movlw	248
 14673  016734  26E1               	addwf	fsr1l,f,c
 14674  016736  0EFF               	movlw	255
 14675  016738  22E2               	addwfc	fsr1h,f,c
 14676  01673A  0012               	return		;funcret
 14677  01673C                     __end_of___flge:
 14678                           	opt callstack 0
 14679                           
 14680 ;; *************** function ___fleq *****************
 14681 ;; Defined at:
 14682 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  ff1             4  [STACK] long 
 14685 ;;  ff2             4  [STACK] long 
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;		None
 14688 ;; Return value:  Size  Location     Type
 14689 ;;		None               void
 14690 ;; Registers used:
 14691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/5
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14701 ;;Total ram usage:        0 bytes
 14702 ;; Hardware stack levels used:    1
 14703 ;; Hardware stack levels required when called:    6
 14704 ;; This function calls:
 14705 ;;		Nothing
 14706 ;; This function is called by:
 14707 ;;		_efgtoa
 14708 ;; This function uses a reentrant model
 14709 ;;
 14710                           
 14711                           	psect	text55
 14712  01741C                     __ptext55:
 14713                           	opt callstack 0
 14714  01741C                     ___fleq:
 14715                           	opt callstack 17
 14716                           
 14717                           ;stkvar	_ff1 @ sp[(0)+-4]
 14718                           
 14719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14720                           ;incstack = 0
 14721  01741C  50E1               	movf	fsr1l,w,c
 14722  01741E  0FFC               	addlw	-4
 14723  017420  6ED9               	movwf	fsr2l,c
 14724  017422  50E2               	movf	fsr1h,w,c
 14725  017424  6EDA               	movwf	fsr2h,c
 14726  017426  0EFF               	movlw	255
 14727  017428  22DA               	addwfc	fsr2h,f,c
 14728  01742A  0E00               	movlw	0
 14729  01742C  14DE               	andwf	postinc2,w,c
 14730  01742E  6E3A               	movwf	(btemp+8)^0,c
 14731  017430  0E00               	movlw	0
 14732  017432  14DE               	andwf	postinc2,w,c
 14733  017434  6E3B               	movwf	(btemp+9)^0,c
 14734  017436  0E80               	movlw	128
 14735  017438  14DE               	andwf	postinc2,w,c
 14736  01743A  6E3C               	movwf	(btemp+10)^0,c
 14737  01743C  0E7F               	movlw	127
 14738  01743E  14DE               	andwf	postinc2,w,c
 14739  017440  6E3D               	movwf	(btemp+11)^0,c
 14740  017442  503A               	movf	(btemp+8)^0,w,c
 14741  017444  103B               	iorwf	(btemp+9)^0,w,c
 14742  017446  103C               	iorwf	(btemp+10)^0,w,c
 14743  017448  103D               	iorwf	(btemp+11)^0,w,c
 14744  01744A  A4D8               	btfss	status,2,c
 14745  01744C  D008               	goto	l7253
 14746                           
 14747                           ;stkvar	_ff1 @ sp[(0)+-4]
 14748  01744E  0EFC               	movlw	-4
 14749  017450  6AE3               	clrf	plusw1,c
 14750  017452  0EFD               	movlw	-3
 14751  017454  6AE3               	clrf	plusw1,c
 14752  017456  0EFE               	movlw	-2
 14753  017458  6AE3               	clrf	plusw1,c
 14754  01745A  0EFF               	movlw	-1
 14755  01745C  6AE3               	clrf	plusw1,c
 14756  01745E                     l7253:
 14757                           
 14758                           ;stkvar	_ff2 @ sp[(0)+-8]
 14759  01745E  50E1               	movf	fsr1l,w,c
 14760  017460  0FF8               	addlw	-8
 14761  017462  6ED9               	movwf	fsr2l,c
 14762  017464  50E2               	movf	fsr1h,w,c
 14763  017466  6EDA               	movwf	fsr2h,c
 14764  017468  0EFF               	movlw	255
 14765  01746A  22DA               	addwfc	fsr2h,f,c
 14766  01746C  0E00               	movlw	0
 14767  01746E  14DE               	andwf	postinc2,w,c
 14768  017470  6E3A               	movwf	(btemp+8)^0,c
 14769  017472  0E00               	movlw	0
 14770  017474  14DE               	andwf	postinc2,w,c
 14771  017476  6E3B               	movwf	(btemp+9)^0,c
 14772  017478  0E80               	movlw	128
 14773  01747A  14DE               	andwf	postinc2,w,c
 14774  01747C  6E3C               	movwf	(btemp+10)^0,c
 14775  01747E  0E7F               	movlw	127
 14776  017480  14DE               	andwf	postinc2,w,c
 14777  017482  6E3D               	movwf	(btemp+11)^0,c
 14778  017484  503A               	movf	(btemp+8)^0,w,c
 14779  017486  103B               	iorwf	(btemp+9)^0,w,c
 14780  017488  103C               	iorwf	(btemp+10)^0,w,c
 14781  01748A  103D               	iorwf	(btemp+11)^0,w,c
 14782  01748C  A4D8               	btfss	status,2,c
 14783  01748E  D008               	goto	l7257
 14784                           
 14785                           ;stkvar	_ff2 @ sp[(0)+-8]
 14786  017490  0EF8               	movlw	-8
 14787  017492  6AE3               	clrf	plusw1,c
 14788  017494  0EF9               	movlw	-7
 14789  017496  6AE3               	clrf	plusw1,c
 14790  017498  0EFA               	movlw	-6
 14791  01749A  6AE3               	clrf	plusw1,c
 14792  01749C  0EFB               	movlw	-5
 14793  01749E  6AE3               	clrf	plusw1,c
 14794  0174A0                     l7257:
 14795                           
 14796                           ;stkvar	_ff2 @ sp[(0)+-8]
 14797                           ;stkvar	_ff1 @ sp[(0)+-4]
 14798  0174A0  50E1               	movf	fsr1l,w,c
 14799  0174A2  0FFC               	addlw	-4
 14800  0174A4  6ED9               	movwf	fsr2l,c
 14801  0174A6  50E2               	movf	fsr1h,w,c
 14802  0174A8  6EDA               	movwf	fsr2h,c
 14803  0174AA  0EFF               	movlw	255
 14804  0174AC  22DA               	addwfc	fsr2h,f,c
 14805  0174AE  0EF8               	movlw	-8
 14806  0174B0  50E3               	movf	plusw1,w,c
 14807  0174B2  18DE               	xorwf	postinc2,w,c
 14808  0174B4  E10D               	bnz	u6290
 14809  0174B6  0EF9               	movlw	-7
 14810  0174B8  50E3               	movf	plusw1,w,c
 14811  0174BA  18DE               	xorwf	postinc2,w,c
 14812  0174BC  E109               	bnz	u6290
 14813  0174BE  0EFA               	movlw	-6
 14814  0174C0  50E3               	movf	plusw1,w,c
 14815  0174C2  18DE               	xorwf	postinc2,w,c
 14816  0174C4  E105               	bnz	u6290
 14817  0174C6  0EFB               	movlw	-5
 14818  0174C8  50E3               	movf	plusw1,w,c
 14819  0174CA  18DE               	xorwf	postinc2,w,c
 14820  0174CC  B4D8               	btfsc	status,2,c
 14821  0174CE  D002               	goto	l7261
 14822  0174D0                     u6290:
 14823  0174D0  9032               	bcf	btemp& (0+255),0,c
 14824  0174D2  D001               	goto	l2365
 14825  0174D4                     l7261:
 14826  0174D4  8032               	bsf	btemp& (0+255),0,c
 14827  0174D6                     l2365:
 14828                           
 14829                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14830  0174D6  0EF8               	movlw	248
 14831  0174D8  26E1               	addwf	fsr1l,f,c
 14832  0174DA  0EFF               	movlw	255
 14833  0174DC  22E2               	addwfc	fsr1h,f,c
 14834  0174DE  0012               	return		;funcret
 14835  0174E0                     __end_of___fleq:
 14836                           	opt callstack 0
 14837                           
 14838 ;; *************** function ___fldiv *****************
 14839 ;; Defined at:
 14840 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14841 ;; Parameters:    Size  Location     Type
 14842 ;;  b               4  [STACK] long 
 14843 ;;  a               4  [STACK] long 
 14844 ;; Auto vars:     Size  Location     Type
 14845 ;;  grs             4  [STACK] unsigned long 
 14846 ;;  rem             4  [STACK] unsigned long 
 14847 ;;  new_exp         2  [STACK] short 
 14848 ;;  aexp            1  [STACK] unsigned char 
 14849 ;;  bexp            1  [STACK] unsigned char 
 14850 ;;  sign            1  [STACK] unsigned char 
 14851 ;; Return value:  Size  Location     Type
 14852 ;;                  4  [STACK] unsigned char 
 14853 ;; Registers used:
 14854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14855 ;; Tracked objects:
 14856 ;;		On entry : 0/2
 14857 ;;		On exit  : 0/0
 14858 ;;		Unchanged: 0/0
 14859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14864 ;;Total ram usage:        0 bytes
 14865 ;; Hardware stack levels used:    1
 14866 ;; Hardware stack levels required when called:    6
 14867 ;; This function calls:
 14868 ;;		Nothing
 14869 ;; This function is called by:
 14870 ;;		_conv_raw_result
 14871 ;;		_efgtoa
 14872 ;; This function uses a reentrant model
 14873 ;;
 14874                           
 14875                           	psect	text56
 14876  0135BE                     __ptext56:
 14877                           	opt callstack 0
 14878  0135BE                     ___fldiv:
 14879                           	opt callstack 0
 14880                           
 14881                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14882  0135BE  0E0D               	movlw	13
 14883  0135C0  26E1               	addwf	fsr1l,f,c
 14884  0135C2  0E00               	movlw	0
 14885  0135C4  22E2               	addwfc	fsr1h,f,c
 14886                           
 14887                           ;stkvar	_b @ sp[(-13)+-4]
 14888                           
 14889                           ;incstack = 0
 14890  0135C6  0EF2               	movlw	242
 14891  0135C8  24E1               	addwf	fsr1l,w,c
 14892  0135CA  6ED9               	movwf	fsr2l,c
 14893  0135CC  0EFF               	movlw	255
 14894  0135CE  20E2               	addwfc	fsr1h,w,c
 14895  0135D0  6EDA               	movwf	fsr2h,c
 14896  0135D2  50DF               	movf	indf2,w,c
 14897  0135D4  6E3D               	movwf	(btemp+11)^0,c
 14898  0135D6  0E80               	movlw	128
 14899  0135D8  163D               	andwf	(btemp+11)^0,f,c
 14900                           
 14901                           ;stkvar	_sign @ sp[(-13)+12]
 14902  0135DA  0EFF               	movlw	-1
 14903  0135DC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14904                           
 14905                           ;stkvar	_b @ sp[(-13)+-4]
 14906  0135E2  0EF2               	movlw	242
 14907  0135E4  24E1               	addwf	fsr1l,w,c
 14908  0135E6  6ED9               	movwf	fsr2l,c
 14909  0135E8  0EFF               	movlw	255
 14910  0135EA  20E2               	addwfc	fsr1h,w,c
 14911  0135EC  6EDA               	movwf	fsr2h,c
 14912  0135EE  50DF               	movf	indf2,w,c
 14913  0135F0  6E3D               	movwf	(btemp+11)^0,c
 14914  0135F2  90D8               	bcf	status,0,c
 14915  0135F4  343D               	rlcf	(btemp+11)^0,w,c
 14916  0135F6  6E3C               	movwf	(btemp+10)^0,c
 14917                           
 14918                           ;stkvar	_bexp @ sp[(-13)+11]
 14919  0135F8  0EFE               	movlw	-2
 14920  0135FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14921                           
 14922                           ;stkvar	_b @ sp[(-13)+-4]
 14923  013600  0EF1               	movlw	241
 14924  013602  24E1               	addwf	fsr1l,w,c
 14925  013604  6ED9               	movwf	fsr2l,c
 14926  013606  0EFF               	movlw	255
 14927  013608  20E2               	addwfc	fsr1h,w,c
 14928  01360A  6EDA               	movwf	fsr2h,c
 14929  01360C  AEDF               	btfss	indf2,7,c
 14930  01360E  D002               	goto	l6855
 14931                           
 14932                           ;stkvar	_bexp @ sp[(-13)+11]
 14933  013610  0EFE               	movlw	-2
 14934  013612  80E3               	bsf	plusw1,0,c
 14935  013614                     l6855:
 14936                           
 14937                           ;stkvar	_bexp @ sp[(-13)+11]
 14938  013614  0EFE               	movlw	-2
 14939  013616  50E3               	movf	plusw1,w,c
 14940  013618  B4D8               	btfsc	status,2,c
 14941  01361A  D027               	goto	l6865
 14942                           
 14943                           ;stkvar	_bexp @ sp[(-13)+11]
 14944  01361C  0EFE               	movlw	-2
 14945  01361E  28E3               	incf	plusw1,w,c
 14946  013620  A4D8               	btfss	status,2,c
 14947  013622  D018               	goto	l6861
 14948  013624  0E00               	movlw	0
 14949  013626  6E3A               	movwf	(btemp+8)^0,c
 14950  013628  0E00               	movlw	0
 14951  01362A  6E3B               	movwf	(btemp+9)^0,c
 14952  01362C  0E00               	movlw	0
 14953  01362E  6E3C               	movwf	(btemp+10)^0,c
 14954  013630  0E00               	movlw	0
 14955  013632  6E3D               	movwf	(btemp+11)^0,c
 14956                           
 14957                           ;stkvar	_b @ sp[(-13)+-4]
 14958  013634  0EEF               	movlw	-17
 14959  013636  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14960  01363C  0EF0               	movlw	-16
 14961  01363E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14962  013644  0EF1               	movlw	-15
 14963  013646  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14964  01364C  0EF2               	movlw	-14
 14965  01364E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14966  013654                     l6861:
 14967                           
 14968                           ;stkvar	_b @ sp[(-13)+-4]
 14969  013654  0EF1               	movlw	-15
 14970  013656  8EE3               	bsf	plusw1,7,c
 14971                           
 14972                           ;stkvar	_b @ sp[(-13)+-4]
 14973  013658  0EF2               	movlw	242
 14974  01365A  24E1               	addwf	fsr1l,w,c
 14975  01365C  6ED9               	movwf	fsr2l,c
 14976  01365E  0EFF               	movlw	255
 14977  013660  20E2               	addwfc	fsr1h,w,c
 14978  013662  6EDA               	movwf	fsr2h,c
 14979  013664  0E00               	movlw	0
 14980  013666  6EDF               	movwf	indf2,c
 14981  013668  D018               	goto	l6867
 14982  01366A                     l6865:
 14983  01366A  0E00               	movlw	0
 14984  01366C  6E3A               	movwf	(btemp+8)^0,c
 14985  01366E  0E00               	movlw	0
 14986  013670  6E3B               	movwf	(btemp+9)^0,c
 14987  013672  0E00               	movlw	0
 14988  013674  6E3C               	movwf	(btemp+10)^0,c
 14989  013676  0E00               	movlw	0
 14990  013678  6E3D               	movwf	(btemp+11)^0,c
 14991                           
 14992                           ;stkvar	_b @ sp[(-13)+-4]
 14993  01367A  0EEF               	movlw	-17
 14994  01367C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14995  013682  0EF0               	movlw	-16
 14996  013684  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14997  01368A  0EF1               	movlw	-15
 14998  01368C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14999  013692  0EF2               	movlw	-14
 15000  013694  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15001  01369A                     l6867:
 15002                           
 15003                           ;stkvar	_a @ sp[(-13)+-8]
 15004  01369A  0EEE               	movlw	238
 15005  01369C  24E1               	addwf	fsr1l,w,c
 15006  01369E  6ED9               	movwf	fsr2l,c
 15007  0136A0  0EFF               	movlw	255
 15008  0136A2  20E2               	addwfc	fsr1h,w,c
 15009  0136A4  6EDA               	movwf	fsr2h,c
 15010  0136A6  50DF               	movf	indf2,w,c
 15011  0136A8  6E3D               	movwf	(btemp+11)^0,c
 15012  0136AA  0E80               	movlw	128
 15013  0136AC  163D               	andwf	(btemp+11)^0,f,c
 15014                           
 15015                           ;stkvar	_sign @ sp[(-13)+12]
 15016  0136AE  50E1               	movf	fsr1l,w,c
 15017  0136B0  0FFF               	addlw	-1
 15018  0136B2  6ED9               	movwf	fsr2l,c
 15019  0136B4  50E2               	movf	fsr1h,w,c
 15020  0136B6  6EDA               	movwf	fsr2h,c
 15021  0136B8  0EFF               	movlw	255
 15022  0136BA  22DA               	addwfc	fsr2h,f,c
 15023  0136BC  503D               	movf	(btemp+11)^0,w,c
 15024  0136BE  1ADF               	xorwf	indf2,f,c
 15025                           
 15026                           ;stkvar	_a @ sp[(-13)+-8]
 15027  0136C0  0EEE               	movlw	238
 15028  0136C2  24E1               	addwf	fsr1l,w,c
 15029  0136C4  6ED9               	movwf	fsr2l,c
 15030  0136C6  0EFF               	movlw	255
 15031  0136C8  20E2               	addwfc	fsr1h,w,c
 15032  0136CA  6EDA               	movwf	fsr2h,c
 15033  0136CC  50DF               	movf	indf2,w,c
 15034  0136CE  6E3D               	movwf	(btemp+11)^0,c
 15035  0136D0  90D8               	bcf	status,0,c
 15036  0136D2  343D               	rlcf	(btemp+11)^0,w,c
 15037  0136D4  6E3C               	movwf	(btemp+10)^0,c
 15038                           
 15039                           ;stkvar	_aexp @ sp[(-13)+10]
 15040  0136D6  0EFD               	movlw	-3
 15041  0136D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15042                           
 15043                           ;stkvar	_a @ sp[(-13)+-8]
 15044  0136DE  0EED               	movlw	237
 15045  0136E0  24E1               	addwf	fsr1l,w,c
 15046  0136E2  6ED9               	movwf	fsr2l,c
 15047  0136E4  0EFF               	movlw	255
 15048  0136E6  20E2               	addwfc	fsr1h,w,c
 15049  0136E8  6EDA               	movwf	fsr2h,c
 15050  0136EA  AEDF               	btfss	indf2,7,c
 15051  0136EC  D002               	goto	l6875
 15052                           
 15053                           ;stkvar	_aexp @ sp[(-13)+10]
 15054  0136EE  0EFD               	movlw	-3
 15055  0136F0  80E3               	bsf	plusw1,0,c
 15056  0136F2                     l6875:
 15057                           
 15058                           ;stkvar	_aexp @ sp[(-13)+10]
 15059  0136F2  0EFD               	movlw	-3
 15060  0136F4  50E3               	movf	plusw1,w,c
 15061  0136F6  B4D8               	btfsc	status,2,c
 15062  0136F8  D027               	goto	l6885
 15063                           
 15064                           ;stkvar	_aexp @ sp[(-13)+10]
 15065  0136FA  0EFD               	movlw	-3
 15066  0136FC  28E3               	incf	plusw1,w,c
 15067  0136FE  A4D8               	btfss	status,2,c
 15068  013700  D018               	goto	l6881
 15069  013702  0E00               	movlw	0
 15070  013704  6E3A               	movwf	(btemp+8)^0,c
 15071  013706  0E00               	movlw	0
 15072  013708  6E3B               	movwf	(btemp+9)^0,c
 15073  01370A  0E00               	movlw	0
 15074  01370C  6E3C               	movwf	(btemp+10)^0,c
 15075  01370E  0E00               	movlw	0
 15076  013710  6E3D               	movwf	(btemp+11)^0,c
 15077                           
 15078                           ;stkvar	_a @ sp[(-13)+-8]
 15079  013712  0EEB               	movlw	-21
 15080  013714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15081  01371A  0EEC               	movlw	-20
 15082  01371C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15083  013722  0EED               	movlw	-19
 15084  013724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15085  01372A  0EEE               	movlw	-18
 15086  01372C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15087  013732                     l6881:
 15088                           
 15089                           ;stkvar	_a @ sp[(-13)+-8]
 15090  013732  0EED               	movlw	-19
 15091  013734  8EE3               	bsf	plusw1,7,c
 15092                           
 15093                           ;stkvar	_a @ sp[(-13)+-8]
 15094  013736  0EEE               	movlw	238
 15095  013738  24E1               	addwf	fsr1l,w,c
 15096  01373A  6ED9               	movwf	fsr2l,c
 15097  01373C  0EFF               	movlw	255
 15098  01373E  20E2               	addwfc	fsr1h,w,c
 15099  013740  6EDA               	movwf	fsr2h,c
 15100  013742  0E00               	movlw	0
 15101  013744  6EDF               	movwf	indf2,c
 15102  013746  D018               	goto	l6887
 15103  013748                     l6885:
 15104  013748  0E00               	movlw	0
 15105  01374A  6E3A               	movwf	(btemp+8)^0,c
 15106  01374C  0E00               	movlw	0
 15107  01374E  6E3B               	movwf	(btemp+9)^0,c
 15108  013750  0E00               	movlw	0
 15109  013752  6E3C               	movwf	(btemp+10)^0,c
 15110  013754  0E00               	movlw	0
 15111  013756  6E3D               	movwf	(btemp+11)^0,c
 15112                           
 15113                           ;stkvar	_a @ sp[(-13)+-8]
 15114  013758  0EEB               	movlw	-21
 15115  01375A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15116  013760  0EEC               	movlw	-20
 15117  013762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15118  013768  0EED               	movlw	-19
 15119  01376A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15120  013770  0EEE               	movlw	-18
 15121  013772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15122  013778                     l6887:
 15123                           
 15124                           ;stkvar	_a @ sp[(-13)+-8]
 15125  013778  0EEB               	movlw	-21
 15126  01377A  50E3               	movf	plusw1,w,c
 15127  01377C  E139               	bnz	l6899
 15128  01377E  0EEC               	movlw	-20
 15129  013780  50E3               	movf	plusw1,w,c
 15130  013782  E136               	bnz	l6899
 15131  013784  0EED               	movlw	-19
 15132  013786  50E3               	movf	plusw1,w,c
 15133  013788  E133               	bnz	l6899
 15134  01378A  0EEE               	movlw	-18
 15135  01378C  50E3               	movf	plusw1,w,c
 15136  01378E  A4D8               	btfss	status,2,c
 15137  013790  D02F               	goto	l6899
 15138                           
 15139                           ;stkvar	_b @ sp[(-13)+-4]
 15140  013792  0EEF               	movlw	-17
 15141  013794  6AE3               	clrf	plusw1,c
 15142  013796  0EF0               	movlw	-16
 15143  013798  6AE3               	clrf	plusw1,c
 15144  01379A  0EF1               	movlw	-15
 15145  01379C  6AE3               	clrf	plusw1,c
 15146  01379E  0EF2               	movlw	-14
 15147  0137A0  6AE3               	clrf	plusw1,c
 15148                           
 15149                           ;stkvar	_b @ sp[(-13)+-4]
 15150  0137A2  0EF1               	movlw	241
 15151  0137A4  24E1               	addwf	fsr1l,w,c
 15152  0137A6  6ED9               	movwf	fsr2l,c
 15153  0137A8  0EFF               	movlw	255
 15154  0137AA  20E2               	addwfc	fsr1h,w,c
 15155  0137AC  6EDA               	movwf	fsr2h,c
 15156  0137AE  0E80               	movlw	128
 15157  0137B0  12DE               	iorwf	postinc2,f,c
 15158  0137B2  0E7F               	movlw	127
 15159  0137B4  12DD               	iorwf	postdec2,f,c
 15160  0137B6                     l6893:
 15161                           
 15162                           ;stkvar	_sign @ sp[(-13)+12]
 15163  0137B6  0EFF               	movlw	-1
 15164  0137B8  006F FF8C  F03D    	movff	plusw1,btemp+11
 15165                           
 15166                           ;stkvar	_b @ sp[(-13)+-4]
 15167  0137BE  0EF2               	movlw	242
 15168  0137C0  24E1               	addwf	fsr1l,w,c
 15169  0137C2  6ED9               	movwf	fsr2l,c
 15170  0137C4  0EFF               	movlw	255
 15171  0137C6  20E2               	addwfc	fsr1h,w,c
 15172  0137C8  6EDA               	movwf	fsr2h,c
 15173  0137CA  503D               	movf	(btemp+11)^0,w,c
 15174  0137CC  12DF               	iorwf	indf2,f,c
 15175                           
 15176                           ;stkvar	_b @ sp[(-13)+-4]
 15177  0137CE  0EEF               	movlw	-17
 15178  0137D0  006F FF8C  F032    	movff	plusw1,btemp
 15179  0137D6  0EF0               	movlw	-16
 15180  0137D8  006F FF8C  F033    	movff	plusw1,btemp+1
 15181  0137DE  0EF1               	movlw	-15
 15182  0137E0  006F FF8C  F034    	movff	plusw1,btemp+2
 15183  0137E6  0EF2               	movlw	-14
 15184  0137E8  006F FF8C  F035    	movff	plusw1,btemp+3
 15185  0137EE  D19F               	goto	l2688
 15186  0137F0                     l6899:
 15187                           
 15188                           ;stkvar	_bexp @ sp[(-13)+11]
 15189  0137F0  0EFE               	movlw	-2
 15190  0137F2  50E3               	movf	plusw1,w,c
 15191  0137F4  A4D8               	btfss	status,2,c
 15192  0137F6  D009               	goto	l6907
 15193  0137F8  0E00               	movlw	0
 15194  0137FA  6E32               	movwf	btemp^0,c
 15195  0137FC  0E00               	movlw	0
 15196  0137FE  6E33               	movwf	(btemp+1)^0,c
 15197  013800  0E00               	movlw	0
 15198  013802  6E34               	movwf	(btemp+2)^0,c
 15199  013804  0E00               	movlw	0
 15200  013806  6E35               	movwf	(btemp+3)^0,c
 15201  013808  D192               	goto	l2688
 15202  01380A                     l6907:
 15203                           
 15204                           ;stkvar	_bexp @ sp[(-13)+11]
 15205  01380A  0EFE               	movlw	-2
 15206  01380C  50E3               	movf	plusw1,w,c
 15207  01380E  6E3C               	movwf	(btemp+10)^0,c
 15208  013810  6A3D               	clrf	(btemp+11)^0,c
 15209                           
 15210                           ;stkvar	_aexp @ sp[(-13)+10]
 15211  013812  0EFD               	movlw	-3
 15212  013814  50E3               	movf	plusw1,w,c
 15213  013816  5E3C               	subwf	(btemp+10)^0,f,c
 15214  013818  0E00               	movlw	0
 15215  01381A  5A3D               	subwfb	(btemp+11)^0,f,c
 15216  01381C  0E7F               	movlw	127
 15217  01381E  263C               	addwf	(btemp+10)^0,f,c
 15218  013820  0E00               	movlw	0
 15219  013822  223D               	addwfc	(btemp+11)^0,f,c
 15220                           
 15221                           ;stkvar	_new_exp @ sp[(-13)+8]
 15222  013824  0EFB               	movlw	-5
 15223  013826  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15224  01382C  0EFC               	movlw	-4
 15225  01382E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15226                           
 15227                           ;stkvar	_b @ sp[(-13)+-4]
 15228  013834  0EEF               	movlw	-17
 15229  013836  006F FF8C  F03A    	movff	plusw1,btemp+8
 15230  01383C  0EF0               	movlw	-16
 15231  01383E  006F FF8C  F03B    	movff	plusw1,btemp+9
 15232  013844  0EF1               	movlw	-15
 15233  013846  006F FF8C  F03C    	movff	plusw1,btemp+10
 15234  01384C  0EF2               	movlw	-14
 15235  01384E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15236                           
 15237                           ;stkvar	_rem @ sp[(-13)+4]
 15238  013854  0EF7               	movlw	-9
 15239  013856  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15240  01385C  0EF8               	movlw	-8
 15241  01385E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15242  013864  0EF9               	movlw	-7
 15243  013866  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15244  01386C  0EFA               	movlw	-6
 15245  01386E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15246                           
 15247                           ;stkvar	_b @ sp[(-13)+-4]
 15248  013874  0EEF               	movlw	-17
 15249  013876  6AE3               	clrf	plusw1,c
 15250  013878  0EF0               	movlw	-16
 15251  01387A  6AE3               	clrf	plusw1,c
 15252  01387C  0EF1               	movlw	-15
 15253  01387E  6AE3               	clrf	plusw1,c
 15254  013880  0EF2               	movlw	-14
 15255  013882  6AE3               	clrf	plusw1,c
 15256                           
 15257                           ;stkvar	_grs @ sp[(-13)+0]
 15258  013884  0EF3               	movlw	-13
 15259  013886  6AE3               	clrf	plusw1,c
 15260  013888  0EF4               	movlw	-12
 15261  01388A  6AE3               	clrf	plusw1,c
 15262  01388C  0EF5               	movlw	-11
 15263  01388E  6AE3               	clrf	plusw1,c
 15264  013890  0EF6               	movlw	-10
 15265  013892  6AE3               	clrf	plusw1,c
 15266                           
 15267                           ;stkvar	_aexp @ sp[(-13)+10]
 15268  013894  0EFD               	movlw	-3
 15269  013896  6AE3               	clrf	plusw1,c
 15270  013898  D050               	goto	l6935
 15271  01389A                     l6917:
 15272                           
 15273                           ;stkvar	_aexp @ sp[(-13)+10]
 15274  01389A  0EFD               	movlw	-3
 15275  01389C  50E3               	movf	plusw1,w,c
 15276  01389E  B4D8               	btfsc	status,2,c
 15277  0138A0  D020               	goto	l6927
 15278                           
 15279                           ;stkvar	_rem @ sp[(-13)+4]
 15280  0138A2  90D8               	bcf	status,0,c
 15281  0138A4  0EF7               	movlw	-9
 15282  0138A6  36E3               	rlcf	plusw1,f,c
 15283  0138A8  0EF8               	movlw	-8
 15284  0138AA  36E3               	rlcf	plusw1,f,c
 15285  0138AC  0EF9               	movlw	-7
 15286  0138AE  36E3               	rlcf	plusw1,f,c
 15287  0138B0  0EFA               	movlw	-6
 15288  0138B2  36E3               	rlcf	plusw1,f,c
 15289                           
 15290                           ;stkvar	_b @ sp[(-13)+-4]
 15291  0138B4  90D8               	bcf	status,0,c
 15292  0138B6  0EEF               	movlw	-17
 15293  0138B8  36E3               	rlcf	plusw1,f,c
 15294  0138BA  0EF0               	movlw	-16
 15295  0138BC  36E3               	rlcf	plusw1,f,c
 15296  0138BE  0EF1               	movlw	-15
 15297  0138C0  36E3               	rlcf	plusw1,f,c
 15298  0138C2  0EF2               	movlw	-14
 15299  0138C4  36E3               	rlcf	plusw1,f,c
 15300                           
 15301                           ;stkvar	_grs @ sp[(-13)+0]
 15302  0138C6  0EF6               	movlw	-10
 15303  0138C8  AEE3               	btfss	plusw1,7,c
 15304  0138CA  D002               	goto	l6925
 15305                           
 15306                           ;stkvar	_b @ sp[(-13)+-4]
 15307  0138CC  0EEF               	movlw	-17
 15308  0138CE  80E3               	bsf	plusw1,0,c
 15309  0138D0                     l6925:
 15310                           
 15311                           ;stkvar	_grs @ sp[(-13)+0]
 15312  0138D0  90D8               	bcf	status,0,c
 15313  0138D2  0EF3               	movlw	-13
 15314  0138D4  36E3               	rlcf	plusw1,f,c
 15315  0138D6  0EF4               	movlw	-12
 15316  0138D8  36E3               	rlcf	plusw1,f,c
 15317  0138DA  0EF5               	movlw	-11
 15318  0138DC  36E3               	rlcf	plusw1,f,c
 15319  0138DE  0EF6               	movlw	-10
 15320  0138E0  36E3               	rlcf	plusw1,f,c
 15321  0138E2                     l6927:
 15322                           
 15323                           ;stkvar	_a @ sp[(-13)+-8]
 15324                           ;stkvar	_rem @ sp[(-13)+4]
 15325  0138E2  50E1               	movf	fsr1l,w,c
 15326  0138E4  0FF7               	addlw	-9
 15327  0138E6  6ED9               	movwf	fsr2l,c
 15328  0138E8  50E2               	movf	fsr1h,w,c
 15329  0138EA  6EDA               	movwf	fsr2h,c
 15330  0138EC  0EFF               	movlw	255
 15331  0138EE  22DA               	addwfc	fsr2h,f,c
 15332  0138F0  0EEB               	movlw	-21
 15333  0138F2  50E3               	movf	plusw1,w,c
 15334  0138F4  5CDE               	subwf	postinc2,w,c
 15335  0138F6  0EEC               	movlw	-20
 15336  0138F8  50E3               	movf	plusw1,w,c
 15337  0138FA  58DE               	subwfb	postinc2,w,c
 15338  0138FC  0EED               	movlw	-19
 15339  0138FE  50E3               	movf	plusw1,w,c
 15340  013900  58DE               	subwfb	postinc2,w,c
 15341  013902  0EEE               	movlw	-18
 15342  013904  50E3               	movf	plusw1,w,c
 15343  013906  58DE               	subwfb	postinc2,w,c
 15344  013908  A0D8               	btfss	status,0,c
 15345  01390A  D015               	goto	l6933
 15346                           
 15347                           ;stkvar	_grs @ sp[(-13)+0]
 15348  01390C  0EF6               	movlw	-10
 15349  01390E  8CE3               	bsf	plusw1,6,c
 15350                           
 15351                           ;stkvar	_a @ sp[(-13)+-8]
 15352                           ;stkvar	_rem @ sp[(-13)+4]
 15353  013910  50E1               	movf	fsr1l,w,c
 15354  013912  0FF7               	addlw	-9
 15355  013914  6ED9               	movwf	fsr2l,c
 15356  013916  50E2               	movf	fsr1h,w,c
 15357  013918  6EDA               	movwf	fsr2h,c
 15358  01391A  0EFF               	movlw	255
 15359  01391C  22DA               	addwfc	fsr2h,f,c
 15360  01391E  0EEB               	movlw	-21
 15361  013920  50E3               	movf	plusw1,w,c
 15362  013922  5EDE               	subwf	postinc2,f,c
 15363  013924  0EEC               	movlw	-20
 15364  013926  50E3               	movf	plusw1,w,c
 15365  013928  5ADE               	subwfb	postinc2,f,c
 15366  01392A  0EED               	movlw	-19
 15367  01392C  50E3               	movf	plusw1,w,c
 15368  01392E  5ADE               	subwfb	postinc2,f,c
 15369  013930  0EEE               	movlw	-18
 15370  013932  50E3               	movf	plusw1,w,c
 15371  013934  5ADE               	subwfb	postinc2,f,c
 15372  013936                     l6933:
 15373                           
 15374                           ;stkvar	_aexp @ sp[(-13)+10]
 15375  013936  0EFD               	movlw	-3
 15376  013938  2AE3               	incf	plusw1,f,c
 15377  01393A                     l6935:
 15378                           
 15379                           ;stkvar	_aexp @ sp[(-13)+10]
 15380  01393A  0EFD               	movlw	-3
 15381  01393C  006F FF8C  F032    	movff	plusw1,btemp
 15382  013942  0E19               	movlw	25
 15383  013944  6432               	cpfsgt	btemp^0,c
 15384  013946  D7A9               	goto	l6917
 15385                           
 15386                           ;stkvar	_rem @ sp[(-13)+4]
 15387  013948  0EF7               	movlw	-9
 15388  01394A  50E3               	movf	plusw1,w,c
 15389  01394C  E10A               	bnz	u5790
 15390  01394E  0EF8               	movlw	-8
 15391  013950  50E3               	movf	plusw1,w,c
 15392  013952  E107               	bnz	u5790
 15393  013954  0EF9               	movlw	-7
 15394  013956  50E3               	movf	plusw1,w,c
 15395  013958  E104               	bnz	u5790
 15396  01395A  0EFA               	movlw	-6
 15397  01395C  50E3               	movf	plusw1,w,c
 15398  01395E  B4D8               	btfsc	status,2,c
 15399  013960  D024               	goto	l6951
 15400  013962                     u5790:
 15401                           
 15402                           ;stkvar	_grs @ sp[(-13)+0]
 15403  013962  0EF3               	movlw	-13
 15404  013964  80E3               	bsf	plusw1,0,c
 15405  013966  D021               	goto	l6951
 15406  013968                     l6941:
 15407                           
 15408                           ;stkvar	_b @ sp[(-13)+-4]
 15409  013968  90D8               	bcf	status,0,c
 15410  01396A  0EEF               	movlw	-17
 15411  01396C  36E3               	rlcf	plusw1,f,c
 15412  01396E  0EF0               	movlw	-16
 15413  013970  36E3               	rlcf	plusw1,f,c
 15414  013972  0EF1               	movlw	-15
 15415  013974  36E3               	rlcf	plusw1,f,c
 15416  013976  0EF2               	movlw	-14
 15417  013978  36E3               	rlcf	plusw1,f,c
 15418                           
 15419                           ;stkvar	_grs @ sp[(-13)+0]
 15420  01397A  0EF6               	movlw	-10
 15421  01397C  AEE3               	btfss	plusw1,7,c
 15422  01397E  D002               	goto	l6947
 15423                           
 15424                           ;stkvar	_b @ sp[(-13)+-4]
 15425  013980  0EEF               	movlw	-17
 15426  013982  80E3               	bsf	plusw1,0,c
 15427  013984                     l6947:
 15428                           
 15429                           ;stkvar	_grs @ sp[(-13)+0]
 15430  013984  90D8               	bcf	status,0,c
 15431  013986  0EF3               	movlw	-13
 15432  013988  36E3               	rlcf	plusw1,f,c
 15433  01398A  0EF4               	movlw	-12
 15434  01398C  36E3               	rlcf	plusw1,f,c
 15435  01398E  0EF5               	movlw	-11
 15436  013990  36E3               	rlcf	plusw1,f,c
 15437  013992  0EF6               	movlw	-10
 15438  013994  36E3               	rlcf	plusw1,f,c
 15439                           
 15440                           ;stkvar	_new_exp @ sp[(-13)+8]
 15441  013996  50E1               	movf	fsr1l,w,c
 15442  013998  0FFB               	addlw	-5
 15443  01399A  6ED9               	movwf	fsr2l,c
 15444  01399C  50E2               	movf	fsr1h,w,c
 15445  01399E  6EDA               	movwf	fsr2h,c
 15446  0139A0  0EFF               	movlw	255
 15447  0139A2  22DA               	addwfc	fsr2h,f,c
 15448  0139A4  06DE               	decf	postinc2,f,c
 15449  0139A6  0E00               	movlw	0
 15450  0139A8  5ADD               	subwfb	postdec2,f,c
 15451  0139AA                     l6951:
 15452                           
 15453                           ;stkvar	_b @ sp[(-13)+-4]
 15454  0139AA  0EF1               	movlw	-15
 15455  0139AC  AEE3               	btfss	plusw1,7,c
 15456  0139AE  D7DC               	goto	l6941
 15457                           
 15458                           ;stkvar	_aexp @ sp[(-13)+10]
 15459  0139B0  0EFD               	movlw	-3
 15460  0139B2  6AE3               	clrf	plusw1,c
 15461                           
 15462                           ;stkvar	_grs @ sp[(-13)+0]
 15463  0139B4  0EF6               	movlw	-10
 15464  0139B6  AEE3               	btfss	plusw1,7,c
 15465  0139B8  D020               	goto	l6965
 15466                           
 15467                           ;stkvar	_grs @ sp[(-13)+0]
 15468  0139BA  50E1               	movf	fsr1l,w,c
 15469  0139BC  0FF3               	addlw	-13
 15470  0139BE  6ED9               	movwf	fsr2l,c
 15471  0139C0  50E2               	movf	fsr1h,w,c
 15472  0139C2  6EDA               	movwf	fsr2h,c
 15473  0139C4  0EFF               	movlw	255
 15474  0139C6  22DA               	addwfc	fsr2h,f,c
 15475  0139C8  0EFF               	movlw	255
 15476  0139CA  14DE               	andwf	postinc2,w,c
 15477  0139CC  6E3A               	movwf	(btemp+8)^0,c
 15478  0139CE  0EFF               	movlw	255
 15479  0139D0  14DE               	andwf	postinc2,w,c
 15480  0139D2  6E3B               	movwf	(btemp+9)^0,c
 15481  0139D4  0EFF               	movlw	255
 15482  0139D6  14DE               	andwf	postinc2,w,c
 15483  0139D8  6E3C               	movwf	(btemp+10)^0,c
 15484  0139DA  0E7F               	movlw	127
 15485  0139DC  14DE               	andwf	postinc2,w,c
 15486  0139DE  6E3D               	movwf	(btemp+11)^0,c
 15487  0139E0  503A               	movf	(btemp+8)^0,w,c
 15488  0139E2  103B               	iorwf	(btemp+9)^0,w,c
 15489  0139E4  103C               	iorwf	(btemp+10)^0,w,c
 15490  0139E6  103D               	iorwf	(btemp+11)^0,w,c
 15491  0139E8  B4D8               	btfsc	status,2,c
 15492  0139EA  D004               	goto	l6961
 15493  0139EC                     u5830:
 15494                           
 15495                           ;stkvar	_aexp @ sp[(-13)+10]
 15496  0139EC  0EFD               	movlw	-3
 15497  0139EE  6AE3               	clrf	plusw1,c
 15498  0139F0  2AE3               	incf	plusw1,f,c
 15499  0139F2  D003               	goto	l6965
 15500  0139F4                     l6961:
 15501                           
 15502                           ;stkvar	_b @ sp[(-13)+-4]
 15503  0139F4  0EEF               	movlw	-17
 15504  0139F6  B0E3               	btfsc	plusw1,0,c
 15505  0139F8  D7F9               	goto	u5830
 15506  0139FA                     l6965:
 15507                           
 15508                           ;stkvar	_aexp @ sp[(-13)+10]
 15509  0139FA  0EFD               	movlw	-3
 15510  0139FC  50E3               	movf	plusw1,w,c
 15511  0139FE  B4D8               	btfsc	status,2,c
 15512  013A00  D036               	goto	l6975
 15513                           
 15514                           ;stkvar	_b @ sp[(-13)+-4]
 15515  013A02  50E1               	movf	fsr1l,w,c
 15516  013A04  0FEF               	addlw	-17
 15517  013A06  6ED9               	movwf	fsr2l,c
 15518  013A08  50E2               	movf	fsr1h,w,c
 15519  013A0A  6EDA               	movwf	fsr2h,c
 15520  013A0C  0EFF               	movlw	255
 15521  013A0E  22DA               	addwfc	fsr2h,f,c
 15522  013A10  2ADE               	incf	postinc2,f,c
 15523  013A12  0E00               	movlw	0
 15524  013A14  22DE               	addwfc	postinc2,f,c
 15525  013A16  22DE               	addwfc	postinc2,f,c
 15526  013A18  22DE               	addwfc	postinc2,f,c
 15527                           
 15528                           ;stkvar	_b @ sp[(-13)+-4]
 15529  013A1A  0EF2               	movlw	-14
 15530  013A1C  A0E3               	btfss	plusw1,0,c
 15531  013A1E  D027               	goto	l6975
 15532  013A20  0E01               	movlw	1
 15533  013A22  6E3D               	movwf	(btemp+11)^0,c
 15534                           
 15535                           ;stkvar	_b @ sp[(-13)+-4]
 15536  013A24  50E1               	movf	fsr1l,w,c
 15537  013A26  0FEF               	addlw	-17
 15538  013A28  6ED9               	movwf	fsr2l,c
 15539  013A2A  50E2               	movf	fsr1h,w,c
 15540  013A2C  6EDA               	movwf	fsr2h,c
 15541  013A2E  0EFF               	movlw	255
 15542  013A30  22DA               	addwfc	fsr2h,f,c
 15543  013A32  283D               	incf	(btemp+11)^0,w,c
 15544  013A34  52DE               	movf	postinc2,f,c
 15545  013A36  D008               	goto	u5870
 15546  013A38                     u5875:
 15547  013A38  52DE               	movf	postinc2,f,c
 15548  013A3A  90D8               	bcf	status,0,c
 15549  013A3C  BEDC               	btfsc	preinc2,7,c
 15550  013A3E  80D8               	bsf	status,0,c
 15551  013A40  32DD               	rrcf	postdec2,f,c
 15552  013A42  32DD               	rrcf	postdec2,f,c
 15553  013A44  32DD               	rrcf	postdec2,f,c
 15554  013A46  32DE               	rrcf	postinc2,f,c
 15555  013A48                     u5870:
 15556  013A48  2EE8               	decfsz	wreg,f,c
 15557  013A4A  D7F6               	goto	u5875
 15558                           
 15559                           ;stkvar	_new_exp @ sp[(-13)+8]
 15560  013A4C  0EFB               	movlw	-5
 15561  013A4E  50E3               	movf	plusw1,w,c
 15562  013A50  0F01               	addlw	1
 15563  013A52  6E32               	movwf	btemp^0,c
 15564  013A54  0EFB               	movlw	-5
 15565  013A56  0060  F0CB  FFE3   	movff	btemp,plusw1
 15566  013A5C  6A32               	clrf	btemp^0,c
 15567  013A5E  0EFC               	movlw	-4
 15568  013A60  50E3               	movf	plusw1,w,c
 15569  013A62  2032               	addwfc	btemp^0,w,c
 15570  013A64  6E32               	movwf	btemp^0,c
 15571  013A66  0EFC               	movlw	-4
 15572  013A68  0060  F0CB  FFE3   	movff	btemp,plusw1
 15573  013A6E                     l6975:
 15574                           
 15575                           ;stkvar	_new_exp @ sp[(-13)+8]
 15576  013A6E  0EFC               	movlw	-4
 15577  013A70  BEE3               	btfsc	plusw1,7,c
 15578  013A72  D01B               	goto	l6981
 15579  013A74  0EFC               	movlw	-4
 15580  013A76  50E3               	movf	plusw1,w,c
 15581  013A78  E104               	bnz	u5880
 15582  013A7A  0EFB               	movlw	-5
 15583  013A7C  28E3               	incf	plusw1,w,c
 15584  013A7E  A0D8               	btfss	status,0,c
 15585  013A80  D014               	goto	l6981
 15586  013A82                     u5880:
 15587  013A82  0EFF               	movlw	255
 15588  013A84  6E3C               	movwf	(btemp+10)^0,c
 15589  013A86  0E00               	movlw	0
 15590  013A88  6E3D               	movwf	(btemp+11)^0,c
 15591                           
 15592                           ;stkvar	_new_exp @ sp[(-13)+8]
 15593  013A8A  0EFB               	movlw	-5
 15594  013A8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15595  013A92  0EFC               	movlw	-4
 15596  013A94  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15597                           
 15598                           ;stkvar	_b @ sp[(-13)+-4]
 15599  013A9A  0EEF               	movlw	-17
 15600  013A9C  6AE3               	clrf	plusw1,c
 15601  013A9E  0EF0               	movlw	-16
 15602  013AA0  6AE3               	clrf	plusw1,c
 15603  013AA2  0EF1               	movlw	-15
 15604  013AA4  6AE3               	clrf	plusw1,c
 15605  013AA6  0EF2               	movlw	-14
 15606  013AA8  6AE3               	clrf	plusw1,c
 15607  013AAA                     l6981:
 15608                           
 15609                           ;stkvar	_new_exp @ sp[(-13)+8]
 15610  013AAA  0EFC               	movlw	-4
 15611  013AAC  BEE3               	btfsc	plusw1,7,c
 15612  013AAE  D007               	goto	u5890
 15613  013AB0  0EFC               	movlw	-4
 15614  013AB2  50E3               	movf	plusw1,w,c
 15615  013AB4  E112               	bnz	l6987
 15616  013AB6  0EFB               	movlw	-5
 15617  013AB8  04E3               	decf	plusw1,w,c
 15618  013ABA  B0D8               	btfsc	status,0,c
 15619  013ABC  D00E               	goto	l6987
 15620  013ABE                     u5890:
 15621                           
 15622                           ;stkvar	_new_exp @ sp[(-13)+8]
 15623  013ABE  0EFB               	movlw	-5
 15624  013AC0  6AE3               	clrf	plusw1,c
 15625  013AC2  0EFC               	movlw	-4
 15626  013AC4  6AE3               	clrf	plusw1,c
 15627                           
 15628                           ;stkvar	_b @ sp[(-13)+-4]
 15629  013AC6  0EEF               	movlw	-17
 15630  013AC8  6AE3               	clrf	plusw1,c
 15631  013ACA  0EF0               	movlw	-16
 15632  013ACC  6AE3               	clrf	plusw1,c
 15633  013ACE  0EF1               	movlw	-15
 15634  013AD0  6AE3               	clrf	plusw1,c
 15635  013AD2  0EF2               	movlw	-14
 15636  013AD4  6AE3               	clrf	plusw1,c
 15637                           
 15638                           ;stkvar	_sign @ sp[(-13)+12]
 15639  013AD6  0EFF               	movlw	-1
 15640  013AD8  6AE3               	clrf	plusw1,c
 15641  013ADA                     l6987:
 15642                           
 15643                           ;stkvar	_new_exp @ sp[(-13)+8]
 15644                           ;stkvar	_bexp @ sp[(-13)+11]
 15645  013ADA  0EFB               	movlw	-5
 15646  013ADC  006F FF8C  F032    	movff	plusw1,btemp
 15647  013AE2  0EFE               	movlw	-2
 15648  013AE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15649                           
 15650                           ;stkvar	_bexp @ sp[(-13)+11]
 15651  013AEA  0EFE               	movlw	-2
 15652  013AEC  A0E3               	btfss	plusw1,0,c
 15653  013AEE  D009               	goto	l6993
 15654                           
 15655                           ;stkvar	_b @ sp[(-13)+-4]
 15656  013AF0  0EF1               	movlw	241
 15657  013AF2  24E1               	addwf	fsr1l,w,c
 15658  013AF4  6ED9               	movwf	fsr2l,c
 15659  013AF6  0EFF               	movlw	255
 15660  013AF8  20E2               	addwfc	fsr1h,w,c
 15661  013AFA  6EDA               	movwf	fsr2h,c
 15662  013AFC  0E00               	movlw	0
 15663  013AFE  8EDB               	bsf	plusw2,7,c
 15664  013B00  D008               	goto	l6995
 15665  013B02                     l6993:
 15666                           
 15667                           ;stkvar	_b @ sp[(-13)+-4]
 15668  013B02  0EF1               	movlw	241
 15669  013B04  24E1               	addwf	fsr1l,w,c
 15670  013B06  6ED9               	movwf	fsr2l,c
 15671  013B08  0EFF               	movlw	255
 15672  013B0A  20E2               	addwfc	fsr1h,w,c
 15673  013B0C  6EDA               	movwf	fsr2h,c
 15674  013B0E  0E7F               	movlw	127
 15675  013B10  16DF               	andwf	indf2,f,c
 15676  013B12                     l6995:
 15677                           
 15678                           ;stkvar	_b @ sp[(-13)+-4]
 15679  013B12  0EF2               	movlw	242
 15680  013B14  24E1               	addwf	fsr1l,w,c
 15681  013B16  6ED9               	movwf	fsr2l,c
 15682  013B18  0EFF               	movlw	255
 15683  013B1A  20E2               	addwfc	fsr1h,w,c
 15684  013B1C  6EDA               	movwf	fsr2h,c
 15685                           
 15686                           ;stkvar	_bexp @ sp[(-13)+11]
 15687  013B1E  0EFE               	movlw	-2
 15688  013B20  006F FF8C  F03D    	movff	plusw1,btemp+11
 15689  013B26  90D8               	bcf	status,0,c
 15690  013B28  303D               	rrcf	(btemp+11)^0,w,c
 15691  013B2A  6EDF               	movwf	indf2,c
 15692  013B2C  D644               	goto	l6893
 15693  013B2E                     l2688:
 15694                           
 15695                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15696  013B2E  0EEB               	movlw	235
 15697  013B30  26E1               	addwf	fsr1l,f,c
 15698  013B32  0EFF               	movlw	255
 15699  013B34  22E2               	addwfc	fsr1h,f,c
 15700  013B36  0012               	return		;funcret
 15701  013B38                     __end_of___fldiv:
 15702                           	opt callstack 0
 15703                           
 15704 ;; *************** function ___awmod *****************
 15705 ;; Defined at:
 15706 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;  dividend        2  [STACK] int 
 15709 ;;  divisor         2  [STACK] int 
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;  sign            1  [STACK] unsigned char 
 15712 ;;  counter         1  [STACK] unsigned char 
 15713 ;; Return value:  Size  Location     Type
 15714 ;;                  2  [STACK] int 
 15715 ;; Registers used:
 15716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15717 ;; Tracked objects:
 15718 ;;		On entry : 0/5
 15719 ;;		On exit  : 0/0
 15720 ;;		Unchanged: 0/0
 15721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15726 ;;Total ram usage:        0 bytes
 15727 ;; Hardware stack levels used:    1
 15728 ;; Hardware stack levels required when called:    6
 15729 ;; This function calls:
 15730 ;;		Nothing
 15731 ;; This function is called by:
 15732 ;;		_efgtoa
 15733 ;; This function uses a reentrant model
 15734 ;;
 15735                           
 15736                           	psect	text57
 15737  016C24                     __ptext57:
 15738                           	opt callstack 0
 15739  016C24                     ___awmod:
 15740                           	opt callstack 0
 15741                           
 15742                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15743  016C24  52E6               	movf	postinc1,f,c
 15744  016C26  52E6               	movf	postinc1,f,c
 15745                           
 15746                           ;stkvar	_sign @ sp[(-2)+0]
 15747                           
 15748                           ;incstack = 0
 15749  016C28  0EFE               	movlw	-2
 15750  016C2A  6AE3               	clrf	plusw1,c
 15751                           
 15752                           ;stkvar	_dividend @ sp[(-2)+-2]
 15753  016C2C  0EFD               	movlw	-3
 15754  016C2E  AEE3               	btfss	plusw1,7,c
 15755  016C30  D009               	goto	l7219
 15756                           
 15757                           ;stkvar	_dividend @ sp[(-2)+-2]
 15758                           ;stkvar	_dividend @ sp[(-2)+-2]
 15759  016C32  0EFC               	movlw	-4
 15760  016C34  6CE3               	negf	plusw1,c
 15761  016C36  0EFD               	movlw	-3
 15762  016C38  1EE3               	comf	plusw1,f,c
 15763  016C3A  B0D8               	btfsc	status,0,c
 15764  016C3C  2AE3               	incf	plusw1,f,c
 15765                           
 15766                           ;stkvar	_sign @ sp[(-2)+0]
 15767  016C3E  0EFE               	movlw	-2
 15768  016C40  6AE3               	clrf	plusw1,c
 15769  016C42  2AE3               	incf	plusw1,f,c
 15770  016C44                     l7219:
 15771                           
 15772                           ;stkvar	_divisor @ sp[(-2)+-4]
 15773  016C44  0EFB               	movlw	-5
 15774  016C46  AEE3               	btfss	plusw1,7,c
 15775  016C48  D006               	goto	l7223
 15776                           
 15777                           ;stkvar	_divisor @ sp[(-2)+-4]
 15778                           ;stkvar	_divisor @ sp[(-2)+-4]
 15779  016C4A  0EFA               	movlw	-6
 15780  016C4C  6CE3               	negf	plusw1,c
 15781  016C4E  0EFB               	movlw	-5
 15782  016C50  1EE3               	comf	plusw1,f,c
 15783  016C52  B0D8               	btfsc	status,0,c
 15784  016C54  2AE3               	incf	plusw1,f,c
 15785  016C56                     l7223:
 15786                           
 15787                           ;stkvar	_divisor @ sp[(-2)+-4]
 15788  016C56  0EFA               	movlw	-6
 15789  016C58  006F FF8C  F032    	movff	plusw1,btemp
 15790  016C5E  0EFB               	movlw	-5
 15791  016C60  50E3               	movf	plusw1,w,c
 15792  016C62  1032               	iorwf	btemp^0,w,c
 15793  016C64  B4D8               	btfsc	status,2,c
 15794  016C66  D053               	goto	u6250
 15795                           
 15796                           ;stkvar	_counter @ sp[(-2)+1]
 15797  016C68  0EFF               	movlw	-1
 15798  016C6A  6AE3               	clrf	plusw1,c
 15799  016C6C  D012               	goto	L15
 15800  016C6E                     l7227:
 15801                           
 15802                           ;stkvar	_divisor @ sp[(-2)+-4]
 15803  016C6E  0EFA               	movlw	-6
 15804  016C70  50E3               	movf	plusw1,w,c
 15805  016C72  90D8               	bcf	status,0,c
 15806  016C74  34E8               	rlcf	wreg,w,c
 15807  016C76  6E32               	movwf	btemp^0,c
 15808  016C78  0EFA               	movlw	-6
 15809  016C7A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15810  016C80  0EFB               	movlw	-5
 15811  016C82  50E3               	movf	plusw1,w,c
 15812  016C84  34E8               	rlcf	wreg,w,c
 15813  016C86  6E32               	movwf	btemp^0,c
 15814  016C88  0EFB               	movlw	-5
 15815  016C8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15816                           
 15817                           ;stkvar	_counter @ sp[(-2)+1]
 15818  016C90  0EFF               	movlw	-1
 15819  016C92                     L15:
 15820  016C92  2AE3               	incf	plusw1,f,c
 15821                           
 15822                           ;stkvar	_divisor @ sp[(-2)+-4]
 15823  016C94  0EFB               	movlw	-5
 15824  016C96  AEE3               	btfss	plusw1,7,c
 15825  016C98  D7EA               	goto	l7227
 15826  016C9A                     u6230:
 15827                           
 15828                           ;stkvar	_divisor @ sp[(-2)+-4]
 15829  016C9A  0EFA               	movlw	-6
 15830  016C9C  006F FF8C  F03C    	movff	plusw1,btemp+10
 15831  016CA2  0EFB               	movlw	-5
 15832  016CA4  006F FF8C  F03D    	movff	plusw1,btemp+11
 15833                           
 15834                           ;stkvar	_dividend @ sp[(-2)+-2]
 15835  016CAA  0EFC               	movlw	-4
 15836  016CAC  006F FF8C  F03A    	movff	plusw1,btemp+8
 15837  016CB2  0EFD               	movlw	-3
 15838  016CB4  006F FF8C  F03B    	movff	plusw1,btemp+9
 15839  016CBA  503C               	movf	(btemp+10)^0,w,c
 15840  016CBC  5C3A               	subwf	(btemp+8)^0,w,c
 15841  016CBE  503D               	movf	(btemp+11)^0,w,c
 15842  016CC0  583B               	subwfb	(btemp+9)^0,w,c
 15843  016CC2  A0D8               	btfss	status,0,c
 15844  016CC4  D014               	goto	l7237
 15845                           
 15846                           ;stkvar	_divisor @ sp[(-2)+-4]
 15847                           ;stkvar	_dividend @ sp[(-2)+-2]
 15848  016CC6  0EFC               	movlw	-4
 15849  016CC8  50E3               	movf	plusw1,w,c
 15850  016CCA  6E32               	movwf	btemp^0,c
 15851  016CCC  0EFA               	movlw	-6
 15852  016CCE  50E3               	movf	plusw1,w,c
 15853  016CD0  5E32               	subwf	btemp^0,f,c
 15854  016CD2  0EFC               	movlw	-4
 15855  016CD4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15856  016CDA  0EFD               	movlw	-3
 15857  016CDC  50E3               	movf	plusw1,w,c
 15858  016CDE  6E32               	movwf	btemp^0,c
 15859  016CE0  0EFB               	movlw	-5
 15860  016CE2  50E3               	movf	plusw1,w,c
 15861  016CE4  5A32               	subwfb	btemp^0,f,c
 15862  016CE6  0EFD               	movlw	-3
 15863  016CE8  0060  F0CB  FFE3   	movff	btemp,plusw1
 15864  016CEE                     l7237:
 15865                           
 15866                           ;stkvar	_divisor @ sp[(-2)+-4]
 15867  016CEE  90D8               	bcf	status,0,c
 15868  016CF0  0EFB               	movlw	-5
 15869  016CF2  32E3               	rrcf	plusw1,f,c
 15870  016CF4  0EFA               	movlw	-6
 15871  016CF6  32E3               	rrcf	plusw1,f,c
 15872                           
 15873                           ;stkvar	_counter @ sp[(-2)+1]
 15874  016CF8  0EFF               	movlw	-1
 15875  016CFA  50E3               	movf	plusw1,w,c
 15876  016CFC  6E32               	movwf	btemp^0,c
 15877  016CFE  0E01               	movlw	1
 15878  016D00  5E32               	subwf	btemp^0,f,c
 15879  016D02  0EFF               	movlw	-1
 15880  016D04  0060  F0CB  FFE3   	movff	btemp,plusw1
 15881  016D0A  A4D8               	btfss	status,2,c
 15882  016D0C  D7C6               	goto	u6230
 15883  016D0E                     u6250:
 15884                           
 15885                           ;stkvar	_sign @ sp[(-2)+0]
 15886  016D0E  0EFE               	movlw	-2
 15887  016D10  50E3               	movf	plusw1,w,c
 15888  016D12  B4D8               	btfsc	status,2,c
 15889  016D14  D006               	goto	l7245
 15890                           
 15891                           ;stkvar	_dividend @ sp[(-2)+-2]
 15892                           ;stkvar	_dividend @ sp[(-2)+-2]
 15893  016D16  0EFC               	movlw	-4
 15894  016D18  6CE3               	negf	plusw1,c
 15895  016D1A  0EFD               	movlw	-3
 15896  016D1C  1EE3               	comf	plusw1,f,c
 15897  016D1E  B0D8               	btfsc	status,0,c
 15898  016D20  2AE3               	incf	plusw1,f,c
 15899  016D22                     l7245:
 15900                           
 15901                           ;stkvar	_dividend @ sp[(-2)+-2]
 15902  016D22  0EFC               	movlw	-4
 15903  016D24  006F FF8C  F032    	movff	plusw1,btemp
 15904  016D2A  0EFD               	movlw	-3
 15905  016D2C  006F FF8C  F033    	movff	plusw1,btemp+1
 15906                           
 15907                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15908  016D32  0EFA               	movlw	250
 15909  016D34  26E1               	addwf	fsr1l,f,c
 15910  016D36  0EFF               	movlw	255
 15911  016D38  22E2               	addwfc	fsr1h,f,c
 15912  016D3A  0012               	return		;funcret
 15913  016D3C                     __end_of___awmod:
 15914                           	opt callstack 0
 15915                           
 15916 ;; *************** function ___awdiv *****************
 15917 ;; Defined at:
 15918 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;  dividend        2  [STACK] int 
 15921 ;;  divisor         2  [STACK] int 
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;  quotient        2  [STACK] int 
 15924 ;;  sign            1  [STACK] unsigned char 
 15925 ;;  counter         1  [STACK] unsigned char 
 15926 ;; Return value:  Size  Location     Type
 15927 ;;                  2  [STACK] int 
 15928 ;; Registers used:
 15929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15930 ;; Tracked objects:
 15931 ;;		On entry : 0/5
 15932 ;;		On exit  : 0/0
 15933 ;;		Unchanged: 0/0
 15934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15939 ;;Total ram usage:        0 bytes
 15940 ;; Hardware stack levels used:    1
 15941 ;; Hardware stack levels required when called:    6
 15942 ;; This function calls:
 15943 ;;		Nothing
 15944 ;; This function is called by:
 15945 ;;		_efgtoa
 15946 ;; This function uses a reentrant model
 15947 ;;
 15948                           
 15949                           	psect	text58
 15950  01673C                     __ptext58:
 15951                           	opt callstack 0
 15952  01673C                     ___awdiv:
 15953                           	opt callstack 0
 15954                           
 15955                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15956  01673C  52E6               	movf	postinc1,f,c
 15957  01673E  52E6               	movf	postinc1,f,c
 15958  016740  52E6               	movf	postinc1,f,c
 15959  016742  52E6               	movf	postinc1,f,c
 15960                           
 15961                           ;stkvar	_sign @ sp[(-4)+2]
 15962                           
 15963                           ;incstack = 0
 15964  016744  0EFE               	movlw	-2
 15965  016746  6AE3               	clrf	plusw1,c
 15966                           
 15967                           ;stkvar	_divisor @ sp[(-4)+-4]
 15968  016748  0EF9               	movlw	-7
 15969  01674A  AEE3               	btfss	plusw1,7,c
 15970  01674C  D009               	goto	l7173
 15971                           
 15972                           ;stkvar	_divisor @ sp[(-4)+-4]
 15973                           ;stkvar	_divisor @ sp[(-4)+-4]
 15974  01674E  0EF8               	movlw	-8
 15975  016750  6CE3               	negf	plusw1,c
 15976  016752  0EF9               	movlw	-7
 15977  016754  1EE3               	comf	plusw1,f,c
 15978  016756  B0D8               	btfsc	status,0,c
 15979  016758  2AE3               	incf	plusw1,f,c
 15980                           
 15981                           ;stkvar	_sign @ sp[(-4)+2]
 15982  01675A  0EFE               	movlw	-2
 15983  01675C  6AE3               	clrf	plusw1,c
 15984  01675E  2AE3               	incf	plusw1,f,c
 15985  016760                     l7173:
 15986                           
 15987                           ;stkvar	_dividend @ sp[(-4)+-2]
 15988  016760  0EFB               	movlw	-5
 15989  016762  AEE3               	btfss	plusw1,7,c
 15990  016764  D008               	goto	l7179
 15991                           
 15992                           ;stkvar	_dividend @ sp[(-4)+-2]
 15993                           ;stkvar	_dividend @ sp[(-4)+-2]
 15994  016766  0EFA               	movlw	-6
 15995  016768  6CE3               	negf	plusw1,c
 15996  01676A  0EFB               	movlw	-5
 15997  01676C  1EE3               	comf	plusw1,f,c
 15998  01676E  B0D8               	btfsc	status,0,c
 15999  016770  2AE3               	incf	plusw1,f,c
 16000                           
 16001                           ;stkvar	_sign @ sp[(-4)+2]
 16002  016772  0EFE               	movlw	-2
 16003  016774  70E3               	btg	plusw1,0,c
 16004  016776                     l7179:
 16005                           
 16006                           ;stkvar	_quotient @ sp[(-4)+0]
 16007  016776  0EFC               	movlw	-4
 16008  016778  6AE3               	clrf	plusw1,c
 16009  01677A  0EFD               	movlw	-3
 16010  01677C  6AE3               	clrf	plusw1,c
 16011                           
 16012                           ;stkvar	_divisor @ sp[(-4)+-4]
 16013  01677E  0EF8               	movlw	-8
 16014  016780  006F FF8C  F032    	movff	plusw1,btemp
 16015  016786  0EF9               	movlw	-7
 16016  016788  50E3               	movf	plusw1,w,c
 16017  01678A  1032               	iorwf	btemp^0,w,c
 16018  01678C  B4D8               	btfsc	status,2,c
 16019  01678E  D066               	goto	u6180
 16020                           
 16021                           ;stkvar	_counter @ sp[(-4)+3]
 16022  016790  0EFF               	movlw	-1
 16023  016792  6AE3               	clrf	plusw1,c
 16024  016794  D012               	goto	L16
 16025  016796                     l7185:
 16026                           
 16027                           ;stkvar	_divisor @ sp[(-4)+-4]
 16028  016796  0EF8               	movlw	-8
 16029  016798  50E3               	movf	plusw1,w,c
 16030  01679A  90D8               	bcf	status,0,c
 16031  01679C  34E8               	rlcf	wreg,w,c
 16032  01679E  6E32               	movwf	btemp^0,c
 16033  0167A0  0EF8               	movlw	-8
 16034  0167A2  0060  F0CB  FFE3   	movff	btemp,plusw1
 16035  0167A8  0EF9               	movlw	-7
 16036  0167AA  50E3               	movf	plusw1,w,c
 16037  0167AC  34E8               	rlcf	wreg,w,c
 16038  0167AE  6E32               	movwf	btemp^0,c
 16039  0167B0  0EF9               	movlw	-7
 16040  0167B2  0060  F0CB  FFE3   	movff	btemp,plusw1
 16041                           
 16042                           ;stkvar	_counter @ sp[(-4)+3]
 16043  0167B8  0EFF               	movlw	-1
 16044  0167BA                     L16:
 16045  0167BA  2AE3               	incf	plusw1,f,c
 16046                           
 16047                           ;stkvar	_divisor @ sp[(-4)+-4]
 16048  0167BC  0EF9               	movlw	-7
 16049  0167BE  AEE3               	btfss	plusw1,7,c
 16050  0167C0  D7EA               	goto	l7185
 16051  0167C2                     u6160:
 16052                           
 16053                           ;stkvar	_quotient @ sp[(-4)+0]
 16054  0167C2  0EFC               	movlw	-4
 16055  0167C4  50E3               	movf	plusw1,w,c
 16056  0167C6  90D8               	bcf	status,0,c
 16057  0167C8  34E8               	rlcf	wreg,w,c
 16058  0167CA  6E32               	movwf	btemp^0,c
 16059  0167CC  0EFC               	movlw	-4
 16060  0167CE  0060  F0CB  FFE3   	movff	btemp,plusw1
 16061  0167D4  0EFD               	movlw	-3
 16062  0167D6  50E3               	movf	plusw1,w,c
 16063  0167D8  34E8               	rlcf	wreg,w,c
 16064  0167DA  6E32               	movwf	btemp^0,c
 16065  0167DC  0EFD               	movlw	-3
 16066  0167DE  0060  F0CB  FFE3   	movff	btemp,plusw1
 16067                           
 16068                           ;stkvar	_divisor @ sp[(-4)+-4]
 16069  0167E4  0EF8               	movlw	-8
 16070  0167E6  006F FF8C  F03C    	movff	plusw1,btemp+10
 16071  0167EC  0EF9               	movlw	-7
 16072  0167EE  006F FF8C  F03D    	movff	plusw1,btemp+11
 16073                           
 16074                           ;stkvar	_dividend @ sp[(-4)+-2]
 16075  0167F4  0EFA               	movlw	-6
 16076  0167F6  006F FF8C  F03A    	movff	plusw1,btemp+8
 16077  0167FC  0EFB               	movlw	-5
 16078  0167FE  006F FF8C  F03B    	movff	plusw1,btemp+9
 16079  016804  503C               	movf	(btemp+10)^0,w,c
 16080  016806  5C3A               	subwf	(btemp+8)^0,w,c
 16081  016808  503D               	movf	(btemp+11)^0,w,c
 16082  01680A  583B               	subwfb	(btemp+9)^0,w,c
 16083  01680C  A0D8               	btfss	status,0,c
 16084  01680E  D016               	goto	l7199
 16085                           
 16086                           ;stkvar	_divisor @ sp[(-4)+-4]
 16087                           ;stkvar	_dividend @ sp[(-4)+-2]
 16088  016810  0EFA               	movlw	-6
 16089  016812  50E3               	movf	plusw1,w,c
 16090  016814  6E32               	movwf	btemp^0,c
 16091  016816  0EF8               	movlw	-8
 16092  016818  50E3               	movf	plusw1,w,c
 16093  01681A  5E32               	subwf	btemp^0,f,c
 16094  01681C  0EFA               	movlw	-6
 16095  01681E  0060  F0CB  FFE3   	movff	btemp,plusw1
 16096  016824  0EFB               	movlw	-5
 16097  016826  50E3               	movf	plusw1,w,c
 16098  016828  6E32               	movwf	btemp^0,c
 16099  01682A  0EF9               	movlw	-7
 16100  01682C  50E3               	movf	plusw1,w,c
 16101  01682E  5A32               	subwfb	btemp^0,f,c
 16102  016830  0EFB               	movlw	-5
 16103  016832  0060  F0CB  FFE3   	movff	btemp,plusw1
 16104                           
 16105                           ;stkvar	_quotient @ sp[(-4)+0]
 16106  016838  0EFC               	movlw	-4
 16107  01683A  80E3               	bsf	plusw1,0,c
 16108  01683C                     l7199:
 16109                           
 16110                           ;stkvar	_divisor @ sp[(-4)+-4]
 16111  01683C  90D8               	bcf	status,0,c
 16112  01683E  0EF9               	movlw	-7
 16113  016840  32E3               	rrcf	plusw1,f,c
 16114  016842  0EF8               	movlw	-8
 16115  016844  32E3               	rrcf	plusw1,f,c
 16116                           
 16117                           ;stkvar	_counter @ sp[(-4)+3]
 16118  016846  0EFF               	movlw	-1
 16119  016848  50E3               	movf	plusw1,w,c
 16120  01684A  6E32               	movwf	btemp^0,c
 16121  01684C  0E01               	movlw	1
 16122  01684E  5E32               	subwf	btemp^0,f,c
 16123  016850  0EFF               	movlw	-1
 16124  016852  0060  F0CB  FFE3   	movff	btemp,plusw1
 16125  016858  A4D8               	btfss	status,2,c
 16126  01685A  D7B3               	goto	u6160
 16127  01685C                     u6180:
 16128                           
 16129                           ;stkvar	_sign @ sp[(-4)+2]
 16130  01685C  0EFE               	movlw	-2
 16131  01685E  50E3               	movf	plusw1,w,c
 16132  016860  B4D8               	btfsc	status,2,c
 16133  016862  D006               	goto	l7207
 16134                           
 16135                           ;stkvar	_quotient @ sp[(-4)+0]
 16136                           ;stkvar	_quotient @ sp[(-4)+0]
 16137  016864  0EFC               	movlw	-4
 16138  016866  6CE3               	negf	plusw1,c
 16139  016868  0EFD               	movlw	-3
 16140  01686A  1EE3               	comf	plusw1,f,c
 16141  01686C  B0D8               	btfsc	status,0,c
 16142  01686E  2AE3               	incf	plusw1,f,c
 16143  016870                     l7207:
 16144                           
 16145                           ;stkvar	_quotient @ sp[(-4)+0]
 16146  016870  0EFC               	movlw	-4
 16147  016872  006F FF8C  F032    	movff	plusw1,btemp
 16148  016878  0EFD               	movlw	-3
 16149  01687A  006F FF8C  F033    	movff	plusw1,btemp+1
 16150                           
 16151                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16152  016880  0EF8               	movlw	248
 16153  016882  26E1               	addwf	fsr1l,f,c
 16154  016884  0EFF               	movlw	255
 16155  016886  22E2               	addwfc	fsr1h,f,c
 16156  016888  0012               	return		;funcret
 16157  01688A                     __end_of___awdiv:
 16158                           	opt callstack 0
 16159                           
 16160 ;; *************** function _dtoa *****************
 16161 ;; Defined at:
 16162 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16165 ;;		 -> f(6), NULL(0), 
 16166 ;;  d               8  [STACK] long long 
 16167 ;; Auto vars:     Size  Location     Type
 16168 ;;  n               8  [STACK] long long 
 16169 ;;  i               2  [STACK] int 
 16170 ;;  s               2  [STACK] int 
 16171 ;;  w               2  [STACK] int 
 16172 ;;  p               2  [STACK] int 
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  2  [STACK] int 
 16175 ;; Registers used:
 16176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/5
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16186 ;;Total ram usage:        0 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:   11
 16189 ;; This function calls:
 16190 ;;		___aodiv
 16191 ;;		___aomod
 16192 ;;		_abs
 16193 ;;		_pad
 16194 ;; This function is called by:
 16195 ;;		_vfpfcnvrt
 16196 ;; This function uses a reentrant model
 16197 ;;
 16198                           
 16199                           	psect	text59
 16200  013FE4                     __ptext59:
 16201                           	opt callstack 0
 16202  013FE4                     _dtoa:
 16203                           	opt callstack 0
 16204                           
 16205                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16206  013FE4  0E12               	movlw	18
 16207  013FE6  26E1               	addwf	fsr1l,f,c
 16208  013FE8  0E00               	movlw	0
 16209  013FEA  22E2               	addwfc	fsr1h,f,c
 16210                           
 16211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16212                           ;stkvar	_d @ sp[(-18)+-10]
 16213                           
 16214                           ;incstack = 0
 16215  013FEC  0EE4               	movlw	228
 16216  013FEE  24E1               	addwf	fsr1l,w,c
 16217  013FF0  6ED9               	movwf	fsr2l,c
 16218  013FF2  0EFF               	movlw	255
 16219  013FF4  20E2               	addwfc	fsr1h,w,c
 16220  013FF6  6EDA               	movwf	fsr2h,c
 16221                           
 16222                           ;stkvar	_n @ sp[(-18)+2]
 16223  013FF8  0E08               	movlw	8
 16224  013FFA  6E32               	movwf	btemp^0,c
 16225  013FFC  0EF0               	movlw	-16
 16226  013FFE                     us922999:
 16227  013FFE  006F FF7B FFE3     	movff	postinc2,plusw1
 16228  014004  28E8               	incf	wreg,w,c
 16229  014006  2E32               	decfsz	btemp^0,f,c
 16230  014008  D7FA               	bra	us922999
 16231                           
 16232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16233                           ;stkvar	_n @ sp[(-18)+2]
 16234  01400A  0EF7               	movlw	-9
 16235  01400C  AEE3               	btfss	plusw1,7,c
 16236  01400E  D002               	goto	u9230
 16237  014010  0E01               	movlw	1
 16238  014012  D001               	goto	u9240
 16239  014014                     u9230:
 16240  014014  0E00               	movlw	0
 16241  014016                     u9240:
 16242  014016  6E3C               	movwf	(btemp+10)^0,c
 16243  014018  6A3D               	clrf	(btemp+11)^0,c
 16244                           
 16245                           ;stkvar	_s @ sp[(-18)+12]
 16246  01401A  0EFA               	movlw	-6
 16247  01401C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16248  014022  0EFB               	movlw	-5
 16249  014024  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16250                           
 16251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16252                           ;stkvar	_s @ sp[(-18)+12]
 16253  01402A  0EFA               	movlw	-6
 16254  01402C  006F FF8C  F032    	movff	plusw1,btemp
 16255  014032  0EFB               	movlw	-5
 16256  014034  50E3               	movf	plusw1,w,c
 16257  014036  1032               	iorwf	btemp^0,w,c
 16258  014038  B4D8               	btfsc	status,2,c
 16259  01403A  D025               	goto	u9260
 16260                           
 16261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16262                           ;stkvar	_n @ sp[(-18)+2]
 16263                           ;stkvar	_n @ sp[(-18)+2]
 16264  01403C  0EF0               	movlw	-16
 16265  01403E  6CE3               	negf	plusw1,c
 16266  014040  0EF1               	movlw	-15
 16267  014042  1EE3               	comf	plusw1,f,c
 16268  014044  0EF2               	movlw	-14
 16269  014046  1EE3               	comf	plusw1,f,c
 16270  014048  0EF3               	movlw	-13
 16271  01404A  1EE3               	comf	plusw1,f,c
 16272  01404C  0EF4               	movlw	-12
 16273  01404E  1EE3               	comf	plusw1,f,c
 16274  014050  0EF5               	movlw	-11
 16275  014052  1EE3               	comf	plusw1,f,c
 16276  014054  0EF6               	movlw	-10
 16277  014056  1EE3               	comf	plusw1,f,c
 16278  014058  0EF7               	movlw	-9
 16279  01405A  1EE3               	comf	plusw1,f,c
 16280  01405C  E314               	bnc	u9260
 16281  01405E  0EF1               	movlw	-15
 16282  014060  2AE3               	incf	plusw1,f,c
 16283  014062  E311               	bnc	u9260
 16284  014064  0EF2               	movlw	-14
 16285  014066  2AE3               	incf	plusw1,f,c
 16286  014068  E30E               	bnc	u9260
 16287  01406A  0EF3               	movlw	-13
 16288  01406C  2AE3               	incf	plusw1,f,c
 16289  01406E  E30B               	bnc	u9260
 16290  014070  0EF4               	movlw	-12
 16291  014072  2AE3               	incf	plusw1,f,c
 16292  014074  E308               	bnc	u9260
 16293  014076  0EF5               	movlw	-11
 16294  014078  2AE3               	incf	plusw1,f,c
 16295  01407A  E305               	bnc	u9260
 16296  01407C  0EF6               	movlw	-10
 16297  01407E  2AE3               	incf	plusw1,f,c
 16298  014080  E302               	bnc	u9260
 16299  014082  0EF7               	movlw	-9
 16300  014084  2AE3               	incf	plusw1,f,c
 16301  014086                     u9260:
 16302                           
 16303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16304  014086  AE1E               	btfss	(_prec+1)^0,7,c
 16305                           
 16306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16307  014088  921F               	bcf	_flags^0,1,c
 16308                           
 16309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16310  01408A  BE1E               	btfsc	(_prec+1)^0,7,c
 16311  01408C  D005               	goto	u9280
 16312  01408E  501E               	movf	(_prec+1)^0,w,c
 16313  014090  E110               	bnz	l9837
 16314  014092  041D               	decf	_prec^0,w,c
 16315  014094  B0D8               	btfsc	status,0,c
 16316  014096  D00D               	goto	l9837
 16317  014098                     u9280:
 16318  014098  0E01               	movlw	1
 16319  01409A  6E3C               	movwf	(btemp+10)^0,c
 16320  01409C  0E00               	movlw	0
 16321  01409E  6E3D               	movwf	(btemp+11)^0,c
 16322                           
 16323                           ;stkvar	_p @ sp[(-18)+16]
 16324  0140A0  0EFE               	movlw	-2
 16325  0140A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16326  0140A8  0EFF               	movlw	-1
 16327  0140AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16328  0140B0  D008               	goto	l1892
 16329  0140B2                     l9837:
 16330                           
 16331                           ;stkvar	_p @ sp[(-18)+16]
 16332  0140B2  0EFE               	movlw	-2
 16333  0140B4  0060  F077  FFE3   	movff	_prec,plusw1
 16334  0140BA  0EFF               	movlw	-1
 16335  0140BC  0060  F07B  FFE3   	movff	_prec+1,plusw1
 16336  0140C2                     l1892:
 16337                           
 16338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16339                           ;stkvar	_w @ sp[(-18)+14]
 16340  0140C2  0EFC               	movlw	-4
 16341  0140C4  0060  F06F  FFE3   	movff	_width,plusw1
 16342  0140CA  0EFD               	movlw	-3
 16343  0140CC  0060  F073  FFE3   	movff	_width+1,plusw1
 16344                           
 16345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16346                           ;stkvar	_s @ sp[(-18)+12]
 16347  0140D2  0EFA               	movlw	-6
 16348  0140D4  006F FF8C  F032    	movff	plusw1,btemp
 16349  0140DA  0EFB               	movlw	-5
 16350  0140DC  50E3               	movf	plusw1,w,c
 16351  0140DE  1032               	iorwf	btemp^0,w,c
 16352  0140E0  A4D8               	btfss	status,2,c
 16353  0140E2  D002               	goto	u9300
 16354  0140E4  A41F               	btfss	_flags^0,2,c
 16355  0140E6  D00A               	goto	l9845
 16356  0140E8                     u9300:
 16357                           
 16358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16359                           ;stkvar	_w @ sp[(-18)+14]
 16360  0140E8  50E1               	movf	fsr1l,w,c
 16361  0140EA  0FFC               	addlw	-4
 16362  0140EC  6ED9               	movwf	fsr2l,c
 16363  0140EE  50E2               	movf	fsr1h,w,c
 16364  0140F0  6EDA               	movwf	fsr2h,c
 16365  0140F2  0EFF               	movlw	255
 16366  0140F4  22DA               	addwfc	fsr2h,f,c
 16367  0140F6  06DE               	decf	postinc2,f,c
 16368  0140F8  0E00               	movlw	0
 16369  0140FA  5ADD               	subwfb	postdec2,f,c
 16370  0140FC                     l9845:
 16371                           
 16372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16373  0140FC  0E4F               	movlw	79
 16374  0140FE  6E3C               	movwf	(btemp+10)^0,c
 16375  014100  0E00               	movlw	0
 16376  014102  6E3D               	movwf	(btemp+11)^0,c
 16377                           
 16378                           ;stkvar	_i @ sp[(-18)+10]
 16379  014104  0EF8               	movlw	-8
 16380  014106  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16381  01410C  0EF9               	movlw	-7
 16382  01410E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16383                           
 16384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16385  014114  0101               	movlb	1	; () banked
 16386  014116  6BCB               	clrf	(_dbuf+79)& (0+255),b
 16387                           
 16388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16389  014118  D109               	goto	l9859
 16390  01411A                     l9849:
 16391                           
 16392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16393                           ;stkvar	_i @ sp[(-18)+10]
 16394  01411A  50E1               	movf	fsr1l,w,c
 16395  01411C  0FF8               	addlw	-8
 16396  01411E  6ED9               	movwf	fsr2l,c
 16397  014120  50E2               	movf	fsr1h,w,c
 16398  014122  6EDA               	movwf	fsr2h,c
 16399  014124  0EFF               	movlw	255
 16400  014126  22DA               	addwfc	fsr2h,f,c
 16401  014128  06DE               	decf	postinc2,f,c
 16402  01412A  0E00               	movlw	0
 16403  01412C  5ADD               	subwfb	postdec2,f,c
 16404                           
 16405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16406  01412E  0E0A               	movlw	10
 16407  014130  6EE6               	movwf	postinc1,c
 16408  014132  0E00               	movlw	0
 16409  014134  6EE6               	movwf	postinc1,c
 16410  014136  0E00               	movlw	0
 16411  014138  6EE6               	movwf	postinc1,c
 16412  01413A  0E00               	movlw	0
 16413  01413C  6EE6               	movwf	postinc1,c
 16414  01413E  0E00               	movlw	0
 16415  014140  6EE6               	movwf	postinc1,c
 16416  014142  0E00               	movlw	0
 16417  014144  6EE6               	movwf	postinc1,c
 16418  014146  0E00               	movlw	0
 16419  014148  6EE6               	movwf	postinc1,c
 16420  01414A  0E00               	movlw	0
 16421  01414C  6EE6               	movwf	postinc1,c
 16422                           
 16423                           ;stkvar	_n @ sp[(-26)+2]
 16424  01414E  50E1               	movf	fsr1l,w,c
 16425  014150  0FE8               	addlw	-24
 16426  014152  6ED9               	movwf	fsr2l,c
 16427  014154  50E2               	movf	fsr1h,w,c
 16428  014156  6EDA               	movwf	fsr2h,c
 16429  014158  0EFF               	movlw	255
 16430  01415A  22DA               	addwfc	fsr2h,f,c
 16431  01415C  006F FF7B FFE6     	movff	postinc2,postinc1
 16432  014162  006F FF7B FFE6     	movff	postinc2,postinc1
 16433  014168  006F FF7B FFE6     	movff	postinc2,postinc1
 16434  01416E  006F FF7B FFE6     	movff	postinc2,postinc1
 16435  014174  006F FF7B FFE6     	movff	postinc2,postinc1
 16436  01417A  006F FF7B FFE6     	movff	postinc2,postinc1
 16437  014180  006F FF7B FFE6     	movff	postinc2,postinc1
 16438  014186  006F FF7B FFE6     	movff	postinc2,postinc1
 16439  01418C  EC7A  F0AC         	call	___aomod	;wreg free
 16440  014190  52E5               	movf	postdec1,f,c
 16441  014192  006F FF9C  F049    	movff	indf1,btemp+23
 16442  014198  52E5               	movf	postdec1,f,c
 16443  01419A  006F FF9C  F048    	movff	indf1,btemp+22
 16444  0141A0  52E5               	movf	postdec1,f,c
 16445  0141A2  006F FF9C  F047    	movff	indf1,btemp+21
 16446  0141A8  52E5               	movf	postdec1,f,c
 16447  0141AA  006F FF9C  F046    	movff	indf1,btemp+20
 16448  0141B0  52E5               	movf	postdec1,f,c
 16449  0141B2  006F FF9C  F045    	movff	indf1,btemp+19
 16450  0141B8  52E5               	movf	postdec1,f,c
 16451  0141BA  006F FF9C  F044    	movff	indf1,btemp+18
 16452  0141C0  52E5               	movf	postdec1,f,c
 16453  0141C2  006F FF9C  F043    	movff	indf1,btemp+17
 16454  0141C8  52E5               	movf	postdec1,f,c
 16455  0141CA  006F FF9C  F042    	movff	indf1,btemp+16
 16456  0141D0  0EF8               	movlw	248
 16457  0141D2  26E1               	addwf	fsr1l,f,c
 16458  0141D4  0EFF               	movlw	255
 16459  0141D6  22E2               	addwfc	fsr1h,f,c
 16460  0141D8  0060  F108  F03C   	movff	btemp+16,btemp+10
 16461  0141DE  0060  F10C  F03D   	movff	btemp+17,btemp+11
 16462  0141E4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16463  0141EA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16464  0141F0  EC68  F0C1         	call	_abs	;wreg free
 16465  0141F4  0E30               	movlw	48
 16466  0141F6  2632               	addwf	btemp^0,f,c
 16467                           
 16468                           ;stkvar	_i @ sp[(-18)+10]
 16469  0141F8  0EF8               	movlw	-8
 16470  0141FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 16471  014200  0EF9               	movlw	-7
 16472  014202  006F FF8C  F03D    	movff	plusw1,btemp+11
 16473  014208  0E7C               	movlw	low _dbuf
 16474  01420A  243C               	addwf	(btemp+10)^0,w,c
 16475  01420C  6ED9               	movwf	fsr2l,c
 16476  01420E  0E01               	movlw	high _dbuf
 16477  014210  203D               	addwfc	(btemp+11)^0,w,c
 16478  014212  6EDA               	movwf	fsr2h,c
 16479  014214  0060  F0CB  FFDF   	movff	btemp,indf2
 16480                           
 16481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16482                           ;stkvar	_p @ sp[(-18)+16]
 16483  01421A  50E1               	movf	fsr1l,w,c
 16484  01421C  0FFE               	addlw	-2
 16485  01421E  6ED9               	movwf	fsr2l,c
 16486  014220  50E2               	movf	fsr1h,w,c
 16487  014222  6EDA               	movwf	fsr2h,c
 16488  014224  0EFF               	movlw	255
 16489  014226  22DA               	addwfc	fsr2h,f,c
 16490  014228  06DE               	decf	postinc2,f,c
 16491  01422A  0E00               	movlw	0
 16492  01422C  5ADD               	subwfb	postdec2,f,c
 16493                           
 16494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16495                           ;stkvar	_w @ sp[(-18)+14]
 16496  01422E  50E1               	movf	fsr1l,w,c
 16497  014230  0FFC               	addlw	-4
 16498  014232  6ED9               	movwf	fsr2l,c
 16499  014234  50E2               	movf	fsr1h,w,c
 16500  014236  6EDA               	movwf	fsr2h,c
 16501  014238  0EFF               	movlw	255
 16502  01423A  22DA               	addwfc	fsr2h,f,c
 16503  01423C  06DE               	decf	postinc2,f,c
 16504  01423E  0E00               	movlw	0
 16505  014240  5ADD               	subwfb	postdec2,f,c
 16506                           
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16508  014242  0E0A               	movlw	10
 16509  014244  6EE6               	movwf	postinc1,c
 16510  014246  0E00               	movlw	0
 16511  014248  6EE6               	movwf	postinc1,c
 16512  01424A  0E00               	movlw	0
 16513  01424C  6EE6               	movwf	postinc1,c
 16514  01424E  0E00               	movlw	0
 16515  014250  6EE6               	movwf	postinc1,c
 16516  014252  0E00               	movlw	0
 16517  014254  6EE6               	movwf	postinc1,c
 16518  014256  0E00               	movlw	0
 16519  014258  6EE6               	movwf	postinc1,c
 16520  01425A  0E00               	movlw	0
 16521  01425C  6EE6               	movwf	postinc1,c
 16522  01425E  0E00               	movlw	0
 16523  014260  6EE6               	movwf	postinc1,c
 16524                           
 16525                           ;stkvar	_n @ sp[(-26)+2]
 16526  014262  50E1               	movf	fsr1l,w,c
 16527  014264  0FE8               	addlw	-24
 16528  014266  6ED9               	movwf	fsr2l,c
 16529  014268  50E2               	movf	fsr1h,w,c
 16530  01426A  6EDA               	movwf	fsr2h,c
 16531  01426C  0EFF               	movlw	255
 16532  01426E  22DA               	addwfc	fsr2h,f,c
 16533  014270  006F FF7B FFE6     	movff	postinc2,postinc1
 16534  014276  006F FF7B FFE6     	movff	postinc2,postinc1
 16535  01427C  006F FF7B FFE6     	movff	postinc2,postinc1
 16536  014282  006F FF7B FFE6     	movff	postinc2,postinc1
 16537  014288  006F FF7B FFE6     	movff	postinc2,postinc1
 16538  01428E  006F FF7B FFE6     	movff	postinc2,postinc1
 16539  014294  006F FF7B FFE6     	movff	postinc2,postinc1
 16540  01429A  006F FF7B FFE6     	movff	postinc2,postinc1
 16541  0142A0  EC00  F0AA         	call	___aodiv	;wreg free
 16542  0142A4  52E5               	movf	postdec1,f,c
 16543  0142A6  006F FF9C  F049    	movff	indf1,btemp+23
 16544  0142AC  52E5               	movf	postdec1,f,c
 16545  0142AE  006F FF9C  F048    	movff	indf1,btemp+22
 16546  0142B4  52E5               	movf	postdec1,f,c
 16547  0142B6  006F FF9C  F047    	movff	indf1,btemp+21
 16548  0142BC  52E5               	movf	postdec1,f,c
 16549  0142BE  006F FF9C  F046    	movff	indf1,btemp+20
 16550  0142C4  52E5               	movf	postdec1,f,c
 16551  0142C6  006F FF9C  F045    	movff	indf1,btemp+19
 16552  0142CC  52E5               	movf	postdec1,f,c
 16553  0142CE  006F FF9C  F044    	movff	indf1,btemp+18
 16554  0142D4  52E5               	movf	postdec1,f,c
 16555  0142D6  006F FF9C  F043    	movff	indf1,btemp+17
 16556  0142DC  52E5               	movf	postdec1,f,c
 16557  0142DE  006F FF9C  F042    	movff	indf1,btemp+16
 16558  0142E4  0EF8               	movlw	248
 16559  0142E6  26E1               	addwf	fsr1l,f,c
 16560  0142E8  0EFF               	movlw	255
 16561  0142EA  22E2               	addwfc	fsr1h,f,c
 16562                           
 16563                           ;stkvar	_n @ sp[(-18)+2]
 16564  0142EC  0EF0               	movlw	-16
 16565  0142EE  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16566  0142F4  0EF1               	movlw	-15
 16567  0142F6  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16568  0142FC  0EF2               	movlw	-14
 16569  0142FE  0060  F113  FFE3   	movff	btemp+18,plusw1
 16570  014304  0EF3               	movlw	-13
 16571  014306  0060  F117  FFE3   	movff	btemp+19,plusw1
 16572  01430C  0EF4               	movlw	-12
 16573  01430E  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16574  014314  0EF5               	movlw	-11
 16575  014316  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16576  01431C  0EF6               	movlw	-10
 16577  01431E  0060  F123  FFE3   	movff	btemp+22,plusw1
 16578  014324  0EF7               	movlw	-9
 16579  014326  0060  F127  FFE3   	movff	btemp+23,plusw1
 16580  01432C                     l9859:
 16581                           
 16582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16583                           ;stkvar	_i @ sp[(-18)+10]
 16584  01432C  0EF9               	movlw	-7
 16585  01432E  BEE3               	btfsc	plusw1,7,c
 16586  014330  D036               	goto	u9350
 16587  014332  0EF9               	movlw	-7
 16588  014334  50E3               	movf	plusw1,w,c
 16589  014336  E104               	bnz	u9310
 16590  014338  0EF8               	movlw	-8
 16591  01433A  04E3               	decf	plusw1,w,c
 16592  01433C  A0D8               	btfss	status,0,c
 16593  01433E  D02F               	goto	u9350
 16594  014340                     u9310:
 16595                           
 16596                           ;stkvar	_n @ sp[(-18)+2]
 16597  014340  0EF0               	movlw	-16
 16598  014342  50E3               	movf	plusw1,w,c
 16599  014344  E115               	bnz	u9321
 16600  014346  0EF1               	movlw	-15
 16601  014348  50E3               	movf	plusw1,w,c
 16602  01434A  E112               	bnz	u9321
 16603  01434C  0EF2               	movlw	-14
 16604  01434E  50E3               	movf	plusw1,w,c
 16605  014350  E10F               	bnz	u9321
 16606  014352  0EF3               	movlw	-13
 16607  014354  50E3               	movf	plusw1,w,c
 16608  014356  E10C               	bnz	u9321
 16609  014358  0EF4               	movlw	-12
 16610  01435A  50E3               	movf	plusw1,w,c
 16611  01435C  E109               	bnz	u9321
 16612  01435E  0EF5               	movlw	-11
 16613  014360  50E3               	movf	plusw1,w,c
 16614  014362  E106               	bnz	u9321
 16615  014364  0EF6               	movlw	-10
 16616  014366  50E3               	movf	plusw1,w,c
 16617  014368  E103               	bnz	u9321
 16618  01436A  0EF7               	movlw	-9
 16619  01436C  50E3               	movf	plusw1,w,c
 16620  01436E  A4D8               	btfss	status,2,c
 16621  014370                     u9321:
 16622  014370  D6D4               	goto	l9849
 16623                           
 16624                           ;stkvar	_p @ sp[(-18)+16]
 16625  014372  0EFF               	movlw	-1
 16626  014374  BEE3               	btfsc	plusw1,7,c
 16627  014376  D007               	goto	u9330
 16628  014378  0EFF               	movlw	-1
 16629  01437A  50E3               	movf	plusw1,w,c
 16630  01437C  E103               	bnz	u9331
 16631  01437E  0EFE               	movlw	-2
 16632  014380  04E3               	decf	plusw1,w,c
 16633  014382  B0D8               	btfsc	status,0,c
 16634  014384                     u9331:
 16635  014384  D6CA               	goto	l9849
 16636  014386                     u9330:
 16637                           
 16638                           ;stkvar	_w @ sp[(-18)+14]
 16639  014386  0EFD               	movlw	-3
 16640  014388  BEE3               	btfsc	plusw1,7,c
 16641  01438A  D009               	goto	u9350
 16642  01438C  0EFD               	movlw	-3
 16643  01438E  50E3               	movf	plusw1,w,c
 16644  014390  E104               	bnz	u9340
 16645  014392  0EFC               	movlw	-4
 16646  014394  04E3               	decf	plusw1,w,c
 16647  014396  A0D8               	btfss	status,0,c
 16648  014398  D002               	goto	u9350
 16649  01439A                     u9340:
 16650  01439A  B21F               	btfsc	_flags^0,1,c
 16651  01439C  D6BE               	goto	l9849
 16652  01439E                     u9350:
 16653                           
 16654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16655                           ;stkvar	_s @ sp[(-18)+12]
 16656  01439E  0EFA               	movlw	-6
 16657  0143A0  006F FF8C  F032    	movff	plusw1,btemp
 16658  0143A6  0EFB               	movlw	-5
 16659  0143A8  50E3               	movf	plusw1,w,c
 16660  0143AA  1032               	iorwf	btemp^0,w,c
 16661  0143AC  A4D8               	btfss	status,2,c
 16662  0143AE  D002               	goto	u9370
 16663  0143B0  A41F               	btfss	_flags^0,2,c
 16664  0143B2  D033               	goto	l9883
 16665  0143B4                     u9370:
 16666                           
 16667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16668                           ;stkvar	_i @ sp[(-18)+10]
 16669  0143B4  50E1               	movf	fsr1l,w,c
 16670  0143B6  0FF8               	addlw	-8
 16671  0143B8  6ED9               	movwf	fsr2l,c
 16672  0143BA  50E2               	movf	fsr1h,w,c
 16673  0143BC  6EDA               	movwf	fsr2h,c
 16674  0143BE  0EFF               	movlw	255
 16675  0143C0  22DA               	addwfc	fsr2h,f,c
 16676  0143C2  06DE               	decf	postinc2,f,c
 16677  0143C4  0E00               	movlw	0
 16678  0143C6  5ADD               	subwfb	postdec2,f,c
 16679                           
 16680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16681                           ;stkvar	_s @ sp[(-18)+12]
 16682  0143C8  0EFA               	movlw	-6
 16683  0143CA  006F FF8C  F032    	movff	plusw1,btemp
 16684  0143D0  0EFB               	movlw	-5
 16685  0143D2  50E3               	movf	plusw1,w,c
 16686  0143D4  1032               	iorwf	btemp^0,w,c
 16687  0143D6  A4D8               	btfss	status,2,c
 16688  0143D8  D002               	goto	l9879
 16689  0143DA  0E2B               	movlw	43
 16690  0143DC  D001               	goto	L17
 16691  0143DE                     l9879:
 16692  0143DE  0E2D               	movlw	45
 16693  0143E0                     L17:
 16694  0143E0  6E3C               	movwf	(btemp+10)^0,c
 16695  0143E2  0E00               	movlw	0
 16696  0143E4  6E3D               	movwf	(btemp+11)^0,c
 16697                           
 16698                           ;stkvar	_dtoa$4593 @ sp[(-18)+0]
 16699  0143E6  0EEE               	movlw	-18
 16700  0143E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16701  0143EE  0EEF               	movlw	-17
 16702  0143F0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16703                           
 16704                           ;stkvar	_dtoa$4593 @ sp[(-18)+0]
 16705                           ;stkvar	_i @ sp[(-18)+10]
 16706  0143F6  0EF8               	movlw	-8
 16707  0143F8  006F FF8C  F03C    	movff	plusw1,btemp+10
 16708  0143FE  0EF9               	movlw	-7
 16709  014400  006F FF8C  F03D    	movff	plusw1,btemp+11
 16710  014406  0E7C               	movlw	low _dbuf
 16711  014408  243C               	addwf	(btemp+10)^0,w,c
 16712  01440A  6ED9               	movwf	fsr2l,c
 16713  01440C  0E01               	movlw	high _dbuf
 16714  01440E  203D               	addwfc	(btemp+11)^0,w,c
 16715  014410  6EDA               	movwf	fsr2h,c
 16716  014412  0EEE               	movlw	-18
 16717  014414  006F FF8F FFDF     	movff	plusw1,indf2
 16718  01441A                     l9883:
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16721                           ;stkvar	_w @ sp[(-18)+14]
 16722  01441A  0EFC               	movlw	-4
 16723  01441C  006F FF8F FFE6     	movff	plusw1,postinc1
 16724  014422  006F FF8F FFE6     	movff	plusw1,postinc1
 16725                           
 16726                           ;stkvar	_i @ sp[(-20)+10]
 16727  014428  0E7C               	movlw	low _dbuf
 16728  01442A  6E3C               	movwf	(btemp+10)^0,c
 16729  01442C  0E01               	movlw	high _dbuf
 16730  01442E  6E3D               	movwf	(btemp+11)^0,c
 16731  014430  0EF6               	movlw	-10
 16732  014432  50E3               	movf	plusw1,w,c
 16733  014434  263C               	addwf	(btemp+10)^0,f,c
 16734  014436  0EF7               	movlw	-9
 16735  014438  50E3               	movf	plusw1,w,c
 16736  01443A  223D               	addwfc	(btemp+11)^0,f,c
 16737  01443C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16738  014442  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16739                           
 16740                           ;stkvar	_fp @ sp[(-22)+-2]
 16741  014448  0EE8               	movlw	-24
 16742  01444A  006F FF8F FFE6     	movff	plusw1,postinc1
 16743  014450  006F FF8F FFE6     	movff	plusw1,postinc1
 16744  014456  EC9E  F0B6         	call	_pad	;wreg free
 16745                           
 16746                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16747  01445A  0EE4               	movlw	228
 16748  01445C  26E1               	addwf	fsr1l,f,c
 16749  01445E  0EFF               	movlw	255
 16750  014460  22E2               	addwfc	fsr1h,f,c
 16751  014462  0012               	return		;funcret
 16752  014464                     __end_of_dtoa:
 16753                           	opt callstack 0
 16754                           
 16755 ;; *************** function _abs *****************
 16756 ;; Defined at:
 16757 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16758 ;; Parameters:    Size  Location     Type
 16759 ;;  a               2  [STACK] int 
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;		None
 16762 ;; Return value:  Size  Location     Type
 16763 ;;                  2  [STACK] int 
 16764 ;; Registers used:
 16765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16766 ;; Tracked objects:
 16767 ;;		On entry : 0/1
 16768 ;;		On exit  : 0/0
 16769 ;;		Unchanged: 0/0
 16770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16775 ;;Total ram usage:        0 bytes
 16776 ;; Hardware stack levels used:    1
 16777 ;; Hardware stack levels required when called:    6
 16778 ;; This function calls:
 16779 ;;		Nothing
 16780 ;; This function is called by:
 16781 ;;		_dtoa
 16782 ;; This function uses a reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text60
 16786  0182D0                     __ptext60:
 16787                           	opt callstack 0
 16788  0182D0                     _abs:
 16789                           	opt callstack 17
 16790                           
 16791                           ;stkvar	_a @ sp[(0)+-2]
 16792                           
 16793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16794                           ;incstack = 0
 16795  0182D0  0EFF               	movlw	-1
 16796  0182D2  BEE3               	btfsc	plusw1,7,c
 16797  0182D4  D007               	goto	u5140
 16798  0182D6  0EFF               	movlw	-1
 16799  0182D8  50E3               	movf	plusw1,w,c
 16800  0182DA  E112               	bnz	l6661
 16801  0182DC  0EFE               	movlw	-2
 16802  0182DE  04E3               	decf	plusw1,w,c
 16803  0182E0  B0D8               	btfsc	status,0,c
 16804  0182E2  D00E               	goto	l6661
 16805  0182E4                     u5140:
 16806                           
 16807                           ;stkvar	_a @ sp[(0)+-2]
 16808  0182E4  0EFE               	movlw	-2
 16809  0182E6  006F FF8C  F032    	movff	plusw1,btemp
 16810  0182EC  1E32               	comf	btemp^0,f,c
 16811  0182EE  0EFF               	movlw	-1
 16812  0182F0  006F FF8C  F033    	movff	plusw1,btemp+1
 16813  0182F6  1E33               	comf	(btemp+1)^0,f,c
 16814  0182F8  2A32               	incf	btemp^0,f,c
 16815  0182FA  B4D8               	btfsc	status,2,c
 16816  0182FC  2A33               	incf	(btemp+1)^0,f,c
 16817  0182FE  D008               	goto	l2795
 16818  018300                     l6661:
 16819                           
 16820                           ;stkvar	_a @ sp[(0)+-2]
 16821  018300  0EFE               	movlw	-2
 16822  018302  006F FF8C  F032    	movff	plusw1,btemp
 16823  018308  0EFF               	movlw	-1
 16824  01830A  006F FF8C  F033    	movff	plusw1,btemp+1
 16825  018310                     l2795:
 16826                           
 16827                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16828  018310  52E5               	movf	postdec1,f,c
 16829  018312  52E5               	movf	postdec1,f,c
 16830  018314  0012               	return		;funcret
 16831  018316                     __end_of_abs:
 16832                           	opt callstack 0
 16833                           
 16834 ;; *************** function ___aomod *****************
 16835 ;; Defined at:
 16836 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;  dividend        8  [STACK] long long 
 16839 ;;  divisor         8  [STACK] long long 
 16840 ;; Auto vars:     Size  Location     Type
 16841 ;;  sign            1  [STACK] unsigned char 
 16842 ;;  counter         1  [STACK] unsigned char 
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  8  [STACK] long long 
 16845 ;; Registers used:
 16846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/1
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16856 ;;Total ram usage:        0 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:    6
 16859 ;; This function calls:
 16860 ;;		Nothing
 16861 ;; This function is called by:
 16862 ;;		_dtoa
 16863 ;; This function uses a reentrant model
 16864 ;;
 16865                           
 16866                           	psect	text61
 16867  0158F4                     __ptext61:
 16868                           	opt callstack 0
 16869  0158F4                     ___aomod:
 16870                           	opt callstack 0
 16871                           
 16872                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16873  0158F4  52E6               	movf	postinc1,f,c
 16874  0158F6  52E6               	movf	postinc1,f,c
 16875                           
 16876                           ;stkvar	_sign @ sp[(-2)+0]
 16877                           
 16878                           ;incstack = 0
 16879  0158F8  0EFE               	movlw	-2
 16880  0158FA  6AE3               	clrf	plusw1,c
 16881                           
 16882                           ;stkvar	_dividend @ sp[(-2)+-8]
 16883  0158FC  0EFD               	movlw	-3
 16884  0158FE  AEE3               	btfss	plusw1,7,c
 16885  015900  D028               	goto	l6819
 16886                           
 16887                           ;stkvar	_dividend @ sp[(-2)+-8]
 16888                           ;stkvar	_dividend @ sp[(-2)+-8]
 16889  015902  0EF6               	movlw	-10
 16890  015904  6CE3               	negf	plusw1,c
 16891  015906  0EF7               	movlw	-9
 16892  015908  1EE3               	comf	plusw1,f,c
 16893  01590A  0EF8               	movlw	-8
 16894  01590C  1EE3               	comf	plusw1,f,c
 16895  01590E  0EF9               	movlw	-7
 16896  015910  1EE3               	comf	plusw1,f,c
 16897  015912  0EFA               	movlw	-6
 16898  015914  1EE3               	comf	plusw1,f,c
 16899  015916  0EFB               	movlw	-5
 16900  015918  1EE3               	comf	plusw1,f,c
 16901  01591A  0EFC               	movlw	-4
 16902  01591C  1EE3               	comf	plusw1,f,c
 16903  01591E  0EFD               	movlw	-3
 16904  015920  1EE3               	comf	plusw1,f,c
 16905  015922  E314               	bnc	u5570
 16906  015924  0EF7               	movlw	-9
 16907  015926  2AE3               	incf	plusw1,f,c
 16908  015928  E311               	bnc	u5570
 16909  01592A  0EF8               	movlw	-8
 16910  01592C  2AE3               	incf	plusw1,f,c
 16911  01592E  E30E               	bnc	u5570
 16912  015930  0EF9               	movlw	-7
 16913  015932  2AE3               	incf	plusw1,f,c
 16914  015934  E30B               	bnc	u5570
 16915  015936  0EFA               	movlw	-6
 16916  015938  2AE3               	incf	plusw1,f,c
 16917  01593A  E308               	bnc	u5570
 16918  01593C  0EFB               	movlw	-5
 16919  01593E  2AE3               	incf	plusw1,f,c
 16920  015940  E305               	bnc	u5570
 16921  015942  0EFC               	movlw	-4
 16922  015944  2AE3               	incf	plusw1,f,c
 16923  015946  E302               	bnc	u5570
 16924  015948  0EFD               	movlw	-3
 16925  01594A  2AE3               	incf	plusw1,f,c
 16926  01594C                     u5570:
 16927                           
 16928                           ;stkvar	_sign @ sp[(-2)+0]
 16929  01594C  0EFE               	movlw	-2
 16930  01594E  6AE3               	clrf	plusw1,c
 16931  015950  2AE3               	incf	plusw1,f,c
 16932  015952                     l6819:
 16933                           
 16934                           ;stkvar	_divisor @ sp[(-2)+-16]
 16935  015952  0EF5               	movlw	-11
 16936  015954  AEE3               	btfss	plusw1,7,c
 16937  015956  D025               	goto	u5590
 16938                           
 16939                           ;stkvar	_divisor @ sp[(-2)+-16]
 16940                           ;stkvar	_divisor @ sp[(-2)+-16]
 16941  015958  0EEE               	movlw	-18
 16942  01595A  6CE3               	negf	plusw1,c
 16943  01595C  0EEF               	movlw	-17
 16944  01595E  1EE3               	comf	plusw1,f,c
 16945  015960  0EF0               	movlw	-16
 16946  015962  1EE3               	comf	plusw1,f,c
 16947  015964  0EF1               	movlw	-15
 16948  015966  1EE3               	comf	plusw1,f,c
 16949  015968  0EF2               	movlw	-14
 16950  01596A  1EE3               	comf	plusw1,f,c
 16951  01596C  0EF3               	movlw	-13
 16952  01596E  1EE3               	comf	plusw1,f,c
 16953  015970  0EF4               	movlw	-12
 16954  015972  1EE3               	comf	plusw1,f,c
 16955  015974  0EF5               	movlw	-11
 16956  015976  1EE3               	comf	plusw1,f,c
 16957  015978  E314               	bnc	u5590
 16958  01597A  0EEF               	movlw	-17
 16959  01597C  2AE3               	incf	plusw1,f,c
 16960  01597E  E311               	bnc	u5590
 16961  015980  0EF0               	movlw	-16
 16962  015982  2AE3               	incf	plusw1,f,c
 16963  015984  E30E               	bnc	u5590
 16964  015986  0EF1               	movlw	-15
 16965  015988  2AE3               	incf	plusw1,f,c
 16966  01598A  E30B               	bnc	u5590
 16967  01598C  0EF2               	movlw	-14
 16968  01598E  2AE3               	incf	plusw1,f,c
 16969  015990  E308               	bnc	u5590
 16970  015992  0EF3               	movlw	-13
 16971  015994  2AE3               	incf	plusw1,f,c
 16972  015996  E305               	bnc	u5590
 16973  015998  0EF4               	movlw	-12
 16974  01599A  2AE3               	incf	plusw1,f,c
 16975  01599C  E302               	bnc	u5590
 16976  01599E  0EF5               	movlw	-11
 16977  0159A0  2AE3               	incf	plusw1,f,c
 16978  0159A2                     u5590:
 16979                           
 16980                           ;stkvar	_divisor @ sp[(-2)+-16]
 16981  0159A2  0EEE               	movlw	-18
 16982  0159A4  50E3               	movf	plusw1,w,c
 16983  0159A6  E116               	bnz	u5600
 16984  0159A8  0EEF               	movlw	-17
 16985  0159AA  50E3               	movf	plusw1,w,c
 16986  0159AC  E113               	bnz	u5600
 16987  0159AE  0EF0               	movlw	-16
 16988  0159B0  50E3               	movf	plusw1,w,c
 16989  0159B2  E110               	bnz	u5600
 16990  0159B4  0EF1               	movlw	-15
 16991  0159B6  50E3               	movf	plusw1,w,c
 16992  0159B8  E10D               	bnz	u5600
 16993  0159BA  0EF2               	movlw	-14
 16994  0159BC  50E3               	movf	plusw1,w,c
 16995  0159BE  E10A               	bnz	u5600
 16996  0159C0  0EF3               	movlw	-13
 16997  0159C2  50E3               	movf	plusw1,w,c
 16998  0159C4  E107               	bnz	u5600
 16999  0159C6  0EF4               	movlw	-12
 17000  0159C8  50E3               	movf	plusw1,w,c
 17001  0159CA  E104               	bnz	u5600
 17002  0159CC  0EF5               	movlw	-11
 17003  0159CE  50E3               	movf	plusw1,w,c
 17004  0159D0  B4D8               	btfsc	status,2,c
 17005  0159D2  D075               	goto	u5630
 17006  0159D4                     u5600:
 17007                           
 17008                           ;stkvar	_counter @ sp[(-2)+1]
 17009  0159D4  0EFF               	movlw	-1
 17010  0159D6  6AE3               	clrf	plusw1,c
 17011  0159D8  D012               	goto	L18
 17012  0159DA                     l6827:
 17013                           
 17014                           ;stkvar	_divisor @ sp[(-2)+-16]
 17015  0159DA  90D8               	bcf	status,0,c
 17016  0159DC  0EEE               	movlw	-18
 17017  0159DE  36E3               	rlcf	plusw1,f,c
 17018  0159E0  0EEF               	movlw	-17
 17019  0159E2  36E3               	rlcf	plusw1,f,c
 17020  0159E4  0EF0               	movlw	-16
 17021  0159E6  36E3               	rlcf	plusw1,f,c
 17022  0159E8  0EF1               	movlw	-15
 17023  0159EA  36E3               	rlcf	plusw1,f,c
 17024  0159EC  0EF2               	movlw	-14
 17025  0159EE  36E3               	rlcf	plusw1,f,c
 17026  0159F0  0EF3               	movlw	-13
 17027  0159F2  36E3               	rlcf	plusw1,f,c
 17028  0159F4  0EF4               	movlw	-12
 17029  0159F6  36E3               	rlcf	plusw1,f,c
 17030  0159F8  0EF5               	movlw	-11
 17031  0159FA  36E3               	rlcf	plusw1,f,c
 17032                           
 17033                           ;stkvar	_counter @ sp[(-2)+1]
 17034  0159FC  0EFF               	movlw	-1
 17035  0159FE                     L18:
 17036  0159FE  2AE3               	incf	plusw1,f,c
 17037                           
 17038                           ;stkvar	_divisor @ sp[(-2)+-16]
 17039  015A00  0EF5               	movlw	-11
 17040  015A02  AEE3               	btfss	plusw1,7,c
 17041  015A04  D7EA               	goto	l6827
 17042  015A06                     u5610:
 17043                           
 17044                           ;stkvar	_divisor @ sp[(-2)+-16]
 17045                           ;stkvar	_dividend @ sp[(-2)+-8]
 17046  015A06  50E1               	movf	fsr1l,w,c
 17047  015A08  0FF6               	addlw	-10
 17048  015A0A  6ED9               	movwf	fsr2l,c
 17049  015A0C  50E2               	movf	fsr1h,w,c
 17050  015A0E  6EDA               	movwf	fsr2h,c
 17051  015A10  0EFF               	movlw	255
 17052  015A12  22DA               	addwfc	fsr2h,f,c
 17053  015A14  0EEE               	movlw	-18
 17054  015A16  50E3               	movf	plusw1,w,c
 17055  015A18  5CDE               	subwf	postinc2,w,c
 17056  015A1A  0EEF               	movlw	-17
 17057  015A1C  50E3               	movf	plusw1,w,c
 17058  015A1E  58DE               	subwfb	postinc2,w,c
 17059  015A20  0EF0               	movlw	-16
 17060  015A22  50E3               	movf	plusw1,w,c
 17061  015A24  58DE               	subwfb	postinc2,w,c
 17062  015A26  0EF1               	movlw	-15
 17063  015A28  50E3               	movf	plusw1,w,c
 17064  015A2A  58DE               	subwfb	postinc2,w,c
 17065  015A2C  0EF2               	movlw	-14
 17066  015A2E  50E3               	movf	plusw1,w,c
 17067  015A30  58DE               	subwfb	postinc2,w,c
 17068  015A32  0EF3               	movlw	-13
 17069  015A34  50E3               	movf	plusw1,w,c
 17070  015A36  58DE               	subwfb	postinc2,w,c
 17071  015A38  0EF4               	movlw	-12
 17072  015A3A  50E3               	movf	plusw1,w,c
 17073  015A3C  58DE               	subwfb	postinc2,w,c
 17074  015A3E  0EF5               	movlw	-11
 17075  015A40  50E3               	movf	plusw1,w,c
 17076  015A42  58DE               	subwfb	postinc2,w,c
 17077  015A44  A0D8               	btfss	status,0,c
 17078  015A46  D01F               	goto	l6835
 17079                           
 17080                           ;stkvar	_divisor @ sp[(-2)+-16]
 17081                           ;stkvar	_dividend @ sp[(-2)+-8]
 17082  015A48  50E1               	movf	fsr1l,w,c
 17083  015A4A  0FF6               	addlw	-10
 17084  015A4C  6ED9               	movwf	fsr2l,c
 17085  015A4E  50E2               	movf	fsr1h,w,c
 17086  015A50  6EDA               	movwf	fsr2h,c
 17087  015A52  0EFF               	movlw	255
 17088  015A54  22DA               	addwfc	fsr2h,f,c
 17089  015A56  0EEE               	movlw	-18
 17090  015A58  50E3               	movf	plusw1,w,c
 17091  015A5A  5EDE               	subwf	postinc2,f,c
 17092  015A5C  0EEF               	movlw	-17
 17093  015A5E  50E3               	movf	plusw1,w,c
 17094  015A60  5ADE               	subwfb	postinc2,f,c
 17095  015A62  0EF0               	movlw	-16
 17096  015A64  50E3               	movf	plusw1,w,c
 17097  015A66  5ADE               	subwfb	postinc2,f,c
 17098  015A68  0EF1               	movlw	-15
 17099  015A6A  50E3               	movf	plusw1,w,c
 17100  015A6C  5ADE               	subwfb	postinc2,f,c
 17101  015A6E  0EF2               	movlw	-14
 17102  015A70  50E3               	movf	plusw1,w,c
 17103  015A72  5ADE               	subwfb	postinc2,f,c
 17104  015A74  0EF3               	movlw	-13
 17105  015A76  50E3               	movf	plusw1,w,c
 17106  015A78  5ADE               	subwfb	postinc2,f,c
 17107  015A7A  0EF4               	movlw	-12
 17108  015A7C  50E3               	movf	plusw1,w,c
 17109  015A7E  5ADE               	subwfb	postinc2,f,c
 17110  015A80  0EF5               	movlw	-11
 17111  015A82  50E3               	movf	plusw1,w,c
 17112  015A84  5ADE               	subwfb	postinc2,f,c
 17113  015A86                     l6835:
 17114                           
 17115                           ;stkvar	_divisor @ sp[(-2)+-16]
 17116  015A86  90D8               	bcf	status,0,c
 17117  015A88  0EF5               	movlw	-11
 17118  015A8A  32E3               	rrcf	plusw1,f,c
 17119  015A8C  0EF4               	movlw	-12
 17120  015A8E  32E3               	rrcf	plusw1,f,c
 17121  015A90  0EF3               	movlw	-13
 17122  015A92  32E3               	rrcf	plusw1,f,c
 17123  015A94  0EF2               	movlw	-14
 17124  015A96  32E3               	rrcf	plusw1,f,c
 17125  015A98  0EF1               	movlw	-15
 17126  015A9A  32E3               	rrcf	plusw1,f,c
 17127  015A9C  0EF0               	movlw	-16
 17128  015A9E  32E3               	rrcf	plusw1,f,c
 17129  015AA0  0EEF               	movlw	-17
 17130  015AA2  32E3               	rrcf	plusw1,f,c
 17131  015AA4  0EEE               	movlw	-18
 17132  015AA6  32E3               	rrcf	plusw1,f,c
 17133                           
 17134                           ;stkvar	_counter @ sp[(-2)+1]
 17135  015AA8  0EFF               	movlw	-1
 17136  015AAA  50E3               	movf	plusw1,w,c
 17137  015AAC  6E32               	movwf	btemp^0,c
 17138  015AAE  0E01               	movlw	1
 17139  015AB0  5E32               	subwf	btemp^0,f,c
 17140  015AB2  0EFF               	movlw	-1
 17141  015AB4  0060  F0CB  FFE3   	movff	btemp,plusw1
 17142  015ABA  A4D8               	btfss	status,2,c
 17143  015ABC  D7A4               	goto	u5610
 17144  015ABE                     u5630:
 17145                           
 17146                           ;stkvar	_sign @ sp[(-2)+0]
 17147  015ABE  0EFE               	movlw	-2
 17148  015AC0  50E3               	movf	plusw1,w,c
 17149  015AC2  B4D8               	btfsc	status,2,c
 17150  015AC4  D025               	goto	u5650
 17151                           
 17152                           ;stkvar	_dividend @ sp[(-2)+-8]
 17153                           ;stkvar	_dividend @ sp[(-2)+-8]
 17154  015AC6  0EF6               	movlw	-10
 17155  015AC8  6CE3               	negf	plusw1,c
 17156  015ACA  0EF7               	movlw	-9
 17157  015ACC  1EE3               	comf	plusw1,f,c
 17158  015ACE  0EF8               	movlw	-8
 17159  015AD0  1EE3               	comf	plusw1,f,c
 17160  015AD2  0EF9               	movlw	-7
 17161  015AD4  1EE3               	comf	plusw1,f,c
 17162  015AD6  0EFA               	movlw	-6
 17163  015AD8  1EE3               	comf	plusw1,f,c
 17164  015ADA  0EFB               	movlw	-5
 17165  015ADC  1EE3               	comf	plusw1,f,c
 17166  015ADE  0EFC               	movlw	-4
 17167  015AE0  1EE3               	comf	plusw1,f,c
 17168  015AE2  0EFD               	movlw	-3
 17169  015AE4  1EE3               	comf	plusw1,f,c
 17170  015AE6  E314               	bnc	u5650
 17171  015AE8  0EF7               	movlw	-9
 17172  015AEA  2AE3               	incf	plusw1,f,c
 17173  015AEC  E311               	bnc	u5650
 17174  015AEE  0EF8               	movlw	-8
 17175  015AF0  2AE3               	incf	plusw1,f,c
 17176  015AF2  E30E               	bnc	u5650
 17177  015AF4  0EF9               	movlw	-7
 17178  015AF6  2AE3               	incf	plusw1,f,c
 17179  015AF8  E30B               	bnc	u5650
 17180  015AFA  0EFA               	movlw	-6
 17181  015AFC  2AE3               	incf	plusw1,f,c
 17182  015AFE  E308               	bnc	u5650
 17183  015B00  0EFB               	movlw	-5
 17184  015B02  2AE3               	incf	plusw1,f,c
 17185  015B04  E305               	bnc	u5650
 17186  015B06  0EFC               	movlw	-4
 17187  015B08  2AE3               	incf	plusw1,f,c
 17188  015B0A  E302               	bnc	u5650
 17189  015B0C  0EFD               	movlw	-3
 17190  015B0E  2AE3               	incf	plusw1,f,c
 17191  015B10                     u5650:
 17192                           
 17193                           ;stkvar	_dividend @ sp[(-2)+-8]
 17194  015B10  0EF6               	movlw	246
 17195  015B12  24E1               	addwf	fsr1l,w,c
 17196  015B14  6ED9               	movwf	fsr2l,c
 17197  015B16  0EFF               	movlw	255
 17198  015B18  20E2               	addwfc	fsr1h,w,c
 17199  015B1A  6EDA               	movwf	fsr2h,c
 17200                           
 17201                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17202  015B1C  0E08               	movlw	8
 17203  015B1E  6E32               	movwf	btemp^0,c
 17204  015B20  0EF6               	movlw	-10
 17205  015B22                     us566999:
 17206  015B22  006F FF7B FFE3     	movff	postinc2,plusw1
 17207  015B28  28E8               	incf	wreg,w,c
 17208  015B2A  2E32               	decfsz	btemp^0,f,c
 17209  015B2C  D7FA               	bra	us566999
 17210                           
 17211                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17212  015B2E  52E5               	movf	postdec1,f,c
 17213  015B30  52E5               	movf	postdec1,f,c
 17214  015B32  0012               	return		;funcret
 17215  015B34                     __end_of___aomod:
 17216                           	opt callstack 0
 17217                           
 17218 ;; *************** function ___aodiv *****************
 17219 ;; Defined at:
 17220 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;  dividend        8  [STACK] long long 
 17223 ;;  divisor         8  [STACK] long long 
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;  quotient        8  [STACK] long long 
 17226 ;;  sign            1  [STACK] unsigned char 
 17227 ;;  counter         1  [STACK] unsigned char 
 17228 ;; Return value:  Size  Location     Type
 17229 ;;                  8  [STACK] long long 
 17230 ;; Registers used:
 17231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17232 ;; Tracked objects:
 17233 ;;		On entry : 0/1
 17234 ;;		On exit  : 0/0
 17235 ;;		Unchanged: 0/0
 17236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17241 ;;Total ram usage:        0 bytes
 17242 ;; Hardware stack levels used:    1
 17243 ;; Hardware stack levels required when called:    6
 17244 ;; This function calls:
 17245 ;;		Nothing
 17246 ;; This function is called by:
 17247 ;;		_dtoa
 17248 ;; This function uses a reentrant model
 17249 ;;
 17250                           
 17251                           	psect	text62
 17252  015400                     __ptext62:
 17253                           	opt callstack 0
 17254  015400                     ___aodiv:
 17255                           	opt callstack 0
 17256                           
 17257                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17258  015400  0E0A               	movlw	10
 17259  015402  26E1               	addwf	fsr1l,f,c
 17260  015404  0E00               	movlw	0
 17261  015406  22E2               	addwfc	fsr1h,f,c
 17262                           
 17263                           ;stkvar	_sign @ sp[(-10)+8]
 17264                           
 17265                           ;incstack = 0
 17266  015408  0EFE               	movlw	-2
 17267  01540A  6AE3               	clrf	plusw1,c
 17268                           
 17269                           ;stkvar	_divisor @ sp[(-10)+-16]
 17270  01540C  0EED               	movlw	-19
 17271  01540E  AEE3               	btfss	plusw1,7,c
 17272  015410  D028               	goto	l6775
 17273                           
 17274                           ;stkvar	_divisor @ sp[(-10)+-16]
 17275                           ;stkvar	_divisor @ sp[(-10)+-16]
 17276  015412  0EE6               	movlw	-26
 17277  015414  6CE3               	negf	plusw1,c
 17278  015416  0EE7               	movlw	-25
 17279  015418  1EE3               	comf	plusw1,f,c
 17280  01541A  0EE8               	movlw	-24
 17281  01541C  1EE3               	comf	plusw1,f,c
 17282  01541E  0EE9               	movlw	-23
 17283  015420  1EE3               	comf	plusw1,f,c
 17284  015422  0EEA               	movlw	-22
 17285  015424  1EE3               	comf	plusw1,f,c
 17286  015426  0EEB               	movlw	-21
 17287  015428  1EE3               	comf	plusw1,f,c
 17288  01542A  0EEC               	movlw	-20
 17289  01542C  1EE3               	comf	plusw1,f,c
 17290  01542E  0EED               	movlw	-19
 17291  015430  1EE3               	comf	plusw1,f,c
 17292  015432  E314               	bnc	u5450
 17293  015434  0EE7               	movlw	-25
 17294  015436  2AE3               	incf	plusw1,f,c
 17295  015438  E311               	bnc	u5450
 17296  01543A  0EE8               	movlw	-24
 17297  01543C  2AE3               	incf	plusw1,f,c
 17298  01543E  E30E               	bnc	u5450
 17299  015440  0EE9               	movlw	-23
 17300  015442  2AE3               	incf	plusw1,f,c
 17301  015444  E30B               	bnc	u5450
 17302  015446  0EEA               	movlw	-22
 17303  015448  2AE3               	incf	plusw1,f,c
 17304  01544A  E308               	bnc	u5450
 17305  01544C  0EEB               	movlw	-21
 17306  01544E  2AE3               	incf	plusw1,f,c
 17307  015450  E305               	bnc	u5450
 17308  015452  0EEC               	movlw	-20
 17309  015454  2AE3               	incf	plusw1,f,c
 17310  015456  E302               	bnc	u5450
 17311  015458  0EED               	movlw	-19
 17312  01545A  2AE3               	incf	plusw1,f,c
 17313  01545C                     u5450:
 17314                           
 17315                           ;stkvar	_sign @ sp[(-10)+8]
 17316  01545C  0EFE               	movlw	-2
 17317  01545E  6AE3               	clrf	plusw1,c
 17318  015460  2AE3               	incf	plusw1,f,c
 17319  015462                     l6775:
 17320                           
 17321                           ;stkvar	_dividend @ sp[(-10)+-8]
 17322  015462  0EF5               	movlw	-11
 17323  015464  AEE3               	btfss	plusw1,7,c
 17324  015466  D027               	goto	l6781
 17325                           
 17326                           ;stkvar	_dividend @ sp[(-10)+-8]
 17327                           ;stkvar	_dividend @ sp[(-10)+-8]
 17328  015468  0EEE               	movlw	-18
 17329  01546A  6CE3               	negf	plusw1,c
 17330  01546C  0EEF               	movlw	-17
 17331  01546E  1EE3               	comf	plusw1,f,c
 17332  015470  0EF0               	movlw	-16
 17333  015472  1EE3               	comf	plusw1,f,c
 17334  015474  0EF1               	movlw	-15
 17335  015476  1EE3               	comf	plusw1,f,c
 17336  015478  0EF2               	movlw	-14
 17337  01547A  1EE3               	comf	plusw1,f,c
 17338  01547C  0EF3               	movlw	-13
 17339  01547E  1EE3               	comf	plusw1,f,c
 17340  015480  0EF4               	movlw	-12
 17341  015482  1EE3               	comf	plusw1,f,c
 17342  015484  0EF5               	movlw	-11
 17343  015486  1EE3               	comf	plusw1,f,c
 17344  015488  E314               	bnc	u5470
 17345  01548A  0EEF               	movlw	-17
 17346  01548C  2AE3               	incf	plusw1,f,c
 17347  01548E  E311               	bnc	u5470
 17348  015490  0EF0               	movlw	-16
 17349  015492  2AE3               	incf	plusw1,f,c
 17350  015494  E30E               	bnc	u5470
 17351  015496  0EF1               	movlw	-15
 17352  015498  2AE3               	incf	plusw1,f,c
 17353  01549A  E30B               	bnc	u5470
 17354  01549C  0EF2               	movlw	-14
 17355  01549E  2AE3               	incf	plusw1,f,c
 17356  0154A0  E308               	bnc	u5470
 17357  0154A2  0EF3               	movlw	-13
 17358  0154A4  2AE3               	incf	plusw1,f,c
 17359  0154A6  E305               	bnc	u5470
 17360  0154A8  0EF4               	movlw	-12
 17361  0154AA  2AE3               	incf	plusw1,f,c
 17362  0154AC  E302               	bnc	u5470
 17363  0154AE  0EF5               	movlw	-11
 17364  0154B0  2AE3               	incf	plusw1,f,c
 17365  0154B2                     u5470:
 17366                           
 17367                           ;stkvar	_sign @ sp[(-10)+8]
 17368  0154B2  0EFE               	movlw	-2
 17369  0154B4  70E3               	btg	plusw1,0,c
 17370  0154B6                     l6781:
 17371                           
 17372                           ;stkvar	_quotient @ sp[(-10)+0]
 17373  0154B6  0E07               	movlw	7
 17374  0154B8  6E32               	movwf	btemp^0,c
 17375  0154BA  0EF6               	movlw	-10
 17376  0154BC                     u5481:
 17377  0154BC  6AE3               	clrf	plusw1,c
 17378  0154BE  2AE8               	incf	wreg,f,c
 17379  0154C0  0632               	decf	btemp^0,f,c
 17380  0154C2  E2FC               	bc	u5481
 17381                           
 17382                           ;stkvar	_divisor @ sp[(-10)+-16]
 17383  0154C4  0EE6               	movlw	-26
 17384  0154C6  50E3               	movf	plusw1,w,c
 17385  0154C8  E116               	bnz	u5490
 17386  0154CA  0EE7               	movlw	-25
 17387  0154CC  50E3               	movf	plusw1,w,c
 17388  0154CE  E113               	bnz	u5490
 17389  0154D0  0EE8               	movlw	-24
 17390  0154D2  50E3               	movf	plusw1,w,c
 17391  0154D4  E110               	bnz	u5490
 17392  0154D6  0EE9               	movlw	-23
 17393  0154D8  50E3               	movf	plusw1,w,c
 17394  0154DA  E10D               	bnz	u5490
 17395  0154DC  0EEA               	movlw	-22
 17396  0154DE  50E3               	movf	plusw1,w,c
 17397  0154E0  E10A               	bnz	u5490
 17398  0154E2  0EEB               	movlw	-21
 17399  0154E4  50E3               	movf	plusw1,w,c
 17400  0154E6  E107               	bnz	u5490
 17401  0154E8  0EEC               	movlw	-20
 17402  0154EA  50E3               	movf	plusw1,w,c
 17403  0154EC  E104               	bnz	u5490
 17404  0154EE  0EED               	movlw	-19
 17405  0154F0  50E3               	movf	plusw1,w,c
 17406  0154F2  B4D8               	btfsc	status,2,c
 17407  0154F4  D088               	goto	u5520
 17408  0154F6                     u5490:
 17409                           
 17410                           ;stkvar	_counter @ sp[(-10)+9]
 17411  0154F6  0EFF               	movlw	-1
 17412  0154F8  6AE3               	clrf	plusw1,c
 17413  0154FA  D012               	goto	L19
 17414  0154FC                     l6787:
 17415                           
 17416                           ;stkvar	_divisor @ sp[(-10)+-16]
 17417  0154FC  90D8               	bcf	status,0,c
 17418  0154FE  0EE6               	movlw	-26
 17419  015500  36E3               	rlcf	plusw1,f,c
 17420  015502  0EE7               	movlw	-25
 17421  015504  36E3               	rlcf	plusw1,f,c
 17422  015506  0EE8               	movlw	-24
 17423  015508  36E3               	rlcf	plusw1,f,c
 17424  01550A  0EE9               	movlw	-23
 17425  01550C  36E3               	rlcf	plusw1,f,c
 17426  01550E  0EEA               	movlw	-22
 17427  015510  36E3               	rlcf	plusw1,f,c
 17428  015512  0EEB               	movlw	-21
 17429  015514  36E3               	rlcf	plusw1,f,c
 17430  015516  0EEC               	movlw	-20
 17431  015518  36E3               	rlcf	plusw1,f,c
 17432  01551A  0EED               	movlw	-19
 17433  01551C  36E3               	rlcf	plusw1,f,c
 17434                           
 17435                           ;stkvar	_counter @ sp[(-10)+9]
 17436  01551E  0EFF               	movlw	-1
 17437  015520                     L19:
 17438  015520  2AE3               	incf	plusw1,f,c
 17439                           
 17440                           ;stkvar	_divisor @ sp[(-10)+-16]
 17441  015522  0EED               	movlw	-19
 17442  015524  AEE3               	btfss	plusw1,7,c
 17443  015526  D7EA               	goto	l6787
 17444  015528                     u5500:
 17445                           
 17446                           ;stkvar	_quotient @ sp[(-10)+0]
 17447  015528  90D8               	bcf	status,0,c
 17448  01552A  0EF6               	movlw	-10
 17449  01552C  36E3               	rlcf	plusw1,f,c
 17450  01552E  0EF7               	movlw	-9
 17451  015530  36E3               	rlcf	plusw1,f,c
 17452  015532  0EF8               	movlw	-8
 17453  015534  36E3               	rlcf	plusw1,f,c
 17454  015536  0EF9               	movlw	-7
 17455  015538  36E3               	rlcf	plusw1,f,c
 17456  01553A  0EFA               	movlw	-6
 17457  01553C  36E3               	rlcf	plusw1,f,c
 17458  01553E  0EFB               	movlw	-5
 17459  015540  36E3               	rlcf	plusw1,f,c
 17460  015542  0EFC               	movlw	-4
 17461  015544  36E3               	rlcf	plusw1,f,c
 17462  015546  0EFD               	movlw	-3
 17463  015548  36E3               	rlcf	plusw1,f,c
 17464                           
 17465                           ;stkvar	_divisor @ sp[(-10)+-16]
 17466                           ;stkvar	_dividend @ sp[(-10)+-8]
 17467  01554A  50E1               	movf	fsr1l,w,c
 17468  01554C  0FEE               	addlw	-18
 17469  01554E  6ED9               	movwf	fsr2l,c
 17470  015550  50E2               	movf	fsr1h,w,c
 17471  015552  6EDA               	movwf	fsr2h,c
 17472  015554  0EFF               	movlw	255
 17473  015556  22DA               	addwfc	fsr2h,f,c
 17474  015558  0EE6               	movlw	-26
 17475  01555A  50E3               	movf	plusw1,w,c
 17476  01555C  5CDE               	subwf	postinc2,w,c
 17477  01555E  0EE7               	movlw	-25
 17478  015560  50E3               	movf	plusw1,w,c
 17479  015562  58DE               	subwfb	postinc2,w,c
 17480  015564  0EE8               	movlw	-24
 17481  015566  50E3               	movf	plusw1,w,c
 17482  015568  58DE               	subwfb	postinc2,w,c
 17483  01556A  0EE9               	movlw	-23
 17484  01556C  50E3               	movf	plusw1,w,c
 17485  01556E  58DE               	subwfb	postinc2,w,c
 17486  015570  0EEA               	movlw	-22
 17487  015572  50E3               	movf	plusw1,w,c
 17488  015574  58DE               	subwfb	postinc2,w,c
 17489  015576  0EEB               	movlw	-21
 17490  015578  50E3               	movf	plusw1,w,c
 17491  01557A  58DE               	subwfb	postinc2,w,c
 17492  01557C  0EEC               	movlw	-20
 17493  01557E  50E3               	movf	plusw1,w,c
 17494  015580  58DE               	subwfb	postinc2,w,c
 17495  015582  0EED               	movlw	-19
 17496  015584  50E3               	movf	plusw1,w,c
 17497  015586  58DE               	subwfb	postinc2,w,c
 17498  015588  A0D8               	btfss	status,0,c
 17499  01558A  D021               	goto	l6799
 17500                           
 17501                           ;stkvar	_divisor @ sp[(-10)+-16]
 17502                           ;stkvar	_dividend @ sp[(-10)+-8]
 17503  01558C  50E1               	movf	fsr1l,w,c
 17504  01558E  0FEE               	addlw	-18
 17505  015590  6ED9               	movwf	fsr2l,c
 17506  015592  50E2               	movf	fsr1h,w,c
 17507  015594  6EDA               	movwf	fsr2h,c
 17508  015596  0EFF               	movlw	255
 17509  015598  22DA               	addwfc	fsr2h,f,c
 17510  01559A  0EE6               	movlw	-26
 17511  01559C  50E3               	movf	plusw1,w,c
 17512  01559E  5EDE               	subwf	postinc2,f,c
 17513  0155A0  0EE7               	movlw	-25
 17514  0155A2  50E3               	movf	plusw1,w,c
 17515  0155A4  5ADE               	subwfb	postinc2,f,c
 17516  0155A6  0EE8               	movlw	-24
 17517  0155A8  50E3               	movf	plusw1,w,c
 17518  0155AA  5ADE               	subwfb	postinc2,f,c
 17519  0155AC  0EE9               	movlw	-23
 17520  0155AE  50E3               	movf	plusw1,w,c
 17521  0155B0  5ADE               	subwfb	postinc2,f,c
 17522  0155B2  0EEA               	movlw	-22
 17523  0155B4  50E3               	movf	plusw1,w,c
 17524  0155B6  5ADE               	subwfb	postinc2,f,c
 17525  0155B8  0EEB               	movlw	-21
 17526  0155BA  50E3               	movf	plusw1,w,c
 17527  0155BC  5ADE               	subwfb	postinc2,f,c
 17528  0155BE  0EEC               	movlw	-20
 17529  0155C0  50E3               	movf	plusw1,w,c
 17530  0155C2  5ADE               	subwfb	postinc2,f,c
 17531  0155C4  0EED               	movlw	-19
 17532  0155C6  50E3               	movf	plusw1,w,c
 17533  0155C8  5ADE               	subwfb	postinc2,f,c
 17534                           
 17535                           ;stkvar	_quotient @ sp[(-10)+0]
 17536  0155CA  0EF6               	movlw	-10
 17537  0155CC  80E3               	bsf	plusw1,0,c
 17538  0155CE                     l6799:
 17539                           
 17540                           ;stkvar	_divisor @ sp[(-10)+-16]
 17541  0155CE  90D8               	bcf	status,0,c
 17542  0155D0  0EED               	movlw	-19
 17543  0155D2  32E3               	rrcf	plusw1,f,c
 17544  0155D4  0EEC               	movlw	-20
 17545  0155D6  32E3               	rrcf	plusw1,f,c
 17546  0155D8  0EEB               	movlw	-21
 17547  0155DA  32E3               	rrcf	plusw1,f,c
 17548  0155DC  0EEA               	movlw	-22
 17549  0155DE  32E3               	rrcf	plusw1,f,c
 17550  0155E0  0EE9               	movlw	-23
 17551  0155E2  32E3               	rrcf	plusw1,f,c
 17552  0155E4  0EE8               	movlw	-24
 17553  0155E6  32E3               	rrcf	plusw1,f,c
 17554  0155E8  0EE7               	movlw	-25
 17555  0155EA  32E3               	rrcf	plusw1,f,c
 17556  0155EC  0EE6               	movlw	-26
 17557  0155EE  32E3               	rrcf	plusw1,f,c
 17558                           
 17559                           ;stkvar	_counter @ sp[(-10)+9]
 17560  0155F0  0EFF               	movlw	-1
 17561  0155F2  50E3               	movf	plusw1,w,c
 17562  0155F4  6E32               	movwf	btemp^0,c
 17563  0155F6  0E01               	movlw	1
 17564  0155F8  5E32               	subwf	btemp^0,f,c
 17565  0155FA  0EFF               	movlw	-1
 17566  0155FC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17567  015602  A4D8               	btfss	status,2,c
 17568  015604  D791               	goto	u5500
 17569  015606                     u5520:
 17570                           
 17571                           ;stkvar	_sign @ sp[(-10)+8]
 17572  015606  0EFE               	movlw	-2
 17573  015608  50E3               	movf	plusw1,w,c
 17574  01560A  B4D8               	btfsc	status,2,c
 17575  01560C  D025               	goto	u5540
 17576                           
 17577                           ;stkvar	_quotient @ sp[(-10)+0]
 17578                           ;stkvar	_quotient @ sp[(-10)+0]
 17579  01560E  0EF6               	movlw	-10
 17580  015610  6CE3               	negf	plusw1,c
 17581  015612  0EF7               	movlw	-9
 17582  015614  1EE3               	comf	plusw1,f,c
 17583  015616  0EF8               	movlw	-8
 17584  015618  1EE3               	comf	plusw1,f,c
 17585  01561A  0EF9               	movlw	-7
 17586  01561C  1EE3               	comf	plusw1,f,c
 17587  01561E  0EFA               	movlw	-6
 17588  015620  1EE3               	comf	plusw1,f,c
 17589  015622  0EFB               	movlw	-5
 17590  015624  1EE3               	comf	plusw1,f,c
 17591  015626  0EFC               	movlw	-4
 17592  015628  1EE3               	comf	plusw1,f,c
 17593  01562A  0EFD               	movlw	-3
 17594  01562C  1EE3               	comf	plusw1,f,c
 17595  01562E  E314               	bnc	u5540
 17596  015630  0EF7               	movlw	-9
 17597  015632  2AE3               	incf	plusw1,f,c
 17598  015634  E311               	bnc	u5540
 17599  015636  0EF8               	movlw	-8
 17600  015638  2AE3               	incf	plusw1,f,c
 17601  01563A  E30E               	bnc	u5540
 17602  01563C  0EF9               	movlw	-7
 17603  01563E  2AE3               	incf	plusw1,f,c
 17604  015640  E30B               	bnc	u5540
 17605  015642  0EFA               	movlw	-6
 17606  015644  2AE3               	incf	plusw1,f,c
 17607  015646  E308               	bnc	u5540
 17608  015648  0EFB               	movlw	-5
 17609  01564A  2AE3               	incf	plusw1,f,c
 17610  01564C  E305               	bnc	u5540
 17611  01564E  0EFC               	movlw	-4
 17612  015650  2AE3               	incf	plusw1,f,c
 17613  015652  E302               	bnc	u5540
 17614  015654  0EFD               	movlw	-3
 17615  015656  2AE3               	incf	plusw1,f,c
 17616  015658                     u5540:
 17617                           
 17618                           ;stkvar	_quotient @ sp[(-10)+0]
 17619  015658  0EF6               	movlw	246
 17620  01565A  24E1               	addwf	fsr1l,w,c
 17621  01565C  6ED9               	movwf	fsr2l,c
 17622  01565E  0EFF               	movlw	255
 17623  015660  20E2               	addwfc	fsr1h,w,c
 17624  015662  6EDA               	movwf	fsr2h,c
 17625                           
 17626                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17627  015664  0E08               	movlw	8
 17628  015666  6E32               	movwf	btemp^0,c
 17629  015668  0EEE               	movlw	-18
 17630  01566A                     us555999:
 17631  01566A  006F FF7B FFE3     	movff	postinc2,plusw1
 17632  015670  28E8               	incf	wreg,w,c
 17633  015672  2E32               	decfsz	btemp^0,f,c
 17634  015674  D7FA               	bra	us555999
 17635                           
 17636                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17637  015676  0EF6               	movlw	246
 17638  015678  26E1               	addwf	fsr1l,f,c
 17639  01567A  0EFF               	movlw	255
 17640  01567C  22E2               	addwfc	fsr1h,f,c
 17641  01567E  0012               	return		;funcret
 17642  015680                     __end_of___aodiv:
 17643                           	opt callstack 0
 17644                           
 17645 ;; *************** function _ctoa *****************
 17646 ;; Defined at:
 17647 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17648 ;; Parameters:    Size  Location     Type
 17649 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17650 ;;		 -> f(6), NULL(0), 
 17651 ;;  c               1  [STACK] unsigned char 
 17652 ;; Auto vars:     Size  Location     Type
 17653 ;;  w               2  [STACK] int 
 17654 ;;  l               2    0        int 
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  2  [STACK] int 
 17657 ;; Registers used:
 17658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/5
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17668 ;;Total ram usage:        0 bytes
 17669 ;; Hardware stack levels used:    1
 17670 ;; Hardware stack levels required when called:   11
 17671 ;; This function calls:
 17672 ;;		_pad
 17673 ;; This function is called by:
 17674 ;;		_vfpfcnvrt
 17675 ;; This function uses a reentrant model
 17676 ;;
 17677                           
 17678                           	psect	text63
 17679  017B3A                     __ptext63:
 17680                           	opt callstack 0
 17681  017B3A                     _ctoa:
 17682                           	opt callstack 0
 17683                           
 17684                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17685  017B3A  52E6               	movf	postinc1,f,c
 17686  017B3C  52E6               	movf	postinc1,f,c
 17687                           
 17688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17689                           
 17690                           ;incstack = 0
 17691  017B3E  501B               	movf	_width^0,w,c
 17692  017B40  101C               	iorwf	(_width+1)^0,w,c
 17693  017B42  A4D8               	btfss	status,2,c
 17694  017B44  D009               	goto	l9811
 17695                           
 17696                           ;stkvar	_w @ sp[(-2)+0]
 17697  017B46  0EFE               	movlw	-2
 17698  017B48  0060  F06F  FFE3   	movff	_width,plusw1
 17699  017B4E  0EFF               	movlw	-1
 17700  017B50  0060  F073  FFE3   	movff	_width+1,plusw1
 17701  017B56  D016               	goto	l9813
 17702  017B58                     l9811:
 17703  017B58  0EFF               	movlw	255
 17704  017B5A  6E3C               	movwf	(btemp+10)^0,c
 17705  017B5C  0EFF               	movlw	255
 17706  017B5E  6E3D               	movwf	(btemp+11)^0,c
 17707  017B60  0060  F06C  F03A   	movff	_width,btemp+8
 17708  017B66  0060  F070  F03B   	movff	_width+1,btemp+9
 17709  017B6C  503C               	movf	(btemp+10)^0,w,c
 17710  017B6E  263A               	addwf	(btemp+8)^0,f,c
 17711  017B70  503D               	movf	(btemp+11)^0,w,c
 17712  017B72  223B               	addwfc	(btemp+9)^0,f,c
 17713                           
 17714                           ;stkvar	_w @ sp[(-2)+0]
 17715  017B74  0EFE               	movlw	-2
 17716  017B76  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17717  017B7C  0EFF               	movlw	-1
 17718  017B7E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17719  017B84                     l9813:
 17720                           
 17721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17722                           ;stkvar	_c @ sp[(-2)+-3]
 17723  017B84  0EFB               	movlw	-5
 17724  017B86  006F FF8C  F17C    	movff	plusw1,_dbuf
 17725                           
 17726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17727  017B8C  0101               	movlb	1	; () banked
 17728  017B8E  6B7D               	clrf	(_dbuf+1)& (0+255),b
 17729                           
 17730                           ; BSR set to: 1
 17731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17732                           ;stkvar	_w @ sp[(-2)+0]
 17733  017B90  0EFE               	movlw	-2
 17734  017B92  006F FF8F FFE6     	movff	plusw1,postinc1
 17735  017B98  006F FF8F FFE6     	movff	plusw1,postinc1
 17736  017B9E  0E7C               	movlw	low _dbuf
 17737  017BA0  6EE6               	movwf	postinc1,c
 17738  017BA2  0E01               	movlw	high _dbuf
 17739  017BA4  6EE6               	movwf	postinc1,c
 17740                           
 17741                           ;stkvar	_fp @ sp[(-6)+-2]
 17742  017BA6  0EF8               	movlw	-8
 17743  017BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 17744  017BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 17745  017BB4  EC9E  F0B6         	call	_pad	;wreg free
 17746                           
 17747                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17748  017BB8  0EFB               	movlw	251
 17749  017BBA  26E1               	addwf	fsr1l,f,c
 17750  017BBC  0EFF               	movlw	255
 17751  017BBE  22E2               	addwfc	fsr1h,f,c
 17752  017BC0  0012               	return		;funcret
 17753  017BC2                     __end_of_ctoa:
 17754                           	opt callstack 0
 17755                           
 17756 ;; *************** function _pad *****************
 17757 ;; Defined at:
 17758 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17761 ;;		 -> f(6), NULL(0), 
 17762 ;;  buf             2  [STACK] PTR unsigned char 
 17763 ;;		 -> dbuf(80), 
 17764 ;;  p               2  [STACK] int 
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;  w               2  [STACK] int 
 17767 ;;  i               2  [STACK] int 
 17768 ;; Return value:  Size  Location     Type
 17769 ;;                  2  [STACK] int 
 17770 ;; Registers used:
 17771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17772 ;; Tracked objects:
 17773 ;;		On entry : 0/1
 17774 ;;		On exit  : 0/0
 17775 ;;		Unchanged: 0/0
 17776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17781 ;;Total ram usage:        0 bytes
 17782 ;; Hardware stack levels used:    1
 17783 ;; Hardware stack levels required when called:   10
 17784 ;; This function calls:
 17785 ;;		_fputc
 17786 ;;		_fputs
 17787 ;;		_strlen
 17788 ;; This function is called by:
 17789 ;;		_ctoa
 17790 ;;		_dtoa
 17791 ;;		_efgtoa
 17792 ;;		_xtoa
 17793 ;; This function uses a reentrant model
 17794 ;;
 17795                           
 17796                           	psect	text64
 17797  016D3C                     __ptext64:
 17798                           	opt callstack 0
 17799  016D3C                     _pad:
 17800                           	opt callstack 0
 17801                           
 17802                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17803  016D3C  52E6               	movf	postinc1,f,c
 17804  016D3E  52E6               	movf	postinc1,f,c
 17805  016D40  52E6               	movf	postinc1,f,c
 17806  016D42  52E6               	movf	postinc1,f,c
 17807                           
 17808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17809                           
 17810                           ;incstack = 0
 17811  016D44  A01F               	btfss	_flags^0,0,c
 17812  016D46  D010               	goto	l9785
 17813                           
 17814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17815                           ;stkvar	_fp @ sp[(-4)+-2]
 17816  016D48  0EFA               	movlw	-6
 17817  016D4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17818  016D50  006F FF8F FFE6     	movff	plusw1,postinc1
 17819                           
 17820                           ;stkvar	_buf @ sp[(-6)+-4]
 17821  016D56  0EF6               	movlw	-10
 17822  016D58  006F FF8F FFE6     	movff	plusw1,postinc1
 17823  016D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 17824  016D64  EC77  F0BC         	call	_fputs	;wreg free
 17825  016D68                     l9785:
 17826                           
 17827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17828                           ;stkvar	_p @ sp[(-4)+-6]
 17829  016D68  0EF7               	movlw	-9
 17830  016D6A  BEE3               	btfsc	plusw1,7,c
 17831  016D6C  D011               	goto	l9789
 17832                           
 17833                           ;stkvar	_p @ sp[(-4)+-6]
 17834                           ;stkvar	_w @ sp[(-4)+0]
 17835  016D6E  0EF6               	movlw	-10
 17836  016D70  006F FF8C  F032    	movff	plusw1,btemp
 17837  016D76  0EFC               	movlw	-4
 17838  016D78  0060  F0CB  FFE3   	movff	btemp,plusw1
 17839  016D7E  0EF7               	movlw	-9
 17840  016D80  006F FF8C  F032    	movff	plusw1,btemp
 17841  016D86  0EFD               	movlw	-3
 17842  016D88  0060  F0CB  FFE3   	movff	btemp,plusw1
 17843  016D8E  D004               	goto	l1872
 17844  016D90                     l9789:
 17845                           
 17846                           ;stkvar	_w @ sp[(-4)+0]
 17847  016D90  0EFC               	movlw	-4
 17848  016D92  6AE3               	clrf	plusw1,c
 17849  016D94  0EFD               	movlw	-3
 17850  016D96  6AE3               	clrf	plusw1,c
 17851  016D98                     l1872:
 17852                           
 17853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17854                           ;stkvar	_i @ sp[(-4)+2]
 17855  016D98  0EFE               	movlw	-2
 17856  016D9A  6AE3               	clrf	plusw1,c
 17857  016D9C  0EFF               	movlw	-1
 17858  016D9E  6AE3               	clrf	plusw1,c
 17859                           
 17860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17861  016DA0  D01E               	goto	l9795
 17862  016DA2                     l9791:
 17863                           
 17864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17865                           ;stkvar	_fp @ sp[(-4)+-2]
 17866  016DA2  0EFA               	movlw	-6
 17867  016DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17868  016DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17869  016DB0  0E20               	movlw	32
 17870  016DB2  6EE6               	movwf	postinc1,c
 17871  016DB4  0E00               	movlw	0
 17872  016DB6  6EE6               	movwf	postinc1,c
 17873  016DB8  EC80  F0B5         	call	_fputc	;wreg free
 17874                           
 17875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17876                           ;stkvar	_i @ sp[(-4)+2]
 17877  016DBC  0EFE               	movlw	-2
 17878  016DBE  50E3               	movf	plusw1,w,c
 17879  016DC0  0F01               	addlw	1
 17880  016DC2  6E32               	movwf	btemp^0,c
 17881  016DC4  0EFE               	movlw	-2
 17882  016DC6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17883  016DCC  6A32               	clrf	btemp^0,c
 17884  016DCE  0EFF               	movlw	-1
 17885  016DD0  50E3               	movf	plusw1,w,c
 17886  016DD2  2032               	addwfc	btemp^0,w,c
 17887  016DD4  6E32               	movwf	btemp^0,c
 17888  016DD6  0EFF               	movlw	-1
 17889  016DD8  0060  F0CB  FFE3   	movff	btemp,plusw1
 17890  016DDE                     l9795:
 17891                           
 17892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17893                           ;stkvar	_w @ sp[(-4)+0]
 17894                           ;stkvar	_i @ sp[(-4)+2]
 17895  016DDE  50E1               	movf	fsr1l,w,c
 17896  016DE0  0FFE               	addlw	-2
 17897  016DE2  6ED9               	movwf	fsr2l,c
 17898  016DE4  50E2               	movf	fsr1h,w,c
 17899  016DE6  6EDA               	movwf	fsr2h,c
 17900  016DE8  0EFF               	movlw	255
 17901  016DEA  22DA               	addwfc	fsr2h,f,c
 17902  016DEC  0EFC               	movlw	-4
 17903  016DEE  50E3               	movf	plusw1,w,c
 17904  016DF0  5CDE               	subwf	postinc2,w,c
 17905  016DF2  50DE               	movf	postinc2,w,c
 17906  016DF4  0A80               	xorlw	128
 17907  016DF6  6E32               	movwf	btemp^0,c
 17908  016DF8  0EFD               	movlw	-3
 17909  016DFA  50E3               	movf	plusw1,w,c
 17910  016DFC  0A80               	xorlw	128
 17911  016DFE  5832               	subwfb	btemp^0,w,c
 17912  016E00  A0D8               	btfss	status,0,c
 17913  016E02  D7CF               	goto	l9791
 17914                           
 17915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17916  016E04  B01F               	btfsc	_flags^0,0,c
 17917  016E06  D010               	goto	l9799
 17918                           
 17919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17920                           ;stkvar	_fp @ sp[(-4)+-2]
 17921  016E08  0EFA               	movlw	-6
 17922  016E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  016E10  006F FF8F FFE6     	movff	plusw1,postinc1
 17924                           
 17925                           ;stkvar	_buf @ sp[(-6)+-4]
 17926  016E16  0EF6               	movlw	-10
 17927  016E18  006F FF8F FFE6     	movff	plusw1,postinc1
 17928  016E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 17929  016E24  EC77  F0BC         	call	_fputs	;wreg free
 17930  016E28                     l9799:
 17931                           
 17932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17933                           ;stkvar	_w @ sp[(-4)+0]
 17934                           ;stkvar	_buf @ sp[(-4)+-4]
 17935  016E28  0EF8               	movlw	-8
 17936  016E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 17937  016E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17938  016E36  EC26  F0BC         	call	_strlen	;wreg free
 17939  016E3A  0EFC               	movlw	-4
 17940  016E3C  50E3               	movf	plusw1,w,c
 17941  016E3E  2632               	addwf	btemp^0,f,c
 17942  016E40  0EFD               	movlw	-3
 17943  016E42  50E3               	movf	plusw1,w,c
 17944  016E44  2233               	addwfc	(btemp+1)^0,f,c
 17945                           
 17946                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17947  016E46  0EF6               	movlw	246
 17948  016E48  26E1               	addwf	fsr1l,f,c
 17949  016E4A  0EFF               	movlw	255
 17950  016E4C  22E2               	addwfc	fsr1h,f,c
 17951  016E4E  0012               	return		;funcret
 17952  016E50                     __end_of_pad:
 17953                           	opt callstack 0
 17954                           
 17955 ;; *************** function _strlen *****************
 17956 ;; Defined at:
 17957 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17958 ;; Parameters:    Size  Location     Type
 17959 ;;  s               2  [STACK] PTR const unsigned char 
 17960 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17961 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 17962 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  a               2  [STACK] PTR const unsigned char 
 17965 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17966 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 17967 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  2  [STACK] unsigned int 
 17970 ;; Registers used:
 17971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/0
 17974 ;;		On exit  : 0/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17981 ;;Total ram usage:        0 bytes
 17982 ;; Hardware stack levels used:    1
 17983 ;; Hardware stack levels required when called:    6
 17984 ;; This function calls:
 17985 ;;		Nothing
 17986 ;; This function is called by:
 17987 ;;		_eaDogM_WriteString
 17988 ;;		_pad
 17989 ;;		_stoa
 17990 ;; This function uses a reentrant model
 17991 ;;
 17992                           
 17993                           	psect	text65
 17994  01784C                     __ptext65:
 17995                           	opt callstack 0
 17996  01784C                     _strlen:
 17997                           	opt callstack 0
 17998                           
 17999                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18000  01784C  52E6               	movf	postinc1,f,c
 18001  01784E  52E6               	movf	postinc1,f,c
 18002                           
 18003                           ;stkvar	_s @ sp[(-2)+-2]
 18004                           
 18005                           ;incstack = 0
 18006  017850  0EFC               	movlw	-4
 18007  017852  006F FF8C  F03C    	movff	plusw1,btemp+10
 18008  017858  0EFD               	movlw	-3
 18009  01785A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18010                           
 18011                           ;stkvar	_a @ sp[(-2)+0]
 18012  017860  0EFF               	movlw	-1
 18013  017862  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18014  017868  0EFE               	movlw	-2
 18015  01786A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18016  017870  D011               	goto	l9767
 18017  017872                     l9765:
 18018                           
 18019                           ;stkvar	_s @ sp[(-2)+-2]
 18020  017872  0EFC               	movlw	-4
 18021  017874  50E3               	movf	plusw1,w,c
 18022  017876  0F01               	addlw	1
 18023  017878  6E32               	movwf	btemp^0,c
 18024  01787A  0EFC               	movlw	-4
 18025  01787C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18026  017882  6A32               	clrf	btemp^0,c
 18027  017884  0EFD               	movlw	-3
 18028  017886  50E3               	movf	plusw1,w,c
 18029  017888  2032               	addwfc	btemp^0,w,c
 18030  01788A  6E32               	movwf	btemp^0,c
 18031  01788C  0EFD               	movlw	-3
 18032  01788E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18033  017894                     l9767:
 18034                           
 18035                           ;stkvar	_s @ sp[(-2)+-2]
 18036  017894  0EFC               	movlw	-4
 18037  017896  006F FF8F FFF6     	movff	plusw1,tblptrl
 18038  01789C  0EFD               	movlw	-3
 18039  01789E  006F FF8F FFF7     	movff	plusw1,tblptrh
 18040  0178A4  0E00               	movlw	low (__mediumconst shr (0+16))
 18041  0178A6  6EF8               	movwf	tblptru,c
 18042  0178A8  0E1F               	movlw	(high __ramtop+-1)
 18043  0178AA  64F7               	cpfsgt	tblptrh,c
 18044  0178AC  D003               	bra	u9127
 18045  0178AE  0008               	tblrd		*
 18046  0178B0  50F5               	movf	tablat,w,c
 18047  0178B2  D007               	bra	u9120
 18048  0178B4                     u9127:
 18049  0178B4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18050  0178BA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18051  0178C0  50EF               	movf	indf0,w,c
 18052  0178C2                     u9120:
 18053  0178C2  0900               	iorlw	0
 18054  0178C4  A4D8               	btfss	status,2,c
 18055  0178C6  D7D5               	goto	l9765
 18056                           
 18057                           ;stkvar	_a @ sp[(-2)+0]
 18058                           ;stkvar	_s @ sp[(-2)+-2]
 18059  0178C8  0EFC               	movlw	-4
 18060  0178CA  006F FF8C  F032    	movff	plusw1,btemp
 18061  0178D0  0EFD               	movlw	-3
 18062  0178D2  006F FF8C  F033    	movff	plusw1,btemp+1
 18063  0178D8  0EFE               	movlw	-2
 18064  0178DA  50E3               	movf	plusw1,w,c
 18065  0178DC  5E32               	subwf	btemp^0,f,c
 18066  0178DE  0EFF               	movlw	-1
 18067  0178E0  50E3               	movf	plusw1,w,c
 18068  0178E2  5A33               	subwfb	(btemp+1)^0,f,c
 18069                           
 18070                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18071  0178E4  52E5               	movf	postdec1,f,c
 18072  0178E6  52E5               	movf	postdec1,f,c
 18073  0178E8  52E5               	movf	postdec1,f,c
 18074  0178EA  52E5               	movf	postdec1,f,c
 18075  0178EC  0012               	return		;funcret
 18076  0178EE                     __end_of_strlen:
 18077                           	opt callstack 0
 18078                           
 18079 ;; *************** function _fputs *****************
 18080 ;; Defined at:
 18081 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18082 ;; Parameters:    Size  Location     Type
 18083 ;;  s               2  [STACK] PTR const unsigned char 
 18084 ;;		 -> dbuf(80), 
 18085 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18086 ;;		 -> f(6), NULL(0), 
 18087 ;; Auto vars:     Size  Location     Type
 18088 ;;  i               2  [STACK] int 
 18089 ;;  c               1  [STACK] unsigned char 
 18090 ;; Return value:  Size  Location     Type
 18091 ;;                  2  [STACK] int 
 18092 ;; Registers used:
 18093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18094 ;; Tracked objects:
 18095 ;;		On entry : 0/1
 18096 ;;		On exit  : 0/0
 18097 ;;		Unchanged: 0/0
 18098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18103 ;;Total ram usage:        0 bytes
 18104 ;; Hardware stack levels used:    1
 18105 ;; Hardware stack levels required when called:    9
 18106 ;; This function calls:
 18107 ;;		_fputc
 18108 ;; This function is called by:
 18109 ;;		_pad
 18110 ;; This function uses a reentrant model
 18111 ;;
 18112                           
 18113                           	psect	text66
 18114  0178EE                     __ptext66:
 18115                           	opt callstack 0
 18116  0178EE                     _fputs:
 18117                           	opt callstack 0
 18118                           
 18119                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18120  0178EE  52E6               	movf	postinc1,f,c
 18121  0178F0  52E6               	movf	postinc1,f,c
 18122  0178F2  52E6               	movf	postinc1,f,c
 18123                           
 18124                           ;stkvar	_i @ sp[(-3)+0]
 18125                           
 18126                           ;incstack = 0
 18127  0178F4  0EFD               	movlw	-3
 18128  0178F6  6AE3               	clrf	plusw1,c
 18129  0178F8  0EFE               	movlw	-2
 18130  0178FA  6AE3               	clrf	plusw1,c
 18131  0178FC  D01F               	goto	l9779
 18132  0178FE                     l9775:
 18133                           
 18134                           ;stkvar	_fp @ sp[(-3)+-4]
 18135  0178FE  0EF9               	movlw	-7
 18136  017900  006F FF8F FFE6     	movff	plusw1,postinc1
 18137  017906  006F FF8F FFE6     	movff	plusw1,postinc1
 18138                           
 18139                           ;stkvar	_c @ sp[(-5)+2]
 18140  01790C  0EFD               	movlw	-3
 18141  01790E  50E3               	movf	plusw1,w,c
 18142  017910  6EE6               	movwf	postinc1,c
 18143  017912  0E00               	movlw	0
 18144  017914  6EE6               	movwf	postinc1,c
 18145  017916  EC80  F0B5         	call	_fputc	;wreg free
 18146                           
 18147                           ;stkvar	_i @ sp[(-3)+0]
 18148  01791A  0EFD               	movlw	-3
 18149  01791C  50E3               	movf	plusw1,w,c
 18150  01791E  0F01               	addlw	1
 18151  017920  6E32               	movwf	btemp^0,c
 18152  017922  0EFD               	movlw	-3
 18153  017924  0060  F0CB  FFE3   	movff	btemp,plusw1
 18154  01792A  6A32               	clrf	btemp^0,c
 18155  01792C  0EFE               	movlw	-2
 18156  01792E  50E3               	movf	plusw1,w,c
 18157  017930  2032               	addwfc	btemp^0,w,c
 18158  017932  6E32               	movwf	btemp^0,c
 18159  017934  0EFE               	movlw	-2
 18160  017936  0060  F0CB  FFE3   	movff	btemp,plusw1
 18161  01793C                     l9779:
 18162                           
 18163                           ;stkvar	_i @ sp[(-3)+0]
 18164  01793C  0EFD               	movlw	-3
 18165  01793E  006F FF8C  F03C    	movff	plusw1,btemp+10
 18166  017944  0EFE               	movlw	-2
 18167  017946  006F FF8C  F03D    	movff	plusw1,btemp+11
 18168                           
 18169                           ;stkvar	_s @ sp[(-3)+-2]
 18170  01794C  0EFB               	movlw	-5
 18171  01794E  006F FF8C  F03A    	movff	plusw1,btemp+8
 18172  017954  0EFC               	movlw	-4
 18173  017956  006F FF8C  F03B    	movff	plusw1,btemp+9
 18174  01795C  503C               	movf	(btemp+10)^0,w,c
 18175  01795E  243A               	addwf	(btemp+8)^0,w,c
 18176  017960  6ED9               	movwf	fsr2l,c
 18177  017962  503D               	movf	(btemp+11)^0,w,c
 18178  017964  203B               	addwfc	(btemp+9)^0,w,c
 18179  017966  6EDA               	movwf	fsr2h,c
 18180  017968  50DF               	movf	indf2,w,c
 18181  01796A  6E3D               	movwf	(btemp+11)^0,c
 18182                           
 18183                           ;stkvar	_c @ sp[(-3)+2]
 18184  01796C  0EFF               	movlw	-1
 18185  01796E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18186  017974  0EFF               	movlw	-1
 18187  017976  50E3               	movf	plusw1,w,c
 18188  017978  A4D8               	btfss	status,2,c
 18189  01797A  D7C1               	goto	l9775
 18190                           
 18191                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18192  01797C  0EF9               	movlw	249
 18193  01797E  26E1               	addwf	fsr1l,f,c
 18194  017980  0EFF               	movlw	255
 18195  017982  22E2               	addwfc	fsr1h,f,c
 18196  017984  0012               	return		;funcret
 18197  017986                     __end_of_fputs:
 18198                           	opt callstack 0
 18199                           
 18200 ;; *************** function _fputc *****************
 18201 ;; Defined at:
 18202 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18203 ;; Parameters:    Size  Location     Type
 18204 ;;  c               2  [STACK] int 
 18205 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18206 ;;		 -> f(6), NULL(0), 
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;		None
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  2  [STACK] int 
 18211 ;; Registers used:
 18212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/5
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18222 ;;Total ram usage:        0 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:    8
 18225 ;; This function calls:
 18226 ;;		_putch
 18227 ;; This function is called by:
 18228 ;;		_pad
 18229 ;;		_stoa
 18230 ;;		_vfpfcnvrt
 18231 ;;		_fputs
 18232 ;; This function uses a reentrant model
 18233 ;;
 18234                           
 18235                           	psect	text67
 18236  016B00                     __ptext67:
 18237                           	opt callstack 0
 18238  016B00                     _fputc:
 18239                           	opt callstack 13
 18240                           
 18241                           ;stkvar	_fp @ sp[(0)+-4]
 18242                           
 18243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18244                           ;incstack = 0
 18245  016B00  0EFC               	movlw	-4
 18246  016B02  006F FF8C  F032    	movff	plusw1,btemp
 18247  016B08  0EFD               	movlw	-3
 18248  016B0A  50E3               	movf	plusw1,w,c
 18249  016B0C  1032               	iorwf	btemp^0,w,c
 18250  016B0E  B4D8               	btfsc	status,2,c
 18251  016B10  D009               	goto	u9090
 18252                           
 18253                           ;stkvar	_fp @ sp[(0)+-4]
 18254  016B12  0EFC               	movlw	-4
 18255  016B14  006F FF8C  F032    	movff	plusw1,btemp
 18256  016B1A  0EFD               	movlw	-3
 18257  016B1C  50E3               	movf	plusw1,w,c
 18258  016B1E  1032               	iorwf	btemp^0,w,c
 18259  016B20  A4D8               	btfss	status,2,c
 18260  016B22  D006               	goto	l9753
 18261  016B24                     u9090:
 18262                           
 18263                           ;stkvar	_c @ sp[(0)+-2]
 18264  016B24  0EFE               	movlw	-2
 18265  016B26  50E3               	movf	plusw1,w,c
 18266  016B28  6EE6               	movwf	postinc1,c
 18267  016B2A  EC88  F0C6         	call	_putch	;wreg free
 18268  016B2E  D075               	goto	l2890
 18269  016B30                     l9753:
 18270                           
 18271                           ;stkvar	_fp @ sp[(0)+-4]
 18272  016B30  0EFC               	movlw	-4
 18273  016B32  006F FF8C  F03C    	movff	plusw1,btemp+10
 18274  016B38  0EFD               	movlw	-3
 18275  016B3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18276  016B40  0E04               	movlw	4
 18277  016B42  243C               	addwf	(btemp+10)^0,w,c
 18278  016B44  6ED9               	movwf	fsr2l,c
 18279  016B46  0E00               	movlw	0
 18280  016B48  203D               	addwfc	(btemp+11)^0,w,c
 18281  016B4A  6EDA               	movwf	fsr2h,c
 18282  016B4C  50DE               	movf	postinc2,w,c
 18283  016B4E  10DE               	iorwf	postinc2,w,c
 18284  016B50  B4D8               	btfsc	status,2,c
 18285  016B52  D026               	goto	u9110
 18286                           
 18287                           ;stkvar	_fp @ sp[(0)+-4]
 18288  016B54  0EFC               	movlw	-4
 18289  016B56  006F FF8C  F03C    	movff	plusw1,btemp+10
 18290  016B5C  0EFD               	movlw	-3
 18291  016B5E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18292  016B64  0E04               	movlw	4
 18293  016B66  243C               	addwf	(btemp+10)^0,w,c
 18294  016B68  6ED9               	movwf	fsr2l,c
 18295  016B6A  0E00               	movlw	0
 18296  016B6C  203D               	addwfc	(btemp+11)^0,w,c
 18297  016B6E  6EDA               	movwf	fsr2h,c
 18298                           
 18299                           ;stkvar	_fp @ sp[(0)+-4]
 18300  016B70  0EFC               	movlw	-4
 18301  016B72  006F FF8C  F03C    	movff	plusw1,btemp+10
 18302  016B78  0EFD               	movlw	-3
 18303  016B7A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18304  016B80  0E02               	movlw	2
 18305  016B82  243C               	addwf	(btemp+10)^0,w,c
 18306  016B84  6EE9               	movwf	fsr0l,c
 18307  016B86  0E00               	movlw	0
 18308  016B88  203D               	addwfc	(btemp+11)^0,w,c
 18309  016B8A  6EEA               	movwf	fsr0h,c
 18310  016B8C  50DE               	movf	postinc2,w,c
 18311  016B8E  5CEE               	subwf	postinc0,w,c
 18312  016B90  50EE               	movf	postinc0,w,c
 18313  016B92  0A80               	xorlw	128
 18314  016B94  6E32               	movwf	btemp^0,c
 18315  016B96  50DE               	movf	postinc2,w,c
 18316  016B98  0A80               	xorlw	128
 18317  016B9A  5832               	subwfb	btemp^0,w,c
 18318  016B9C  B0D8               	btfsc	status,0,c
 18319  016B9E  D03D               	goto	l2890
 18320  016BA0                     u9110:
 18321                           
 18322                           ;stkvar	_c @ sp[(0)+-2]
 18323                           ;stkvar	_fp @ sp[(0)+-4]
 18324  016BA0  0EFC               	movlw	-4
 18325  016BA2  006F FF8C  F03C    	movff	plusw1,btemp+10
 18326  016BA8  0EFD               	movlw	-3
 18327  016BAA  006F FF8C  F03D    	movff	plusw1,btemp+11
 18328  016BB0  0E02               	movlw	2
 18329  016BB2  243C               	addwf	(btemp+10)^0,w,c
 18330  016BB4  6ED9               	movwf	fsr2l,c
 18331  016BB6  0E00               	movlw	0
 18332  016BB8  203D               	addwfc	(btemp+11)^0,w,c
 18333  016BBA  6EDA               	movwf	fsr2h,c
 18334  016BBC  006F FF78  F03C    	movff	postinc2,btemp+10
 18335  016BC2  006F FF74  F03D    	movff	postdec2,btemp+11
 18336                           
 18337                           ;stkvar	_fp @ sp[(0)+-4]
 18338  016BC8  0EFC               	movlw	-4
 18339  016BCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 18340  016BD0  0EFD               	movlw	-3
 18341  016BD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 18342  016BD8  006F FF78  F03A    	movff	postinc2,btemp+8
 18343  016BDE  006F FF74  F03B    	movff	postdec2,btemp+9
 18344  016BE4  503C               	movf	(btemp+10)^0,w,c
 18345  016BE6  243A               	addwf	(btemp+8)^0,w,c
 18346  016BE8  6ED9               	movwf	fsr2l,c
 18347  016BEA  503D               	movf	(btemp+11)^0,w,c
 18348  016BEC  203B               	addwfc	(btemp+9)^0,w,c
 18349  016BEE  6EDA               	movwf	fsr2h,c
 18350  016BF0  0EFE               	movlw	-2
 18351  016BF2  006F FF8F FFDF     	movff	plusw1,indf2
 18352                           
 18353                           ;stkvar	_fp @ sp[(0)+-4]
 18354  016BF8  0EFC               	movlw	-4
 18355  016BFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 18356  016C00  0EFD               	movlw	-3
 18357  016C02  006F FF8C  F03D    	movff	plusw1,btemp+11
 18358  016C08  0E02               	movlw	2
 18359  016C0A  243C               	addwf	(btemp+10)^0,w,c
 18360  016C0C  6ED9               	movwf	fsr2l,c
 18361  016C0E  0E00               	movlw	0
 18362  016C10  203D               	addwfc	(btemp+11)^0,w,c
 18363  016C12  6EDA               	movwf	fsr2h,c
 18364  016C14  2ADE               	incf	postinc2,f,c
 18365  016C16  0E00               	movlw	0
 18366  016C18  22DD               	addwfc	postdec2,f,c
 18367  016C1A                     l2890:
 18368                           
 18369                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18370  016C1A  52E5               	movf	postdec1,f,c
 18371  016C1C  52E5               	movf	postdec1,f,c
 18372  016C1E  52E5               	movf	postdec1,f,c
 18373  016C20  52E5               	movf	postdec1,f,c
 18374  016C22  0012               	return		;funcret
 18375  016C24                     __end_of_fputc:
 18376                           	opt callstack 0
 18377                           
 18378 ;; *************** function _putch *****************
 18379 ;; Defined at:
 18380 ;;		line 155 in file "eadog.c"
 18381 ;; Parameters:    Size  Location     Type
 18382 ;;  c               1  [STACK] unsigned char 
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;		None
 18385 ;; Return value:  Size  Location     Type
 18386 ;;                  1  [STACK] void 
 18387 ;; Registers used:
 18388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18389 ;; Tracked objects:
 18390 ;;		On entry : 0/5
 18391 ;;		On exit  : 0/0
 18392 ;;		Unchanged: 0/0
 18393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18398 ;;Total ram usage:        0 bytes
 18399 ;; Hardware stack levels used:    1
 18400 ;; Hardware stack levels required when called:    7
 18401 ;; This function calls:
 18402 ;;		_ringBufS_put_dma
 18403 ;; This function is called by:
 18404 ;;		_fputc
 18405 ;; This function uses a reentrant model
 18406 ;;
 18407                           
 18408                           	psect	text68
 18409  018D10                     __ptext68:
 18410                           	opt callstack 0
 18411  018D10                     _putch:
 18412                           	opt callstack 13
 18413                           
 18414                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18415                           ;stkvar	_c @ sp[(0)+-1]
 18416                           
 18417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18418                           ;incstack = 0
 18419  018D10  0EFF               	movlw	-1
 18420  018D12  50E3               	movf	plusw1,w,c
 18421  018D14  6EE6               	movwf	postinc1,c
 18422  018D16  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 18423  018D1C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 18424  018D22  EC2A  F0BB         	call	_ringBufS_put_dma	;wreg free
 18425                           
 18426                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18427  018D26  52E5               	movf	postdec1,f,c
 18428  018D28  0012               	return		;funcret
 18429  018D2A                     __end_of_putch:
 18430                           	opt callstack 0
 18431                           
 18432 ;; *************** function _ringBufS_put_dma *****************
 18433 ;; Defined at:
 18434 ;;		line 67 in file "ringbufs.c"
 18435 ;; Parameters:    Size  Location     Type
 18436 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18437 ;;		 -> ring_buf1(67), 
 18438 ;;  c               1  [STACK] const unsigned char 
 18439 ;; Auto vars:     Size  Location     Type
 18440 ;;		None
 18441 ;; Return value:  Size  Location     Type
 18442 ;;                  1  [STACK] void 
 18443 ;; Registers used:
 18444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18445 ;; Tracked objects:
 18446 ;;		On entry : 0/5
 18447 ;;		On exit  : 0/0
 18448 ;;		Unchanged: 0/0
 18449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18454 ;;Total ram usage:        0 bytes
 18455 ;; Hardware stack levels used:    1
 18456 ;; Hardware stack levels required when called:    6
 18457 ;; This function calls:
 18458 ;;		Nothing
 18459 ;; This function is called by:
 18460 ;;		_putch
 18461 ;; This function uses a reentrant model
 18462 ;;
 18463                           
 18464                           	psect	text69
 18465  017654                     __ptext69:
 18466                           	opt callstack 0
 18467  017654                     _ringBufS_put_dma:
 18468                           	opt callstack 13
 18469                           
 18470                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18471                           ;stkvar	__this @ sp[(0)+-2]
 18472                           
 18473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18474                           ;incstack = 0
 18475  017654  0EFE               	movlw	-2
 18476  017656  006F FF8C  F03C    	movff	plusw1,btemp+10
 18477  01765C  0EFF               	movlw	-1
 18478  01765E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18479  017664  0E42               	movlw	66
 18480  017666  243C               	addwf	(btemp+10)^0,w,c
 18481  017668  6ED9               	movwf	fsr2l,c
 18482  01766A  0E00               	movlw	0
 18483  01766C  203D               	addwfc	(btemp+11)^0,w,c
 18484  01766E  6EDA               	movwf	fsr2h,c
 18485  017670  0E40               	movlw	64
 18486  017672  60DF               	cpfslt	indf2,c
 18487  017674  D040               	goto	l1500
 18488                           
 18489                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18490                           ;stkvar	_c @ sp[(0)+-3]
 18491                           ;stkvar	__this @ sp[(0)+-2]
 18492  017676  0EFE               	movlw	-2
 18493  017678  006F FF8C  F03C    	movff	plusw1,btemp+10
 18494  01767E  0EFF               	movlw	-1
 18495  017680  006F FF8C  F03D    	movff	plusw1,btemp+11
 18496  017686  0E40               	movlw	64
 18497  017688  243C               	addwf	(btemp+10)^0,w,c
 18498  01768A  6ED9               	movwf	fsr2l,c
 18499  01768C  0E00               	movlw	0
 18500  01768E  203D               	addwfc	(btemp+11)^0,w,c
 18501  017690  6EDA               	movwf	fsr2h,c
 18502  017692  50DF               	movf	indf2,w,c
 18503  017694  6E3D               	movwf	(btemp+11)^0,c
 18504                           
 18505                           ;stkvar	__this @ sp[(0)+-2]
 18506  017696  0EFE               	movlw	-2
 18507  017698  006F FF8C  F03A    	movff	plusw1,btemp+8
 18508  01769E  0EFF               	movlw	-1
 18509  0176A0  006F FF8C  F03B    	movff	plusw1,btemp+9
 18510  0176A6  503D               	movf	(btemp+11)^0,w,c
 18511  0176A8  243A               	addwf	(btemp+8)^0,w,c
 18512  0176AA  6ED9               	movwf	fsr2l,c
 18513  0176AC  0E00               	movlw	0
 18514  0176AE  203B               	addwfc	(btemp+9)^0,w,c
 18515  0176B0  6EDA               	movwf	fsr2h,c
 18516  0176B2  0EFD               	movlw	-3
 18517  0176B4  006F FF8F FFDF     	movff	plusw1,indf2
 18518                           
 18519                           ;ringbufs.c: 71:   ++_this->head;
 18520                           ;stkvar	__this @ sp[(0)+-2]
 18521  0176BA  0EFE               	movlw	-2
 18522  0176BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 18523  0176C2  0EFF               	movlw	-1
 18524  0176C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 18525  0176CA  0E40               	movlw	64
 18526  0176CC  243C               	addwf	(btemp+10)^0,w,c
 18527  0176CE  6ED9               	movwf	fsr2l,c
 18528  0176D0  0E00               	movlw	0
 18529  0176D2  203D               	addwfc	(btemp+11)^0,w,c
 18530  0176D4  6EDA               	movwf	fsr2h,c
 18531  0176D6  2ADF               	incf	indf2,f,c
 18532                           
 18533                           ;ringbufs.c: 72:   ++_this->count;
 18534                           ;stkvar	__this @ sp[(0)+-2]
 18535  0176D8  0EFE               	movlw	-2
 18536  0176DA  006F FF8C  F03C    	movff	plusw1,btemp+10
 18537  0176E0  0EFF               	movlw	-1
 18538  0176E2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18539  0176E8  0E42               	movlw	66
 18540  0176EA  243C               	addwf	(btemp+10)^0,w,c
 18541  0176EC  6ED9               	movwf	fsr2l,c
 18542  0176EE  0E00               	movlw	0
 18543  0176F0  203D               	addwfc	(btemp+11)^0,w,c
 18544  0176F2  6EDA               	movwf	fsr2h,c
 18545  0176F4  2ADF               	incf	indf2,f,c
 18546  0176F6                     l1500:
 18547                           
 18548                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18549  0176F6  52E5               	movf	postdec1,f,c
 18550  0176F8  52E5               	movf	postdec1,f,c
 18551  0176FA  52E5               	movf	postdec1,f,c
 18552  0176FC  0012               	return		;funcret
 18553  0176FE                     __end_of_ringBufS_put_dma:
 18554                           	opt callstack 0
 18555                           
 18556 ;; *************** function _atoi *****************
 18557 ;; Defined at:
 18558 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  s               2  [STACK] PTR const unsigned char 
 18561 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18562 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18563 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18564 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18565 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18566 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18567 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18568 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18569 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18570 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18571 ;; Auto vars:     Size  Location     Type
 18572 ;;  n               2  [STACK] int 
 18573 ;;  neg             2  [STACK] int 
 18574 ;; Return value:  Size  Location     Type
 18575 ;;                  2  [STACK] int 
 18576 ;; Registers used:
 18577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18578 ;; Tracked objects:
 18579 ;;		On entry : 0/5
 18580 ;;		On exit  : 0/0
 18581 ;;		Unchanged: 0/0
 18582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18587 ;;Total ram usage:        0 bytes
 18588 ;; Hardware stack levels used:    1
 18589 ;; Hardware stack levels required when called:    7
 18590 ;; This function calls:
 18591 ;;		_isdigit
 18592 ;;		_isspace
 18593 ;; This function is called by:
 18594 ;;		_vfpfcnvrt
 18595 ;; This function uses a reentrant model
 18596 ;;
 18597                           
 18598                           	psect	text70
 18599  015680                     __ptext70:
 18600                           	opt callstack 0
 18601  015680                     _atoi:
 18602                           	opt callstack 0
 18603                           
 18604                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18605  015680  0E09               	movlw	9
 18606  015682  26E1               	addwf	fsr1l,f,c
 18607  015684  0E00               	movlw	0
 18608  015686  22E2               	addwfc	fsr1h,f,c
 18609                           
 18610                           ;stkvar	_n @ sp[(-9)+5]
 18611                           
 18612                           ;incstack = 0
 18613  015688  0EFC               	movlw	-4
 18614  01568A  6AE3               	clrf	plusw1,c
 18615  01568C  0EFD               	movlw	-3
 18616  01568E  6AE3               	clrf	plusw1,c
 18617                           
 18618                           ;stkvar	_neg @ sp[(-9)+7]
 18619  015690  0EFE               	movlw	-2
 18620  015692  6AE3               	clrf	plusw1,c
 18621  015694  0EFF               	movlw	-1
 18622  015696  6AE3               	clrf	plusw1,c
 18623  015698  D011               	goto	l7865
 18624  01569A                     l7863:
 18625                           
 18626                           ;stkvar	_s @ sp[(-9)+-2]
 18627  01569A  0EF5               	movlw	-11
 18628  01569C  50E3               	movf	plusw1,w,c
 18629  01569E  0F01               	addlw	1
 18630  0156A0  6E32               	movwf	btemp^0,c
 18631  0156A2  0EF5               	movlw	-11
 18632  0156A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 18633  0156AA  6A32               	clrf	btemp^0,c
 18634  0156AC  0EF6               	movlw	-10
 18635  0156AE  50E3               	movf	plusw1,w,c
 18636  0156B0  2032               	addwfc	btemp^0,w,c
 18637  0156B2  6E32               	movwf	btemp^0,c
 18638  0156B4  0EF6               	movlw	-10
 18639  0156B6  0060  F0CB  FFE3   	movff	btemp,plusw1
 18640  0156BC                     l7865:
 18641                           
 18642                           ;stkvar	_atoi$5145 @ sp[(-9)+4]
 18643  0156BC  0EFB               	movlw	-5
 18644  0156BE  6AE3               	clrf	plusw1,c
 18645  0156C0  2AE3               	incf	plusw1,f,c
 18646                           
 18647                           ;stkvar	_s @ sp[(-9)+-2]
 18648  0156C2  50E1               	movf	fsr1l,w,c
 18649  0156C4  0FF5               	addlw	-11
 18650  0156C6  6ED9               	movwf	fsr2l,c
 18651  0156C8  50E2               	movf	fsr1h,w,c
 18652  0156CA  6EDA               	movwf	fsr2h,c
 18653  0156CC  0EFF               	movlw	255
 18654  0156CE  22DA               	addwfc	fsr2h,f,c
 18655  0156D0  006F FF7B FFF6     	movff	postinc2,tblptrl
 18656  0156D6  006F FF77 FFF7     	movff	postdec2,tblptrh
 18657  0156DC                     	if	0	;tblptru may be non-zero
 18658  0156DC                     	endif
 18659  0156DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18660  0156DC  0E00               	movlw	low (__mediumconst shr (0+16))
 18661  0156DE  6EF8               	movwf	tblptru,c
 18662  0156E0                     	endif
 18663  0156E0  0008               	tblrd		*
 18664  0156E2  50F5               	movf	tablat,w,c
 18665  0156E4  0A20               	xorlw	32
 18666  0156E6  B4D8               	btfsc	status,2,c
 18667  0156E8  D023               	goto	l7873
 18668  0156EA  0EF7               	movlw	247
 18669  0156EC  6E3C               	movwf	(btemp+10)^0,c
 18670  0156EE  0EFF               	movlw	255
 18671  0156F0  6E3D               	movwf	(btemp+11)^0,c
 18672                           
 18673                           ;stkvar	_s @ sp[(-9)+-2]
 18674  0156F2  50E1               	movf	fsr1l,w,c
 18675  0156F4  0FF5               	addlw	-11
 18676  0156F6  6ED9               	movwf	fsr2l,c
 18677  0156F8  50E2               	movf	fsr1h,w,c
 18678  0156FA  6EDA               	movwf	fsr2h,c
 18679  0156FC  0EFF               	movlw	255
 18680  0156FE  22DA               	addwfc	fsr2h,f,c
 18681  015700  006F FF7B FFF6     	movff	postinc2,tblptrl
 18682  015706  006F FF77 FFF7     	movff	postdec2,tblptrh
 18683  01570C                     	if	0	;tblptru may be non-zero
 18684  01570C                     	endif
 18685  01570C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18686  01570C  0E00               	movlw	low (__mediumconst shr (0+16))
 18687  01570E  6EF8               	movwf	tblptru,c
 18688  015710                     	endif
 18689  015710  0008               	tblrd		*
 18690  015712  50F5               	movf	tablat,w,c
 18691  015714  6E3A               	movwf	(btemp+8)^0,c
 18692  015716  6A3B               	clrf	(btemp+9)^0,c
 18693  015718  503C               	movf	(btemp+10)^0,w,c
 18694  01571A  263A               	addwf	(btemp+8)^0,f,c
 18695  01571C  503D               	movf	(btemp+11)^0,w,c
 18696  01571E  223B               	addwfc	(btemp+9)^0,f,c
 18697  015720  503B               	movf	(btemp+9)^0,w,c
 18698  015722  E104               	bnz	u7470
 18699  015724  0E05               	movlw	5
 18700  015726  5C3A               	subwf	(btemp+8)^0,w,c
 18701  015728  A0D8               	btfss	status,0,c
 18702  01572A  D002               	goto	l7873
 18703  01572C                     u7470:
 18704                           
 18705                           ;stkvar	_atoi$5145 @ sp[(-9)+4]
 18706  01572C  0EFB               	movlw	-5
 18707  01572E  6AE3               	clrf	plusw1,c
 18708  015730                     l7873:
 18709                           
 18710                           ;stkvar	_atoi$5145 @ sp[(-9)+4]
 18711  015730  0EFB               	movlw	-5
 18712  015732  50E3               	movf	plusw1,w,c
 18713  015734  6E3C               	movwf	(btemp+10)^0,c
 18714  015736  6A3D               	clrf	(btemp+11)^0,c
 18715                           
 18716                           ;stkvar	_atoi$5144 @ sp[(-9)+2]
 18717  015738  0EF9               	movlw	-7
 18718  01573A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18719  015740  0EFA               	movlw	-6
 18720  015742  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18721                           
 18722                           ;stkvar	_atoi$5144 @ sp[(-9)+2]
 18723  015748  0EF9               	movlw	-7
 18724  01574A  006F FF8C  F032    	movff	plusw1,btemp
 18725  015750  0EFA               	movlw	-6
 18726  015752  50E3               	movf	plusw1,w,c
 18727  015754  1032               	iorwf	btemp^0,w,c
 18728  015756  B4D8               	btfsc	status,2,c
 18729  015758  D01F               	goto	l7883
 18730  01575A  D79F               	goto	l7863
 18731  01575C                     l7879:
 18732  01575C  0E01               	movlw	1
 18733  01575E  6E3C               	movwf	(btemp+10)^0,c
 18734  015760  0E00               	movlw	0
 18735  015762  6E3D               	movwf	(btemp+11)^0,c
 18736                           
 18737                           ;stkvar	_neg @ sp[(-9)+7]
 18738  015764  0EFE               	movlw	-2
 18739  015766  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18740  01576C  0EFF               	movlw	-1
 18741  01576E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18742  015774                     l7881:
 18743                           
 18744                           ;stkvar	_s @ sp[(-9)+-2]
 18745  015774  0EF5               	movlw	-11
 18746  015776  50E3               	movf	plusw1,w,c
 18747  015778  0F01               	addlw	1
 18748  01577A  6E32               	movwf	btemp^0,c
 18749  01577C  0EF5               	movlw	-11
 18750  01577E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18751  015784  6A32               	clrf	btemp^0,c
 18752  015786  0EF6               	movlw	-10
 18753  015788  50E3               	movf	plusw1,w,c
 18754  01578A  2032               	addwfc	btemp^0,w,c
 18755  01578C  6E32               	movwf	btemp^0,c
 18756  01578E  0EF6               	movlw	-10
 18757  015790  0060  F0CB  FFE3   	movff	btemp,plusw1
 18758  015796  D053               	goto	l7889
 18759  015798                     l7883:
 18760                           
 18761                           ;stkvar	_s @ sp[(-9)+-2]
 18762  015798  50E1               	movf	fsr1l,w,c
 18763  01579A  0FF5               	addlw	-11
 18764  01579C  6ED9               	movwf	fsr2l,c
 18765  01579E  50E2               	movf	fsr1h,w,c
 18766  0157A0  6EDA               	movwf	fsr2h,c
 18767  0157A2  0EFF               	movlw	255
 18768  0157A4  22DA               	addwfc	fsr2h,f,c
 18769  0157A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 18770  0157AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 18771  0157B2                     	if	0	;tblptru may be non-zero
 18772  0157B2                     	endif
 18773  0157B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18774  0157B2  0E00               	movlw	low (__mediumconst shr (0+16))
 18775  0157B4  6EF8               	movwf	tblptru,c
 18776  0157B6                     	endif
 18777  0157B6  0008               	tblrd		*
 18778  0157B8  50F5               	movf	tablat,w,c
 18779  0157BA  6E3C               	movwf	(btemp+10)^0,c
 18780  0157BC  6A3D               	clrf	(btemp+11)^0,c
 18781                           
 18782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18783                           ; Switch size 1, requested type "simple"
 18784                           ; Number of cases is 1, Range of values is 0 to 0
 18785                           ; switch strategies available:
 18786                           ; Name         Instructions Cycles
 18787                           ; simple_byte            4     3 (average)
 18788                           ;	Chosen strategy is simple_byte
 18789  0157BE  503D               	movf	(btemp+11)^0,w,c
 18790  0157C0  0A00               	xorlw	0	; case 0
 18791  0157C2  A4D8               	btfss	status,2,c
 18792  0157C4  D03C               	goto	l7889
 18793                           
 18794                           ; Switch size 1, requested type "simple"
 18795                           ; Number of cases is 2, Range of values is 43 to 45
 18796                           ; switch strategies available:
 18797                           ; Name         Instructions Cycles
 18798                           ; simple_byte            7     4 (average)
 18799                           ;	Chosen strategy is simple_byte
 18800  0157C6  503C               	movf	(btemp+10)^0,w,c
 18801  0157C8  0A2B               	xorlw	43	; case 43
 18802  0157CA  B4D8               	btfsc	status,2,c
 18803  0157CC  D7D3               	goto	l7881
 18804  0157CE  0A06               	xorlw	6	; case 45
 18805  0157D0  B4D8               	btfsc	status,2,c
 18806  0157D2  D7C4               	goto	l7879
 18807  0157D4  D034               	goto	l7889
 18808  0157D6                     l7885:
 18809                           
 18810                           ;stkvar	_n @ sp[(-9)+5]
 18811  0157D6  0EFC               	movlw	-4
 18812  0157D8  006F FF8C  F03C    	movff	plusw1,btemp+10
 18813  0157DE  0EFD               	movlw	-3
 18814  0157E0  006F FF8C  F03D    	movff	plusw1,btemp+11
 18815  0157E6  0E0A               	movlw	10
 18816  0157E8  023C               	mulwf	(btemp+10)^0,c
 18817  0157EA  006F FFCC  F03A    	movff	prodl,btemp+8
 18818  0157F0  006F FFD0  F03B    	movff	prodh,btemp+9
 18819  0157F6  023D               	mulwf	(btemp+11)^0,c
 18820  0157F8  50F3               	movf	prodl,w,c
 18821  0157FA  263B               	addwf	(btemp+9)^0,f,c
 18822                           
 18823                           ;stkvar	_s @ sp[(-9)+-2]
 18824  0157FC  50E1               	movf	fsr1l,w,c
 18825  0157FE  0FF5               	addlw	-11
 18826  015800  6ED9               	movwf	fsr2l,c
 18827  015802  50E2               	movf	fsr1h,w,c
 18828  015804  6EDA               	movwf	fsr2h,c
 18829  015806  0EFF               	movlw	255
 18830  015808  22DA               	addwfc	fsr2h,f,c
 18831  01580A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18832  015810  006F FF77 FFF7     	movff	postdec2,tblptrh
 18833  015816                     	if	0	;tblptru may be non-zero
 18834  015816                     	endif
 18835  015816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18836  015816  0E00               	movlw	low (__mediumconst shr (0+16))
 18837  015818  6EF8               	movwf	tblptru,c
 18838  01581A                     	endif
 18839  01581A  0008               	tblrd		*
 18840  01581C  50F5               	movf	tablat,w,c
 18841  01581E  5E3A               	subwf	(btemp+8)^0,f,c
 18842  015820  0E00               	movlw	0
 18843  015822  5A3B               	subwfb	(btemp+9)^0,f,c
 18844  015824  0E30               	movlw	48
 18845  015826  263A               	addwf	(btemp+8)^0,f,c
 18846  015828  0E00               	movlw	0
 18847  01582A  223B               	addwfc	(btemp+9)^0,f,c
 18848                           
 18849                           ;stkvar	_n @ sp[(-9)+5]
 18850  01582C  0EFC               	movlw	-4
 18851  01582E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18852  015834  0EFD               	movlw	-3
 18853  015836  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18854  01583C  D79B               	goto	l7881
 18855  01583E                     l7889:
 18856  01583E  0ED0               	movlw	208
 18857  015840  6E3C               	movwf	(btemp+10)^0,c
 18858  015842  0EFF               	movlw	255
 18859  015844  6E3D               	movwf	(btemp+11)^0,c
 18860                           
 18861                           ;stkvar	_s @ sp[(-9)+-2]
 18862  015846  50E1               	movf	fsr1l,w,c
 18863  015848  0FF5               	addlw	-11
 18864  01584A  6ED9               	movwf	fsr2l,c
 18865  01584C  50E2               	movf	fsr1h,w,c
 18866  01584E  6EDA               	movwf	fsr2h,c
 18867  015850  0EFF               	movlw	255
 18868  015852  22DA               	addwfc	fsr2h,f,c
 18869  015854  006F FF7B FFF6     	movff	postinc2,tblptrl
 18870  01585A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18871  015860                     	if	0	;tblptru may be non-zero
 18872  015860                     	endif
 18873  015860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18874  015860  0E00               	movlw	low (__mediumconst shr (0+16))
 18875  015862  6EF8               	movwf	tblptru,c
 18876  015864                     	endif
 18877  015864  0008               	tblrd		*
 18878  015866  50F5               	movf	tablat,w,c
 18879  015868  6E3A               	movwf	(btemp+8)^0,c
 18880  01586A  6A3B               	clrf	(btemp+9)^0,c
 18881  01586C  503C               	movf	(btemp+10)^0,w,c
 18882  01586E  263A               	addwf	(btemp+8)^0,f,c
 18883  015870  503D               	movf	(btemp+11)^0,w,c
 18884  015872  223B               	addwfc	(btemp+9)^0,f,c
 18885  015874  503B               	movf	(btemp+9)^0,w,c
 18886  015876  E106               	bnz	u7490
 18887  015878  0E0A               	movlw	10
 18888  01587A  5C3A               	subwf	(btemp+8)^0,w,c
 18889  01587C  B0D8               	btfsc	status,0,c
 18890  01587E  D002               	goto	u7490
 18891  015880  0E01               	movlw	1
 18892  015882  D001               	goto	u7500
 18893  015884                     u7490:
 18894  015884  0E00               	movlw	0
 18895  015886                     u7500:
 18896  015886  6E3C               	movwf	(btemp+10)^0,c
 18897  015888  6A3D               	clrf	(btemp+11)^0,c
 18898                           
 18899                           ;stkvar	_atoi$5146 @ sp[(-9)+0]
 18900  01588A  0EF7               	movlw	-9
 18901  01588C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18902  015892  0EF8               	movlw	-8
 18903  015894  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18904                           
 18905                           ;stkvar	_atoi$5146 @ sp[(-9)+0]
 18906  01589A  0EF7               	movlw	-9
 18907  01589C  006F FF8C  F032    	movff	plusw1,btemp
 18908  0158A2  0EF8               	movlw	-8
 18909  0158A4  50E3               	movf	plusw1,w,c
 18910  0158A6  1032               	iorwf	btemp^0,w,c
 18911  0158A8  A4D8               	btfss	status,2,c
 18912  0158AA  D795               	goto	l7885
 18913                           
 18914                           ;stkvar	_neg @ sp[(-9)+7]
 18915  0158AC  0EFE               	movlw	-2
 18916  0158AE  006F FF8C  F032    	movff	plusw1,btemp
 18917  0158B4  0EFF               	movlw	-1
 18918  0158B6  50E3               	movf	plusw1,w,c
 18919  0158B8  1032               	iorwf	btemp^0,w,c
 18920  0158BA  A4D8               	btfss	status,2,c
 18921  0158BC  D00E               	goto	l7899
 18922                           
 18923                           ;stkvar	_n @ sp[(-9)+5]
 18924  0158BE  0EFC               	movlw	-4
 18925  0158C0  006F FF8C  F032    	movff	plusw1,btemp
 18926  0158C6  1E32               	comf	btemp^0,f,c
 18927  0158C8  0EFD               	movlw	-3
 18928  0158CA  006F FF8C  F033    	movff	plusw1,btemp+1
 18929  0158D0  1E33               	comf	(btemp+1)^0,f,c
 18930  0158D2  2A32               	incf	btemp^0,f,c
 18931  0158D4  B4D8               	btfsc	status,2,c
 18932  0158D6  2A33               	incf	(btemp+1)^0,f,c
 18933  0158D8  D008               	goto	l2826
 18934  0158DA                     l7899:
 18935                           
 18936                           ;stkvar	_n @ sp[(-9)+5]
 18937  0158DA  0EFC               	movlw	-4
 18938  0158DC  006F FF8C  F032    	movff	plusw1,btemp
 18939  0158E2  0EFD               	movlw	-3
 18940  0158E4  006F FF8C  F033    	movff	plusw1,btemp+1
 18941  0158EA                     l2826:
 18942                           
 18943                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18944  0158EA  0EF5               	movlw	245
 18945  0158EC  26E1               	addwf	fsr1l,f,c
 18946  0158EE  0EFF               	movlw	255
 18947  0158F0  22E2               	addwfc	fsr1h,f,c
 18948  0158F2  0012               	return		;funcret
 18949  0158F4                     __end_of_atoi:
 18950                           	opt callstack 0
 18951                           
 18952 ;; *************** function _isspace *****************
 18953 ;; Defined at:
 18954 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;  c               2  [STACK] int 
 18957 ;; Auto vars:     Size  Location     Type
 18958 ;;		None
 18959 ;; Return value:  Size  Location     Type
 18960 ;;                  2  [STACK] int 
 18961 ;; Registers used:
 18962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18963 ;; Tracked objects:
 18964 ;;		On entry : 0/0
 18965 ;;		On exit  : 0/0
 18966 ;;		Unchanged: 0/0
 18967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18972 ;;Total ram usage:        0 bytes
 18973 ;; Hardware stack levels used:    1
 18974 ;; Hardware stack levels required when called:    6
 18975 ;; This function calls:
 18976 ;;		Nothing
 18977 ;; This function is called by:
 18978 ;;		_atoi
 18979 ;; This function uses a reentrant model
 18980 ;;
 18981                           
 18982                           	psect	text71
 18983  018236                     __ptext71:
 18984                           	opt callstack 0
 18985  018236                     _isspace:
 18986                           	opt callstack 0
 18987                           
 18988                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18989  018236  52E6               	movf	postinc1,f,c
 18990                           
 18991                           ;stkvar	_isspace$5184 @ sp[(-1)+0]
 18992                           
 18993                           ;incstack = 0
 18994  018238  0EFF               	movlw	-1
 18995  01823A  6AE3               	clrf	plusw1,c
 18996  01823C  2AE3               	incf	plusw1,f,c
 18997                           
 18998                           ;stkvar	_c @ sp[(-1)+-2]
 18999  01823E  0EFD               	movlw	-3
 19000  018240  006F FF8C  F032    	movff	plusw1,btemp
 19001  018246  0E20               	movlw	32
 19002  018248  1832               	xorwf	btemp^0,w,c
 19003  01824A  E104               	bnz	u6460
 19004  01824C  0EFE               	movlw	-2
 19005  01824E  50E3               	movf	plusw1,w,c
 19006  018250  B4D8               	btfsc	status,2,c
 19007  018252  D012               	goto	l7349
 19008  018254                     u6460:
 19009                           
 19010                           ;stkvar	_c @ sp[(-1)+-2]
 19011  018254  0EFD               	movlw	-3
 19012  018256  50E3               	movf	plusw1,w,c
 19013  018258  0FF7               	addlw	247
 19014  01825A  6E3C               	movwf	(btemp+10)^0,c
 19015  01825C  0EFE               	movlw	-2
 19016  01825E  006F FF8C  F03D    	movff	plusw1,btemp+11
 19017  018264  0EFF               	movlw	255
 19018  018266  223D               	addwfc	(btemp+11)^0,f,c
 19019  018268  503D               	movf	(btemp+11)^0,w,c
 19020  01826A  E104               	bnz	u6470
 19021  01826C  0E05               	movlw	5
 19022  01826E  5C3C               	subwf	(btemp+10)^0,w,c
 19023  018270  A0D8               	btfss	status,0,c
 19024  018272  D002               	goto	l7349
 19025  018274                     u6470:
 19026                           
 19027                           ;stkvar	_isspace$5184 @ sp[(-1)+0]
 19028  018274  0EFF               	movlw	-1
 19029  018276  6AE3               	clrf	plusw1,c
 19030  018278                     l7349:
 19031                           
 19032                           ;stkvar	_isspace$5184 @ sp[(-1)+0]
 19033  018278  0EFF               	movlw	-1
 19034  01827A  50E3               	movf	plusw1,w,c
 19035  01827C  6E32               	movwf	btemp^0,c
 19036  01827E  6A33               	clrf	(btemp+1)^0,c
 19037                           
 19038                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19039  018280  52E5               	movf	postdec1,f,c
 19040  018282  52E5               	movf	postdec1,f,c
 19041  018284  52E5               	movf	postdec1,f,c
 19042  018286  0012               	return		;funcret
 19043  018288                     __end_of_isspace:
 19044                           	opt callstack 0
 19045                           
 19046 ;; *************** function _isdigit *****************
 19047 ;; Defined at:
 19048 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19049 ;; Parameters:    Size  Location     Type
 19050 ;;  c               2  [STACK] int 
 19051 ;; Auto vars:     Size  Location     Type
 19052 ;;		None
 19053 ;; Return value:  Size  Location     Type
 19054 ;;                  2  [STACK] int 
 19055 ;; Registers used:
 19056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19057 ;; Tracked objects:
 19058 ;;		On entry : 0/0
 19059 ;;		On exit  : 0/0
 19060 ;;		Unchanged: 0/0
 19061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19066 ;;Total ram usage:        0 bytes
 19067 ;; Hardware stack levels used:    1
 19068 ;; Hardware stack levels required when called:    6
 19069 ;; This function calls:
 19070 ;;		Nothing
 19071 ;; This function is called by:
 19072 ;;		_vfpfcnvrt
 19073 ;;		_atoi
 19074 ;; This function uses a reentrant model
 19075 ;;
 19076                           
 19077                           	psect	text72
 19078  01871A                     __ptext72:
 19079                           	opt callstack 0
 19080  01871A                     _isdigit:
 19081                           	opt callstack 18
 19082                           
 19083                           ;stkvar	_c @ sp[(0)+-2]
 19084                           
 19085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19086                           ;incstack = 0
 19087  01871A  0EFE               	movlw	-2
 19088  01871C  50E3               	movf	plusw1,w,c
 19089  01871E  0FD0               	addlw	208
 19090  018720  6E3C               	movwf	(btemp+10)^0,c
 19091  018722  0EFF               	movlw	-1
 19092  018724  006F FF8C  F03D    	movff	plusw1,btemp+11
 19093  01872A  0EFF               	movlw	255
 19094  01872C  223D               	addwfc	(btemp+11)^0,f,c
 19095  01872E  503D               	movf	(btemp+11)^0,w,c
 19096  018730  E106               	bnz	u5420
 19097  018732  0E0A               	movlw	10
 19098  018734  5C3C               	subwf	(btemp+10)^0,w,c
 19099  018736  B0D8               	btfsc	status,0,c
 19100  018738  D002               	goto	u5420
 19101  01873A  0E01               	movlw	1
 19102  01873C  D001               	goto	u5430
 19103  01873E                     u5420:
 19104  01873E  0E00               	movlw	0
 19105  018740                     u5430:
 19106  018740  6E32               	movwf	btemp^0,c
 19107  018742  6A33               	clrf	(btemp+1)^0,c
 19108                           
 19109                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19110  018744  52E5               	movf	postdec1,f,c
 19111  018746  52E5               	movf	postdec1,f,c
 19112  018748  0012               	return		;funcret
 19113  01874A                     __end_of_isdigit:
 19114                           	opt callstack 0
 19115                           
 19116 ;; *************** function _set_vterm *****************
 19117 ;; Defined at:
 19118 ;;		line 107 in file "mconfig.c"
 19119 ;; Parameters:    Size  Location     Type
 19120 ;;  vterm           1  [STACK] const unsigned char 
 19121 ;; Auto vars:     Size  Location     Type
 19122 ;;		None
 19123 ;; Return value:  Size  Location     Type
 19124 ;;                  1  [STACK] unsigned char 
 19125 ;; Registers used:
 19126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19127 ;; Tracked objects:
 19128 ;;		On entry : 0/1
 19129 ;;		On exit  : 3F/5
 19130 ;;		Unchanged: 0/0
 19131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19136 ;;Total ram usage:        0 bytes
 19137 ;; Hardware stack levels used:    1
 19138 ;; Hardware stack levels required when called:    6
 19139 ;; This function calls:
 19140 ;;		Nothing
 19141 ;; This function is called by:
 19142 ;;		_main
 19143 ;;		_check_help
 19144 ;; This function uses a reentrant model
 19145 ;;
 19146                           
 19147                           	psect	text73
 19148  018CF4                     __ptext73:
 19149                           	opt callstack 0
 19150  018CF4                     _set_vterm:
 19151                           	opt callstack 24
 19152                           
 19153                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19154                           ;stkvar	_vterm @ sp[(0)+-1]
 19155                           
 19156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19157                           ;incstack = 0
 19158  018CF4  0EFF               	movlw	-1
 19159  018CF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 19160  018CFC  0E03               	movlw	3
 19161  018CFE  163D               	andwf	(btemp+11)^0,f,c
 19162  018D00  0105               	movlb	5	; () banked
 19163  018D02  51D8               	movf	(_D+216)& (0+255),w,b
 19164  018D04  183D               	xorwf	(btemp+11)^0,w,c
 19165  018D06  0BFE               	andlw	-2
 19166  018D08  183D               	xorwf	(btemp+11)^0,w,c
 19167  018D0A  6FD8               	movwf	(_D+216)& (0+255),b
 19168                           
 19169                           ; BSR set to: 5
 19170                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19171  018D0C  52E5               	movf	postdec1,f,c
 19172  018D0E  0012               	return		;funcret
 19173  018D10                     __end_of_set_vterm:
 19174                           	opt callstack 0
 19175                           
 19176 ;; *************** function _set_temp_display_help *****************
 19177 ;; Defined at:
 19178 ;;		line 211 in file "mconfig.c"
 19179 ;; Parameters:    Size  Location     Type
 19180 ;;  new_response    1  [STACK] const enum E16501
 19181 ;; Auto vars:     Size  Location     Type
 19182 ;;		None
 19183 ;; Return value:  Size  Location     Type
 19184 ;;                  1  [STACK] enum E16501
 19185 ;; Registers used:
 19186 ;;		wreg, fsr1l, fsr1h
 19187 ;; Tracked objects:
 19188 ;;		On entry : 0/5
 19189 ;;		On exit  : 3F/2
 19190 ;;		Unchanged: 0/0
 19191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19196 ;;Total ram usage:        0 bytes
 19197 ;; Hardware stack levels used:    1
 19198 ;; Hardware stack levels required when called:    6
 19199 ;; This function calls:
 19200 ;;		Nothing
 19201 ;; This function is called by:
 19202 ;;		_check_help
 19203 ;; This function uses a reentrant model
 19204 ;;
 19205                           
 19206                           	psect	text74
 19207  018DF6                     __ptext74:
 19208                           	opt callstack 0
 19209  018DF6                     _set_temp_display_help:
 19210                           	opt callstack 23
 19211                           
 19212                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19213                           
 19214                           ; BSR set to: 5
 19215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19216                           ;incstack = 0
 19217  018DF6  0102               	movlb	2	; () banked
 19218  018DF8  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19219                           
 19220                           ; BSR set to: 2
 19221                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19222                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19223  018DFA  0EFF               	movlw	-1
 19224  018DFC  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19225                           
 19226                           ; BSR set to: 2
 19227                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19228  018E02  52E5               	movf	postdec1,f,c
 19229  018E04  0012               	return		;funcret
 19230  018E06                     __end_of_set_temp_display_help:
 19231                           	opt callstack 0
 19232                           
 19233 ;; *************** function _set_display_info *****************
 19234 ;; Defined at:
 19235 ;;		line 200 in file "mconfig.c"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;  new_response    1  [STACK] const enum E16501
 19238 ;; Auto vars:     Size  Location     Type
 19239 ;;		None
 19240 ;; Return value:  Size  Location     Type
 19241 ;;                  1  [STACK] enum E16986
 19242 ;; Registers used:
 19243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19244 ;; Tracked objects:
 19245 ;;		On entry : 0/39
 19246 ;;		On exit  : 0/0
 19247 ;;		Unchanged: 0/0
 19248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19253 ;;Total ram usage:        0 bytes
 19254 ;; Hardware stack levels used:    1
 19255 ;; Hardware stack levels required when called:    7
 19256 ;; This function calls:
 19257 ;;		_TimerDone
 19258 ;; This function is called by:
 19259 ;;		_main
 19260 ;;		_check_help
 19261 ;; This function uses a reentrant model
 19262 ;;
 19263                           
 19264                           	psect	text75
 19265  018C7E                     __ptext75:
 19266                           	opt callstack 0
 19267  018C7E                     _set_display_info:
 19268                           	opt callstack 23
 19269                           
 19270                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19271                           
 19272                           ; BSR set to: 2
 19273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19274                           ;incstack = 0
 19275  018C7E  0E07               	movlw	7
 19276  018C80  6EE6               	movwf	postinc1,c
 19277  018C82  ECB9  F0C5         	call	_TimerDone	;wreg free
 19278  018C86  5032               	movf	btemp^0,w,c
 19279  018C88  B4D8               	btfsc	status,2,c
 19280  018C8A  D006               	goto	l1637
 19281                           
 19282                           ;mconfig.c: 205:   old_info = V.response.info;
 19283  018C8C  0102               	movlb	2	; () banked
 19284  018C8E  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19285                           
 19286                           ; BSR set to: 2
 19287                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19288                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19289  018C90  0EFF               	movlw	-1
 19290  018C92  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19291  018C98                     l1637:
 19292                           
 19293                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19294  018C98  52E5               	movf	postdec1,f,c
 19295  018C9A  0012               	return		;funcret
 19296  018C9C                     __end_of_set_display_info:
 19297                           	opt callstack 0
 19298                           
 19299 ;; *************** function _mode_lamp_dim *****************
 19300 ;; Defined at:
 19301 ;;		line 13 in file "mconfig.c"
 19302 ;; Parameters:    Size  Location     Type
 19303 ;;  level           2  [STACK] const unsigned short 
 19304 ;; Auto vars:     Size  Location     Type
 19305 ;;		None
 19306 ;; Return value:  Size  Location     Type
 19307 ;;                  1  [STACK] void 
 19308 ;; Registers used:
 19309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19310 ;; Tracked objects:
 19311 ;;		On entry : 0/2
 19312 ;;		On exit  : 0/0
 19313 ;;		Unchanged: 0/0
 19314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19319 ;;Total ram usage:        0 bytes
 19320 ;; Hardware stack levels used:    1
 19321 ;; Hardware stack levels required when called:    7
 19322 ;; This function calls:
 19323 ;;		_PWM8_LoadDutyValue
 19324 ;; This function is called by:
 19325 ;;		_main
 19326 ;;		_check_help
 19327 ;; This function uses a reentrant model
 19328 ;;
 19329                           
 19330                           	psect	text76
 19331  018D46                     __ptext76:
 19332                           	opt callstack 0
 19333  018D46                     _mode_lamp_dim:
 19334                           	opt callstack 23
 19335                           
 19336                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19337                           ;stkvar	_level @ sp[(0)+-2]
 19338                           
 19339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19340                           ;incstack = 0
 19341  018D46  0EFE               	movlw	-2
 19342  018D48  006F FF8F FFE6     	movff	plusw1,postinc1
 19343  018D4E  006F FF8F FFE6     	movff	plusw1,postinc1
 19344  018D54  EC39  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19345                           
 19346                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19347  018D58  52E5               	movf	postdec1,f,c
 19348  018D5A  52E5               	movf	postdec1,f,c
 19349  018D5C  0012               	return		;funcret
 19350  018D5E                     __end_of_mode_lamp_dim:
 19351                           	opt callstack 0
 19352                           
 19353 ;; *************** function _mode_lamp_bright *****************
 19354 ;; Defined at:
 19355 ;;		line 18 in file "mconfig.c"
 19356 ;; Parameters:    Size  Location     Type
 19357 ;;		None
 19358 ;; Auto vars:     Size  Location     Type
 19359 ;;		None
 19360 ;; Return value:  Size  Location     Type
 19361 ;;                  1  [STACK] void 
 19362 ;; Registers used:
 19363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19364 ;; Tracked objects:
 19365 ;;		On entry : 0/2
 19366 ;;		On exit  : 0/0
 19367 ;;		Unchanged: 0/0
 19368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19373 ;;Total ram usage:        0 bytes
 19374 ;; Hardware stack levels used:    1
 19375 ;; Hardware stack levels required when called:    7
 19376 ;; This function calls:
 19377 ;;		_PWM8_LoadDutyValue
 19378 ;; This function is called by:
 19379 ;;		_check_help
 19380 ;; This function uses a reentrant model
 19381 ;;
 19382                           
 19383                           	psect	text77
 19384  018E14                     __ptext77:
 19385                           	opt callstack 0
 19386  018E14                     _mode_lamp_bright:
 19387                           	opt callstack 22
 19388                           
 19389                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19390                           
 19391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19392                           ;incstack = 0
 19393  018E14  0E2C               	movlw	44
 19394  018E16  6EE6               	movwf	postinc1,c
 19395  018E18  0E01               	movlw	1
 19396  018E1A  6EE6               	movwf	postinc1,c
 19397  018E1C  EC39  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19398                           
 19399                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19400  018E20  0012               	return		;funcret
 19401  018E22                     __end_of_mode_lamp_bright:
 19402                           	opt callstack 0
 19403                           
 19404 ;; *************** function _PWM8_LoadDutyValue *****************
 19405 ;; Defined at:
 19406 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;  dutyValue       2  [STACK] unsigned short 
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;		None
 19411 ;; Return value:  Size  Location     Type
 19412 ;;                  1  [STACK] void 
 19413 ;; Registers used:
 19414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19415 ;; Tracked objects:
 19416 ;;		On entry : 0/2
 19417 ;;		On exit  : 0/0
 19418 ;;		Unchanged: 0/0
 19419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19424 ;;Total ram usage:        0 bytes
 19425 ;; Hardware stack levels used:    1
 19426 ;; Hardware stack levels required when called:    6
 19427 ;; This function calls:
 19428 ;;		Nothing
 19429 ;; This function is called by:
 19430 ;;		_mode_lamp_dim
 19431 ;;		_mode_lamp_bright
 19432 ;; This function uses a reentrant model
 19433 ;;
 19434                           
 19435                           	psect	text78
 19436  018472                     __ptext78:
 19437                           	opt callstack 0
 19438  018472                     _PWM8_LoadDutyValue:
 19439                           	opt callstack 23
 19440                           
 19441                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19442                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19443                           
 19444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19445                           ;incstack = 0
 19446  018472  0EFE               	movlw	-2
 19447  018474  006F FF8C  F03C    	movff	plusw1,btemp+10
 19448  01847A  0EFF               	movlw	-1
 19449  01847C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19450  018482  90D8               	bcf	status,0,c
 19451  018484  323D               	rrcf	(btemp+11)^0,f,c
 19452  018486  323C               	rrcf	(btemp+10)^0,f,c
 19453  018488  90D8               	bcf	status,0,c
 19454  01848A  323D               	rrcf	(btemp+11)^0,f,c
 19455  01848C  323C               	rrcf	(btemp+10)^0,f,c
 19456  01848E  503C               	movf	(btemp+10)^0,w,c
 19457  018490  6E61               	movwf	97,c	;volatile
 19458                           
 19459                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19460                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19461  018492  0EFE               	movlw	-2
 19462  018494  006F FF8C  F03D    	movff	plusw1,btemp+11
 19463  01849A  0E03               	movlw	3
 19464  01849C  163D               	andwf	(btemp+11)^0,f,c
 19465  01849E  0E06               	movlw	6
 19466  0184A0  6E32               	movwf	btemp^0,c
 19467  0184A2                     u7955:
 19468  0184A2  90D8               	bcf	status,0,c
 19469  0184A4  363D               	rlcf	(btemp+11)^0,f,c
 19470  0184A6  2E32               	decfsz	btemp^0,f,c
 19471  0184A8  D7FC               	goto	u7955
 19472  0184AA  503D               	movf	(btemp+11)^0,w,c
 19473  0184AC  6E60               	movwf	96,c	;volatile
 19474                           
 19475                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19476  0184AE  52E5               	movf	postdec1,f,c
 19477  0184B0  52E5               	movf	postdec1,f,c
 19478  0184B2  0012               	return		;funcret
 19479  0184B4                     __end_of_PWM8_LoadDutyValue:
 19480                           	opt callstack 0
 19481                           
 19482 ;; *************** function _help_button *****************
 19483 ;; Defined at:
 19484 ;;		line 26 in file "mconfig.c"
 19485 ;; Parameters:    Size  Location     Type
 19486 ;;		None
 19487 ;; Auto vars:     Size  Location     Type
 19488 ;;		None
 19489 ;; Return value:  Size  Location     Type
 19490 ;;                  1  [STACK] _Bool 
 19491 ;; Registers used:
 19492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19493 ;; Tracked objects:
 19494 ;;		On entry : 0/2
 19495 ;;		On exit  : 0/0
 19496 ;;		Unchanged: 0/0
 19497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19502 ;;Total ram usage:        0 bytes
 19503 ;; Hardware stack levels used:    1
 19504 ;; Hardware stack levels required when called:    7
 19505 ;; This function calls:
 19506 ;;		_StartTimer
 19507 ;;		_TimerDone
 19508 ;; This function is called by:
 19509 ;;		_check_help
 19510 ;; This function uses a reentrant model
 19511 ;;
 19512                           
 19513                           	psect	text79
 19514  0185AE                     __ptext79:
 19515                           	opt callstack 0
 19516  0185AE                     _help_button:
 19517                           	opt callstack 22
 19518                           
 19519                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19520                           
 19521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19522                           ;incstack = 0
 19523  0185AE  B0CB               	btfsc	203,0,c	;volatile
 19524  0185B0  D00C               	goto	l1580
 19525                           
 19526                           ;mconfig.c: 29:   V.help = 1;
 19527  0185B2  0102               	movlb	2	; () banked
 19528  0185B4  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19529                           
 19530                           ; BSR set to: 2
 19531                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19532  0185B6  0E08               	movlw	8
 19533  0185B8  6EE6               	movwf	postinc1,c
 19534  0185BA  ECB9  F0C5         	call	_TimerDone	;wreg free
 19535  0185BE  5032               	movf	btemp^0,w,c
 19536  0185C0  B4D8               	btfsc	status,2,c
 19537  0185C2  D003               	goto	l1580
 19538                           
 19539                           ;mconfig.c: 31:    return 1;
 19540  0185C4  0E01               	movlw	1
 19541  0185C6  6E32               	movwf	btemp^0,c
 19542  0185C8  0012               	return	
 19543  0185CA                     l1580:
 19544                           
 19545                           ;mconfig.c: 34:  if (!V.help)
 19546  0185CA  0102               	movlb	2	; () banked
 19547  0185CC  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19548  0185CE  D008               	goto	l8823
 19549                           
 19550                           ; BSR set to: 2
 19551                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19552  0185D0  0E2C               	movlw	44
 19553  0185D2  6EE6               	movwf	postinc1,c
 19554  0185D4  0E01               	movlw	1
 19555  0185D6  6EE6               	movwf	postinc1,c
 19556  0185D8  0E08               	movlw	8
 19557  0185DA  6EE6               	movwf	postinc1,c
 19558  0185DC  ECB9  F0C2         	call	_StartTimer	;wreg free
 19559  0185E0                     l8823:
 19560                           
 19561                           ;mconfig.c: 37:  return 0;
 19562  0185E0  0E00               	movlw	0
 19563  0185E2  6E32               	movwf	btemp^0,c
 19564                           
 19565                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19566  0185E4  0012               	return		;funcret
 19567  0185E6                     __end_of_help_button:
 19568                           	opt callstack 0
 19569                           
 19570 ;; *************** function _TimerDone *****************
 19571 ;; Defined at:
 19572 ;;		line 20 in file "timers.c"
 19573 ;; Parameters:    Size  Location     Type
 19574 ;;  timer           1  [STACK] const unsigned char 
 19575 ;; Auto vars:     Size  Location     Type
 19576 ;;		None
 19577 ;; Return value:  Size  Location     Type
 19578 ;;                  1  [STACK] _Bool 
 19579 ;; Registers used:
 19580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19581 ;; Tracked objects:
 19582 ;;		On entry : 0/39
 19583 ;;		On exit  : 0/0
 19584 ;;		Unchanged: 0/0
 19585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19590 ;;Total ram usage:        0 bytes
 19591 ;; Hardware stack levels used:    1
 19592 ;; Hardware stack levels required when called:    6
 19593 ;; This function calls:
 19594 ;;		Nothing
 19595 ;; This function is called by:
 19596 ;;		_main
 19597 ;;		_WaitMs
 19598 ;;		_help_button
 19599 ;;		_check_help
 19600 ;;		_set_display_info
 19601 ;; This function uses a reentrant model
 19602 ;;
 19603                           
 19604                           	psect	text80
 19605  018B72                     __ptext80:
 19606                           	opt callstack 0
 19607  018B72                     _TimerDone:
 19608                           	opt callstack 23
 19609                           
 19610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19611                           ;incstack = 0
 19612  018B72  0004               	clrwdt		;# 
 19613                           
 19614                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19615                           ;stkvar	_timer @ sp[(0)+-1]
 19616  018B74  0EFF               	movlw	-1
 19617  018B76  50E3               	movf	plusw1,w,c
 19618  018B78  0D02               	mullw	2
 19619  018B7A  50F3               	movf	243,w,c
 19620  018B7C  0F89               	addlw	low _tickCount
 19621  018B7E  6ED9               	movwf	fsr2l,c
 19622  018B80  6ADA               	clrf	fsr2h,c
 19623  018B82  50DE               	movf	postinc2,w,c
 19624  018B84  10DE               	iorwf	postinc2,w,c
 19625  018B86  A4D8               	btfss	status,2,c
 19626  018B88  D002               	goto	l8185
 19627                           
 19628                           ;timers.c: 24:   return 1;
 19629  018B8A  0E01               	movlw	1
 19630  018B8C  D001               	goto	L20
 19631  018B8E                     l8185:
 19632                           
 19633                           ;timers.c: 26:  return 0;
 19634  018B8E  0E00               	movlw	0
 19635  018B90                     L20:
 19636  018B90  6E32               	movwf	btemp^0,c
 19637                           
 19638                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19639  018B92  52E5               	movf	postdec1,f,c
 19640  018B94  0012               	return		;funcret
 19641  018B96                     __end_of_TimerDone:
 19642                           	opt callstack 0
 19643                           
 19644 ;; *************** function _StartTimer *****************
 19645 ;; Defined at:
 19646 ;;		line 12 in file "timers.c"
 19647 ;; Parameters:    Size  Location     Type
 19648 ;;  timer           1  [STACK] const unsigned char 
 19649 ;;  count           2  [STACK] const unsigned short 
 19650 ;; Auto vars:     Size  Location     Type
 19651 ;;		None
 19652 ;; Return value:  Size  Location     Type
 19653 ;;                  1  [STACK] void 
 19654 ;; Registers used:
 19655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19656 ;; Tracked objects:
 19657 ;;		On entry : 0/5
 19658 ;;		On exit  : 0/0
 19659 ;;		Unchanged: 0/0
 19660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19665 ;;Total ram usage:        0 bytes
 19666 ;; Hardware stack levels used:    1
 19667 ;; Hardware stack levels required when called:    6
 19668 ;; This function calls:
 19669 ;;		Nothing
 19670 ;; This function is called by:
 19671 ;;		_main
 19672 ;;		_WaitMs
 19673 ;;		_help_button
 19674 ;;		_check_help
 19675 ;; This function uses a reentrant model
 19676 ;;
 19677                           
 19678                           	psect	text81
 19679  018572                     __ptext81:
 19680                           	opt callstack 0
 19681  018572                     _StartTimer:
 19682                           	opt callstack 21
 19683                           
 19684                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19685                           ;stkvar	_count @ sp[(0)+-3]
 19686                           
 19687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19688                           ;incstack = 0
 19689  018572  0EFD               	movlw	-3
 19690  018574  006F FF8C  F03C    	movff	plusw1,btemp+10
 19691  01857A  0EFE               	movlw	-2
 19692  01857C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19693  018582  90D8               	bcf	status,0,c
 19694  018584  343C               	rlcf	(btemp+10)^0,w,c
 19695  018586  6E3A               	movwf	(btemp+8)^0,c
 19696  018588  343D               	rlcf	(btemp+11)^0,w,c
 19697  01858A  6E3B               	movwf	(btemp+9)^0,c
 19698                           
 19699                           ;stkvar	_timer @ sp[(0)+-1]
 19700  01858C  0EFF               	movlw	-1
 19701  01858E  50E3               	movf	plusw1,w,c
 19702  018590  0D02               	mullw	2
 19703  018592  50F3               	movf	243,w,c
 19704  018594  0F89               	addlw	low _tickCount
 19705  018596  6ED9               	movwf	fsr2l,c
 19706  018598  6ADA               	clrf	fsr2h,c
 19707  01859A  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19708  0185A0  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19709                           
 19710                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19711  0185A6  52E5               	movf	postdec1,f,c
 19712  0185A8  52E5               	movf	postdec1,f,c
 19713  0185AA  52E5               	movf	postdec1,f,c
 19714  0185AC  0012               	return		;funcret
 19715  0185AE                     __end_of_StartTimer:
 19716                           	opt callstack 0
 19717                           
 19718 ;; *************** function _display_info *****************
 19719 ;; Defined at:
 19720 ;;		line 190 in file "mconfig.c"
 19721 ;; Parameters:    Size  Location     Type
 19722 ;;		None
 19723 ;; Auto vars:     Size  Location     Type
 19724 ;;		None
 19725 ;; Return value:  Size  Location     Type
 19726 ;;                  1  [STACK] enum E16501
 19727 ;; Registers used:
 19728 ;;		btemp
 19729 ;; Tracked objects:
 19730 ;;		On entry : 0/2
 19731 ;;		On exit  : 0/0
 19732 ;;		Unchanged: 0/0
 19733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19738 ;;Total ram usage:        0 bytes
 19739 ;; Hardware stack levels used:    1
 19740 ;; Hardware stack levels required when called:    6
 19741 ;; This function calls:
 19742 ;;		Nothing
 19743 ;; This function is called by:
 19744 ;;		_check_help
 19745 ;; This function uses a reentrant model
 19746 ;;
 19747                           
 19748                           	psect	text82
 19749  018E76                     __ptext82:
 19750                           	opt callstack 0
 19751  018E76                     _display_info:
 19752                           	opt callstack 23
 19753                           
 19754                           ;mconfig.c: 192:  return V.response.info;
 19755                           
 19756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19757                           ;incstack = 0
 19758  018E76  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19759                           
 19760                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19761  018E7C  0012               	return		;funcret
 19762  018E7E                     __end_of_display_info:
 19763                           	opt callstack 0
 19764                           
 19765 ;; *************** function _display_help *****************
 19766 ;; Defined at:
 19767 ;;		line 195 in file "mconfig.c"
 19768 ;; Parameters:    Size  Location     Type
 19769 ;;		None
 19770 ;; Auto vars:     Size  Location     Type
 19771 ;;		None
 19772 ;; Return value:  Size  Location     Type
 19773 ;;                  1  [STACK] enum E16501
 19774 ;; Registers used:
 19775 ;;		btemp
 19776 ;; Tracked objects:
 19777 ;;		On entry : 3F/2
 19778 ;;		On exit  : 0/0
 19779 ;;		Unchanged: 0/0
 19780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19785 ;;Total ram usage:        0 bytes
 19786 ;; Hardware stack levels used:    1
 19787 ;; Hardware stack levels required when called:    6
 19788 ;; This function calls:
 19789 ;;		Nothing
 19790 ;; This function is called by:
 19791 ;;		_check_help
 19792 ;; This function uses a reentrant model
 19793 ;;
 19794                           
 19795                           	psect	text83
 19796  018E7E                     __ptext83:
 19797                           	opt callstack 0
 19798  018E7E                     _display_help:
 19799                           	opt callstack 23
 19800                           
 19801                           ;mconfig.c: 197:  return V.response.help_temp;
 19802                           
 19803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19804                           ;incstack = 0
 19805  018E7E  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19806                           
 19807                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19808  018E84  0012               	return		;funcret
 19809  018E86                     __end_of_display_help:
 19810                           	opt callstack 0
 19811                           
 19812 ;; *************** function _check_enter_button *****************
 19813 ;; Defined at:
 19814 ;;		line 42 in file "hid.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  h               1  [STACK] PTR struct H_data
 19817 ;;		 -> H(7), 
 19818 ;; Auto vars:     Size  Location     Type
 19819 ;;		None
 19820 ;; Return value:  Size  Location     Type
 19821 ;;                  1  [STACK] _Bool 
 19822 ;; Registers used:
 19823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19824 ;; Tracked objects:
 19825 ;;		On entry : 0/39
 19826 ;;		On exit  : 0/0
 19827 ;;		Unchanged: 0/0
 19828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19833 ;;Total ram usage:        0 bytes
 19834 ;; Hardware stack levels used:    1
 19835 ;; Hardware stack levels required when called:    6
 19836 ;; This function calls:
 19837 ;;		Nothing
 19838 ;; This function is called by:
 19839 ;;		_main
 19840 ;; This function uses a reentrant model
 19841 ;;
 19842                           
 19843                           	psect	text84
 19844  0184B4                     __ptext84:
 19845                           	opt callstack 0
 19846  0184B4                     _check_enter_button:
 19847                           	opt callstack 24
 19848                           
 19849                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 19850                           ;stkvar	_h @ sp[(0)+-1]
 19851                           
 19852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19853                           ;incstack = 0
 19854  0184B4  0EFF               	movlw	-1
 19855  0184B6  50E3               	movf	plusw1,w,c
 19856  0184B8  6ED9               	movwf	fsr2l,c
 19857  0184BA  6ADA               	clrf	fsr2h,c
 19858  0184BC  0E04               	movlw	4
 19859  0184BE  26D9               	addwf	fsr2l,f,c
 19860  0184C0  50DF               	movf	indf2,w,c
 19861  0184C2  A4D8               	btfss	status,2,c
 19862  0184C4  D013               	goto	l9301
 19863                           
 19864                           ;stkvar	_h @ sp[(0)+-1]
 19865  0184C6  0EFF               	movlw	-1
 19866  0184C8  50E3               	movf	plusw1,w,c
 19867  0184CA  6ED9               	movwf	fsr2l,c
 19868  0184CC  6ADA               	clrf	fsr2h,c
 19869  0184CE  0E05               	movlw	5
 19870  0184D0  26D9               	addwf	fsr2l,f,c
 19871  0184D2  50DF               	movf	indf2,w,c
 19872  0184D4  A4D8               	btfss	status,2,c
 19873  0184D6  D00A               	goto	l9301
 19874                           
 19875                           ;hid.c: 45:   h->wait_enter = 1;
 19876                           ;stkvar	_h @ sp[(0)+-1]
 19877  0184D8  0EFF               	movlw	-1
 19878  0184DA  50E3               	movf	plusw1,w,c
 19879  0184DC  6ED9               	movwf	fsr2l,c
 19880  0184DE  6ADA               	clrf	fsr2h,c
 19881  0184E0  0E04               	movlw	4
 19882  0184E2  26D9               	addwf	fsr2l,f,c
 19883  0184E4  0E01               	movlw	1
 19884  0184E6  6EDF               	movwf	indf2,c
 19885                           
 19886                           ;hid.c: 46:   return 1;
 19887  0184E8  0E01               	movlw	1
 19888  0184EA  D001               	goto	L21
 19889  0184EC                     l9301:
 19890                           
 19891                           ;hid.c: 48:  return 0;
 19892  0184EC  0E00               	movlw	0
 19893  0184EE                     L21:
 19894  0184EE  6E32               	movwf	btemp^0,c
 19895                           
 19896                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 19897  0184F0  52E5               	movf	postdec1,f,c
 19898  0184F2  0012               	return		;funcret
 19899  0184F4                     __end_of_check_enter_button:
 19900                           	opt callstack 0
 19901                           
 19902 ;; *************** function _check_adc_scan *****************
 19903 ;; Defined at:
 19904 ;;		line 56 in file "daq.c"
 19905 ;; Parameters:    Size  Location     Type
 19906 ;;		None
 19907 ;; Auto vars:     Size  Location     Type
 19908 ;;		None
 19909 ;; Return value:  Size  Location     Type
 19910 ;;                  1  [STACK] _Bool 
 19911 ;; Registers used:
 19912 ;;		btemp
 19913 ;; Tracked objects:
 19914 ;;		On entry : 0/39
 19915 ;;		On exit  : 0/0
 19916 ;;		Unchanged: 0/0
 19917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19922 ;;Total ram usage:        0 bytes
 19923 ;; Hardware stack levels used:    1
 19924 ;; Hardware stack levels required when called:    6
 19925 ;; This function calls:
 19926 ;;		Nothing
 19927 ;; This function is called by:
 19928 ;;		_main
 19929 ;; This function uses a reentrant model
 19930 ;;
 19931                           
 19932                           	psect	text85
 19933  018E86                     __ptext85:
 19934                           	opt callstack 0
 19935  018E86                     _check_adc_scan:
 19936                           	opt callstack 24
 19937                           
 19938                           ;daq.c: 58:  return R.done;
 19939                           
 19940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19941                           ;incstack = 0
 19942  018E86  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19943                           
 19944                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19945  018E8C  0012               	return		;funcret
 19946  018E8E                     __end_of_check_adc_scan:
 19947                           	opt callstack 0
 19948                           
 19949 ;; *************** function _calc_model_data *****************
 19950 ;; Defined at:
 19951 ;;		line 55 in file "mbmc.c"
 19952 ;; Parameters:    Size  Location     Type
 19953 ;;		None
 19954 ;; Auto vars:     Size  Location     Type
 19955 ;;		None
 19956 ;; Return value:  Size  Location     Type
 19957 ;;                  1  [STACK] void 
 19958 ;; Registers used:
 19959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19960 ;; Tracked objects:
 19961 ;;		On entry : 0/39
 19962 ;;		On exit  : 3C/0
 19963 ;;		Unchanged: 0/0
 19964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19969 ;;Total ram usage:        0 bytes
 19970 ;; Hardware stack levels used:    1
 19971 ;; Hardware stack levels required when called:    9
 19972 ;; This function calls:
 19973 ;;		___fladd
 19974 ;;		___flmul
 19975 ;;		___flsub
 19976 ;;		_lp_filter
 19977 ;; This function is called by:
 19978 ;;		_main
 19979 ;; This function uses a reentrant model
 19980 ;;
 19981                           
 19982                           	psect	text86
 19983  014E76                     __ptext86:
 19984                           	opt callstack 0
 19985  014E76                     _calc_model_data:
 19986                           	opt callstack 21
 19987                           
 19988                           ;mbmc.c: 57:  if (!V.calib) {
 19989                           
 19990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19991                           ;incstack = 0
 19992  014E76  0102               	movlb	2	; () banked
 19993  014E78  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 19994  014E7A  A4D8               	btfss	status,2,c
 19995  014E7C  0012               	return	
 19996                           
 19997                           ; BSR set to: 2
 19998                           ;mbmc.c: 58:   C.c_bat = C.calc[C_BATT];
 19999  014E7E  C100  F144         	movff	_C,_C+68
 20000  014E82  C101  F145         	movff	_C+1,_C+69
 20001  014E86  C102  F146         	movff	_C+2,_C+70
 20002  014E8A  C103  F147         	movff	_C+3,_C+71
 20003                           
 20004                           ;mbmc.c: 59:   C.c_pv = C.calc[C_PV];
 20005  014E8E  C104  F148         	movff	_C+4,_C+72
 20006  014E92  C105  F149         	movff	_C+5,_C+73
 20007  014E96  C106  F14A         	movff	_C+6,_C+74
 20008  014E9A  C107  F14B         	movff	_C+7,_C+75
 20009                           
 20010                           ;mbmc.c: 60:   C.v_bat = C.calc[V_BAT];
 20011  014E9E  C110  F154         	movff	_C+16,_C+84
 20012  014EA2  C111  F155         	movff	_C+17,_C+85
 20013  014EA6  C112  F156         	movff	_C+18,_C+86
 20014  014EAA  C113  F157         	movff	_C+19,_C+87
 20015                           
 20016                           ;mbmc.c: 61:   C.v_pv = C.calc[V_PV];
 20017  014EAE  C114  F150         	movff	_C+20,_C+80
 20018  014EB2  C115  F151         	movff	_C+21,_C+81
 20019  014EB6  C116  F152         	movff	_C+22,_C+82
 20020  014EBA  C117  F153         	movff	_C+23,_C+83
 20021                           
 20022                           ;mbmc.c: 62:   C.v_inverter = C.calc[V_INVERTER];
 20023  014EBE  C130  F164         	movff	_C+48,_C+100
 20024  014EC2  C131  F165         	movff	_C+49,_C+101
 20025  014EC6  C132  F166         	movff	_C+50,_C+102
 20026  014ECA  C133  F167         	movff	_C+51,_C+103
 20027                           
 20028                           ; BSR set to: 2
 20029                           ;mbmc.c: 63:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20030  014ECE  0E01               	movlw	1
 20031  014ED0  6EE6               	movwf	postinc1,c
 20032  014ED2  0E10               	movlw	16
 20033  014ED4  6EE6               	movwf	postinc1,c
 20034  014ED6  0060  F403  FFE6   	movff	_C,postinc1
 20035  014EDC  0060  F407  FFE6   	movff	_C+1,postinc1
 20036  014EE2  0060  F40B  FFE6   	movff	_C+2,postinc1
 20037  014EE8  0060  F40F  FFE6   	movff	_C+3,postinc1
 20038  014EEE  0060  F413  FFE6   	movff	_C+4,postinc1
 20039  014EF4  0060  F417  FFE6   	movff	_C+5,postinc1
 20040  014EFA  0060  F41B  FFE6   	movff	_C+6,postinc1
 20041  014F00  0060  F41F  FFE6   	movff	_C+7,postinc1
 20042  014F06  EC8B  F0C1         	call	___flsub	;wreg free
 20043  014F0A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20044  014F10  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20045  014F16  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20046  014F1C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20047  014F22  EC89  F0B0         	call	_lp_filter	;wreg free
 20048  014F26  0060  F0C8  F140   	movff	btemp,_C+64
 20049  014F2C  0060  F0CC  F141   	movff	btemp+1,_C+65
 20050  014F32  0060  F0D0  F142   	movff	btemp+2,_C+66
 20051  014F38  0060  F0D4  F143   	movff	btemp+3,_C+67
 20052                           
 20053                           ;mbmc.c: 64:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20054  014F3E  0E01               	movlw	1
 20055  014F40  6EE6               	movwf	postinc1,c
 20056  014F42  0E11               	movlw	17
 20057  014F44  6EE6               	movwf	postinc1,c
 20058  014F46  0060  F553  FFE6   	movff	_C+84,postinc1
 20059  014F4C  0060  F557  FFE6   	movff	_C+85,postinc1
 20060  014F52  0060  F55B  FFE6   	movff	_C+86,postinc1
 20061  014F58  0060  F55F  FFE6   	movff	_C+87,postinc1
 20062  014F5E  0060  F503  FFE6   	movff	_C+64,postinc1
 20063  014F64  0060  F507  FFE6   	movff	_C+65,postinc1
 20064  014F6A  0060  F50B  FFE6   	movff	_C+66,postinc1
 20065  014F70  0060  F50F  FFE6   	movff	_C+67,postinc1
 20066  014F76  ECEC  F092         	call	___flmul	;wreg free
 20067  014F7A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20068  014F80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20069  014F86  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20070  014F8C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20071  014F92  EC89  F0B0         	call	_lp_filter	;wreg free
 20072  014F96  0060  F0C8  F168   	movff	btemp,_C+104
 20073  014F9C  0060  F0CC  F169   	movff	btemp+1,_C+105
 20074  014FA2  0060  F0D0  F16A   	movff	btemp+2,_C+106
 20075  014FA8  0060  F0D4  F16B   	movff	btemp+3,_C+107
 20076                           
 20077                           ;mbmc.c: 65:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20078  014FAE  0E01               	movlw	1
 20079  014FB0  6EE6               	movwf	postinc1,c
 20080  014FB2  0E12               	movlw	18
 20081  014FB4  6EE6               	movwf	postinc1,c
 20082  014FB6  0060  F543  FFE6   	movff	_C+80,postinc1
 20083  014FBC  0060  F547  FFE6   	movff	_C+81,postinc1
 20084  014FC2  0060  F54B  FFE6   	movff	_C+82,postinc1
 20085  014FC8  0060  F54F  FFE6   	movff	_C+83,postinc1
 20086  014FCE  0060  F523  FFE6   	movff	_C+72,postinc1
 20087  014FD4  0060  F527  FFE6   	movff	_C+73,postinc1
 20088  014FDA  0060  F52B  FFE6   	movff	_C+74,postinc1
 20089  014FE0  0060  F52F  FFE6   	movff	_C+75,postinc1
 20090  014FE6  ECEC  F092         	call	___flmul	;wreg free
 20091  014FEA  0060  F0CB  FFE6   	movff	btemp,postinc1
 20092  014FF0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20093  014FF6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20094  014FFC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20095  015002  EC89  F0B0         	call	_lp_filter	;wreg free
 20096  015006  0060  F0C8  F170   	movff	btemp,_C+112
 20097  01500C  0060  F0CC  F171   	movff	btemp+1,_C+113
 20098  015012  0060  F0D0  F172   	movff	btemp+2,_C+114
 20099  015018  0060  F0D4  F173   	movff	btemp+3,_C+115
 20100                           
 20101                           ;mbmc.c: 66:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20102  01501E  0E01               	movlw	1
 20103  015020  6EE6               	movwf	postinc1,c
 20104  015022  0E13               	movlw	19
 20105  015024  6EE6               	movwf	postinc1,c
 20106  015026  0E00               	movlw	0
 20107  015028  6EE6               	movwf	postinc1,c
 20108  01502A  0E00               	movlw	0
 20109  01502C  6EE6               	movwf	postinc1,c
 20110  01502E  0E60               	movlw	96
 20111  015030  6EE6               	movwf	postinc1,c
 20112  015032  0EC1               	movlw	193
 20113  015034  6EE6               	movwf	postinc1,c
 20114  015036  0060  F593  FFE6   	movff	_C+100,postinc1
 20115  01503C  0060  F597  FFE6   	movff	_C+101,postinc1
 20116  015042  0060  F59B  FFE6   	movff	_C+102,postinc1
 20117  015048  0060  F59F  FFE6   	movff	_C+103,postinc1
 20118  01504E  0060  F503  FFE6   	movff	_C+64,postinc1
 20119  015054  0060  F507  FFE6   	movff	_C+65,postinc1
 20120  01505A  0060  F50B  FFE6   	movff	_C+66,postinc1
 20121  015060  0060  F50F  FFE6   	movff	_C+67,postinc1
 20122  015066  ECEC  F092         	call	___flmul	;wreg free
 20123  01506A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20124  015070  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20125  015076  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20126  01507C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20127  015082  EC01  F097         	call	___fladd	;wreg free
 20128  015086  0060  F0CB  FFE6   	movff	btemp,postinc1
 20129  01508C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20130  015092  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20131  015098  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20132  01509E  EC89  F0B0         	call	_lp_filter	;wreg free
 20133  0150A2  0060  F0C8  F16C   	movff	btemp,_C+108
 20134  0150A8  0060  F0CC  F16D   	movff	btemp+1,_C+109
 20135  0150AE  0060  F0D0  F16E   	movff	btemp+2,_C+110
 20136  0150B4  0060  F0D4  F16F   	movff	btemp+3,_C+111
 20137                           
 20138                           ;mbmc.c: 67:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20139  0150BA  0E01               	movlw	1
 20140  0150BC  6EE6               	movwf	postinc1,c
 20141  0150BE  0E14               	movlw	20
 20142  0150C0  6EE6               	movwf	postinc1,c
 20143  0150C2  0060  F553  FFE6   	movff	_C+84,postinc1
 20144  0150C8  0060  F557  FFE6   	movff	_C+85,postinc1
 20145  0150CE  0060  F55B  FFE6   	movff	_C+86,postinc1
 20146  0150D4  0060  F55F  FFE6   	movff	_C+87,postinc1
 20147  0150DA  0060  F513  FFE6   	movff	_C+68,postinc1
 20148  0150E0  0060  F517  FFE6   	movff	_C+69,postinc1
 20149  0150E6  0060  F51B  FFE6   	movff	_C+70,postinc1
 20150  0150EC  0060  F51F  FFE6   	movff	_C+71,postinc1
 20151  0150F2  ECEC  F092         	call	___flmul	;wreg free
 20152  0150F6  0060  F0CB  FFE6   	movff	btemp,postinc1
 20153  0150FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20154  015102  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20155  015108  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20156  01510E  EC89  F0B0         	call	_lp_filter	;wreg free
 20157  015112  0060  F0C8  F174   	movff	btemp,_C+116
 20158  015118  0060  F0CC  F175   	movff	btemp+1,_C+117
 20159  01511E  0060  F0D0  F176   	movff	btemp+2,_C+118
 20160  015124  0060  F0D4  F177   	movff	btemp+3,_C+119
 20161                           
 20162                           ;mbmc.c: 71:   if (C.p_inverter < 0.0)
 20163  01512A  0101               	movlb	1	; () banked
 20164  01512C  AF6F               	btfss	(_C+111)& (0+255),7,b
 20165  01512E  0012               	return	
 20166                           
 20167                           ; BSR set to: 1
 20168                           ;mbmc.c: 72:    C.p_inverter = 0.0001;
 20169  015130  0E17               	movlw	23
 20170  015132  6F6C               	movwf	(_C+108)& (0+255),b
 20171  015134  0EB7               	movlw	183
 20172  015136  6F6D               	movwf	(_C+109)& (0+255),b
 20173  015138  0ED1               	movlw	209
 20174  01513A  6F6E               	movwf	(_C+110)& (0+255),b
 20175  01513C  0E38               	movlw	56
 20176  01513E  6F6F               	movwf	(_C+111)& (0+255),b
 20177                           
 20178                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20179  015140  0012               	return		;funcret
 20180  015142                     __end_of_calc_model_data:
 20181                           	opt callstack 0
 20182                           
 20183 ;; *************** function _lp_filter *****************
 20184 ;; Defined at:
 20185 ;;		line 17 in file "mbmc.c"
 20186 ;; Parameters:    Size  Location     Type
 20187 ;;  new             4  [STACK] const float 
 20188 ;;  bn              1  [STACK] const unsigned char 
 20189 ;;  slow            1  [STACK] const char 
 20190 ;; Auto vars:     Size  Location     Type
 20191 ;;  lp_speed        4  [STACK] float 
 20192 ;; Return value:  Size  Location     Type
 20193 ;;                  4  [STACK] float 
 20194 ;; Registers used:
 20195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20196 ;; Tracked objects:
 20197 ;;		On entry : 0/2
 20198 ;;		On exit  : 0/0
 20199 ;;		Unchanged: 0/0
 20200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20205 ;;Total ram usage:        0 bytes
 20206 ;; Hardware stack levels used:    1
 20207 ;; Hardware stack levels required when called:    8
 20208 ;; This function calls:
 20209 ;;		___fladd
 20210 ;;		___flmul
 20211 ;;		___flsub
 20212 ;; This function is called by:
 20213 ;;		_main
 20214 ;;		_convert_adc_data
 20215 ;;		_calc_model_data
 20216 ;; This function uses a reentrant model
 20217 ;;
 20218                           
 20219                           	psect	text87
 20220  016112                     __ptext87:
 20221                           	opt callstack 0
 20222  016112                     _lp_filter:
 20223                           	opt callstack 0
 20224                           
 20225                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20226  016112  52E6               	movf	postinc1,f,c
 20227  016114  52E6               	movf	postinc1,f,c
 20228  016116  52E6               	movf	postinc1,f,c
 20229  016118  52E6               	movf	postinc1,f,c
 20230                           
 20231                           ;mbmc.c: 17: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 18: {;mbmc.c: 19:  static float smooth[16 +5];;mbmc.c: 20:  float lp_speed;;mbmc.c: 2
      +                          2:  if (bn >= 16 +5)
 20232                           ;stkvar	_bn @ sp[(-4)+-5]
 20233                           
 20234                           ;incstack = 0
 20235  01611A  0EF7               	movlw	-9
 20236  01611C  006F FF8C  F032    	movff	plusw1,btemp
 20237  016122  0E14               	movlw	20
 20238  016124  6432               	cpfsgt	btemp^0,c
 20239  016126  D011               	goto	l8777
 20240  016128                     u8180:
 20241                           
 20242                           ;mbmc.c: 23:   return new;
 20243                           ;stkvar	_new @ sp[(-4)+-4]
 20244  016128  0EF8               	movlw	-8
 20245  01612A  006F FF8C  F032    	movff	plusw1,btemp
 20246  016130  0EF9               	movlw	-7
 20247  016132  006F FF8C  F033    	movff	plusw1,btemp+1
 20248  016138  0EFA               	movlw	-6
 20249  01613A  006F FF8C  F034    	movff	plusw1,btemp+2
 20250  016140  0EFB               	movlw	-5
 20251  016142  006F FF8C  F035    	movff	plusw1,btemp+3
 20252  016148  D0BF               	goto	l1724
 20253  01614A                     l8777:
 20254                           
 20255                           ;mbmc.c: 25:  if (slow == (-1)) {
 20256                           ;stkvar	_slow @ sp[(-4)+-6]
 20257  01614A  0EF6               	movlw	-10
 20258  01614C  28E3               	incf	plusw1,w,c
 20259  01614E  A4D8               	btfss	status,2,c
 20260  016150  D012               	goto	l8785
 20261                           
 20262                           ;mbmc.c: 26:   smooth[bn] = 0.0;
 20263                           ;stkvar	_bn @ sp[(-4)+-5]
 20264  016152  0EF7               	movlw	-9
 20265  016154  50E3               	movf	plusw1,w,c
 20266  016156  0D04               	mullw	4
 20267  016158  0E00               	movlw	low lp_filter@smooth
 20268  01615A  24F3               	addwf	243,w,c
 20269  01615C  6ED9               	movwf	fsr2l,c
 20270  01615E  0E03               	movlw	high lp_filter@smooth
 20271  016160  20F4               	addwfc	prodh,w,c
 20272  016162  6EDA               	movwf	fsr2h,c
 20273  016164  0E00               	movlw	0
 20274  016166  6EDE               	movwf	postinc2,c
 20275  016168  0E00               	movlw	0
 20276  01616A  6EDE               	movwf	postinc2,c
 20277  01616C  0E00               	movlw	0
 20278  01616E  6EDE               	movwf	postinc2,c
 20279  016170  0E00               	movlw	0
 20280  016172  6EDD               	movwf	postdec2,c
 20281  016174  D7D9               	goto	u8180
 20282  016176                     l8785:
 20283                           
 20284                           ;mbmc.c: 30:  if (slow) {
 20285                           ;stkvar	_slow @ sp[(-4)+-6]
 20286  016176  0EF6               	movlw	-10
 20287  016178  50E3               	movf	plusw1,w,c
 20288  01617A  B4D8               	btfsc	status,2,c
 20289  01617C  D008               	goto	l8789
 20290                           
 20291                           ;mbmc.c: 31:   lp_speed = 0.033;
 20292  01617E  0E02               	movlw	2
 20293  016180  6E3A               	movwf	(btemp+8)^0,c
 20294  016182  0E2B               	movlw	43
 20295  016184  6E3B               	movwf	(btemp+9)^0,c
 20296  016186  0E07               	movlw	7
 20297  016188  6E3C               	movwf	(btemp+10)^0,c
 20298  01618A  0E3D               	movlw	61
 20299  01618C  D007               	goto	L22
 20300  01618E                     l8789:
 20301                           
 20302                           ;mbmc.c: 33:   lp_speed = 0.125;
 20303  01618E  0E00               	movlw	0
 20304  016190  6E3A               	movwf	(btemp+8)^0,c
 20305  016192  0E00               	movlw	0
 20306  016194  6E3B               	movwf	(btemp+9)^0,c
 20307  016196  0E00               	movlw	0
 20308  016198  6E3C               	movwf	(btemp+10)^0,c
 20309  01619A  0E3E               	movlw	62
 20310  01619C                     L22:
 20311  01619C  6E3D               	movwf	(btemp+11)^0,c
 20312                           
 20313                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20314  01619E  0EFC               	movlw	-4
 20315  0161A0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20316  0161A6  0EFD               	movlw	-3
 20317  0161A8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20318  0161AE  0EFE               	movlw	-2
 20319  0161B0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20320  0161B6  0EFF               	movlw	-1
 20321  0161B8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20322                           
 20323                           ;mbmc.c: 36:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20324                           ;stkvar	_bn @ sp[(-4)+-5]
 20325  0161BE  0EF7               	movlw	-9
 20326  0161C0  50E3               	movf	plusw1,w,c
 20327  0161C2  0D04               	mullw	4
 20328  0161C4  0E00               	movlw	low lp_filter@smooth
 20329  0161C6  24F3               	addwf	243,w,c
 20330  0161C8  6ED9               	movwf	fsr2l,c
 20331  0161CA  0E03               	movlw	high lp_filter@smooth
 20332  0161CC  20F4               	addwfc	prodh,w,c
 20333  0161CE  6EDA               	movwf	fsr2h,c
 20334  0161D0  006F FF7B FFE6     	movff	postinc2,postinc1
 20335  0161D6  006F FF7B FFE6     	movff	postinc2,postinc1
 20336  0161DC  006F FF7B FFE6     	movff	postinc2,postinc1
 20337  0161E2  006F FF7B FFE6     	movff	postinc2,postinc1
 20338                           
 20339                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20340  0161E8  0EF8               	movlw	-8
 20341  0161EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20342  0161F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20343  0161F6  006F FF8F FFE6     	movff	plusw1,postinc1
 20344  0161FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20345                           
 20346                           ;stkvar	_bn @ sp[(-12)+-5]
 20347  016202  0EEF               	movlw	-17
 20348  016204  50E3               	movf	plusw1,w,c
 20349  016206  0D04               	mullw	4
 20350  016208  0E00               	movlw	low lp_filter@smooth
 20351  01620A  24F3               	addwf	243,w,c
 20352  01620C  6ED9               	movwf	fsr2l,c
 20353  01620E  0E03               	movlw	high lp_filter@smooth
 20354  016210  20F4               	addwfc	prodh,w,c
 20355  016212  6EDA               	movwf	fsr2h,c
 20356  016214  006F FF7B FFE6     	movff	postinc2,postinc1
 20357  01621A  006F FF7B FFE6     	movff	postinc2,postinc1
 20358  016220  006F FF7B FFE6     	movff	postinc2,postinc1
 20359  016226  006F FF7B FFE6     	movff	postinc2,postinc1
 20360                           
 20361                           ;stkvar	_new @ sp[(-16)+-4]
 20362  01622C  0EEC               	movlw	-20
 20363  01622E  006F FF8F FFE6     	movff	plusw1,postinc1
 20364  016234  006F FF8F FFE6     	movff	plusw1,postinc1
 20365  01623A  006F FF8F FFE6     	movff	plusw1,postinc1
 20366  016240  006F FF8F FFE6     	movff	plusw1,postinc1
 20367  016246  EC8B  F0C1         	call	___flsub	;wreg free
 20368  01624A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20369  016250  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20370  016256  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20371  01625C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20372  016262  ECEC  F092         	call	___flmul	;wreg free
 20373  016266  0060  F0CB  FFE6   	movff	btemp,postinc1
 20374  01626C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20375  016272  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20376  016278  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20377  01627E  EC01  F097         	call	___fladd	;wreg free
 20378                           
 20379                           ;stkvar	_bn @ sp[(-4)+-5]
 20380  016282  0EF7               	movlw	-9
 20381  016284  50E3               	movf	plusw1,w,c
 20382  016286  0D04               	mullw	4
 20383  016288  0E00               	movlw	low lp_filter@smooth
 20384  01628A  24F3               	addwf	243,w,c
 20385  01628C  6ED9               	movwf	fsr2l,c
 20386  01628E  0E03               	movlw	high lp_filter@smooth
 20387  016290  20F4               	addwfc	prodh,w,c
 20388  016292  6EDA               	movwf	fsr2h,c
 20389  016294  0060  F0CB  FFDE   	movff	btemp,postinc2
 20390  01629A  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 20391  0162A0  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 20392  0162A6  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 20393  0162AC  52DD               	movf	postdec2,f,c
 20394  0162AE  52DD               	movf	postdec2,f,c
 20395  0162B0  006F FF78  F032    	movff	postinc2,btemp
 20396  0162B6  006F FF78  F033    	movff	postinc2,btemp+1
 20397  0162BC  006F FF78  F034    	movff	postinc2,btemp+2
 20398  0162C2  006F FF78  F035    	movff	postinc2,btemp+3
 20399  0162C8                     l1724:
 20400                           
 20401                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20402  0162C8  0EF6               	movlw	246
 20403  0162CA  26E1               	addwf	fsr1l,f,c
 20404  0162CC  0EFF               	movlw	255
 20405  0162CE  22E2               	addwfc	fsr1h,f,c
 20406  0162D0  0012               	return		;funcret
 20407  0162D2                     __end_of_lp_filter:
 20408                           	opt callstack 0
 20409                           
 20410 ;; *************** function ___flsub *****************
 20411 ;; Defined at:
 20412 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20413 ;; Parameters:    Size  Location     Type
 20414 ;;  b               4  [STACK] float 
 20415 ;;  a               4  [STACK] float 
 20416 ;; Auto vars:     Size  Location     Type
 20417 ;;		None
 20418 ;; Return value:  Size  Location     Type
 20419 ;;                  4  [STACK] float 
 20420 ;; Registers used:
 20421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20422 ;; Tracked objects:
 20423 ;;		On entry : 0/2
 20424 ;;		On exit  : 0/0
 20425 ;;		Unchanged: 0/0
 20426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20431 ;;Total ram usage:        0 bytes
 20432 ;; Hardware stack levels used:    1
 20433 ;; Hardware stack levels required when called:    7
 20434 ;; This function calls:
 20435 ;;		___fladd
 20436 ;; This function is called by:
 20437 ;;		_conv_raw_result
 20438 ;;		_lp_filter
 20439 ;;		_calc_model_data
 20440 ;;		_efgtoa
 20441 ;; This function uses a reentrant model
 20442 ;;
 20443                           
 20444                           	psect	text88
 20445  018316                     __ptext88:
 20446                           	opt callstack 0
 20447  018316                     ___flsub:
 20448                           	opt callstack 16
 20449                           
 20450                           ;stkvar	_a @ sp[(0)+-8]
 20451                           
 20452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20453                           ;incstack = 0
 20454  018316  0EFB               	movlw	-5
 20455  018318  7EE3               	btg	plusw1,7,c
 20456                           
 20457                           ;stkvar	_a @ sp[(0)+-8]
 20458  01831A  0EF8               	movlw	-8
 20459  01831C  006F FF8F FFE6     	movff	plusw1,postinc1
 20460  018322  006F FF8F FFE6     	movff	plusw1,postinc1
 20461  018328  006F FF8F FFE6     	movff	plusw1,postinc1
 20462  01832E  006F FF8F FFE6     	movff	plusw1,postinc1
 20463                           
 20464                           ;stkvar	_b @ sp[(-4)+-4]
 20465  018334  0EF8               	movlw	-8
 20466  018336  006F FF8F FFE6     	movff	plusw1,postinc1
 20467  01833C  006F FF8F FFE6     	movff	plusw1,postinc1
 20468  018342  006F FF8F FFE6     	movff	plusw1,postinc1
 20469  018348  006F FF8F FFE6     	movff	plusw1,postinc1
 20470  01834E  EC01  F097         	call	___fladd	;wreg free
 20471                           
 20472                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20473  018352  0EF8               	movlw	248
 20474  018354  26E1               	addwf	fsr1l,f,c
 20475  018356  0EFF               	movlw	255
 20476  018358  22E2               	addwfc	fsr1h,f,c
 20477  01835A  0012               	return		;funcret
 20478  01835C                     __end_of___flsub:
 20479                           	opt callstack 0
 20480                           
 20481 ;; *************** function ___fladd *****************
 20482 ;; Defined at:
 20483 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20484 ;; Parameters:    Size  Location     Type
 20485 ;;  b               4  [STACK] float 
 20486 ;;  a               4  [STACK] float 
 20487 ;; Auto vars:     Size  Location     Type
 20488 ;;  grs             1  [STACK] unsigned char 
 20489 ;;  bexp            1  [STACK] unsigned char 
 20490 ;;  aexp            1  [STACK] unsigned char 
 20491 ;;  signs           1  [STACK] unsigned char 
 20492 ;; Return value:  Size  Location     Type
 20493 ;;                  4  [STACK] unsigned char 
 20494 ;; Registers used:
 20495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20496 ;; Tracked objects:
 20497 ;;		On entry : 0/5
 20498 ;;		On exit  : 0/0
 20499 ;;		Unchanged: 0/0
 20500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20505 ;;Total ram usage:        0 bytes
 20506 ;; Hardware stack levels used:    1
 20507 ;; Hardware stack levels required when called:    6
 20508 ;; This function calls:
 20509 ;;		Nothing
 20510 ;; This function is called by:
 20511 ;;		_lp_filter
 20512 ;;		_calc_model_data
 20513 ;;		_efgtoa
 20514 ;;		___flsub
 20515 ;; This function uses a reentrant model
 20516 ;;
 20517                           
 20518                           	psect	text89
 20519  012E02                     __ptext89:
 20520                           	opt callstack 0
 20521  012E02                     ___fladd:
 20522                           	opt callstack 0
 20523                           
 20524                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20525  012E02  52E6               	movf	postinc1,f,c
 20526  012E04  52E6               	movf	postinc1,f,c
 20527  012E06  52E6               	movf	postinc1,f,c
 20528  012E08  52E6               	movf	postinc1,f,c
 20529                           
 20530                           ;stkvar	_b @ sp[(-4)+-4]
 20531                           
 20532                           ;incstack = 0
 20533  012E0A  0EFB               	movlw	251
 20534  012E0C  24E1               	addwf	fsr1l,w,c
 20535  012E0E  6ED9               	movwf	fsr2l,c
 20536  012E10  0EFF               	movlw	255
 20537  012E12  20E2               	addwfc	fsr1h,w,c
 20538  012E14  6EDA               	movwf	fsr2h,c
 20539  012E16  50DF               	movf	indf2,w,c
 20540  012E18  6E3D               	movwf	(btemp+11)^0,c
 20541  012E1A  0E80               	movlw	128
 20542  012E1C  163D               	andwf	(btemp+11)^0,f,c
 20543                           
 20544                           ;stkvar	_signs @ sp[(-4)+3]
 20545  012E1E  0EFF               	movlw	-1
 20546  012E20  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20547                           
 20548                           ;stkvar	_b @ sp[(-4)+-4]
 20549  012E26  0EFB               	movlw	251
 20550  012E28  24E1               	addwf	fsr1l,w,c
 20551  012E2A  6ED9               	movwf	fsr2l,c
 20552  012E2C  0EFF               	movlw	255
 20553  012E2E  20E2               	addwfc	fsr1h,w,c
 20554  012E30  6EDA               	movwf	fsr2h,c
 20555  012E32  50DF               	movf	indf2,w,c
 20556  012E34  6E3D               	movwf	(btemp+11)^0,c
 20557  012E36  90D8               	bcf	status,0,c
 20558  012E38  343D               	rlcf	(btemp+11)^0,w,c
 20559  012E3A  6E3C               	movwf	(btemp+10)^0,c
 20560                           
 20561                           ;stkvar	_bexp @ sp[(-4)+1]
 20562  012E3C  0EFD               	movlw	-3
 20563  012E3E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20564                           
 20565                           ;stkvar	_b @ sp[(-4)+-4]
 20566  012E44  0EFA               	movlw	250
 20567  012E46  24E1               	addwf	fsr1l,w,c
 20568  012E48  6ED9               	movwf	fsr2l,c
 20569  012E4A  0EFF               	movlw	255
 20570  012E4C  20E2               	addwfc	fsr1h,w,c
 20571  012E4E  6EDA               	movwf	fsr2h,c
 20572  012E50  AEDF               	btfss	indf2,7,c
 20573  012E52  D002               	goto	l6419
 20574                           
 20575                           ;stkvar	_bexp @ sp[(-4)+1]
 20576  012E54  0EFD               	movlw	-3
 20577  012E56  80E3               	bsf	plusw1,0,c
 20578  012E58                     l6419:
 20579                           
 20580                           ;stkvar	_bexp @ sp[(-4)+1]
 20581  012E58  0EFD               	movlw	-3
 20582  012E5A  50E3               	movf	plusw1,w,c
 20583  012E5C  B4D8               	btfsc	status,2,c
 20584  012E5E  D027               	goto	l6429
 20585                           
 20586                           ;stkvar	_bexp @ sp[(-4)+1]
 20587  012E60  0EFD               	movlw	-3
 20588  012E62  28E3               	incf	plusw1,w,c
 20589  012E64  A4D8               	btfss	status,2,c
 20590  012E66  D018               	goto	l6425
 20591  012E68  0E00               	movlw	0
 20592  012E6A  6E3A               	movwf	(btemp+8)^0,c
 20593  012E6C  0E00               	movlw	0
 20594  012E6E  6E3B               	movwf	(btemp+9)^0,c
 20595  012E70  0E00               	movlw	0
 20596  012E72  6E3C               	movwf	(btemp+10)^0,c
 20597  012E74  0E00               	movlw	0
 20598  012E76  6E3D               	movwf	(btemp+11)^0,c
 20599                           
 20600                           ;stkvar	_b @ sp[(-4)+-4]
 20601  012E78  0EF8               	movlw	-8
 20602  012E7A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20603  012E80  0EF9               	movlw	-7
 20604  012E82  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20605  012E88  0EFA               	movlw	-6
 20606  012E8A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20607  012E90  0EFB               	movlw	-5
 20608  012E92  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20609  012E98                     l6425:
 20610                           
 20611                           ;stkvar	_b @ sp[(-4)+-4]
 20612  012E98  0EFA               	movlw	-6
 20613  012E9A  8EE3               	bsf	plusw1,7,c
 20614                           
 20615                           ;stkvar	_b @ sp[(-4)+-4]
 20616  012E9C  0EFB               	movlw	251
 20617  012E9E  24E1               	addwf	fsr1l,w,c
 20618  012EA0  6ED9               	movwf	fsr2l,c
 20619  012EA2  0EFF               	movlw	255
 20620  012EA4  20E2               	addwfc	fsr1h,w,c
 20621  012EA6  6EDA               	movwf	fsr2h,c
 20622  012EA8  0E00               	movlw	0
 20623  012EAA  6EDF               	movwf	indf2,c
 20624  012EAC  D018               	goto	l6431
 20625  012EAE                     l6429:
 20626  012EAE  0E00               	movlw	0
 20627  012EB0  6E3A               	movwf	(btemp+8)^0,c
 20628  012EB2  0E00               	movlw	0
 20629  012EB4  6E3B               	movwf	(btemp+9)^0,c
 20630  012EB6  0E00               	movlw	0
 20631  012EB8  6E3C               	movwf	(btemp+10)^0,c
 20632  012EBA  0E00               	movlw	0
 20633  012EBC  6E3D               	movwf	(btemp+11)^0,c
 20634                           
 20635                           ;stkvar	_b @ sp[(-4)+-4]
 20636  012EBE  0EF8               	movlw	-8
 20637  012EC0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20638  012EC6  0EF9               	movlw	-7
 20639  012EC8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20640  012ECE  0EFA               	movlw	-6
 20641  012ED0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20642  012ED6  0EFB               	movlw	-5
 20643  012ED8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20644  012EDE                     l6431:
 20645                           
 20646                           ;stkvar	_a @ sp[(-4)+-8]
 20647  012EDE  0EF7               	movlw	247
 20648  012EE0  24E1               	addwf	fsr1l,w,c
 20649  012EE2  6ED9               	movwf	fsr2l,c
 20650  012EE4  0EFF               	movlw	255
 20651  012EE6  20E2               	addwfc	fsr1h,w,c
 20652  012EE8  6EDA               	movwf	fsr2h,c
 20653  012EEA  50DF               	movf	indf2,w,c
 20654  012EEC  6E3D               	movwf	(btemp+11)^0,c
 20655  012EEE  0E80               	movlw	128
 20656  012EF0  163D               	andwf	(btemp+11)^0,f,c
 20657                           
 20658                           ;stkvar	_aexp @ sp[(-4)+2]
 20659  012EF2  0EFE               	movlw	-2
 20660  012EF4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20661                           
 20662                           ;stkvar	_signs @ sp[(-4)+3]
 20663                           ;stkvar	_aexp @ sp[(-4)+2]
 20664  012EFA  50E1               	movf	fsr1l,w,c
 20665  012EFC  0FFE               	addlw	-2
 20666  012EFE  6ED9               	movwf	fsr2l,c
 20667  012F00  50E2               	movf	fsr1h,w,c
 20668  012F02  6EDA               	movwf	fsr2h,c
 20669  012F04  0EFF               	movlw	255
 20670  012F06  22DA               	addwfc	fsr2h,f,c
 20671  012F08  0EFF               	movlw	-1
 20672  012F0A  50E3               	movf	plusw1,w,c
 20673  012F0C  18DE               	xorwf	postinc2,w,c
 20674  012F0E  B4D8               	btfsc	status,2,c
 20675  012F10  D002               	goto	l6437
 20676                           
 20677                           ;stkvar	_signs @ sp[(-4)+3]
 20678  012F12  0EFF               	movlw	-1
 20679  012F14  8CE3               	bsf	plusw1,6,c
 20680  012F16                     l6437:
 20681                           
 20682                           ;stkvar	_a @ sp[(-4)+-8]
 20683  012F16  0EF7               	movlw	247
 20684  012F18  24E1               	addwf	fsr1l,w,c
 20685  012F1A  6ED9               	movwf	fsr2l,c
 20686  012F1C  0EFF               	movlw	255
 20687  012F1E  20E2               	addwfc	fsr1h,w,c
 20688  012F20  6EDA               	movwf	fsr2h,c
 20689  012F22  50DF               	movf	indf2,w,c
 20690  012F24  6E3D               	movwf	(btemp+11)^0,c
 20691  012F26  90D8               	bcf	status,0,c
 20692  012F28  343D               	rlcf	(btemp+11)^0,w,c
 20693  012F2A  6E3C               	movwf	(btemp+10)^0,c
 20694                           
 20695                           ;stkvar	_aexp @ sp[(-4)+2]
 20696  012F2C  0EFE               	movlw	-2
 20697  012F2E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20698                           
 20699                           ;stkvar	_a @ sp[(-4)+-8]
 20700  012F34  0EF6               	movlw	246
 20701  012F36  24E1               	addwf	fsr1l,w,c
 20702  012F38  6ED9               	movwf	fsr2l,c
 20703  012F3A  0EFF               	movlw	255
 20704  012F3C  20E2               	addwfc	fsr1h,w,c
 20705  012F3E  6EDA               	movwf	fsr2h,c
 20706  012F40  AEDF               	btfss	indf2,7,c
 20707  012F42  D002               	goto	l6443
 20708                           
 20709                           ;stkvar	_aexp @ sp[(-4)+2]
 20710  012F44  0EFE               	movlw	-2
 20711  012F46  80E3               	bsf	plusw1,0,c
 20712  012F48                     l6443:
 20713                           
 20714                           ;stkvar	_aexp @ sp[(-4)+2]
 20715  012F48  0EFE               	movlw	-2
 20716  012F4A  50E3               	movf	plusw1,w,c
 20717  012F4C  B4D8               	btfsc	status,2,c
 20718  012F4E  D027               	goto	l6453
 20719                           
 20720                           ;stkvar	_aexp @ sp[(-4)+2]
 20721  012F50  0EFE               	movlw	-2
 20722  012F52  28E3               	incf	plusw1,w,c
 20723  012F54  A4D8               	btfss	status,2,c
 20724  012F56  D018               	goto	l6449
 20725  012F58  0E00               	movlw	0
 20726  012F5A  6E3A               	movwf	(btemp+8)^0,c
 20727  012F5C  0E00               	movlw	0
 20728  012F5E  6E3B               	movwf	(btemp+9)^0,c
 20729  012F60  0E00               	movlw	0
 20730  012F62  6E3C               	movwf	(btemp+10)^0,c
 20731  012F64  0E00               	movlw	0
 20732  012F66  6E3D               	movwf	(btemp+11)^0,c
 20733                           
 20734                           ;stkvar	_a @ sp[(-4)+-8]
 20735  012F68  0EF4               	movlw	-12
 20736  012F6A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20737  012F70  0EF5               	movlw	-11
 20738  012F72  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20739  012F78  0EF6               	movlw	-10
 20740  012F7A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20741  012F80  0EF7               	movlw	-9
 20742  012F82  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20743  012F88                     l6449:
 20744                           
 20745                           ;stkvar	_a @ sp[(-4)+-8]
 20746  012F88  0EF6               	movlw	-10
 20747  012F8A  8EE3               	bsf	plusw1,7,c
 20748                           
 20749                           ;stkvar	_a @ sp[(-4)+-8]
 20750  012F8C  0EF7               	movlw	247
 20751  012F8E  24E1               	addwf	fsr1l,w,c
 20752  012F90  6ED9               	movwf	fsr2l,c
 20753  012F92  0EFF               	movlw	255
 20754  012F94  20E2               	addwfc	fsr1h,w,c
 20755  012F96  6EDA               	movwf	fsr2h,c
 20756  012F98  0E00               	movlw	0
 20757  012F9A  6EDF               	movwf	indf2,c
 20758  012F9C  D018               	goto	l6455
 20759  012F9E                     l6453:
 20760  012F9E  0E00               	movlw	0
 20761  012FA0  6E3A               	movwf	(btemp+8)^0,c
 20762  012FA2  0E00               	movlw	0
 20763  012FA4  6E3B               	movwf	(btemp+9)^0,c
 20764  012FA6  0E00               	movlw	0
 20765  012FA8  6E3C               	movwf	(btemp+10)^0,c
 20766  012FAA  0E00               	movlw	0
 20767  012FAC  6E3D               	movwf	(btemp+11)^0,c
 20768                           
 20769                           ;stkvar	_a @ sp[(-4)+-8]
 20770  012FAE  0EF4               	movlw	-12
 20771  012FB0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20772  012FB6  0EF5               	movlw	-11
 20773  012FB8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20774  012FBE  0EF6               	movlw	-10
 20775  012FC0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20776  012FC6  0EF7               	movlw	-9
 20777  012FC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20778  012FCE                     l6455:
 20779                           
 20780                           ;stkvar	_bexp @ sp[(-4)+1]
 20781                           ;stkvar	_aexp @ sp[(-4)+2]
 20782  012FCE  50E1               	movf	fsr1l,w,c
 20783  012FD0  0FFE               	addlw	-2
 20784  012FD2  6ED9               	movwf	fsr2l,c
 20785  012FD4  50E2               	movf	fsr1h,w,c
 20786  012FD6  6EDA               	movwf	fsr2h,c
 20787  012FD8  0EFF               	movlw	255
 20788  012FDA  22DA               	addwfc	fsr2h,f,c
 20789  012FDC  0EFD               	movlw	-3
 20790  012FDE  50E3               	movf	plusw1,w,c
 20791  012FE0  5CDE               	subwf	postinc2,w,c
 20792  012FE2  B0D8               	btfsc	status,0,c
 20793  012FE4  D0A4               	goto	l6491
 20794                           
 20795                           ;stkvar	_signs @ sp[(-4)+3]
 20796  012FE6  0EFF               	movlw	-1
 20797  012FE8  ACE3               	btfss	plusw1,6,c
 20798  012FEA  D002               	goto	l6461
 20799                           
 20800                           ;stkvar	_signs @ sp[(-4)+3]
 20801  012FEC  0EFF               	movlw	-1
 20802  012FEE  7EE3               	btg	plusw1,7,c
 20803  012FF0                     l6461:
 20804                           
 20805                           ;stkvar	_bexp @ sp[(-4)+1]
 20806                           ;stkvar	_grs @ sp[(-4)+0]
 20807  012FF0  0EFD               	movlw	-3
 20808  012FF2  006F FF8C  F032    	movff	plusw1,btemp
 20809  012FF8  0EFC               	movlw	-4
 20810  012FFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 20811                           
 20812                           ;stkvar	_aexp @ sp[(-4)+2]
 20813                           ;stkvar	_bexp @ sp[(-4)+1]
 20814  013000  0EFE               	movlw	-2
 20815  013002  006F FF8C  F032    	movff	plusw1,btemp
 20816  013008  0EFD               	movlw	-3
 20817  01300A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20818                           
 20819                           ;stkvar	_grs @ sp[(-4)+0]
 20820                           ;stkvar	_aexp @ sp[(-4)+2]
 20821  013010  0EFC               	movlw	-4
 20822  013012  006F FF8C  F032    	movff	plusw1,btemp
 20823  013018  0EFE               	movlw	-2
 20824  01301A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20825                           
 20826                           ;stkvar	_b @ sp[(-4)+-4]
 20827                           ;stkvar	_grs @ sp[(-4)+0]
 20828  013020  0EF8               	movlw	-8
 20829  013022  006F FF8C  F032    	movff	plusw1,btemp
 20830  013028  0EFC               	movlw	-4
 20831  01302A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20832                           
 20833                           ;stkvar	_a @ sp[(-4)+-8]
 20834                           ;stkvar	_b @ sp[(-4)+-4]
 20835  013030  0EF4               	movlw	-12
 20836  013032  006F FF8C  F032    	movff	plusw1,btemp
 20837  013038  0EF8               	movlw	-8
 20838  01303A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20839                           
 20840                           ;stkvar	_grs @ sp[(-4)+0]
 20841                           ;stkvar	_a @ sp[(-4)+-8]
 20842  013040  0EFC               	movlw	-4
 20843  013042  006F FF8C  F032    	movff	plusw1,btemp
 20844  013048  0EF4               	movlw	-12
 20845  01304A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20846                           
 20847                           ;stkvar	_b @ sp[(-4)+-4]
 20848  013050  0EF9               	movlw	249
 20849  013052  24E1               	addwf	fsr1l,w,c
 20850  013054  6ED9               	movwf	fsr2l,c
 20851  013056  0EFF               	movlw	255
 20852  013058  20E2               	addwfc	fsr1h,w,c
 20853  01305A  6EDA               	movwf	fsr2h,c
 20854  01305C  50DF               	movf	indf2,w,c
 20855  01305E  6E3D               	movwf	(btemp+11)^0,c
 20856                           
 20857                           ;stkvar	_grs @ sp[(-4)+0]
 20858  013060  0EFC               	movlw	-4
 20859  013062  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20860                           
 20861                           ;stkvar	_a @ sp[(-4)+-8]
 20862  013068  0EF5               	movlw	245
 20863  01306A  24E1               	addwf	fsr1l,w,c
 20864  01306C  6ED9               	movwf	fsr2l,c
 20865  01306E  0EFF               	movlw	255
 20866  013070  20E2               	addwfc	fsr1h,w,c
 20867  013072  6EDA               	movwf	fsr2h,c
 20868                           
 20869                           ;stkvar	_b @ sp[(-4)+-4]
 20870  013074  0EF9               	movlw	249
 20871  013076  24E1               	addwf	fsr1l,w,c
 20872  013078  6EE9               	movwf	fsr0l,c
 20873  01307A  0EFF               	movlw	255
 20874  01307C  20E2               	addwfc	fsr1h,w,c
 20875  01307E  6EEA               	movwf	fsr0h,c
 20876  013080  006F FF7F FFEF     	movff	indf2,indf0
 20877                           
 20878                           ;stkvar	_grs @ sp[(-4)+0]
 20879                           ;stkvar	_a @ sp[(-4)+-8]
 20880  013086  0EF5               	movlw	245
 20881  013088  24E1               	addwf	fsr1l,w,c
 20882  01308A  6ED9               	movwf	fsr2l,c
 20883  01308C  0EFF               	movlw	255
 20884  01308E  20E2               	addwfc	fsr1h,w,c
 20885  013090  6EDA               	movwf	fsr2h,c
 20886  013092  0EFC               	movlw	-4
 20887  013094  006F FF8F FFDF     	movff	plusw1,indf2
 20888                           
 20889                           ;stkvar	_b @ sp[(-4)+-4]
 20890  01309A  0EFA               	movlw	250
 20891  01309C  24E1               	addwf	fsr1l,w,c
 20892  01309E  6ED9               	movwf	fsr2l,c
 20893  0130A0  0EFF               	movlw	255
 20894  0130A2  20E2               	addwfc	fsr1h,w,c
 20895  0130A4  6EDA               	movwf	fsr2h,c
 20896  0130A6  50DF               	movf	indf2,w,c
 20897  0130A8  6E3D               	movwf	(btemp+11)^0,c
 20898                           
 20899                           ;stkvar	_grs @ sp[(-4)+0]
 20900  0130AA  0EFC               	movlw	-4
 20901  0130AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20902                           
 20903                           ;stkvar	_a @ sp[(-4)+-8]
 20904  0130B2  0EF6               	movlw	246
 20905  0130B4  24E1               	addwf	fsr1l,w,c
 20906  0130B6  6ED9               	movwf	fsr2l,c
 20907  0130B8  0EFF               	movlw	255
 20908  0130BA  20E2               	addwfc	fsr1h,w,c
 20909  0130BC  6EDA               	movwf	fsr2h,c
 20910                           
 20911                           ;stkvar	_b @ sp[(-4)+-4]
 20912  0130BE  0EFA               	movlw	250
 20913  0130C0  24E1               	addwf	fsr1l,w,c
 20914  0130C2  6EE9               	movwf	fsr0l,c
 20915  0130C4  0EFF               	movlw	255
 20916  0130C6  20E2               	addwfc	fsr1h,w,c
 20917  0130C8  6EEA               	movwf	fsr0h,c
 20918  0130CA  006F FF7F FFEF     	movff	indf2,indf0
 20919                           
 20920                           ;stkvar	_grs @ sp[(-4)+0]
 20921                           ;stkvar	_a @ sp[(-4)+-8]
 20922  0130D0  0EF6               	movlw	246
 20923  0130D2  24E1               	addwf	fsr1l,w,c
 20924  0130D4  6ED9               	movwf	fsr2l,c
 20925  0130D6  0EFF               	movlw	255
 20926  0130D8  20E2               	addwfc	fsr1h,w,c
 20927  0130DA  6EDA               	movwf	fsr2h,c
 20928  0130DC  0EFC               	movlw	-4
 20929  0130DE  006F FF8F FFDF     	movff	plusw1,indf2
 20930                           
 20931                           ;stkvar	_b @ sp[(-4)+-4]
 20932  0130E4  0EFB               	movlw	251
 20933  0130E6  24E1               	addwf	fsr1l,w,c
 20934  0130E8  6ED9               	movwf	fsr2l,c
 20935  0130EA  0EFF               	movlw	255
 20936  0130EC  20E2               	addwfc	fsr1h,w,c
 20937  0130EE  6EDA               	movwf	fsr2h,c
 20938  0130F0  50DF               	movf	indf2,w,c
 20939  0130F2  6E3D               	movwf	(btemp+11)^0,c
 20940                           
 20941                           ;stkvar	_grs @ sp[(-4)+0]
 20942  0130F4  0EFC               	movlw	-4
 20943  0130F6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20944                           
 20945                           ;stkvar	_a @ sp[(-4)+-8]
 20946  0130FC  0EF7               	movlw	247
 20947  0130FE  24E1               	addwf	fsr1l,w,c
 20948  013100  6ED9               	movwf	fsr2l,c
 20949  013102  0EFF               	movlw	255
 20950  013104  20E2               	addwfc	fsr1h,w,c
 20951  013106  6EDA               	movwf	fsr2h,c
 20952                           
 20953                           ;stkvar	_b @ sp[(-4)+-4]
 20954  013108  0EFB               	movlw	251
 20955  01310A  24E1               	addwf	fsr1l,w,c
 20956  01310C  6EE9               	movwf	fsr0l,c
 20957  01310E  0EFF               	movlw	255
 20958  013110  20E2               	addwfc	fsr1h,w,c
 20959  013112  6EEA               	movwf	fsr0h,c
 20960  013114  006F FF7F FFEF     	movff	indf2,indf0
 20961                           
 20962                           ;stkvar	_grs @ sp[(-4)+0]
 20963                           ;stkvar	_a @ sp[(-4)+-8]
 20964  01311A  0EF7               	movlw	247
 20965  01311C  24E1               	addwf	fsr1l,w,c
 20966  01311E  6ED9               	movwf	fsr2l,c
 20967  013120  0EFF               	movlw	255
 20968  013122  20E2               	addwfc	fsr1h,w,c
 20969  013124  6EDA               	movwf	fsr2h,c
 20970  013126  0EFC               	movlw	-4
 20971  013128  006F FF8F FFDF     	movff	plusw1,indf2
 20972  01312E                     l6491:
 20973                           
 20974                           ;stkvar	_grs @ sp[(-4)+0]
 20975  01312E  0EFC               	movlw	-4
 20976  013130  6AE3               	clrf	plusw1,c
 20977                           
 20978                           ;stkvar	_aexp @ sp[(-4)+2]
 20979  013132  0EFE               	movlw	-2
 20980  013134  50E3               	movf	plusw1,w,c
 20981  013136  6E3C               	movwf	(btemp+10)^0,c
 20982  013138  6A3D               	clrf	(btemp+11)^0,c
 20983                           
 20984                           ;stkvar	_bexp @ sp[(-4)+1]
 20985  01313A  0EFD               	movlw	-3
 20986  01313C  50E3               	movf	plusw1,w,c
 20987  01313E  5E3C               	subwf	(btemp+10)^0,f,c
 20988  013140  0E00               	movlw	0
 20989  013142  5A3D               	subwfb	(btemp+11)^0,f,c
 20990  013144  BE3D               	btfsc	(btemp+11)^0,7,c
 20991  013146  D062               	goto	l6515
 20992  013148  503D               	movf	(btemp+11)^0,w,c
 20993  01314A  E104               	bnz	u4750
 20994  01314C  0E1A               	movlw	26
 20995  01314E  5C3C               	subwf	(btemp+10)^0,w,c
 20996  013150  A0D8               	btfss	status,0,c
 20997  013152  D05C               	goto	l6515
 20998  013154                     u4750:
 20999                           
 21000                           ;stkvar	_b @ sp[(-4)+-4]
 21001  013154  0EF8               	movlw	-8
 21002  013156  50E3               	movf	plusw1,w,c
 21003  013158  E10A               	bnz	u4761
 21004  01315A  0EF9               	movlw	-7
 21005  01315C  50E3               	movf	plusw1,w,c
 21006  01315E  E107               	bnz	u4761
 21007  013160  0EFA               	movlw	-6
 21008  013162  50E3               	movf	plusw1,w,c
 21009  013164  E104               	bnz	u4761
 21010  013166  0EFB               	movlw	-5
 21011  013168  50E3               	movf	plusw1,w,c
 21012  01316A  B4D8               	btfsc	status,2,c
 21013  01316C  D003               	goto	u4760
 21014  01316E                     u4761:
 21015  01316E  6A3D               	clrf	(btemp+11)^0,c
 21016  013170  2A3D               	incf	(btemp+11)^0,f,c
 21017  013172  D001               	goto	u4778
 21018  013174                     u4760:
 21019  013174  6A3D               	clrf	(btemp+11)^0,c
 21020  013176                     u4778:
 21021                           
 21022                           ;stkvar	_grs @ sp[(-4)+0]
 21023  013176  0EFC               	movlw	-4
 21024  013178  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21025                           
 21026                           ;stkvar	_b @ sp[(-4)+-4]
 21027  01317E  0EF8               	movlw	-8
 21028  013180  6AE3               	clrf	plusw1,c
 21029  013182  0EF9               	movlw	-7
 21030  013184  6AE3               	clrf	plusw1,c
 21031  013186  0EFA               	movlw	-6
 21032  013188  6AE3               	clrf	plusw1,c
 21033  01318A  0EFB               	movlw	-5
 21034  01318C  6AE3               	clrf	plusw1,c
 21035                           
 21036                           ;stkvar	_aexp @ sp[(-4)+2]
 21037                           ;stkvar	_bexp @ sp[(-4)+1]
 21038  01318E  0EFE               	movlw	-2
 21039  013190  006F FF8C  F032    	movff	plusw1,btemp
 21040  013196  0EFD               	movlw	-3
 21041  013198  0060  F0CB  FFE3   	movff	btemp,plusw1
 21042  01319E  D042               	goto	u4810
 21043  0131A0                     l6501:
 21044                           
 21045                           ;stkvar	_grs @ sp[(-4)+0]
 21046  0131A0  0EFC               	movlw	-4
 21047  0131A2  A0E3               	btfss	plusw1,0,c
 21048  0131A4  D00D               	goto	l6505
 21049                           
 21050                           ;stkvar	_grs @ sp[(-4)+0]
 21051  0131A6  0EFC               	movlw	-4
 21052  0131A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 21053  0131AE  90D8               	bcf	status,0,c
 21054  0131B0  323D               	rrcf	(btemp+11)^0,f,c
 21055  0131B2  0E01               	movlw	1
 21056  0131B4  123D               	iorwf	(btemp+11)^0,f,c
 21057                           
 21058                           ;stkvar	_grs @ sp[(-4)+0]
 21059  0131B6  0EFC               	movlw	-4
 21060  0131B8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21061  0131BE  D009               	goto	l6507
 21062  0131C0                     l6505:
 21063                           
 21064                           ;stkvar	_grs @ sp[(-4)+0]
 21065  0131C0  50E1               	movf	fsr1l,w,c
 21066  0131C2  0FFC               	addlw	-4
 21067  0131C4  6ED9               	movwf	fsr2l,c
 21068  0131C6  50E2               	movf	fsr1h,w,c
 21069  0131C8  6EDA               	movwf	fsr2h,c
 21070  0131CA  0EFF               	movlw	255
 21071  0131CC  22DA               	addwfc	fsr2h,f,c
 21072  0131CE  90D8               	bcf	status,0,c
 21073  0131D0  32DF               	rrcf	indf2,f,c
 21074  0131D2                     l6507:
 21075                           
 21076                           ;stkvar	_b @ sp[(-4)+-4]
 21077  0131D2  0EF8               	movlw	-8
 21078  0131D4  A0E3               	btfss	plusw1,0,c
 21079  0131D6  D002               	goto	l6511
 21080                           
 21081                           ;stkvar	_grs @ sp[(-4)+0]
 21082  0131D8  0EFC               	movlw	-4
 21083  0131DA  8EE3               	bsf	plusw1,7,c
 21084  0131DC                     l6511:
 21085  0131DC  0E01               	movlw	1
 21086  0131DE  6E3D               	movwf	(btemp+11)^0,c
 21087                           
 21088                           ;stkvar	_b @ sp[(-4)+-4]
 21089  0131E0  50E1               	movf	fsr1l,w,c
 21090  0131E2  0FF8               	addlw	-8
 21091  0131E4  6ED9               	movwf	fsr2l,c
 21092  0131E6  50E2               	movf	fsr1h,w,c
 21093  0131E8  6EDA               	movwf	fsr2h,c
 21094  0131EA  0EFF               	movlw	255
 21095  0131EC  22DA               	addwfc	fsr2h,f,c
 21096  0131EE  283D               	incf	(btemp+11)^0,w,c
 21097  0131F0  52DE               	movf	postinc2,f,c
 21098  0131F2  D008               	goto	u4800
 21099  0131F4                     u4805:
 21100  0131F4  52DE               	movf	postinc2,f,c
 21101  0131F6  90D8               	bcf	status,0,c
 21102  0131F8  BEDC               	btfsc	preinc2,7,c
 21103  0131FA  80D8               	bsf	status,0,c
 21104  0131FC  32DD               	rrcf	postdec2,f,c
 21105  0131FE  32DD               	rrcf	postdec2,f,c
 21106  013200  32DD               	rrcf	postdec2,f,c
 21107  013202  32DE               	rrcf	postinc2,f,c
 21108  013204                     u4800:
 21109  013204  2EE8               	decfsz	wreg,f,c
 21110  013206  D7F6               	goto	u4805
 21111                           
 21112                           ;stkvar	_bexp @ sp[(-4)+1]
 21113  013208  0EFD               	movlw	-3
 21114  01320A  2AE3               	incf	plusw1,f,c
 21115  01320C                     l6515:
 21116                           
 21117                           ;stkvar	_aexp @ sp[(-4)+2]
 21118                           ;stkvar	_bexp @ sp[(-4)+1]
 21119  01320C  50E1               	movf	fsr1l,w,c
 21120  01320E  0FFD               	addlw	-3
 21121  013210  6ED9               	movwf	fsr2l,c
 21122  013212  50E2               	movf	fsr1h,w,c
 21123  013214  6EDA               	movwf	fsr2h,c
 21124  013216  0EFF               	movlw	255
 21125  013218  22DA               	addwfc	fsr2h,f,c
 21126  01321A  0EFE               	movlw	-2
 21127  01321C  50E3               	movf	plusw1,w,c
 21128  01321E  5CDE               	subwf	postinc2,w,c
 21129  013220  A0D8               	btfss	status,0,c
 21130  013222  D7BE               	goto	l6501
 21131  013224                     u4810:
 21132                           
 21133                           ;stkvar	_signs @ sp[(-4)+3]
 21134  013224  0EFF               	movlw	-1
 21135  013226  BCE3               	btfsc	plusw1,6,c
 21136  013228  D066               	goto	l6543
 21137                           
 21138                           ;stkvar	_bexp @ sp[(-4)+1]
 21139  01322A  0EFD               	movlw	-3
 21140  01322C  50E3               	movf	plusw1,w,c
 21141  01322E  B4D8               	btfsc	status,2,c
 21142  013230  D0F2               	goto	u4910
 21143                           
 21144                           ;stkvar	_a @ sp[(-4)+-8]
 21145                           ;stkvar	_b @ sp[(-4)+-4]
 21146  013232  0EF8               	movlw	-8
 21147  013234  50E3               	movf	plusw1,w,c
 21148  013236  6E32               	movwf	btemp^0,c
 21149  013238  0EF4               	movlw	-12
 21150  01323A  50E3               	movf	plusw1,w,c
 21151  01323C  2632               	addwf	btemp^0,f,c
 21152  01323E  0EF8               	movlw	-8
 21153  013240  0060  F0CB  FFE3   	movff	btemp,plusw1
 21154  013246  0EF9               	movlw	-7
 21155  013248  50E3               	movf	plusw1,w,c
 21156  01324A  6E32               	movwf	btemp^0,c
 21157  01324C  0EF5               	movlw	-11
 21158  01324E  50E3               	movf	plusw1,w,c
 21159  013250  2232               	addwfc	btemp^0,f,c
 21160  013252  0EF9               	movlw	-7
 21161  013254  0060  F0CB  FFE3   	movff	btemp,plusw1
 21162  01325A  0EFA               	movlw	-6
 21163  01325C  50E3               	movf	plusw1,w,c
 21164  01325E  6E32               	movwf	btemp^0,c
 21165  013260  0EF6               	movlw	-10
 21166  013262  50E3               	movf	plusw1,w,c
 21167  013264  2232               	addwfc	btemp^0,f,c
 21168  013266  0EFA               	movlw	-6
 21169  013268  0060  F0CB  FFE3   	movff	btemp,plusw1
 21170  01326E  0EFB               	movlw	-5
 21171  013270  50E3               	movf	plusw1,w,c
 21172  013272  6E32               	movwf	btemp^0,c
 21173  013274  0EF7               	movlw	-9
 21174  013276  50E3               	movf	plusw1,w,c
 21175  013278  2232               	addwfc	btemp^0,f,c
 21176  01327A  0EFB               	movlw	-5
 21177  01327C  0060  F0CB  FFE3   	movff	btemp,plusw1
 21178                           
 21179                           ;stkvar	_b @ sp[(-4)+-4]
 21180  013282  0EFB               	movlw	-5
 21181  013284  A0E3               	btfss	plusw1,0,c
 21182  013286  D101               	goto	u4950
 21183                           
 21184                           ;stkvar	_grs @ sp[(-4)+0]
 21185  013288  0EFC               	movlw	-4
 21186  01328A  A0E3               	btfss	plusw1,0,c
 21187  01328C  D00D               	goto	l6533
 21188                           
 21189                           ;stkvar	_grs @ sp[(-4)+0]
 21190  01328E  0EFC               	movlw	-4
 21191  013290  006F FF8C  F03D    	movff	plusw1,btemp+11
 21192  013296  90D8               	bcf	status,0,c
 21193  013298  323D               	rrcf	(btemp+11)^0,f,c
 21194  01329A  0E01               	movlw	1
 21195  01329C  123D               	iorwf	(btemp+11)^0,f,c
 21196                           
 21197                           ;stkvar	_grs @ sp[(-4)+0]
 21198  01329E  0EFC               	movlw	-4
 21199  0132A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21200  0132A6  D009               	goto	l6535
 21201  0132A8                     l6533:
 21202                           
 21203                           ;stkvar	_grs @ sp[(-4)+0]
 21204  0132A8  50E1               	movf	fsr1l,w,c
 21205  0132AA  0FFC               	addlw	-4
 21206  0132AC  6ED9               	movwf	fsr2l,c
 21207  0132AE  50E2               	movf	fsr1h,w,c
 21208  0132B0  6EDA               	movwf	fsr2h,c
 21209  0132B2  0EFF               	movlw	255
 21210  0132B4  22DA               	addwfc	fsr2h,f,c
 21211  0132B6  90D8               	bcf	status,0,c
 21212  0132B8  32DF               	rrcf	indf2,f,c
 21213  0132BA                     l6535:
 21214                           
 21215                           ;stkvar	_b @ sp[(-4)+-4]
 21216  0132BA  0EF8               	movlw	-8
 21217  0132BC  A0E3               	btfss	plusw1,0,c
 21218  0132BE  D002               	goto	l6539
 21219                           
 21220                           ;stkvar	_grs @ sp[(-4)+0]
 21221  0132C0  0EFC               	movlw	-4
 21222  0132C2  8EE3               	bsf	plusw1,7,c
 21223  0132C4                     l6539:
 21224  0132C4  0E01               	movlw	1
 21225  0132C6  6E3D               	movwf	(btemp+11)^0,c
 21226                           
 21227                           ;stkvar	_b @ sp[(-4)+-4]
 21228  0132C8  50E1               	movf	fsr1l,w,c
 21229  0132CA  0FF8               	addlw	-8
 21230  0132CC  6ED9               	movwf	fsr2l,c
 21231  0132CE  50E2               	movf	fsr1h,w,c
 21232  0132D0  6EDA               	movwf	fsr2h,c
 21233  0132D2  0EFF               	movlw	255
 21234  0132D4  22DA               	addwfc	fsr2h,f,c
 21235  0132D6  283D               	incf	(btemp+11)^0,w,c
 21236  0132D8  52DE               	movf	postinc2,f,c
 21237  0132DA  D008               	goto	u4870
 21238  0132DC                     u4875:
 21239  0132DC  52DE               	movf	postinc2,f,c
 21240  0132DE  90D8               	bcf	status,0,c
 21241  0132E0  BEDC               	btfsc	preinc2,7,c
 21242  0132E2  80D8               	bsf	status,0,c
 21243  0132E4  32DD               	rrcf	postdec2,f,c
 21244  0132E6  32DD               	rrcf	postdec2,f,c
 21245  0132E8  32DD               	rrcf	postdec2,f,c
 21246  0132EA  32DE               	rrcf	postinc2,f,c
 21247  0132EC                     u4870:
 21248  0132EC  2EE8               	decfsz	wreg,f,c
 21249  0132EE  D7F6               	goto	u4875
 21250                           
 21251                           ;stkvar	_bexp @ sp[(-4)+1]
 21252  0132F0  0EFD               	movlw	-3
 21253  0132F2  2AE3               	incf	plusw1,f,c
 21254  0132F4  D0CA               	goto	u4950
 21255  0132F6                     l6543:
 21256                           
 21257                           ;stkvar	_a @ sp[(-4)+-8]
 21258                           ;stkvar	_b @ sp[(-4)+-4]
 21259  0132F6  50E1               	movf	fsr1l,w,c
 21260  0132F8  0FF8               	addlw	-8
 21261  0132FA  6ED9               	movwf	fsr2l,c
 21262  0132FC  50E2               	movf	fsr1h,w,c
 21263  0132FE  6EDA               	movwf	fsr2h,c
 21264  013300  0EFF               	movlw	255
 21265  013302  22DA               	addwfc	fsr2h,f,c
 21266  013304  0EF4               	movlw	-12
 21267  013306  50E3               	movf	plusw1,w,c
 21268  013308  5CDE               	subwf	postinc2,w,c
 21269  01330A  0EF5               	movlw	-11
 21270  01330C  50E3               	movf	plusw1,w,c
 21271  01330E  58DE               	subwfb	postinc2,w,c
 21272  013310  0EF6               	movlw	-10
 21273  013312  50E3               	movf	plusw1,w,c
 21274  013314  58DE               	subwfb	postinc2,w,c
 21275  013316  50DE               	movf	postinc2,w,c
 21276  013318  0A80               	xorlw	128
 21277  01331A  6E32               	movwf	btemp^0,c
 21278  01331C  0EF7               	movlw	-9
 21279  01331E  50E3               	movf	plusw1,w,c
 21280  013320  0A80               	xorlw	128
 21281  013322  5832               	subwfb	btemp^0,w,c
 21282  013324  B0D8               	btfsc	status,0,c
 21283  013326  D053               	goto	l6555
 21284                           
 21285                           ;stkvar	_b @ sp[(-4)+-4]
 21286                           ;stkvar	_a @ sp[(-4)+-8]
 21287  013328  0EF4               	movlw	-12
 21288  01332A  006F FF8C  F03A    	movff	plusw1,btemp+8
 21289  013330  0EF5               	movlw	-11
 21290  013332  006F FF8C  F03B    	movff	plusw1,btemp+9
 21291  013338  0EF6               	movlw	-10
 21292  01333A  006F FF8C  F03C    	movff	plusw1,btemp+10
 21293  013340  0EF7               	movlw	-9
 21294  013342  006F FF8C  F03D    	movff	plusw1,btemp+11
 21295  013348  0EF8               	movlw	-8
 21296  01334A  50E3               	movf	plusw1,w,c
 21297  01334C  5E3A               	subwf	(btemp+8)^0,f,c
 21298  01334E  0EF9               	movlw	-7
 21299  013350  50E3               	movf	plusw1,w,c
 21300  013352  5A3B               	subwfb	(btemp+9)^0,f,c
 21301  013354  0EFA               	movlw	-6
 21302  013356  50E3               	movf	plusw1,w,c
 21303  013358  5A3C               	subwfb	(btemp+10)^0,f,c
 21304  01335A  0EFB               	movlw	-5
 21305  01335C  50E3               	movf	plusw1,w,c
 21306  01335E  5A3D               	subwfb	(btemp+11)^0,f,c
 21307  013360  0EFF               	movlw	255
 21308  013362  243A               	addwf	(btemp+8)^0,w,c
 21309  013364  6E36               	movwf	(btemp+4)^0,c
 21310  013366  0EFF               	movlw	255
 21311  013368  203B               	addwfc	(btemp+9)^0,w,c
 21312  01336A  6E37               	movwf	(btemp+5)^0,c
 21313  01336C  0EFF               	movlw	255
 21314  01336E  203C               	addwfc	(btemp+10)^0,w,c
 21315  013370  6E38               	movwf	(btemp+6)^0,c
 21316  013372  0EFF               	movlw	255
 21317  013374  203D               	addwfc	(btemp+11)^0,w,c
 21318  013376  6E39               	movwf	(btemp+7)^0,c
 21319                           
 21320                           ;stkvar	_b @ sp[(-4)+-4]
 21321  013378  0EF8               	movlw	-8
 21322  01337A  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21323  013380  0EF9               	movlw	-7
 21324  013382  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21325  013388  0EFA               	movlw	-6
 21326  01338A  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21327  013390  0EFB               	movlw	-5
 21328  013392  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21329                           
 21330                           ;stkvar	_signs @ sp[(-4)+3]
 21331  013398  0EFF               	movlw	-1
 21332  01339A  7EE3               	btg	plusw1,7,c
 21333                           
 21334                           ;stkvar	_grs @ sp[(-4)+0]
 21335  01339C  0EFC               	movlw	-4
 21336  01339E  50E3               	movf	plusw1,w,c
 21337  0133A0  0800               	sublw	0
 21338  0133A2  6E3D               	movwf	(btemp+11)^0,c
 21339                           
 21340                           ;stkvar	_grs @ sp[(-4)+0]
 21341  0133A4  0EFC               	movlw	-4
 21342  0133A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21343                           
 21344                           ;stkvar	_grs @ sp[(-4)+0]
 21345  0133AC  0EFC               	movlw	-4
 21346  0133AE  50E3               	movf	plusw1,w,c
 21347  0133B0  A4D8               	btfss	status,2,c
 21348  0133B2  D020               	goto	l6557
 21349                           
 21350                           ;stkvar	_b @ sp[(-4)+-4]
 21351  0133B4  50E1               	movf	fsr1l,w,c
 21352  0133B6  0FF8               	addlw	-8
 21353  0133B8  6ED9               	movwf	fsr2l,c
 21354  0133BA  50E2               	movf	fsr1h,w,c
 21355  0133BC  6EDA               	movwf	fsr2h,c
 21356  0133BE  0EFF               	movlw	255
 21357  0133C0  22DA               	addwfc	fsr2h,f,c
 21358  0133C2  2ADE               	incf	postinc2,f,c
 21359  0133C4  0E00               	movlw	0
 21360  0133C6  22DE               	addwfc	postinc2,f,c
 21361  0133C8  22DE               	addwfc	postinc2,f,c
 21362  0133CA  22DE               	addwfc	postinc2,f,c
 21363  0133CC  D013               	goto	l6557
 21364  0133CE                     l6555:
 21365                           
 21366                           ;stkvar	_a @ sp[(-4)+-8]
 21367                           ;stkvar	_b @ sp[(-4)+-4]
 21368  0133CE  50E1               	movf	fsr1l,w,c
 21369  0133D0  0FF8               	addlw	-8
 21370  0133D2  6ED9               	movwf	fsr2l,c
 21371  0133D4  50E2               	movf	fsr1h,w,c
 21372  0133D6  6EDA               	movwf	fsr2h,c
 21373  0133D8  0EFF               	movlw	255
 21374  0133DA  22DA               	addwfc	fsr2h,f,c
 21375  0133DC  0EF4               	movlw	-12
 21376  0133DE  50E3               	movf	plusw1,w,c
 21377  0133E0  5EDE               	subwf	postinc2,f,c
 21378  0133E2  0EF5               	movlw	-11
 21379  0133E4  50E3               	movf	plusw1,w,c
 21380  0133E6  5ADE               	subwfb	postinc2,f,c
 21381  0133E8  0EF6               	movlw	-10
 21382  0133EA  50E3               	movf	plusw1,w,c
 21383  0133EC  5ADE               	subwfb	postinc2,f,c
 21384  0133EE  0EF7               	movlw	-9
 21385  0133F0  50E3               	movf	plusw1,w,c
 21386  0133F2  5ADE               	subwfb	postinc2,f,c
 21387  0133F4                     l6557:
 21388                           
 21389                           ;stkvar	_b @ sp[(-4)+-4]
 21390  0133F4  0EF8               	movlw	-8
 21391  0133F6  50E3               	movf	plusw1,w,c
 21392  0133F8  E145               	bnz	l6579
 21393  0133FA  0EF9               	movlw	-7
 21394  0133FC  50E3               	movf	plusw1,w,c
 21395  0133FE  E142               	bnz	l6579
 21396  013400  0EFA               	movlw	-6
 21397  013402  50E3               	movf	plusw1,w,c
 21398  013404  E13F               	bnz	l6579
 21399  013406  0EFB               	movlw	-5
 21400  013408  50E3               	movf	plusw1,w,c
 21401  01340A  A4D8               	btfss	status,2,c
 21402  01340C  D03B               	goto	l6579
 21403                           
 21404                           ;stkvar	_grs @ sp[(-4)+0]
 21405  01340E  0EFC               	movlw	-4
 21406  013410  50E3               	movf	plusw1,w,c
 21407  013412  A4D8               	btfss	status,2,c
 21408  013414  D037               	goto	l6579
 21409  013416                     u4910:
 21410  013416  0E00               	movlw	0
 21411  013418  6E32               	movwf	btemp^0,c
 21412  01341A  0E00               	movlw	0
 21413  01341C  6E33               	movwf	(btemp+1)^0,c
 21414  01341E  0E00               	movlw	0
 21415  013420  6E34               	movwf	(btemp+2)^0,c
 21416  013422  0E00               	movlw	0
 21417  013424  6E35               	movwf	(btemp+3)^0,c
 21418  013426  D0C6               	goto	l2643
 21419  013428                     l6565:
 21420                           
 21421                           ;stkvar	_b @ sp[(-4)+-4]
 21422  013428  90D8               	bcf	status,0,c
 21423  01342A  0EF8               	movlw	-8
 21424  01342C  36E3               	rlcf	plusw1,f,c
 21425  01342E  0EF9               	movlw	-7
 21426  013430  36E3               	rlcf	plusw1,f,c
 21427  013432  0EFA               	movlw	-6
 21428  013434  36E3               	rlcf	plusw1,f,c
 21429  013436  0EFB               	movlw	-5
 21430  013438  36E3               	rlcf	plusw1,f,c
 21431                           
 21432                           ;stkvar	_grs @ sp[(-4)+0]
 21433  01343A  0EFC               	movlw	-4
 21434  01343C  AEE3               	btfss	plusw1,7,c
 21435  01343E  D002               	goto	l2655
 21436                           
 21437                           ;stkvar	_b @ sp[(-4)+-4]
 21438  013440  0EF8               	movlw	-8
 21439  013442  80E3               	bsf	plusw1,0,c
 21440  013444                     l2655:
 21441                           
 21442                           ;stkvar	_grs @ sp[(-4)+0]
 21443  013444  0EFC               	movlw	-4
 21444  013446  A0E3               	btfss	plusw1,0,c
 21445  013448  D00E               	goto	l6573
 21446                           
 21447                           ;stkvar	_grs @ sp[(-4)+0]
 21448  01344A  0EFC               	movlw	-4
 21449  01344C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21450  013452  90D8               	bcf	status,0,c
 21451  013454  343D               	rlcf	(btemp+11)^0,w,c
 21452  013456  6E3C               	movwf	(btemp+10)^0,c
 21453  013458  0E01               	movlw	1
 21454  01345A  123C               	iorwf	(btemp+10)^0,f,c
 21455                           
 21456                           ;stkvar	_grs @ sp[(-4)+0]
 21457  01345C  0EFC               	movlw	-4
 21458  01345E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21459  013464  D009               	goto	l6575
 21460  013466                     l6573:
 21461                           
 21462                           ;stkvar	_grs @ sp[(-4)+0]
 21463  013466  50E1               	movf	fsr1l,w,c
 21464  013468  0FFC               	addlw	-4
 21465  01346A  6ED9               	movwf	fsr2l,c
 21466  01346C  50E2               	movf	fsr1h,w,c
 21467  01346E  6EDA               	movwf	fsr2h,c
 21468  013470  0EFF               	movlw	255
 21469  013472  22DA               	addwfc	fsr2h,f,c
 21470  013474  90D8               	bcf	status,0,c
 21471  013476  36DF               	rlcf	indf2,f,c
 21472  013478                     l6575:
 21473                           
 21474                           ;stkvar	_bexp @ sp[(-4)+1]
 21475  013478  0EFD               	movlw	-3
 21476  01347A  50E3               	movf	plusw1,w,c
 21477  01347C  B4D8               	btfsc	status,2,c
 21478  01347E  D002               	goto	l6579
 21479                           
 21480                           ;stkvar	_bexp @ sp[(-4)+1]
 21481  013480  0EFD               	movlw	-3
 21482  013482  06E3               	decf	plusw1,f,c
 21483  013484                     l6579:
 21484                           
 21485                           ;stkvar	_b @ sp[(-4)+-4]
 21486  013484  0EFA               	movlw	-6
 21487  013486  AEE3               	btfss	plusw1,7,c
 21488  013488  D7CF               	goto	l6565
 21489  01348A                     u4950:
 21490                           
 21491                           ;stkvar	_aexp @ sp[(-4)+2]
 21492  01348A  0EFE               	movlw	-2
 21493  01348C  6AE3               	clrf	plusw1,c
 21494                           
 21495                           ;stkvar	_grs @ sp[(-4)+0]
 21496  01348E  0EFC               	movlw	-4
 21497  013490  AEE3               	btfss	plusw1,7,c
 21498  013492  D00F               	goto	l6593
 21499                           
 21500                           ;stkvar	_grs @ sp[(-4)+0]
 21501  013494  0EFC               	movlw	-4
 21502  013496  006F FF8C  F03D    	movff	plusw1,btemp+11
 21503  01349C  0E7F               	movlw	127
 21504  01349E  163D               	andwf	(btemp+11)^0,f,c
 21505  0134A0  B4D8               	btfsc	status,2,c
 21506  0134A2  D004               	goto	l6589
 21507  0134A4                     u4970:
 21508                           
 21509                           ;stkvar	_aexp @ sp[(-4)+2]
 21510  0134A4  0EFE               	movlw	-2
 21511  0134A6  6AE3               	clrf	plusw1,c
 21512  0134A8  2AE3               	incf	plusw1,f,c
 21513  0134AA  D003               	goto	l6593
 21514  0134AC                     l6589:
 21515                           
 21516                           ;stkvar	_b @ sp[(-4)+-4]
 21517  0134AC  0EF8               	movlw	-8
 21518  0134AE  B0E3               	btfsc	plusw1,0,c
 21519  0134B0  D7F9               	goto	u4970
 21520  0134B2                     l6593:
 21521                           
 21522                           ;stkvar	_aexp @ sp[(-4)+2]
 21523  0134B2  0EFE               	movlw	-2
 21524  0134B4  50E3               	movf	plusw1,w,c
 21525  0134B6  B4D8               	btfsc	status,2,c
 21526  0134B8  D02B               	goto	l6605
 21527                           
 21528                           ;stkvar	_b @ sp[(-4)+-4]
 21529  0134BA  50E1               	movf	fsr1l,w,c
 21530  0134BC  0FF8               	addlw	-8
 21531  0134BE  6ED9               	movwf	fsr2l,c
 21532  0134C0  50E2               	movf	fsr1h,w,c
 21533  0134C2  6EDA               	movwf	fsr2h,c
 21534  0134C4  0EFF               	movlw	255
 21535  0134C6  22DA               	addwfc	fsr2h,f,c
 21536  0134C8  2ADE               	incf	postinc2,f,c
 21537  0134CA  0E00               	movlw	0
 21538  0134CC  22DE               	addwfc	postinc2,f,c
 21539  0134CE  22DE               	addwfc	postinc2,f,c
 21540  0134D0  22DE               	addwfc	postinc2,f,c
 21541                           
 21542                           ;stkvar	_b @ sp[(-4)+-4]
 21543  0134D2  0EFB               	movlw	-5
 21544  0134D4  A0E3               	btfss	plusw1,0,c
 21545  0134D6  D01C               	goto	l6605
 21546  0134D8  0E01               	movlw	1
 21547  0134DA  6E3D               	movwf	(btemp+11)^0,c
 21548                           
 21549                           ;stkvar	_b @ sp[(-4)+-4]
 21550  0134DC  50E1               	movf	fsr1l,w,c
 21551  0134DE  0FF8               	addlw	-8
 21552  0134E0  6ED9               	movwf	fsr2l,c
 21553  0134E2  50E2               	movf	fsr1h,w,c
 21554  0134E4  6EDA               	movwf	fsr2h,c
 21555  0134E6  0EFF               	movlw	255
 21556  0134E8  22DA               	addwfc	fsr2h,f,c
 21557  0134EA  283D               	incf	(btemp+11)^0,w,c
 21558  0134EC  52DE               	movf	postinc2,f,c
 21559  0134EE  D008               	goto	u5010
 21560  0134F0                     u5015:
 21561  0134F0  52DE               	movf	postinc2,f,c
 21562  0134F2  90D8               	bcf	status,0,c
 21563  0134F4  BEDC               	btfsc	preinc2,7,c
 21564  0134F6  80D8               	bsf	status,0,c
 21565  0134F8  32DD               	rrcf	postdec2,f,c
 21566  0134FA  32DD               	rrcf	postdec2,f,c
 21567  0134FC  32DD               	rrcf	postdec2,f,c
 21568  0134FE  32DE               	rrcf	postinc2,f,c
 21569  013500                     u5010:
 21570  013500  2EE8               	decfsz	wreg,f,c
 21571  013502  D7F6               	goto	u5015
 21572                           
 21573                           ;stkvar	_bexp @ sp[(-4)+1]
 21574  013504  0EFD               	movlw	-3
 21575  013506  28E3               	incf	plusw1,w,c
 21576  013508  B4D8               	btfsc	status,2,c
 21577  01350A  D002               	goto	l6605
 21578                           
 21579                           ;stkvar	_bexp @ sp[(-4)+1]
 21580  01350C  0EFD               	movlw	-3
 21581  01350E  2AE3               	incf	plusw1,f,c
 21582  013510                     l6605:
 21583                           
 21584                           ;stkvar	_bexp @ sp[(-4)+1]
 21585  013510  0EFD               	movlw	-3
 21586  013512  28E3               	incf	plusw1,w,c
 21587  013514  B4D8               	btfsc	status,2,c
 21588  013516  D004               	goto	u5040
 21589                           
 21590                           ;stkvar	_bexp @ sp[(-4)+1]
 21591  013518  0EFD               	movlw	-3
 21592  01351A  50E3               	movf	plusw1,w,c
 21593  01351C  A4D8               	btfss	status,2,c
 21594  01351E  D00E               	goto	l6615
 21595  013520                     u5040:
 21596                           
 21597                           ;stkvar	_b @ sp[(-4)+-4]
 21598  013520  0EF8               	movlw	-8
 21599  013522  6AE3               	clrf	plusw1,c
 21600  013524  0EF9               	movlw	-7
 21601  013526  6AE3               	clrf	plusw1,c
 21602  013528  0EFA               	movlw	-6
 21603  01352A  6AE3               	clrf	plusw1,c
 21604  01352C  0EFB               	movlw	-5
 21605  01352E  6AE3               	clrf	plusw1,c
 21606                           
 21607                           ;stkvar	_bexp @ sp[(-4)+1]
 21608  013530  0EFD               	movlw	-3
 21609  013532  50E3               	movf	plusw1,w,c
 21610  013534  A4D8               	btfss	status,2,c
 21611  013536  D002               	goto	l6615
 21612                           
 21613                           ;stkvar	_signs @ sp[(-4)+3]
 21614  013538  0EFF               	movlw	-1
 21615  01353A  6AE3               	clrf	plusw1,c
 21616  01353C                     l6615:
 21617                           
 21618                           ;stkvar	_bexp @ sp[(-4)+1]
 21619  01353C  0EFD               	movlw	-3
 21620  01353E  A0E3               	btfss	plusw1,0,c
 21621  013540  D009               	goto	l6619
 21622                           
 21623                           ;stkvar	_b @ sp[(-4)+-4]
 21624  013542  0EFA               	movlw	250
 21625  013544  24E1               	addwf	fsr1l,w,c
 21626  013546  6ED9               	movwf	fsr2l,c
 21627  013548  0EFF               	movlw	255
 21628  01354A  20E2               	addwfc	fsr1h,w,c
 21629  01354C  6EDA               	movwf	fsr2h,c
 21630  01354E  0E00               	movlw	0
 21631  013550  8EDB               	bsf	plusw2,7,c
 21632  013552  D008               	goto	l6621
 21633  013554                     l6619:
 21634                           
 21635                           ;stkvar	_b @ sp[(-4)+-4]
 21636  013554  0EFA               	movlw	250
 21637  013556  24E1               	addwf	fsr1l,w,c
 21638  013558  6ED9               	movwf	fsr2l,c
 21639  01355A  0EFF               	movlw	255
 21640  01355C  20E2               	addwfc	fsr1h,w,c
 21641  01355E  6EDA               	movwf	fsr2h,c
 21642  013560  0E7F               	movlw	127
 21643  013562  16DF               	andwf	indf2,f,c
 21644  013564                     l6621:
 21645                           
 21646                           ;stkvar	_b @ sp[(-4)+-4]
 21647  013564  0EFB               	movlw	251
 21648  013566  24E1               	addwf	fsr1l,w,c
 21649  013568  6ED9               	movwf	fsr2l,c
 21650  01356A  0EFF               	movlw	255
 21651  01356C  20E2               	addwfc	fsr1h,w,c
 21652  01356E  6EDA               	movwf	fsr2h,c
 21653                           
 21654                           ;stkvar	_bexp @ sp[(-4)+1]
 21655  013570  0EFD               	movlw	-3
 21656  013572  006F FF8C  F03D    	movff	plusw1,btemp+11
 21657  013578  90D8               	bcf	status,0,c
 21658  01357A  303D               	rrcf	(btemp+11)^0,w,c
 21659  01357C  6EDF               	movwf	indf2,c
 21660                           
 21661                           ;stkvar	_signs @ sp[(-4)+3]
 21662  01357E  0EFF               	movlw	-1
 21663  013580  AEE3               	btfss	plusw1,7,c
 21664  013582  D008               	goto	l6627
 21665                           
 21666                           ;stkvar	_b @ sp[(-4)+-4]
 21667  013584  0EFB               	movlw	251
 21668  013586  24E1               	addwf	fsr1l,w,c
 21669  013588  6ED9               	movwf	fsr2l,c
 21670  01358A  0EFF               	movlw	255
 21671  01358C  20E2               	addwfc	fsr1h,w,c
 21672  01358E  6EDA               	movwf	fsr2h,c
 21673  013590  0E00               	movlw	0
 21674  013592  8EDB               	bsf	plusw2,7,c
 21675  013594                     l6627:
 21676                           
 21677                           ;stkvar	_b @ sp[(-4)+-4]
 21678  013594  0EF8               	movlw	-8
 21679  013596  006F FF8C  F032    	movff	plusw1,btemp
 21680  01359C  0EF9               	movlw	-7
 21681  01359E  006F FF8C  F033    	movff	plusw1,btemp+1
 21682  0135A4  0EFA               	movlw	-6
 21683  0135A6  006F FF8C  F034    	movff	plusw1,btemp+2
 21684  0135AC  0EFB               	movlw	-5
 21685  0135AE  006F FF8C  F035    	movff	plusw1,btemp+3
 21686  0135B4                     l2643:
 21687                           
 21688                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21689  0135B4  0EF4               	movlw	244
 21690  0135B6  26E1               	addwf	fsr1l,f,c
 21691  0135B8  0EFF               	movlw	255
 21692  0135BA  22E2               	addwfc	fsr1h,f,c
 21693  0135BC  0012               	return		;funcret
 21694  0135BE                     __end_of___fladd:
 21695                           	opt callstack 0
 21696                           
 21697 ;; *************** function ___flmul *****************
 21698 ;; Defined at:
 21699 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21700 ;; Parameters:    Size  Location     Type
 21701 ;;  b               4  [STACK] unsigned char 
 21702 ;;  a               4  [STACK] unsigned char 
 21703 ;; Auto vars:     Size  Location     Type
 21704 ;;  prod            4  [STACK] struct .
 21705 ;;  grs             4  [STACK] unsigned long 
 21706 ;;  temp            2  [STACK] struct .
 21707 ;;  bexp            1  [STACK] unsigned char 
 21708 ;;  aexp            1  [STACK] unsigned char 
 21709 ;;  sign            1  [STACK] unsigned char 
 21710 ;; Return value:  Size  Location     Type
 21711 ;;                  4  [STACK] unsigned char 
 21712 ;; Registers used:
 21713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21714 ;; Tracked objects:
 21715 ;;		On entry : 0/2
 21716 ;;		On exit  : 0/0
 21717 ;;		Unchanged: 0/0
 21718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21723 ;;Total ram usage:        0 bytes
 21724 ;; Hardware stack levels used:    1
 21725 ;; Hardware stack levels required when called:    6
 21726 ;; This function calls:
 21727 ;;		Nothing
 21728 ;; This function is called by:
 21729 ;;		_conv_raw_result
 21730 ;;		_lp_filter
 21731 ;;		_calc_model_data
 21732 ;;		_efgtoa
 21733 ;; This function uses a reentrant model
 21734 ;;
 21735                           
 21736                           	psect	text90
 21737  0125D8                     __ptext90:
 21738                           	opt callstack 0
 21739  0125D8                     ___flmul:
 21740                           	opt callstack 0
 21741                           
 21742                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21743  0125D8  0E0D               	movlw	13
 21744  0125DA  26E1               	addwf	fsr1l,f,c
 21745  0125DC  0E00               	movlw	0
 21746  0125DE  22E2               	addwfc	fsr1h,f,c
 21747                           
 21748                           ;stkvar	_b @ sp[(-13)+-4]
 21749                           
 21750                           ;incstack = 0
 21751  0125E0  0EF2               	movlw	242
 21752  0125E2  24E1               	addwf	fsr1l,w,c
 21753  0125E4  6ED9               	movwf	fsr2l,c
 21754  0125E6  0EFF               	movlw	255
 21755  0125E8  20E2               	addwfc	fsr1h,w,c
 21756  0125EA  6EDA               	movwf	fsr2h,c
 21757  0125EC  50DF               	movf	indf2,w,c
 21758  0125EE  6E3D               	movwf	(btemp+11)^0,c
 21759  0125F0  0E80               	movlw	128
 21760  0125F2  163D               	andwf	(btemp+11)^0,f,c
 21761                           
 21762                           ;stkvar	_sign @ sp[(-13)+12]
 21763  0125F4  0EFF               	movlw	-1
 21764  0125F6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21765                           
 21766                           ;stkvar	_b @ sp[(-13)+-4]
 21767  0125FC  0EF2               	movlw	242
 21768  0125FE  24E1               	addwf	fsr1l,w,c
 21769  012600  6ED9               	movwf	fsr2l,c
 21770  012602  0EFF               	movlw	255
 21771  012604  20E2               	addwfc	fsr1h,w,c
 21772  012606  6EDA               	movwf	fsr2h,c
 21773  012608  50DF               	movf	indf2,w,c
 21774  01260A  6E3D               	movwf	(btemp+11)^0,c
 21775  01260C  90D8               	bcf	status,0,c
 21776  01260E  343D               	rlcf	(btemp+11)^0,w,c
 21777  012610  6E3C               	movwf	(btemp+10)^0,c
 21778                           
 21779                           ;stkvar	_bexp @ sp[(-13)+10]
 21780  012612  0EFD               	movlw	-3
 21781  012614  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21782                           
 21783                           ;stkvar	_b @ sp[(-13)+-4]
 21784  01261A  0EF1               	movlw	241
 21785  01261C  24E1               	addwf	fsr1l,w,c
 21786  01261E  6ED9               	movwf	fsr2l,c
 21787  012620  0EFF               	movlw	255
 21788  012622  20E2               	addwfc	fsr1h,w,c
 21789  012624  6EDA               	movwf	fsr2h,c
 21790  012626  AEDF               	btfss	indf2,7,c
 21791  012628  D002               	goto	l7011
 21792                           
 21793                           ;stkvar	_bexp @ sp[(-13)+10]
 21794  01262A  0EFD               	movlw	-3
 21795  01262C  80E3               	bsf	plusw1,0,c
 21796  01262E                     l7011:
 21797                           
 21798                           ;stkvar	_bexp @ sp[(-13)+10]
 21799  01262E  0EFD               	movlw	-3
 21800  012630  50E3               	movf	plusw1,w,c
 21801  012632  B4D8               	btfsc	status,2,c
 21802  012634  D01F               	goto	l7019
 21803                           
 21804                           ;stkvar	_bexp @ sp[(-13)+10]
 21805  012636  0EFD               	movlw	-3
 21806  012638  28E3               	incf	plusw1,w,c
 21807  01263A  A4D8               	btfss	status,2,c
 21808  01263C  D018               	goto	l7017
 21809  01263E  0E00               	movlw	0
 21810  012640  6E3A               	movwf	(btemp+8)^0,c
 21811  012642  0E00               	movlw	0
 21812  012644  6E3B               	movwf	(btemp+9)^0,c
 21813  012646  0E00               	movlw	0
 21814  012648  6E3C               	movwf	(btemp+10)^0,c
 21815  01264A  0E00               	movlw	0
 21816  01264C  6E3D               	movwf	(btemp+11)^0,c
 21817                           
 21818                           ;stkvar	_b @ sp[(-13)+-4]
 21819  01264E  0EEF               	movlw	-17
 21820  012650  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21821  012656  0EF0               	movlw	-16
 21822  012658  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21823  01265E  0EF1               	movlw	-15
 21824  012660  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21825  012666  0EF2               	movlw	-14
 21826  012668  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21827  01266E                     l7017:
 21828                           
 21829                           ;stkvar	_b @ sp[(-13)+-4]
 21830  01266E  0EF1               	movlw	-15
 21831  012670  8EE3               	bsf	plusw1,7,c
 21832  012672  D018               	goto	l7021
 21833  012674                     l7019:
 21834  012674  0E00               	movlw	0
 21835  012676  6E3A               	movwf	(btemp+8)^0,c
 21836  012678  0E00               	movlw	0
 21837  01267A  6E3B               	movwf	(btemp+9)^0,c
 21838  01267C  0E00               	movlw	0
 21839  01267E  6E3C               	movwf	(btemp+10)^0,c
 21840  012680  0E00               	movlw	0
 21841  012682  6E3D               	movwf	(btemp+11)^0,c
 21842                           
 21843                           ;stkvar	_b @ sp[(-13)+-4]
 21844  012684  0EEF               	movlw	-17
 21845  012686  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21846  01268C  0EF0               	movlw	-16
 21847  01268E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21848  012694  0EF1               	movlw	-15
 21849  012696  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21850  01269C  0EF2               	movlw	-14
 21851  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21852  0126A4                     l7021:
 21853                           
 21854                           ;stkvar	_a @ sp[(-13)+-8]
 21855  0126A4  0EEE               	movlw	238
 21856  0126A6  24E1               	addwf	fsr1l,w,c
 21857  0126A8  6ED9               	movwf	fsr2l,c
 21858  0126AA  0EFF               	movlw	255
 21859  0126AC  20E2               	addwfc	fsr1h,w,c
 21860  0126AE  6EDA               	movwf	fsr2h,c
 21861  0126B0  50DF               	movf	indf2,w,c
 21862  0126B2  6E3D               	movwf	(btemp+11)^0,c
 21863  0126B4  0E80               	movlw	128
 21864  0126B6  163D               	andwf	(btemp+11)^0,f,c
 21865                           
 21866                           ;stkvar	_sign @ sp[(-13)+12]
 21867  0126B8  50E1               	movf	fsr1l,w,c
 21868  0126BA  0FFF               	addlw	-1
 21869  0126BC  6ED9               	movwf	fsr2l,c
 21870  0126BE  50E2               	movf	fsr1h,w,c
 21871  0126C0  6EDA               	movwf	fsr2h,c
 21872  0126C2  0EFF               	movlw	255
 21873  0126C4  22DA               	addwfc	fsr2h,f,c
 21874  0126C6  503D               	movf	(btemp+11)^0,w,c
 21875  0126C8  1ADF               	xorwf	indf2,f,c
 21876                           
 21877                           ;stkvar	_a @ sp[(-13)+-8]
 21878  0126CA  0EEE               	movlw	238
 21879  0126CC  24E1               	addwf	fsr1l,w,c
 21880  0126CE  6ED9               	movwf	fsr2l,c
 21881  0126D0  0EFF               	movlw	255
 21882  0126D2  20E2               	addwfc	fsr1h,w,c
 21883  0126D4  6EDA               	movwf	fsr2h,c
 21884  0126D6  50DF               	movf	indf2,w,c
 21885  0126D8  6E3D               	movwf	(btemp+11)^0,c
 21886  0126DA  90D8               	bcf	status,0,c
 21887  0126DC  343D               	rlcf	(btemp+11)^0,w,c
 21888  0126DE  6E3C               	movwf	(btemp+10)^0,c
 21889                           
 21890                           ;stkvar	_aexp @ sp[(-13)+11]
 21891  0126E0  0EFE               	movlw	-2
 21892  0126E2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21893                           
 21894                           ;stkvar	_a @ sp[(-13)+-8]
 21895  0126E8  0EED               	movlw	237
 21896  0126EA  24E1               	addwf	fsr1l,w,c
 21897  0126EC  6ED9               	movwf	fsr2l,c
 21898  0126EE  0EFF               	movlw	255
 21899  0126F0  20E2               	addwfc	fsr1h,w,c
 21900  0126F2  6EDA               	movwf	fsr2h,c
 21901  0126F4  AEDF               	btfss	indf2,7,c
 21902  0126F6  D002               	goto	l7029
 21903                           
 21904                           ;stkvar	_aexp @ sp[(-13)+11]
 21905  0126F8  0EFE               	movlw	-2
 21906  0126FA  80E3               	bsf	plusw1,0,c
 21907  0126FC                     l7029:
 21908                           
 21909                           ;stkvar	_aexp @ sp[(-13)+11]
 21910  0126FC  0EFE               	movlw	-2
 21911  0126FE  50E3               	movf	plusw1,w,c
 21912  012700  B4D8               	btfsc	status,2,c
 21913  012702  D01F               	goto	l7037
 21914                           
 21915                           ;stkvar	_aexp @ sp[(-13)+11]
 21916  012704  0EFE               	movlw	-2
 21917  012706  28E3               	incf	plusw1,w,c
 21918  012708  A4D8               	btfss	status,2,c
 21919  01270A  D018               	goto	l7035
 21920  01270C  0E00               	movlw	0
 21921  01270E  6E3A               	movwf	(btemp+8)^0,c
 21922  012710  0E00               	movlw	0
 21923  012712  6E3B               	movwf	(btemp+9)^0,c
 21924  012714  0E00               	movlw	0
 21925  012716  6E3C               	movwf	(btemp+10)^0,c
 21926  012718  0E00               	movlw	0
 21927  01271A  6E3D               	movwf	(btemp+11)^0,c
 21928                           
 21929                           ;stkvar	_a @ sp[(-13)+-8]
 21930  01271C  0EEB               	movlw	-21
 21931  01271E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21932  012724  0EEC               	movlw	-20
 21933  012726  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21934  01272C  0EED               	movlw	-19
 21935  01272E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21936  012734  0EEE               	movlw	-18
 21937  012736  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21938  01273C                     l7035:
 21939                           
 21940                           ;stkvar	_a @ sp[(-13)+-8]
 21941  01273C  0EED               	movlw	-19
 21942  01273E  8EE3               	bsf	plusw1,7,c
 21943  012740  D018               	goto	l7039
 21944  012742                     l7037:
 21945  012742  0E00               	movlw	0
 21946  012744  6E3A               	movwf	(btemp+8)^0,c
 21947  012746  0E00               	movlw	0
 21948  012748  6E3B               	movwf	(btemp+9)^0,c
 21949  01274A  0E00               	movlw	0
 21950  01274C  6E3C               	movwf	(btemp+10)^0,c
 21951  01274E  0E00               	movlw	0
 21952  012750  6E3D               	movwf	(btemp+11)^0,c
 21953                           
 21954                           ;stkvar	_a @ sp[(-13)+-8]
 21955  012752  0EEB               	movlw	-21
 21956  012754  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21957  01275A  0EEC               	movlw	-20
 21958  01275C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21959  012762  0EED               	movlw	-19
 21960  012764  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21961  01276A  0EEE               	movlw	-18
 21962  01276C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21963  012772                     l7039:
 21964                           
 21965                           ;stkvar	_aexp @ sp[(-13)+11]
 21966  012772  0EFE               	movlw	-2
 21967  012774  50E3               	movf	plusw1,w,c
 21968  012776  B4D8               	btfsc	status,2,c
 21969  012778  D004               	goto	u5980
 21970                           
 21971                           ;stkvar	_bexp @ sp[(-13)+10]
 21972  01277A  0EFD               	movlw	-3
 21973  01277C  50E3               	movf	plusw1,w,c
 21974  01277E  A4D8               	btfss	status,2,c
 21975  012780  D009               	goto	l7047
 21976  012782                     u5980:
 21977  012782  0E00               	movlw	0
 21978  012784  6E32               	movwf	btemp^0,c
 21979  012786  0E00               	movlw	0
 21980  012788  6E33               	movwf	(btemp+1)^0,c
 21981  01278A  0E00               	movlw	0
 21982  01278C  6E34               	movwf	(btemp+2)^0,c
 21983  01278E  0E00               	movlw	0
 21984  012790  6E35               	movwf	(btemp+3)^0,c
 21985  012792  D332               	goto	l2724
 21986  012794                     l7047:
 21987                           
 21988                           ;stkvar	_b @ sp[(-13)+-4]
 21989  012794  0EEF               	movlw	-17
 21990  012796  006F FF8C  F03D    	movff	plusw1,btemp+11
 21991                           
 21992                           ;stkvar	_a @ sp[(-13)+-8]
 21993  01279C  0EED               	movlw	237
 21994  01279E  24E1               	addwf	fsr1l,w,c
 21995  0127A0  6ED9               	movwf	fsr2l,c
 21996  0127A2  0EFF               	movlw	255
 21997  0127A4  20E2               	addwfc	fsr1h,w,c
 21998  0127A6  6EDA               	movwf	fsr2h,c
 21999  0127A8  50DF               	movf	indf2,w,c
 22000  0127AA  023D               	mulwf	(btemp+11)^0,c
 22001                           
 22002                           ;stkvar	_temp @ sp[(-13)+8]
 22003  0127AC  0EFB               	movlw	-5
 22004  0127AE  006F FFCF FFE3     	movff	prodl,plusw1
 22005  0127B4  0EFC               	movlw	-4
 22006  0127B6  006F FFD3 FFE3     	movff	prodh,plusw1
 22007                           
 22008                           ;stkvar	_temp @ sp[(-13)+8]
 22009  0127BC  0EFB               	movlw	-5
 22010  0127BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 22011  0127C4  0060  F0F4  F036   	movff	btemp+11,btemp+4
 22012  0127CA  6A37               	clrf	(btemp+5)^0,c
 22013  0127CC  6A38               	clrf	(btemp+6)^0,c
 22014  0127CE  6A39               	clrf	(btemp+7)^0,c
 22015                           
 22016                           ;stkvar	_grs @ sp[(-13)+4]
 22017  0127D0  0EF7               	movlw	-9
 22018  0127D2  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 22019  0127D8  0EF8               	movlw	-8
 22020  0127DA  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 22021  0127E0  0EF9               	movlw	-7
 22022  0127E2  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 22023  0127E8  0EFA               	movlw	-6
 22024  0127EA  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 22025                           
 22026                           ;stkvar	_temp @ sp[(-13)+8]
 22027  0127F0  0EFC               	movlw	252
 22028  0127F2  24E1               	addwf	fsr1l,w,c
 22029  0127F4  6ED9               	movwf	fsr2l,c
 22030  0127F6  0EFF               	movlw	255
 22031  0127F8  20E2               	addwfc	fsr1h,w,c
 22032  0127FA  6EDA               	movwf	fsr2h,c
 22033  0127FC  50DF               	movf	indf2,w,c
 22034  0127FE  6E3D               	movwf	(btemp+11)^0,c
 22035  012800  0060  F0F4  F036   	movff	btemp+11,btemp+4
 22036  012806  6A37               	clrf	(btemp+5)^0,c
 22037  012808  6A38               	clrf	(btemp+6)^0,c
 22038  01280A  6A39               	clrf	(btemp+7)^0,c
 22039                           
 22040                           ;stkvar	_prod @ sp[(-13)+0]
 22041  01280C  0EF3               	movlw	-13
 22042  01280E  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 22043  012814  0EF4               	movlw	-12
 22044  012816  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 22045  01281C  0EF5               	movlw	-11
 22046  01281E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 22047  012824  0EF6               	movlw	-10
 22048  012826  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 22049                           
 22050                           ;stkvar	_b @ sp[(-13)+-4]
 22051  01282C  0EF0               	movlw	240
 22052  01282E  24E1               	addwf	fsr1l,w,c
 22053  012830  6ED9               	movwf	fsr2l,c
 22054  012832  0EFF               	movlw	255
 22055  012834  20E2               	addwfc	fsr1h,w,c
 22056  012836  6EDA               	movwf	fsr2h,c
 22057  012838  50DF               	movf	indf2,w,c
 22058  01283A  6E3D               	movwf	(btemp+11)^0,c
 22059                           
 22060                           ;stkvar	_a @ sp[(-13)+-8]
 22061  01283C  0EEC               	movlw	236
 22062  01283E  24E1               	addwf	fsr1l,w,c
 22063  012840  6ED9               	movwf	fsr2l,c
 22064  012842  0EFF               	movlw	255
 22065  012844  20E2               	addwfc	fsr1h,w,c
 22066  012846  6EDA               	movwf	fsr2h,c
 22067  012848  50DF               	movf	indf2,w,c
 22068  01284A  023D               	mulwf	(btemp+11)^0,c
 22069                           
 22070                           ;stkvar	_temp @ sp[(-13)+8]
 22071  01284C  0EFB               	movlw	-5
 22072  01284E  006F FFCF FFE3     	movff	prodl,plusw1
 22073  012854  0EFC               	movlw	-4
 22074  012856  006F FFD3 FFE3     	movff	prodh,plusw1
 22075                           
 22076                           ;stkvar	_grs @ sp[(-13)+4]
 22077  01285C  50E1               	movf	fsr1l,w,c
 22078  01285E  0FF7               	addlw	-9
 22079  012860  6ED9               	movwf	fsr2l,c
 22080  012862  50E2               	movf	fsr1h,w,c
 22081  012864  6EDA               	movwf	fsr2h,c
 22082  012866  0EFF               	movlw	255
 22083  012868  22DA               	addwfc	fsr2h,f,c
 22084                           
 22085                           ;stkvar	_temp @ sp[(-13)+8]
 22086  01286A  0EFB               	movlw	-5
 22087  01286C  50E3               	movf	plusw1,w,c
 22088  01286E  26DE               	addwf	postinc2,f,c
 22089  012870  0E00               	movlw	0
 22090  012872  22DE               	addwfc	postinc2,f,c
 22091  012874  22DE               	addwfc	postinc2,f,c
 22092  012876  22DE               	addwfc	postinc2,f,c
 22093                           
 22094                           ;stkvar	_prod @ sp[(-13)+0]
 22095  012878  50E1               	movf	fsr1l,w,c
 22096  01287A  0FF3               	addlw	-13
 22097  01287C  6ED9               	movwf	fsr2l,c
 22098  01287E  50E2               	movf	fsr1h,w,c
 22099  012880  6EDA               	movwf	fsr2h,c
 22100  012882  0EFF               	movlw	255
 22101  012884  22DA               	addwfc	fsr2h,f,c
 22102                           
 22103                           ;stkvar	_temp @ sp[(-13)+8]
 22104  012886  0EFC               	movlw	252
 22105  012888  24E1               	addwf	fsr1l,w,c
 22106  01288A  6EE9               	movwf	fsr0l,c
 22107  01288C  0EFF               	movlw	255
 22108  01288E  20E2               	addwfc	fsr1h,w,c
 22109  012890  6EEA               	movwf	fsr0h,c
 22110  012892  50EF               	movf	indf0,w,c
 22111  012894  26DE               	addwf	postinc2,f,c
 22112  012896  0E00               	movlw	0
 22113  012898  22DE               	addwfc	postinc2,f,c
 22114  01289A  22DE               	addwfc	postinc2,f,c
 22115  01289C  22DE               	addwfc	postinc2,f,c
 22116                           
 22117                           ;stkvar	_b @ sp[(-13)+-4]
 22118  01289E  0EF1               	movlw	241
 22119  0128A0  24E1               	addwf	fsr1l,w,c
 22120  0128A2  6ED9               	movwf	fsr2l,c
 22121  0128A4  0EFF               	movlw	255
 22122  0128A6  20E2               	addwfc	fsr1h,w,c
 22123  0128A8  6EDA               	movwf	fsr2h,c
 22124  0128AA  50DF               	movf	indf2,w,c
 22125  0128AC  6E3D               	movwf	(btemp+11)^0,c
 22126                           
 22127                           ;stkvar	_a @ sp[(-13)+-8]
 22128  0128AE  0EEB               	movlw	-21
 22129  0128B0  50E3               	movf	plusw1,w,c
 22130  0128B2  023D               	mulwf	(btemp+11)^0,c
 22131                           
 22132                           ;stkvar	_temp @ sp[(-13)+8]
 22133  0128B4  0EFB               	movlw	-5
 22134  0128B6  006F FFCF FFE3     	movff	prodl,plusw1
 22135  0128BC  0EFC               	movlw	-4
 22136  0128BE  006F FFD3 FFE3     	movff	prodh,plusw1
 22137                           
 22138                           ;stkvar	_grs @ sp[(-13)+4]
 22139  0128C4  50E1               	movf	fsr1l,w,c
 22140  0128C6  0FF7               	addlw	-9
 22141  0128C8  6ED9               	movwf	fsr2l,c
 22142  0128CA  50E2               	movf	fsr1h,w,c
 22143  0128CC  6EDA               	movwf	fsr2h,c
 22144  0128CE  0EFF               	movlw	255
 22145  0128D0  22DA               	addwfc	fsr2h,f,c
 22146                           
 22147                           ;stkvar	_temp @ sp[(-13)+8]
 22148  0128D2  0EFB               	movlw	-5
 22149  0128D4  50E3               	movf	plusw1,w,c
 22150  0128D6  26DE               	addwf	postinc2,f,c
 22151  0128D8  0E00               	movlw	0
 22152  0128DA  22DE               	addwfc	postinc2,f,c
 22153  0128DC  22DE               	addwfc	postinc2,f,c
 22154  0128DE  22DE               	addwfc	postinc2,f,c
 22155                           
 22156                           ;stkvar	_prod @ sp[(-13)+0]
 22157  0128E0  50E1               	movf	fsr1l,w,c
 22158  0128E2  0FF3               	addlw	-13
 22159  0128E4  6ED9               	movwf	fsr2l,c
 22160  0128E6  50E2               	movf	fsr1h,w,c
 22161  0128E8  6EDA               	movwf	fsr2h,c
 22162  0128EA  0EFF               	movlw	255
 22163  0128EC  22DA               	addwfc	fsr2h,f,c
 22164                           
 22165                           ;stkvar	_temp @ sp[(-13)+8]
 22166  0128EE  0EFC               	movlw	252
 22167  0128F0  24E1               	addwf	fsr1l,w,c
 22168  0128F2  6EE9               	movwf	fsr0l,c
 22169  0128F4  0EFF               	movlw	255
 22170  0128F6  20E2               	addwfc	fsr1h,w,c
 22171  0128F8  6EEA               	movwf	fsr0h,c
 22172  0128FA  50EF               	movf	indf0,w,c
 22173  0128FC  26DE               	addwf	postinc2,f,c
 22174  0128FE  0E00               	movlw	0
 22175  012900  22DE               	addwfc	postinc2,f,c
 22176  012902  22DE               	addwfc	postinc2,f,c
 22177  012904  22DE               	addwfc	postinc2,f,c
 22178                           
 22179                           ;stkvar	_grs @ sp[(-13)+4]
 22180  012906  50E1               	movf	fsr1l,w,c
 22181  012908  0FF7               	addlw	-9
 22182  01290A  6ED9               	movwf	fsr2l,c
 22183  01290C  50E2               	movf	fsr1h,w,c
 22184  01290E  6EDA               	movwf	fsr2h,c
 22185  012910  0EFF               	movlw	255
 22186  012912  22DA               	addwfc	fsr2h,f,c
 22187  012914  0E08               	movlw	8
 22188  012916                     u5995:
 22189  012916  90D8               	bcf	status,0,c
 22190  012918  36DE               	rlcf	postinc2,f,c
 22191  01291A  36DE               	rlcf	postinc2,f,c
 22192  01291C  36DE               	rlcf	postinc2,f,c
 22193  01291E  36DD               	rlcf	postdec2,f,c
 22194  012920  52DD               	movf	postdec2,f,c
 22195  012922  52DD               	movf	postdec2,f,c
 22196  012924  2EE8               	decfsz	wreg,f,c
 22197  012926  D7F7               	goto	u5995
 22198                           
 22199                           ;stkvar	_b @ sp[(-13)+-4]
 22200  012928  0EF0               	movlw	240
 22201  01292A  24E1               	addwf	fsr1l,w,c
 22202  01292C  6ED9               	movwf	fsr2l,c
 22203  01292E  0EFF               	movlw	255
 22204  012930  20E2               	addwfc	fsr1h,w,c
 22205  012932  6EDA               	movwf	fsr2h,c
 22206  012934  50DF               	movf	indf2,w,c
 22207  012936  6E3D               	movwf	(btemp+11)^0,c
 22208                           
 22209                           ;stkvar	_a @ sp[(-13)+-8]
 22210  012938  0EEB               	movlw	-21
 22211  01293A  50E3               	movf	plusw1,w,c
 22212  01293C  023D               	mulwf	(btemp+11)^0,c
 22213                           
 22214                           ;stkvar	_temp @ sp[(-13)+8]
 22215  01293E  0EFB               	movlw	-5
 22216  012940  006F FFCF FFE3     	movff	prodl,plusw1
 22217  012946  0EFC               	movlw	-4
 22218  012948  006F FFD3 FFE3     	movff	prodh,plusw1
 22219                           
 22220                           ;stkvar	_temp @ sp[(-13)+8]
 22221  01294E  0EFB               	movlw	-5
 22222  012950  006F FF8C  F03C    	movff	plusw1,btemp+10
 22223  012956  0EFC               	movlw	-4
 22224  012958  006F FF8C  F03D    	movff	plusw1,btemp+11
 22225                           
 22226                           ;stkvar	_grs @ sp[(-13)+4]
 22227  01295E  50E1               	movf	fsr1l,w,c
 22228  012960  0FF7               	addlw	-9
 22229  012962  6ED9               	movwf	fsr2l,c
 22230  012964  50E2               	movf	fsr1h,w,c
 22231  012966  6EDA               	movwf	fsr2h,c
 22232  012968  0EFF               	movlw	255
 22233  01296A  22DA               	addwfc	fsr2h,f,c
 22234  01296C  503C               	movf	(btemp+10)^0,w,c
 22235  01296E  26DE               	addwf	postinc2,f,c
 22236  012970  503D               	movf	(btemp+11)^0,w,c
 22237  012972  22DE               	addwfc	postinc2,f,c
 22238  012974  0E00               	movlw	0
 22239  012976  22DE               	addwfc	postinc2,f,c
 22240  012978  22DE               	addwfc	postinc2,f,c
 22241                           
 22242                           ;stkvar	_b @ sp[(-13)+-4]
 22243  01297A  0EEF               	movlw	-17
 22244  01297C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22245                           
 22246                           ;stkvar	_a @ sp[(-13)+-8]
 22247  012982  0EEC               	movlw	236
 22248  012984  24E1               	addwf	fsr1l,w,c
 22249  012986  6ED9               	movwf	fsr2l,c
 22250  012988  0EFF               	movlw	255
 22251  01298A  20E2               	addwfc	fsr1h,w,c
 22252  01298C  6EDA               	movwf	fsr2h,c
 22253  01298E  50DF               	movf	indf2,w,c
 22254  012990  023D               	mulwf	(btemp+11)^0,c
 22255                           
 22256                           ;stkvar	_temp @ sp[(-13)+8]
 22257  012992  0EFB               	movlw	-5
 22258  012994  006F FFCF FFE3     	movff	prodl,plusw1
 22259  01299A  0EFC               	movlw	-4
 22260  01299C  006F FFD3 FFE3     	movff	prodh,plusw1
 22261                           
 22262                           ;stkvar	_temp @ sp[(-13)+8]
 22263  0129A2  0EFB               	movlw	-5
 22264  0129A4  006F FF8C  F03C    	movff	plusw1,btemp+10
 22265  0129AA  0EFC               	movlw	-4
 22266  0129AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 22267                           
 22268                           ;stkvar	_grs @ sp[(-13)+4]
 22269  0129B2  50E1               	movf	fsr1l,w,c
 22270  0129B4  0FF7               	addlw	-9
 22271  0129B6  6ED9               	movwf	fsr2l,c
 22272  0129B8  50E2               	movf	fsr1h,w,c
 22273  0129BA  6EDA               	movwf	fsr2h,c
 22274  0129BC  0EFF               	movlw	255
 22275  0129BE  22DA               	addwfc	fsr2h,f,c
 22276  0129C0  503C               	movf	(btemp+10)^0,w,c
 22277  0129C2  26DE               	addwf	postinc2,f,c
 22278  0129C4  503D               	movf	(btemp+11)^0,w,c
 22279  0129C6  22DE               	addwfc	postinc2,f,c
 22280  0129C8  0E00               	movlw	0
 22281  0129CA  22DE               	addwfc	postinc2,f,c
 22282  0129CC  22DE               	addwfc	postinc2,f,c
 22283                           
 22284                           ;stkvar	_grs @ sp[(-13)+4]
 22285  0129CE  50E1               	movf	fsr1l,w,c
 22286  0129D0  0FF7               	addlw	-9
 22287  0129D2  6ED9               	movwf	fsr2l,c
 22288  0129D4  50E2               	movf	fsr1h,w,c
 22289  0129D6  6EDA               	movwf	fsr2h,c
 22290  0129D8  0EFF               	movlw	255
 22291  0129DA  22DA               	addwfc	fsr2h,f,c
 22292  0129DC  0E08               	movlw	8
 22293  0129DE                     u6005:
 22294  0129DE  90D8               	bcf	status,0,c
 22295  0129E0  36DE               	rlcf	postinc2,f,c
 22296  0129E2  36DE               	rlcf	postinc2,f,c
 22297  0129E4  36DE               	rlcf	postinc2,f,c
 22298  0129E6  36DD               	rlcf	postdec2,f,c
 22299  0129E8  52DD               	movf	postdec2,f,c
 22300  0129EA  52DD               	movf	postdec2,f,c
 22301  0129EC  2EE8               	decfsz	wreg,f,c
 22302  0129EE  D7F7               	goto	u6005
 22303                           
 22304                           ;stkvar	_b @ sp[(-13)+-4]
 22305  0129F0  0EEF               	movlw	-17
 22306  0129F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 22307                           
 22308                           ;stkvar	_a @ sp[(-13)+-8]
 22309  0129F8  0EEB               	movlw	-21
 22310  0129FA  50E3               	movf	plusw1,w,c
 22311  0129FC  023D               	mulwf	(btemp+11)^0,c
 22312                           
 22313                           ;stkvar	_temp @ sp[(-13)+8]
 22314  0129FE  0EFB               	movlw	-5
 22315  012A00  006F FFCF FFE3     	movff	prodl,plusw1
 22316  012A06  0EFC               	movlw	-4
 22317  012A08  006F FFD3 FFE3     	movff	prodh,plusw1
 22318                           
 22319                           ;stkvar	_temp @ sp[(-13)+8]
 22320  012A0E  0EFB               	movlw	-5
 22321  012A10  006F FF8C  F03C    	movff	plusw1,btemp+10
 22322  012A16  0EFC               	movlw	-4
 22323  012A18  006F FF8C  F03D    	movff	plusw1,btemp+11
 22324                           
 22325                           ;stkvar	_grs @ sp[(-13)+4]
 22326  012A1E  50E1               	movf	fsr1l,w,c
 22327  012A20  0FF7               	addlw	-9
 22328  012A22  6ED9               	movwf	fsr2l,c
 22329  012A24  50E2               	movf	fsr1h,w,c
 22330  012A26  6EDA               	movwf	fsr2h,c
 22331  012A28  0EFF               	movlw	255
 22332  012A2A  22DA               	addwfc	fsr2h,f,c
 22333  012A2C  503C               	movf	(btemp+10)^0,w,c
 22334  012A2E  26DE               	addwf	postinc2,f,c
 22335  012A30  503D               	movf	(btemp+11)^0,w,c
 22336  012A32  22DE               	addwfc	postinc2,f,c
 22337  012A34  0E00               	movlw	0
 22338  012A36  22DE               	addwfc	postinc2,f,c
 22339  012A38  22DE               	addwfc	postinc2,f,c
 22340                           
 22341                           ;stkvar	_b @ sp[(-13)+-4]
 22342  012A3A  0EF0               	movlw	240
 22343  012A3C  24E1               	addwf	fsr1l,w,c
 22344  012A3E  6ED9               	movwf	fsr2l,c
 22345  012A40  0EFF               	movlw	255
 22346  012A42  20E2               	addwfc	fsr1h,w,c
 22347  012A44  6EDA               	movwf	fsr2h,c
 22348  012A46  50DF               	movf	indf2,w,c
 22349  012A48  6E3D               	movwf	(btemp+11)^0,c
 22350                           
 22351                           ;stkvar	_a @ sp[(-13)+-8]
 22352  012A4A  0EED               	movlw	237
 22353  012A4C  24E1               	addwf	fsr1l,w,c
 22354  012A4E  6ED9               	movwf	fsr2l,c
 22355  012A50  0EFF               	movlw	255
 22356  012A52  20E2               	addwfc	fsr1h,w,c
 22357  012A54  6EDA               	movwf	fsr2h,c
 22358  012A56  50DF               	movf	indf2,w,c
 22359  012A58  023D               	mulwf	(btemp+11)^0,c
 22360                           
 22361                           ;stkvar	_temp @ sp[(-13)+8]
 22362  012A5A  0EFB               	movlw	-5
 22363  012A5C  006F FFCF FFE3     	movff	prodl,plusw1
 22364  012A62  0EFC               	movlw	-4
 22365  012A64  006F FFD3 FFE3     	movff	prodh,plusw1
 22366                           
 22367                           ;stkvar	_temp @ sp[(-13)+8]
 22368  012A6A  0EFB               	movlw	-5
 22369  012A6C  006F FF8C  F03C    	movff	plusw1,btemp+10
 22370  012A72  0EFC               	movlw	-4
 22371  012A74  006F FF8C  F03D    	movff	plusw1,btemp+11
 22372                           
 22373                           ;stkvar	_prod @ sp[(-13)+0]
 22374  012A7A  50E1               	movf	fsr1l,w,c
 22375  012A7C  0FF3               	addlw	-13
 22376  012A7E  6ED9               	movwf	fsr2l,c
 22377  012A80  50E2               	movf	fsr1h,w,c
 22378  012A82  6EDA               	movwf	fsr2h,c
 22379  012A84  0EFF               	movlw	255
 22380  012A86  22DA               	addwfc	fsr2h,f,c
 22381  012A88  503C               	movf	(btemp+10)^0,w,c
 22382  012A8A  26DE               	addwf	postinc2,f,c
 22383  012A8C  503D               	movf	(btemp+11)^0,w,c
 22384  012A8E  22DE               	addwfc	postinc2,f,c
 22385  012A90  0E00               	movlw	0
 22386  012A92  22DE               	addwfc	postinc2,f,c
 22387  012A94  22DE               	addwfc	postinc2,f,c
 22388                           
 22389                           ;stkvar	_b @ sp[(-13)+-4]
 22390  012A96  0EF1               	movlw	241
 22391  012A98  24E1               	addwf	fsr1l,w,c
 22392  012A9A  6ED9               	movwf	fsr2l,c
 22393  012A9C  0EFF               	movlw	255
 22394  012A9E  20E2               	addwfc	fsr1h,w,c
 22395  012AA0  6EDA               	movwf	fsr2h,c
 22396  012AA2  50DF               	movf	indf2,w,c
 22397  012AA4  6E3D               	movwf	(btemp+11)^0,c
 22398                           
 22399                           ;stkvar	_a @ sp[(-13)+-8]
 22400  012AA6  0EEC               	movlw	236
 22401  012AA8  24E1               	addwf	fsr1l,w,c
 22402  012AAA  6ED9               	movwf	fsr2l,c
 22403  012AAC  0EFF               	movlw	255
 22404  012AAE  20E2               	addwfc	fsr1h,w,c
 22405  012AB0  6EDA               	movwf	fsr2h,c
 22406  012AB2  50DF               	movf	indf2,w,c
 22407  012AB4  023D               	mulwf	(btemp+11)^0,c
 22408                           
 22409                           ;stkvar	_temp @ sp[(-13)+8]
 22410  012AB6  0EFB               	movlw	-5
 22411  012AB8  006F FFCF FFE3     	movff	prodl,plusw1
 22412  012ABE  0EFC               	movlw	-4
 22413  012AC0  006F FFD3 FFE3     	movff	prodh,plusw1
 22414                           
 22415                           ;stkvar	_temp @ sp[(-13)+8]
 22416  012AC6  0EFB               	movlw	-5
 22417  012AC8  006F FF8C  F03C    	movff	plusw1,btemp+10
 22418  012ACE  0EFC               	movlw	-4
 22419  012AD0  006F FF8C  F03D    	movff	plusw1,btemp+11
 22420                           
 22421                           ;stkvar	_prod @ sp[(-13)+0]
 22422  012AD6  50E1               	movf	fsr1l,w,c
 22423  012AD8  0FF3               	addlw	-13
 22424  012ADA  6ED9               	movwf	fsr2l,c
 22425  012ADC  50E2               	movf	fsr1h,w,c
 22426  012ADE  6EDA               	movwf	fsr2h,c
 22427  012AE0  0EFF               	movlw	255
 22428  012AE2  22DA               	addwfc	fsr2h,f,c
 22429  012AE4  503C               	movf	(btemp+10)^0,w,c
 22430  012AE6  26DE               	addwf	postinc2,f,c
 22431  012AE8  503D               	movf	(btemp+11)^0,w,c
 22432  012AEA  22DE               	addwfc	postinc2,f,c
 22433  012AEC  0E00               	movlw	0
 22434  012AEE  22DE               	addwfc	postinc2,f,c
 22435  012AF0  22DE               	addwfc	postinc2,f,c
 22436                           
 22437                           ;stkvar	_b @ sp[(-13)+-4]
 22438  012AF2  0EF1               	movlw	241
 22439  012AF4  24E1               	addwf	fsr1l,w,c
 22440  012AF6  6ED9               	movwf	fsr2l,c
 22441  012AF8  0EFF               	movlw	255
 22442  012AFA  20E2               	addwfc	fsr1h,w,c
 22443  012AFC  6EDA               	movwf	fsr2h,c
 22444  012AFE  50DF               	movf	indf2,w,c
 22445  012B00  6E3D               	movwf	(btemp+11)^0,c
 22446                           
 22447                           ;stkvar	_a @ sp[(-13)+-8]
 22448  012B02  0EED               	movlw	237
 22449  012B04  24E1               	addwf	fsr1l,w,c
 22450  012B06  6ED9               	movwf	fsr2l,c
 22451  012B08  0EFF               	movlw	255
 22452  012B0A  20E2               	addwfc	fsr1h,w,c
 22453  012B0C  6EDA               	movwf	fsr2h,c
 22454  012B0E  50DF               	movf	indf2,w,c
 22455  012B10  023D               	mulwf	(btemp+11)^0,c
 22456                           
 22457                           ;stkvar	_temp @ sp[(-13)+8]
 22458  012B12  0EFB               	movlw	-5
 22459  012B14  006F FFCF FFE3     	movff	prodl,plusw1
 22460  012B1A  0EFC               	movlw	-4
 22461  012B1C  006F FFD3 FFE3     	movff	prodh,plusw1
 22462                           
 22463                           ;stkvar	_temp @ sp[(-13)+8]
 22464  012B22  0EFB               	movlw	-5
 22465  012B24  006F FF8C  F03C    	movff	plusw1,btemp+10
 22466  012B2A  0EFC               	movlw	-4
 22467  012B2C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22468  012B32  503C               	movf	(btemp+10)^0,w,c
 22469  012B34  6E36               	movwf	(btemp+4)^0,c
 22470  012B36  503D               	movf	(btemp+11)^0,w,c
 22471  012B38  6E37               	movwf	(btemp+5)^0,c
 22472  012B3A  6A38               	clrf	(btemp+6)^0,c
 22473  012B3C  6A39               	clrf	(btemp+7)^0,c
 22474  012B3E  0060  F0E0  F039   	movff	btemp+6,btemp+7
 22475  012B44  0060  F0DC  F038   	movff	btemp+5,btemp+6
 22476  012B4A  0060  F0D8  F037   	movff	btemp+4,btemp+5
 22477  012B50  6A36               	clrf	(btemp+4)^0,c
 22478                           
 22479                           ;stkvar	_prod @ sp[(-13)+0]
 22480  012B52  50E1               	movf	fsr1l,w,c
 22481  012B54  0FF3               	addlw	-13
 22482  012B56  6ED9               	movwf	fsr2l,c
 22483  012B58  50E2               	movf	fsr1h,w,c
 22484  012B5A  6EDA               	movwf	fsr2h,c
 22485  012B5C  0EFF               	movlw	255
 22486  012B5E  22DA               	addwfc	fsr2h,f,c
 22487  012B60  5036               	movf	(btemp+4)^0,w,c
 22488  012B62  26DE               	addwf	postinc2,f,c
 22489  012B64  5037               	movf	(btemp+5)^0,w,c
 22490  012B66  22DE               	addwfc	postinc2,f,c
 22491  012B68  5038               	movf	(btemp+6)^0,w,c
 22492  012B6A  22DE               	addwfc	postinc2,f,c
 22493  012B6C  5039               	movf	(btemp+7)^0,w,c
 22494  012B6E  22DE               	addwfc	postinc2,f,c
 22495                           
 22496                           ;stkvar	_prod @ sp[(-13)+0]
 22497  012B70  50E1               	movf	fsr1l,w,c
 22498  012B72  0FF3               	addlw	-13
 22499  012B74  6ED9               	movwf	fsr2l,c
 22500  012B76  50E2               	movf	fsr1h,w,c
 22501  012B78  6EDA               	movwf	fsr2h,c
 22502  012B7A  0EFF               	movlw	255
 22503  012B7C  22DA               	addwfc	fsr2h,f,c
 22504                           
 22505                           ;stkvar	_grs @ sp[(-13)+4]
 22506  012B7E  0EFA               	movlw	250
 22507  012B80  24E1               	addwf	fsr1l,w,c
 22508  012B82  6EE9               	movwf	fsr0l,c
 22509  012B84  0EFF               	movlw	255
 22510  012B86  20E2               	addwfc	fsr1h,w,c
 22511  012B88  6EEA               	movwf	fsr0h,c
 22512  012B8A  50EF               	movf	indf0,w,c
 22513  012B8C  26DE               	addwf	postinc2,f,c
 22514  012B8E  0E00               	movlw	0
 22515  012B90  22DE               	addwfc	postinc2,f,c
 22516  012B92  22DE               	addwfc	postinc2,f,c
 22517  012B94  22DE               	addwfc	postinc2,f,c
 22518                           
 22519                           ;stkvar	_grs @ sp[(-13)+4]
 22520  012B96  50E1               	movf	fsr1l,w,c
 22521  012B98  0FF7               	addlw	-9
 22522  012B9A  6ED9               	movwf	fsr2l,c
 22523  012B9C  50E2               	movf	fsr1h,w,c
 22524  012B9E  6EDA               	movwf	fsr2h,c
 22525  012BA0  0EFF               	movlw	255
 22526  012BA2  22DA               	addwfc	fsr2h,f,c
 22527  012BA4  0E08               	movlw	8
 22528  012BA6                     u6015:
 22529  012BA6  90D8               	bcf	status,0,c
 22530  012BA8  36DE               	rlcf	postinc2,f,c
 22531  012BAA  36DE               	rlcf	postinc2,f,c
 22532  012BAC  36DE               	rlcf	postinc2,f,c
 22533  012BAE  36DD               	rlcf	postdec2,f,c
 22534  012BB0  52DD               	movf	postdec2,f,c
 22535  012BB2  52DD               	movf	postdec2,f,c
 22536  012BB4  2EE8               	decfsz	wreg,f,c
 22537  012BB6  D7F7               	goto	u6015
 22538  012BB8  0E82               	movlw	130
 22539  012BBA  6E3C               	movwf	(btemp+10)^0,c
 22540  012BBC  0EFF               	movlw	255
 22541  012BBE  6E3D               	movwf	(btemp+11)^0,c
 22542                           
 22543                           ;stkvar	_bexp @ sp[(-13)+10]
 22544  012BC0  0EFD               	movlw	-3
 22545  012BC2  50E3               	movf	plusw1,w,c
 22546  012BC4  6E3A               	movwf	(btemp+8)^0,c
 22547  012BC6  6A3B               	clrf	(btemp+9)^0,c
 22548                           
 22549                           ;stkvar	_aexp @ sp[(-13)+11]
 22550  012BC8  0EFE               	movlw	-2
 22551  012BCA  50E3               	movf	plusw1,w,c
 22552  012BCC  263A               	addwf	(btemp+8)^0,f,c
 22553  012BCE  0E00               	movlw	0
 22554  012BD0  223B               	addwfc	(btemp+9)^0,f,c
 22555  012BD2  503C               	movf	(btemp+10)^0,w,c
 22556  012BD4  263A               	addwf	(btemp+8)^0,f,c
 22557  012BD6  503D               	movf	(btemp+11)^0,w,c
 22558  012BD8  223B               	addwfc	(btemp+9)^0,f,c
 22559                           
 22560                           ;stkvar	_temp @ sp[(-13)+8]
 22561  012BDA  0EFB               	movlw	-5
 22562  012BDC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22563  012BE2  0EFC               	movlw	-4
 22564  012BE4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22565  012BEA  D021               	goto	l7109
 22566  012BEC                     l7099:
 22567                           
 22568                           ;stkvar	_prod @ sp[(-13)+0]
 22569  012BEC  90D8               	bcf	status,0,c
 22570  012BEE  0EF3               	movlw	-13
 22571  012BF0  36E3               	rlcf	plusw1,f,c
 22572  012BF2  0EF4               	movlw	-12
 22573  012BF4  36E3               	rlcf	plusw1,f,c
 22574  012BF6  0EF5               	movlw	-11
 22575  012BF8  36E3               	rlcf	plusw1,f,c
 22576  012BFA  0EF6               	movlw	-10
 22577  012BFC  36E3               	rlcf	plusw1,f,c
 22578                           
 22579                           ;stkvar	_grs @ sp[(-13)+4]
 22580  012BFE  0EFA               	movlw	-6
 22581  012C00  AEE3               	btfss	plusw1,7,c
 22582  012C02  D002               	goto	l7105
 22583                           
 22584                           ;stkvar	_prod @ sp[(-13)+0]
 22585  012C04  0EF3               	movlw	-13
 22586  012C06  80E3               	bsf	plusw1,0,c
 22587  012C08                     l7105:
 22588                           
 22589                           ;stkvar	_grs @ sp[(-13)+4]
 22590  012C08  90D8               	bcf	status,0,c
 22591  012C0A  0EF7               	movlw	-9
 22592  012C0C  36E3               	rlcf	plusw1,f,c
 22593  012C0E  0EF8               	movlw	-8
 22594  012C10  36E3               	rlcf	plusw1,f,c
 22595  012C12  0EF9               	movlw	-7
 22596  012C14  36E3               	rlcf	plusw1,f,c
 22597  012C16  0EFA               	movlw	-6
 22598  012C18  36E3               	rlcf	plusw1,f,c
 22599                           
 22600                           ;stkvar	_temp @ sp[(-13)+8]
 22601  012C1A  50E1               	movf	fsr1l,w,c
 22602  012C1C  0FFB               	addlw	-5
 22603  012C1E  6ED9               	movwf	fsr2l,c
 22604  012C20  50E2               	movf	fsr1h,w,c
 22605  012C22  6EDA               	movwf	fsr2h,c
 22606  012C24  0EFF               	movlw	255
 22607  012C26  22DA               	addwfc	fsr2h,f,c
 22608  012C28  06DE               	decf	postinc2,f,c
 22609  012C2A  0E00               	movlw	0
 22610  012C2C  5ADD               	subwfb	postdec2,f,c
 22611  012C2E                     l7109:
 22612                           
 22613                           ;stkvar	_prod @ sp[(-13)+0]
 22614  012C2E  0EF5               	movlw	-11
 22615  012C30  AEE3               	btfss	plusw1,7,c
 22616  012C32  D7DC               	goto	l7099
 22617                           
 22618                           ;stkvar	_aexp @ sp[(-13)+11]
 22619  012C34  0EFE               	movlw	-2
 22620  012C36  6AE3               	clrf	plusw1,c
 22621                           
 22622                           ;stkvar	_grs @ sp[(-13)+4]
 22623  012C38  0EFA               	movlw	-6
 22624  012C3A  AEE3               	btfss	plusw1,7,c
 22625  012C3C  D020               	goto	l7123
 22626                           
 22627                           ;stkvar	_grs @ sp[(-13)+4]
 22628  012C3E  50E1               	movf	fsr1l,w,c
 22629  012C40  0FF7               	addlw	-9
 22630  012C42  6ED9               	movwf	fsr2l,c
 22631  012C44  50E2               	movf	fsr1h,w,c
 22632  012C46  6EDA               	movwf	fsr2h,c
 22633  012C48  0EFF               	movlw	255
 22634  012C4A  22DA               	addwfc	fsr2h,f,c
 22635  012C4C  0EFF               	movlw	255
 22636  012C4E  14DE               	andwf	postinc2,w,c
 22637  012C50  6E3A               	movwf	(btemp+8)^0,c
 22638  012C52  0EFF               	movlw	255
 22639  012C54  14DE               	andwf	postinc2,w,c
 22640  012C56  6E3B               	movwf	(btemp+9)^0,c
 22641  012C58  0EFF               	movlw	255
 22642  012C5A  14DE               	andwf	postinc2,w,c
 22643  012C5C  6E3C               	movwf	(btemp+10)^0,c
 22644  012C5E  0E7F               	movlw	127
 22645  012C60  14DE               	andwf	postinc2,w,c
 22646  012C62  6E3D               	movwf	(btemp+11)^0,c
 22647  012C64  503A               	movf	(btemp+8)^0,w,c
 22648  012C66  103B               	iorwf	(btemp+9)^0,w,c
 22649  012C68  103C               	iorwf	(btemp+10)^0,w,c
 22650  012C6A  103D               	iorwf	(btemp+11)^0,w,c
 22651  012C6C  B4D8               	btfsc	status,2,c
 22652  012C6E  D004               	goto	l7119
 22653  012C70                     u6050:
 22654                           
 22655                           ;stkvar	_aexp @ sp[(-13)+11]
 22656  012C70  0EFE               	movlw	-2
 22657  012C72  6AE3               	clrf	plusw1,c
 22658  012C74  2AE3               	incf	plusw1,f,c
 22659  012C76  D003               	goto	l7123
 22660  012C78                     l7119:
 22661                           
 22662                           ;stkvar	_prod @ sp[(-13)+0]
 22663  012C78  0EF3               	movlw	-13
 22664  012C7A  B0E3               	btfsc	plusw1,0,c
 22665  012C7C  D7F9               	goto	u6050
 22666  012C7E                     l7123:
 22667                           
 22668                           ;stkvar	_aexp @ sp[(-13)+11]
 22669  012C7E  0EFE               	movlw	-2
 22670  012C80  50E3               	movf	plusw1,w,c
 22671  012C82  B4D8               	btfsc	status,2,c
 22672  012C84  D036               	goto	l7133
 22673                           
 22674                           ;stkvar	_prod @ sp[(-13)+0]
 22675  012C86  50E1               	movf	fsr1l,w,c
 22676  012C88  0FF3               	addlw	-13
 22677  012C8A  6ED9               	movwf	fsr2l,c
 22678  012C8C  50E2               	movf	fsr1h,w,c
 22679  012C8E  6EDA               	movwf	fsr2h,c
 22680  012C90  0EFF               	movlw	255
 22681  012C92  22DA               	addwfc	fsr2h,f,c
 22682  012C94  2ADE               	incf	postinc2,f,c
 22683  012C96  0E00               	movlw	0
 22684  012C98  22DE               	addwfc	postinc2,f,c
 22685  012C9A  22DE               	addwfc	postinc2,f,c
 22686  012C9C  22DE               	addwfc	postinc2,f,c
 22687                           
 22688                           ;stkvar	_prod @ sp[(-13)+0]
 22689  012C9E  0EF6               	movlw	-10
 22690  012CA0  A0E3               	btfss	plusw1,0,c
 22691  012CA2  D027               	goto	l7133
 22692  012CA4  0E01               	movlw	1
 22693  012CA6  6E3D               	movwf	(btemp+11)^0,c
 22694                           
 22695                           ;stkvar	_prod @ sp[(-13)+0]
 22696  012CA8  50E1               	movf	fsr1l,w,c
 22697  012CAA  0FF3               	addlw	-13
 22698  012CAC  6ED9               	movwf	fsr2l,c
 22699  012CAE  50E2               	movf	fsr1h,w,c
 22700  012CB0  6EDA               	movwf	fsr2h,c
 22701  012CB2  0EFF               	movlw	255
 22702  012CB4  22DA               	addwfc	fsr2h,f,c
 22703  012CB6  283D               	incf	(btemp+11)^0,w,c
 22704  012CB8  52DE               	movf	postinc2,f,c
 22705  012CBA  D008               	goto	u6090
 22706  012CBC                     u6095:
 22707  012CBC  52DE               	movf	postinc2,f,c
 22708  012CBE  90D8               	bcf	status,0,c
 22709  012CC0  BEDC               	btfsc	preinc2,7,c
 22710  012CC2  80D8               	bsf	status,0,c
 22711  012CC4  32DD               	rrcf	postdec2,f,c
 22712  012CC6  32DD               	rrcf	postdec2,f,c
 22713  012CC8  32DD               	rrcf	postdec2,f,c
 22714  012CCA  32DE               	rrcf	postinc2,f,c
 22715  012CCC                     u6090:
 22716  012CCC  2EE8               	decfsz	wreg,f,c
 22717  012CCE  D7F6               	goto	u6095
 22718                           
 22719                           ;stkvar	_temp @ sp[(-13)+8]
 22720  012CD0  0EFB               	movlw	-5
 22721  012CD2  50E3               	movf	plusw1,w,c
 22722  012CD4  0F01               	addlw	1
 22723  012CD6  6E32               	movwf	btemp^0,c
 22724  012CD8  0EFB               	movlw	-5
 22725  012CDA  0060  F0CB  FFE3   	movff	btemp,plusw1
 22726  012CE0  6A32               	clrf	btemp^0,c
 22727  012CE2  0EFC               	movlw	-4
 22728  012CE4  50E3               	movf	plusw1,w,c
 22729  012CE6  2032               	addwfc	btemp^0,w,c
 22730  012CE8  6E32               	movwf	btemp^0,c
 22731  012CEA  0EFC               	movlw	-4
 22732  012CEC  0060  F0CB  FFE3   	movff	btemp,plusw1
 22733  012CF2                     l7133:
 22734                           
 22735                           ;stkvar	_temp @ sp[(-13)+8]
 22736  012CF2  0EFC               	movlw	-4
 22737  012CF4  BEE3               	btfsc	plusw1,7,c
 22738  012CF6  D020               	goto	l7137
 22739  012CF8  0EFC               	movlw	-4
 22740  012CFA  50E3               	movf	plusw1,w,c
 22741  012CFC  E104               	bnz	u6100
 22742  012CFE  0EFB               	movlw	-5
 22743  012D00  28E3               	incf	plusw1,w,c
 22744  012D02  A0D8               	btfss	status,0,c
 22745  012D04  D019               	goto	l7137
 22746  012D06                     u6100:
 22747  012D06  0E00               	movlw	0
 22748  012D08  6E3A               	movwf	(btemp+8)^0,c
 22749  012D0A  0E00               	movlw	0
 22750  012D0C  6E3B               	movwf	(btemp+9)^0,c
 22751  012D0E  0E80               	movlw	128
 22752  012D10  6E3C               	movwf	(btemp+10)^0,c
 22753  012D12  0E7F               	movlw	127
 22754  012D14  6E3D               	movwf	(btemp+11)^0,c
 22755                           
 22756                           ;stkvar	_prod @ sp[(-13)+0]
 22757  012D16  0EF3               	movlw	-13
 22758  012D18  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22759  012D1E  0EF4               	movlw	-12
 22760  012D20  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22761  012D26  0EF5               	movlw	-11
 22762  012D28  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22763  012D2E  0EF6               	movlw	-10
 22764  012D30  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22765  012D36  D044               	goto	l7153
 22766  012D38                     l7137:
 22767                           
 22768                           ;stkvar	_temp @ sp[(-13)+8]
 22769  012D38  0EFC               	movlw	-4
 22770  012D3A  BEE3               	btfsc	plusw1,7,c
 22771  012D3C  D007               	goto	u6110
 22772  012D3E  0EFC               	movlw	-4
 22773  012D40  50E3               	movf	plusw1,w,c
 22774  012D42  E10F               	bnz	l7143
 22775  012D44  0EFB               	movlw	-5
 22776  012D46  04E3               	decf	plusw1,w,c
 22777  012D48  B0D8               	btfsc	status,0,c
 22778  012D4A  D00B               	goto	l7143
 22779  012D4C                     u6110:
 22780                           
 22781                           ;stkvar	_prod @ sp[(-13)+0]
 22782  012D4C  0EF3               	movlw	-13
 22783  012D4E  6AE3               	clrf	plusw1,c
 22784  012D50  0EF4               	movlw	-12
 22785  012D52  6AE3               	clrf	plusw1,c
 22786  012D54  0EF5               	movlw	-11
 22787  012D56  6AE3               	clrf	plusw1,c
 22788  012D58  0EF6               	movlw	-10
 22789  012D5A  6AE3               	clrf	plusw1,c
 22790                           
 22791                           ;stkvar	_sign @ sp[(-13)+12]
 22792  012D5C  0EFF               	movlw	-1
 22793  012D5E  6AE3               	clrf	plusw1,c
 22794  012D60  D02F               	goto	l7153
 22795  012D62                     l7143:
 22796                           
 22797                           ;stkvar	_temp @ sp[(-13)+8]
 22798                           ;stkvar	_bexp @ sp[(-13)+10]
 22799  012D62  0EFB               	movlw	-5
 22800  012D64  006F FF8C  F032    	movff	plusw1,btemp
 22801  012D6A  0EFD               	movlw	-3
 22802  012D6C  0060  F0CB  FFE3   	movff	btemp,plusw1
 22803                           
 22804                           ;stkvar	_prod @ sp[(-13)+0]
 22805  012D72  50E1               	movf	fsr1l,w,c
 22806  012D74  0FF3               	addlw	-13
 22807  012D76  6ED9               	movwf	fsr2l,c
 22808  012D78  50E2               	movf	fsr1h,w,c
 22809  012D7A  6EDA               	movwf	fsr2h,c
 22810  012D7C  0EFF               	movlw	255
 22811  012D7E  22DA               	addwfc	fsr2h,f,c
 22812  012D80  0EFF               	movlw	255
 22813  012D82  16DE               	andwf	postinc2,f,c
 22814  012D84  0EFF               	movlw	255
 22815  012D86  16DE               	andwf	postinc2,f,c
 22816  012D88  0E7F               	movlw	127
 22817  012D8A  16DE               	andwf	postinc2,f,c
 22818  012D8C  0E00               	movlw	0
 22819  012D8E  16DE               	andwf	postinc2,f,c
 22820                           
 22821                           ;stkvar	_bexp @ sp[(-13)+10]
 22822  012D90  0EFD               	movlw	-3
 22823  012D92  A0E3               	btfss	plusw1,0,c
 22824  012D94  D008               	goto	l7151
 22825                           
 22826                           ;stkvar	_prod @ sp[(-13)+0]
 22827  012D96  0EF5               	movlw	245
 22828  012D98  24E1               	addwf	fsr1l,w,c
 22829  012D9A  6ED9               	movwf	fsr2l,c
 22830  012D9C  0EFF               	movlw	255
 22831  012D9E  20E2               	addwfc	fsr1h,w,c
 22832  012DA0  6EDA               	movwf	fsr2h,c
 22833  012DA2  0E00               	movlw	0
 22834  012DA4  8EDB               	bsf	plusw2,7,c
 22835  012DA6                     l7151:
 22836                           
 22837                           ;stkvar	_prod @ sp[(-13)+0]
 22838  012DA6  0EF6               	movlw	246
 22839  012DA8  24E1               	addwf	fsr1l,w,c
 22840  012DAA  6ED9               	movwf	fsr2l,c
 22841  012DAC  0EFF               	movlw	255
 22842  012DAE  20E2               	addwfc	fsr1h,w,c
 22843  012DB0  6EDA               	movwf	fsr2h,c
 22844                           
 22845                           ;stkvar	_bexp @ sp[(-13)+10]
 22846  012DB2  0EFD               	movlw	-3
 22847  012DB4  006F FF8C  F03D    	movff	plusw1,btemp+11
 22848  012DBA  90D8               	bcf	status,0,c
 22849  012DBC  303D               	rrcf	(btemp+11)^0,w,c
 22850  012DBE  6EDF               	movwf	indf2,c
 22851  012DC0                     l7153:
 22852                           
 22853                           ;stkvar	_sign @ sp[(-13)+12]
 22854  012DC0  0EFF               	movlw	-1
 22855  012DC2  006F FF8C  F03D    	movff	plusw1,btemp+11
 22856                           
 22857                           ;stkvar	_prod @ sp[(-13)+0]
 22858  012DC8  0EF6               	movlw	246
 22859  012DCA  24E1               	addwf	fsr1l,w,c
 22860  012DCC  6ED9               	movwf	fsr2l,c
 22861  012DCE  0EFF               	movlw	255
 22862  012DD0  20E2               	addwfc	fsr1h,w,c
 22863  012DD2  6EDA               	movwf	fsr2h,c
 22864  012DD4  503D               	movf	(btemp+11)^0,w,c
 22865  012DD6  12DF               	iorwf	indf2,f,c
 22866                           
 22867                           ;stkvar	_prod @ sp[(-13)+0]
 22868  012DD8  0EF3               	movlw	-13
 22869  012DDA  006F FF8C  F032    	movff	plusw1,btemp
 22870  012DE0  0EF4               	movlw	-12
 22871  012DE2  006F FF8C  F033    	movff	plusw1,btemp+1
 22872  012DE8  0EF5               	movlw	-11
 22873  012DEA  006F FF8C  F034    	movff	plusw1,btemp+2
 22874  012DF0  0EF6               	movlw	-10
 22875  012DF2  006F FF8C  F035    	movff	plusw1,btemp+3
 22876  012DF8                     l2724:
 22877                           
 22878                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 22879  012DF8  0EEB               	movlw	235
 22880  012DFA  26E1               	addwf	fsr1l,f,c
 22881  012DFC  0EFF               	movlw	255
 22882  012DFE  22E2               	addwfc	fsr1h,f,c
 22883  012E00  0012               	return		;funcret
 22884  012E02                     __end_of___flmul:
 22885                           	opt callstack 0
 22886                           
 22887 ;; *************** function _SYSTEM_Initialize *****************
 22888 ;; Defined at:
 22889 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22890 ;; Parameters:    Size  Location     Type
 22891 ;;		None
 22892 ;; Auto vars:     Size  Location     Type
 22893 ;;		None
 22894 ;; Return value:  Size  Location     Type
 22895 ;;                  1  [STACK] void 
 22896 ;; Registers used:
 22897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22898 ;; Tracked objects:
 22899 ;;		On entry : 0/0
 22900 ;;		On exit  : 3F/3C
 22901 ;;		Unchanged: 0/0
 22902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;Total ram usage:        0 bytes
 22908 ;; Hardware stack levels used:    1
 22909 ;; Hardware stack levels required when called:    8
 22910 ;; This function calls:
 22911 ;;		_ADCC_Initialize
 22912 ;;		_CLKREF_Initialize
 22913 ;;		_DMA1_Initialize
 22914 ;;		_DMA2_Initialize
 22915 ;;		_EXT_INT_Initialize
 22916 ;;		_FVR_Initialize
 22917 ;;		_INTERRUPT_Initialize
 22918 ;;		_OSCILLATOR_Initialize
 22919 ;;		_PIN_MANAGER_Initialize
 22920 ;;		_PMD_Initialize
 22921 ;;		_PWM8_Initialize
 22922 ;;		_SPI1_Initialize
 22923 ;;		_TMR2_Initialize
 22924 ;;		_TMR5_Initialize
 22925 ;;		_TMR6_Initialize
 22926 ;;		_UART1_Initialize
 22927 ;;		_UART2_Initialize
 22928 ;; This function is called by:
 22929 ;;		_main
 22930 ;; This function uses a reentrant model
 22931 ;;
 22932                           
 22933                           	psect	text91
 22934  01835C                     __ptext91:
 22935                           	opt callstack 0
 22936  01835C                     _SYSTEM_Initialize:
 22937                           	opt callstack 22
 22938                           
 22939                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22940                           
 22941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22942                           ;incstack = 0
 22943  01835C  EC42  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22944                           
 22945                           ; BSR set to: 57
 22946                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22947  018360  ECE8  F0C6         	call	_PMD_Initialize	;wreg free
 22948                           
 22949                           ; BSR set to: 57
 22950                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22951  018364  EC0C  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22952                           
 22953                           ; BSR set to: 58
 22954                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22955  018368  ECDD  F0C6         	call	_OSCILLATOR_Initialize	;wreg free
 22956                           
 22957                           ; BSR set to: 57
 22958                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22959  01836C  EC47  F0C7         	call	_FVR_Initialize	;wreg free
 22960                           
 22961                           ; BSR set to: 62
 22962                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22963  018370  ECD9  F0BE         	call	_ADCC_Initialize	;wreg free
 22964                           
 22965                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22966  018374  ECAF  F0C6         	call	_TMR2_Initialize	;wreg free
 22967                           
 22968                           ; BSR set to: 57
 22969                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22970  018378  ECD2  F0C6         	call	_PWM8_Initialize	;wreg free
 22971                           
 22972                           ; BSR set to: 63
 22973                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22974  01837C  EC43  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22975                           
 22976                           ; BSR set to: 57
 22977                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22978  018380  EC00  F0C4         	call	_TMR6_Initialize	;wreg free
 22979                           
 22980                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22981  018384  ECD1  F0C1         	call	_TMR5_Initialize	;wreg free
 22982                           
 22983                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22984  018388  ECA7  F0BF         	call	_UART1_Initialize	;wreg free
 22985                           
 22986                           ; BSR set to: 57
 22987                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22988  01838C  EC3B  F0C0         	call	_UART2_Initialize	;wreg free
 22989                           
 22990                           ; BSR set to: 57
 22991                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22992  018390  ECC7  F0C6         	call	_SPI1_Initialize	;wreg free
 22993                           
 22994                           ; BSR set to: 61
 22995                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22996  018394  ECC5  F0C0         	call	_DMA2_Initialize	;wreg free
 22997                           
 22998                           ; BSR set to: 59
 22999                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 23000  018398  ECA4  F0BE         	call	_DMA1_Initialize	;wreg free
 23001                           
 23002                           ; BSR set to: 59
 23003                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 23004  01839C  EC21  F0C7         	call	_CLKREF_Initialize	;wreg free
 23005                           
 23006                           ; BSR set to: 60
 23007                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23008  0183A0  0012               	return		;funcret
 23009  0183A2                     __end_of_SYSTEM_Initialize:
 23010                           	opt callstack 0
 23011                           
 23012 ;; *************** function _UART2_Initialize *****************
 23013 ;; Defined at:
 23014 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23015 ;; Parameters:    Size  Location     Type
 23016 ;;		None
 23017 ;; Auto vars:     Size  Location     Type
 23018 ;;		None
 23019 ;; Return value:  Size  Location     Type
 23020 ;;                  1  [STACK] void 
 23021 ;; Registers used:
 23022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23023 ;; Tracked objects:
 23024 ;;		On entry : 3F/39
 23025 ;;		On exit  : 3F/39
 23026 ;;		Unchanged: 0/0
 23027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23032 ;;Total ram usage:        0 bytes
 23033 ;; Hardware stack levels used:    1
 23034 ;; Hardware stack levels required when called:    7
 23035 ;; This function calls:
 23036 ;;		_UART2_SetRxInterruptHandler
 23037 ;;		_UART2_SetTxInterruptHandler
 23038 ;; This function is called by:
 23039 ;;		_SYSTEM_Initialize
 23040 ;; This function uses a reentrant model
 23041 ;;
 23042                           
 23043                           	psect	text92
 23044  018076                     __ptext92:
 23045                           	opt callstack 0
 23046  018076                     _UART2_Initialize:
 23047                           	opt callstack 22
 23048                           
 23049                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23050                           
 23051                           ; BSR set to: 60
 23052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23053                           ;incstack = 0
 23054  018076  0139               	movlb	57	; () banked
 23055  018078  9596               	bcf	150,2,b	;volatile
 23056                           
 23057                           ; BSR set to: 57
 23058                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23059  01807A  0EBA               	movlw	low _UART2_Receive_ISR
 23060  01807C  6EE6               	movwf	postinc1,c
 23061  01807E  0E8C               	movlw	high _UART2_Receive_ISR
 23062  018080  6EE6               	movwf	postinc1,c
 23063  018082  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23064  018084  6EE6               	movwf	postinc1,c
 23065  018086  EC8F  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 23066                           
 23067                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23068  01808A  0139               	movlb	57	; () banked
 23069  01808C  9796               	bcf	150,3,b	;volatile
 23070                           
 23071                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23072  01808E  0ED4               	movlw	low _UART2_Transmit_ISR
 23073  018090  6EE6               	movwf	postinc1,c
 23074  018092  0E87               	movlw	high _UART2_Transmit_ISR
 23075  018094  6EE6               	movwf	postinc1,c
 23076  018096  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23077  018098  6EE6               	movwf	postinc1,c
 23078  01809A  EC7B  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 23079                           
 23080                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23081  01809E  013D               	movlb	61	; () banked
 23082  0180A0  6BD4               	clrf	212,b	;volatile
 23083                           
 23084                           ; BSR set to: 61
 23085                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23086  0180A2  6BD6               	clrf	214,b	;volatile
 23087                           
 23088                           ; BSR set to: 61
 23089                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23090  0180A4  6BD8               	clrf	216,b	;volatile
 23091                           
 23092                           ; BSR set to: 61
 23093                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23094  0180A6  0EB0               	movlw	176
 23095  0180A8  6FDA               	movwf	218,b	;volatile
 23096                           
 23097                           ; BSR set to: 61
 23098                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23099  0180AA  0E80               	movlw	128
 23100  0180AC  6FDB               	movwf	219,b	;volatile
 23101                           
 23102                           ; BSR set to: 61
 23103                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23104  0180AE  6BDC               	clrf	220,b	;volatile
 23105                           
 23106                           ; BSR set to: 61
 23107                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23108  0180B0  0E82               	movlw	130
 23109  0180B2  6FDD               	movwf	221,b	;volatile
 23110                           
 23111                           ; BSR set to: 61
 23112                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23113  0180B4  0E06               	movlw	6
 23114  0180B6  6FDE               	movwf	222,b	;volatile
 23115                           
 23116                           ; BSR set to: 61
 23117                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23118  0180B8  6BDF               	clrf	223,b	;volatile
 23119                           
 23120                           ; BSR set to: 61
 23121                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23122  0180BA  6BE0               	clrf	224,b	;volatile
 23123                           
 23124                           ; BSR set to: 61
 23125                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23126  0180BC  6BE1               	clrf	225,b	;volatile
 23127                           
 23128                           ; BSR set to: 61
 23129                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23130  0180BE  6BE2               	clrf	226,b	;volatile
 23131                           
 23132                           ; BSR set to: 61
 23133                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23134  0180C0  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 23135                           
 23136                           ; BSR set to: 61
 23137                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23138  0180C2  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 23139                           
 23140                           ; BSR set to: 61
 23141                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23142  0180C4  0E40               	movlw	64
 23143  0180C6  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23144                           
 23145                           ; BSR set to: 61
 23146                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23147  0180C8  6A28               	clrf	_uart2RxHead^0,c	;volatile
 23148                           
 23149                           ; BSR set to: 61
 23150                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23151  0180CA  6A27               	clrf	_uart2RxTail^0,c	;volatile
 23152                           
 23153                           ; BSR set to: 61
 23154                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23155  0180CC  6A26               	clrf	_uart2RxCount^0,c	;volatile
 23156                           
 23157                           ; BSR set to: 61
 23158                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23159  0180CE  0139               	movlb	57	; () banked
 23160  0180D0  8596               	bsf	150,2,b	;volatile
 23161                           
 23162                           ; BSR set to: 57
 23163                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23164  0180D2  0012               	return		;funcret
 23165  0180D4                     __end_of_UART2_Initialize:
 23166                           	opt callstack 0
 23167                           
 23168 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23169 ;; Defined at:
 23170 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23173 ;;		 -> UART2_Transmit_ISR(1), 
 23174 ;; Auto vars:     Size  Location     Type
 23175 ;;		None
 23176 ;; Return value:  Size  Location     Type
 23177 ;;                  1  [STACK] void 
 23178 ;; Registers used:
 23179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23180 ;; Tracked objects:
 23181 ;;		On entry : 3F/39
 23182 ;;		On exit  : 0/0
 23183 ;;		Unchanged: 0/0
 23184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23189 ;;Total ram usage:        0 bytes
 23190 ;; Hardware stack levels used:    1
 23191 ;; Hardware stack levels required when called:    6
 23192 ;; This function calls:
 23193 ;;		Nothing
 23194 ;; This function is called by:
 23195 ;;		_UART2_Initialize
 23196 ;; This function uses a reentrant model
 23197 ;;
 23198                           
 23199                           	psect	text93
 23200  0188F6                     __ptext93:
 23201                           	opt callstack 0
 23202  0188F6                     _UART2_SetTxInterruptHandler:
 23203                           	opt callstack 22
 23204                           
 23205                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23206                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23207                           
 23208                           ; BSR set to: 57
 23209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23210                           ;incstack = 0
 23211  0188F6  50E1               	movf	fsr1l,w,c
 23212  0188F8  0FFD               	addlw	-3
 23213  0188FA  6ED9               	movwf	fsr2l,c
 23214  0188FC  50E2               	movf	fsr1h,w,c
 23215  0188FE  6EDA               	movwf	fsr2h,c
 23216  018900  0EFF               	movlw	255
 23217  018902  22DA               	addwfc	fsr2h,f,c
 23218  018904  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 23219  01890A  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 23220  018910  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 23221                           
 23222                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23223  018916  52E5               	movf	postdec1,f,c
 23224  018918  52E5               	movf	postdec1,f,c
 23225  01891A  52E5               	movf	postdec1,f,c
 23226  01891C  0012               	return		;funcret
 23227  01891E                     __end_of_UART2_SetTxInterruptHandler:
 23228                           	opt callstack 0
 23229                           
 23230 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23231 ;; Defined at:
 23232 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23233 ;; Parameters:    Size  Location     Type
 23234 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23235 ;;		 -> UART2_Receive_ISR(1), 
 23236 ;; Auto vars:     Size  Location     Type
 23237 ;;		None
 23238 ;; Return value:  Size  Location     Type
 23239 ;;                  1  [STACK] void 
 23240 ;; Registers used:
 23241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23242 ;; Tracked objects:
 23243 ;;		On entry : 3F/39
 23244 ;;		On exit  : 0/0
 23245 ;;		Unchanged: 0/0
 23246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23251 ;;Total ram usage:        0 bytes
 23252 ;; Hardware stack levels used:    1
 23253 ;; Hardware stack levels required when called:    6
 23254 ;; This function calls:
 23255 ;;		Nothing
 23256 ;; This function is called by:
 23257 ;;		_UART2_Initialize
 23258 ;; This function uses a reentrant model
 23259 ;;
 23260                           
 23261                           	psect	text94
 23262  01891E                     __ptext94:
 23263                           	opt callstack 0
 23264  01891E                     _UART2_SetRxInterruptHandler:
 23265                           	opt callstack 22
 23266                           
 23267                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23268                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23269                           
 23270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23271                           ;incstack = 0
 23272  01891E  50E1               	movf	fsr1l,w,c
 23273  018920  0FFD               	addlw	-3
 23274  018922  6ED9               	movwf	fsr2l,c
 23275  018924  50E2               	movf	fsr1h,w,c
 23276  018926  6EDA               	movwf	fsr2h,c
 23277  018928  0EFF               	movlw	255
 23278  01892A  22DA               	addwfc	fsr2h,f,c
 23279  01892C  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 23280  018932  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 23281  018938  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 23282                           
 23283                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23284  01893E  52E5               	movf	postdec1,f,c
 23285  018940  52E5               	movf	postdec1,f,c
 23286  018942  52E5               	movf	postdec1,f,c
 23287  018944  0012               	return		;funcret
 23288  018946                     __end_of_UART2_SetRxInterruptHandler:
 23289                           	opt callstack 0
 23290                           
 23291 ;; *************** function _UART1_Initialize *****************
 23292 ;; Defined at:
 23293 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23294 ;; Parameters:    Size  Location     Type
 23295 ;;		None
 23296 ;; Auto vars:     Size  Location     Type
 23297 ;;		None
 23298 ;; Return value:  Size  Location     Type
 23299 ;;                  1  [STACK] void 
 23300 ;; Registers used:
 23301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23302 ;; Tracked objects:
 23303 ;;		On entry : 0/39
 23304 ;;		On exit  : 3F/39
 23305 ;;		Unchanged: 0/0
 23306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23311 ;;Total ram usage:        0 bytes
 23312 ;; Hardware stack levels used:    1
 23313 ;; Hardware stack levels required when called:    7
 23314 ;; This function calls:
 23315 ;;		_UART1_SetRxInterruptHandler
 23316 ;;		_UART1_SetTxInterruptHandler
 23317 ;; This function is called by:
 23318 ;;		_SYSTEM_Initialize
 23319 ;; This function uses a reentrant model
 23320 ;;
 23321                           
 23322                           	psect	text95
 23323  017F4E                     __ptext95:
 23324                           	opt callstack 0
 23325  017F4E                     _UART1_Initialize:
 23326                           	opt callstack 22
 23327                           
 23328                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23329                           
 23330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23331                           ;incstack = 0
 23332  017F4E  0139               	movlb	57	; () banked
 23333  017F50  9793               	bcf	147,3,b	;volatile
 23334                           
 23335                           ; BSR set to: 57
 23336                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23337  017F52  0E9C               	movlw	low _UART1_Receive_ISR
 23338  017F54  6EE6               	movwf	postinc1,c
 23339  017F56  0E8C               	movlw	high _UART1_Receive_ISR
 23340  017F58  6EE6               	movwf	postinc1,c
 23341  017F5A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23342  017F5C  6EE6               	movwf	postinc1,c
 23343  017F5E  ECB7  F0C4         	call	_UART1_SetRxInterruptHandler	;wreg free
 23344                           
 23345                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23346  017F62  0139               	movlb	57	; () banked
 23347  017F64  9993               	bcf	147,4,b	;volatile
 23348                           
 23349                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23350  017F66  0EA8               	movlw	low _UART1_Transmit_ISR
 23351  017F68  6EE6               	movwf	postinc1,c
 23352  017F6A  0E87               	movlw	high _UART1_Transmit_ISR
 23353  017F6C  6EE6               	movwf	postinc1,c
 23354  017F6E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23355  017F70  6EE6               	movwf	postinc1,c
 23356  017F72  ECA3  F0C4         	call	_UART1_SetTxInterruptHandler	;wreg free
 23357                           
 23358                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23359  017F76  013D               	movlb	61	; () banked
 23360  017F78  6BEC               	clrf	236,b	;volatile
 23361                           
 23362                           ; BSR set to: 61
 23363                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23364  017F7A  6BED               	clrf	237,b	;volatile
 23365                           
 23366                           ; BSR set to: 61
 23367                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23368  017F7C  6BEE               	clrf	238,b	;volatile
 23369                           
 23370                           ; BSR set to: 61
 23371                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23372  017F7E  6BEF               	clrf	239,b	;volatile
 23373                           
 23374                           ; BSR set to: 61
 23375                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23376  017F80  6BF0               	clrf	240,b	;volatile
 23377                           
 23378                           ; BSR set to: 61
 23379                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23380  017F82  6BF1               	clrf	241,b	;volatile
 23381                           
 23382                           ; BSR set to: 61
 23383                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23384  017F84  0EB0               	movlw	176
 23385  017F86  6FF2               	movwf	242,b	;volatile
 23386                           
 23387                           ; BSR set to: 61
 23388                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23389  017F88  0E80               	movlw	128
 23390  017F8A  6FF3               	movwf	243,b	;volatile
 23391                           
 23392                           ; BSR set to: 61
 23393                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23394  017F8C  6BF4               	clrf	244,b	;volatile
 23395                           
 23396                           ; BSR set to: 61
 23397                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23398  017F8E  0E82               	movlw	130
 23399  017F90  6FF5               	movwf	245,b	;volatile
 23400                           
 23401                           ; BSR set to: 61
 23402                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23403  017F92  0E06               	movlw	6
 23404  017F94  6FF6               	movwf	246,b	;volatile
 23405                           
 23406                           ; BSR set to: 61
 23407                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23408  017F96  6BF7               	clrf	247,b	;volatile
 23409                           
 23410                           ; BSR set to: 61
 23411                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23412  017F98  6BF8               	clrf	248,b	;volatile
 23413                           
 23414                           ; BSR set to: 61
 23415                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23416  017F9A  6BF9               	clrf	249,b	;volatile
 23417                           
 23418                           ; BSR set to: 61
 23419                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23420  017F9C  6BFA               	clrf	250,b	;volatile
 23421                           
 23422                           ; BSR set to: 61
 23423                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23424  017F9E  6A31               	clrf	_uart1TxHead^0,c	;volatile
 23425                           
 23426                           ; BSR set to: 61
 23427                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23428  017FA0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 23429                           
 23430                           ; BSR set to: 61
 23431                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23432  017FA2  0E40               	movlw	64
 23433  017FA4  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23434                           
 23435                           ; BSR set to: 61
 23436                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23437  017FA6  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 23438                           
 23439                           ; BSR set to: 61
 23440                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23441  017FA8  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 23442                           
 23443                           ; BSR set to: 61
 23444                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23445  017FAA  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 23446                           
 23447                           ; BSR set to: 61
 23448                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23449  017FAC  0139               	movlb	57	; () banked
 23450  017FAE  8793               	bsf	147,3,b	;volatile
 23451                           
 23452                           ; BSR set to: 57
 23453                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23454  017FB0  0012               	return		;funcret
 23455  017FB2                     __end_of_UART1_Initialize:
 23456                           	opt callstack 0
 23457                           
 23458 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23459 ;; Defined at:
 23460 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23461 ;; Parameters:    Size  Location     Type
 23462 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23463 ;;		 -> UART1_Transmit_ISR(1), 
 23464 ;; Auto vars:     Size  Location     Type
 23465 ;;		None
 23466 ;; Return value:  Size  Location     Type
 23467 ;;                  1  [STACK] void 
 23468 ;; Registers used:
 23469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23470 ;; Tracked objects:
 23471 ;;		On entry : 3F/39
 23472 ;;		On exit  : 0/0
 23473 ;;		Unchanged: 0/0
 23474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23479 ;;Total ram usage:        0 bytes
 23480 ;; Hardware stack levels used:    1
 23481 ;; Hardware stack levels required when called:    6
 23482 ;; This function calls:
 23483 ;;		Nothing
 23484 ;; This function is called by:
 23485 ;;		_UART1_Initialize
 23486 ;; This function uses a reentrant model
 23487 ;;
 23488                           
 23489                           	psect	text96
 23490  018946                     __ptext96:
 23491                           	opt callstack 0
 23492  018946                     _UART1_SetTxInterruptHandler:
 23493                           	opt callstack 22
 23494                           
 23495                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23496                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23497                           
 23498                           ; BSR set to: 57
 23499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23500                           ;incstack = 0
 23501  018946  50E1               	movf	fsr1l,w,c
 23502  018948  0FFD               	addlw	-3
 23503  01894A  6ED9               	movwf	fsr2l,c
 23504  01894C  50E2               	movf	fsr1h,w,c
 23505  01894E  6EDA               	movwf	fsr2h,c
 23506  018950  0EFF               	movlw	255
 23507  018952  22DA               	addwfc	fsr2h,f,c
 23508  018954  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 23509  01895A  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 23510  018960  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 23511                           
 23512                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23513  018966  52E5               	movf	postdec1,f,c
 23514  018968  52E5               	movf	postdec1,f,c
 23515  01896A  52E5               	movf	postdec1,f,c
 23516  01896C  0012               	return		;funcret
 23517  01896E                     __end_of_UART1_SetTxInterruptHandler:
 23518                           	opt callstack 0
 23519                           
 23520 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23521 ;; Defined at:
 23522 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23523 ;; Parameters:    Size  Location     Type
 23524 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23525 ;;		 -> UART1_Receive_ISR(1), 
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;		None
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1  [STACK] void 
 23530 ;; Registers used:
 23531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23532 ;; Tracked objects:
 23533 ;;		On entry : 3F/39
 23534 ;;		On exit  : 0/0
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;Total ram usage:        0 bytes
 23542 ;; Hardware stack levels used:    1
 23543 ;; Hardware stack levels required when called:    6
 23544 ;; This function calls:
 23545 ;;		Nothing
 23546 ;; This function is called by:
 23547 ;;		_UART1_Initialize
 23548 ;; This function uses a reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text97
 23552  01896E                     __ptext97:
 23553                           	opt callstack 0
 23554  01896E                     _UART1_SetRxInterruptHandler:
 23555                           	opt callstack 22
 23556                           
 23557                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23558                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23559                           
 23560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23561                           ;incstack = 0
 23562  01896E  50E1               	movf	fsr1l,w,c
 23563  018970  0FFD               	addlw	-3
 23564  018972  6ED9               	movwf	fsr2l,c
 23565  018974  50E2               	movf	fsr1h,w,c
 23566  018976  6EDA               	movwf	fsr2h,c
 23567  018978  0EFF               	movlw	255
 23568  01897A  22DA               	addwfc	fsr2h,f,c
 23569  01897C  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23570  018982  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23571  018988  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23572                           
 23573                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23574  01898E  52E5               	movf	postdec1,f,c
 23575  018990  52E5               	movf	postdec1,f,c
 23576  018992  52E5               	movf	postdec1,f,c
 23577  018994  0012               	return		;funcret
 23578  018996                     __end_of_UART1_SetRxInterruptHandler:
 23579                           	opt callstack 0
 23580                           
 23581 ;; *************** function _TMR6_Initialize *****************
 23582 ;; Defined at:
 23583 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23584 ;; Parameters:    Size  Location     Type
 23585 ;;		None
 23586 ;; Auto vars:     Size  Location     Type
 23587 ;;		None
 23588 ;; Return value:  Size  Location     Type
 23589 ;;                  1  [STACK] void 
 23590 ;; Registers used:
 23591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23592 ;; Tracked objects:
 23593 ;;		On entry : 3F/39
 23594 ;;		On exit  : 0/0
 23595 ;;		Unchanged: 0/0
 23596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23601 ;;Total ram usage:        0 bytes
 23602 ;; Hardware stack levels used:    1
 23603 ;; Hardware stack levels required when called:    7
 23604 ;; This function calls:
 23605 ;;		_TMR6_SetInterruptHandler
 23606 ;; This function is called by:
 23607 ;;		_SYSTEM_Initialize
 23608 ;; This function uses a reentrant model
 23609 ;;
 23610                           
 23611                           	psect	text98
 23612  018800                     __ptext98:
 23613                           	opt callstack 0
 23614  018800                     _TMR6_Initialize:
 23615                           	opt callstack 22
 23616                           
 23617                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23618                           
 23619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23620                           ;incstack = 0
 23621  018800  0E01               	movlw	1
 23622  018802  6E96               	movwf	150,c	;volatile
 23623                           
 23624                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23625  018804  6A95               	clrf	149,c	;volatile
 23626                           
 23627                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23628  018806  6A97               	clrf	151,c	;volatile
 23629                           
 23630                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23631  018808  0E7C               	movlw	124
 23632  01880A  6E93               	movwf	147,c	;volatile
 23633                           
 23634                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23635  01880C  6A92               	clrf	146,c	;volatile
 23636                           
 23637                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23638  01880E  0139               	movlb	57	; () banked
 23639  018810  91A9               	bcf	169,0,b	;volatile
 23640                           
 23641                           ; BSR set to: 57
 23642                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23643  018812  8199               	bsf	153,0,b	;volatile
 23644                           
 23645                           ; BSR set to: 57
 23646                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23647  018814  0EE8               	movlw	low _TMR6_DefaultInterruptHandler
 23648  018816  6EE6               	movwf	postinc1,c
 23649  018818  0E83               	movlw	high _TMR6_DefaultInterruptHandler
 23650  01881A  6EE6               	movwf	postinc1,c
 23651  01881C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23652  01881E  6EE6               	movwf	postinc1,c
 23653  018820  ECCB  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
 23654                           
 23655                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23656  018824  0EE0               	movlw	224
 23657  018826  6E94               	movwf	148,c	;volatile
 23658                           
 23659                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23660  018828  0012               	return		;funcret
 23661  01882A                     __end_of_TMR6_Initialize:
 23662                           	opt callstack 0
 23663                           
 23664 ;; *************** function _TMR6_SetInterruptHandler *****************
 23665 ;; Defined at:
 23666 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23667 ;; Parameters:    Size  Location     Type
 23668 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23669 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23670 ;; Auto vars:     Size  Location     Type
 23671 ;;		None
 23672 ;; Return value:  Size  Location     Type
 23673 ;;                  1  [STACK] void 
 23674 ;; Registers used:
 23675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23676 ;; Tracked objects:
 23677 ;;		On entry : 3F/39
 23678 ;;		On exit  : 0/0
 23679 ;;		Unchanged: 0/0
 23680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23685 ;;Total ram usage:        0 bytes
 23686 ;; Hardware stack levels used:    1
 23687 ;; Hardware stack levels required when called:    6
 23688 ;; This function calls:
 23689 ;;		Nothing
 23690 ;; This function is called by:
 23691 ;;		_TMR6_Initialize
 23692 ;; This function uses a reentrant model
 23693 ;;
 23694                           
 23695                           	psect	text99
 23696  018996                     __ptext99:
 23697                           	opt callstack 0
 23698  018996                     _TMR6_SetInterruptHandler:
 23699                           	opt callstack 22
 23700                           
 23701                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23702                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23703                           
 23704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23705                           ;incstack = 0
 23706  018996  50E1               	movf	fsr1l,w,c
 23707  018998  0FFD               	addlw	-3
 23708  01899A  6ED9               	movwf	fsr2l,c
 23709  01899C  50E2               	movf	fsr1h,w,c
 23710  01899E  6EDA               	movwf	fsr2h,c
 23711  0189A0  0EFF               	movlw	255
 23712  0189A2  22DA               	addwfc	fsr2h,f,c
 23713  0189A4  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23714  0189AA  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23715  0189B0  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23716                           
 23717                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23718  0189B6  52E5               	movf	postdec1,f,c
 23719  0189B8  52E5               	movf	postdec1,f,c
 23720  0189BA  52E5               	movf	postdec1,f,c
 23721  0189BC  0012               	return		;funcret
 23722  0189BE                     __end_of_TMR6_SetInterruptHandler:
 23723                           	opt callstack 0
 23724                           
 23725 ;; *************** function _TMR5_Initialize *****************
 23726 ;; Defined at:
 23727 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23728 ;; Parameters:    Size  Location     Type
 23729 ;;		None
 23730 ;; Auto vars:     Size  Location     Type
 23731 ;;		None
 23732 ;; Return value:  Size  Location     Type
 23733 ;;                  1  [STACK] void 
 23734 ;; Registers used:
 23735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23736 ;; Tracked objects:
 23737 ;;		On entry : 0/39
 23738 ;;		On exit  : 0/0
 23739 ;;		Unchanged: 0/0
 23740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23745 ;;Total ram usage:        0 bytes
 23746 ;; Hardware stack levels used:    1
 23747 ;; Hardware stack levels required when called:    7
 23748 ;; This function calls:
 23749 ;;		_TMR5_SetInterruptHandler
 23750 ;; This function is called by:
 23751 ;;		_SYSTEM_Initialize
 23752 ;; This function uses a reentrant model
 23753 ;;
 23754                           
 23755                           	psect	text100
 23756  0183A2                     __ptext100:
 23757                           	opt callstack 0
 23758  0183A2                     _TMR5_Initialize:
 23759                           	opt callstack 22
 23760                           
 23761                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23762                           
 23763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23764                           ;incstack = 0
 23765  0183A2  6A9B               	clrf	155,c	;volatile
 23766                           
 23767                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23768  0183A4  6A9C               	clrf	156,c	;volatile
 23769                           
 23770                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23771  0183A6  0E01               	movlw	1
 23772  0183A8  6E9D               	movwf	157,c	;volatile
 23773                           
 23774                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23775  0183AA  0E63               	movlw	99
 23776  0183AC  6E99               	movwf	153,c	;volatile
 23777                           
 23778                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23779  0183AE  0EC0               	movlw	192
 23780  0183B0  6E98               	movwf	152,c	;volatile
 23781                           
 23782                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23783  0183B2  5098               	movf	152,w,c	;volatile
 23784  0183B4  006F FE64  F032    	movff	16281,btemp	;volatile
 23785  0183BA  6A33               	clrf	(btemp+1)^0,c
 23786  0183BC  0060  F0C8  F033   	movff	btemp,btemp+1
 23787  0183C2  6A32               	clrf	btemp^0,c
 23788  0183C4  1032               	iorwf	btemp^0,w,c
 23789  0183C6  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23790  0183C8  5033               	movf	(btemp+1)^0,w,c
 23791  0183CA  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23792                           
 23793                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23794  0183CC  0139               	movlb	57	; () banked
 23795  0183CE  9DA8               	bcf	168,6,b	;volatile
 23796                           
 23797                           ; BSR set to: 57
 23798                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23799  0183D0  8D98               	bsf	152,6,b	;volatile
 23800                           
 23801                           ; BSR set to: 57
 23802                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23803  0183D2  0E86               	movlw	low _TMR5_DefaultInterruptHandler
 23804  0183D4  6EE6               	movwf	postinc1,c
 23805  0183D6  0E8A               	movlw	high _TMR5_DefaultInterruptHandler
 23806  0183D8  6EE6               	movwf	postinc1,c
 23807  0183DA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23808  0183DC  6EE6               	movwf	postinc1,c
 23809  0183DE  ECDF  F0C4         	call	_TMR5_SetInterruptHandler	;wreg free
 23810                           
 23811                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23812  0183E2  0E31               	movlw	49
 23813  0183E4  6E9A               	movwf	154,c	;volatile
 23814                           
 23815                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23816  0183E6  0012               	return		;funcret
 23817  0183E8                     __end_of_TMR5_Initialize:
 23818                           	opt callstack 0
 23819                           
 23820 ;; *************** function _TMR5_SetInterruptHandler *****************
 23821 ;; Defined at:
 23822 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23823 ;; Parameters:    Size  Location     Type
 23824 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23825 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23826 ;; Auto vars:     Size  Location     Type
 23827 ;;		None
 23828 ;; Return value:  Size  Location     Type
 23829 ;;                  1  [STACK] void 
 23830 ;; Registers used:
 23831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23832 ;; Tracked objects:
 23833 ;;		On entry : 3F/39
 23834 ;;		On exit  : 0/0
 23835 ;;		Unchanged: 0/0
 23836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;Total ram usage:        0 bytes
 23842 ;; Hardware stack levels used:    1
 23843 ;; Hardware stack levels required when called:    6
 23844 ;; This function calls:
 23845 ;;		Nothing
 23846 ;; This function is called by:
 23847 ;;		_TMR5_Initialize
 23848 ;; This function uses a reentrant model
 23849 ;;
 23850                           
 23851                           	psect	text101
 23852  0189BE                     __ptext101:
 23853                           	opt callstack 0
 23854  0189BE                     _TMR5_SetInterruptHandler:
 23855                           	opt callstack 22
 23856                           
 23857                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23858                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23859                           
 23860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23861                           ;incstack = 0
 23862  0189BE  50E1               	movf	fsr1l,w,c
 23863  0189C0  0FFD               	addlw	-3
 23864  0189C2  6ED9               	movwf	fsr2l,c
 23865  0189C4  50E2               	movf	fsr1h,w,c
 23866  0189C6  6EDA               	movwf	fsr2h,c
 23867  0189C8  0EFF               	movlw	255
 23868  0189CA  22DA               	addwfc	fsr2h,f,c
 23869  0189CC  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 23870  0189D2  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 23871  0189D8  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 23872                           
 23873                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23874  0189DE  52E5               	movf	postdec1,f,c
 23875  0189E0  52E5               	movf	postdec1,f,c
 23876  0189E2  52E5               	movf	postdec1,f,c
 23877  0189E4  0012               	return		;funcret
 23878  0189E6                     __end_of_TMR5_SetInterruptHandler:
 23879                           	opt callstack 0
 23880                           
 23881 ;; *************** function _TMR2_Initialize *****************
 23882 ;; Defined at:
 23883 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23884 ;; Parameters:    Size  Location     Type
 23885 ;;		None
 23886 ;; Auto vars:     Size  Location     Type
 23887 ;;		None
 23888 ;; Return value:  Size  Location     Type
 23889 ;;                  1  [STACK] void 
 23890 ;; Registers used:
 23891 ;;		wreg, status,2
 23892 ;; Tracked objects:
 23893 ;;		On entry : 0/3E
 23894 ;;		On exit  : 3F/39
 23895 ;;		Unchanged: 0/0
 23896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23901 ;;Total ram usage:        0 bytes
 23902 ;; Hardware stack levels used:    1
 23903 ;; Hardware stack levels required when called:    6
 23904 ;; This function calls:
 23905 ;;		Nothing
 23906 ;; This function is called by:
 23907 ;;		_SYSTEM_Initialize
 23908 ;; This function uses a reentrant model
 23909 ;;
 23910                           
 23911                           	psect	text102
 23912  018D5E                     __ptext102:
 23913                           	opt callstack 0
 23914  018D5E                     _TMR2_Initialize:
 23915                           	opt callstack 23
 23916                           
 23917                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23918                           
 23919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23920                           ;incstack = 0
 23921  018D5E  0E01               	movlw	1
 23922  018D60  6EAE               	movwf	174,c	;volatile
 23923                           
 23924                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23925  018D62  6AAD               	clrf	173,c	;volatile
 23926                           
 23927                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23928  018D64  6AAF               	clrf	175,c	;volatile
 23929                           
 23930                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23931  018D66  0E63               	movlw	99
 23932  018D68  6EAB               	movwf	171,c	;volatile
 23933                           
 23934                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23935  018D6A  6AAA               	clrf	170,c	;volatile
 23936                           
 23937                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23938  018D6C  0139               	movlb	57	; () banked
 23939  018D6E  95A4               	bcf	164,2,b	;volatile
 23940                           
 23941                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23942  018D70  0EC0               	movlw	192
 23943  018D72  6EAC               	movwf	172,c	;volatile
 23944                           
 23945                           ; BSR set to: 57
 23946                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23947  018D74  0012               	return		;funcret
 23948  018D76                     __end_of_TMR2_Initialize:
 23949                           	opt callstack 0
 23950                           
 23951 ;; *************** function _SPI1_Initialize *****************
 23952 ;; Defined at:
 23953 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23954 ;; Parameters:    Size  Location     Type
 23955 ;;		None
 23956 ;; Auto vars:     Size  Location     Type
 23957 ;;		None
 23958 ;; Return value:  Size  Location     Type
 23959 ;;                  1  [STACK] void 
 23960 ;; Registers used:
 23961 ;;		wreg, status,2
 23962 ;; Tracked objects:
 23963 ;;		On entry : 3F/39
 23964 ;;		On exit  : 3F/3D
 23965 ;;		Unchanged: 0/0
 23966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23971 ;;Total ram usage:        0 bytes
 23972 ;; Hardware stack levels used:    1
 23973 ;; Hardware stack levels required when called:    6
 23974 ;; This function calls:
 23975 ;;		Nothing
 23976 ;; This function is called by:
 23977 ;;		_SYSTEM_Initialize
 23978 ;; This function uses a reentrant model
 23979 ;;
 23980                           
 23981                           	psect	text103
 23982  018D8E                     __ptext103:
 23983                           	opt callstack 0
 23984  018D8E                     _SPI1_Initialize:
 23985                           	opt callstack 23
 23986                           
 23987                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23988                           
 23989                           ; BSR set to: 57
 23990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23991                           ;incstack = 0
 23992  018D8E  0E40               	movlw	64
 23993  018D90  013D               	movlb	61	; () banked
 23994  018D92  6F15               	movwf	21,b	;volatile
 23995                           
 23996                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23997  018D94  0E03               	movlw	3
 23998  018D96  6F16               	movwf	22,b	;volatile
 23999                           
 24000                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24001  018D98  0E4F               	movlw	79
 24002  018D9A  6F19               	movwf	25,b	;volatile
 24003                           
 24004                           ; BSR set to: 61
 24005                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24006  018D9C  6B1C               	clrf	28,b	;volatile
 24007                           
 24008                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24009  018D9E  0E83               	movlw	131
 24010  018DA0  6F14               	movwf	20,b	;volatile
 24011                           
 24012                           ; BSR set to: 61
 24013                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24014  018DA2  0012               	return		;funcret
 24015  018DA4                     __end_of_SPI1_Initialize:
 24016                           	opt callstack 0
 24017                           
 24018 ;; *************** function _PWM8_Initialize *****************
 24019 ;; Defined at:
 24020 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24021 ;; Parameters:    Size  Location     Type
 24022 ;;		None
 24023 ;; Auto vars:     Size  Location     Type
 24024 ;;		None
 24025 ;; Return value:  Size  Location     Type
 24026 ;;                  1  [STACK] void 
 24027 ;; Registers used:
 24028 ;;		wreg, status,2
 24029 ;; Tracked objects:
 24030 ;;		On entry : 3F/39
 24031 ;;		On exit  : 3F/3F
 24032 ;;		Unchanged: 0/0
 24033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24038 ;;Total ram usage:        0 bytes
 24039 ;; Hardware stack levels used:    1
 24040 ;; Hardware stack levels required when called:    6
 24041 ;; This function calls:
 24042 ;;		Nothing
 24043 ;; This function is called by:
 24044 ;;		_SYSTEM_Initialize
 24045 ;; This function uses a reentrant model
 24046 ;;
 24047                           
 24048                           	psect	text104
 24049  018DA4                     __ptext104:
 24050                           	opt callstack 0
 24051  018DA4                     _PWM8_Initialize:
 24052                           	opt callstack 23
 24053                           
 24054                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24055                           
 24056                           ; BSR set to: 61
 24057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24058                           ;incstack = 0
 24059  018DA4  0E80               	movlw	128
 24060  018DA6  6E62               	movwf	98,c	;volatile
 24061                           
 24062                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24063  018DA8  6A61               	clrf	97,c	;volatile
 24064                           
 24065                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24066  018DAA  0E40               	movlw	64
 24067  018DAC  6E60               	movwf	96,c	;volatile
 24068                           
 24069                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24070  018DAE  013F               	movlb	63	; () banked
 24071  018DB0  515F               	movf	95,w,b	;volatile
 24072  018DB2  0B3F               	andlw	-193
 24073  018DB4  0940               	iorlw	64
 24074  018DB6  6F5F               	movwf	95,b	;volatile
 24075                           
 24076                           ; BSR set to: 63
 24077                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24078  018DB8  0012               	return		;funcret
 24079  018DBA                     __end_of_PWM8_Initialize:
 24080                           	opt callstack 0
 24081                           
 24082 ;; *************** function _PMD_Initialize *****************
 24083 ;; Defined at:
 24084 ;;		line 89 in file "mcc_generated_files/mcc.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;		None
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;		None
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  1  [STACK] void 
 24091 ;; Registers used:
 24092 ;;		None
 24093 ;; Tracked objects:
 24094 ;;		On entry : 3F/39
 24095 ;;		On exit  : 3F/39
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;Total ram usage:        0 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:    6
 24105 ;; This function calls:
 24106 ;;		Nothing
 24107 ;; This function is called by:
 24108 ;;		_SYSTEM_Initialize
 24109 ;; This function uses a reentrant model
 24110 ;;
 24111                           
 24112                           	psect	text105
 24113  018DD0                     __ptext105:
 24114                           	opt callstack 0
 24115  018DD0                     _PMD_Initialize:
 24116                           	opt callstack 23
 24117                           
 24118                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 24119                           
 24120                           ; BSR set to: 63
 24121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24122                           ;incstack = 0
 24123  018DD0  0139               	movlb	57	; () banked
 24124  018DD2  6BC0               	clrf	192,b	;volatile
 24125                           
 24126                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 24127  018DD4  6BC1               	clrf	193,b	;volatile
 24128                           
 24129                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 24130  018DD6  6BC2               	clrf	194,b	;volatile
 24131                           
 24132                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 24133  018DD8  6BC3               	clrf	195,b	;volatile
 24134                           
 24135                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 24136  018DDA  6BC4               	clrf	196,b	;volatile
 24137                           
 24138                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 24139  018DDC  6BC5               	clrf	197,b	;volatile
 24140                           
 24141                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 24142  018DDE  6BC6               	clrf	198,b	;volatile
 24143                           
 24144                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 24145  018DE0  6BC7               	clrf	199,b	;volatile
 24146                           
 24147                           ; BSR set to: 57
 24148                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24149  018DE2  0012               	return		;funcret
 24150  018DE4                     __end_of_PMD_Initialize:
 24151                           	opt callstack 0
 24152                           
 24153 ;; *************** function _PIN_MANAGER_Initialize *****************
 24154 ;; Defined at:
 24155 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24156 ;; Parameters:    Size  Location     Type
 24157 ;;		None
 24158 ;; Auto vars:     Size  Location     Type
 24159 ;;		None
 24160 ;; Return value:  Size  Location     Type
 24161 ;;                  1  [STACK] void 
 24162 ;; Registers used:
 24163 ;;		wreg, status,2
 24164 ;; Tracked objects:
 24165 ;;		On entry : 3F/39
 24166 ;;		On exit  : 3F/3A
 24167 ;;		Unchanged: 0/0
 24168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;Total ram usage:        0 bytes
 24174 ;; Hardware stack levels used:    1
 24175 ;; Hardware stack levels required when called:    6
 24176 ;; This function calls:
 24177 ;;		Nothing
 24178 ;; This function is called by:
 24179 ;;		_SYSTEM_Initialize
 24180 ;; This function uses a reentrant model
 24181 ;;
 24182                           
 24183                           	psect	text106
 24184  017A18                     __ptext106:
 24185                           	opt callstack 0
 24186  017A18                     _PIN_MANAGER_Initialize:
 24187                           	opt callstack 23
 24188                           
 24189                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24190                           
 24191                           ; BSR set to: 57
 24192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24193                           ;incstack = 0
 24194  017A18  0E07               	movlw	7
 24195  017A1A  6EBE               	movwf	190,c	;volatile
 24196                           
 24197                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24198  017A1C  0E80               	movlw	128
 24199  017A1E  6EBD               	movwf	189,c	;volatile
 24200                           
 24201                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24202  017A20  6ABA               	clrf	186,c	;volatile
 24203                           
 24204                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24205  017A22  6ABF               	clrf	191,c	;volatile
 24206                           
 24207                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24208  017A24  6ABB               	clrf	187,c	;volatile
 24209                           
 24210                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24211  017A26  0E07               	movlw	7
 24212  017A28  6EBC               	movwf	188,c	;volatile
 24213                           
 24214                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24215  017A2A  6AC6               	clrf	198,c	;volatile
 24216                           
 24217                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24218  017A2C  0E0F               	movlw	15
 24219  017A2E  6EC7               	movwf	199,c	;volatile
 24220                           
 24221                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24222  017A30  68C2               	setf	194,c	;volatile
 24223                           
 24224                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24225  017A32  0EBF               	movlw	191
 24226  017A34  6EC3               	movwf	195,c	;volatile
 24227                           
 24228                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24229  017A36  0E90               	movlw	144
 24230  017A38  6EC4               	movwf	196,c	;volatile
 24231                           
 24232                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24233  017A3A  0E0C               	movlw	12
 24234  017A3C  6EC5               	movwf	197,c	;volatile
 24235                           
 24236                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24237  017A3E  013A               	movlb	58	; () banked
 24238  017A40  6B70               	clrf	112,b	;volatile
 24239                           
 24240                           ; BSR set to: 58
 24241                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24242  017A42  6B60               	clrf	96,b	;volatile
 24243                           
 24244                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24245  017A44  0E3C               	movlw	60
 24246  017A46  6F50               	movwf	80,b	;volatile
 24247                           
 24248                           ; BSR set to: 58
 24249                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24250  017A48  6B80               	clrf	128,b	;volatile
 24251                           
 24252                           ; BSR set to: 58
 24253                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24254  017A4A  6B90               	clrf	144,b	;volatile
 24255                           
 24256                           ; BSR set to: 58
 24257                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24258  017A4C  6940               	setf	64,b	;volatile
 24259                           
 24260                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24261  017A4E  0E0C               	movlw	12
 24262  017A50  6F71               	movwf	113,b	;volatile
 24263                           
 24264                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24265  017A52  0E0F               	movlw	15
 24266  017A54  6F91               	movwf	145,b	;volatile
 24267                           
 24268                           ; BSR set to: 58
 24269                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24270  017A56  6B81               	clrf	129,b	;volatile
 24271                           
 24272                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24273  017A58  0E83               	movlw	131
 24274  017A5A  6F51               	movwf	81,b	;volatile
 24275                           
 24276                           ; BSR set to: 58
 24277                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24278  017A5C  6B41               	clrf	65,b	;volatile
 24279                           
 24280                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24281  017A5E  0E97               	movlw	151
 24282  017A60  6F61               	movwf	97,b	;volatile
 24283                           
 24284                           ; BSR set to: 58
 24285                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24286  017A62  6B82               	clrf	130,b	;volatile
 24287                           
 24288                           ; BSR set to: 58
 24289                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24290  017A64  6B92               	clrf	146,b	;volatile
 24291                           
 24292                           ; BSR set to: 58
 24293                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24294  017A66  6B42               	clrf	66,b	;volatile
 24295                           
 24296                           ; BSR set to: 58
 24297                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24298  017A68  6B52               	clrf	82,b	;volatile
 24299                           
 24300                           ; BSR set to: 58
 24301                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24302  017A6A  6B62               	clrf	98,b	;volatile
 24303                           
 24304                           ; BSR set to: 58
 24305                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24306  017A6C  6B72               	clrf	114,b	;volatile
 24307                           
 24308                           ; BSR set to: 58
 24309                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24310  017A6E  6943               	setf	67,b	;volatile
 24311                           
 24312                           ; BSR set to: 58
 24313                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24314  017A70  6953               	setf	83,b	;volatile
 24315                           
 24316                           ; BSR set to: 58
 24317                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24318  017A72  6963               	setf	99,b	;volatile
 24319                           
 24320                           ; BSR set to: 58
 24321                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24322  017A74  6973               	setf	115,b	;volatile
 24323                           
 24324                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24325  017A76  0E07               	movlw	7
 24326  017A78  6F83               	movwf	131,b	;volatile
 24327                           
 24328                           ; BSR set to: 58
 24329                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24330  017A7A  6993               	setf	147,b	;volatile
 24331                           
 24332                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24333  017A7C  0E0F               	movlw	15
 24334  017A7E  6FE8               	movwf	232,b	;volatile
 24335                           
 24336                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24337  017A80  0E13               	movlw	19
 24338  017A82  6FDE               	movwf	222,b	;volatile
 24339                           
 24340                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24341  017A84  0E16               	movlw	22
 24342  017A86  6F0E               	movwf	14,b	;volatile
 24343                           
 24344                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24345  017A88  0E1E               	movlw	30
 24346  017A8A  6F13               	movwf	19,b	;volatile
 24347                           
 24348                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24349  017A8C  0E08               	movlw	8
 24350  017A8E  6FC0               	movwf	192,b	;volatile
 24351                           
 24352                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24353  017A90  0E10               	movlw	16
 24354  017A92  6F19               	movwf	25,b	;volatile
 24355                           
 24356                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24357  017A94  0E09               	movlw	9
 24358  017A96  6FC1               	movwf	193,b	;volatile
 24359                           
 24360                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24361  017A98  0E1F               	movlw	31
 24362  017A9A  6F15               	movwf	21,b	;volatile
 24363                           
 24364                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24365  017A9C  0E13               	movlw	19
 24366  017A9E  6F16               	movwf	22,b	;volatile
 24367                           
 24368                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24369  017AA0  0E17               	movlw	23
 24370  017AA2  6FE5               	movwf	229,b	;volatile
 24371                           
 24372                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24373  017AA4  0E14               	movlw	20
 24374  017AA6  6FDF               	movwf	223,b	;volatile
 24375                           
 24376                           ; BSR set to: 58
 24377                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24378  017AA8  0012               	return		;funcret
 24379  017AAA                     __end_of_PIN_MANAGER_Initialize:
 24380                           	opt callstack 0
 24381                           
 24382 ;; *************** function _OSCILLATOR_Initialize *****************
 24383 ;; Defined at:
 24384 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24385 ;; Parameters:    Size  Location     Type
 24386 ;;		None
 24387 ;; Auto vars:     Size  Location     Type
 24388 ;;		None
 24389 ;; Return value:  Size  Location     Type
 24390 ;;                  1  [STACK] void 
 24391 ;; Registers used:
 24392 ;;		wreg, status,2
 24393 ;; Tracked objects:
 24394 ;;		On entry : 3F/3A
 24395 ;;		On exit  : 3F/39
 24396 ;;		Unchanged: 0/0
 24397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;Total ram usage:        0 bytes
 24403 ;; Hardware stack levels used:    1
 24404 ;; Hardware stack levels required when called:    6
 24405 ;; This function calls:
 24406 ;;		Nothing
 24407 ;; This function is called by:
 24408 ;;		_SYSTEM_Initialize
 24409 ;; This function uses a reentrant model
 24410 ;;
 24411                           
 24412                           	psect	text107
 24413  018DBA                     __ptext107:
 24414                           	opt callstack 0
 24415  018DBA                     _OSCILLATOR_Initialize:
 24416                           	opt callstack 23
 24417                           
 24418                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24419                           
 24420                           ; BSR set to: 58
 24421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24422                           ;incstack = 0
 24423  018DBA  0E20               	movlw	32
 24424  018DBC  0139               	movlb	57	; () banked
 24425  018DBE  6FD9               	movwf	217,b	;volatile
 24426                           
 24427                           ; BSR set to: 57
 24428                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24429  018DC0  6BDB               	clrf	219,b	;volatile
 24430                           
 24431                           ; BSR set to: 57
 24432                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24433  018DC2  6BDD               	clrf	221,b	;volatile
 24434                           
 24435                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24436  018DC4  0E02               	movlw	2
 24437  018DC6  6FDF               	movwf	223,b	;volatile
 24438                           
 24439                           ; BSR set to: 57
 24440                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24441  018DC8  6BDE               	clrf	222,b	;volatile
 24442  018DCA                     l171:
 24443                           
 24444                           ; BSR set to: 57
 24445                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24446  018DCA  B1DC               	btfsc	220,0,b	;volatile
 24447  018DCC  0012               	return	
 24448  018DCE  D7FD               	goto	l171
 24449  018DD0                     __end_of_OSCILLATOR_Initialize:
 24450                           	opt callstack 0
 24451                           
 24452 ;; *************** function _INTERRUPT_Initialize *****************
 24453 ;; Defined at:
 24454 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24455 ;; Parameters:    Size  Location     Type
 24456 ;;		None
 24457 ;; Auto vars:     Size  Location     Type
 24458 ;;  state           1  [STACK] _Bool 
 24459 ;; Return value:  Size  Location     Type
 24460 ;;                  1  [STACK] void 
 24461 ;; Registers used:
 24462 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24463 ;; Tracked objects:
 24464 ;;		On entry : 0/0
 24465 ;;		On exit  : 3F/39
 24466 ;;		Unchanged: 0/0
 24467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24472 ;;Total ram usage:        0 bytes
 24473 ;; Hardware stack levels used:    1
 24474 ;; Hardware stack levels required when called:    6
 24475 ;; This function calls:
 24476 ;;		Nothing
 24477 ;; This function is called by:
 24478 ;;		_SYSTEM_Initialize
 24479 ;; This function uses a reentrant model
 24480 ;;
 24481                           
 24482                           	psect	text108
 24483  017E84                     __ptext108:
 24484                           	opt callstack 0
 24485  017E84                     _INTERRUPT_Initialize:
 24486                           	opt callstack 0
 24487                           
 24488                           ; BSR set to: 57
 24489                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24490  017E84  52E6               	movf	postinc1,f,c
 24491                           
 24492                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24493                           
 24494                           ;incstack = 0
 24495  017E86  8AD2               	bsf	210,5,c	;volatile
 24496                           
 24497                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24498  017E88  AED2               	btfss	16338,7,c	;volatile
 24499  017E8A  D003               	goto	u8080
 24500  017E8C  6A3D               	clrf	(btemp+11)^0,c
 24501  017E8E  2A3D               	incf	(btemp+11)^0,f,c
 24502  017E90  D001               	goto	u8098
 24503  017E92                     u8080:
 24504  017E92  6A3D               	clrf	(btemp+11)^0,c
 24505  017E94                     u8098:
 24506                           
 24507                           ;stkvar	_state @ sp[(-1)+0]
 24508  017E94  0EFF               	movlw	-1
 24509  017E96  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24510                           
 24511                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24512  017E9C  9ED2               	bcf	16338,7,c	;volatile
 24513                           
 24514                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24515  017E9E  0E55               	movlw	85
 24516  017EA0  6ED4               	movwf	212,c	;volatile
 24517                           
 24518                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24519  017EA2  0EAA               	movlw	170
 24520  017EA4  6ED4               	movwf	212,c	;volatile
 24521                           
 24522                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24523  017EA6  90D4               	bcf	212,0,c	;volatile
 24524                           
 24525                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24526  017EA8  0138               	movlb	56	; () banked
 24527  017EAA  6B9F               	clrf	159,b	;volatile
 24528                           
 24529                           ; BSR set to: 56
 24530                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24531  017EAC  6B9E               	clrf	158,b	;volatile
 24532                           
 24533                           ; BSR set to: 56
 24534                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24535  017EAE  0E08               	movlw	8
 24536  017EB0  6F9D               	movwf	157,b	;volatile
 24537                           
 24538                           ; BSR set to: 56
 24539                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24540  017EB2  0E55               	movlw	85
 24541  017EB4  6ED4               	movwf	212,c	;volatile
 24542                           
 24543                           ; BSR set to: 56
 24544                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24545  017EB6  0EAA               	movlw	170
 24546  017EB8  6ED4               	movwf	212,c	;volatile
 24547                           
 24548                           ; BSR set to: 56
 24549                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24550  017EBA  80D4               	bsf	212,0,c	;volatile
 24551                           
 24552                           ; BSR set to: 56
 24553                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24554                           ;stkvar	_state @ sp[(-1)+0]
 24555  017EBC  0EFF               	movlw	-1
 24556  017EBE  B0E3               	btfsc	plusw1,0,c
 24557  017EC0  D002               	bra	u8105
 24558  017EC2  9ED2               	bcf	16338,7,c	;volatile
 24559  017EC4  D001               	bra	u8106
 24560  017EC6                     u8105:
 24561  017EC6  8ED2               	bsf	16338,7,c	;volatile
 24562  017EC8                     u8106:
 24563                           
 24564                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24565  017EC8  0139               	movlb	57	; () banked
 24566  017ECA  8782               	bsf	130,3,b	;volatile
 24567                           
 24568                           ; BSR set to: 57
 24569                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24570  017ECC  8382               	bsf	130,1,b	;volatile
 24571                           
 24572                           ; BSR set to: 57
 24573                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24574  017ECE  8182               	bsf	130,0,b	;volatile
 24575                           
 24576                           ; BSR set to: 57
 24577                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24578  017ED0  8582               	bsf	130,2,b	;volatile
 24579                           
 24580                           ; BSR set to: 57
 24581                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24582  017ED2  8786               	bsf	134,3,b	;volatile
 24583                           
 24584                           ; BSR set to: 57
 24585                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24586  017ED4  8586               	bsf	134,2,b	;volatile
 24587                           
 24588                           ; BSR set to: 57
 24589                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24590  017ED6  8983               	bsf	131,4,b	;volatile
 24591                           
 24592                           ; BSR set to: 57
 24593                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24594  017ED8  8783               	bsf	131,3,b	;volatile
 24595                           
 24596                           ; BSR set to: 57
 24597                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24598  017EDA  8181               	bsf	129,0,b	;volatile
 24599                           
 24600                           ; BSR set to: 57
 24601                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24602  017EDC  9185               	bcf	133,0,b	;volatile
 24603                           
 24604                           ; BSR set to: 57
 24605                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24606  017EDE  8189               	bsf	137,0,b	;volatile
 24607                           
 24608                           ; BSR set to: 57
 24609                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24610  017EE0  9D88               	bcf	136,6,b	;volatile
 24611                           
 24612                           ; BSR set to: 57
 24613                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24614  017EE2  8581               	bsf	129,2,b	;volatile
 24615                           
 24616                           ; BSR set to: 57
 24617                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24618  017EE4  8781               	bsf	129,3,b	;volatile
 24619                           
 24620                           ; BSR set to: 57
 24621                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24622  017EE6  52E5               	movf	postdec1,f,c
 24623  017EE8  0012               	return		;funcret
 24624  017EEA                     __end_of_INTERRUPT_Initialize:
 24625                           	opt callstack 0
 24626                           
 24627 ;; *************** function _FVR_Initialize *****************
 24628 ;; Defined at:
 24629 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24630 ;; Parameters:    Size  Location     Type
 24631 ;;		None
 24632 ;; Auto vars:     Size  Location     Type
 24633 ;;		None
 24634 ;; Return value:  Size  Location     Type
 24635 ;;                  1  [STACK] void 
 24636 ;; Registers used:
 24637 ;;		wreg, status,2
 24638 ;; Tracked objects:
 24639 ;;		On entry : 3F/39
 24640 ;;		On exit  : 3F/3E
 24641 ;;		Unchanged: 0/0
 24642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;Total ram usage:        0 bytes
 24648 ;; Hardware stack levels used:    1
 24649 ;; Hardware stack levels required when called:    6
 24650 ;; This function calls:
 24651 ;;		Nothing
 24652 ;; This function is called by:
 24653 ;;		_SYSTEM_Initialize
 24654 ;; This function uses a reentrant model
 24655 ;;
 24656                           
 24657                           	psect	text109
 24658  018E8E                     __ptext109:
 24659                           	opt callstack 0
 24660  018E8E                     _FVR_Initialize:
 24661                           	opt callstack 23
 24662                           
 24663                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24664                           
 24665                           ; BSR set to: 57
 24666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24667                           ;incstack = 0
 24668  018E8E  0EAF               	movlw	175
 24669  018E90  013E               	movlb	62	; () banked
 24670  018E92  6FC1               	movwf	193,b	;volatile
 24671                           
 24672                           ; BSR set to: 62
 24673                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24674  018E94  0012               	return		;funcret
 24675  018E96                     __end_of_FVR_Initialize:
 24676                           	opt callstack 0
 24677                           
 24678 ;; *************** function _EXT_INT_Initialize *****************
 24679 ;; Defined at:
 24680 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;		None
 24683 ;; Auto vars:     Size  Location     Type
 24684 ;;		None
 24685 ;; Return value:  Size  Location     Type
 24686 ;;                  1  [STACK] void 
 24687 ;; Registers used:
 24688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24689 ;; Tracked objects:
 24690 ;;		On entry : 3F/3F
 24691 ;;		On exit  : 3F/39
 24692 ;;		Unchanged: 0/0
 24693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;Total ram usage:        0 bytes
 24699 ;; Hardware stack levels used:    1
 24700 ;; Hardware stack levels required when called:    7
 24701 ;; This function calls:
 24702 ;;		_INT0_SetInterruptHandler
 24703 ;;		_INT1_SetInterruptHandler
 24704 ;; This function is called by:
 24705 ;;		_SYSTEM_Initialize
 24706 ;; This function uses a reentrant model
 24707 ;;
 24708                           
 24709                           	psect	text110
 24710  018686                     __ptext110:
 24711                           	opt callstack 0
 24712  018686                     _EXT_INT_Initialize:
 24713                           	opt callstack 22
 24714                           
 24715                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24716                           
 24717                           ; BSR set to: 62
 24718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24719                           ;incstack = 0
 24720  018686  0139               	movlb	57	; () banked
 24721  018688  91A1               	bcf	161,0,b	;volatile
 24722                           
 24723                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24724  01868A  90D2               	bcf	210,0,c	;volatile
 24725                           
 24726                           ; BSR set to: 57
 24727                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24728  01868C  0EB0               	movlw	low _INT0_DefaultInterruptHandler
 24729  01868E  6EE6               	movwf	postinc1,c
 24730  018690  0E8E               	movlw	high _INT0_DefaultInterruptHandler
 24731  018692  6EE6               	movwf	postinc1,c
 24732  018694  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24733  018696  6EE6               	movwf	postinc1,c
 24734  018698  EC07  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24735                           
 24736                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24737  01869C  0139               	movlb	57	; () banked
 24738  01869E  8191               	bsf	145,0,b	;volatile
 24739                           
 24740                           ; BSR set to: 57
 24741                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24742  0186A0  91A5               	bcf	165,0,b	;volatile
 24743                           
 24744                           ; BSR set to: 57
 24745                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24746  0186A2  92D2               	bcf	210,1,c	;volatile
 24747                           
 24748                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24749  0186A4  0EAE               	movlw	low _INT1_DefaultInterruptHandler
 24750  0186A6  6EE6               	movwf	postinc1,c
 24751  0186A8  0E8E               	movlw	high _INT1_DefaultInterruptHandler
 24752  0186AA  6EE6               	movwf	postinc1,c
 24753  0186AC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24754  0186AE  6EE6               	movwf	postinc1,c
 24755  0186B0  ECF3  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
 24756                           
 24757                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24758  0186B4  0139               	movlb	57	; () banked
 24759  0186B6  8195               	bsf	149,0,b	;volatile
 24760                           
 24761                           ; BSR set to: 57
 24762                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24763  0186B8  0012               	return		;funcret
 24764  0186BA                     __end_of_EXT_INT_Initialize:
 24765                           	opt callstack 0
 24766                           
 24767 ;; *************** function _INT1_SetInterruptHandler *****************
 24768 ;; Defined at:
 24769 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24770 ;; Parameters:    Size  Location     Type
 24771 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24772 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24773 ;; Auto vars:     Size  Location     Type
 24774 ;;		None
 24775 ;; Return value:  Size  Location     Type
 24776 ;;                  1  [STACK] void 
 24777 ;; Registers used:
 24778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24779 ;; Tracked objects:
 24780 ;;		On entry : 3F/39
 24781 ;;		On exit  : 0/0
 24782 ;;		Unchanged: 0/0
 24783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24788 ;;Total ram usage:        0 bytes
 24789 ;; Hardware stack levels used:    1
 24790 ;; Hardware stack levels required when called:    6
 24791 ;; This function calls:
 24792 ;;		Nothing
 24793 ;; This function is called by:
 24794 ;;		_EXT_INT_Initialize
 24795 ;;		_start_switch_handler
 24796 ;; This function uses a reentrant model
 24797 ;;
 24798                           
 24799                           	psect	text111
 24800  0189E6                     __ptext111:
 24801                           	opt callstack 0
 24802  0189E6                     _INT1_SetInterruptHandler:
 24803                           	opt callstack 23
 24804                           
 24805                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24806                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24807                           
 24808                           ; BSR set to: 57
 24809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24810                           ;incstack = 0
 24811  0189E6  50E1               	movf	fsr1l,w,c
 24812  0189E8  0FFD               	addlw	-3
 24813  0189EA  6ED9               	movwf	fsr2l,c
 24814  0189EC  50E2               	movf	fsr1h,w,c
 24815  0189EE  6EDA               	movwf	fsr2h,c
 24816  0189F0  0EFF               	movlw	255
 24817  0189F2  22DA               	addwfc	fsr2h,f,c
 24818  0189F4  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24819  0189FA  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24820  018A00  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24821                           
 24822                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24823  018A06  52E5               	movf	postdec1,f,c
 24824  018A08  52E5               	movf	postdec1,f,c
 24825  018A0A  52E5               	movf	postdec1,f,c
 24826  018A0C  0012               	return		;funcret
 24827  018A0E                     __end_of_INT1_SetInterruptHandler:
 24828                           	opt callstack 0
 24829                           
 24830 ;; *************** function _INT0_SetInterruptHandler *****************
 24831 ;; Defined at:
 24832 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24835 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;		None
 24838 ;; Return value:  Size  Location     Type
 24839 ;;                  1  [STACK] void 
 24840 ;; Registers used:
 24841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24842 ;; Tracked objects:
 24843 ;;		On entry : 3F/39
 24844 ;;		On exit  : 0/0
 24845 ;;		Unchanged: 0/0
 24846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;Total ram usage:        0 bytes
 24852 ;; Hardware stack levels used:    1
 24853 ;; Hardware stack levels required when called:    6
 24854 ;; This function calls:
 24855 ;;		Nothing
 24856 ;; This function is called by:
 24857 ;;		_EXT_INT_Initialize
 24858 ;; This function uses a reentrant model
 24859 ;;
 24860                           
 24861                           	psect	text112
 24862  018A0E                     __ptext112:
 24863                           	opt callstack 0
 24864  018A0E                     _INT0_SetInterruptHandler:
 24865                           	opt callstack 22
 24866                           
 24867                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24868                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24869                           
 24870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24871                           ;incstack = 0
 24872  018A0E  50E1               	movf	fsr1l,w,c
 24873  018A10  0FFD               	addlw	-3
 24874  018A12  6ED9               	movwf	fsr2l,c
 24875  018A14  50E2               	movf	fsr1h,w,c
 24876  018A16  6EDA               	movwf	fsr2h,c
 24877  018A18  0EFF               	movlw	255
 24878  018A1A  22DA               	addwfc	fsr2h,f,c
 24879  018A1C  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24880  018A22  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24881  018A28  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24882                           
 24883                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24884  018A2E  52E5               	movf	postdec1,f,c
 24885  018A30  52E5               	movf	postdec1,f,c
 24886  018A32  52E5               	movf	postdec1,f,c
 24887  018A34  0012               	return		;funcret
 24888  018A36                     __end_of_INT0_SetInterruptHandler:
 24889                           	opt callstack 0
 24890                           
 24891 ;; *************** function _DMA2_Initialize *****************
 24892 ;; Defined at:
 24893 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24894 ;; Parameters:    Size  Location     Type
 24895 ;;		None
 24896 ;; Auto vars:     Size  Location     Type
 24897 ;;		None
 24898 ;; Return value:  Size  Location     Type
 24899 ;;                  1  [STACK] void 
 24900 ;; Registers used:
 24901 ;;		wreg, status,2
 24902 ;; Tracked objects:
 24903 ;;		On entry : 3F/3D
 24904 ;;		On exit  : 3F/3B
 24905 ;;		Unchanged: 0/0
 24906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24911 ;;Total ram usage:        0 bytes
 24912 ;; Hardware stack levels used:    1
 24913 ;; Hardware stack levels required when called:    6
 24914 ;; This function calls:
 24915 ;;		Nothing
 24916 ;; This function is called by:
 24917 ;;		_SYSTEM_Initialize
 24918 ;; This function uses a reentrant model
 24919 ;;
 24920                           
 24921                           	psect	text113
 24922  01818A                     __ptext113:
 24923                           	opt callstack 0
 24924  01818A                     _DMA2_Initialize:
 24925                           	opt callstack 23
 24926                           
 24927                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24928                           
 24929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24930                           ;incstack = 0
 24931  01818A  0E00               	movlw	0
 24932  01818C  013B               	movlb	59	; () banked
 24933  01818E  6FD9               	movwf	217,b	;volatile
 24934  018190  0E10               	movlw	16
 24935  018192  6FDA               	movwf	218,b	;volatile
 24936  018194  0E00               	movlw	0
 24937  018196  6FDB               	movwf	219,b	;volatile
 24938                           
 24939                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24940  018198  0E3F               	movlw	63
 24941  01819A  6FD1               	movwf	209,b	;volatile
 24942  01819C  0EBB               	movlw	187
 24943  01819E  6FD0               	movwf	208,b	;volatile
 24944                           
 24945                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24946  0181A0  0E03               	movlw	3
 24947  0181A2  6FDD               	movwf	221,b	;volatile
 24948                           
 24949                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24950  0181A4  0E00               	movlw	0
 24951  0181A6  6FD8               	movwf	216,b	;volatile
 24952  0181A8  0E01               	movlw	1
 24953  0181AA  6FD7               	movwf	215,b	;volatile
 24954                           
 24955                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24956  0181AC  0E00               	movlw	0
 24957  0181AE  6FCF               	movwf	207,b	;volatile
 24958  0181B0  0E01               	movlw	1
 24959  0181B2  6FCE               	movwf	206,b	;volatile
 24960                           
 24961                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24962  0181B4  0E46               	movlw	70
 24963  0181B6  6FDF               	movwf	223,b	;volatile
 24964                           
 24965                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24966  0181B8  0E3D               	movlw	61
 24967  0181BA  6FDE               	movwf	222,b	;volatile
 24968                           
 24969                           ; BSR set to: 59
 24970                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24971  0181BC  0139               	movlb	57	; () banked
 24972  0181BE  97A5               	bcf	165,3,b	;volatile
 24973                           
 24974                           ; BSR set to: 57
 24975                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24976  0181C0  95A5               	bcf	165,2,b	;volatile
 24977                           
 24978                           ; BSR set to: 57
 24979                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24980  0181C2  9BA5               	bcf	165,5,b	;volatile
 24981                           
 24982                           ; BSR set to: 57
 24983                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24984  0181C4  99A5               	bcf	165,4,b	;volatile
 24985                           
 24986                           ; BSR set to: 57
 24987                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24988  0181C6  9795               	bcf	149,3,b	;volatile
 24989                           
 24990                           ; BSR set to: 57
 24991                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24992  0181C8  9595               	bcf	149,2,b	;volatile
 24993                           
 24994                           ; BSR set to: 57
 24995                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24996  0181CA  9B95               	bcf	149,5,b	;volatile
 24997                           
 24998                           ; BSR set to: 57
 24999                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25000  0181CC  9995               	bcf	149,4,b	;volatile
 25001  0181CE  9ED2               	bcf	16338,7,c	;# 
 25002  0181D0  0139               	banksel	14831	;# 
 25003  0181D2  0E55               	movlw	85	;# 
 25004  0181D4  6FEF               	movwf	14831,b	;# 
 25005  0181D6  0EAA               	movlw	170	;# 
 25006  0181D8  6FEF               	movwf	14831,b	;# 
 25007  0181DA  81EF               	bsf	14831,0,b	;# 
 25008  0181DC  8ED2               	bsf	16338,7,c	;# 
 25009                           
 25010                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25011  0181DE  013B               	movlb	59	; () banked
 25012  0181E0  6BDC               	clrf	220,b	;volatile
 25013                           
 25014                           ; BSR set to: 59
 25015                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25016  0181E2  0012               	return		;funcret
 25017  0181E4                     __end_of_DMA2_Initialize:
 25018                           	opt callstack 0
 25019                           
 25020 ;; *************** function _DMA1_Initialize *****************
 25021 ;; Defined at:
 25022 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25023 ;; Parameters:    Size  Location     Type
 25024 ;;		None
 25025 ;; Auto vars:     Size  Location     Type
 25026 ;;		None
 25027 ;; Return value:  Size  Location     Type
 25028 ;;                  1  [STACK] void 
 25029 ;; Registers used:
 25030 ;;		wreg, status,2
 25031 ;; Tracked objects:
 25032 ;;		On entry : 3F/3B
 25033 ;;		On exit  : 3F/3B
 25034 ;;		Unchanged: 0/0
 25035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25040 ;;Total ram usage:        0 bytes
 25041 ;; Hardware stack levels used:    1
 25042 ;; Hardware stack levels required when called:    6
 25043 ;; This function calls:
 25044 ;;		Nothing
 25045 ;; This function is called by:
 25046 ;;		_SYSTEM_Initialize
 25047 ;; This function uses a reentrant model
 25048 ;;
 25049                           
 25050                           	psect	text114
 25051  017D48                     __ptext114:
 25052                           	opt callstack 0
 25053  017D48                     _DMA1_Initialize:
 25054                           	opt callstack 23
 25055                           
 25056                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25057                           
 25058                           ; BSR set to: 59
 25059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25060                           ;incstack = 0
 25061  017D48  0E00               	movlw	0
 25062  017D4A  013B               	movlb	59	; () banked
 25063  017D4C  6FF9               	movwf	249,b	;volatile
 25064  017D4E  0E10               	movlw	16
 25065  017D50  6FFA               	movwf	250,b	;volatile
 25066  017D52  0E00               	movlw	0
 25067  017D54  6FFB               	movwf	251,b	;volatile
 25068                           
 25069                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25070  017D56  0E3D               	movlw	61
 25071  017D58  6FF1               	movwf	241,b	;volatile
 25072  017D5A  0E11               	movlw	17
 25073  017D5C  6FF0               	movwf	240,b	;volatile
 25074                           
 25075                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25076  017D5E  0E03               	movlw	3
 25077  017D60  6FFD               	movwf	253,b	;volatile
 25078                           
 25079                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25080  017D62  0E00               	movlw	0
 25081  017D64  6FF8               	movwf	248,b	;volatile
 25082  017D66  0E01               	movlw	1
 25083  017D68  6FF7               	movwf	247,b	;volatile
 25084                           
 25085                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25086  017D6A  0E00               	movlw	0
 25087  017D6C  6FEF               	movwf	239,b	;volatile
 25088  017D6E  0E01               	movlw	1
 25089  017D70  6FEE               	movwf	238,b	;volatile
 25090                           
 25091                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25092  017D72  0E15               	movlw	21
 25093  017D74  6FFF               	movwf	255,b	;volatile
 25094                           
 25095                           ; BSR set to: 59
 25096                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25097  017D76  6BFE               	clrf	254,b	;volatile
 25098                           
 25099                           ; BSR set to: 59
 25100                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25101  017D78  0139               	movlb	57	; () banked
 25102  017D7A  93A2               	bcf	162,1,b	;volatile
 25103                           
 25104                           ; BSR set to: 57
 25105                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25106  017D7C  91A2               	bcf	162,0,b	;volatile
 25107                           
 25108                           ; BSR set to: 57
 25109                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25110  017D7E  97A2               	bcf	162,3,b	;volatile
 25111                           
 25112                           ; BSR set to: 57
 25113                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25114  017D80  95A2               	bcf	162,2,b	;volatile
 25115                           
 25116                           ; BSR set to: 57
 25117                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25118  017D82  8392               	bsf	146,1,b	;volatile
 25119                           
 25120                           ; BSR set to: 57
 25121                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25122  017D84  8192               	bsf	146,0,b	;volatile
 25123                           
 25124                           ; BSR set to: 57
 25125                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25126  017D86  8792               	bsf	146,3,b	;volatile
 25127                           
 25128                           ; BSR set to: 57
 25129                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25130  017D88  8592               	bsf	146,2,b	;volatile
 25131                           
 25132                           ; BSR set to: 57
 25133                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25134  017D8A  6BF1               	clrf	241,b	;volatile
 25135                           
 25136                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25137  017D8C  0E01               	movlw	1
 25138  017D8E  6FF2               	movwf	242,b	;volatile
 25139                           
 25140                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25141  017D90  0E04               	movlw	4
 25142  017D92  6FF3               	movwf	243,b	;volatile
 25143                           
 25144                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25145  017D94  0E02               	movlw	2
 25146  017D96  6FF4               	movwf	244,b	;volatile
 25147                           
 25148                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25149  017D98  0E03               	movlw	3
 25150  017D9A  6FF7               	movwf	247,b	;volatile
 25151  017D9C  9ED2               	bcf	16338,7,c	;# 
 25152  017D9E  0139               	banksel	14831	;# 
 25153  017DA0  0E55               	movlw	85	;# 
 25154  017DA2  6FEF               	movwf	14831,b	;# 
 25155  017DA4  0EAA               	movlw	170	;# 
 25156  017DA6  6FEF               	movwf	14831,b	;# 
 25157  017DA8  81EF               	bsf	14831,0,b	;# 
 25158  017DAA  8ED2               	bsf	16338,7,c	;# 
 25159                           
 25160                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25161  017DAC  013B               	movlb	59	; () banked
 25162  017DAE  6BFC               	clrf	252,b	;volatile
 25163                           
 25164                           ; BSR set to: 59
 25165                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25166  017DB0  0012               	return		;funcret
 25167  017DB2                     __end_of_DMA1_Initialize:
 25168                           	opt callstack 0
 25169                           
 25170 ;; *************** function _CLKREF_Initialize *****************
 25171 ;; Defined at:
 25172 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25173 ;; Parameters:    Size  Location     Type
 25174 ;;		None
 25175 ;; Auto vars:     Size  Location     Type
 25176 ;;		None
 25177 ;; Return value:  Size  Location     Type
 25178 ;;                  1  [STACK] void 
 25179 ;; Registers used:
 25180 ;;		wreg, status,2
 25181 ;; Tracked objects:
 25182 ;;		On entry : 3F/3B
 25183 ;;		On exit  : 3F/3C
 25184 ;;		Unchanged: 0/0
 25185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25190 ;;Total ram usage:        0 bytes
 25191 ;; Hardware stack levels used:    1
 25192 ;; Hardware stack levels required when called:    6
 25193 ;; This function calls:
 25194 ;;		Nothing
 25195 ;; This function is called by:
 25196 ;;		_SYSTEM_Initialize
 25197 ;; This function uses a reentrant model
 25198 ;;
 25199                           
 25200                           	psect	text115
 25201  018E42                     __ptext115:
 25202                           	opt callstack 0
 25203  018E42                     _CLKREF_Initialize:
 25204                           	opt callstack 23
 25205                           
 25206                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25207                           
 25208                           ; BSR set to: 59
 25209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25210                           ;incstack = 0
 25211  018E42  013C               	movlb	60	; () banked
 25212  018E44  6BE6               	clrf	230,b	;volatile
 25213                           
 25214                           ; BSR set to: 60
 25215                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25216  018E46  0E94               	movlw	148
 25217  018E48  6FE5               	movwf	229,b	;volatile
 25218                           
 25219                           ; BSR set to: 60
 25220                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25221  018E4A  0012               	return		;funcret
 25222  018E4C                     __end_of_CLKREF_Initialize:
 25223                           	opt callstack 0
 25224                           
 25225 ;; *************** function _ADCC_Initialize *****************
 25226 ;; Defined at:
 25227 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25228 ;; Parameters:    Size  Location     Type
 25229 ;;		None
 25230 ;; Auto vars:     Size  Location     Type
 25231 ;;		None
 25232 ;; Return value:  Size  Location     Type
 25233 ;;                  1  [STACK] void 
 25234 ;; Registers used:
 25235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25236 ;; Tracked objects:
 25237 ;;		On entry : 3F/3E
 25238 ;;		On exit  : 0/0
 25239 ;;		Unchanged: 0/0
 25240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25245 ;;Total ram usage:        0 bytes
 25246 ;; Hardware stack levels used:    1
 25247 ;; Hardware stack levels required when called:    7
 25248 ;; This function calls:
 25249 ;;		_ADCC_SetADIInterruptHandler
 25250 ;;		_ADCC_SetADTIInterruptHandler
 25251 ;; This function is called by:
 25252 ;;		_SYSTEM_Initialize
 25253 ;; This function uses a reentrant model
 25254 ;;
 25255                           
 25256                           	psect	text116
 25257  017DB2                     __ptext116:
 25258                           	opt callstack 0
 25259  017DB2                     _ADCC_Initialize:
 25260                           	opt callstack 22
 25261                           
 25262                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25263                           
 25264                           ; BSR set to: 60
 25265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25266                           ;incstack = 0
 25267  017DB2  013E               	movlb	62	; () banked
 25268  017DB4  6BDE               	clrf	222,b	;volatile
 25269                           
 25270                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25271  017DB6  6BDF               	clrf	223,b	;volatile
 25272                           
 25273                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25274  017DB8  6BE0               	clrf	224,b	;volatile
 25275                           
 25276                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25277  017DBA  6BE1               	clrf	225,b	;volatile
 25278                           
 25279                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25280  017DBC  6BE4               	clrf	228,b	;volatile
 25281                           
 25282                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25283  017DBE  6BE5               	clrf	229,b	;volatile
 25284                           
 25285                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25286  017DC0  6BEA               	clrf	234,b	;volatile
 25287                           
 25288                           ; BSR set to: 62
 25289                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25290  017DC2  0E40               	movlw	64
 25291  017DC4  6FEC               	movwf	236,b	;volatile
 25292                           
 25293                           ; BSR set to: 62
 25294                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25295  017DC6  6BF1               	clrf	241,b	;volatile
 25296                           
 25297                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25298  017DC8  0E20               	movlw	32
 25299  017DCA  6FF3               	movwf	243,b	;volatile
 25300                           
 25301                           ; BSR set to: 62
 25302                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25303  017DCC  6BF4               	clrf	244,b	;volatile
 25304                           
 25305                           ; BSR set to: 62
 25306                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25307  017DCE  6BF5               	clrf	245,b	;volatile
 25308                           
 25309                           ; BSR set to: 62
 25310                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25311  017DD0  6BF6               	clrf	246,b	;volatile
 25312                           
 25313                           ; BSR set to: 62
 25314                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25315  017DD2  6BF7               	clrf	247,b	;volatile
 25316                           
 25317                           ; BSR set to: 62
 25318                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25319  017DD4  6BF9               	clrf	249,b	;volatile
 25320                           
 25321                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25322  017DD6  0E5B               	movlw	91
 25323  017DD8  6FFA               	movwf	250,b	;volatile
 25324                           
 25325                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25326  017DDA  0E27               	movlw	39
 25327  017DDC  6FFB               	movwf	251,b	;volatile
 25328                           
 25329                           ; BSR set to: 62
 25330                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25331  017DDE  6BFC               	clrf	252,b	;volatile
 25332                           
 25333                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25334  017DE0  0E02               	movlw	2
 25335  017DE2  6FFD               	movwf	253,b	;volatile
 25336                           
 25337                           ; BSR set to: 62
 25338                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25339  017DE4  6BFE               	clrf	254,b	;volatile
 25340                           
 25341                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25342  017DE6  0E07               	movlw	7
 25343  017DE8  6FFF               	movwf	255,b	;volatile
 25344                           
 25345                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25346  017DEA  0E84               	movlw	132
 25347  017DEC  6FF8               	movwf	248,b	;volatile
 25348                           
 25349                           ; BSR set to: 62
 25350                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25351  017DEE  0139               	movlb	57	; () banked
 25352  017DF0  95A1               	bcf	161,2,b	;volatile
 25353                           
 25354                           ; BSR set to: 57
 25355                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25356  017DF2  8591               	bsf	145,2,b	;volatile
 25357                           
 25358                           ; BSR set to: 57
 25359                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25360  017DF4  0EB2               	movlw	low _ADCC_DefaultInterruptHandler
 25361  017DF6  6EE6               	movwf	postinc1,c
 25362  017DF8  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 25363  017DFA  6EE6               	movwf	postinc1,c
 25364  017DFC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25365  017DFE  6EE6               	movwf	postinc1,c
 25366  017E00  EC2F  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25367                           
 25368                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25369  017E04  0139               	movlb	57	; () banked
 25370  017E06  97A1               	bcf	161,3,b	;volatile
 25371                           
 25372                           ; BSR set to: 57
 25373                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25374  017E08  8791               	bsf	145,3,b	;volatile
 25375                           
 25376                           ; BSR set to: 57
 25377                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25378  017E0A  0EB2               	movlw	low _ADCC_DefaultInterruptHandler
 25379  017E0C  6EE6               	movwf	postinc1,c
 25380  017E0E  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 25381  017E10  6EE6               	movwf	postinc1,c
 25382  017E12  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25383  017E14  6EE6               	movwf	postinc1,c
 25384  017E16  EC1B  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25385                           
 25386                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25387  017E1A  0012               	return		;funcret
 25388  017E1C                     __end_of_ADCC_Initialize:
 25389                           	opt callstack 0
 25390                           
 25391 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25392 ;; Defined at:
 25393 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25394 ;; Parameters:    Size  Location     Type
 25395 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25396 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25397 ;; Auto vars:     Size  Location     Type
 25398 ;;		None
 25399 ;; Return value:  Size  Location     Type
 25400 ;;                  1  [STACK] void 
 25401 ;; Registers used:
 25402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25403 ;; Tracked objects:
 25404 ;;		On entry : 0/0
 25405 ;;		On exit  : 0/0
 25406 ;;		Unchanged: 0/0
 25407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25412 ;;Total ram usage:        0 bytes
 25413 ;; Hardware stack levels used:    1
 25414 ;; Hardware stack levels required when called:    6
 25415 ;; This function calls:
 25416 ;;		Nothing
 25417 ;; This function is called by:
 25418 ;;		_ADCC_Initialize
 25419 ;;		_start_adc_scan
 25420 ;; This function uses a reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text117
 25424  018A36                     __ptext117:
 25425                           	opt callstack 0
 25426  018A36                     _ADCC_SetADTIInterruptHandler:
 25427                           	opt callstack 23
 25428                           
 25429                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25430                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25431                           
 25432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25433                           ;incstack = 0
 25434  018A36  50E1               	movf	fsr1l,w,c
 25435  018A38  0FFD               	addlw	-3
 25436  018A3A  6ED9               	movwf	fsr2l,c
 25437  018A3C  50E2               	movf	fsr1h,w,c
 25438  018A3E  6EDA               	movwf	fsr2h,c
 25439  018A40  0EFF               	movlw	255
 25440  018A42  22DA               	addwfc	fsr2h,f,c
 25441  018A44  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25442  018A4A  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25443  018A50  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25444                           
 25445                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25446  018A56  52E5               	movf	postdec1,f,c
 25447  018A58  52E5               	movf	postdec1,f,c
 25448  018A5A  52E5               	movf	postdec1,f,c
 25449  018A5C  0012               	return		;funcret
 25450  018A5E                     __end_of_ADCC_SetADTIInterruptHandler:
 25451                           	opt callstack 0
 25452                           
 25453 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25454 ;; Defined at:
 25455 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25456 ;; Parameters:    Size  Location     Type
 25457 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25458 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25459 ;; Auto vars:     Size  Location     Type
 25460 ;;		None
 25461 ;; Return value:  Size  Location     Type
 25462 ;;                  1  [STACK] void 
 25463 ;; Registers used:
 25464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25465 ;; Tracked objects:
 25466 ;;		On entry : 6/0
 25467 ;;		On exit  : 0/0
 25468 ;;		Unchanged: 0/0
 25469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25474 ;;Total ram usage:        0 bytes
 25475 ;; Hardware stack levels used:    1
 25476 ;; Hardware stack levels required when called:    6
 25477 ;; This function calls:
 25478 ;;		Nothing
 25479 ;; This function is called by:
 25480 ;;		_ADCC_Initialize
 25481 ;;		_start_adc_scan
 25482 ;; This function uses a reentrant model
 25483 ;;
 25484                           
 25485                           	psect	text118
 25486  018A5E                     __ptext118:
 25487                           	opt callstack 0
 25488  018A5E                     _ADCC_SetADIInterruptHandler:
 25489                           	opt callstack 23
 25490                           
 25491                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25492                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25493                           
 25494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25495                           ;incstack = 0
 25496  018A5E  50E1               	movf	fsr1l,w,c
 25497  018A60  0FFD               	addlw	-3
 25498  018A62  6ED9               	movwf	fsr2l,c
 25499  018A64  50E2               	movf	fsr1h,w,c
 25500  018A66  6EDA               	movwf	fsr2h,c
 25501  018A68  0EFF               	movlw	255
 25502  018A6A  22DA               	addwfc	fsr2h,f,c
 25503  018A6C  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25504  018A72  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25505  018A78  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25506                           
 25507                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25508  018A7E  52E5               	movf	postdec1,f,c
 25509  018A80  52E5               	movf	postdec1,f,c
 25510  018A82  52E5               	movf	postdec1,f,c
 25511  018A84  0012               	return		;funcret
 25512  018A86                     __end_of_ADCC_SetADIInterruptHandler:
 25513                           	opt callstack 0
 25514                           
 25515 ;; *************** function _INT1_ISR *****************
 25516 ;; Defined at:
 25517 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25518 ;; Parameters:    Size  Location     Type
 25519 ;;		None
 25520 ;; Auto vars:     Size  Location     Type
 25521 ;;		None
 25522 ;; Return value:  Size  Location     Type
 25523 ;;                  1    wreg      void 
 25524 ;; Registers used:
 25525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25526 ;; Tracked objects:
 25527 ;;		On entry : 0/0
 25528 ;;		On exit  : 0/0
 25529 ;;		Unchanged: 0/0
 25530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25534 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25535 ;;Total ram usage:        4 bytes
 25536 ;; Hardware stack levels used:    1
 25537 ;; Hardware stack levels required when called:    5
 25538 ;; This function calls:
 25539 ;;		_INT1_CallBack
 25540 ;; This function is called by:
 25541 ;;		Interrupt level 1
 25542 ;; This function uses a non-reentrant model
 25543 ;;
 25544                           
 25545                           	psect	text119
 25546  018534                     __ptext119:
 25547                           	opt callstack 0
 25548  018534                     _INT1_ISR:
 25549                           	opt callstack 12
 25550                           
 25551                           ;incstack = 0
 25552  018534  006F FF60  F0F6    	movff	status,??_INT1_ISR
 25553  01853A  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 25554  018540  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 25555  018546  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 25556  01854C  EE16  F000         	lfsr	1,___intlo_sp
 25557                           
 25558                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25559  018550  0139               	movlb	57	; () banked
 25560  018552  91A5               	bcf	165,0,b	;volatile
 25561                           
 25562                           ; BSR set to: 57
 25563                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25564  018554  ECEF  F0C5         	call	_INT1_CallBack	;wreg free
 25565  018558  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25566  01855E  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25567  018564  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25568  01856A  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25569  018570  0011               	retfie		f
 25570  018572                     __end_of_INT1_ISR:
 25571                           	opt callstack 0
 25572                           
 25573 ;; *************** function _INT1_CallBack *****************
 25574 ;; Defined at:
 25575 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;		None
 25578 ;; Auto vars:     Size  Location     Type
 25579 ;;		None
 25580 ;; Return value:  Size  Location     Type
 25581 ;;                  1  [STACK] void 
 25582 ;; Registers used:
 25583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25584 ;; Tracked objects:
 25585 ;;		On entry : 3F/39
 25586 ;;		On exit  : 0/0
 25587 ;;		Unchanged: 0/0
 25588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25593 ;;Total ram usage:        0 bytes
 25594 ;; Hardware stack levels used:    1
 25595 ;; Hardware stack levels required when called:    4
 25596 ;; This function calls:
 25597 ;;		Absolute function
 25598 ;;		_INT1_DefaultInterruptHandler
 25599 ;;		_switch_handler
 25600 ;; This function is called by:
 25601 ;;		_INT1_ISR
 25602 ;; This function uses a reentrant model
 25603 ;;
 25604                           
 25605                           	psect	text120
 25606  018BDE                     __ptext120:
 25607                           	opt callstack 0
 25608  018BDE                     _INT1_CallBack:
 25609                           	opt callstack 12
 25610                           
 25611                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25612                           
 25613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25614                           ;incstack = 0
 25615  018BDE  5013               	movf	_INT1_InterruptHandler^0,w,c
 25616  018BE0  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25617  018BE2  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25618  018BE4  B4D8               	btfsc	status,2,c
 25619  018BE6  0012               	return	
 25620                           
 25621                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25622  018BE8  D801               	call	u853_28
 25623  018BEA  0012               	return	
 25624  018BEC                     u853_28:
 25625  018BEC  0005               	push	
 25626  018BEE  6EFA               	movwf	pclath,c
 25627  018BF0  5013               	movf	_INT1_InterruptHandler^0,w,c
 25628  018BF2  6EFD               	movwf	tosl,c
 25629  018BF4  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25630  018BF6  6EFE               	movwf	tosh,c
 25631  018BF8  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25632  018BFA  6EFF               	movwf	tosu,c
 25633  018BFC  50FA               	movf	pclath,w,c
 25634  018BFE  0012               	return		;indir
 25635  018C00                     __end_of_INT1_CallBack:
 25636                           	opt callstack 0
 25637                           
 25638 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25639 ;; Defined at:
 25640 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25641 ;; Parameters:    Size  Location     Type
 25642 ;;		None
 25643 ;; Auto vars:     Size  Location     Type
 25644 ;;		None
 25645 ;; Return value:  Size  Location     Type
 25646 ;;                  1  [STACK] void 
 25647 ;; Registers used:
 25648 ;;		None
 25649 ;; Tracked objects:
 25650 ;;		On entry : 0/39
 25651 ;;		On exit  : 0/0
 25652 ;;		Unchanged: 0/0
 25653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;Total ram usage:        0 bytes
 25659 ;; Hardware stack levels used:    1
 25660 ;; Hardware stack levels required when called:    3
 25661 ;; This function calls:
 25662 ;;		Nothing
 25663 ;; This function is called by:
 25664 ;;		_EXT_INT_Initialize
 25665 ;;		_INT1_CallBack
 25666 ;; This function uses a reentrant model
 25667 ;;
 25668                           
 25669                           	psect	text121
 25670  018EAE                     __ptext121:
 25671                           	opt callstack 0
 25672  018EAE                     _INT1_DefaultInterruptHandler:
 25673                           	opt callstack 12
 25674                           
 25675                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25676                           
 25677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25678                           ;incstack = 0
 25679  018EAE  0012               	return		;funcret
 25680  018EB0                     __end_of_INT1_DefaultInterruptHandler:
 25681                           	opt callstack 0
 25682                           
 25683 ;; *************** function _switch_handler *****************
 25684 ;; Defined at:
 25685 ;;		line 58 in file "dio.c"
 25686 ;; Parameters:    Size  Location     Type
 25687 ;;		None
 25688 ;; Auto vars:     Size  Location     Type
 25689 ;;  i               1  [STACK] unsigned char 
 25690 ;;  sw_value        1  [STACK] unsigned char 
 25691 ;; Return value:  Size  Location     Type
 25692 ;;                  1  [STACK] void 
 25693 ;; Registers used:
 25694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25695 ;; Tracked objects:
 25696 ;;		On entry : 0/39
 25697 ;;		On exit  : 0/0
 25698 ;;		Unchanged: 0/0
 25699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25704 ;;Total ram usage:        0 bytes
 25705 ;; Hardware stack levels used:    1
 25706 ;; Hardware stack levels required when called:    3
 25707 ;; This function calls:
 25708 ;;		Nothing
 25709 ;; This function is called by:
 25710 ;;		_start_switch_handler
 25711 ;;		_INT1_CallBack
 25712 ;; This function uses a reentrant model
 25713 ;;
 25714                           
 25715                           	psect	text122
 25716  01688A                     __ptext122:
 25717                           	opt callstack 0
 25718  01688A                     _switch_handler:
 25719                           	opt callstack 0
 25720                           
 25721                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25722  01688A  52E6               	movf	postinc1,f,c
 25723  01688C  52E6               	movf	postinc1,f,c
 25724                           
 25725                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25726                           ;stkvar	_i @ sp[(-2)+0]
 25727                           
 25728                           ;incstack = 0
 25729  01688E  0EFE               	movlw	-2
 25730  016890  6AE3               	clrf	plusw1,c
 25731  016892  9EBD               	bcf	189,7,c	;volatile
 25732  016894  82BE               	bsf	190,1,c	;volatile
 25733                           
 25734                           ;dio.c: 72:  __nop();
 25735  016896  F000               	nop	
 25736                           
 25737                           ;dio.c: 73:  __nop();
 25738  016898  F000               	nop	
 25739                           
 25740                           ;dio.c: 74:  __nop();
 25741  01689A  F000               	nop	
 25742  01689C  D019               	goto	l8947
 25743  01689E                     l8935:
 25744                           
 25745                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25746  01689E  A6CF               	btfss	207,3,c	;volatile
 25747  0168A0  D011               	goto	u839_20
 25748  0168A2  D00D               	goto	u839_21
 25749  0168A4                     u836_28:
 25750                           
 25751                           ;stkvar	_sw_value @ sp[(-2)+1]
 25752  0168A4  0EFF               	movlw	-1
 25753  0168A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25754                           
 25755                           ;dio.c: 80:    break;
 25756  0168AC  D027               	goto	l8949
 25757  0168AE                     l8937:
 25758                           
 25759                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25760  0168AE  A4CF               	btfss	207,2,c	;volatile
 25761  0168B0  D009               	goto	u839_20
 25762  0168B2  D005               	goto	u839_21
 25763  0168B4                     l8939:
 25764                           
 25765                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25766  0168B4  A2CF               	btfss	207,1,c	;volatile
 25767  0168B6  D006               	goto	u839_20
 25768  0168B8  D002               	goto	u839_21
 25769  0168BA                     l8941:
 25770                           
 25771                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25772  0168BA  A0CF               	btfss	207,0,c	;volatile
 25773  0168BC  D003               	goto	u839_20
 25774  0168BE                     u839_21:
 25775  0168BE  6A3D               	clrf	(btemp+11)^0,c
 25776  0168C0  2A3D               	incf	(btemp+11)^0,f,c
 25777  0168C2  D7F0               	goto	u836_28
 25778  0168C4                     u839_20:
 25779  0168C4  6A3D               	clrf	(btemp+11)^0,c
 25780  0168C6  D7EE               	goto	u836_28
 25781  0168C8                     l8943:
 25782                           
 25783                           ;dio.c: 91:    sw_value = 1;
 25784                           ;stkvar	_sw_value @ sp[(-2)+1]
 25785  0168C8  0EFF               	movlw	-1
 25786  0168CA  6AE3               	clrf	plusw1,c
 25787  0168CC  2AE3               	incf	plusw1,f,c
 25788                           
 25789                           ;dio.c: 92:    break;
 25790  0168CE  D016               	goto	l8949
 25791  0168D0                     l8947:
 25792                           
 25793                           ;stkvar	_i @ sp[(-2)+0]
 25794  0168D0  0EFE               	movlw	-2
 25795  0168D2  50E3               	movf	plusw1,w,c
 25796  0168D4  6E3C               	movwf	(btemp+10)^0,c
 25797  0168D6  6A3D               	clrf	(btemp+11)^0,c
 25798                           
 25799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25800                           ; Switch size 1, requested type "simple"
 25801                           ; Number of cases is 1, Range of values is 0 to 0
 25802                           ; switch strategies available:
 25803                           ; Name         Instructions Cycles
 25804                           ; simple_byte            4     3 (average)
 25805                           ;	Chosen strategy is simple_byte
 25806  0168D8  503D               	movf	(btemp+11)^0,w,c
 25807  0168DA  0A00               	xorlw	0	; case 0
 25808  0168DC  A4D8               	btfss	status,2,c
 25809  0168DE  D7F4               	goto	l8943
 25810                           
 25811                           ; Switch size 1, requested type "simple"
 25812                           ; Number of cases is 4, Range of values is 0 to 3
 25813                           ; switch strategies available:
 25814                           ; Name         Instructions Cycles
 25815                           ; simple_byte           13     7 (average)
 25816                           ;	Chosen strategy is simple_byte
 25817  0168E0  503C               	movf	(btemp+10)^0,w,c
 25818  0168E2  0A00               	xorlw	0	; case 0
 25819  0168E4  B4D8               	btfsc	status,2,c
 25820  0168E6  D7E9               	goto	l8941
 25821  0168E8  0A01               	xorlw	1	; case 1
 25822  0168EA  B4D8               	btfsc	status,2,c
 25823  0168EC  D7E3               	goto	l8939
 25824  0168EE  0A03               	xorlw	3	; case 2
 25825  0168F0  B4D8               	btfsc	status,2,c
 25826  0168F2  D7DD               	goto	l8937
 25827  0168F4  0A01               	xorlw	1	; case 3
 25828  0168F6  B4D8               	btfsc	status,2,c
 25829  0168F8  D7D2               	goto	l8935
 25830  0168FA  D7E6               	goto	l8943
 25831  0168FC                     l8949:
 25832                           
 25833                           ;dio.c: 96:   if (sw_value) {
 25834                           ;stkvar	_sw_value @ sp[(-2)+1]
 25835  0168FC  0EFF               	movlw	-1
 25836  0168FE  50E3               	movf	plusw1,w,c
 25837  016900  B4D8               	btfsc	status,2,c
 25838  016902  D014               	goto	l8955
 25839                           
 25840                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 25841                           ;stkvar	_i @ sp[(-2)+0]
 25842  016904  0EFE               	movlw	-2
 25843  016906  50E3               	movf	plusw1,w,c
 25844  016908  0D05               	mullw	5
 25845  01690A  50F3               	movf	243,w,c
 25846  01690C  0F60               	addlw	low _S
 25847  01690E  6ED9               	movwf	fsr2l,c
 25848  016910  6ADA               	clrf	fsr2h,c
 25849  016912  04DE               	decf	postinc2,w,c
 25850  016914  A4D8               	btfss	status,2,c
 25851  016916  D041               	goto	l8963
 25852                           
 25853                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 25854                           ;stkvar	_i @ sp[(-2)+0]
 25855  016918  0EFE               	movlw	-2
 25856  01691A  50E3               	movf	plusw1,w,c
 25857  01691C  0D05               	mullw	5
 25858  01691E  50F3               	movf	243,w,c
 25859  016920  0F60               	addlw	low _S
 25860  016922  6ED9               	movwf	fsr2l,c
 25861  016924  6ADA               	clrf	fsr2h,c
 25862  016926  0E00               	movlw	0
 25863  016928  6EDF               	movwf	indf2,c
 25864  01692A  D037               	goto	l8963
 25865  01692C                     l8955:
 25866                           
 25867                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 25868                           ;stkvar	_i @ sp[(-2)+0]
 25869  01692C  0EFE               	movlw	-2
 25870  01692E  50E3               	movf	plusw1,w,c
 25871  016930  0D05               	mullw	5
 25872  016932  50F3               	movf	243,w,c
 25873  016934  0F60               	addlw	low _S
 25874  016936  6ED9               	movwf	fsr2l,c
 25875  016938  6ADA               	clrf	fsr2h,c
 25876  01693A  50DF               	movf	indf2,w,c
 25877  01693C  A4D8               	btfss	status,2,c
 25878  01693E  D02D               	goto	l8963
 25879                           
 25880                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 25881                           ;stkvar	_i @ sp[(-2)+0]
 25882  016940  0EFE               	movlw	-2
 25883  016942  50E3               	movf	plusw1,w,c
 25884  016944  0D05               	mullw	5
 25885  016946  50F3               	movf	243,w,c
 25886  016948  0F60               	addlw	low _S
 25887  01694A  6ED9               	movwf	fsr2l,c
 25888  01694C  6ADA               	clrf	fsr2h,c
 25889  01694E  0E01               	movlw	1
 25890  016950  6EDF               	movwf	indf2,c
 25891                           
 25892                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25893  016952  EE20  F2B8         	lfsr	2,_V+184	;volatile
 25894                           
 25895                           ;stkvar	_i @ sp[(-2)+0]
 25896  016956  0EFE               	movlw	-2
 25897  016958  50E3               	movf	plusw1,w,c
 25898  01695A  0D05               	mullw	5
 25899  01695C  50F3               	movf	243,w,c
 25900  01695E  0F61               	addlw	low (_S+1)
 25901  016960  6EE9               	movwf	fsr0l,c
 25902  016962  6AEA               	clrf	fsr0h,c
 25903  016964  006F FF7B FFEE     	movff	postinc2,postinc0
 25904  01696A  006F FF7B FFEE     	movff	postinc2,postinc0
 25905  016970  006F FF7B FFEE     	movff	postinc2,postinc0
 25906  016976  006F FF7B FFEE     	movff	postinc2,postinc0
 25907                           
 25908                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25909                           ;stkvar	_i @ sp[(-2)+0]
 25910  01697C  0EFE               	movlw	-2
 25911  01697E  006F FF8C  F03D    	movff	plusw1,btemp+11
 25912  016984  0E01               	movlw	1
 25913  016986  6E3C               	movwf	(btemp+10)^0,c
 25914  016988  2A3D               	incf	(btemp+11)^0,f,c
 25915  01698A  D002               	goto	u843_24
 25916  01698C                     u843_25:
 25917  01698C  90D8               	bcf	status,0,c
 25918  01698E  363C               	rlcf	(btemp+10)^0,f,c
 25919  016990                     u843_24:
 25920  016990  2E3D               	decfsz	(btemp+11)^0,f,c
 25921  016992  D7FC               	goto	u843_25
 25922  016994  503C               	movf	(btemp+10)^0,w,c
 25923  016996  0100               	movlb	0	; () banked
 25924  016998  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25925  01699A                     l8963:
 25926                           
 25927                           ;dio.c: 107:  } while (++i < 4);
 25928                           ;stkvar	_i @ sp[(-2)+0]
 25929  01699A  0EFE               	movlw	-2
 25930  01699C  2AE3               	incf	plusw1,f,c
 25931  01699E  0EFE               	movlw	-2
 25932  0169A0  006F FF8C  F032    	movff	plusw1,btemp
 25933  0169A6  0E03               	movlw	3
 25934  0169A8  6432               	cpfsgt	btemp^0,c
 25935  0169AA  D792               	goto	l8947
 25936                           
 25937                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25938  0169AC  92BE               	bcf	190,1,c	;volatile
 25939  0169AE  A4BE               	btfss	190,2,c	;volatile
 25940  0169B0  D002               	goto	u845_20
 25941  0169B2  0E01               	movlw	1
 25942  0169B4  D001               	goto	u845_26
 25943  0169B6                     u845_20:
 25944  0169B6  0E00               	movlw	0
 25945  0169B8                     u845_26:
 25946  0169B8  0AFF               	xorlw	255
 25947  0169BA  6E3D               	movwf	(btemp+11)^0,c
 25948  0169BC  463D               	rlncf	(btemp+11)^0,f,c
 25949  0169BE  463D               	rlncf	(btemp+11)^0,f,c
 25950  0169C0  50BE               	movf	190,w,c	;volatile
 25951  0169C2  183D               	xorwf	(btemp+11)^0,w,c
 25952  0169C4  0BFB               	andlw	-5
 25953  0169C6  183D               	xorwf	(btemp+11)^0,w,c
 25954  0169C8  6EBE               	movwf	190,c	;volatile
 25955  0169CA  8EBD               	bsf	189,7,c	;volatile
 25956                           
 25957                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25958  0169CC  52E5               	movf	postdec1,f,c
 25959  0169CE  52E5               	movf	postdec1,f,c
 25960  0169D0  0012               	return		;funcret
 25961  0169D2                     __end_of_switch_handler:
 25962                           	opt callstack 0
 25963                           
 25964 ;; *************** function _TMR5_ISR *****************
 25965 ;; Defined at:
 25966 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25967 ;; Parameters:    Size  Location     Type
 25968 ;;		None
 25969 ;; Auto vars:     Size  Location     Type
 25970 ;;		None
 25971 ;; Return value:  Size  Location     Type
 25972 ;;                  1    wreg      void 
 25973 ;; Registers used:
 25974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25975 ;; Tracked objects:
 25976 ;;		On entry : 0/0
 25977 ;;		On exit  : 0/0
 25978 ;;		Unchanged: 0/0
 25979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25982 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25983 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25984 ;;Total ram usage:        4 bytes
 25985 ;; Hardware stack levels used:    1
 25986 ;; Hardware stack levels required when called:    5
 25987 ;; This function calls:
 25988 ;;		_TMR5_CallBack
 25989 ;;		_TMR5_WriteTimer
 25990 ;; This function is called by:
 25991 ;;		Interrupt level 1
 25992 ;; This function uses a non-reentrant model
 25993 ;;
 25994                           
 25995                           	psect	text123
 25996  0180D4                     __ptext123:
 25997                           	opt callstack 0
 25998  0180D4                     _TMR5_ISR:
 25999                           	opt callstack 12
 26000                           
 26001                           ;incstack = 0
 26002  0180D4  006F FF60  F1ED    	movff	status,??_TMR5_ISR+2
 26003  0180DA  0060  F0F4  F1EE   	movff	btemp+11,??_TMR5_ISR+3
 26004  0180E0  EE16  F000         	lfsr	1,___intlo_sp
 26005                           
 26006                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26007  0180E4  0139               	movlb	57	; () banked
 26008  0180E6  9DA8               	bcf	168,6,b	;volatile
 26009                           
 26010                           ; BSR set to: 57
 26011                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26012  0180E8  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 26013  0180EE  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26014  0180F4  EC7A  F0C2         	call	_TMR5_WriteTimer	;wreg free
 26015                           
 26016                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26017  0180F8  0102               	movlb	2	; () banked
 26018  0180FA  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26019  0180FC  0101               	movlb	1	; () banked
 26020  0180FE  6FEB               	movwf	??_TMR5_ISR& (0+255),b
 26021  018100  6BEC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 26022  018102  0E05               	movlw	5
 26023  018104  27EB               	addwf	??_TMR5_ISR& (0+255),f,b
 26024  018106  0E00               	movlw	0
 26025  018108  23EC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 26026  01810A  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26027  01810C  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26028  01810E  51EB               	movf	??_TMR5_ISR& (0+255),w,b
 26029  018110  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26030  018112  51EC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 26031  018114  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26032  018116  A0D8               	btfss	status,0,c
 26033  018118  D004               	goto	i1l1045
 26034                           
 26035                           ; BSR set to: 1
 26036                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26037  01811A  ECCB  F0C5         	call	_TMR5_CallBack	;wreg free
 26038                           
 26039                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26040  01811E  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26041  018120  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26042  018122                     i1l1045:
 26043  018122  0060  F7B8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 26044  018128  0060  F7B7  FFD8   	movff	??_TMR5_ISR+2,status
 26045  01812E  0011               	retfie		f
 26046  018130                     __end_of_TMR5_ISR:
 26047                           	opt callstack 0
 26048                           
 26049 ;; *************** function _TMR5_WriteTimer *****************
 26050 ;; Defined at:
 26051 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26052 ;; Parameters:    Size  Location     Type
 26053 ;;  timerVal        2  [STACK] unsigned short 
 26054 ;; Auto vars:     Size  Location     Type
 26055 ;;		None
 26056 ;; Return value:  Size  Location     Type
 26057 ;;                  1  [STACK] void 
 26058 ;; Registers used:
 26059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26060 ;; Tracked objects:
 26061 ;;		On entry : 3F/39
 26062 ;;		On exit  : 0/0
 26063 ;;		Unchanged: 0/0
 26064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26069 ;;Total ram usage:        0 bytes
 26070 ;; Hardware stack levels used:    1
 26071 ;; Hardware stack levels required when called:    3
 26072 ;; This function calls:
 26073 ;;		Nothing
 26074 ;; This function is called by:
 26075 ;;		_TMR5_ISR
 26076 ;; This function uses a reentrant model
 26077 ;;
 26078                           
 26079                           	psect	text124
 26080  0184F4                     __ptext124:
 26081                           	opt callstack 0
 26082  0184F4                     _TMR5_WriteTimer:
 26083                           	opt callstack 13
 26084                           
 26085                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26086                           
 26087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26088                           ;incstack = 0
 26089  0184F4  A49A               	btfss	154,2,c	;volatile
 26090  0184F6  D00F               	goto	l9083
 26091                           
 26092                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26093  0184F8  909A               	bcf	154,0,c	;volatile
 26094                           
 26095                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26096                           ;stkvar	_timerVal @ sp[(0)+-2]
 26097  0184FA  0EFF               	movlw	255
 26098  0184FC  24E1               	addwf	fsr1l,w,c
 26099  0184FE  6ED9               	movwf	fsr2l,c
 26100  018500  0EFF               	movlw	255
 26101  018502  20E2               	addwfc	fsr1h,w,c
 26102  018504  6EDA               	movwf	fsr2h,c
 26103  018506  50DF               	movf	indf2,w,c
 26104  018508  6E99               	movwf	153,c	;volatile
 26105                           
 26106                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26107                           ;stkvar	_timerVal @ sp[(0)+-2]
 26108  01850A  0EFE               	movlw	-2
 26109  01850C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26110                           
 26111                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26112  018512  809A               	bsf	154,0,c	;volatile
 26113                           
 26114                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26115  018514  D00C               	goto	l1028
 26116  018516                     l9083:
 26117                           
 26118                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26119                           ;stkvar	_timerVal @ sp[(0)+-2]
 26120  018516  0EFF               	movlw	255
 26121  018518  24E1               	addwf	fsr1l,w,c
 26122  01851A  6ED9               	movwf	fsr2l,c
 26123  01851C  0EFF               	movlw	255
 26124  01851E  20E2               	addwfc	fsr1h,w,c
 26125  018520  6EDA               	movwf	fsr2h,c
 26126  018522  50DF               	movf	indf2,w,c
 26127  018524  6E99               	movwf	153,c	;volatile
 26128                           
 26129                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26130                           ;stkvar	_timerVal @ sp[(0)+-2]
 26131  018526  0EFE               	movlw	-2
 26132  018528  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26133  01852E                     l1028:
 26134                           
 26135                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26136  01852E  52E5               	movf	postdec1,f,c
 26137  018530  52E5               	movf	postdec1,f,c
 26138  018532  0012               	return		;funcret
 26139  018534                     __end_of_TMR5_WriteTimer:
 26140                           	opt callstack 0
 26141                           
 26142 ;; *************** function _TMR5_CallBack *****************
 26143 ;; Defined at:
 26144 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26145 ;; Parameters:    Size  Location     Type
 26146 ;;		None
 26147 ;; Auto vars:     Size  Location     Type
 26148 ;;		None
 26149 ;; Return value:  Size  Location     Type
 26150 ;;                  1  [STACK] void 
 26151 ;; Registers used:
 26152 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26153 ;; Tracked objects:
 26154 ;;		On entry : 3F/1
 26155 ;;		On exit  : 0/0
 26156 ;;		Unchanged: 0/0
 26157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;Total ram usage:        0 bytes
 26163 ;; Hardware stack levels used:    1
 26164 ;; Hardware stack levels required when called:    4
 26165 ;; This function calls:
 26166 ;;		Absolute function
 26167 ;;		_TMR5_DefaultInterruptHandler
 26168 ;; This function is called by:
 26169 ;;		_TMR5_ISR
 26170 ;; This function uses a reentrant model
 26171 ;;
 26172                           
 26173                           	psect	text125
 26174  018B96                     __ptext125:
 26175                           	opt callstack 0
 26176  018B96                     _TMR5_CallBack:
 26177                           	opt callstack 12
 26178                           
 26179                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26180                           
 26181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26182                           ;incstack = 0
 26183  018B96  0100               	movlb	0	; () banked
 26184  018B98  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26185  018B9A  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26186  018B9C  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26187  018B9E  B4D8               	btfsc	status,2,c
 26188  018BA0  0012               	return	
 26189                           
 26190                           ; BSR set to: 0
 26191                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26192  018BA2  D801               	call	u864_28
 26193  018BA4  0012               	return	
 26194  018BA6                     u864_28:
 26195  018BA6  0005               	push	
 26196  018BA8  6EFA               	movwf	pclath,c
 26197  018BAA  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26198  018BAC  6EFD               	movwf	tosl,c
 26199  018BAE  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26200  018BB0  6EFE               	movwf	tosh,c
 26201  018BB2  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26202  018BB4  6EFF               	movwf	tosu,c
 26203  018BB6  50FA               	movf	pclath,w,c
 26204  018BB8  0012               	return		;indir
 26205  018BBA                     __end_of_TMR5_CallBack:
 26206                           	opt callstack 0
 26207                           
 26208 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26209 ;; Defined at:
 26210 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26211 ;; Parameters:    Size  Location     Type
 26212 ;;		None
 26213 ;; Auto vars:     Size  Location     Type
 26214 ;;		None
 26215 ;; Return value:  Size  Location     Type
 26216 ;;                  1  [STACK] void 
 26217 ;; Registers used:
 26218 ;;		wreg, status,2, status,0, btemp+11
 26219 ;; Tracked objects:
 26220 ;;		On entry : 3F/0
 26221 ;;		On exit  : 3F/2
 26222 ;;		Unchanged: 0/0
 26223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26228 ;;Total ram usage:        0 bytes
 26229 ;; Hardware stack levels used:    1
 26230 ;; Hardware stack levels required when called:    3
 26231 ;; This function calls:
 26232 ;;		Nothing
 26233 ;; This function is called by:
 26234 ;;		_TMR5_Initialize
 26235 ;;		_TMR5_CallBack
 26236 ;; This function uses a reentrant model
 26237 ;;
 26238                           
 26239                           	psect	text126
 26240  018A86                     __ptext126:
 26241                           	opt callstack 0
 26242  018A86                     _TMR5_DefaultInterruptHandler:
 26243                           	opt callstack 12
 26244                           
 26245                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26246                           
 26247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26248                           ;incstack = 0
 26249  018A86  A0BE               	btfss	190,0,c	;volatile
 26250  018A88  D002               	goto	u814_20
 26251  018A8A  0E01               	movlw	1
 26252  018A8C  D001               	goto	u814_26
 26253  018A8E                     u814_20:
 26254  018A8E  0E00               	movlw	0
 26255  018A90                     u814_26:
 26256  018A90  0AFF               	xorlw	255
 26257  018A92  6E3D               	movwf	(btemp+11)^0,c
 26258  018A94  50BE               	movf	190,w,c	;volatile
 26259  018A96  183D               	xorwf	(btemp+11)^0,w,c
 26260  018A98  0BFE               	andlw	-2
 26261  018A9A  183D               	xorwf	(btemp+11)^0,w,c
 26262  018A9C  6EBE               	movwf	190,c	;volatile
 26263                           
 26264                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26265  018A9E  0E01               	movlw	1
 26266  018AA0  0102               	movlb	2	; () banked
 26267  018AA2  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26268  018AA4  0E00               	movlw	0
 26269  018AA6  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26270  018AA8  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26271  018AAA  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26272                           
 26273                           ; BSR set to: 2
 26274                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26275  018AAC  0012               	return		;funcret
 26276  018AAE                     __end_of_TMR5_DefaultInterruptHandler:
 26277                           	opt callstack 0
 26278                           
 26279 ;; *************** function _INT0_ISR *****************
 26280 ;; Defined at:
 26281 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 26282 ;; Parameters:    Size  Location     Type
 26283 ;;		None
 26284 ;; Auto vars:     Size  Location     Type
 26285 ;;		None
 26286 ;; Return value:  Size  Location     Type
 26287 ;;                  1    wreg      void 
 26288 ;; Registers used:
 26289 ;;		wreg, status,2, status,0, pclath, tosl
 26290 ;; Tracked objects:
 26291 ;;		On entry : 0/0
 26292 ;;		On exit  : 0/0
 26293 ;;		Unchanged: 0/0
 26294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26299 ;;Total ram usage:        0 bytes
 26300 ;; Hardware stack levels used:    1
 26301 ;; Hardware stack levels required when called:    2
 26302 ;; This function calls:
 26303 ;;		_INT0_CallBack
 26304 ;; This function is called by:
 26305 ;;		Interrupt level 2
 26306 ;; This function uses a non-reentrant model
 26307 ;;
 26308                           
 26309                           	psect	text127
 26310  018E24                     __ptext127:
 26311                           	opt callstack 0
 26312  018E24                     _INT0_ISR:
 26313                           	opt callstack 12
 26314                           
 26315                           ; BSR set to: 2
 26316                           ;incstack = 0
 26317  018E24  EE14  F000         	lfsr	1,___inthi_sp
 26318                           
 26319                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 26320  018E28  0139               	movlb	57	; () banked
 26321  018E2A  91A1               	bcf	161,0,b	;volatile
 26322                           
 26323                           ; BSR set to: 57
 26324                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 26325  018E2C  EC00  F0C6         	call	_INT0_CallBack	;wreg free
 26326  018E30  0011               	retfie		f
 26327  018E32                     __end_of_INT0_ISR:
 26328                           	opt callstack 0
 26329                           
 26330 ;; *************** function _INT0_CallBack *****************
 26331 ;; Defined at:
 26332 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 26333 ;; Parameters:    Size  Location     Type
 26334 ;;		None
 26335 ;; Auto vars:     Size  Location     Type
 26336 ;;		None
 26337 ;; Return value:  Size  Location     Type
 26338 ;;                  1  [STACK] void 
 26339 ;; Registers used:
 26340 ;;		wreg, status,2, status,0, pclath, tosl
 26341 ;; Tracked objects:
 26342 ;;		On entry : 3F/39
 26343 ;;		On exit  : 0/0
 26344 ;;		Unchanged: 0/0
 26345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26350 ;;Total ram usage:        0 bytes
 26351 ;; Hardware stack levels used:    1
 26352 ;; Hardware stack levels required when called:    1
 26353 ;; This function calls:
 26354 ;;		Absolute function
 26355 ;;		_INT0_DefaultInterruptHandler
 26356 ;; This function is called by:
 26357 ;;		_INT0_ISR
 26358 ;; This function uses a reentrant model
 26359 ;;
 26360                           
 26361                           	psect	text128
 26362  018C00                     __ptext128:
 26363                           	opt callstack 0
 26364  018C00                     _INT0_CallBack:
 26365                           	opt callstack 12
 26366                           
 26367                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 26368                           
 26369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26370                           ;incstack = 0
 26371  018C00  5016               	movf	_INT0_InterruptHandler^0,w,c
 26372  018C02  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 26373  018C04  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 26374  018C06  B4D8               	btfsc	status,2,c
 26375  018C08  0012               	return	
 26376                           
 26377                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 26378  018C0A  D801               	call	u398_48
 26379  018C0C  0012               	return	
 26380  018C0E                     u398_48:
 26381  018C0E  0005               	push	
 26382  018C10  6EFA               	movwf	pclath,c
 26383  018C12  5016               	movf	_INT0_InterruptHandler^0,w,c
 26384  018C14  6EFD               	movwf	tosl,c
 26385  018C16  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 26386  018C18  6EFE               	movwf	tosh,c
 26387  018C1A  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 26388  018C1C  6EFF               	movwf	tosu,c
 26389  018C1E  50FA               	movf	pclath,w,c
 26390  018C20  0012               	return		;indir
 26391  018C22                     __end_of_INT0_CallBack:
 26392                           	opt callstack 0
 26393                           
 26394 ;; *************** function _INT0_DefaultInterruptHandler *****************
 26395 ;; Defined at:
 26396 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 26397 ;; Parameters:    Size  Location     Type
 26398 ;;		None
 26399 ;; Auto vars:     Size  Location     Type
 26400 ;;		None
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  1  [STACK] void 
 26403 ;; Registers used:
 26404 ;;		None
 26405 ;; Tracked objects:
 26406 ;;		On entry : 0/39
 26407 ;;		On exit  : 0/0
 26408 ;;		Unchanged: 0/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26414 ;;Total ram usage:        0 bytes
 26415 ;; Hardware stack levels used:    1
 26416 ;; This function calls:
 26417 ;;		Nothing
 26418 ;; This function is called by:
 26419 ;;		_EXT_INT_Initialize
 26420 ;;		_INT0_CallBack
 26421 ;; This function uses a reentrant model
 26422 ;;
 26423                           
 26424                           	psect	text129
 26425  018EB0                     __ptext129:
 26426                           	opt callstack 0
 26427  018EB0                     _INT0_DefaultInterruptHandler:
 26428                           	opt callstack 12
 26429                           
 26430                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26431                           
 26432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26433                           ;incstack = 0
 26434  018EB0  0012               	return		;funcret
 26435  018EB2                     __end_of_INT0_DefaultInterruptHandler:
 26436                           	opt callstack 0
 26437                           
 26438 ;; *************** function _Default_ISR *****************
 26439 ;; Defined at:
 26440 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26441 ;; Parameters:    Size  Location     Type
 26442 ;;		None
 26443 ;; Auto vars:     Size  Location     Type
 26444 ;;		None
 26445 ;; Return value:  Size  Location     Type
 26446 ;;                  1    wreg      void 
 26447 ;; Registers used:
 26448 ;;		None
 26449 ;; Tracked objects:
 26450 ;;		On entry : 0/0
 26451 ;;		On exit  : 0/0
 26452 ;;		Unchanged: 0/0
 26453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26458 ;;Total ram usage:        0 bytes
 26459 ;; Hardware stack levels used:    1
 26460 ;; This function calls:
 26461 ;;		Nothing
 26462 ;; This function is called by:
 26463 ;;		Interrupt level 2
 26464 ;; This function uses a non-reentrant model
 26465 ;;
 26466                           
 26467                           	psect	text130
 26468  018EA8                     __ptext130:
 26469                           	opt callstack 0
 26470  018EA8                     _Default_ISR:
 26471                           	opt callstack 14
 26472                           
 26473                           ;incstack = 0
 26474  018EA8  EE14  F000         	lfsr	1,___inthi_sp
 26475  018EAC  0011               	retfie		f
 26476  018EAE                     __end_of_Default_ISR:
 26477                           	opt callstack 0
 26478                           
 26479 ;; *************** function _ADCC_ISR *****************
 26480 ;; Defined at:
 26481 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26482 ;; Parameters:    Size  Location     Type
 26483 ;;		None
 26484 ;; Auto vars:     Size  Location     Type
 26485 ;;		None
 26486 ;; Return value:  Size  Location     Type
 26487 ;;                  1    wreg      void 
 26488 ;; Registers used:
 26489 ;;		wreg, status,2, status,0, pclath, tosl
 26490 ;; Tracked objects:
 26491 ;;		On entry : 0/0
 26492 ;;		On exit  : 0/0
 26493 ;;		Unchanged: 0/0
 26494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26499 ;;Total ram usage:        0 bytes
 26500 ;; Hardware stack levels used:    1
 26501 ;; Hardware stack levels required when called:    1
 26502 ;; This function calls:
 26503 ;;		Absolute function
 26504 ;;		_ADCC_DefaultInterruptHandler
 26505 ;;		_adc_int_handler
 26506 ;; This function is called by:
 26507 ;;		Interrupt level 2
 26508 ;; This function uses a non-reentrant model
 26509 ;;
 26510                           
 26511                           	psect	text131
 26512  01882C                     __ptext131:
 26513                           	opt callstack 0
 26514  01882C                     _ADCC_ISR:
 26515                           	opt callstack 13
 26516                           
 26517                           ;incstack = 0
 26518  01882C  EE14  F000         	lfsr	1,___inthi_sp
 26519                           
 26520                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26521  018830  0139               	movlb	57	; () banked
 26522  018832  95A1               	bcf	161,2,b	;volatile
 26523                           
 26524                           ; BSR set to: 57
 26525                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26526  018834  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26527  018836  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26528  018838  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26529  01883A  B4D8               	btfsc	status,2,c
 26530  01883C  0011               	retfie		f
 26531                           
 26532                           ; BSR set to: 57
 26533                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26534  01883E  D801               	call	i2u433_48
 26535  018840  0011               	retfie		f
 26536  018842                     i2u433_48:
 26537  018842  0005               	push	
 26538  018844  6EFA               	movwf	pclath,c
 26539  018846  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26540  018848  6EFD               	movwf	tosl,c
 26541  01884A  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26542  01884C  6EFE               	movwf	tosh,c
 26543  01884E  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26544  018850  6EFF               	movwf	tosu,c
 26545  018852  50FA               	movf	pclath,w,c
 26546  018854  0012               	return		;indir
 26547  018856                     __end_of_ADCC_ISR:
 26548                           	opt callstack 0
 26549                           
 26550 ;; *************** function _adc_int_t_handler *****************
 26551 ;; Defined at:
 26552 ;;		line 128 in file "daq.c"
 26553 ;; Parameters:    Size  Location     Type
 26554 ;;		None
 26555 ;; Auto vars:     Size  Location     Type
 26556 ;;		None
 26557 ;; Return value:  Size  Location     Type
 26558 ;;                  1  [STACK] void 
 26559 ;; Registers used:
 26560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26561 ;; Tracked objects:
 26562 ;;		On entry : 3F/39
 26563 ;;		On exit  : 1/0
 26564 ;;		Unchanged: 0/0
 26565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26570 ;;Total ram usage:        0 bytes
 26571 ;; Hardware stack levels used:    1
 26572 ;; Hardware stack levels required when called:    1
 26573 ;; This function calls:
 26574 ;;		_ADCC_DischargeSampleCapacitor
 26575 ;;		_ADCC_StartConversion
 26576 ;; This function is called by:
 26577 ;;		_start_adc_scan
 26578 ;;		_ADCC_ThresholdISR
 26579 ;; This function uses a reentrant model
 26580 ;;
 26581                           
 26582                           	psect	text132
 26583  017CCA                     __ptext132:
 26584                           	opt callstack 0
 26585  017CCA                     _adc_int_t_handler:
 26586                           	opt callstack 12
 26587                           
 26588                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26589                           
 26590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26591                           ;incstack = 0
 26592  017CCA  013E               	movlb	62	; () banked
 26593  017CCC  51E6               	movf	230,w,b	;volatile
 26594  017CCE  006F FB9C  F032    	movff	16103,btemp	;volatile
 26595  017CD4  6A33               	clrf	(btemp+1)^0,c
 26596  017CD6  0060  F0C8  F033   	movff	btemp,btemp+1
 26597  017CDC  6A32               	clrf	btemp^0,c
 26598  017CDE  2632               	addwf	btemp^0,f,c
 26599  017CE0  0E00               	movlw	0
 26600  017CE2  2233               	addwfc	(btemp+1)^0,f,c
 26601  017CE4  0100               	movlb	0	; () banked
 26602  017CE6  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26603  017CE8  0D02               	mullw	2
 26604  017CEA  50F3               	movf	243,w,c
 26605  017CEC  0FC7               	addlw	low _R
 26606  017CEE  6ED9               	movwf	fsr2l,c
 26607  017CF0  6ADA               	clrf	fsr2h,c
 26608  017CF2  0060  F0CB  FFDE   	movff	btemp,postinc2
 26609  017CF8  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26610  017CFE                     l9307:
 26611                           
 26612                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26613  017CFE  0100               	movlb	0	; () banked
 26614  017D00  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26615  017D02  0E0D               	movlw	13
 26616  017D04  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26617  017D06  D003               	goto	l9313
 26618                           
 26619                           ; BSR set to: 0
 26620                           ;daq.c: 136:    R.done = 1;
 26621  017D08  0E01               	movlw	1
 26622  017D0A  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26623  017D0C  0012               	return	
 26624  017D0E                     l9313:
 26625                           
 26626                           ; BSR set to: 0
 26627                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26628  017D0E  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26629  017D14  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26630  017D18  006F FF78  F03A    	movff	postinc2,btemp+8
 26631  017D1E  006F FF74  F03B    	movff	postdec2,btemp+9
 26632  017D24  2A3D               	incf	(btemp+11)^0,f,c
 26633  017D26  D003               	goto	u883_44
 26634  017D28                     u883_45:
 26635  017D28  90D8               	bcf	status,0,c
 26636  017D2A  323B               	rrcf	(btemp+9)^0,f,c
 26637  017D2C  323A               	rrcf	(btemp+8)^0,f,c
 26638  017D2E                     u883_44:
 26639  017D2E  2E3D               	decfsz	(btemp+11)^0,f,c
 26640  017D30  D7FB               	goto	u883_45
 26641  017D32  A03A               	btfss	(btemp+8)^0,0,c
 26642  017D34  D7E4               	goto	l9307
 26643                           
 26644                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26645  017D36  EC37  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26646                           
 26647                           ; BSR set to: 62
 26648                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26649  017D3A  0100               	movlb	0	; () banked
 26650  017D3C  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26651  017D3E  0B0F               	andlw	15
 26652  017D40  6EE6               	movwf	postinc1,c
 26653  017D42  ECF2  F0C6         	call	_ADCC_StartConversion	;wreg free
 26654                           
 26655                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26656  017D46  0012               	return		;funcret
 26657  017D48                     __end_of_adc_int_t_handler:
 26658                           	opt callstack 0
 26659                           
 26660 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26661 ;; Defined at:
 26662 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26663 ;; Parameters:    Size  Location     Type
 26664 ;;		None
 26665 ;; Auto vars:     Size  Location     Type
 26666 ;;		None
 26667 ;; Return value:  Size  Location     Type
 26668 ;;                  1  [STACK] void 
 26669 ;; Registers used:
 26670 ;;		None
 26671 ;; Tracked objects:
 26672 ;;		On entry : 3F/39
 26673 ;;		On exit  : 0/0
 26674 ;;		Unchanged: 0/0
 26675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26680 ;;Total ram usage:        0 bytes
 26681 ;; Hardware stack levels used:    1
 26682 ;; This function calls:
 26683 ;;		Nothing
 26684 ;; This function is called by:
 26685 ;;		_ADCC_Initialize
 26686 ;;		_ADCC_ISR
 26687 ;;		_ADCC_ThresholdISR
 26688 ;; This function uses a reentrant model
 26689 ;;
 26690                           
 26691                           	psect	text133
 26692  018EB2                     __ptext133:
 26693                           	opt callstack 0
 26694  018EB2                     _ADCC_DefaultInterruptHandler:
 26695                           	opt callstack 13
 26696                           
 26697                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26698                           
 26699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26700                           ;incstack = 0
 26701  018EB2  0012               	return		;funcret
 26702  018EB4                     __end_of_ADCC_DefaultInterruptHandler:
 26703                           	opt callstack 0
 26704                           
 26705 ;; *************** function _adc_int_handler *****************
 26706 ;; Defined at:
 26707 ;;		line 118 in file "daq.c"
 26708 ;; Parameters:    Size  Location     Type
 26709 ;;		None
 26710 ;; Auto vars:     Size  Location     Type
 26711 ;;		None
 26712 ;; Return value:  Size  Location     Type
 26713 ;;                  1  [STACK] void 
 26714 ;; Registers used:
 26715 ;;		None
 26716 ;; Tracked objects:
 26717 ;;		On entry : 3F/39
 26718 ;;		On exit  : 0/0
 26719 ;;		Unchanged: 0/0
 26720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26725 ;;Total ram usage:        0 bytes
 26726 ;; Hardware stack levels used:    1
 26727 ;; This function calls:
 26728 ;;		Nothing
 26729 ;; This function is called by:
 26730 ;;		_start_adc_scan
 26731 ;;		_ADCC_ISR
 26732 ;; This function uses a reentrant model
 26733 ;;
 26734                           
 26735                           	psect	text134
 26736  018EB4                     __ptext134:
 26737                           	opt callstack 0
 26738  018EB4                     _adc_int_handler:
 26739                           	opt callstack 13
 26740                           
 26741                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26742                           
 26743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26744                           ;incstack = 0
 26745  018EB4  0012               	return		;funcret
 26746  018EB6                     __end_of_adc_int_handler:
 26747                           	opt callstack 0
 26748                           
 26749 ;; *************** function _ADCC_ThresholdISR *****************
 26750 ;; Defined at:
 26751 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26752 ;; Parameters:    Size  Location     Type
 26753 ;;		None
 26754 ;; Auto vars:     Size  Location     Type
 26755 ;;		None
 26756 ;; Return value:  Size  Location     Type
 26757 ;;                  1    wreg      void 
 26758 ;; Registers used:
 26759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26760 ;; Tracked objects:
 26761 ;;		On entry : 0/0
 26762 ;;		On exit  : 0/0
 26763 ;;		Unchanged: 0/0
 26764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26767 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26768 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26769 ;;Total ram usage:        5 bytes
 26770 ;; Hardware stack levels used:    1
 26771 ;; Hardware stack levels required when called:    2
 26772 ;; This function calls:
 26773 ;;		Absolute function
 26774 ;;		_ADCC_DefaultInterruptHandler
 26775 ;;		_adc_int_t_handler
 26776 ;; This function is called by:
 26777 ;;		Interrupt level 2
 26778 ;; This function uses a non-reentrant model
 26779 ;;
 26780                           
 26781                           	psect	text135
 26782  017E1C                     __ptext135:
 26783                           	opt callstack 0
 26784  017E1C                     _ADCC_ThresholdISR:
 26785                           	opt callstack 12
 26786                           
 26787                           ;incstack = 0
 26788  017E1C  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26789  017E22  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26790  017E28  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26791  017E2E  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26792  017E34  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26793  017E3A  EE14  F000         	lfsr	1,___inthi_sp
 26794                           
 26795                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26796  017E3E  0139               	movlb	57	; () banked
 26797  017E40  97A1               	bcf	161,3,b	;volatile
 26798                           
 26799                           ; BSR set to: 57
 26800                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26801  017E42  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26802  017E44  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26803  017E46  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26804  017E48  B4D8               	btfsc	status,2,c
 26805  017E4A  D00C               	goto	i2u886_49
 26806                           
 26807                           ; BSR set to: 57
 26808                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26809  017E4C  D801               	call	i2u886_48
 26810  017E4E  D00A               	goto	i2u886_49
 26811  017E50                     i2u886_48:
 26812  017E50  0005               	push	
 26813  017E52  6EFA               	movwf	pclath,c
 26814  017E54  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26815  017E56  6EFD               	movwf	tosl,c
 26816  017E58  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26817  017E5A  6EFE               	movwf	tosh,c
 26818  017E5C  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26819  017E5E  6EFF               	movwf	tosu,c
 26820  017E60  50FA               	movf	pclath,w,c
 26821  017E62  0012               	return		;indir
 26822  017E64                     i2u886_49:
 26823  017E64  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26824  017E6A  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26825  017E70  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26826  017E76  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26827  017E7C  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26828  017E82  0011               	retfie		f
 26829  017E84                     __end_of_ADCC_ThresholdISR:
 26830                           	opt callstack 0
 26831                           
 26832 ;; *************** function _UART1_tx_vect_isr *****************
 26833 ;; Defined at:
 26834 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26835 ;; Parameters:    Size  Location     Type
 26836 ;;		None
 26837 ;; Auto vars:     Size  Location     Type
 26838 ;;		None
 26839 ;; Return value:  Size  Location     Type
 26840 ;;                  1    wreg      void 
 26841 ;; Registers used:
 26842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26843 ;; Tracked objects:
 26844 ;;		On entry : 0/0
 26845 ;;		On exit  : 0/0
 26846 ;;		Unchanged: 0/0
 26847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26852 ;;Total ram usage:        0 bytes
 26853 ;; Hardware stack levels used:    1
 26854 ;; Hardware stack levels required when called:    1
 26855 ;; This function calls:
 26856 ;;		Absolute function
 26857 ;;		_UART1_Transmit_ISR
 26858 ;; This function is called by:
 26859 ;;		Interrupt level 2
 26860 ;; This function uses a non-reentrant model
 26861 ;;
 26862                           
 26863                           	psect	text136
 26864  018AB0                     __ptext136:
 26865                           	opt callstack 0
 26866  018AB0                     _UART1_tx_vect_isr:
 26867                           	opt callstack 13
 26868                           
 26869                           ;incstack = 0
 26870  018AB0  EE14  F000         	lfsr	1,___inthi_sp
 26871                           
 26872                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26873  018AB4  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26874  018AB6  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26875  018AB8  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26876  018ABA  B4D8               	btfsc	status,2,c
 26877  018ABC  0011               	retfie		f
 26878                           
 26879                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26880  018ABE  D801               	call	i2u888_48
 26881  018AC0  0011               	retfie		f
 26882  018AC2                     i2u888_48:
 26883  018AC2  0005               	push	
 26884  018AC4  6EFA               	movwf	pclath,c
 26885  018AC6  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26886  018AC8  6EFD               	movwf	tosl,c
 26887  018ACA  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26888  018ACC  6EFE               	movwf	tosh,c
 26889  018ACE  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26890  018AD0  6EFF               	movwf	tosu,c
 26891  018AD2  50FA               	movf	pclath,w,c
 26892  018AD4  0012               	return		;indir
 26893  018AD6                     __end_of_UART1_tx_vect_isr:
 26894                           	opt callstack 0
 26895                           
 26896 ;; *************** function _UART1_Transmit_ISR *****************
 26897 ;; Defined at:
 26898 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26899 ;; Parameters:    Size  Location     Type
 26900 ;;		None
 26901 ;; Auto vars:     Size  Location     Type
 26902 ;;		None
 26903 ;; Return value:  Size  Location     Type
 26904 ;;                  1  [STACK] void 
 26905 ;; Registers used:
 26906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26907 ;; Tracked objects:
 26908 ;;		On entry : 0/0
 26909 ;;		On exit  : 3B/39
 26910 ;;		Unchanged: 0/0
 26911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26916 ;;Total ram usage:        0 bytes
 26917 ;; Hardware stack levels used:    1
 26918 ;; This function calls:
 26919 ;;		Nothing
 26920 ;; This function is called by:
 26921 ;;		_UART1_Initialize
 26922 ;;		_UART1_tx_vect_isr
 26923 ;; This function uses a reentrant model
 26924 ;;
 26925                           
 26926                           	psect	text137
 26927  0187A8                     __ptext137:
 26928                           	opt callstack 0
 26929  0187A8                     _UART1_Transmit_ISR:
 26930                           	opt callstack 13
 26931                           
 26932                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26933                           
 26934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26935                           ;incstack = 0
 26936  0187A8  0E40               	movlw	64
 26937  0187AA  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26938  0187AC  D010               	goto	l581
 26939                           
 26940                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26941  0187AE  0EBC               	movlw	low _uart1TxBuffer
 26942  0187B0  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26943  0187B2  6ED9               	movwf	fsr2l,c
 26944  0187B4  6ADA               	clrf	fsr2h,c
 26945  0187B6  0E02               	movlw	high _uart1TxBuffer
 26946  0187B8  22DA               	addwfc	fsr2h,f,c
 26947  0187BA  50DF               	movf	indf2,w,c
 26948  0187BC  013D               	movlb	61	; () banked
 26949  0187BE  6FEA               	movwf	234,b	;volatile
 26950                           
 26951                           ; BSR set to: 61
 26952  0187C0  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26953                           
 26954                           ; BSR set to: 61
 26955                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26956  0187C2  0E3F               	movlw	63
 26957  0187C4  6430               	cpfsgt	_uart1TxTail^0,c
 26958  0187C6  D001               	goto	l9035
 26959                           
 26960                           ; BSR set to: 61
 26961                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26962  0187C8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26963  0187CA                     l9035:
 26964                           
 26965                           ; BSR set to: 61
 26966                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26967  0187CA  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26968                           
 26969                           ;mcc_generated_files/uart1.c: 222:  } else {
 26970  0187CC  0012               	return	
 26971  0187CE                     l581:
 26972                           
 26973                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26974  0187CE  0139               	movlb	57	; () banked
 26975  0187D0  9993               	bcf	147,4,b	;volatile
 26976                           
 26977                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26978  0187D2  0012               	return		;funcret
 26979  0187D4                     __end_of_UART1_Transmit_ISR:
 26980                           	opt callstack 0
 26981                           
 26982 ;; *************** function _UART1_rx_vect_isr *****************
 26983 ;; Defined at:
 26984 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26985 ;; Parameters:    Size  Location     Type
 26986 ;;		None
 26987 ;; Auto vars:     Size  Location     Type
 26988 ;;		None
 26989 ;; Return value:  Size  Location     Type
 26990 ;;                  1    wreg      void 
 26991 ;; Registers used:
 26992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26993 ;; Tracked objects:
 26994 ;;		On entry : 0/0
 26995 ;;		On exit  : 0/0
 26996 ;;		Unchanged: 0/0
 26997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27002 ;;Total ram usage:        0 bytes
 27003 ;; Hardware stack levels used:    1
 27004 ;; Hardware stack levels required when called:    1
 27005 ;; This function calls:
 27006 ;;		Absolute function
 27007 ;;		_UART1_Receive_ISR
 27008 ;; This function is called by:
 27009 ;;		Interrupt level 2
 27010 ;; This function uses a non-reentrant model
 27011 ;;
 27012                           
 27013                           	psect	text138
 27014  018AD8                     __ptext138:
 27015                           	opt callstack 0
 27016  018AD8                     _UART1_rx_vect_isr:
 27017                           	opt callstack 13
 27018                           
 27019                           ;incstack = 0
 27020  018AD8  EE14  F000         	lfsr	1,___inthi_sp
 27021                           
 27022                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 27023  018ADC  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 27024  018ADE  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 27025  018AE0  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 27026  018AE2  B4D8               	btfsc	status,2,c
 27027  018AE4  0011               	retfie		f
 27028                           
 27029                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 27030  018AE6  D801               	call	i2u890_48
 27031  018AE8  0011               	retfie		f
 27032  018AEA                     i2u890_48:
 27033  018AEA  0005               	push	
 27034  018AEC  6EFA               	movwf	pclath,c
 27035  018AEE  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 27036  018AF0  6EFD               	movwf	tosl,c
 27037  018AF2  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 27038  018AF4  6EFE               	movwf	tosh,c
 27039  018AF6  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 27040  018AF8  6EFF               	movwf	tosu,c
 27041  018AFA  50FA               	movf	pclath,w,c
 27042  018AFC  0012               	return		;indir
 27043  018AFE                     __end_of_UART1_rx_vect_isr:
 27044                           	opt callstack 0
 27045                           
 27046 ;; *************** function _UART1_Receive_ISR *****************
 27047 ;; Defined at:
 27048 ;;		line 229 in file "mcc_generated_files/uart1.c"
 27049 ;; Parameters:    Size  Location     Type
 27050 ;;		None
 27051 ;; Auto vars:     Size  Location     Type
 27052 ;;		None
 27053 ;; Return value:  Size  Location     Type
 27054 ;;                  1  [STACK] void 
 27055 ;; Registers used:
 27056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27057 ;; Tracked objects:
 27058 ;;		On entry : 0/0
 27059 ;;		On exit  : 0/0
 27060 ;;		Unchanged: 0/0
 27061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27066 ;;Total ram usage:        0 bytes
 27067 ;; Hardware stack levels used:    1
 27068 ;; This function calls:
 27069 ;;		Nothing
 27070 ;; This function is called by:
 27071 ;;		_UART1_Initialize
 27072 ;;		_UART1_rx_vect_isr
 27073 ;; This function uses a reentrant model
 27074 ;;
 27075                           
 27076                           	psect	text139
 27077  018C9C                     __ptext139:
 27078                           	opt callstack 0
 27079  018C9C                     _UART1_Receive_ISR:
 27080                           	opt callstack 13
 27081                           
 27082                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 27083                           
 27084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27085                           ;incstack = 0
 27086  018C9C  0E00               	movlw	low _uart1RxBuffer
 27087  018C9E  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 27088  018CA0  6ED9               	movwf	fsr2l,c
 27089  018CA2  6ADA               	clrf	fsr2h,c
 27090  018CA4  0E06               	movlw	high _uart1RxBuffer
 27091  018CA6  22DA               	addwfc	fsr2h,f,c
 27092  018CA8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27093  018CAE  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 27094                           
 27095                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 27096  018CB0  282E               	incf	_uart1RxHead^0,w,c
 27097  018CB2  B4D8               	btfsc	status,2,c
 27098                           
 27099                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 27100  018CB4  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 27101                           
 27102                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 27103  018CB6  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 27104                           
 27105                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27106  018CB8  0012               	return		;funcret
 27107  018CBA                     __end_of_UART1_Receive_ISR:
 27108                           	opt callstack 0
 27109                           
 27110 ;; *************** function _UART2_tx_vect_isr *****************
 27111 ;; Defined at:
 27112 ;;		line 195 in file "mcc_generated_files/uart2.c"
 27113 ;; Parameters:    Size  Location     Type
 27114 ;;		None
 27115 ;; Auto vars:     Size  Location     Type
 27116 ;;		None
 27117 ;; Return value:  Size  Location     Type
 27118 ;;                  1    wreg      void 
 27119 ;; Registers used:
 27120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27121 ;; Tracked objects:
 27122 ;;		On entry : 0/0
 27123 ;;		On exit  : 0/0
 27124 ;;		Unchanged: 0/0
 27125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27130 ;;Total ram usage:        0 bytes
 27131 ;; Hardware stack levels used:    1
 27132 ;; Hardware stack levels required when called:    1
 27133 ;; This function calls:
 27134 ;;		Absolute function
 27135 ;;		_UART2_Transmit_ISR
 27136 ;; This function is called by:
 27137 ;;		Interrupt level 2
 27138 ;; This function uses a non-reentrant model
 27139 ;;
 27140                           
 27141                           	psect	text140
 27142  018B00                     __ptext140:
 27143                           	opt callstack 0
 27144  018B00                     _UART2_tx_vect_isr:
 27145                           	opt callstack 13
 27146                           
 27147                           ;incstack = 0
 27148  018B00  EE14  F000         	lfsr	1,___inthi_sp
 27149                           
 27150                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 27151  018B04  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27152  018B06  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 27153  018B08  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 27154  018B0A  B4D8               	btfsc	status,2,c
 27155  018B0C  0011               	retfie		f
 27156                           
 27157                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 27158  018B0E  D801               	call	i2u892_48
 27159  018B10  0011               	retfie		f
 27160  018B12                     i2u892_48:
 27161  018B12  0005               	push	
 27162  018B14  6EFA               	movwf	pclath,c
 27163  018B16  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27164  018B18  6EFD               	movwf	tosl,c
 27165  018B1A  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 27166  018B1C  6EFE               	movwf	tosh,c
 27167  018B1E  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 27168  018B20  6EFF               	movwf	tosu,c
 27169  018B22  50FA               	movf	pclath,w,c
 27170  018B24  0012               	return		;indir
 27171  018B26                     __end_of_UART2_tx_vect_isr:
 27172                           	opt callstack 0
 27173                           
 27174 ;; *************** function _UART2_Transmit_ISR *****************
 27175 ;; Defined at:
 27176 ;;		line 213 in file "mcc_generated_files/uart2.c"
 27177 ;; Parameters:    Size  Location     Type
 27178 ;;		None
 27179 ;; Auto vars:     Size  Location     Type
 27180 ;;		None
 27181 ;; Return value:  Size  Location     Type
 27182 ;;                  1  [STACK] void 
 27183 ;; Registers used:
 27184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27185 ;; Tracked objects:
 27186 ;;		On entry : 0/0
 27187 ;;		On exit  : 3B/39
 27188 ;;		Unchanged: 0/0
 27189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27194 ;;Total ram usage:        0 bytes
 27195 ;; Hardware stack levels used:    1
 27196 ;; This function calls:
 27197 ;;		Nothing
 27198 ;; This function is called by:
 27199 ;;		_UART2_Initialize
 27200 ;;		_UART2_tx_vect_isr
 27201 ;; This function uses a reentrant model
 27202 ;;
 27203                           
 27204                           	psect	text141
 27205  0187D4                     __ptext141:
 27206                           	opt callstack 0
 27207  0187D4                     _UART2_Transmit_ISR:
 27208                           	opt callstack 13
 27209                           
 27210                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 27211                           
 27212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27213                           ;incstack = 0
 27214  0187D4  0E40               	movlw	64
 27215  0187D6  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 27216  0187D8  D010               	goto	l701
 27217                           
 27218                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 27219  0187DA  0E54               	movlw	low _uart2TxBuffer
 27220  0187DC  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 27221  0187DE  6ED9               	movwf	fsr2l,c
 27222  0187E0  6ADA               	clrf	fsr2h,c
 27223  0187E2  0E03               	movlw	high _uart2TxBuffer
 27224  0187E4  22DA               	addwfc	fsr2h,f,c
 27225  0187E6  50DF               	movf	indf2,w,c
 27226  0187E8  013D               	movlb	61	; () banked
 27227  0187EA  6FD2               	movwf	210,b	;volatile
 27228                           
 27229                           ; BSR set to: 61
 27230  0187EC  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 27231                           
 27232                           ; BSR set to: 61
 27233                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 27234  0187EE  0E3F               	movlw	63
 27235  0187F0  642A               	cpfsgt	_uart2TxTail^0,c
 27236  0187F2  D001               	goto	l9057
 27237                           
 27238                           ; BSR set to: 61
 27239                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 27240  0187F4  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 27241  0187F6                     l9057:
 27242                           
 27243                           ; BSR set to: 61
 27244                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 27245  0187F6  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 27246                           
 27247                           ;mcc_generated_files/uart2.c: 224:     }
 27248  0187F8  0012               	return	
 27249  0187FA                     l701:
 27250                           
 27251                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 27252  0187FA  0139               	movlb	57	; () banked
 27253  0187FC  9796               	bcf	150,3,b	;volatile
 27254                           
 27255                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27256  0187FE  0012               	return		;funcret
 27257  018800                     __end_of_UART2_Transmit_ISR:
 27258                           	opt callstack 0
 27259                           
 27260 ;; *************** function _UART2_rx_vect_isr *****************
 27261 ;; Defined at:
 27262 ;;		line 203 in file "mcc_generated_files/uart2.c"
 27263 ;; Parameters:    Size  Location     Type
 27264 ;;		None
 27265 ;; Auto vars:     Size  Location     Type
 27266 ;;		None
 27267 ;; Return value:  Size  Location     Type
 27268 ;;                  1    wreg      void 
 27269 ;; Registers used:
 27270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27271 ;; Tracked objects:
 27272 ;;		On entry : 0/0
 27273 ;;		On exit  : 0/0
 27274 ;;		Unchanged: 0/0
 27275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27280 ;;Total ram usage:        0 bytes
 27281 ;; Hardware stack levels used:    1
 27282 ;; Hardware stack levels required when called:    1
 27283 ;; This function calls:
 27284 ;;		Absolute function
 27285 ;;		_UART2_Receive_ISR
 27286 ;; This function is called by:
 27287 ;;		Interrupt level 2
 27288 ;; This function uses a non-reentrant model
 27289 ;;
 27290                           
 27291                           	psect	text142
 27292  018B28                     __ptext142:
 27293                           	opt callstack 0
 27294  018B28                     _UART2_rx_vect_isr:
 27295                           	opt callstack 13
 27296                           
 27297                           ;incstack = 0
 27298  018B28  EE14  F000         	lfsr	1,___inthi_sp
 27299                           
 27300                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 27301  018B2C  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27302  018B2E  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 27303  018B30  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 27304  018B32  B4D8               	btfsc	status,2,c
 27305  018B34  0011               	retfie		f
 27306                           
 27307                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 27308  018B36  D801               	call	i2u894_48
 27309  018B38  0011               	retfie		f
 27310  018B3A                     i2u894_48:
 27311  018B3A  0005               	push	
 27312  018B3C  6EFA               	movwf	pclath,c
 27313  018B3E  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27314  018B40  6EFD               	movwf	tosl,c
 27315  018B42  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 27316  018B44  6EFE               	movwf	tosh,c
 27317  018B46  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 27318  018B48  6EFF               	movwf	tosu,c
 27319  018B4A  50FA               	movf	pclath,w,c
 27320  018B4C  0012               	return		;indir
 27321  018B4E                     __end_of_UART2_rx_vect_isr:
 27322                           	opt callstack 0
 27323                           
 27324 ;; *************** function _UART2_Receive_ISR *****************
 27325 ;; Defined at:
 27326 ;;		line 233 in file "mcc_generated_files/uart2.c"
 27327 ;; Parameters:    Size  Location     Type
 27328 ;;		None
 27329 ;; Auto vars:     Size  Location     Type
 27330 ;;		None
 27331 ;; Return value:  Size  Location     Type
 27332 ;;                  1  [STACK] void 
 27333 ;; Registers used:
 27334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27335 ;; Tracked objects:
 27336 ;;		On entry : 0/0
 27337 ;;		On exit  : 0/0
 27338 ;;		Unchanged: 0/0
 27339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27344 ;;Total ram usage:        0 bytes
 27345 ;; Hardware stack levels used:    1
 27346 ;; This function calls:
 27347 ;;		Nothing
 27348 ;; This function is called by:
 27349 ;;		_UART2_Initialize
 27350 ;;		_UART2_rx_vect_isr
 27351 ;; This function uses a reentrant model
 27352 ;;
 27353                           
 27354                           	psect	text143
 27355  018CBA                     __ptext143:
 27356                           	opt callstack 0
 27357  018CBA                     _UART2_Receive_ISR:
 27358                           	opt callstack 13
 27359                           
 27360                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 27361                           
 27362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27363                           ;incstack = 0
 27364  018CBA  0E00               	movlw	low _uart2RxBuffer
 27365  018CBC  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 27366  018CBE  6ED9               	movwf	fsr2l,c
 27367  018CC0  6ADA               	clrf	fsr2h,c
 27368  018CC2  0E07               	movlw	high _uart2RxBuffer
 27369  018CC4  22DA               	addwfc	fsr2h,f,c
 27370  018CC6  006F F743 FFDF     	movff	15824,indf2	;volatile
 27371  018CCC  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 27372                           
 27373                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 27374  018CCE  2828               	incf	_uart2RxHead^0,w,c
 27375  018CD0  B4D8               	btfsc	status,2,c
 27376                           
 27377                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 27378  018CD2  6A28               	clrf	_uart2RxHead^0,c	;volatile
 27379                           
 27380                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 27381  018CD4  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 27382                           
 27383                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27384  018CD6  0012               	return		;funcret
 27385  018CD8                     __end_of_UART2_Receive_ISR:
 27386                           	opt callstack 0
 27387                           
 27388 ;; *************** function _TMR6_ISR *****************
 27389 ;; Defined at:
 27390 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 27391 ;; Parameters:    Size  Location     Type
 27392 ;;		None
 27393 ;; Auto vars:     Size  Location     Type
 27394 ;;		None
 27395 ;; Return value:  Size  Location     Type
 27396 ;;                  1    wreg      void 
 27397 ;; Registers used:
 27398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27399 ;; Tracked objects:
 27400 ;;		On entry : 0/0
 27401 ;;		On exit  : 0/0
 27402 ;;		Unchanged: 0/0
 27403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27408 ;;Total ram usage:        1 bytes
 27409 ;; Hardware stack levels used:    1
 27410 ;; Hardware stack levels required when called:    2
 27411 ;; This function calls:
 27412 ;;		_TMR6_CallBack
 27413 ;; This function is called by:
 27414 ;;		Interrupt level 2
 27415 ;; This function uses a non-reentrant model
 27416 ;;
 27417                           
 27418                           	psect	text144
 27419  018D2C                     __ptext144:
 27420                           	opt callstack 0
 27421  018D2C                     _TMR6_ISR:
 27422                           	opt callstack 12
 27423                           
 27424                           ;incstack = 0
 27425  018D2C  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 27426  018D32  EE14  F000         	lfsr	1,___inthi_sp
 27427                           
 27428                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 27429  018D36  0139               	movlb	57	; () banked
 27430  018D38  91A9               	bcf	169,0,b	;volatile
 27431                           
 27432                           ; BSR set to: 57
 27433                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 27434  018D3A  ECDD  F0C5         	call	_TMR6_CallBack	;wreg free
 27435  018D3E  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 27436  018D44  0011               	retfie		f
 27437  018D46                     __end_of_TMR6_ISR:
 27438                           	opt callstack 0
 27439                           
 27440 ;; *************** function _TMR6_CallBack *****************
 27441 ;; Defined at:
 27442 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27443 ;; Parameters:    Size  Location     Type
 27444 ;;		None
 27445 ;; Auto vars:     Size  Location     Type
 27446 ;;		None
 27447 ;; Return value:  Size  Location     Type
 27448 ;;                  1  [STACK] void 
 27449 ;; Registers used:
 27450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27451 ;; Tracked objects:
 27452 ;;		On entry : 3F/39
 27453 ;;		On exit  : 0/0
 27454 ;;		Unchanged: 0/0
 27455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27460 ;;Total ram usage:        0 bytes
 27461 ;; Hardware stack levels used:    1
 27462 ;; Hardware stack levels required when called:    1
 27463 ;; This function calls:
 27464 ;;		Absolute function
 27465 ;;		_TMR6_DefaultInterruptHandler
 27466 ;; This function is called by:
 27467 ;;		_TMR6_ISR
 27468 ;; This function uses a reentrant model
 27469 ;;
 27470                           
 27471                           	psect	text145
 27472  018BBA                     __ptext145:
 27473                           	opt callstack 0
 27474  018BBA                     _TMR6_CallBack:
 27475                           	opt callstack 12
 27476                           
 27477                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27478                           
 27479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27480                           ;incstack = 0
 27481  018BBA  0100               	movlb	0	; () banked
 27482  018BBC  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27483  018BBE  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27484  018BC0  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27485  018BC2  B4D8               	btfsc	status,2,c
 27486  018BC4  0012               	return	
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27490  018BC6  D801               	call	u861_48
 27491  018BC8  0012               	return	
 27492  018BCA                     u861_48:
 27493  018BCA  0005               	push	
 27494  018BCC  6EFA               	movwf	pclath,c
 27495  018BCE  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27496  018BD0  6EFD               	movwf	tosl,c
 27497  018BD2  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27498  018BD4  6EFE               	movwf	tosh,c
 27499  018BD6  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27500  018BD8  6EFF               	movwf	tosu,c
 27501  018BDA  50FA               	movf	pclath,w,c
 27502  018BDC  0012               	return		;indir
 27503  018BDE                     __end_of_TMR6_CallBack:
 27504                           	opt callstack 0
 27505                           
 27506 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27507 ;; Defined at:
 27508 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;		None
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  i               1  [STACK] unsigned char 
 27513 ;; Return value:  Size  Location     Type
 27514 ;;                  1  [STACK] void 
 27515 ;; Registers used:
 27516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27517 ;; Tracked objects:
 27518 ;;		On entry : 3F/0
 27519 ;;		On exit  : 0/0
 27520 ;;		Unchanged: 0/0
 27521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27526 ;;Total ram usage:        0 bytes
 27527 ;; Hardware stack levels used:    1
 27528 ;; This function calls:
 27529 ;;		Nothing
 27530 ;; This function is called by:
 27531 ;;		_TMR6_Initialize
 27532 ;;		_TMR6_CallBack
 27533 ;; This function uses a reentrant model
 27534 ;;
 27535                           
 27536                           	psect	text146
 27537  0183E8                     __ptext146:
 27538                           	opt callstack 0
 27539  0183E8                     _TMR6_DefaultInterruptHandler:
 27540                           	opt callstack 0
 27541                           
 27542                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27543  0183E8  52E6               	movf	postinc1,f,c
 27544                           
 27545                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27546                           ;stkvar	_i @ sp[(-1)+0]
 27547                           
 27548                           ;incstack = 0
 27549  0183EA  0EFF               	movlw	-1
 27550  0183EC  6AE3               	clrf	plusw1,c
 27551  0183EE                     l8721:
 27552                           
 27553                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27554                           ;stkvar	_i @ sp[(-1)+0]
 27555  0183EE  0EFF               	movlw	-1
 27556  0183F0  50E3               	movf	plusw1,w,c
 27557  0183F2  0D02               	mullw	2
 27558  0183F4  50F3               	movf	243,w,c
 27559  0183F6  0F89               	addlw	low _tickCount
 27560  0183F8  6ED9               	movwf	fsr2l,c
 27561  0183FA  6ADA               	clrf	fsr2h,c
 27562  0183FC  50DE               	movf	postinc2,w,c
 27563  0183FE  10DE               	iorwf	postinc2,w,c
 27564  018400  B4D8               	btfsc	status,2,c
 27565  018402  D00A               	goto	l8725
 27566                           
 27567                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27568                           ;stkvar	_i @ sp[(-1)+0]
 27569  018404  0EFF               	movlw	-1
 27570  018406  50E3               	movf	plusw1,w,c
 27571  018408  0D02               	mullw	2
 27572  01840A  50F3               	movf	243,w,c
 27573  01840C  0F89               	addlw	low _tickCount
 27574  01840E  6ED9               	movwf	fsr2l,c
 27575  018410  6ADA               	clrf	fsr2h,c
 27576  018412  06DE               	decf	postinc2,f,c
 27577  018414  0E00               	movlw	0
 27578  018416  5ADD               	subwfb	postdec2,f,c
 27579  018418                     l8725:
 27580                           
 27581                           ;mcc_generated_files/tmr6.c: 207:  }
 27582                           ;stkvar	_i @ sp[(-1)+0]
 27583  018418  0EFF               	movlw	-1
 27584  01841A  2AE3               	incf	plusw1,f,c
 27585                           
 27586                           ;stkvar	_i @ sp[(-1)+0]
 27587  01841C  0EFF               	movlw	-1
 27588  01841E  006F FF8C  F032    	movff	plusw1,btemp
 27589  018424  0E0B               	movlw	11
 27590  018426  6432               	cpfsgt	btemp^0,c
 27591  018428  D7E2               	goto	l8721
 27592                           
 27593                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27594  01842A  52E5               	movf	postdec1,f,c
 27595  01842C  0012               	return		;funcret
 27596  01842E                     __end_of_TMR6_DefaultInterruptHandler:
 27597                           	opt callstack 0
 27598                           
 27599 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27600 ;; Defined at:
 27601 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27602 ;; Parameters:    Size  Location     Type
 27603 ;;		None
 27604 ;; Auto vars:     Size  Location     Type
 27605 ;;		None
 27606 ;; Return value:  Size  Location     Type
 27607 ;;                  1    wreg      void 
 27608 ;; Registers used:
 27609 ;;		None
 27610 ;; Tracked objects:
 27611 ;;		On entry : 0/0
 27612 ;;		On exit  : 3F/0
 27613 ;;		Unchanged: 0/0
 27614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27619 ;;Total ram usage:        0 bytes
 27620 ;; Hardware stack levels used:    1
 27621 ;; This function calls:
 27622 ;;		Nothing
 27623 ;; This function is called by:
 27624 ;;		Interrupt level 2
 27625 ;; This function uses a non-reentrant model
 27626 ;;
 27627                           
 27628                           	psect	text147
 27629  018E34                     __ptext147:
 27630                           	opt callstack 0
 27631  018E34                     _DMA1_DMASCNT_ISR:
 27632                           	opt callstack 14
 27633                           
 27634                           ;incstack = 0
 27635  018E34  EE14  F000         	lfsr	1,___inthi_sp
 27636                           
 27637                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27638  018E38  0139               	movlb	57	; () banked
 27639  018E3A  91A2               	bcf	162,0,b	;volatile
 27640                           
 27641                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27642  018E3C  0100               	movlb	0	; () banked
 27643  018E3E  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27644                           
 27645                           ; BSR set to: 0
 27646  018E40  0011               	retfie		f
 27647  018E42                     __end_of_DMA1_DMASCNT_ISR:
 27648                           	opt callstack 0
 27649                           
 27650 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27651 ;; Defined at:
 27652 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27653 ;; Parameters:    Size  Location     Type
 27654 ;;		None
 27655 ;; Auto vars:     Size  Location     Type
 27656 ;;		None
 27657 ;; Return value:  Size  Location     Type
 27658 ;;                  1    wreg      void 
 27659 ;; Registers used:
 27660 ;;		None
 27661 ;; Tracked objects:
 27662 ;;		On entry : 0/0
 27663 ;;		On exit  : 3F/39
 27664 ;;		Unchanged: 0/0
 27665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27670 ;;Total ram usage:        0 bytes
 27671 ;; Hardware stack levels used:    1
 27672 ;; This function calls:
 27673 ;;		Nothing
 27674 ;; This function is called by:
 27675 ;;		Interrupt level 2
 27676 ;; This function uses a non-reentrant model
 27677 ;;
 27678                           
 27679                           	psect	text148
 27680  018E4C                     __ptext148:
 27681                           	opt callstack 0
 27682  018E4C                     _DMA1_DMADCNT_ISR:
 27683                           	opt callstack 14
 27684                           
 27685                           ; BSR set to: 0
 27686                           ;incstack = 0
 27687  018E4C  EE14  F000         	lfsr	1,___inthi_sp
 27688                           
 27689                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27690  018E50  0139               	movlb	57	; () banked
 27691  018E52  93A2               	bcf	162,1,b	;volatile
 27692                           
 27693                           ; BSR set to: 57
 27694  018E54  0011               	retfie		f
 27695  018E56                     __end_of_DMA1_DMADCNT_ISR:
 27696                           	opt callstack 0
 27697                           
 27698 ;; *************** function _DMA1_DMAA_ISR *****************
 27699 ;; Defined at:
 27700 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27701 ;; Parameters:    Size  Location     Type
 27702 ;;		None
 27703 ;; Auto vars:     Size  Location     Type
 27704 ;;		None
 27705 ;; Return value:  Size  Location     Type
 27706 ;;                  1    wreg      void 
 27707 ;; Registers used:
 27708 ;;		None
 27709 ;; Tracked objects:
 27710 ;;		On entry : 0/0
 27711 ;;		On exit  : 3F/39
 27712 ;;		Unchanged: 0/0
 27713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27718 ;;Total ram usage:        0 bytes
 27719 ;; Hardware stack levels used:    1
 27720 ;; This function calls:
 27721 ;;		Nothing
 27722 ;; This function is called by:
 27723 ;;		Interrupt level 2
 27724 ;; This function uses a non-reentrant model
 27725 ;;
 27726                           
 27727                           	psect	text149
 27728  018E58                     __ptext149:
 27729                           	opt callstack 0
 27730  018E58                     _DMA1_DMAA_ISR:
 27731                           	opt callstack 14
 27732                           
 27733                           ; BSR set to: 57
 27734                           ;incstack = 0
 27735  018E58  EE14  F000         	lfsr	1,___inthi_sp
 27736                           
 27737                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27738  018E5C  0139               	movlb	57	; () banked
 27739  018E5E  97A2               	bcf	162,3,b	;volatile
 27740                           
 27741                           ; BSR set to: 57
 27742  018E60  0011               	retfie		f
 27743  018E62                     __end_of_DMA1_DMAA_ISR:
 27744                           	opt callstack 0
 27745                           
 27746 ;; *************** function _DMA1_DMAOR_ISR *****************
 27747 ;; Defined at:
 27748 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27749 ;; Parameters:    Size  Location     Type
 27750 ;;		None
 27751 ;; Auto vars:     Size  Location     Type
 27752 ;;		None
 27753 ;; Return value:  Size  Location     Type
 27754 ;;                  1    wreg      void 
 27755 ;; Registers used:
 27756 ;;		None
 27757 ;; Tracked objects:
 27758 ;;		On entry : 0/0
 27759 ;;		On exit  : 3F/39
 27760 ;;		Unchanged: 0/0
 27761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27766 ;;Total ram usage:        0 bytes
 27767 ;; Hardware stack levels used:    1
 27768 ;; This function calls:
 27769 ;;		Nothing
 27770 ;; This function is called by:
 27771 ;;		Interrupt level 2
 27772 ;; This function uses a non-reentrant model
 27773 ;;
 27774                           
 27775                           	psect	text150
 27776  018E64                     __ptext150:
 27777                           	opt callstack 0
 27778  018E64                     _DMA1_DMAOR_ISR:
 27779                           	opt callstack 14
 27780                           
 27781                           ; BSR set to: 57
 27782                           ;incstack = 0
 27783  018E64  EE14  F000         	lfsr	1,___inthi_sp
 27784                           
 27785                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27786  018E68  0139               	movlb	57	; () banked
 27787  018E6A  95A2               	bcf	162,2,b	;volatile
 27788                           
 27789                           ; BSR set to: 57
 27790  018E6C  0011               	retfie		f
 27791  018E6E                     __end_of_DMA1_DMAOR_ISR:
 27792                           	opt callstack 0
 27793                           
 27794                           ;
 27795                           ; Interrupt Vector Table @ 0x8
 27796                           ;
 27797                           
 27798                           	psect	ivt0x8
 27799  000008                     __pivt0x8:
 27800                           	opt callstack 0
 27801  000008                     ivt0x8_base:
 27802                           	opt callstack 0
 27803                           
 27804                           ; Vector 0 : SWINT
 27805  000008  63AA               	dw	_Default_ISR shr (0+2)
 27806                           
 27807                           ; Vector 1 : HLVD
 27808  00000A  63AA               	dw	_Default_ISR shr (0+2)
 27809                           
 27810                           ; Vector 2 : OSF
 27811  00000C  63AA               	dw	_Default_ISR shr (0+2)
 27812                           
 27813                           ; Vector 3 : CSW
 27814  00000E  63AA               	dw	_Default_ISR shr (0+2)
 27815                           
 27816                           ; Vector 4 : NVM
 27817  000010  63AA               	dw	_Default_ISR shr (0+2)
 27818                           
 27819                           ; Vector 5 : SCAN
 27820  000012  63AA               	dw	_Default_ISR shr (0+2)
 27821                           
 27822                           ; Vector 6 : CRC
 27823  000014  63AA               	dw	_Default_ISR shr (0+2)
 27824                           
 27825                           ; Vector 7 : IOC
 27826  000016  63AA               	dw	_Default_ISR shr (0+2)
 27827                           
 27828                           ; Vector 8 : INT0
 27829  000018  6389               	dw	_INT0_ISR shr (0+2)
 27830                           
 27831                           ; Vector 9 : ZCD
 27832  00001A  63AA               	dw	_Default_ISR shr (0+2)
 27833                           
 27834                           ; Vector 10 : AD
 27835  00001C  620B               	dw	_ADCC_ISR shr (0+2)
 27836                           
 27837                           ; Vector 11 : ADT
 27838  00001E  5F87               	dw	_ADCC_ThresholdISR shr (0+2)
 27839                           
 27840                           ; Vector 12 : CMP1
 27841  000020  63AA               	dw	_Default_ISR shr (0+2)
 27842                           
 27843                           ; Vector 13 : SMT1
 27844  000022  63AA               	dw	_Default_ISR shr (0+2)
 27845                           
 27846                           ; Vector 14 : SMT1PRA
 27847  000024  63AA               	dw	_Default_ISR shr (0+2)
 27848                           
 27849                           ; Vector 15 : SMT1PRW
 27850  000026  63AA               	dw	_Default_ISR shr (0+2)
 27851                           
 27852                           ; Vector 16 : DMA1SCNT
 27853  000028  638D               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27854                           
 27855                           ; Vector 17 : DMA1DCNT
 27856  00002A  6393               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27857                           
 27858                           ; Vector 18 : DMA1OR
 27859  00002C  6399               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27860                           
 27861                           ; Vector 19 : DMA1A
 27862  00002E  6396               	dw	_DMA1_DMAA_ISR shr (0+2)
 27863                           
 27864                           ; Vector 20 : SPI1RX
 27865  000030  63AA               	dw	_Default_ISR shr (0+2)
 27866                           
 27867                           ; Vector 21 : SPI1TX
 27868  000032  63AA               	dw	_Default_ISR shr (0+2)
 27869                           
 27870                           ; Vector 22 : SPI1
 27871  000034  63AA               	dw	_Default_ISR shr (0+2)
 27872                           
 27873                           ; Vector 23 : I2C1RX
 27874  000036  63AA               	dw	_Default_ISR shr (0+2)
 27875                           
 27876                           ; Vector 24 : I2C1TX
 27877  000038  63AA               	dw	_Default_ISR shr (0+2)
 27878                           
 27879                           ; Vector 25 : I2C1
 27880  00003A  63AA               	dw	_Default_ISR shr (0+2)
 27881                           
 27882                           ; Vector 26 : I2C1E
 27883  00003C  63AA               	dw	_Default_ISR shr (0+2)
 27884                           
 27885                           ; Vector 27 : U1RX
 27886  00003E  62B6               	dw	_UART1_rx_vect_isr shr (0+2)
 27887                           
 27888                           ; Vector 28 : U1TX
 27889  000040  62AC               	dw	_UART1_tx_vect_isr shr (0+2)
 27890                           
 27891                           ; Vector 29 : U1E
 27892  000042  63AA               	dw	_Default_ISR shr (0+2)
 27893                           
 27894                           ; Vector 30 : U1
 27895  000044  63AA               	dw	_Default_ISR shr (0+2)
 27896                           
 27897                           ; Vector 31 : TMR0
 27898  000046  63AA               	dw	_Default_ISR shr (0+2)
 27899                           
 27900                           ; Vector 32 : TMR1
 27901  000048  63AA               	dw	_Default_ISR shr (0+2)
 27902                           
 27903                           ; Vector 33 : TMR1G
 27904  00004A  63AA               	dw	_Default_ISR shr (0+2)
 27905                           
 27906                           ; Vector 34 : TMR2
 27907  00004C  63AA               	dw	_Default_ISR shr (0+2)
 27908                           
 27909                           ; Vector 35 : CCP1
 27910  00004E  63AA               	dw	_Default_ISR shr (0+2)
 27911                           
 27912                           ; Vector 36 : Undefined
 27913  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27914                           
 27915                           ; Vector 37 : NCO1
 27916  000052  63AA               	dw	_Default_ISR shr (0+2)
 27917                           
 27918                           ; Vector 38 : CWG1
 27919  000054  63AA               	dw	_Default_ISR shr (0+2)
 27920                           
 27921                           ; Vector 39 : CLC1
 27922  000056  63AA               	dw	_Default_ISR shr (0+2)
 27923                           
 27924                           ; Vector 40 : INT1
 27925  000058  614D               	dw	_INT1_ISR shr (0+2)
 27926                           
 27927                           ; Vector 41 : CMP2
 27928  00005A  63AA               	dw	_Default_ISR shr (0+2)
 27929                           
 27930                           ; Vector 42 : DMA2SCNT
 27931  00005C  63AA               	dw	_Default_ISR shr (0+2)
 27932                           
 27933                           ; Vector 43 : DMA2DCNT
 27934  00005E  63AA               	dw	_Default_ISR shr (0+2)
 27935                           
 27936                           ; Vector 44 : DMA2OR
 27937  000060  63AA               	dw	_Default_ISR shr (0+2)
 27938                           
 27939                           ; Vector 45 : DMA2A
 27940  000062  63AA               	dw	_Default_ISR shr (0+2)
 27941                           
 27942                           ; Vector 46 : I2C2RX
 27943  000064  63AA               	dw	_Default_ISR shr (0+2)
 27944                           
 27945                           ; Vector 47 : I2C2TX
 27946  000066  63AA               	dw	_Default_ISR shr (0+2)
 27947                           
 27948                           ; Vector 48 : I2C2
 27949  000068  63AA               	dw	_Default_ISR shr (0+2)
 27950                           
 27951                           ; Vector 49 : I2C2E
 27952  00006A  63AA               	dw	_Default_ISR shr (0+2)
 27953                           
 27954                           ; Vector 50 : U2RX
 27955  00006C  62CA               	dw	_UART2_rx_vect_isr shr (0+2)
 27956                           
 27957                           ; Vector 51 : U2TX
 27958  00006E  62C0               	dw	_UART2_tx_vect_isr shr (0+2)
 27959                           
 27960                           ; Vector 52 : U2E
 27961  000070  63AA               	dw	_Default_ISR shr (0+2)
 27962                           
 27963                           ; Vector 53 : U2
 27964  000072  63AA               	dw	_Default_ISR shr (0+2)
 27965                           
 27966                           ; Vector 54 : TMR3
 27967  000074  63AA               	dw	_Default_ISR shr (0+2)
 27968                           
 27969                           ; Vector 55 : TMR3G
 27970  000076  63AA               	dw	_Default_ISR shr (0+2)
 27971                           
 27972                           ; Vector 56 : TMR4
 27973  000078  63AA               	dw	_Default_ISR shr (0+2)
 27974                           
 27975                           ; Vector 57 : CCP2
 27976  00007A  63AA               	dw	_Default_ISR shr (0+2)
 27977                           
 27978                           ; Vector 58 : Undefined
 27979  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27980                           
 27981                           ; Vector 59 : CWG2
 27982  00007E  63AA               	dw	_Default_ISR shr (0+2)
 27983                           
 27984                           ; Vector 60 : CLC2
 27985  000080  63AA               	dw	_Default_ISR shr (0+2)
 27986                           
 27987                           ; Vector 61 : INT2
 27988  000082  63AA               	dw	_Default_ISR shr (0+2)
 27989                           
 27990                           ; Vector 62 : Undefined
 27991  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27992                           
 27993                           ; Vector 63 : Undefined
 27994  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27995                           
 27996                           ; Vector 64 : Undefined
 27997  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27998                           
 27999                           ; Vector 65 : Undefined
 28000  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 28001                           
 28002                           ; Vector 66 : Undefined
 28003  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 28004                           
 28005                           ; Vector 67 : Undefined
 28006  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 28007                           
 28008                           ; Vector 68 : Undefined
 28009  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 28010                           
 28011                           ; Vector 69 : Undefined
 28012  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 28013                           
 28014                           ; Vector 70 : TMR5
 28015  000094  6035               	dw	_TMR5_ISR shr (0+2)
 28016                           
 28017                           ; Vector 71 : TMR5G
 28018  000096  63AA               	dw	_Default_ISR shr (0+2)
 28019                           
 28020                           ; Vector 72 : TMR6
 28021  000098  634B               	dw	_TMR6_ISR shr (0+2)
 28022                           
 28023                           ; Vector 73 : CCP3
 28024  00009A  63AA               	dw	_Default_ISR shr (0+2)
 28025                           
 28026                           ; Vector 74 : CWG3
 28027  00009C  63AA               	dw	_Default_ISR shr (0+2)
 28028                           
 28029                           ; Vector 75 : CLC3
 28030  00009E  63AA               	dw	_Default_ISR shr (0+2)
 28031                           
 28032                           ; Vector 76 : Undefined
 28033  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 28034                           
 28035                           ; Vector 77 : Undefined
 28036  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 28037                           
 28038                           ; Vector 78 : Undefined
 28039  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 28040                           
 28041                           ; Vector 79 : Undefined
 28042  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 28043                           
 28044                           ; Vector 80 : CCP4
 28045  0000A8  63AA               	dw	_Default_ISR shr (0+2)
 28046                           
 28047                           ; Vector 81 : CLC4
 28048  0000AA  63AA               	dw	_Default_ISR shr (0+2)
 28049  0000AC                     ivt0x8_undefint:
 28050                           	opt callstack 0
 28051  0000AC  00FF               	reset	
 28052                           
 28053                           	psect	text151
 28054  000000                     __ptext151:
 28055                           	opt callstack 0
 28056                           
 28057                           	psect	rparam
 28058  0000                     
 28059                           	psect	temp
 28060  000032                     btemp:
 28061                           	opt callstack 0
 28062  000032                     	ds	32
 28063  0000                     wtemp0	set	btemp
 28064  0000                     wtemp1	set	btemp+2
 28065  0000                     wtemp2	set	btemp+4
 28066  0000                     wtemp3	set	btemp+6
 28067  0000                     wtemp4	set	btemp+8
 28068  0000                     wtemp5	set	btemp+10
 28069  0000                     wtemp8	set	btemp+1
 28070  0000                     ttemp0	set	btemp
 28071  0000                     ttemp1	set	btemp+3
 28072  0000                     ttemp2	set	btemp+6
 28073  0000                     ttemp3	set	btemp+9
 28074  0000                     ttemp5	set	btemp+1
 28075  0000                     ttemp6	set	btemp+4
 28076  0000                     ttemp7	set	btemp+8
 28077  0000                     ltemp0	set	btemp
 28078  0000                     ltemp1	set	btemp+4
 28079  0000                     ltemp2	set	btemp+8
 28080  0000                     lltemp0	set	btemp
 28081  0000                     lltemp1	set	btemp+8
 28082  0000                     lltemp2	set	btemp+16
 28083  0000                     lltemp3	set	btemp+24
 28084                           tosu	equ	0x3FFF
 28085                           tosh	equ	0x3FFE
 28086                           tosl	equ	0x3FFD
 28087                           stkptr	equ	0x3FFC
 28088                           pclatu	equ	0x3FFB
 28089                           pclath	equ	0x3FFA
 28090                           pcl	equ	0x3FF9
 28091                           tblptru	equ	0x3FF8
 28092                           tblptrh	equ	0x3FF7
 28093                           tblptrl	equ	0x3FF6
 28094                           tablat	equ	0x3FF5
 28095                           prodh	equ	0x3FF4
 28096                           prodl	equ	0x3FF3
 28097                           indf0	equ	0x3FEF
 28098                           postinc0	equ	0x3FEE
 28099                           postdec0	equ	0x3FED
 28100                           preinc0	equ	0x3FEC
 28101                           plusw0	equ	0x3FEB
 28102                           fsr0h	equ	0x3FEA
 28103                           fsr0l	equ	0x3FE9
 28104                           wreg	equ	0x3FE8
 28105                           indf1	equ	0x3FE7
 28106                           postinc1	equ	0x3FE6
 28107                           postdec1	equ	0x3FE5
 28108                           preinc1	equ	0x3FE4
 28109                           plusw1	equ	0x3FE3
 28110                           fsr1h	equ	0x3FE2
 28111                           fsr1l	equ	0x3FE1
 28112                           bsr	equ	0x3FE0
 28113                           indf2	equ	0x3FDF
 28114                           postinc2	equ	0x3FDE
 28115                           postdec2	equ	0x3FDD
 28116                           preinc2	equ	0x3FDC
 28117                           plusw2	equ	0x3FDB
 28118                           fsr2h	equ	0x3FDA
 28119                           fsr2l	equ	0x3FD9
 28120                           status	equ	0x3FD8


Data Sizes:
    Strings     426
    Constant    144
    Data        258
    BSS         1438
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     239
    BANK2           256      0     252
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5212_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4067tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  311390
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168228
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6AE      58        0.0%
DATA                 0      0     6AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec  3 01:53:45 2019

                     _SPI1_Exchange8bit 8C42                __end_of_set_display_info 8C9C  
                                     _C 0100                                       _D 0500  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDC5                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 89E6            __end_of_start_switch_handler 8C42  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8E96                             __CFG_LVP$ON 000000  
                                   l171 8DCA                                     l701 87FA  
                                   l581 87CE                                     l835 8C50  
                                   _GIE 01FE97                                     _abs 82D0  
                                   _pad 6D3C                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8D5E                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8C00                      _UART1_Transmit_ISR 87A8  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8BDE  
                          __CFG_ZCD$OFF 000000                                    l2010 522C  
                                  l1028 852E                                    l2031 44A8  
                                  l1500 76F6                                    l1504 7A10  
                                  l2081 1D78                                    l1266 1F90  
                                  l1258 1DE0                                    l2403 65D0  
                                  l1283 259C                                    l1364 813A  
                                  l1276 202E                                    l1268 1F96  
                                  l1278 20F4                                    l1519 85FE  
                                  l1279 2202                                    l1724 62C8  
                                  l1580 85CA                                    l1637 8C98  
                                  l2365 74D6                                    l1590 5D42  
                                  l1806 7B36                                    l1815 7166  
                                  l2376 6732                                    l2369 665E  
                                  l2643 35B4                                    l2724 2DF8  
                                  l1597 6F5A                                    l1589 5BE6  
                                  l1685 3FDE                    _ADCC_StartConversion 8DE4  
                                  l2655 3444                                    l1872 6D98  
                                  l1928 123A                                    l2826 58EA  
                                  l7011 262E                                    l1892 40C2  
                                  l1972 0B1A                                    l2764 5F40  
                                  l7021 26A4                                    l1957 066A  
                                  l2951 7CC0                                    l2688 3B2E  
                                  l2936 6108                                    l7105 2C08  
                                  l7017 266E                                    l2890 6C1A  
                                  l7123 2C7E                                    l7035 273C  
                                  l7019 2674                                    l2795 8310  
                                  l2787 645E                                    l2964 7C3C  
                                  l7133 2CF2                                    l7109 2C2E  
                                  l7037 2742                                    l7029 26FC  
                                  l6501 31A0                                    l7151 2DA6  
                                  l7143 2D62                                    l7119 2C78  
                                  l7047 2794                                    l7039 2772  
                                  l6511 31DC                                    l6431 2EDE  
                                  l7207 6870                                    l7223 6C56  
                                  l7153 2DC0                                    l7137 2D38  
                                  l6505 31C0                                    l6425 2E98  
                                  l7321 653C                                    l7305 64BA  
                                  l6507 31D2                                    l6515 320C  
                                  l6443 2F48                                    l6419 2E58  
                                  l7227 6C6E                                    l7219 6C44  
                                  l7331 657E                                    l7323 6558  
                                  l6621 3564                                    l6605 3510  
                                  l6533 32A8                                    l6461 2FF0  
                                  l6453 2F9E                                    l6437 2F16  
                                  l6429 2EAE                                    l7173 6760  
                                  l7245 6D22                                    l7237 6CEE  
                                  l7261 74D4                                    l7253 745E  
                                  l6615 353C                                    l6535 32BA  
                                  l6543 32F6                                    l6455 2FCE  
                                  l6703 7CB0                                    l6449 2F88  
                                  l7185 6796                                    l7257 74A0  
                                  l7329 6568                                    l8321 5DFC  
                                  l8313 5D90                                    l9035 87CA  
                                  l7099 2BEC                                    l6627 3594  
                                  l6619 3554                                    l6555 33CE  
                                  l6539 32C4                                    l6491 312E  
                                  l7179 6776                                    l7275 66AC  
                                  l6731 4A5A                                    l8323 5E0A  
                                  l6573 3466                                    l6565 3428  
                                  l6557 33F4                                    l9301 84EC  
                                  l7349 8278                                    l6661 8300  
                                  l7269 661C                                    l6741 4B60  
                                  l6733 4AAA                                    l6717 493C  
                                  l8333 5E6C                                    l8325 5E20  
                                  l6575 3478                                    l7199 683C  
                                  l7287 6730                                    l7279 66FA  
                                  l7295 82A6                                    l8335 5E8A  
                                  l8327 5E3E                                    l9207 7074  
                                  l9057 87F6                                    l9313 7D0E  
                                  l6593 34B2                                    l8185 8B8E  
                                  l6737 4AF2                                    l8265 8608  
                                  l8345 5EBE                                    l8337 5EA0  
                                  l9307 7CFE                                    l9083 8516  
                                  l6579 3484                                    l6835 5A86  
                                  l6827 59DA                                    l6819 5952  
                                  l6907 380A                                    l6675 63FC  
                                  l8355 5F20                                    l9219 70D0  
                                  l6589 34AC                                    l6781 54B6  
                                  l6941 3968                                    l6933 3936  
                                  l6925 38D0                                    l6917 389A  
                                  l6861 3654                                    l6685 6456  
                                  l9229 7140                                    l6775 5462  
                                  l6951 39AA                                    l6927 38E2  
                                  l6935 393A                                    l6855 3614  
                                  l6679 6400                                    l6759 7C2C  
                                  l8295 88E0                                    l8721 83EE  
                                  l6961 39F4                                    l6881 3732  
                                  l6865 366A                                    l9185 75A2  
                                  l6787 54FC                                    l6947 3984  
                                  l6875 36F2                                    l6867 369A  
                                  l7915 5FD2                                    l8725 8418  
                                  l6981 3AAA                                    l6965 39FA  
                                  l6893 37B6                                    l6885 3748  
                                  l7917 603E                                    l9189 75E0  
                                  l8823 85E0                                    l7863 569A  
                                  l6799 55CE                                    l6975 3A6E  
                                  l6887 3778                                    l7881 5774  
                                  l7873 5730                                    l7865 56BC  
                                  l6993 3B02                                    l8905 3FAC  
                                  l8913 3FBE                                    l7883 5798  
                                  l9811 7B58                                    l6995 3B12  
                                  l6987 3ADA                                    l6899 37F0  
                                  l8941 68BA                                    l7885 57D6  
                                  l9813 7B84                                    l9805 7390  
                                  l8943 68C8                                    l8935 689E  
                                  l7879 575C                                    l8937 68AE  
                                  l8785 6176                                    l8777 614A  
                                  l7889 583E                                    l9753 6B30  
                                  l8865 3B6A                                    l8963 699A  
                                  l8955 692C                                    l8939 68B4  
                                  l8947 68D0                                    l7899 58DA  
                                  l9931 022C                                    l8891 3E30  
                                  l8875 3C88                                    l8859 3B3A  
                                  l8949 68FC                                    l8789 618E  
                                  l9765 7872                                    l9845 40FC  
                                  l9837 40B2                                    l9909 00F0  
                                  l9917 0146                                    l9775 78FE  
                                  l9767 7894                                    l9791 6DA2  
                                  l9927 01EA                                    l9935 0258  
                                  l8887 3D94                                    l8879 3D62  
                                  STR_1 FF60                                    STR_2 FFB2  
                                  l9785 6D68                                    l9849 411A  
                                  l9961 0396                                    l9945 02FC  
                                  l9953 032A                                    l9929 0216  
                                  STR_3 FFE0                                    STR_4 FF4F  
                                  l9779 793C                                    l9795 6DDE  
                                  l9883 441A                                    l9859 432C  
                                  l9971 04D2                                    l8899 3F10  
                                  l8979 7AF0                                    STR_5 FF71  
                                  STR_6 FFB2                                    l9789 6D90  
                                  l9965 0406                                    STR_7 FFE0  
                                  STR_8 FF3E                                    l9799 6E28  
                                  l9879 43DE                                    l9983 0554  
                                  l9967 0470                                    STR_9 FF93  
                                  l9897 00AC                                    l9995 0594  
                                  l9987 057C                                    l9989 058E  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5010 3500                                    _T2PR 003FAB  
                                  u5015 34F0                                    u5040 3520  
                                  u5200 644E                                    u5210 6450  
                                  u6100 2D06                                    u5140 82E4  
                                  u6005 29DE                                    u6110 2D4C  
                                  u5150 6380                                    u6015 2BA6  
                                  u5320 4A00                                    u5240 7C6E  
                                  u5080 86DE                                    u5400 7BEC  
                                  u5305 495A                                    u6050 2C70  
                                  u5306 4960                                    u5250 7C70  
                                  u5090 86E0                                    _T6PR 003F93  
                                  u5155 6376                                    u5307 496E  
                                  u5420 873E                                    u5500 5528  
                                  u5340 4AD8                                    _PMD0 0039C0  
                                  u5325 49F6                                    _PMD1 0039C1  
                                  u5430 8740                                    u6230 6C9A  
                                  u5270 48D4                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u4800 3204  
                                  u5520 5606                                    u5600 59D4  
                                  u6160 67C2                                    u5280 4920  
                                  u4640 870E                                    _PMD4 0039C4  
                                  u5345 4ACE                                    _PMD5 0039C5  
                                  u6090 2CCC                                    u4810 3224  
                                  u5450 545C                                    u5610 5A06  
                                  u6250 6D0E                                    u4650 8710  
                                  u5370 8466                                    _PMD6 0039C6  
                                  u5195 6430                                    u5275 48CA  
                                  _PMD7 0039C7                                    u5540 5658  
                                  u6180 685C                                    u5380 8468  
                                  u4805 31F4                                    u4910 3416  
                                  u4750 3154                                    u5470 54B2  
                                  u5630 5ABE                                    u6350 82A2  
                                  u6430 6586                                    u5390 7BEA  
                                  u6095 2CBC                                    u4760 3174  
                                  u6360 649A                                    u8040 5EB4  
                                  u8105 7EC6                                    u4761 316E  
                                  u5481 54BC                                    u8106 7EC8  
                                  u5490 54F6                                    u5650 5B10  
                                  u5570 594C                                    u6290 74D0  
                                  u6450 65B0                                    u6370 64AE  
                                  u6460 8254                                    u7500 5886  
                                  u6380 64E8                                    u6365 6490  
                                  u4950 348A                                    u4870 32EC  
                                  u6470 8274                                    u9110 6BA0  
                                  u5590 59A2                                    u5830 39EC  
                                  u8080 7E92                                    u9120 78C2  
                                  u8304 3D7C                                    u6385 64DE  
                                  u8305 3D76                                    u4970 34A4  
                                  u4778 3176                                    u4875 32DC  
                                  u8180 6128                                    u9300 40E8  
                                  u8324 3E4A                                    u8244 3B54  
                                  u8500 7B22                                    u8325 3E44  
                                  u8245 3B4E                                    u7470 572C  
                                  u9310 4340                                    u9230 4014  
                                  u5870 3A48                                    u5790 3962  
                                  u8350 3E74                                    u9127 78B4  
                                  u9240 4016                                    u5880 3A82  
                                  u8344 3E6C                                    u8264 3B84  
                                  u9321 4370                                    u8345 3E66  
                                  u8265 3B7E                                    u8098 7E94  
                                  u7490 5884                                    u9090 6B24  
                                  u9330 4386                                    u5890 3ABE  
                                  u9410 00DA                                    u7570 60CA  
                                  u9331 4384                                    u5875 3A38  
                                  u5980 2782                                    u9340 439A  
                                  u9260 4086                                    u8284 3BA6  
                                  u8285 3BA0                                    u9350 439E  
                                  u9190 740A                                    u8518 7B24  
                                  u8470 7ADC                                    u9280 4098  
                                  u9440 0194                                    u9370 43B4  
                                  u9530 050E                                    u9450 0196  
                                  u5995 2916                                    u9700 0A18  
                                  u9197 73FC                                    u9630 0648  
                                  u9800 0EE4                                    u9560 0562  
                                  u9480 02A6                                    u8488 7ADE  
                                  u9490 02A8                                    _PLLR 01CEE0  
                                  u7955 84A2                                    u9590 05C6  
                                  u9860 10B8                                    u9880 116E  
                                  u9960 52C4                                    u9890 1170  
                                  u9970 530A                                    u9977 52FC  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8856                           __CFG_FCMEN$ON 000000  
                                  _dbuf 017C                                    _atoi 5680  
                                  _ctoa 7B3A                                    _main 1D82  
                                  _dtoa 3FE4                                    _nanf 7FB2  
                                  _seed 01CC                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 5142                                    btemp 0032  
                                  _xtoa 4464                  __end_of_check_adc_scan 8E8E  
                         ___fpclassifyf 62D2                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 8C60  
             __size_of_clear_hid_pflags 0024                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8AD8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 8E32  
                      __end_of_INT1_ISR 8572          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 76FE           __end_of_OSCILLATOR_Initialize 8DD0  
                                 l10003 05F6                                   l10021 06B8  
                                 l10005 0602                                   l10031 077A  
                                 l10041 0926                                   l10025 06F0  
                                 l10107 0D90                                   l10115 0EA2  
                                 l10141 0FD6                                   l10143 0FF0  
                                 l10127 0F3A                                   l10063 0B12  
                                 l10055 0A48                                   l10223 52CE  
                                 l10215 5262                                   l10311 47D4  
                                 l10153 1092                                   l10065 0B34  
                                 l10233 5384                                   l10163 10E2  
                                 l10091 0CBA                                   l10219 529E  
                                 l10251 4498                                   l10237 53C0  
                                 l10229 5358                                   l10405 18E8  
                                 l10333 1326                                   l10079 0C32  
                                 l10271 456E                                   l10263 450E  
                                 l10335 1360                                   l10511 4DF8  
                                 l10503 4D4A                                   l10257 44D2  
                                 l10409 191C                                   l10337 1376  
                                 l10179 119A                                   l10099 0D24  
                                 l10355 14A8                                   l10523 7728  
                                 l10453 1CA6                                   l10429 1A7C  
                                 l10357 14E2                                   l10525 7768  
                                 l10199 51AE                                   l10287 4664  
                                 l10295 46EA                                   l10463 1D04  
                                 l10439 1B2A                                   l10375 165C  
                                 l10359 14F8                                   l10385 16F2  
                                 l10609 6E72                                   l10801 1DFA  
                                 l10459 1D00                                   l10491 4C22  
                                 l10397 1830                                   l10469 1D24  
                                 l10741 5CDE                                   l10575 77FE  
                                 l10727 5BB6                                   l10497 4CE0  
                                 l10923 254C                                   l10915 2516  
                                 l10843 1F9A                                   l10917 252E  
                                 l10909 2504                                   l10845 1FC8  
                                 PRLOCK 0039EF                                   l10927 2572  
                                 l10937 25C6                                   l10881 22FA  
                                 l10865 2020                                   l10857 1FFC  
                                 l10793 1DC2                                   l10891 2476  
                                 l10795 1DCA                                   l10877 2298  
                                 l10893 24A0                                   l10799 1DE8  
                                 l10899 24C0                         __end_of___aodiv 5680  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 35BE                                   _ADCLK 003EFF  
                       __end_of___aomod 5B34                                   _ADPCH 003EF1  
                       __end_of___fldiv 3B38                                   _ADREF 003EFD  
                       __end_of___awdiv 688A                         __end_of___flneg 82D0  
                                 STR_11 FF82                                   STR_20 FEA6  
                                 STR_12 FEB9                                   STR_21 FF93  
                                 STR_13 FEF2                                   STR_30 FE80  
                                 STR_22 FF93                                   STR_14 FEDF  
                                 STR_23 FF82                                   STR_31 FFCD  
                                 STR_15 FF2B                                   STR_32 FFCD  
                                 STR_24 FFFC                                   STR_16 FF05  
                                 STR_25 FFF9                                   STR_33 FFA3  
                                 STR_17 FF18                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFA3                                   STR_50 FFEA  
                                 STR_18 FECC                                   STR_35 FFA3  
                                 STR_51 FFF2                                   STR_27 FFC1  
                                 STR_19 FEA6                                   STR_28 FFD7  
                                 STR_36 FE55                         __end_of___awmod 6D3C  
                                 STR_45 FE7F                                   STR_29 FE80  
                                 STR_54 FFF6                                   STR_46 FFE6  
                                 STR_38 FE93                                   STR_47 FFEE  
                                 STR_39 FE6D                                   STR_56 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 2E02  
                       __end_of___flsub 835C                         __end_of___fltol 65DA  
                                 u10000 53E6                                   u10100 461C  
                                 u10020 447E                                   u10120 46E6  
                                 u10130 4706                                   u10050 4566  
                                 u10060 45BA                                   u10220 13BE  
                                 u10141 4736                                   u10125 46C8  
                                 u10150 474C                                   u10070 45BC  
                                 u10230 13C0                                   u10151 474A  
                                 u10160 4760                                   u10240 13E6  
                                 u10170 4764                                   u10090 461A  
                                 u10420 1B7E                                   u10340 1746  
                                 u10270 1540                                   u10510 77DE  
                                 u10280 1542                                   u10600 5D2E  
                                 u10370 19D6                                   u10290 1568  
                                 u10610 5D30                                   u10380 19D8  
                                 u10480 4E6C                                   _U1P1H 003DED  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8EA8  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8AB0                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8130                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8D46                            _DMA1CON1bits 003BFD  
                                 _flags 001F                __size_of_calc_model_data 02CC  
                                 _fputc 6B00              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 8472                                   _fputs 78EE  
                       __end_of_isdigit 874A                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0052                                   _srand 8652  
                                 _width 001B                                   _putch 8D10  
                       __end_of_islower 86EA                         __end_of_isspace 8288  
              _INT1_SetInterruptHandler 89E6                         __end_of_isupper 871A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0032                                   ltemp1 0036  
                                 ltemp2 003A                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0032                                   ttemp1 0035  
                                 ttemp2 0038                                   ttemp3 003B  
                                 ttemp5 0033                                   ttemp6 0036  
                                 ttemp7 003A                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 8996             _UART1_SetRxInterruptHandler 896E  
                                 wtemp0 0032                                   wtemp1 0034  
                                 wtemp2 0036                                   wtemp3 0038  
                                 wtemp4 003A                                   wtemp5 003C  
                                 wtemp8 0033                         __end_of_sprintf 7068  
                       __end_of_tolower 7CCA                         __end_of_strncmp 6112  
                       __end_of_toupper 7C46                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8AFE  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 83A2  
                 __end_of_ringBufS_init 88CE                         __initialization 716A  
                     _UART2_rx_vect_isr 8B28                            __end_of_atoi 58F4  
                          __end_of_ctoa 7BC2                            __end_of_main 25D8  
                          __end_of_dtoa 4464                            __end_of_nanf 8014  
                          __end_of_stoa 5400                            __end_of_xtoa 481E  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 8D76                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button 84F4                _TMR5_SetInterruptHandler 89BE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 8AD6                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8800                         _PWM8_Initialize 8DA4  
                      _UART1_Initialize 7F4E                       _UART2_tx_vect_isr 8B00  
                    _UART2_Transmit_ISR 87D4                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7EEA                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8472                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 8122                    _start_switch_handler 8C22  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8E14                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u814_20 8A8E  
                                u814_26 8A90                                  u398_48 8C0E  
                                u843_24 6990                                  u843_25 698C  
                                u845_20 69B6                                  u836_28 68A4  
                                u845_26 69B8                                  u853_28 8BEC  
                                u861_48 8BCA                                  u839_20 68C4  
                                u839_21 68BE                                  u864_28 8BA6  
                                u883_44 7D2E                                  u883_45 7D28  
                  __size_of_hid_display 0102                        __end_of___xxtofl 5F4A  
 __end_of_ADCC_DischargeSampleCapacitor 8E76  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8E6E                __end_of_send_lcd_cmd_dma 8236  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8B4E  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8E42  
                      _UART2_Initialize 8076                                  _WaitMs 85E6  
                       _conv_raw_result 3B38                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 65DA  
                                ___fleq 741C                       _ADCC_ThresholdISR 7E1C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7986  
                                _efgtoa 0000                                  _floorf 481E  
                    ?_ADCC_ThresholdISR 0052                                  _memset 4B8A  
                  __size_of_help_button 0038                                  clear_0 71D8  
                                clear_1 71EC                                  clear_2 71FE  
                                clear_3 720A                                  clear_4 7216  
                                clear_5 7222                                  clear_6 722E  
                                clear_7 723A                                  clear_8 7246  
                                _printf 8014                      _eaDogM_WriteString 77A6  
                                _strcpy 7348                               ?_ADCC_ISR 0052  
                                _strlen 784C                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 7DB2                          _PMD_Initialize 8DD0  
             __end_of_UART2_tx_vect_isr 8B26                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7F4E                            __mediumconst FDC4  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 818A                        __end_of_vfprintf 77A6  
                            _StartTimer 8572           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 83E8                       _SYSTEM_Initialize 835C  
                            __accesstop 0060                 __end_of__initialization 7258  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8E86                    __end_of_display_info 8E7E  
             __end_of_CLKREF_Initialize 8E4C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 84F4  
                 _set_temp_display_help 8DF6                        _clear_hid_pflags 8B4E  
             __end_of_ADCC_ThresholdISR 7E84                  __end_of_ringBufS_flush 7A18  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 874A  
                          __pidataBANK1 8D76                            __pidataBANK2 74E0  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 6C24  
                         __end_of_fputs 7986                           __end_of_srand 8686  
                 __end_of_TMR5_CallBack 8BBA                           __end_of_putch 8D2A  
               __end_of_PWM8_Initialize 8DBA                 __end_of_TMR6_Initialize 882A  
                     _adc_int_t_handler 7CCA                  __end_of_PMD_Initialize 8DE4  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 8BDE  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 8E58                          _clear_adc_scan 8E96  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 83A2  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 0100  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 5B34                 __end_of_conv_raw_result 3FE4  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 8B96  
                      _DMA1_DMADCNT_ISR 8E4C              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8CF4                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 89BE                 __end_of_ADCC_Initialize 7E1C  
                            ??_TMR5_ISR 01EB               __end_of_adc_int_t_handler 7D48  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8A5E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 8A36  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8C9C                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8E9C  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 8E34  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 88CE  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8534  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8D46                                 __Lparam 0000  
              __end_of_UART1_Initialize 7FB2                       __end_of_hid_input 7B3A  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5400  
                               ___fladd 2E02                                 ___aomod 58F4  
                               ___fldiv 35BE                                 ___awdiv 673C  
                               ___flneg 8288                                 ___awmod 6C24  
                               ___flmul 25D8                                 ___flsub 8316  
                               ___fltol 6468               __end_of_UART1_Receive_ISR 8CBA  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7348                                 __pcinit 716A  
              __end_of_mode_lamp_bright 8E22                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 8E06  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8C22  
                               __ptext2 7EEA                                 __ptext3 8DE4  
                               __ptext4 8E6E                                 __ptext5 8652  
                               __ptext6 725E                                 __ptext7 8856  
                               __ptext8 887E                                 __ptext9 8C42  
                     _UART2_Receive_ISR 8CBA                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8DBA  
                          __size_of_abs 0046                                 us555999 566A  
                          __size_of_pad 0114                                 us566999 5B22  
                               _isalpha 842E                                 _isdigit 871A  
                               us922999 3FFE                                 _mode_sw 0025  
                               us991999 5154                       __end_of_lp_filter 62D2  
                               _islower 86BA                                 _isspace 8236  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 80D4                                 _isupper 86EA  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6F5E  
                               _tolower 7C46                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5F4A                                 _toupper 7BC2  
                  end_of_initialization 7258               __size_of_convert_adc_data 00B8  
                    _check_enter_button 84B4     __end_of_UART1_SetTxInterruptHandler 896E  
           _UART1_SetTxInterruptHandler 8946     __end_of_UART2_SetRxInterruptHandler 8946  
           _UART2_SetRxInterruptHandler 891E                       __end_of_set_vterm 8D10  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8EA8               __end_of_UART2_Receive_ISR 8CD8  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8996                            _display_help 8E7E  
                 _TMR5_InterruptHandler 00C1                            _display_info 8E76  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8B72  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 8A86  
           _ADCC_SetADIInterruptHandler 8A5E                              _update_lcd 6E50  
                       _calc_model_data 4E76                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7D48  
                       _SPI1_Initialize 8D8E                   __end_of_get_vterm_ptr 87A8  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 861C            __end_of_INTERRUPT_Initialize 7EEA  
                            _vterm_dump 69D2                          __end_of___flge 673C  
                        __end_of___fleq 74E0    __end_of_INT0_DefaultInterruptHandler 8EB2  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8EB0  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 818A  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 4B8A             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4E76  
                        __end_of_printf 8076                __end_of_DMA1_DMADCNT_ISR 8E56  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8C22  
                        __end_of_strcpy 741C                          __end_of_strlen 78EE  
                   start_initialization 716A    __end_of_TMR5_DefaultInterruptHandler 8AAE  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8A86  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 8316  
                 __end_of_INT1_CallBack 8C00               __size_of_set_display_info 001E  
                           __end_of_pad 6E50                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 88A6                          _switch_handler 688A  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 6468  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 02BC  
              __end_of_DMA1_DMASCNT_ISR 8E42                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 8E64                     __end_of_hid_display 716A  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8B72  
                         _ringBufS_init 88A6                             __pdataBANK0 00C7  
                           __pdataBANK1 01D4                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 86BA                 __end_of_calc_model_data 5142  
                   __end_of_help_button 85E6         __end_of_eaDogM_WriteStringAtPos 8652  
               __end_of_DMA1_Initialize 7DB2                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8A36                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01EB                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 69D2                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8DA4                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE55  
                      _convert_adc_data 759C               __size_of_ringBufS_put_dma 00AA  
                          _init_display 725E                  __end_of_DMA1_DMAOR_ISR 8E6E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 81E4  
                _PIN_MANAGER_Initialize 7A18                    __end_of_wait_lcd_set 8EA2  
                         __pmediumconst FDC4                               __ptext100 83A2  
                             __ptext101 89BE                               __ptext110 8686  
                             __ptext102 8D5E                               __ptext111 89E6  
                             __ptext103 8D8E                               __ptext120 8BDE  
                             __ptext112 8A0E                               __ptext104 8DA4  
                             __ptext121 8EAE                               __ptext113 818A  
                             __ptext105 8DD0                               __ptext130 8EA8  
                             __ptext122 688A                               __ptext114 7D48  
                             __ptext106 7A18                               __ptext131 882C  
                             __ptext123 80D4                               __ptext115 8E42  
                             __ptext107 8DBA                               __ptext140 8B00  
                             __ptext132 7CCA                               __ptext124 84F4  
                             __ptext116 7DB2                               __ptext108 7E84  
                             __ptext141 87D4                               __ptext133 8EB2  
                             __ptext125 8B96                               __ptext117 8A36  
                             __ptext109 8E8E                               __ptext150 8E64  
                             __ptext142 8B28                               __ptext134 8EB4  
                             __ptext126 8A86                               __ptext118 8A5E  
                             __ptext151 0000                               __ptext143 8CBA  
                             __ptext135 7E1C                               __ptext127 8E24  
                             __ptext119 8534                               __ptext144 8D2C  
                             __ptext136 8AB0                               __ptext128 8C00  
                             __ptext145 8BBA                               __ptext137 87A8  
                             __ptext129 8EB0                               __ptext146 83E8  
                             __ptext138 8AD8                               __ptext147 8E34  
                             __ptext139 8C9C                               __ptext148 8E4C  
                             __ptext149 8E58                               _hid_input 7AAA  
                    __end_of_StartTimer 85AE                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 882C  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 6112                             _hid_display 7068  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7E84                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 8E24                                _INT1_ISR 8534  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0394                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                i2u433_48 8842  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u890_48 8AEA  
                              i2u892_48 8B12                __size_of_TMR5_Initialize 0046  
                              i2u894_48 8B3A                                i2u886_48 7E50  
                              i2u886_49 7E64                                i2u888_48 8AC2  
                             _set_vterm 8CF4                     __size_of_update_lcd 010E  
                           _help_button 85AE              __end_of_UART1_Transmit_ISR 87D4  
                              _TMR5_ISR 80D4                                _TMR6_ISR 8D2C  
                             _port_data 01DB                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8B96  
                            _ADCON0bits 003EF8                      __end_of_check_help 5D46  
                             _start_lcd 8EA2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8BBA  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8C7E                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 717E                               copy_data1 71A0  
                             copy_data2 71C2                _INT0_SetInterruptHandler 8A0E  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 891E             _UART2_SetTxInterruptHandler 88F6  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 8CD8  
                          _send_lcd_cmd 887E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8EB4                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 88F6                   __end_of_DMA1_DMAA_ISR 8E62  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5D46  
                     ?_DMA1_DMADCNT_ISR 0052             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8E14  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 88A6                                __ptext11 7068  
                              __ptext20 8B4E                                __ptext12 7AAA  
                              __ptext21 8E96                                __ptext13 88CE  
                              __ptext30 8CD8                                __ptext22 5B34  
                              __ptext14 8E06                                __ptext31 8130  
                              __ptext23 69D2                                __ptext15 759C  
                              __ptext40 4464                                __ptext32 77A6  
                              __ptext24 6F5E                                __ptext16 3B38  
                              __ptext41 7BC2                                __ptext33 8E9C  
                              __ptext25 877A                                __ptext17 7FB2  
                              __ptext50 481E                                __ptext42 86BA  
                              __ptext34 8EA2                                __ptext26 85E6  
                              __ptext18 8C60                                __ptext51 62D2  
                              __ptext43 842E                                __ptext35 7986  
                              __ptext27 6E50                                __ptext19 5D46  
                              __ptext60 82D0                                __ptext52 6468  
                              __ptext44 5F4A                                __ptext36 4B8A  
                              __ptext28 861C                                __ptext61 58F4  
                              __ptext53 8288                                __ptext45 5142  
                              __ptext37 8014                                __ptext29 81E4  
                              __ptext70 5680                                __ptext62 5400  
                              __ptext54 65DA                                __ptext46 0000  
                              __ptext38 76FE                                __ptext71 8236  
                              __ptext63 7B3A                                __ptext55 741C  
                              __ptext47 7C46                                __ptext39 1244  
                              __ptext80 8B72                                __ptext72 871A  
                              __ptext64 6D3C                                __ptext56 35BE  
                              __ptext48 86EA                                __ptext81 8572  
                              __ptext73 8CF4                                __ptext65 784C  
                              __ptext57 6C24                                __ptext49 7348  
                              __ptext90 25D8                                __ptext82 8E76  
                              __ptext74 8DF6                                __ptext66 78EE  
                              __ptext58 673C                                __ptext91 835C  
                              __ptext83 8E7E                                __ptext75 8C7E  
                              __ptext67 6B00                                __ptext59 3FE4  
                              __ptext92 8076                                __ptext84 84B4  
                              __ptext76 8D46                                __ptext68 8D10  
                              __ptext93 88F6                                __ptext85 8E86  
                              __ptext77 8E14                                __ptext69 7654  
                              __ptext94 891E                                __ptext86 4E76  
                              __ptext78 8472                                __ptext95 7F4E  
                              __ptext87 6112                                __ptext79 85AE  
                              __ptext96 8946                                __ptext88 8316  
                              __ptext97 896E                                __ptext89 2E02  
                              __ptext98 8800                                __ptext99 8996  
                      __size_of_isupper 0030                                us1004999 44E4  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7654                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 0856  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 01D4                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 8DF6                                _spi_link 00A1  
                              _wdtdelay 8130              __end_of_UART2_Transmit_ISR 8800  
                              _vfprintf 76FE                __end_of_convert_adc_data 7654  
            __end_of_PWM8_LoadDutyValue 84B4    __end_of_INT1_DefaultInterruptHandler 8EB0  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8EAE  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 8C60                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8E9C  
                    _EXT_INT_Initialize 8686    __end_of_TMR6_DefaultInterruptHandler 842E  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 83E8  
  __end_of_ADCC_DefaultInterruptHandler 8EB4   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8EB2                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 8856  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8E06  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 784C  
                 __end_of_mode_lamp_dim 8D5E                 __end_of_adc_int_handler 8EB6  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6F5E                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 8E8E                  __end_of_get_raw_result 8C7E  
                      _send_lcd_cmd_dma 81E4                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 8A0E  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 887E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8EAE  
        __end_of_PIN_MANAGER_Initialize 7AAA               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6B00                 _eaDogM_WriteStringAtPos 861C  
                         _get_vterm_ptr 877A                          _check_adc_scan 8E86  
             __size_of_UART2_Initialize 005E  
