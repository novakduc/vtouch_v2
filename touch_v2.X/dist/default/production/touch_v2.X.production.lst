

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 27 20:17:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=4,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=4,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=4,class=CODE,delta=1
   180                           	psect	text159,global,reloc=4,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=4,class=CODE,delta=1
   185                           	psect	text164,global,reloc=4,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=4,class=CODE,delta=1
   195                           	psect	text174,global,reloc=4,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text177,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_main$3754	offset	0
   240 ;;_main$3750	offset	2
   241 ;;_esr_temp	offset	4
   242 ;;_i_esr	offset	8
   243 ;;_shape	offset	10
   244 ;;_k	offset	11
   245 ;;_j	offset	12
   246 ;;_i	offset	13
   247 ;;_inp_index	offset	14
   248 ;;_mode	offset	15
   249 ;;_i_ror	offset	16
   250 ;;_s	offset=-2 (param)
   251 ;;_c	offset	0
   252 ;;_shape	offset=-1 (param)
   253 ;;_reset	offset=-2 (param)
   254 ;;_cmd	offset=-1 (param)
   255 ;;_cmd	offset=-1 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;__this	offset=-2 (param)
   258 ;;_soc	offset	0
   259 ;;_slot	offset	4
   260 ;;_cvoltage	offset=-4 (param)
   261 ;;_h	offset=-1 (param)
   262 ;;_h	offset=-1 (param)
   263 ;;_i	offset=-1 (param)
   264 ;;_fsm	offset=-1 (param)
   265 ;;_channel	offset=-1 (param)
   266 ;;_mode	offset=-1 (param)
   267 ;;_mode	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_i	offset	0
   270 ;;_h	offset=-1 (param)
   271 ;;_flipper	offset=-1 (param)
   272 ;;_f	offset	0
   273 ;;_ap	offset	6
   274 ;;_s	offset=-3 (param)
   275 ;;_fmt	offset=-5 (param)
   276 ;;_line	offset=-1 (param)
   277 ;;_vterm	offset=-2 (param)
   278 ;;_numMilliseconds	offset=-2 (param)
   279 ;;_vterm	offset=-1 (param)
   280 ;;_r	offset=-1 (param)
   281 ;;_c	offset=-2 (param)
   282 ;;_strPtr	offset=-4 (param)
   283 ;;_strPtr	offset=-1 (param)
   284 ;;_delay	offset=-4 (param)
   285 ;;_strPtr	offset=-2 (param)
   286 ;;__this	offset=-2 (param)
   287 ;;_clearBuffer	offset=-3 (param)
   288 ;;_s	offset	0
   289 ;;_k	offset	2
   290 ;;_dest	offset=-2 (param)
   291 ;;_c	offset=-4 (param)
   292 ;;_n	offset=-6 (param)
   293 ;;_ap	offset	0
   294 ;;_fmt	offset=-3 (param)
   295 ;;_cfmt	offset	0
   296 ;;_fp	offset=-2 (param)
   297 ;;_fmt	offset=-4 (param)
   298 ;;_ap	offset=-6 (param)
   299 ;;_vfpfcnvrt$5548	offset	0
   300 ;;_vfpfcnvrt$5559	offset	2
   301 ;;_vfpfcnvrt$5547	offset	4
   302 ;;_llu	offset	6
   303 ;;_ll	offset	14
   304 ;;_f	offset	22
   305 ;;_ct	offset	26
   306 ;;_cp	offset	29
   307 ;;_c	offset	31
   308 ;;_fp	offset=-2 (param)
   309 ;;_fmt	offset=-4 (param)
   310 ;;_ap	offset=-6 (param)
   311 ;;_xtoa$5533	offset	0
   312 ;;_xtoa$5532	offset	2
   313 ;;_n	offset	4
   314 ;;_c	offset	12
   315 ;;_i	offset	14
   316 ;;_w	offset	16
   317 ;;_p	offset	18
   318 ;;_fp	offset=-2 (param)
   319 ;;_d	offset=-10 (param)
   320 ;;_x	offset=-11 (param)
   321 ;;_toupper$6339	offset	0
   322 ;;_c	offset=-2 (param)
   323 ;;_c	offset=-2 (param)
   324 ;;_c	offset=-2 (param)
   325 ;;_n	offset	0
   326 ;;_i	offset	8
   327 ;;_w	offset	10
   328 ;;_p	offset	12
   329 ;;_fp	offset=-2 (param)
   330 ;;_d	offset=-10 (param)
   331 ;;_counter	offset	0
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_quotient	offset	0
   335 ;;_counter	offset	8
   336 ;;_dividend	offset=-8 (param)
   337 ;;_divisor	offset=-16 (param)
   338 ;;_r	offset	0
   339 ;;_l	offset	2
   340 ;;__l	offset=-2 (param)
   341 ;;__r	offset=-4 (param)
   342 ;;_n	offset=-6 (param)
   343 ;;_nuls	offset	0
   344 ;;_l	offset	7
   345 ;;_p	offset	9
   346 ;;_cp	offset	11
   347 ;;_w	offset	13
   348 ;;_i	offset	15
   349 ;;_fp	offset=-2 (param)
   350 ;;_s	offset=-4 (param)
   351 ;;_efgtoa$5505	offset	0
   352 ;;_efgtoa$5504	offset	2
   353 ;;_efgtoa$5503	offset	4
   354 ;;_efgtoa$5499	offset	6
   355 ;;_efgtoa$5495	offset	8
   356 ;;_efgtoa$5494	offset	10
   357 ;;_u	offset	12
   358 ;;_g	offset	16
   359 ;;_l	offset	20
   360 ;;_h	offset	24
   361 ;;_ou	offset	28
   362 ;;_n	offset	32
   363 ;;_e	offset	34
   364 ;;_i	offset	36
   365 ;;_w	offset	38
   366 ;;_p	offset	40
   367 ;;_sign	offset	42
   368 ;;_d	offset	44
   369 ;;_ne	offset	46
   370 ;;_m	offset	48
   371 ;;_pp	offset	50
   372 ;;_t	offset	52
   373 ;;_mode	offset	54
   374 ;;_nmode	offset	55
   375 ;;_fp	offset=-2 (param)
   376 ;;_f	offset=-6 (param)
   377 ;;_c	offset=-7 (param)
   378 ;;_tolower$6324	offset	0
   379 ;;_c	offset=-2 (param)
   380 ;;_c	offset=-2 (param)
   381 ;;_d	offset	0
   382 ;;_s	offset	2
   383 ;;_dest	offset=-2 (param)
   384 ;;_src	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_m	offset	4
   387 ;;_e	offset	8
   388 ;;_x	offset=-4 (param)
   389 ;;_u	offset	0
   390 ;;_e	offset	4
   391 ;;_x	offset=-4 (param)
   392 ;;_exp1	offset	0
   393 ;;_sign1	offset	1
   394 ;;_f1	offset=-4 (param)
   395 ;;_f1	offset=-4 (param)
   396 ;;_ff1	offset=-4 (param)
   397 ;;_ff2	offset=-8 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	2
   404 ;;_counter	offset	3
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_dtoa$5471	offset	0
   408 ;;_n	offset	2
   409 ;;_i	offset	10
   410 ;;_s	offset	12
   411 ;;_w	offset	14
   412 ;;_p	offset	16
   413 ;;_fp	offset=-2 (param)
   414 ;;_d	offset=-10 (param)
   415 ;;_a	offset=-2 (param)
   416 ;;_sign	offset	0
   417 ;;_counter	offset	1
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_quotient	offset	0
   421 ;;_sign	offset	8
   422 ;;_counter	offset	9
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_w	offset	0
   426 ;;_fp	offset=-2 (param)
   427 ;;_c	offset=-3 (param)
   428 ;;_w	offset	0
   429 ;;_i	offset	2
   430 ;;_fp	offset=-2 (param)
   431 ;;_buf	offset=-4 (param)
   432 ;;_p	offset=-6 (param)
   433 ;;_a	offset	0
   434 ;;_s	offset=-2 (param)
   435 ;;_i	offset	0
   436 ;;_c	offset	2
   437 ;;_s	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_fp	offset=-4 (param)
   441 ;;_c	offset=-1 (param)
   442 ;;__this	offset=-2 (param)
   443 ;;_c	offset=-3 (param)
   444 ;;_atoi$6055	offset	0
   445 ;;_atoi$6053	offset	2
   446 ;;_atoi$6054	offset	4
   447 ;;_n	offset	5
   448 ;;_neg	offset	7
   449 ;;_s	offset=-2 (param)
   450 ;;_isspace$6104	offset	0
   451 ;;_c	offset=-2 (param)
   452 ;;_c	offset=-2 (param)
   453 ;;_vterm	offset=-1 (param)
   454 ;;_new_response_info	offset=-1 (param)
   455 ;;_new_response_info	offset=-1 (param)
   456 ;;_level	offset=-2 (param)
   457 ;;_dutyValue	offset=-2 (param)
   458 ;;_timer	offset=-1 (param)
   459 ;;_timer	offset=-1 (param)
   460 ;;_count	offset=-3 (param)
   461 ;;_h	offset=-1 (param)
   462 ;;_u	offset	0
   463 ;;_x	offset=-4 (param)
   464 ;;_chan	offset=-1 (param)
   465 ;;_to_what	offset=-2 (param)
   466 ;;_u	offset	0
   467 ;;_s	offset=-2 (param)
   468 ;;_index	offset=-1 (param)
   469 ;;_arg	offset	0
   470 ;;_exp	offset	4
   471 ;;_sign	offset=-1 (param)
   472 ;;_val	offset=-5 (param)
   473 ;;_grs	offset	0
   474 ;;_rem	offset	4
   475 ;;_new_exp	offset	8
   476 ;;_aexp	offset	10
   477 ;;_bexp	offset	11
   478 ;;_sign	offset	12
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_ff1	offset=-4 (param)
   482 ;;_ff2	offset=-8 (param)
   483 ;;_lp_speed	offset	0
   484 ;;_new	offset=-4 (param)
   485 ;;_bn	offset=-5 (param)
   486 ;;_slow	offset=-6 (param)
   487 ;;_b	offset=-4 (param)
   488 ;;_a	offset=-8 (param)
   489 ;;_grs	offset	0
   490 ;;_bexp	offset	1
   491 ;;_aexp	offset	2
   492 ;;_signs	offset	3
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_prod	offset	0
   496 ;;_grs	offset	4
   497 ;;_temp	offset	8
   498 ;;_bexp	offset	10
   499 ;;_aexp	offset	11
   500 ;;_sign	offset	12
   501 ;;_b	offset=-4 (param)
   502 ;;_a	offset=-8 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_state	offset	0
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_i	offset	0
   515 ;;_sw_value	offset	1
   516 ;;_timerVal	offset=-2 (param)
   517 ;;_light	offset	0
   518 ;;_mode	offset=-1 (param)
   519 ;;_chan	offset=-1 (param)
   520 ;;_to_what	offset=-2 (param)
   521 ;;_u	offset	0
   522 ;;_s	offset=-2 (param)
   523 ;;_index	offset=-1 (param)
   524 ;;_arg	offset	0
   525 ;;_exp	offset	4
   526 ;;_sign	offset=-1 (param)
   527 ;;_val	offset=-5 (param)
   528 ;;_b	offset=-4 (param)
   529 ;;_a	offset=-8 (param)
   530 ;;_grs	offset	0
   531 ;;_bexp	offset	1
   532 ;;_aexp	offset	2
   533 ;;_signs	offset	3
   534 ;;_b	offset=-4 (param)
   535 ;;_a	offset=-8 (param)
   536 ;;_prod	offset	0
   537 ;;_grs	offset	4
   538 ;;_temp	offset	8
   539 ;;_bexp	offset	10
   540 ;;_aexp	offset	11
   541 ;;_sign	offset	12
   542 ;;_b	offset=-4 (param)
   543 ;;_a	offset=-8 (param)
   544 ;;_grs	offset	0
   545 ;;_rem	offset	4
   546 ;;_new_exp	offset	8
   547 ;;_aexp	offset	10
   548 ;;_bexp	offset	11
   549 ;;_sign	offset	12
   550 ;;_b	offset=-4 (param)
   551 ;;_a	offset=-8 (param)
   552 ;;_ff1	offset=-4 (param)
   553 ;;_ff2	offset=-8 (param)
   554 ;;_timerVal	offset=-2 (param)
   555 ;;_log_ptr	offset	0
   556 ;;_f	offset	0
   557 ;;_ap	offset	6
   558 ;;_s	offset=-3 (param)
   559 ;;_fmt	offset=-5 (param)
   560 ;;_cfmt	offset	0
   561 ;;_fp	offset=-2 (param)
   562 ;;_fmt	offset=-4 (param)
   563 ;;_ap	offset=-6 (param)
   564 ;;_vfpfcnvrt$5548	offset	0
   565 ;;_vfpfcnvrt$5559	offset	2
   566 ;;_vfpfcnvrt$5547	offset	4
   567 ;;_llu	offset	6
   568 ;;_ll	offset	14
   569 ;;_f	offset	22
   570 ;;_ct	offset	26
   571 ;;_cp	offset	29
   572 ;;_c	offset	31
   573 ;;_fp	offset=-2 (param)
   574 ;;_fmt	offset=-4 (param)
   575 ;;_ap	offset=-6 (param)
   576 ;;_xtoa$5533	offset	0
   577 ;;_xtoa$5532	offset	2
   578 ;;_n	offset	4
   579 ;;_c	offset	12
   580 ;;_i	offset	14
   581 ;;_w	offset	16
   582 ;;_p	offset	18
   583 ;;_fp	offset=-2 (param)
   584 ;;_d	offset=-10 (param)
   585 ;;_x	offset=-11 (param)
   586 ;;_toupper$6339	offset	0
   587 ;;_c	offset=-2 (param)
   588 ;;_c	offset=-2 (param)
   589 ;;_c	offset=-2 (param)
   590 ;;_n	offset	0
   591 ;;_i	offset	8
   592 ;;_w	offset	10
   593 ;;_p	offset	12
   594 ;;_fp	offset=-2 (param)
   595 ;;_d	offset=-10 (param)
   596 ;;_counter	offset	0
   597 ;;_dividend	offset=-8 (param)
   598 ;;_divisor	offset=-16 (param)
   599 ;;_quotient	offset	0
   600 ;;_counter	offset	8
   601 ;;_dividend	offset=-8 (param)
   602 ;;_divisor	offset=-16 (param)
   603 ;;_r	offset	0
   604 ;;_l	offset	2
   605 ;;__l	offset=-2 (param)
   606 ;;__r	offset=-4 (param)
   607 ;;_n	offset=-6 (param)
   608 ;;_nuls	offset	0
   609 ;;_l	offset	7
   610 ;;_p	offset	9
   611 ;;_cp	offset	11
   612 ;;_w	offset	13
   613 ;;_i	offset	15
   614 ;;_fp	offset=-2 (param)
   615 ;;_s	offset=-4 (param)
   616 ;;_efgtoa$5505	offset	0
   617 ;;_efgtoa$5504	offset	2
   618 ;;_efgtoa$5503	offset	4
   619 ;;_efgtoa$5499	offset	6
   620 ;;_efgtoa$5495	offset	8
   621 ;;_efgtoa$5494	offset	10
   622 ;;_u	offset	12
   623 ;;_g	offset	16
   624 ;;_l	offset	20
   625 ;;_h	offset	24
   626 ;;_ou	offset	28
   627 ;;_n	offset	32
   628 ;;_e	offset	34
   629 ;;_i	offset	36
   630 ;;_w	offset	38
   631 ;;_p	offset	40
   632 ;;_sign	offset	42
   633 ;;_d	offset	44
   634 ;;_ne	offset	46
   635 ;;_m	offset	48
   636 ;;_pp	offset	50
   637 ;;_t	offset	52
   638 ;;_mode	offset	54
   639 ;;_nmode	offset	55
   640 ;;_fp	offset=-2 (param)
   641 ;;_f	offset=-6 (param)
   642 ;;_c	offset=-7 (param)
   643 ;;_tolower$6324	offset	0
   644 ;;_c	offset=-2 (param)
   645 ;;_c	offset=-2 (param)
   646 ;;_d	offset	0
   647 ;;_s	offset	2
   648 ;;_dest	offset=-2 (param)
   649 ;;_src	offset=-4 (param)
   650 ;;_u	offset	0
   651 ;;_m	offset	4
   652 ;;_e	offset	8
   653 ;;_x	offset=-4 (param)
   654 ;;_u	offset	0
   655 ;;_e	offset	4
   656 ;;_x	offset=-4 (param)
   657 ;;_exp1	offset	0
   658 ;;_sign1	offset	1
   659 ;;_f1	offset=-4 (param)
   660 ;;_f1	offset=-4 (param)
   661 ;;_ff1	offset=-4 (param)
   662 ;;_ff2	offset=-8 (param)
   663 ;;_sign	offset	0
   664 ;;_counter	offset	1
   665 ;;_dividend	offset=-2 (param)
   666 ;;_divisor	offset=-4 (param)
   667 ;;_quotient	offset	0
   668 ;;_sign	offset	2
   669 ;;_counter	offset	3
   670 ;;_dividend	offset=-2 (param)
   671 ;;_divisor	offset=-4 (param)
   672 ;;_dtoa$5471	offset	0
   673 ;;_n	offset	2
   674 ;;_i	offset	10
   675 ;;_s	offset	12
   676 ;;_w	offset	14
   677 ;;_p	offset	16
   678 ;;_fp	offset=-2 (param)
   679 ;;_d	offset=-10 (param)
   680 ;;_a	offset=-2 (param)
   681 ;;_sign	offset	0
   682 ;;_counter	offset	1
   683 ;;_dividend	offset=-8 (param)
   684 ;;_divisor	offset=-16 (param)
   685 ;;_quotient	offset	0
   686 ;;_sign	offset	8
   687 ;;_counter	offset	9
   688 ;;_dividend	offset=-8 (param)
   689 ;;_divisor	offset=-16 (param)
   690 ;;_w	offset	0
   691 ;;_fp	offset=-2 (param)
   692 ;;_c	offset=-3 (param)
   693 ;;_w	offset	0
   694 ;;_i	offset	2
   695 ;;_fp	offset=-2 (param)
   696 ;;_buf	offset=-4 (param)
   697 ;;_p	offset=-6 (param)
   698 ;;_a	offset	0
   699 ;;_s	offset=-2 (param)
   700 ;;_i	offset	0
   701 ;;_c	offset	2
   702 ;;_s	offset=-2 (param)
   703 ;;_fp	offset=-4 (param)
   704 ;;_c	offset=-2 (param)
   705 ;;_fp	offset=-4 (param)
   706 ;;_c	offset=-1 (param)
   707 ;;__this	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_atoi$6055	offset	0
   710 ;;_atoi$6053	offset	2
   711 ;;_atoi$6054	offset	4
   712 ;;_n	offset	5
   713 ;;_neg	offset	7
   714 ;;_s	offset=-2 (param)
   715 ;;_isspace$6104	offset	0
   716 ;;_c	offset=-2 (param)
   717 ;;_c	offset=-2 (param)
   718 ;;_dsize	offset=-2 (param)
   719 ;;_u	offset	0
   720 ;;_x	offset=-4 (param)
   721 ;;_f1p	offset=-2 (param)
   722 ;;_f2	offset=-6 (param)
   723 ;;_timer	offset=-1 (param)
   724 ;;_count	offset=-3 (param)
   725 ;;_channel	offset=-1 (param)
   726 ;;_i	offset	0
   727                           
   728                           	psect	idataBIGRAM
   729  016862                     __pidataBIGRAM:
   730                           	opt callstack 0
   731                           
   732                           ;initializer for _port_data
   733  016862  FF                 	db	255
   734  016863  00                 	db	0
   735  016864  FF                 	db	255
   736  016865  00                 	db	0
   737  016866  FF                 	db	255
   738  016867  00                 	db	0
   739  016868  FF                 	db	255
   740  016869  00                 	db	0
   741  01686A  FF                 	db	255
   742  01686B  00                 	db	0
   743  01686C  FF                 	db	255
   744  01686D  00                 	db	0
   745  01686E  FF                 	db	255
   746  01686F  00                 	db	0
   747  016870  FF                 	db	255
   748  016871  00                 	db	0
   749  016872  00                 	db	0
   750  016873  00                 	db	0
   751  016874  00                 	db	0
   752  016875  00                 	db	0
   753  016876  00                 	db	0
   754  016877  00                 	db	0
   755  016878  00                 	db	0
   756  016879  00                 	db	0
   757  01687A  00                 	db	0
   758  01687B  00                 	db	0
   759  01687C  00                 	db	0
   760  01687D  00                 	db	0
   761  01687E  00                 	db	0
   762  01687F  00                 	db	0
   763  016880  00                 	db	0
   764  016881  00                 	db	0
   765  016882  00                 	db	0
   766  016883  00                 	db	0
   767  016884  00                 	db	0
   768  016885  00                 	db	0
   769  016886  00                 	db	0
   770  016887  00                 	db	0
   771  016888  00                 	db	0
   772  016889  00                 	db	0
   773  01688A  00                 	db	0
   774  01688B  00                 	db	0
   775  01688C  00                 	db	0
   776  01688D  00                 	db	0
   777  01688E  00                 	db	0
   778  01688F  00                 	db	0
   779  016890  00                 	db	0
   780  016891  00                 	db	0
   781  016892  00                 	db	0
   782  016893  00                 	db	0
   783  016894  00                 	db	0
   784  016895  00                 	db	0
   785  016896  00                 	db	0
   786  016897  00                 	db	0
   787  016898  00                 	db	0
   788  016899  00                 	db	0
   789  01689A  00                 	db	0
   790  01689B  00                 	db	0
   791  01689C  00                 	db	0
   792  01689D  00                 	db	0
   793  01689E  00                 	db	0
   794  01689F  00                 	db	0
   795  0168A0  00                 	db	0
   796  0168A1  00                 	db	0
   797  0168A2  00                 	db	0
   798  0168A3  00                 	db	0
   799  0168A4  00                 	db	0
   800  0168A5  00                 	db	0
   801  0168A6  00                 	db	0
   802  0168A7  00                 	db	0
   803  0168A8  00                 	db	0
   804  0168A9  00                 	db	0
   805  0168AA  00                 	db	0
   806  0168AB  00                 	db	0
   807  0168AC  00                 	db	0
   808  0168AD  00                 	db	0
   809  0168AE  00                 	db	0
   810  0168AF  00                 	db	0
   811  0168B0  00                 	db	0
   812  0168B1  00                 	db	0
   813  0168B2  00                 	db	0
   814  0168B3  00                 	db	0
   815  0168B4  00                 	db	0
   816  0168B5  00                 	db	0
   817  0168B6  00                 	db	0
   818  0168B7  00                 	db	0
   819  0168B8  00                 	db	0
   820  0168B9  00                 	db	0
   821  0168BA  00                 	db	0
   822  0168BB  00                 	db	0
   823  0168BC  00                 	db	0
   824  0168BD  00                 	db	0
   825  0168BE  00                 	db	0
   826  0168BF  00                 	db	0
   827  0168C0  00                 	db	0
   828  0168C1  00                 	db	0
   829  0168C2  00                 	db	0
   830  0168C3  00                 	db	0
   831  0168C4  00                 	db	0
   832  0168C5  00                 	db	0
   833  0168C6  00                 	db	0
   834  0168C7  00                 	db	0
   835  0168C8  00                 	db	0
   836  0168C9  00                 	db	0
   837  0168CA  00                 	db	0
   838  0168CB  00                 	db	0
   839  0168CC  00                 	db	0
   840  0168CD  00                 	db	0
   841  0168CE  00                 	db	0
   842  0168CF  00                 	db	0
   843  0168D0  00                 	db	0
   844  0168D1  00                 	db	0
   845  0168D2  00                 	db	0
   846  0168D3  00                 	db	0
   847  0168D4  00                 	db	0
   848  0168D5  00                 	db	0
   849  0168D6  00                 	db	0
   850  0168D7  00                 	db	0
   851  0168D8  00                 	db	0
   852  0168D9  00                 	db	0
   853  0168DA  00                 	db	0
   854  0168DB  00                 	db	0
   855  0168DC  00                 	db	0
   856  0168DD  00                 	db	0
   857  0168DE  00                 	db	0
   858  0168DF  00                 	db	0
   859  0168E0  00                 	db	0
   860  0168E1  00                 	db	0
   861  0168E2  00                 	db	0
   862  0168E3  00                 	db	0
   863  0168E4  00                 	db	0
   864  0168E5  00                 	db	0
   865  0168E6  00                 	db	0
   866  0168E7  00                 	db	0
   867  0168E8  00                 	db	0
   868  0168E9  00                 	db	0
   869  0168EA  00                 	db	0
   870  0168EB  00                 	db	0
   871  0168EC  00                 	db	0
   872  0168ED  00                 	db	0
   873  0168EE  00                 	db	0
   874  0168EF  00                 	db	0
   875  0168F0  00                 	db	0
   876  0168F1  00                 	db	0
   877  0168F2  00                 	db	0
   878  0168F3  00                 	db	0
   879  0168F4  00                 	db	0
   880  0168F5  00                 	db	0
   881  0168F6  00                 	db	0
   882  0168F7  00                 	db	0
   883  0168F8  00                 	db	0
   884  0168F9  00                 	db	0
   885  0168FA  00                 	db	0
   886  0168FB  00                 	db	0
   887  0168FC  00                 	db	0
   888  0168FD  00                 	db	0
   889  0168FE  00                 	db	0
   890  0168FF  00                 	db	0
   891  016900  00                 	db	0
   892  016901  00                 	db	0
   893  016902  00                 	db	0
   894  016903  00                 	db	0
   895  016904  00                 	db	0
   896  016905  00                 	db	0
   897  016906  00                 	db	0
   898  016907  00                 	db	0
   899  016908  00                 	db	0
   900  016909  00                 	db	0
   901  01690A  00                 	db	0
   902  01690B  00                 	db	0
   903  01690C  00                 	db	0
   904  01690D  00                 	db	0
   905  01690E  00                 	db	0
   906  01690F  00                 	db	0
   907  016910  00                 	db	0
   908  016911  00                 	db	0
   909  016912  00                 	db	0
   910  016913  00                 	db	0
   911  016914  00                 	db	0
   912  016915  00                 	db	0
   913  016916  00                 	db	0
   914  016917  00                 	db	0
   915  016918  00                 	db	0
   916  016919  00                 	db	0
   917  01691A  00                 	db	0
   918  01691B  00                 	db	0
   919  01691C  00                 	db	0
   920  01691D  00                 	db	0
   921  01691E  00                 	db	0
   922  01691F  00                 	db	0
   923  016920  00                 	db	0
   924  016921  00                 	db	0
   925  016922  00                 	db	0
   926  016923  00                 	db	0
   927  016924  00                 	db	0
   928  016925  00                 	db	0
   929  016926  00                 	db	0
   930  016927  00                 	db	0
   931  016928  00                 	db	0
   932  016929  00                 	db	0
   933  01692A  00                 	db	0
   934  01692B  00                 	db	0
   935  01692C  00                 	db	0
   936  01692D  00                 	db	0
   937  01692E  00                 	db	0
   938  01692F  00                 	db	0
   939  016930  00                 	db	0
   940  016931  00                 	db	0
   941  016932  00                 	db	0
   942  016933  00                 	db	0
   943  016934  00                 	db	0
   944  016935  00                 	db	0
   945  016936  00                 	db	0
   946  016937  00                 	db	0
   947  016938  00                 	db	0
   948  016939  00                 	db	0
   949  01693A  00                 	db	0
   950  01693B  00                 	db	0
   951  01693C  00                 	db	0
   952  01693D  00                 	db	0
   953  01693E  00                 	db	0
   954  01693F  00                 	db	0
   955  016940  00                 	db	0
   956  016941  00                 	db	0
   957  016942  00                 	db	0
   958  016943  00                 	db	0
   959  016944  00                 	db	0
   960  016945  00                 	db	0
   961  016946  00                 	db	0
   962  016947  00                 	db	0
   963  016948  00                 	db	0
   964  016949  00                 	db	0
   965  01694A  00                 	db	0
   966  01694B  00                 	db	0
   967  01694C  00                 	db	0
   968  01694D  00                 	db	0
   969  01694E  00                 	db	0
   970  01694F  00                 	db	0
   971  016950  00                 	db	0
   972  016951  00                 	db	0
   973  016952  00                 	db	0
   974  016953  00                 	db	0
   975  016954  00                 	db	0
   976  016955  00                 	db	0
   977  016956  00                 	db	0
   978  016957  00                 	db	0
   979  016958  00                 	db	0
   980  016959  00                 	db	0
   981  01695A  00                 	db	0
   982  01695B  00                 	db	0
   983  01695C  00                 	db	0
   984  01695D  00                 	db	0
   985  01695E  00                 	db	0
   986  01695F  00                 	db	0
   987  016960  00                 	db	0
   988  016961  00                 	db	0
   989  016962  00                 	db	0
   990  016963  00                 	db	0
   991  016964  00                 	db	0
   992  016965  00                 	db	0
   993  016966  00                 	db	0
   994  016967  00                 	db	0
   995  016968  00                 	db	0
   996  016969  00                 	db	0
   997  01696A  00                 	db	0
   998  01696B  00                 	db	0
   999  01696C  00                 	db	0
  1000  01696D  00                 	db	0
  1001  01696E  00                 	db	0
  1002  01696F  00                 	db	0
  1003  016970  00                 	db	0
  1004  016971  00                 	db	0
  1005  016972  00                 	db	0
  1006  016973  00                 	db	0
  1007  016974  00                 	db	0
  1008  016975  00                 	db	0
  1009  016976  00                 	db	0
  1010  016977  00                 	db	0
  1011  016978  00                 	db	0
  1012  016979  00                 	db	0
  1013  01697A  00                 	db	0
  1014  01697B  00                 	db	0
  1015  01697C  00                 	db	0
  1016  01697D  00                 	db	0
  1017  01697E  00                 	db	0
  1018  01697F  00                 	db	0
  1019  016980  00                 	db	0
  1020  016981  00                 	db	0
  1021  016982  00                 	db	0
  1022  016983  00                 	db	0
  1023  016984  00                 	db	0
  1024  016985  00                 	db	0
  1025  016986  00                 	db	0
  1026  016987  00                 	db	0
  1027  016988  00                 	db	0
  1028  016989  00                 	db	0
  1029  01698A  00                 	db	0
  1030  01698B  00                 	db	0
  1031  01698C  00                 	db	0
  1032  01698D  00                 	db	0
  1033  01698E  00                 	db	0
  1034  01698F  00                 	db	0
  1035  016990  00                 	db	0
  1036  016991  00                 	db	0
  1037  016992  00                 	db	0
  1038  016993  00                 	db	0
  1039  016994  00                 	db	0
  1040  016995  00                 	db	0
  1041  016996  00                 	db	0
  1042  016997  00                 	db	0
  1043  016998  00                 	db	0
  1044  016999  00                 	db	0
  1045  01699A  00                 	db	0
  1046  01699B  00                 	db	0
  1047  01699C  00                 	db	0
  1048  01699D  00                 	db	0
  1049  01699E  00                 	db	0
  1050  01699F  00                 	db	0
  1051  0169A0  00                 	db	0
  1052  0169A1  00                 	db	0
  1053  0169A2  00                 	db	0
  1054  0169A3  00                 	db	0
  1055  0169A4  00                 	db	0
  1056  0169A5  00                 	db	0
  1057  0169A6  00                 	db	0
  1058  0169A7  00                 	db	0
  1059  0169A8  00                 	db	0
  1060  0169A9  00                 	db	0
  1061  0169AA  00                 	db	0
  1062  0169AB  00                 	db	0
  1063  0169AC  00                 	db	0
  1064  0169AD  00                 	db	0
  1065  0169AE  00                 	db	0
  1066  0169AF  00                 	db	0
  1067  0169B0  00                 	db	0
  1068  0169B1  00                 	db	0
  1069  0169B2  00                 	db	0
  1070  0169B3  00                 	db	0
  1071  0169B4  00                 	db	0
  1072  0169B5  00                 	db	0
  1073  0169B6  00                 	db	0
  1074  0169B7  00                 	db	0
  1075  0169B8  00                 	db	0
  1076  0169B9  00                 	db	0
  1077  0169BA  00                 	db	0
  1078  0169BB  00                 	db	0
  1079  0169BC  00                 	db	0
  1080  0169BD  00                 	db	0
  1081  0169BE  00                 	db	0
  1082  0169BF  00                 	db	0
  1083  0169C0  00                 	db	0
  1084  0169C1  00                 	db	0
  1085  0169C2  00                 	db	0
  1086  0169C3  00                 	db	0
  1087  0169C4  00                 	db	0
  1088  0169C5  00                 	db	0
  1089  0169C6  00                 	db	0
  1090  0169C7  00                 	db	0
  1091  0169C8  00                 	db	0
  1092  0169C9  00                 	db	0
  1093  0169CA  00                 	db	0
  1094  0169CB  00                 	db	0
  1095  0169CC  00                 	db	0
  1096  0169CD  00                 	db	0
  1097  0169CE  00                 	db	0
  1098  0169CF  00                 	db	0
  1099  0169D0  00                 	db	0
  1100  0169D1  00                 	db	0
  1101  0169D2  00                 	db	0
  1102  0169D3  00                 	db	0
  1103  0169D4  00                 	db	0
  1104  0169D5  00                 	db	0
  1105  0169D6  00                 	db	0
  1106  0169D7  00                 	db	0
  1107  0169D8  00                 	db	0
  1108  0169D9  00                 	db	0
  1109  0169DA  00                 	db	0
  1110  0169DB  00                 	db	0
  1111  0169DC  00                 	db	0
  1112  0169DD  00                 	db	0
  1113  0169DE  00                 	db	0
  1114  0169DF  00                 	db	0
  1115  0169E0  00                 	db	0
  1116  0169E1  00                 	db	0
  1117  0169E2  00                 	db	0
  1118  0169E3  00                 	db	0
  1119  0169E4  00                 	db	0
  1120  0169E5  00                 	db	0
  1121  0169E6  00                 	db	0
  1122  0169E7  00                 	db	0
  1123  0169E8  00                 	db	0
  1124  0169E9  00                 	db	0
  1125  0169EA  00                 	db	0
  1126  0169EB  00                 	db	0
  1127  0169EC  00                 	db	0
  1128  0169ED  00                 	db	0
  1129  0169EE  00                 	db	0
  1130  0169EF  00                 	db	0
  1131  0169F0  00                 	db	0
  1132  0169F1  00                 	db	0
  1133  0169F2  00                 	db	0
  1134  0169F3  00                 	db	0
  1135  0169F4  00                 	db	0
  1136  0169F5  00                 	db	0
  1137  0169F6  00                 	db	0
  1138  0169F7  00                 	db	0
  1139  0169F8  00                 	db	0
  1140  0169F9  00                 	db	0
  1141  0169FA  00                 	db	0
  1142  0169FB  00                 	db	0
  1143  0169FC  00                 	db	0
  1144  0169FD  00                 	db	0
  1145  0169FE  00                 	db	0
  1146  0169FF  00                 	db	0
  1147  016A00  00                 	db	0
  1148  016A01  00                 	db	0
  1149  016A02  00                 	db	0
  1150  016A03  00                 	db	0
  1151  016A04  00                 	db	0
  1152  016A05  00                 	db	0
  1153  016A06  00                 	db	0
  1154  016A07  00                 	db	0
  1155  016A08  00                 	db	0
  1156  016A09  00                 	db	0
  1157  016A0A  00                 	db	0
  1158  016A0B  00                 	db	0
  1159  016A0C  00                 	db	0
  1160  016A0D  00                 	db	0
  1161  016A0E  00                 	db	0
  1162  016A0F  00                 	db	0
  1163  016A10  00                 	db	0
  1164  016A11  00                 	db	0
  1165  016A12  00                 	db	0
  1166  016A13  00                 	db	0
  1167  016A14  00                 	db	0
  1168  016A15  00                 	db	0
  1169  016A16  00                 	db	0
  1170  016A17  00                 	db	0
  1171  016A18  00                 	db	0
  1172  016A19  00                 	db	0
  1173  016A1A  00                 	db	0
  1174  016A1B  00                 	db	0
  1175  016A1C  00                 	db	0
  1176  016A1D  00                 	db	0
  1177  016A1E  00                 	db	0
  1178  016A1F  00                 	db	0
  1179  016A20  00                 	db	0
  1180  016A21  00                 	db	0
  1181  016A22  00                 	db	0
  1182  016A23  00                 	db	0
  1183  016A24  00                 	db	0
  1184  016A25  00                 	db	0
  1185  016A26  00                 	db	0
  1186  016A27  00                 	db	0
  1187  016A28  00                 	db	0
  1188  016A29  00                 	db	0
  1189  016A2A  00                 	db	0
  1190  016A2B  00                 	db	0
  1191  016A2C  00                 	db	0
  1192  016A2D  00                 	db	0
  1193  016A2E  00                 	db	0
  1194  016A2F  00                 	db	0
  1195  016A30  00                 	db	0
  1196  016A31  00                 	db	0
  1197  016A32  00                 	db	0
  1198  016A33  00                 	db	0
  1199  016A34  00                 	db	0
  1200  016A35  00                 	db	0
  1201  016A36  00                 	db	0
  1202  016A37  00                 	db	0
  1203  016A38  00                 	db	0
  1204  016A39  00                 	db	0
  1205  016A3A  00                 	db	0
  1206  016A3B  00                 	db	0
  1207  016A3C  00                 	db	0
  1208  016A3D  00                 	db	0
  1209  016A3E  00                 	db	0
  1210  016A3F  00                 	db	0
  1211  016A40  00                 	db	0
  1212  016A41  00                 	db	0
  1213  016A42  00                 	db	0
  1214  016A43  00                 	db	0
  1215  016A44  00                 	db	0
  1216  016A45  00                 	db	0
  1217  016A46  00                 	db	0
  1218  016A47  00                 	db	0
  1219  016A48  00                 	db	0
  1220  016A49  00                 	db	0
  1221  016A4A  00                 	db	0
  1222  016A4B  00                 	db	0
  1223  016A4C  00                 	db	0
  1224  016A4D  00                 	db	0
  1225  016A4E  00                 	db	0
  1226  016A4F  00                 	db	0
  1227  016A50  00                 	db	0
  1228  016A51  00                 	db	0
  1229  016A52  00                 	db	0
  1230  016A53  00                 	db	0
  1231  016A54  00                 	db	0
  1232  016A55  00                 	db	0
  1233  016A56  00                 	db	0
  1234  016A57  00                 	db	0
  1235  016A58  00                 	db	0
  1236  016A59  00                 	db	0
  1237  016A5A  00                 	db	0
  1238  016A5B  00                 	db	0
  1239  016A5C  00                 	db	0
  1240  016A5D  00                 	db	0
  1241  016A5E  00                 	db	0
  1242  016A5F  00                 	db	0
  1243  016A60  00                 	db	0
  1244  016A61  00                 	db	0
  1245                           
  1246                           ;initializer for _C
  1247  016A62  0000               	dw	0
  1248  016A64  0000               	dw	0
  1249  016A66  0000               	dw	0
  1250  016A68  0000               	dw	0
  1251  016A6A  0000               	dw	0
  1252  016A6C  0000               	dw	0
  1253  016A6E  0000               	dw	0
  1254  016A70  0000               	dw	0
  1255  016A72  0000               	dw	0
  1256  016A74  0000               	dw	0
  1257  016A76  0000               	dw	0
  1258  016A78  0000               	dw	0
  1259  016A7A  0000               	dw	0
  1260  016A7C  0000               	dw	0
  1261  016A7E  0000               	dw	0
  1262  016A80  0000               	dw	0
  1263  016A82  0000               	dw	0
  1264  016A84  0000               	dw	0
  1265  016A86  0000               	dw	0
  1266  016A88  0000               	dw	0
  1267  016A8A  0000               	dw	0
  1268  016A8C  0000               	dw	0
  1269  016A8E  0000               	dw	0
  1270  016A90  0000               	dw	0
  1271  016A92  0000               	dw	0
  1272  016A94  0000               	dw	0
  1273  016A96  0000               	dw	0
  1274  016A98  0000               	dw	0
  1275  016A9A  0000               	dw	0
  1276  016A9C  0000               	dw	0
  1277  016A9E  0000               	dw	0
  1278  016AA0  0000               	dw	0
  1279  016AA2  0000               	dw	0
  1280  016AA4  0000               	dw	0
  1281  016AA6  0000               	dw	0
  1282  016AA8  0000               	dw	0
  1283  016AAA  0000               	dw	0
  1284  016AAC  0000               	dw	0
  1285  016AAE  0000               	dw	0
  1286  016AB0  0000               	dw	0
  1287  016AB2  0000               	dw	0
  1288  016AB4  0000               	dw	0
  1289  016AB6  0000               	dw	0
  1290  016AB8  0000               	dw	0
  1291  016ABA  0000               	dw	0
  1292  016ABC  0000               	dw	0
  1293  016ABE  0000               	dw	0
  1294  016AC0  0000               	dw	0
  1295  016AC2  0000               	dw	0
  1296  016AC4  0000               	dw	0
  1297  016AC6  0000               	dw	0
  1298  016AC8  0000               	dw	0
  1299  016ACA  0000               	dw	0
  1300  016ACC  0000               	dw	0
  1301  016ACE  0000               	dw	0
  1302  016AD0  0000               	dw	0
  1303  016AD2  0000               	dw	0
  1304  016AD4  0000               	dw	0
  1305  016AD6  0000               	dw	0
  1306  016AD8  0000               	dw	0
  1307  016ADA  0000               	dw	0
  1308  016ADC  0000               	dw	0
  1309  016ADE  0000               	dw	0
  1310  016AE0  0000               	dw	0
  1311  016AE2  0000               	dw	0
  1312  016AE4  0000               	dw	0
  1313  016AE6  0000               	dw	0
  1314  016AE8  0000               	dw	0
  1315  016AEA  0000               	dw	0
  1316  016AEC  0000               	dw	0
  1317  016AEE  0000               	dw	0
  1318  016AF0  42FA               	dw	17146
  1319  016AF2  0000               	dw	0
  1320  016AF4  0000               	dw	0
  1321  016AF6  0000               	dw	0
  1322  016AF8  0000               	dw	0
  1323  016AFA  0000               	dw	0
  1324  016AFC  0000               	dw	0
  1325  016AFE  0000               	dw	0
  1326  016B00  0000               	dw	0
  1327  016B02  0000               	dw	0
  1328  016B04  0000               	dw	0
  1329  016B06  0000               	dw	0
  1330  016B08  0000               	dw	0
  1331  016B0A  0000               	dw	0
  1332  016B0C  0000               	dw	0
  1333  016B0E  0000               	dw	0
  1334  016B10  0000               	dw	0
  1335  016B12  0000               	dw	0
  1336  016B14  0000               	dw	0
  1337  016B16  00                 	db	0
  1338  016B17  01                 	db	1
  1339  016B18  00                 	db	0
  1340  016B19  00                 	db	0
  1341  016B1A  00                 	db	0
  1342  016B1B  00                 	db	0
  1343  016B1C  00                 	db	0
  1344  016B1D  00                 	db	0
  1345  016B1E  00                 	db	0
  1346  016B1F  00                 	db	0
  1347  016B20  00                 	db	0
  1348  016B21  00                 	db	0
  1349  016B22  00                 	db	0
  1350  016B23  00                 	db	0
  1351  016B24  00                 	db	0
  1352  016B25  00                 	db	0
  1353  016B26  00                 	db	0
  1354  016B27  00                 	db	0
  1355  016B28  00                 	db	0
  1356  016B29  00                 	db	0
  1357  016B2A  00                 	db	0
  1358  016B2B  00                 	db	0
  1359  016B2C  00                 	db	0
  1360  016B2D  00                 	db	0
  1361  016B2E  00                 	db	0
  1362  016B2F  00                 	db	0
  1363  016B30  00                 	db	0
  1364  016B31  00                 	db	0
  1365  016B32  00                 	db	0
  1366  016B33  00                 	db	0
  1367  016B34  00                 	db	0
  1368  016B35  00                 	db	0
  1369  016B36  00                 	db	0
  1370  016B37  00                 	db	0
  1371  016B38  00                 	db	0
  1372  016B39  00                 	db	0
  1373  016B3A  00                 	db	0
  1374  016B3B  00                 	db	0
  1375  016B3C  00                 	db	0
  1376  016B3D  00                 	db	0
  1377  016B3E  00                 	db	0
  1378  016B3F  00                 	db	0
  1379  016B40  00                 	db	0
  1380  016B41  00                 	db	0
  1381  016B42  00                 	db	0
  1382  016B43  00                 	db	0
  1383  016B44  00                 	db	0
  1384  016B45  00                 	db	0
  1385  016B46  00                 	db	0
  1386  016B47  00                 	db	0
  1387  016B48  00                 	db	0
  1388  016B49  00                 	db	0
  1389  016B4A  00                 	db	0
  1390  016B4B  00                 	db	0
  1391  016B4C  00                 	db	0
  1392  016B4D  00                 	db	0
  1393  016B4E  00                 	db	0
  1394  016B4F  00                 	db	0
  1395  016B50  00                 	db	0
  1396  016B51  00                 	db	0
  1397  016B52  00                 	db	0
  1398  016B53  00                 	db	0
  1399  016B54  00                 	db	0
  1400  016B55  00                 	db	0
  1401  016B56  00                 	db	0
  1402  016B57  00                 	db	0
  1403  016B58  00                 	db	0
  1404  016B59  00                 	db	0
  1405  016B5A  00                 	db	0
  1406  016B5B  00                 	db	0
  1407  016B5C  00                 	db	0
  1408  016B5D  00                 	db	0
  1409  016B5E  00                 	db	0
  1410  016B5F  00                 	db	0
  1411  016B60  00                 	db	0
  1412  016B61  00                 	db	0
  1413  016B62  00                 	db	0
  1414  016B63  00                 	db	0
  1415  016B64  00                 	db	0
  1416  016B65  00                 	db	0
  1417  016B66  00                 	db	0
  1418  016B67  00                 	db	0
  1419  016B68  00                 	db	0
  1420  016B69  00                 	db	0
  1421  016B6A  00                 	db	0
  1422  016B6B  00                 	db	0
  1423  016B6C  0000               	dw	0
  1424  016B6E  0000               	dw	0
  1425  016B70  0000               	dw	0
  1426  016B72  0000               	dw	0
  1427  016B74  0000               	dw	0
  1428  016B76  0000               	dw	0
  1429  016B78  0000               	dw	0
  1430  016B7A  0000               	dw	0
  1431  016B7C  0000               	dw	0
  1432  016B7E  0000               	dw	0
  1433  016B80  01                 	db	1
  1434  016B81  00                 	db	0
  1435  016B82  00                 	db	0
  1436  016B83  00                 	db	0
  1437  016B84  00                 	db	0
  1438  016B85  00                 	db	0
  1439  016B86  00                 	db	0
  1440  016B87  00                 	db	0
  1441  016B88  00                 	db	0
  1442                           
  1443                           	psect	idataBANK0
  1444  01BD1E                     __pidataBANK0:
  1445                           	opt callstack 0
  1446                           
  1447                           ;initializer for stoa@F1166
  1448  01BD1E  28                 	db	40
  1449  01BD1F  6E                 	db	110
  1450  01BD20  75                 	db	117
  1451  01BD21  6C                 	db	108
  1452  01BD22  6C                 	db	108
  1453  01BD23  29                 	db	41
  1454  01BD24  00                 	db	0
  1455                           
  1456                           ;initializer for _H
  1457  01BD25  00                 	db	0
  1458  01BD26  00                 	db	0
  1459  01BD27  01                 	db	1
  1460  01BD28  00                 	db	0
  1461  01BD29  01                 	db	1
  1462  01BD2A  00                 	db	0
  1463  01BD2B  00                 	db	0
  1464                           
  1465                           	psect	idataBANK1
  1466  019C4E                     __pidataBANK1:
  1467                           	opt callstack 0
  1468                           
  1469                           ;initializer for _R
  1470  019C4E  0000               	dw	0
  1471  019C50  0000               	dw	0
  1472  019C52  0000               	dw	0
  1473  019C54  0000               	dw	0
  1474  019C56  0000               	dw	0
  1475  019C58  0000               	dw	0
  1476  019C5A  0000               	dw	0
  1477  019C5C  0000               	dw	0
  1478  019C5E  0000               	dw	0
  1479  019C60  0000               	dw	0
  1480  019C62  0000               	dw	0
  1481  019C64  0000               	dw	0
  1482  019C66  0000               	dw	0
  1483  019C68  0000               	dw	0
  1484  019C6A  0000               	dw	0
  1485  019C6C  0000               	dw	0
  1486  019C6E  0F67               	dw	3943
  1487  019C70  0F8F               	dw	3983
  1488  019C72  0000               	dw	0
  1489  019C74  0000               	dw	0
  1490  019C76  0000               	dw	0
  1491  019C78  0000               	dw	0
  1492  019C7A  00                 	db	0
  1493  019C7B  0000               	dw	0
  1494  019C7D  00                 	db	0
  1495                           
  1496                           ;initializer for _V
  1497  019C7E  00                 	db	0
  1498  019C7F  00                 	db	0
  1499  019C80  00                 	db	0
  1500  019C81  00                 	db	0
  1501  019C82  00                 	db	0
  1502  019C83  00                 	db	0
  1503  019C84  00                 	db	0
  1504  019C85  00                 	db	0
  1505  019C86  00                 	db	0
  1506  019C87  00                 	db	0
  1507  019C88  00                 	db	0
  1508  019C89  00                 	db	0
  1509  019C8A  00                 	db	0
  1510  019C8B  00                 	db	0
  1511  019C8C  00                 	db	0
  1512  019C8D  00                 	db	0
  1513  019C8E  00                 	db	0
  1514  019C8F  00                 	db	0
  1515  019C90  00                 	db	0
  1516  019C91  00                 	db	0
  1517  019C92  00                 	db	0
  1518  019C93  00                 	db	0
  1519  019C94  00                 	db	0
  1520  019C95  00                 	db	0
  1521  019C96  00                 	db	0
  1522  019C97  00                 	db	0
  1523  019C98  00                 	db	0
  1524  019C99  00                 	db	0
  1525  019C9A  00                 	db	0
  1526  019C9B  00                 	db	0
  1527  019C9C  00                 	db	0
  1528  019C9D  00                 	db	0
  1529  019C9E  00                 	db	0
  1530  019C9F  00                 	db	0
  1531  019CA0  00                 	db	0
  1532  019CA1  00                 	db	0
  1533  019CA2  00                 	db	0
  1534  019CA3  00                 	db	0
  1535  019CA4  00                 	db	0
  1536  019CA5  00                 	db	0
  1537  019CA6  00                 	db	0
  1538  019CA7  00                 	db	0
  1539  019CA8  00                 	db	0
  1540  019CA9  00                 	db	0
  1541  019CAA  00                 	db	0
  1542  019CAB  00                 	db	0
  1543  019CAC  00                 	db	0
  1544  019CAD  00                 	db	0
  1545  019CAE  00                 	db	0
  1546  019CAF  00                 	db	0
  1547  019CB0  00                 	db	0
  1548  019CB1  00                 	db	0
  1549  019CB2  00                 	db	0
  1550  019CB3  00                 	db	0
  1551  019CB4  00                 	db	0
  1552  019CB5  00                 	db	0
  1553  019CB6  00                 	db	0
  1554  019CB7  00                 	db	0
  1555  019CB8  00                 	db	0
  1556  019CB9  00                 	db	0
  1557  019CBA  00                 	db	0
  1558  019CBB  00                 	db	0
  1559  019CBC  00                 	db	0
  1560  019CBD  00                 	db	0
  1561  019CBE  00                 	db	0
  1562  019CBF  00                 	db	0
  1563  019CC0  00                 	db	0
  1564  019CC1  00                 	db	0
  1565  019CC2  00                 	db	0
  1566  019CC3  00                 	db	0
  1567  019CC4  00                 	db	0
  1568  019CC5  00                 	db	0
  1569  019CC6  00                 	db	0
  1570  019CC7  00                 	db	0
  1571  019CC8  00                 	db	0
  1572  019CC9  00                 	db	0
  1573  019CCA  00                 	db	0
  1574  019CCB  00                 	db	0
  1575  019CCC  00                 	db	0
  1576  019CCD  00                 	db	0
  1577  019CCE  00                 	db	0
  1578  019CCF  00                 	db	0
  1579  019CD0  00                 	db	0
  1580  019CD1  00                 	db	0
  1581  019CD2  00                 	db	0
  1582  019CD3  00                 	db	0
  1583  019CD4  00                 	db	0
  1584  019CD5  00                 	db	0
  1585  019CD6  00                 	db	0
  1586  019CD7  00                 	db	0
  1587  019CD8  00                 	db	0
  1588  019CD9  00                 	db	0
  1589  019CDA  00                 	db	0
  1590  019CDB  00                 	db	0
  1591  019CDC  00                 	db	0
  1592  019CDD  00                 	db	0
  1593  019CDE  00                 	db	0
  1594  019CDF  00                 	db	0
  1595  019CE0  00                 	db	0
  1596  019CE1  00                 	db	0
  1597  019CE2  00                 	db	0
  1598  019CE3  00                 	db	0
  1599  019CE4  00                 	db	0
  1600  019CE5  00                 	db	0
  1601  019CE6  00                 	db	0
  1602  019CE7  00                 	db	0
  1603  019CE8  00                 	db	0
  1604  019CE9  00                 	db	0
  1605  019CEA  00                 	db	0
  1606  019CEB  00                 	db	0
  1607  019CEC  00                 	db	0
  1608  019CED  00                 	db	0
  1609  019CEE  00                 	db	0
  1610  019CEF  00                 	db	0
  1611  019CF0  00                 	db	0
  1612  019CF1  00                 	db	0
  1613  019CF2  00                 	db	0
  1614  019CF3  00                 	db	0
  1615  019CF4  00                 	db	0
  1616  019CF5  00                 	db	0
  1617  019CF6  00                 	db	0
  1618  019CF7  00                 	db	0
  1619  019CF8  00                 	db	0
  1620  019CF9  00                 	db	0
  1621  019CFA  00                 	db	0
  1622  019CFB  00                 	db	0
  1623  019CFC  00                 	db	0
  1624  019CFD  00                 	db	0
  1625  019CFE  00                 	db	0
  1626  019CFF  0000               	dw	0
  1627  019D01  0000               	dw	0
  1628  019D03  0000               	dw	0
  1629  019D05  0000               	dw	0
  1630  019D07  00                 	db	0
  1631  019D08  00                 	db	0
  1632  019D09  00                 	db	0
  1633  019D0A  00                 	db	0
  1634  019D0B  00                 	db	0
  1635  019D0C  00                 	db	0
  1636  019D0D  0000               	dw	0
  1637  019D0F  0000               	dw	0
  1638  019D11  0000               	dw	0
  1639  019D13  0000               	dw	0
  1640  019D15  0000               	dw	0
  1641  019D17  0000               	dw	0
  1642  019D19  00                 	db	0
  1643  019D1A  00                 	db	0
  1644  019D1B  00                 	db	0
  1645  019D1C  00                 	db	0
  1646  019D1D  00                 	db	0
  1647  019D1E  00                 	db	0
  1648  019D1F  00                 	db	0
  1649  019D20  00                 	db	0
  1650  019D21  00                 	db	0
  1651  019D22  00                 	db	0
  1652  019D23  00                 	db	0
  1653  019D24  0000               	dw	0
  1654  019D26  0000               	dw	0
  1655  019D28  2D                 	db	45
  1656  019D29  00                 	db	0
  1657  019D2A  00                 	db	0
  1658  019D2B  00                 	db	0
  1659  019D2C  00                 	db	0
  1660  019D2D  0000               	dw	0
  1661  019D2F  0000               	dw	0
  1662  019D31  0000               	dw	0
  1663  019D33  0000               	dw	0
  1664  019D35  0000               	dw	0
  1665  019D37  0000               	dw	0
  1666  019D39  0000               	dw	0
  1667  019D3B  0000               	dw	0
  1668                           
  1669                           	psect	mediumconst
  1670  00FA66                     __pmediumconst:
  1671                           	opt callstack 0
  1672  00FA66  00                 	db	0
  1673  00FA67                     _BVSOC_TABLE:
  1674                           	opt callstack 0
  1675  00FA67  59D8               	dw	23000
  1676  00FA69  0000               	dw	0
  1677  00FA6B  0005               	dw	5
  1678  00FA6D  0000               	dw	0
  1679  00FA6F  5B68               	dw	23400
  1680  00FA71  0000               	dw	0
  1681  00FA73  000A               	dw	10
  1682  00FA75  0000               	dw	0
  1683  00FA77  5C30               	dw	23600
  1684  00FA79  0000               	dw	0
  1685  00FA7B  0014               	dw	20
  1686  00FA7D  0000               	dw	0
  1687  00FA7F  5E38               	dw	24120
  1688  00FA81  0000               	dw	0
  1689  00FA83  0019               	dw	25
  1690  00FA85  0000               	dw	0
  1691  00FA87  5E88               	dw	24200
  1692  00FA89  0000               	dw	0
  1693  00FA8B  001E               	dw	30
  1694  00FA8D  0000               	dw	0
  1695  00FA8F  5F78               	dw	24440
  1696  00FA91  0000               	dw	0
  1697  00FA93  0028               	dw	40
  1698  00FA95  0000               	dw	0
  1699  00FA97  5FDC               	dw	24540
  1700  00FA99  0000               	dw	0
  1701  00FA9B  002D               	dw	45
  1702  00FA9D  0000               	dw	0
  1703  00FA9F  6018               	dw	24600
  1704  00FAA1  0000               	dw	0
  1705  00FAA3  0032               	dw	50
  1706  00FAA5  0000               	dw	0
  1707  00FAA7  6046               	dw	24646
  1708  00FAA9  0000               	dw	0
  1709  00FAAB  0035               	dw	53
  1710  00FAAD  0000               	dw	0
  1711  00FAAF  607C               	dw	24700
  1712  00FAB1  0000               	dw	0
  1713  00FAB3  0037               	dw	55
  1714  00FAB5  0000               	dw	0
  1715  00FAB7  60AE               	dw	24750
  1716  00FAB9  0000               	dw	0
  1717  00FABB  0039               	dw	57
  1718  00FABD  0000               	dw	0
  1719  00FABF  60E0               	dw	24800
  1720  00FAC1  0000               	dw	0
  1721  00FAC3  003C               	dw	60
  1722  00FAC5  0000               	dw	0
  1723  00FAC7  6112               	dw	24850
  1724  00FAC9  0000               	dw	0
  1725  00FACB  003F               	dw	63
  1726  00FACD  0000               	dw	0
  1727  00FACF  615D               	dw	24925
  1728  00FAD1  0000               	dw	0
  1729  00FAD3  0043               	dw	67
  1730  00FAD5  0000               	dw	0
  1731  00FAD7  61A8               	dw	25000
  1732  00FAD9  0000               	dw	0
  1733  00FADB  0046               	dw	70
  1734  00FADD  0000               	dw	0
  1735  00FADF  61BC               	dw	25020
  1736  00FAE1  0000               	dw	0
  1737  00FAE3  0048               	dw	72
  1738  00FAE5  0000               	dw	0
  1739  00FAE7  61D0               	dw	25040
  1740  00FAE9  0000               	dw	0
  1741  00FAEB  004B               	dw	75
  1742  00FAED  0000               	dw	0
  1743  00FAEF  61DA               	dw	25050
  1744  00FAF1  0000               	dw	0
  1745  00FAF3  0050               	dw	80
  1746  00FAF5  0000               	dw	0
  1747  00FAF7  61E4               	dw	25060
  1748  00FAF9  0000               	dw	0
  1749  00FAFB  0055               	dw	85
  1750  00FAFD  0000               	dw	0
  1751  00FAFF  61F8               	dw	25080
  1752  00FB01  0000               	dw	0
  1753  00FB03  005A               	dw	90
  1754  00FB05  0000               	dw	0
  1755  00FB07  6208               	dw	25096
  1756  00FB09  0000               	dw	0
  1757  00FB0B  005C               	dw	92
  1758  00FB0D  0000               	dw	0
  1759  00FB0F  6222               	dw	25122
  1760  00FB11  0000               	dw	0
  1761  00FB13  005D               	dw	93
  1762  00FB15  0000               	dw	0
  1763  00FB17  6234               	dw	25140
  1764  00FB19  0000               	dw	0
  1765  00FB1B  005F               	dw	95
  1766  00FB1D  0000               	dw	0
  1767  00FB1F  6248               	dw	25160
  1768  00FB21  0000               	dw	0
  1769  00FB23  0061               	dw	97
  1770  00FB25  0000               	dw	0
  1771  00FB27  625C               	dw	25180
  1772  00FB29  0000               	dw	0
  1773  00FB2B  0064               	dw	100
  1774  00FB2D  0000               	dw	0
  1775  00FB2F  6784               	dw	26500
  1776  00FB31  0000               	dw	0
  1777  00FB33  0062               	dw	98
  1778  00FB35  0000               	dw	0
  1779  00FB37                     __end_of_BVSOC_TABLE:
  1780                           	opt callstack 0
  1781  00FB37                     _T:
  1782                           	opt callstack 0
  1783  00FB37  63                 	db	99
  1784  00FB38  6F                 	db	111
  1785  00FB39  6D                 	db	109
  1786  00FB3A  6D                 	db	109
  1787  00FB3B  61                 	db	97
  1788  00FB3C  6E                 	db	110
  1789  00FB3D  64                 	db	100
  1790  00FB3E  73                 	db	115
  1791  00FB3F  20                 	db	32
  1792  00FB40  31                 	db	49
  1793  00FB41  00                 	db	0
  1794  00FB42  00                 	db	0
  1795  00FB43  00                 	db	0
  1796  00FB44  00                 	db	0
  1797  00FB45  00                 	db	0
  1798  00FB46  00                 	db	0
  1799  00FB47  00                 	db	0
  1800  00FB48  00                 	db	0
  1801  00FB49  64                 	db	100
  1802  00FB4A  69                 	db	105
  1803  00FB4B  73                 	db	115
  1804  00FB4C  70                 	db	112
  1805  00FB4D  6C                 	db	108
  1806  00FB4E  61                 	db	97
  1807  00FB4F  79                 	db	121
  1808  00FB50  73                 	db	115
  1809  00FB51  20                 	db	32
  1810  00FB52  31                 	db	49
  1811  00FB53  00                 	db	0
  1812  00FB54  00                 	db	0
  1813  00FB55  00                 	db	0
  1814  00FB56  00                 	db	0
  1815  00FB57  00                 	db	0
  1816  00FB58  00                 	db	0
  1817  00FB59  00                 	db	0
  1818  00FB5A  00                 	db	0
  1819  00FB5B  63                 	db	99
  1820  00FB5C  6F                 	db	111
  1821  00FB5D  6D                 	db	109
  1822  00FB5E  6D                 	db	109
  1823  00FB5F  61                 	db	97
  1824  00FB60  6E                 	db	110
  1825  00FB61  64                 	db	100
  1826  00FB62  73                 	db	115
  1827  00FB63  20                 	db	32
  1828  00FB64  32                 	db	50
  1829  00FB65  00                 	db	0
  1830  00FB66  00                 	db	0
  1831  00FB67  00                 	db	0
  1832  00FB68  00                 	db	0
  1833  00FB69  00                 	db	0
  1834  00FB6A  00                 	db	0
  1835  00FB6B  00                 	db	0
  1836  00FB6C  00                 	db	0
  1837  00FB6D  64                 	db	100
  1838  00FB6E  69                 	db	105
  1839  00FB6F  73                 	db	115
  1840  00FB70  70                 	db	112
  1841  00FB71  6C                 	db	108
  1842  00FB72  61                 	db	97
  1843  00FB73  79                 	db	121
  1844  00FB74  73                 	db	115
  1845  00FB75  20                 	db	32
  1846  00FB76  32                 	db	50
  1847  00FB77  00                 	db	0
  1848  00FB78  00                 	db	0
  1849  00FB79  00                 	db	0
  1850  00FB7A  00                 	db	0
  1851  00FB7B  00                 	db	0
  1852  00FB7C  00                 	db	0
  1853  00FB7D  00                 	db	0
  1854  00FB7E  00                 	db	0
  1855  00FB7F  63                 	db	99
  1856  00FB80  6F                 	db	111
  1857  00FB81  6D                 	db	109
  1858  00FB82  6D                 	db	109
  1859  00FB83  61                 	db	97
  1860  00FB84  6E                 	db	110
  1861  00FB85  64                 	db	100
  1862  00FB86  73                 	db	115
  1863  00FB87  20                 	db	32
  1864  00FB88  33                 	db	51
  1865  00FB89  00                 	db	0
  1866  00FB8A  00                 	db	0
  1867  00FB8B  00                 	db	0
  1868  00FB8C  00                 	db	0
  1869  00FB8D  00                 	db	0
  1870  00FB8E  00                 	db	0
  1871  00FB8F  00                 	db	0
  1872  00FB90  00                 	db	0
  1873  00FB91  64                 	db	100
  1874  00FB92  69                 	db	105
  1875  00FB93  73                 	db	115
  1876  00FB94  70                 	db	112
  1877  00FB95  6C                 	db	108
  1878  00FB96  61                 	db	97
  1879  00FB97  79                 	db	121
  1880  00FB98  73                 	db	115
  1881  00FB99  20                 	db	32
  1882  00FB9A  33                 	db	51
  1883  00FB9B  00                 	db	0
  1884  00FB9C  00                 	db	0
  1885  00FB9D  00                 	db	0
  1886  00FB9E  00                 	db	0
  1887  00FB9F  00                 	db	0
  1888  00FBA0  00                 	db	0
  1889  00FBA1  00                 	db	0
  1890  00FBA2  00                 	db	0
  1891  00FBA3  63                 	db	99
  1892  00FBA4  6F                 	db	111
  1893  00FBA5  6D                 	db	109
  1894  00FBA6  6D                 	db	109
  1895  00FBA7  61                 	db	97
  1896  00FBA8  6E                 	db	110
  1897  00FBA9  64                 	db	100
  1898  00FBAA  73                 	db	115
  1899  00FBAB  20                 	db	32
  1900  00FBAC  34                 	db	52
  1901  00FBAD  00                 	db	0
  1902  00FBAE  00                 	db	0
  1903  00FBAF  00                 	db	0
  1904  00FBB0  00                 	db	0
  1905  00FBB1  00                 	db	0
  1906  00FBB2  00                 	db	0
  1907  00FBB3  00                 	db	0
  1908  00FBB4  00                 	db	0
  1909  00FBB5  64                 	db	100
  1910  00FBB6  69                 	db	105
  1911  00FBB7  73                 	db	115
  1912  00FBB8  70                 	db	112
  1913  00FBB9  6C                 	db	108
  1914  00FBBA  61                 	db	97
  1915  00FBBB  79                 	db	121
  1916  00FBBC  73                 	db	115
  1917  00FBBD  20                 	db	32
  1918  00FBBE  34                 	db	52
  1919  00FBBF  00                 	db	0
  1920  00FBC0  00                 	db	0
  1921  00FBC1  00                 	db	0
  1922  00FBC2  00                 	db	0
  1923  00FBC3  00                 	db	0
  1924  00FBC4  00                 	db	0
  1925  00FBC5  00                 	db	0
  1926  00FBC6  00                 	db	0
  1927  00FBC7                     __end_of_T:
  1928                           	opt callstack 0
  1929  00FBC7                     _spin:
  1930                           	opt callstack 0
  1931  00FBC7  7C                 	db	124
  1932  00FBC8  7C                 	db	124
  1933  00FBC9  2F                 	db	47
  1934  00FBCA  2F                 	db	47
  1935  00FBCB  2D                 	db	45
  1936  00FBCC  2D                 	db	45
  1937  00FBCD  00                 	db	0
  1938  00FBCE  00                 	db	0
  1939  00FBCF  00                 	db	0
  1940  00FBD0  00                 	db	0
  1941  00FBD1  00                 	db	0
  1942  00FBD2  00                 	db	0
  1943  00FBD3  00                 	db	0
  1944  00FBD4  00                 	db	0
  1945  00FBD5  00                 	db	0
  1946  00FBD6  00                 	db	0
  1947  00FBD7  00                 	db	0
  1948  00FBD8  00                 	db	0
  1949  00FBD9  00                 	db	0
  1950  00FBDA  00                 	db	0
  1951  00FBDB  7C                 	db	124
  1952  00FBDC  7C                 	db	124
  1953  00FBDD  2F                 	db	47
  1954  00FBDE  2F                 	db	47
  1955  00FBDF  2D                 	db	45
  1956  00FBE0  2D                 	db	45
  1957  00FBE1  5C                 	db	92
  1958  00FBE2  5C                 	db	92
  1959  00FBE3  00                 	db	0
  1960  00FBE4  00                 	db	0
  1961  00FBE5  00                 	db	0
  1962  00FBE6  00                 	db	0
  1963  00FBE7  00                 	db	0
  1964  00FBE8  00                 	db	0
  1965  00FBE9  00                 	db	0
  1966  00FBEA  00                 	db	0
  1967  00FBEB  00                 	db	0
  1968  00FBEC  00                 	db	0
  1969  00FBED  00                 	db	0
  1970  00FBEE  00                 	db	0
  1971  00FBEF  4F                 	db	79
  1972  00FBF0  4F                 	db	79
  1973  00FBF1  4F                 	db	79
  1974  00FBF2  4F                 	db	79
  1975  00FBF3  4F                 	db	79
  1976  00FBF4  4F                 	db	79
  1977  00FBF5  2D                 	db	45
  1978  00FBF6  2D                 	db	45
  1979  00FBF7  5F                 	db	95
  1980  00FBF8  5F                 	db	95
  1981  00FBF9  2D                 	db	45
  1982  00FBFA  00                 	db	0
  1983  00FBFB  00                 	db	0
  1984  00FBFC  00                 	db	0
  1985  00FBFD  00                 	db	0
  1986  00FBFE  00                 	db	0
  1987  00FBFF  00                 	db	0
  1988  00FC00  00                 	db	0
  1989  00FC01  00                 	db	0
  1990  00FC02  00                 	db	0
  1991  00FC03  76                 	db	118
  1992  00FC04  76                 	db	118
  1993  00FC05  3C                 	db	60
  1994  00FC06  3C                 	db	60
  1995  00FC07  5E                 	db	94
  1996  00FC08  5E                 	db	94
  1997  00FC09  3E                 	db	62
  1998  00FC0A  3E                 	db	62
  1999  00FC0B  00                 	db	0
  2000  00FC0C  00                 	db	0
  2001  00FC0D  00                 	db	0
  2002  00FC0E  00                 	db	0
  2003  00FC0F  00                 	db	0
  2004  00FC10  00                 	db	0
  2005  00FC11  00                 	db	0
  2006  00FC12  00                 	db	0
  2007  00FC13  00                 	db	0
  2008  00FC14  00                 	db	0
  2009  00FC15  00                 	db	0
  2010  00FC16  00                 	db	0
  2011  00FC17  2E                 	db	46
  2012  00FC18  2E                 	db	46
  2013  00FC19  2A                 	db	42
  2014  00FC1A  2A                 	db	42
  2015  00FC1B  78                 	db	120
  2016  00FC1C  23                 	db	35
  2017  00FC1D  78                 	db	120
  2018  00FC1E  23                 	db	35
  2019  00FC1F  58                 	db	88
  2020  00FC20  58                 	db	88
  2021  00FC21  7C                 	db	124
  2022  00FC22  7C                 	db	124
  2023  00FC23  2D                 	db	45
  2024  00FC24  2D                 	db	45
  2025  00FC25  00                 	db	0
  2026  00FC26  00                 	db	0
  2027  00FC27  00                 	db	0
  2028  00FC28  00                 	db	0
  2029  00FC29  00                 	db	0
  2030  00FC2A  00                 	db	0
  2031  00FC2B  2E                 	db	46
  2032  00FC2C  2E                 	db	46
  2033  00FC2D  6F                 	db	111
  2034  00FC2E  6F                 	db	111
  2035  00FC2F  4F                 	db	79
  2036  00FC30  4F                 	db	79
  2037  00FC31  6F                 	db	111
  2038  00FC32  6F                 	db	111
  2039  00FC33  00                 	db	0
  2040  00FC34  00                 	db	0
  2041  00FC35  00                 	db	0
  2042  00FC36  00                 	db	0
  2043  00FC37  00                 	db	0
  2044  00FC38  00                 	db	0
  2045  00FC39  00                 	db	0
  2046  00FC3A  00                 	db	0
  2047  00FC3B  00                 	db	0
  2048  00FC3C  00                 	db	0
  2049  00FC3D  00                 	db	0
  2050  00FC3E  00                 	db	0
  2051  00FC3F                     __end_of_spin:
  2052                           	opt callstack 0
  2053  00FC3F  0000               	dw	0
  2054  00FC41  3F80               	dw	16256
  2055  00FC43  0000               	dw	0
  2056  00FC45  3FC0               	dw	16320
  2057  00FC47                     __end_of_bp:
  2058                           	opt callstack 0
  2059  00FC47  AA00               	dw	43520
  2060  00FC49  3FB8               	dw	16312
  2061  00FC4B                     __end_of_ivln2_h:
  2062                           	opt callstack 0
  2063  00FC4B  23C6               	dw	9158
  2064  00FC4D  B8F6               	dw	47350
  2065  00FC4F                     __end_of_cp_l:
  2066                           	opt callstack 0
  2067  00FC4F  4000               	dw	16384
  2068  00FC51  3F76               	dw	16246
  2069  00FC53                     __end_of_cp_h:
  2070                           	opt callstack 0
  2071  0000                     _IVTADL	set	14493
  2072  0000                     _IVTADH	set	14494
  2073  0000                     _IVTADU	set	14495
  2074  0000                     _PIR6bits	set	14758
  2075  0000                     _PIR4bits	set	14756
  2076  0000                     _PIE8bits	set	14744
  2077  0000                     _PIR8bits	set	14760
  2078  0000                     _SCANPR	set	14839
  2079  0000                     _DMA2PR	set	14836
  2080  0000                     _DMA1PR	set	14835
  2081  0000                     _MAINPR	set	14834
  2082  0000                     _ISRPR	set	14833
  2083  0000                     _PIE2bits	set	14738
  2084  0000                     _PIR2bits	set	14754
  2085  0000                     _PIE9bits	set	14745
  2086  0000                     _PIR9bits	set	14761
  2087  0000                     _PIE6bits	set	14742
  2088  0000                     _PIE3bits	set	14739
  2089  0000                     _PMD7	set	14791
  2090  0000                     _PMD6	set	14790
  2091  0000                     _PMD5	set	14789
  2092  0000                     _PMD4	set	14788
  2093  0000                     _PMD3	set	14787
  2094  0000                     _PMD2	set	14786
  2095  0000                     _PMD1	set	14785
  2096  0000                     _PMD0	set	14784
  2097  0000                     _OSCTUNE	set	14814
  2098  0000                     _OSCFRQ	set	14815
  2099  0000                     _OSCEN	set	14813
  2100  0000                     _OSCCON3	set	14811
  2101  0000                     _OSCCON1	set	14809
  2102  0000                     _IPR8bits	set	14728
  2103  0000                     _IPR9bits	set	14729
  2104  0000                     _IPR5bits	set	14725
  2105  0000                     _IPR1bits	set	14721
  2106  0000                     _IPR3bits	set	14723
  2107  0000                     _IPR6bits	set	14726
  2108  0000                     _IPR2bits	set	14722
  2109  0000                     _PIE5bits	set	14741
  2110  0000                     _PIE1bits	set	14737
  2111  0000                     _PIR5bits	set	14757
  2112  0000                     _PIR1bits	set	14753
  2113  0000                     _PLLR	set	118496
  2114  0000                     _SPI1SDIPPS	set	15071
  2115  0000                     _U1RXPPS	set	15077
  2116  0000                     _RC6PPS	set	14870
  2117  0000                     _RC5PPS	set	14869
  2118  0000                     _INT1PPS	set	15041
  2119  0000                     _RD1PPS	set	14873
  2120  0000                     _INT0PPS	set	15040
  2121  0000                     _RC3PPS	set	14867
  2122  0000                     _RB6PPS	set	14862
  2123  0000                     _SPI1SCKPPS	set	15070
  2124  0000                     _U2RXPPS	set	15080
  2125  0000                     _SLRCONF	set	14995
  2126  0000                     _SLRCONE	set	14979
  2127  0000                     _SLRCOND	set	14963
  2128  0000                     _SLRCONC	set	14947
  2129  0000                     _SLRCONB	set	14931
  2130  0000                     _SLRCONA	set	14915
  2131  0000                     _ODCOND	set	14962
  2132  0000                     _ODCONC	set	14946
  2133  0000                     _ODCONB	set	14930
  2134  0000                     _ODCONA	set	14914
  2135  0000                     _ODCONF	set	14994
  2136  0000                     _ODCONE	set	14978
  2137  0000                     _WPUC	set	14945
  2138  0000                     _WPUA	set	14913
  2139  0000                     _WPUB	set	14929
  2140  0000                     _WPUE	set	14977
  2141  0000                     _WPUF	set	14993
  2142  0000                     _WPUD	set	14961
  2143  0000                     _ANSELA	set	14912
  2144  0000                     _ANSELF	set	14992
  2145  0000                     _ANSELE	set	14976
  2146  0000                     _ANSELB	set	14928
  2147  0000                     _ANSELC	set	14944
  2148  0000                     _ANSELD	set	14960
  2149  0000                     _DMA2SSA	set	15321
  2150  0000                     _DMA1SSA	set	15353
  2151  0000                     _DMA2DSZ	set	15310
  2152  0000                     _DMA2SSZ	set	15319
  2153  0000                     _DMA2DSA	set	15312
  2154  0000                     _DMA1DSZ	set	15342
  2155  0000                     _DMA1SSZ	set	15351
  2156  0000                     _DMA1DSA	set	15344
  2157  0000                     _DMA2CON0bits	set	15324
  2158  0000                     _DMA2CON1bits	set	15325
  2159  0000                     _DMA1CON0bits	set	15356
  2160  0000                     _DMA1CON1bits	set	15357
  2161  0000                     _DMA2CON0	set	15324
  2162  0000                     _DMA2AIRQ	set	15326
  2163  0000                     _DMA2SIRQ	set	15327
  2164  0000                     _DMA2CON1	set	15325
  2165  0000                     _DMA1CON0	set	15356
  2166  0000                     _DMA1AIRQ	set	15358
  2167  0000                     _DMA1SIRQ	set	15359
  2168  0000                     _DMA1CON1	set	15357
  2169  0000                     _CLKRCON	set	15589
  2170  0000                     _CLKRCLK	set	15590
  2171  0000                     _SPI1INTFbits	set	15642
  2172  0000                     _SPI1RXB	set	15632
  2173  0000                     _SPI1TXB	set	15633
  2174  0000                     _SPI1TCNTL	set	15634
  2175  0000                     _SPI1CON0	set	15636
  2176  0000                     _SPI1CLK	set	15644
  2177  0000                     _SPI1BAUD	set	15641
  2178  0000                     _SPI1CON2	set	15638
  2179  0000                     _SPI1CON1	set	15637
  2180  0000                     _U2RXB	set	15824
  2181  0000                     _U2TXB	set	15826
  2182  0000                     _U2ERRIE	set	15842
  2183  0000                     _U2ERRIR	set	15841
  2184  0000                     _U2UIR	set	15840
  2185  0000                     _U2FIFO	set	15839
  2186  0000                     _U2BRGH	set	15838
  2187  0000                     _U2BRGL	set	15837
  2188  0000                     _U2CON2	set	15836
  2189  0000                     _U2CON1	set	15835
  2190  0000                     _U2CON0	set	15834
  2191  0000                     _U2P3L	set	15832
  2192  0000                     _U2P2L	set	15830
  2193  0000                     _U2P1L	set	15828
  2194  0000                     _U1RXB	set	15848
  2195  0000                     _U1ERRIE	set	15866
  2196  0000                     _U1ERRIR	set	15865
  2197  0000                     _U1UIR	set	15864
  2198  0000                     _U1FIFO	set	15863
  2199  0000                     _U1BRGH	set	15862
  2200  0000                     _U1BRGL	set	15861
  2201  0000                     _U1CON2	set	15860
  2202  0000                     _U1CON1	set	15859
  2203  0000                     _U1CON0	set	15858
  2204  0000                     _U1P3H	set	15857
  2205  0000                     _U1P3L	set	15856
  2206  0000                     _U1P2H	set	15855
  2207  0000                     _U1P2L	set	15854
  2208  0000                     _U1P1H	set	15853
  2209  0000                     _U1P1L	set	15852
  2210  0000                     _FVRCON	set	16065
  2211  0000                     _ADFLTRL	set	16102
  2212  0000                     _ADFLTRH	set	16103
  2213  0000                     _ADCON0bits	set	16120
  2214  0000                     _ADCON0	set	16120
  2215  0000                     _ADCLK	set	16127
  2216  0000                     _ADACT	set	16126
  2217  0000                     _ADREF	set	16125
  2218  0000                     _ADSTAT	set	16124
  2219  0000                     _ADCON3	set	16123
  2220  0000                     _ADCON2	set	16122
  2221  0000                     _ADCON1	set	16121
  2222  0000                     _ADPREH	set	16119
  2223  0000                     _ADPREL	set	16118
  2224  0000                     _ADCAP	set	16117
  2225  0000                     _ADACQH	set	16116
  2226  0000                     _ADACQL	set	16115
  2227  0000                     _ADPCH	set	16113
  2228  0000                     _ADRPT	set	16108
  2229  0000                     _ADACCU	set	16106
  2230  0000                     _ADSTPTH	set	16101
  2231  0000                     _ADSTPTL	set	16100
  2232  0000                     _ADUTHH	set	16097
  2233  0000                     _ADUTHL	set	16096
  2234  0000                     _ADLTHH	set	16095
  2235  0000                     _ADLTHL	set	16094
  2236  0000                     _CCPTMRS1bits	set	16223
  2237  0000                     _PORTFbits	set	16335
  2238  0000                     _LATFbits	set	16319
  2239  0000                     _LATCbits	set	16316
  2240  0000                     _LATDbits	set	16317
  2241  0000                     _PORTBbits	set	16331
  2242  0000                     _T3CONbits	set	16294
  2243  0000                     _T3CON	set	16294
  2244  0000                     _TMR3L	set	16292
  2245  0000                     _TMR3H	set	16293
  2246  0000                     _T3CLK	set	16297
  2247  0000                     _T3GATE	set	16296
  2248  0000                     _T3GCON	set	16295
  2249  0000                     _T2CON	set	16300
  2250  0000                     _T2TMR	set	16298
  2251  0000                     _T2PR	set	16299
  2252  0000                     _T2RST	set	16303
  2253  0000                     _T2HLT	set	16301
  2254  0000                     _T2CLKCON	set	16302
  2255  0000                     _PWM8DCL	set	16224
  2256  0000                     _PWM8DCH	set	16225
  2257  0000                     _PWM8CON	set	16226
  2258  0000                     _LATEbits	set	16318
  2259  0000                     _T5CONbits	set	16282
  2260  0000                     _T5CON	set	16282
  2261  0000                     _TMR5L	set	16280
  2262  0000                     _TMR5H	set	16281
  2263  0000                     _T5CLK	set	16285
  2264  0000                     _T5GATE	set	16284
  2265  0000                     _T5GCON	set	16283
  2266  0000                     _T6CON	set	16276
  2267  0000                     _T6TMR	set	16274
  2268  0000                     _T6PR	set	16275
  2269  0000                     _T6RST	set	16279
  2270  0000                     _T6HLT	set	16277
  2271  0000                     _T6CLKCON	set	16278
  2272  0000                     _TRISD	set	16325
  2273  0000                     _TRISC	set	16324
  2274  0000                     _TRISB	set	16323
  2275  0000                     _TRISA	set	16322
  2276  0000                     _TRISF	set	16327
  2277  0000                     _TRISE	set	16326
  2278  0000                     _LATC	set	16316
  2279  0000                     _LATB	set	16315
  2280  0000                     _LATF	set	16319
  2281  0000                     _LATA	set	16314
  2282  0000                     _LATD	set	16317
  2283  0000                     _LATE	set	16318
  2284  0000                     _IVTLOCKbits	set	16340
  2285  0000                     _IVTLOCK	set	16340
  2286  0000                     _INTCON0bits	set	16338
  2287  0000                     _GIE	set	130711
  2288  00FC53                     STR_65:
  2289                           
  2290                           ; BSR set to: 57
  2291  00FC53  20                 	db	32
  2292  00FC54  25                 	db	37
  2293  00FC55  63                 	db	99	;'c'
  2294  00FC56  20                 	db	32
  2295  00FC57  2C                 	db	44
  2296  00FC58  25                 	db	37
  2297  00FC59  6C                 	db	108	;'l'
  2298  00FC5A  75                 	db	117	;'u'
  2299  00FC5B  2C                 	db	44
  2300  00FC5C  25                 	db	37
  2301  00FC5D  34                 	db	52	;'4'
  2302  00FC5E  2E                 	db	46
  2303  00FC5F  34                 	db	52	;'4'
  2304  00FC60  66                 	db	102	;'f'
  2305  00FC61  2C                 	db	44
  2306  00FC62  25                 	db	37
  2307  00FC63  34                 	db	52	;'4'
  2308  00FC64  2E                 	db	46
  2309  00FC65  34                 	db	52	;'4'
  2310  00FC66  66                 	db	102	;'f'
  2311  00FC67  2C                 	db	44
  2312  00FC68  25                 	db	37
  2313  00FC69  34                 	db	52	;'4'
  2314  00FC6A  2E                 	db	46
  2315  00FC6B  34                 	db	52	;'4'
  2316  00FC6C  66                 	db	102	;'f'
  2317  00FC6D  2C                 	db	44
  2318  00FC6E  25                 	db	37
  2319  00FC6F  34                 	db	52	;'4'
  2320  00FC70  2E                 	db	46
  2321  00FC71  34                 	db	52	;'4'
  2322  00FC72  66                 	db	102	;'f'
  2323  00FC73  2C                 	db	44
  2324  00FC74  25                 	db	37
  2325  00FC75  34                 	db	52	;'4'
  2326  00FC76  2E                 	db	46
  2327  00FC77  33                 	db	51	;'3'
  2328  00FC78  66                 	db	102	;'f'
  2329  00FC79  2C                 	db	44
  2330  00FC7A  25                 	db	37
  2331  00FC7B  34                 	db	52	;'4'
  2332  00FC7C  2E                 	db	46
  2333  00FC7D  33                 	db	51	;'3'
  2334  00FC7E  66                 	db	102	;'f'
  2335  00FC7F  2C                 	db	44
  2336  00FC80  25                 	db	37
  2337  00FC81  34                 	db	52	;'4'
  2338  00FC82  2E                 	db	46
  2339  00FC83  33                 	db	51	;'3'
  2340  00FC84  66                 	db	102	;'f'
  2341  00FC85  2C                 	db	44
  2342  00FC86  25                 	db	37
  2343  00FC87  34                 	db	52	;'4'
  2344  00FC88  2E                 	db	46
  2345  00FC89  33                 	db	51	;'3'
  2346  00FC8A  66                 	db	102	;'f'
  2347  00FC8B  2C                 	db	44
  2348  00FC8C  25                 	db	37
  2349  00FC8D  34                 	db	52	;'4'
  2350  00FC8E  2E                 	db	46
  2351  00FC8F  33                 	db	51	;'3'
  2352  00FC90  66                 	db	102	;'f'
  2353  00FC91  2C                 	db	44
  2354  00FC92  25                 	db	37
  2355  00FC93  34                 	db	52	;'4'
  2356  00FC94  2E                 	db	46
  2357  00FC95  33                 	db	51	;'3'
  2358  00FC96  66                 	db	102	;'f'
  2359  00FC97  2C                 	db	44
  2360  00FC98  25                 	db	37
  2361  00FC99  64                 	db	100	;'d'
  2362  00FC9A  2C                 	db	44
  2363  00FC9B  25                 	db	37
  2364  00FC9C  64                 	db	100	;'d'
  2365  00FC9D  2C                 	db	44
  2366  00FC9E  25                 	db	37
  2367  00FC9F  32                 	db	50	;'2'
  2368  00FCA0  2E                 	db	46
  2369  00FCA1  36                 	db	54	;'6'
  2370  00FCA2  66                 	db	102	;'f'
  2371  00FCA3  2C                 	db	44
  2372  00FCA4  25                 	db	37
  2373  00FCA5  34                 	db	52	;'4'
  2374  00FCA6  2E                 	db	46
  2375  00FCA7  33                 	db	51	;'3'
  2376  00FCA8  66                 	db	102	;'f'
  2377  00FCA9  2C                 	db	44
  2378  00FCAA  25                 	db	37
  2379  00FCAB  64                 	db	100	;'d'
  2380  00FCAC  2C                 	db	44
  2381  00FCAD  25                 	db	37
  2382  00FCAE  64                 	db	100	;'d'
  2383  00FCAF  2C                 	db	44
  2384  00FCB0  25                 	db	37
  2385  00FCB1  6C                 	db	108	;'l'
  2386  00FCB2  75                 	db	117	;'u'
  2387  00FCB3  2C                 	db	44
  2388  00FCB4  25                 	db	37
  2389  00FCB5  6C                 	db	108	;'l'
  2390  00FCB6  75                 	db	117	;'u'
  2391  00FCB7  0D                 	db	13
  2392  00FCB8  0A                 	db	10
  2393  00FCB9  00                 	db	0
  2394  00FCBA                     STR_17:
  2395                           
  2396                           ; BSR set to: 57
  2397  00FCBA  52                 	db	82	;'R'
  2398  00FCBB  31                 	db	49	;'1'
  2399  00FCBC  20                 	db	32
  2400  00FCBD  25                 	db	37
  2401  00FCBE  32                 	db	50	;'2'
  2402  00FCBF  2E                 	db	46
  2403  00FCC0  33                 	db	51	;'3'
  2404  00FCC1  66                 	db	102	;'f'
  2405  00FCC2  20                 	db	32
  2406  00FCC3  25                 	db	37
  2407  00FCC4  33                 	db	51	;'3'
  2408  00FCC5  2E                 	db	46
  2409  00FCC6  34                 	db	52	;'4'
  2410  00FCC7  66                 	db	102	;'f'
  2411  00FCC8  20                 	db	32
  2412  00FCC9  20                 	db	32
  2413  00FCCA  20                 	db	32
  2414  00FCCB  20                 	db	32
  2415  00FCCC  20                 	db	32
  2416  00FCCD  20                 	db	32
  2417  00FCCE  20                 	db	32
  2418  00FCCF  20                 	db	32
  2419  00FCD0  20                 	db	32
  2420  00FCD1  20                 	db	32
  2421  00FCD2  20                 	db	32
  2422  00FCD3  00                 	db	0
  2423  00FCD4                     STR_18:
  2424                           
  2425                           ; BSR set to: 57
  2426  00FCD4  52                 	db	82	;'R'
  2427  00FCD5  32                 	db	50	;'2'
  2428  00FCD6  20                 	db	32
  2429  00FCD7  25                 	db	37
  2430  00FCD8  32                 	db	50	;'2'
  2431  00FCD9  2E                 	db	46
  2432  00FCDA  33                 	db	51	;'3'
  2433  00FCDB  66                 	db	102	;'f'
  2434  00FCDC  20                 	db	32
  2435  00FCDD  25                 	db	37
  2436  00FCDE  33                 	db	51	;'3'
  2437  00FCDF  2E                 	db	46
  2438  00FCE0  34                 	db	52	;'4'
  2439  00FCE1  66                 	db	102	;'f'
  2440  00FCE2  20                 	db	32
  2441  00FCE3  20                 	db	32
  2442  00FCE4  20                 	db	32
  2443  00FCE5  20                 	db	32
  2444  00FCE6  20                 	db	32
  2445  00FCE7  20                 	db	32
  2446  00FCE8  20                 	db	32
  2447  00FCE9  20                 	db	32
  2448  00FCEA  20                 	db	32
  2449  00FCEB  20                 	db	32
  2450  00FCEC  20                 	db	32
  2451  00FCED  00                 	db	0
  2452  00FCEE                     
  2453                           ; BSR set to: 57
  2454  00FCEE  20                 	db	32
  2455  00FCEF  4D                 	db	77	;'M'
  2456  00FCF0  65                 	db	101	;'e'
  2457  00FCF1  73                 	db	115	;'s'
  2458  00FCF2  67                 	db	103	;'g'
  2459  00FCF3  20                 	db	32
  2460  00FCF4  25                 	db	37
  2461  00FCF5  64                 	db	100	;'d'
  2462  00FCF6  20                 	db	32
  2463  00FCF7  53                 	db	83	;'S'
  2464  00FCF8  74                 	db	116	;'t'
  2465  00FCF9  61                 	db	97	;'a'
  2466  00FCFA  63                 	db	99	;'c'
  2467  00FCFB  6B                 	db	107	;'k'
  2468  00FCFC  20                 	db	32
  2469  00FCFD  25                 	db	37
  2470  00FCFE  64                 	db	100	;'d'
  2471  00FCFF  20                 	db	32
  2472  00FD00  20                 	db	32
  2473  00FD01  20                 	db	32
  2474  00FD02  20                 	db	32
  2475  00FD03  20                 	db	32
  2476  00FD04  20                 	db	32
  2477  00FD05  00                 	db	0
  2478  00FD06                     STR_9:
  2479                           
  2480                           ; BSR set to: 57
  2481  00FD06  53                 	db	83	;'S'
  2482  00FD07  20                 	db	32
  2483  00FD08  53                 	db	83	;'S'
  2484  00FD09  25                 	db	37
  2485  00FD0A  63                 	db	99	;'c'
  2486  00FD0B  43                 	db	67	;'C'
  2487  00FD0C  20                 	db	32
  2488  00FD0D  25                 	db	37
  2489  00FD0E  64                 	db	100	;'d'
  2490  00FD0F  20                 	db	32
  2491  00FD10  25                 	db	37
  2492  00FD11  32                 	db	50	;'2'
  2493  00FD12  2E                 	db	46
  2494  00FD13  34                 	db	52	;'4'
  2495  00FD14  66                 	db	102	;'f'
  2496  00FD15  20                 	db	32
  2497  00FD16  20                 	db	32
  2498  00FD17  20                 	db	32
  2499  00FD18  20                 	db	32
  2500  00FD19  20                 	db	32
  2501  00FD1A  20                 	db	32
  2502  00FD1B  20                 	db	32
  2503  00FD1C  00                 	db	0
  2504  00FD1D                     STR_16:
  2505                           
  2506                           ; BSR set to: 57
  2507  00FD1D  45                 	db	69	;'E'
  2508  00FD1E  53                 	db	83	;'S'
  2509  00FD1F  52                 	db	82	;'R'
  2510  00FD20  20                 	db	32
  2511  00FD21  20                 	db	32
  2512  00FD22  25                 	db	37
  2513  00FD23  32                 	db	50	;'2'
  2514  00FD24  2E                 	db	46
  2515  00FD25  36                 	db	54	;'6'
  2516  00FD26  66                 	db	102	;'f'
  2517  00FD27  20                 	db	32
  2518  00FD28  20                 	db	32
  2519  00FD29  20                 	db	32
  2520  00FD2A  20                 	db	32
  2521  00FD2B  20                 	db	32
  2522  00FD2C  20                 	db	32
  2523  00FD2D  20                 	db	32
  2524  00FD2E  20                 	db	32
  2525  00FD2F  20                 	db	32
  2526  00FD30  20                 	db	32
  2527  00FD31  20                 	db	32
  2528  00FD32  00                 	db	0
  2529  00FD33                     STR_10:
  2530                           
  2531                           ; BSR set to: 57
  2532  00FD33  53                 	db	83	;'S'
  2533  00FD34  74                 	db	116	;'t'
  2534  00FD35  61                 	db	97	;'a'
  2535  00FD36  74                 	db	116	;'t'
  2536  00FD37  69                 	db	105	;'i'
  2537  00FD38  63                 	db	99	;'c'
  2538  00FD39  20                 	db	32
  2539  00FD3A  53                 	db	83	;'S'
  2540  00FD3B  4F                 	db	79	;'O'
  2541  00FD3C  43                 	db	67	;'C'
  2542  00FD3D  20                 	db	32
  2543  00FD3E  25                 	db	37
  2544  00FD3F  64                 	db	100	;'d'
  2545  00FD40  20                 	db	32
  2546  00FD41  20                 	db	32
  2547  00FD42  20                 	db	32
  2548  00FD43  20                 	db	32
  2549  00FD44  20                 	db	32
  2550  00FD45  20                 	db	32
  2551  00FD46  20                 	db	32
  2552  00FD47  20                 	db	32
  2553  00FD48  00                 	db	0
  2554  00FD49                     STR_11:
  2555                           
  2556                           ; BSR set to: 57
  2557  00FD49  42                 	db	66	;'B'
  2558  00FD4A  61                 	db	97	;'a'
  2559  00FD4B  74                 	db	116	;'t'
  2560  00FD4C  74                 	db	116	;'t'
  2561  00FD4D  65                 	db	101	;'e'
  2562  00FD4E  72                 	db	114	;'r'
  2563  00FD4F  79                 	db	121	;'y'
  2564  00FD50  20                 	db	32
  2565  00FD51  41                 	db	65	;'A'
  2566  00FD52  68                 	db	104	;'h'
  2567  00FD53  20                 	db	32
  2568  00FD54  25                 	db	37
  2569  00FD55  33                 	db	51	;'3'
  2570  00FD56  2E                 	db	46
  2571  00FD57  32                 	db	50	;'2'
  2572  00FD58  66                 	db	102	;'f'
  2573  00FD59  20                 	db	32
  2574  00FD5A  20                 	db	32
  2575  00FD5B  20                 	db	32
  2576  00FD5C  20                 	db	32
  2577  00FD5D  20                 	db	32
  2578  00FD5E  00                 	db	0
  2579  00FD5F                     STR_15:
  2580                           
  2581                           ; BSR set to: 57
  2582  00FD5F  43                 	db	67	;'C'
  2583  00FD60  68                 	db	104	;'h'
  2584  00FD61  65                 	db	101	;'e'
  2585  00FD62  63                 	db	99	;'c'
  2586  00FD63  6B                 	db	107	;'k'
  2587  00FD64  69                 	db	105	;'i'
  2588  00FD65  6E                 	db	110	;'n'
  2589  00FD66  67                 	db	103	;'g'
  2590  00FD67  20                 	db	32
  2591  00FD68  25                 	db	37
  2592  00FD69  63                 	db	99	;'c'
  2593  00FD6A  20                 	db	32
  2594  00FD6B  25                 	db	37
  2595  00FD6C  63                 	db	99	;'c'
  2596  00FD6D  20                 	db	32
  2597  00FD6E  20                 	db	32
  2598  00FD6F  20                 	db	32
  2599  00FD70  20                 	db	32
  2600  00FD71  20                 	db	32
  2601  00FD72  20                 	db	32
  2602  00FD73  00                 	db	0
  2603  00FD74                     STR_37:
  2604                           
  2605                           ; BSR set to: 57
  2606  00FD74  45                 	db	69	;'E'
  2607  00FD75  53                 	db	83	;'S'
  2608  00FD76  52                 	db	82	;'R'
  2609  00FD77  20                 	db	32
  2610  00FD78  20                 	db	32
  2611  00FD79  25                 	db	37
  2612  00FD7A  32                 	db	50	;'2'
  2613  00FD7B  2E                 	db	46
  2614  00FD7C  36                 	db	54	;'6'
  2615  00FD7D  66                 	db	102	;'f'
  2616  00FD7E  20                 	db	32
  2617  00FD7F  20                 	db	32
  2618  00FD80  20                 	db	32
  2619  00FD81  20                 	db	32
  2620  00FD82  20                 	db	32
  2621  00FD83  20                 	db	32
  2622  00FD84  20                 	db	32
  2623  00FD85  20                 	db	32
  2624  00FD86  20                 	db	32
  2625  00FD87  00                 	db	0
  2626  00FD88                     STR_36:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FD88  53                 	db	83	;'S'
  2630  00FD89  25                 	db	37
  2631  00FD8A  63                 	db	99	;'c'
  2632  00FD8B  43                 	db	67	;'C'
  2633  00FD8C  20                 	db	32
  2634  00FD8D  25                 	db	37
  2635  00FD8E  64                 	db	100	;'d'
  2636  00FD8F  20                 	db	32
  2637  00FD90  52                 	db	82	;'R'
  2638  00FD91  55                 	db	85	;'U'
  2639  00FD92  4E                 	db	78	;'N'
  2640  00FD93  20                 	db	32
  2641  00FD94  25                 	db	37
  2642  00FD95  64                 	db	100	;'d'
  2643  00FD96  20                 	db	32
  2644  00FD97  20                 	db	32
  2645  00FD98  20                 	db	32
  2646  00FD99  20                 	db	32
  2647  00FD9A  20                 	db	32
  2648  00FD9B  00                 	db	0
  2649  00FD9C                     STR_25:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FD9C  50                 	db	80	;'P'
  2653  00FD9D  56                 	db	86	;'V'
  2654  00FD9E  20                 	db	32
  2655  00FD9F  25                 	db	37
  2656  00FDA0  63                 	db	99	;'c'
  2657  00FDA1  20                 	db	32
  2658  00FDA2  57                 	db	87	;'W'
  2659  00FDA3  48                 	db	72	;'H'
  2660  00FDA4  20                 	db	32
  2661  00FDA5  25                 	db	37
  2662  00FDA6  33                 	db	51	;'3'
  2663  00FDA7  2E                 	db	46
  2664  00FDA8  32                 	db	50	;'2'
  2665  00FDA9  66                 	db	102	;'f'
  2666  00FDAA  20                 	db	32
  2667  00FDAB  20                 	db	32
  2668  00FDAC  20                 	db	32
  2669  00FDAD  20                 	db	32
  2670  00FDAE  20                 	db	32
  2671  00FDAF  00                 	db	0
  2672  00FDB0                     STR_34:
  2673                           
  2674                           ; BSR set to: 57
  2675  00FDB0  42                 	db	66	;'B'
  2676  00FDB1  41                 	db	65	;'A'
  2677  00FDB2  54                 	db	84	;'T'
  2678  00FDB3  54                 	db	84	;'T'
  2679  00FDB4  20                 	db	32
  2680  00FDB5  50                 	db	80	;'P'
  2681  00FDB6  57                 	db	87	;'W'
  2682  00FDB7  52                 	db	82	;'R'
  2683  00FDB8  20                 	db	32
  2684  00FDB9  25                 	db	37
  2685  00FDBA  33                 	db	51	;'3'
  2686  00FDBB  2E                 	db	46
  2687  00FDBC  32                 	db	50	;'2'
  2688  00FDBD  66                 	db	102	;'f'
  2689  00FDBE  20                 	db	32
  2690  00FDBF  20                 	db	32
  2691  00FDC0  20                 	db	32
  2692  00FDC1  20                 	db	32
  2693  00FDC2  20                 	db	32
  2694  00FDC3  00                 	db	0
  2695  00FDC4                     STR_38:
  2696                           
  2697                           ; BSR set to: 57
  2698  00FDC4  52                 	db	82	;'R'
  2699  00FDC5  31                 	db	49	;'1'
  2700  00FDC6  20                 	db	32
  2701  00FDC7  25                 	db	37
  2702  00FDC8  32                 	db	50	;'2'
  2703  00FDC9  2E                 	db	46
  2704  00FDCA  33                 	db	51	;'3'
  2705  00FDCB  66                 	db	102	;'f'
  2706  00FDCC  20                 	db	32
  2707  00FDCD  25                 	db	37
  2708  00FDCE  33                 	db	51	;'3'
  2709  00FDCF  2E                 	db	46
  2710  00FDD0  34                 	db	52	;'4'
  2711  00FDD1  66                 	db	102	;'f'
  2712  00FDD2  20                 	db	32
  2713  00FDD3  20                 	db	32
  2714  00FDD4  20                 	db	32
  2715  00FDD5  20                 	db	32
  2716  00FDD6  20                 	db	32
  2717  00FDD7  00                 	db	0
  2718  00FDD8                     STR_39:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FDD8  52                 	db	82	;'R'
  2722  00FDD9  32                 	db	50	;'2'
  2723  00FDDA  20                 	db	32
  2724  00FDDB  25                 	db	37
  2725  00FDDC  32                 	db	50	;'2'
  2726  00FDDD  2E                 	db	46
  2727  00FDDE  33                 	db	51	;'3'
  2728  00FDDF  66                 	db	102	;'f'
  2729  00FDE0  20                 	db	32
  2730  00FDE1  25                 	db	37
  2731  00FDE2  33                 	db	51	;'3'
  2732  00FDE3  2E                 	db	46
  2733  00FDE4  34                 	db	52	;'4'
  2734  00FDE5  66                 	db	102	;'f'
  2735  00FDE6  20                 	db	32
  2736  00FDE7  20                 	db	32
  2737  00FDE8  20                 	db	32
  2738  00FDE9  20                 	db	32
  2739  00FDEA  20                 	db	32
  2740  00FDEB  00                 	db	0
  2741  00FDEC                     STR_22:
  2742                           
  2743                           ; BSR set to: 57
  2744  00FDEC  50                 	db	80	;'P'
  2745  00FDED  56                 	db	86	;'V'
  2746  00FDEE  20                 	db	32
  2747  00FDEF  25                 	db	37
  2748  00FDF0  63                 	db	99	;'c'
  2749  00FDF1  20                 	db	32
  2750  00FDF2  50                 	db	80	;'P'
  2751  00FDF3  57                 	db	87	;'W'
  2752  00FDF4  52                 	db	82	;'R'
  2753  00FDF5  20                 	db	32
  2754  00FDF6  25                 	db	37
  2755  00FDF7  33                 	db	51	;'3'
  2756  00FDF8  2E                 	db	46
  2757  00FDF9  32                 	db	50	;'2'
  2758  00FDFA  66                 	db	102	;'f'
  2759  00FDFB  20                 	db	32
  2760  00FDFC  20                 	db	32
  2761  00FDFD  20                 	db	32
  2762  00FDFE  20                 	db	32
  2763  00FDFF  00                 	db	0
  2764  00FE00                     STR_35:
  2765                           
  2766                           ; BSR set to: 57
  2767  00FE00  42                 	db	66	;'B'
  2768  00FE01  41                 	db	65	;'A'
  2769  00FE02  48                 	db	72	;'H'
  2770  00FE03  20                 	db	32
  2771  00FE04  25                 	db	37
  2772  00FE05  33                 	db	51	;'3'
  2773  00FE06  2E                 	db	46
  2774  00FE07  32                 	db	50	;'2'
  2775  00FE08  66                 	db	102	;'f'
  2776  00FE09  20                 	db	32
  2777  00FE0A  50                 	db	80	;'P'
  2778  00FE0B  25                 	db	37
  2779  00FE0C  33                 	db	51	;'3'
  2780  00FE0D  2E                 	db	46
  2781  00FE0E  32                 	db	50	;'2'
  2782  00FE0F  66                 	db	102	;'f'
  2783  00FE10  20                 	db	32
  2784  00FE11  20                 	db	32
  2785  00FE12  20                 	db	32
  2786  00FE13  00                 	db	0
  2787  00FE14                     STR_58:
  2788                           
  2789                           ; BSR set to: 57
  2790  00FE14  20                 	db	32
  2791  00FE15  20                 	db	32
  2792  00FE16  20                 	db	32
  2793  00FE17  20                 	db	32
  2794  00FE18  20                 	db	32
  2795  00FE19  20                 	db	32
  2796  00FE1A  20                 	db	32
  2797  00FE1B  20                 	db	32
  2798  00FE1C  20                 	db	32
  2799  00FE1D  20                 	db	32
  2800  00FE1E  20                 	db	32
  2801  00FE1F  20                 	db	32
  2802  00FE20  20                 	db	32
  2803  00FE21  20                 	db	32
  2804  00FE22  20                 	db	32
  2805  00FE23  20                 	db	32
  2806  00FE24  20                 	db	32
  2807  00FE25  20                 	db	32
  2808  00FE26  00                 	db	0
  2809  00FE27                     STR_48:
  2810                           
  2811                           ; BSR set to: 57
  2812  00FE27  48                 	db	72	;'H'
  2813  00FE28  45                 	db	69	;'E'
  2814  00FE29  4C                 	db	76	;'L'
  2815  00FE2A  50                 	db	80	;'P'
  2816  00FE2B  20                 	db	32
  2817  00FE2C  25                 	db	37
  2818  00FE2D  73                 	db	115	;'s'
  2819  00FE2E  20                 	db	32
  2820  00FE2F  20                 	db	32
  2821  00FE30  20                 	db	32
  2822  00FE31  20                 	db	32
  2823  00FE32  20                 	db	32
  2824  00FE33  20                 	db	32
  2825  00FE34  20                 	db	32
  2826  00FE35  20                 	db	32
  2827  00FE36  20                 	db	32
  2828  00FE37  20                 	db	32
  2829  00FE38  20                 	db	32
  2830  00FE39  00                 	db	0
  2831  00FE3A                     
  2832                           ; BSR set to: 57
  2833  00FE3A  44                 	db	68	;'D'
  2834  00FE3B  49                 	db	73	;'I'
  2835  00FE3C  53                 	db	83	;'S'
  2836  00FE3D  50                 	db	80	;'P'
  2837  00FE3E  4C                 	db	76	;'L'
  2838  00FE3F  41                 	db	65	;'A'
  2839  00FE40  59                 	db	89	;'Y'
  2840  00FE41  20                 	db	32
  2841  00FE42  25                 	db	37
  2842  00FE43  73                 	db	115	;'s'
  2843  00FE44  20                 	db	32
  2844  00FE45  20                 	db	32
  2845  00FE46  20                 	db	32
  2846  00FE47  20                 	db	32
  2847  00FE48  20                 	db	32
  2848  00FE49  20                 	db	32
  2849  00FE4A  20                 	db	32
  2850  00FE4B  20                 	db	32
  2851  00FE4C  00                 	db	0
  2852  00FE4D                     STR_31:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FE4D  42                 	db	66	;'B'
  2856  00FE4E  41                 	db	65	;'A'
  2857  00FE4F  54                 	db	84	;'T'
  2858  00FE50  20                 	db	32
  2859  00FE51  49                 	db	73	;'I'
  2860  00FE52  57                 	db	87	;'W'
  2861  00FE53  48                 	db	72	;'H'
  2862  00FE54  20                 	db	32
  2863  00FE55  25                 	db	37
  2864  00FE56  34                 	db	52	;'4'
  2865  00FE57  2E                 	db	46
  2866  00FE58  31                 	db	49	;'1'
  2867  00FE59  66                 	db	102	;'f'
  2868  00FE5A  20                 	db	32
  2869  00FE5B  20                 	db	32
  2870  00FE5C  20                 	db	32
  2871  00FE5D  20                 	db	32
  2872  00FE5E  20                 	db	32
  2873  00FE5F  00                 	db	0
  2874  00FE60                     STR_32:
  2875                           
  2876                           ; BSR set to: 57
  2877  00FE60  42                 	db	66	;'B'
  2878  00FE61  41                 	db	65	;'A'
  2879  00FE62  54                 	db	84	;'T'
  2880  00FE63  20                 	db	32
  2881  00FE64  4F                 	db	79	;'O'
  2882  00FE65  57                 	db	87	;'W'
  2883  00FE66  48                 	db	72	;'H'
  2884  00FE67  20                 	db	32
  2885  00FE68  25                 	db	37
  2886  00FE69  34                 	db	52	;'4'
  2887  00FE6A  2E                 	db	46
  2888  00FE6B  31                 	db	49	;'1'
  2889  00FE6C  66                 	db	102	;'f'
  2890  00FE6D  20                 	db	32
  2891  00FE6E  20                 	db	32
  2892  00FE6F  20                 	db	32
  2893  00FE70  20                 	db	32
  2894  00FE71  20                 	db	32
  2895  00FE72  00                 	db	0
  2896  00FE73                     STR_33:
  2897                           
  2898                           ; BSR set to: 57
  2899  00FE73  42                 	db	66	;'B'
  2900  00FE74  41                 	db	65	;'A'
  2901  00FE75  54                 	db	84	;'T'
  2902  00FE76  20                 	db	32
  2903  00FE77  54                 	db	84	;'T'
  2904  00FE78  57                 	db	87	;'W'
  2905  00FE79  48                 	db	72	;'H'
  2906  00FE7A  20                 	db	32
  2907  00FE7B  25                 	db	37
  2908  00FE7C  34                 	db	52	;'4'
  2909  00FE7D  2E                 	db	46
  2910  00FE7E  31                 	db	49	;'1'
  2911  00FE7F  66                 	db	102	;'f'
  2912  00FE80  20                 	db	32
  2913  00FE81  20                 	db	32
  2914  00FE82  20                 	db	32
  2915  00FE83  20                 	db	32
  2916  00FE84  20                 	db	32
  2917  00FE85  00                 	db	0
  2918  00FE86                     STR_27:
  2919                           
  2920                           ; BSR set to: 57
  2921  00FE86  49                 	db	73	;'I'
  2922  00FE87  4E                 	db	78	;'N'
  2923  00FE88  56                 	db	86	;'V'
  2924  00FE89  20                 	db	32
  2925  00FE8A  20                 	db	32
  2926  00FE8B  57                 	db	87	;'W'
  2927  00FE8C  48                 	db	72	;'H'
  2928  00FE8D  20                 	db	32
  2929  00FE8E  25                 	db	37
  2930  00FE8F  33                 	db	51	;'3'
  2931  00FE90  2E                 	db	46
  2932  00FE91  32                 	db	50	;'2'
  2933  00FE92  66                 	db	102	;'f'
  2934  00FE93  20                 	db	32
  2935  00FE94  20                 	db	32
  2936  00FE95  20                 	db	32
  2937  00FE96  20                 	db	32
  2938  00FE97  20                 	db	32
  2939  00FE98  00                 	db	0
  2940  00FE99                     STR_26:
  2941                           
  2942                           ; BSR set to: 57
  2943  00FE99  4C                 	db	76	;'L'
  2944  00FE9A  4F                 	db	79	;'O'
  2945  00FE9B  41                 	db	65	;'A'
  2946  00FE9C  44                 	db	68	;'D'
  2947  00FE9D  20                 	db	32
  2948  00FE9E  57                 	db	87	;'W'
  2949  00FE9F  48                 	db	72	;'H'
  2950  00FEA0  20                 	db	32
  2951  00FEA1  25                 	db	37
  2952  00FEA2  33                 	db	51	;'3'
  2953  00FEA3  2E                 	db	46
  2954  00FEA4  32                 	db	50	;'2'
  2955  00FEA5  66                 	db	102	;'f'
  2956  00FEA6  20                 	db	32
  2957  00FEA7  20                 	db	32
  2958  00FEA8  20                 	db	32
  2959  00FEA9  20                 	db	32
  2960  00FEAA  20                 	db	32
  2961  00FEAB  00                 	db	0
  2962  00FEAC                     STR_24:
  2963                           
  2964                           ; BSR set to: 57
  2965  00FEAC  49                 	db	73	;'I'
  2966  00FEAD  4E                 	db	78	;'N'
  2967  00FEAE  56                 	db	86	;'V'
  2968  00FEAF  20                 	db	32
  2969  00FEB0  20                 	db	32
  2970  00FEB1  50                 	db	80	;'P'
  2971  00FEB2  57                 	db	87	;'W'
  2972  00FEB3  52                 	db	82	;'R'
  2973  00FEB4  20                 	db	32
  2974  00FEB5  25                 	db	37
  2975  00FEB6  33                 	db	51	;'3'
  2976  00FEB7  2E                 	db	46
  2977  00FEB8  32                 	db	50	;'2'
  2978  00FEB9  66                 	db	102	;'f'
  2979  00FEBA  20                 	db	32
  2980  00FEBB  20                 	db	32
  2981  00FEBC  20                 	db	32
  2982  00FEBD  20                 	db	32
  2983  00FEBE  00                 	db	0
  2984  00FEBF                     STR_23:
  2985                           
  2986                           ; BSR set to: 57
  2987  00FEBF  4C                 	db	76	;'L'
  2988  00FEC0  4F                 	db	79	;'O'
  2989  00FEC1  41                 	db	65	;'A'
  2990  00FEC2  44                 	db	68	;'D'
  2991  00FEC3  20                 	db	32
  2992  00FEC4  50                 	db	80	;'P'
  2993  00FEC5  57                 	db	87	;'W'
  2994  00FEC6  52                 	db	82	;'R'
  2995  00FEC7  20                 	db	32
  2996  00FEC8  25                 	db	37
  2997  00FEC9  33                 	db	51	;'3'
  2998  00FECA  2E                 	db	46
  2999  00FECB  32                 	db	50	;'2'
  3000  00FECC  66                 	db	102	;'f'
  3001  00FECD  20                 	db	32
  3002  00FECE  20                 	db	32
  3003  00FECF  20                 	db	32
  3004  00FED0  20                 	db	32
  3005  00FED1  00                 	db	0
  3006  00FED2                     STR_29:
  3007                           
  3008                           ; BSR set to: 57
  3009  00FED2  42                 	db	66	;'B'
  3010  00FED3  56                 	db	86	;'V'
  3011  00FED4  20                 	db	32
  3012  00FED5  25                 	db	37
  3013  00FED6  32                 	db	50	;'2'
  3014  00FED7  2E                 	db	46
  3015  00FED8  32                 	db	50	;'2'
  3016  00FED9  66                 	db	102	;'f'
  3017  00FEDA  20                 	db	32
  3018  00FEDB  42                 	db	66	;'B'
  3019  00FEDC  41                 	db	65	;'A'
  3020  00FEDD  20                 	db	32
  3021  00FEDE  25                 	db	37
  3022  00FEDF  32                 	db	50	;'2'
  3023  00FEE0  2E                 	db	46
  3024  00FEE1  32                 	db	50	;'2'
  3025  00FEE2  66                 	db	102	;'f'
  3026  00FEE3  20                 	db	32
  3027  00FEE4  00                 	db	0
  3028  00FEE5                     STR_30:
  3029                           
  3030                           ; BSR set to: 57
  3031  00FEE5  43                 	db	67	;'C'
  3032  00FEE6  56                 	db	86	;'V'
  3033  00FEE7  20                 	db	32
  3034  00FEE8  25                 	db	37
  3035  00FEE9  32                 	db	50	;'2'
  3036  00FEEA  2E                 	db	46
  3037  00FEEB  32                 	db	50	;'2'
  3038  00FEEC  66                 	db	102	;'f'
  3039  00FEED  20                 	db	32
  3040  00FEEE  4C                 	db	76	;'L'
  3041  00FEEF  41                 	db	65	;'A'
  3042  00FEF0  20                 	db	32
  3043  00FEF1  25                 	db	37
  3044  00FEF2  32                 	db	50	;'2'
  3045  00FEF3  2E                 	db	46
  3046  00FEF4  32                 	db	50	;'2'
  3047  00FEF5  66                 	db	102	;'f'
  3048  00FEF6  20                 	db	32
  3049  00FEF7  00                 	db	0
  3050  00FEF8                     STR_28:
  3051                           
  3052                           ; BSR set to: 57
  3053  00FEF8  50                 	db	80	;'P'
  3054  00FEF9  56                 	db	86	;'V'
  3055  00FEFA  20                 	db	32
  3056  00FEFB  25                 	db	37
  3057  00FEFC  32                 	db	50	;'2'
  3058  00FEFD  2E                 	db	46
  3059  00FEFE  32                 	db	50	;'2'
  3060  00FEFF  66                 	db	102	;'f'
  3061  00FF00  20                 	db	32
  3062  00FF01  50                 	db	80	;'P'
  3063  00FF02  41                 	db	65	;'A'
  3064  00FF03  20                 	db	32
  3065  00FF04  25                 	db	37
  3066  00FF05  32                 	db	50	;'2'
  3067  00FF06  2E                 	db	46
  3068  00FF07  32                 	db	50	;'2'
  3069  00FF08  66                 	db	102	;'f'
  3070  00FF09  20                 	db	32
  3071  00FF0A  00                 	db	0
  3072  00FF0B                     STR_8:
  3073                           
  3074                           ; BSR set to: 57
  3075  00FF0B  42                 	db	66	;'B'
  3076  00FF0C  56                 	db	86	;'V'
  3077  00FF0D  20                 	db	32
  3078  00FF0E  25                 	db	37
  3079  00FF0F  32                 	db	50	;'2'
  3080  00FF10  2E                 	db	46
  3081  00FF11  34                 	db	52	;'4'
  3082  00FF12  66                 	db	102	;'f'
  3083  00FF13  20                 	db	32
  3084  00FF14  20                 	db	32
  3085  00FF15  20                 	db	32
  3086  00FF16  20                 	db	32
  3087  00FF17  20                 	db	32
  3088  00FF18  20                 	db	32
  3089  00FF19  20                 	db	32
  3090  00FF1A  20                 	db	32
  3091  00FF1B  20                 	db	32
  3092  00FF1C  00                 	db	0
  3093  00FF1D                     STR_4:
  3094                           
  3095                           ; BSR set to: 57
  3096  00FF1D  20                 	db	32
  3097  00FF1E  4E                 	db	78	;'N'
  3098  00FF1F  53                 	db	83	;'S'
  3099  00FF20  41                 	db	65	;'A'
  3100  00FF21  53                 	db	83	;'S'
  3101  00FF22  50                 	db	80	;'P'
  3102  00FF23  4F                 	db	79	;'O'
  3103  00FF24  4F                 	db	79	;'O'
  3104  00FF25  4B                 	db	75	;'K'
  3105  00FF26  20                 	db	32
  3106  00FF27  20                 	db	32
  3107  00FF28  20                 	db	32
  3108  00FF29  20                 	db	32
  3109  00FF2A  20                 	db	32
  3110  00FF2B  20                 	db	32
  3111  00FF2C  20                 	db	32
  3112  00FF2D  00                 	db	0
  3113  00FF2E                     STR_12:
  3114                           
  3115                           ; BSR set to: 57
  3116  00FF2E  42                 	db	66	;'B'
  3117  00FF2F  61                 	db	97	;'a'
  3118  00FF30  74                 	db	116	;'t'
  3119  00FF31  74                 	db	116	;'t'
  3120  00FF32  65                 	db	101	;'e'
  3121  00FF33  72                 	db	114	;'r'
  3122  00FF34  79                 	db	121	;'y'
  3123  00FF35  20                 	db	32
  3124  00FF36  45                 	db	69	;'E'
  3125  00FF37  53                 	db	83	;'S'
  3126  00FF38  52                 	db	82	;'R'
  3127  00FF39  20                 	db	32
  3128  00FF3A  20                 	db	32
  3129  00FF3B  20                 	db	32
  3130  00FF3C  20                 	db	32
  3131  00FF3D  20                 	db	32
  3132  00FF3E  00                 	db	0
  3133  00FF3F                     STR_13:
  3134                           
  3135                           ; BSR set to: 57
  3136  00FF3F  43                 	db	67	;'C'
  3137  00FF40  61                 	db	97	;'a'
  3138  00FF41  6C                 	db	108	;'l'
  3139  00FF42  63                 	db	99	;'c'
  3140  00FF43  75                 	db	117	;'u'
  3141  00FF44  6C                 	db	108	;'l'
  3142  00FF45  61                 	db	97	;'a'
  3143  00FF46  74                 	db	116	;'t'
  3144  00FF47  69                 	db	105	;'i'
  3145  00FF48  6F                 	db	111	;'o'
  3146  00FF49  6E                 	db	110	;'n'
  3147  00FF4A  20                 	db	32
  3148  00FF4B  20                 	db	32
  3149  00FF4C  20                 	db	32
  3150  00FF4D  20                 	db	32
  3151  00FF4E  20                 	db	32
  3152  00FF4F  00                 	db	0
  3153  00FF50                     STR_1:
  3154                           
  3155                           ; BSR set to: 57
  3156  00FF50  20                 	db	32
  3157  00FF51  4D                 	db	77	;'M'
  3158  00FF52  42                 	db	66	;'B'
  3159  00FF53  4D                 	db	77	;'M'
  3160  00FF54  43                 	db	67	;'C'
  3161  00FF55  20                 	db	32
  3162  00FF56  53                 	db	83	;'S'
  3163  00FF57  4F                 	db	79	;'O'
  3164  00FF58  4C                 	db	76	;'L'
  3165  00FF59  41                 	db	65	;'A'
  3166  00FF5A  52                 	db	82	;'R'
  3167  00FF5B  4D                 	db	77	;'M'
  3168  00FF5C  4F                 	db	79	;'O'
  3169  00FF5D  4E                 	db	78	;'N'
  3170  00FF5E  20                 	db	32
  3171  00FF5F  20                 	db	32
  3172  00FF60  00                 	db	0
  3173  00FF61                     STR_21:
  3174                           
  3175                           ; BSR set to: 57
  3176  00FF61  25                 	db	37
  3177  00FF62  64                 	db	100	;'d'
  3178  00FF63  20                 	db	32
  3179  00FF64  25                 	db	37
  3180  00FF65  32                 	db	50	;'2'
  3181  00FF66  2E                 	db	46
  3182  00FF67  34                 	db	52	;'4'
  3183  00FF68  66                 	db	102	;'f'
  3184  00FF69  2C                 	db	44
  3185  00FF6A  20                 	db	32
  3186  00FF6B  25                 	db	37
  3187  00FF6C  64                 	db	100	;'d'
  3188  00FF6D  20                 	db	32
  3189  00FF6E  20                 	db	32
  3190  00FF6F  20                 	db	32
  3191  00FF70  23                 	db	35
  3192  00FF71  00                 	db	0
  3193  00FF72                     STR_14:
  3194                           
  3195                           ; BSR set to: 57
  3196  00FF72  43                 	db	67	;'C'
  3197  00FF73  68                 	db	104	;'h'
  3198  00FF74  65                 	db	101	;'e'
  3199  00FF75  63                 	db	99	;'c'
  3200  00FF76  6B                 	db	107	;'k'
  3201  00FF77  20                 	db	32
  3202  00FF78  33                 	db	51	;'3'
  3203  00FF79  30                 	db	48	;'0'
  3204  00FF7A  20                 	db	32
  3205  00FF7B  73                 	db	115	;'s'
  3206  00FF7C  65                 	db	101	;'e'
  3207  00FF7D  63                 	db	99	;'c'
  3208  00FF7E  6F                 	db	111	;'o'
  3209  00FF7F  6E                 	db	110	;'n'
  3210  00FF80  64                 	db	100	;'d'
  3211  00FF81  73                 	db	115	;'s'
  3212  00FF82  00                 	db	0
  3213  00FF83                     STR_19:
  3214                           
  3215                           ; BSR set to: 57
  3216  00FF83  25                 	db	37
  3217  00FF84  64                 	db	100	;'d'
  3218  00FF85  20                 	db	32
  3219  00FF86  25                 	db	37
  3220  00FF87  32                 	db	50	;'2'
  3221  00FF88  2E                 	db	46
  3222  00FF89  34                 	db	52	;'4'
  3223  00FF8A  66                 	db	102	;'f'
  3224  00FF8B  20                 	db	32
  3225  00FF8C  20                 	db	32
  3226  00FF8D  20                 	db	32
  3227  00FF8E  25                 	db	37
  3228  00FF8F  64                 	db	100	;'d'
  3229  00FF90  20                 	db	32
  3230  00FF91  20                 	db	32
  3231  00FF92  00                 	db	0
  3232  00FF93                     STR_52:
  3233                           
  3234                           ; BSR set to: 57
  3235  00FF93  76                 	db	118	;'v'
  3236  00FF94  74                 	db	116	;'t'
  3237  00FF95  65                 	db	101	;'e'
  3238  00FF96  72                 	db	114	;'r'
  3239  00FF97  6D                 	db	109	;'m'
  3240  00FF98  20                 	db	32
  3241  00FF99  25                 	db	37
  3242  00FF9A  78                 	db	120	;'x'
  3243  00FF9B  3A                 	db	58	;':'
  3244  00FF9C  25                 	db	37
  3245  00FF9D  78                 	db	120	;'x'
  3246  00FF9E  20                 	db	32
  3247  00FF9F  20                 	db	32
  3248  00FFA0  20                 	db	32
  3249  00FFA1  00                 	db	0
  3250  00FFA2                     STR_2:
  3251                           
  3252                           ; BSR set to: 57
  3253  00FFA2  20                 	db	32
  3254  00FFA3  56                 	db	86	;'V'
  3255  00FFA4  65                 	db	101	;'e'
  3256  00FFA5  72                 	db	114	;'r'
  3257  00FFA6  73                 	db	115	;'s'
  3258  00FFA7  69                 	db	105	;'i'
  3259  00FFA8  6F                 	db	111	;'o'
  3260  00FFA9  6E                 	db	110	;'n'
  3261  00FFAA  20                 	db	32
  3262  00FFAB  25                 	db	37
  3263  00FFAC  73                 	db	115	;'s'
  3264  00FFAD  20                 	db	32
  3265  00FFAE  20                 	db	32
  3266  00FFAF  20                 	db	32
  3267  00FFB0  00                 	db	0
  3268  00FFB1                     STR_46:
  3269                           
  3270                           ; BSR set to: 57
  3271  00FFB1  44                 	db	68	;'D'
  3272  00FFB2  65                 	db	101	;'e'
  3273  00FFB3  63                 	db	99	;'c'
  3274  00FFB4  20                 	db	32
  3275  00FFB5  32                 	db	50	;'2'
  3276  00FFB6  37                 	db	55	;'7'
  3277  00FFB7  20                 	db	32
  3278  00FFB8  32                 	db	50	;'2'
  3279  00FFB9  30                 	db	48	;'0'
  3280  00FFBA  31                 	db	49	;'1'
  3281  00FFBB  39                 	db	57	;'9'
  3282  00FFBC  00                 	db	0
  3283  00FFBD                     STR_50:
  3284                           
  3285                           ; BSR set to: 57
  3286  00FFBD  25                 	db	37
  3287  00FFBE  73                 	db	115	;'s'
  3288  00FFBF  20                 	db	32
  3289  00FFC0  20                 	db	32
  3290  00FFC1  20                 	db	32
  3291  00FFC2  20                 	db	32
  3292  00FFC3  20                 	db	32
  3293  00FFC4  20                 	db	32
  3294  00FFC5  20                 	db	32
  3295  00FFC6  00                 	db	0
  3296  00FFC7                     STR_47:
  3297                           
  3298                           ; BSR set to: 57
  3299  00FFC7  30                 	db	48	;'0'
  3300  00FFC8  39                 	db	57	;'9'
  3301  00FFC9  3A                 	db	58	;':'
  3302  00FFCA  33                 	db	51	;'3'
  3303  00FFCB  30                 	db	48	;'0'
  3304  00FFCC  3A                 	db	58	;':'
  3305  00FFCD  31                 	db	49	;'1'
  3306  00FFCE  36                 	db	54	;'6'
  3307  00FFCF  00                 	db	0
  3308  00FFD0                     STR_3:
  3309                           
  3310                           ; BSR set to: 57
  3311  00FFD0  31                 	db	49	;'1'
  3312  00FFD1  2E                 	db	46
  3313  00FFD2  30                 	db	48	;'0'
  3314  00FFD3  30                 	db	48	;'0'
  3315  00FFD4  31                 	db	49	;'1'
  3316  00FFD5  00                 	db	0
  3317  00FFD6                     STR_66:
  3318                           
  3319                           ; BSR set to: 57
  3320  00FFD6  49                 	db	73	;'I'
  3321  00FFD7  4E                 	db	78	;'N'
  3322  00FFD8  46                 	db	70	;'F'
  3323  00FFD9  00                 	db	0
  3324  00FFDA                     STR_70:
  3325                           
  3326                           ; BSR set to: 57
  3327  00FFDA  4E                 	db	78	;'N'
  3328  00FFDB  41                 	db	65	;'A'
  3329  00FFDC  4E                 	db	78	;'N'
  3330  00FFDD  00                 	db	0
  3331  00FFDE                     STR_67:
  3332                           
  3333                           ; BSR set to: 57
  3334  00FFDE  69                 	db	105	;'i'
  3335  00FFDF  6E                 	db	110	;'n'
  3336  00FFE0  66                 	db	102	;'f'
  3337  00FFE1  00                 	db	0
  3338  00FFE2                     STR_71:
  3339                           
  3340                           ; BSR set to: 57
  3341  00FFE2  6E                 	db	110	;'n'
  3342  00FFE3  61                 	db	97	;'a'
  3343  00FFE4  6E                 	db	110	;'n'
  3344  00FFE5  00                 	db	0
  3345  00FFE6                     STR_97:
  3346                           
  3347                           ; BSR set to: 57
  3348  00FFE6  6C                 	db	108	;'l'
  3349  00FFE7  58                 	db	88	;'X'
  3350  00FFE8  00                 	db	0
  3351  00FFE9                     STR_74:
  3352                           
  3353                           ; BSR set to: 57
  3354  00FFE9  6C                 	db	108	;'l'
  3355  00FFEA  64                 	db	100	;'d'
  3356  00FFEB  00                 	db	0
  3357  00FFEC                     STR_83:
  3358                           
  3359                           ; BSR set to: 57
  3360  00FFEC  6C                 	db	108	;'l'
  3361  00FFED  66                 	db	102	;'f'
  3362  00FFEE  00                 	db	0
  3363  00FFEF                     STR_78:
  3364                           
  3365                           ; BSR set to: 57
  3366  00FFEF  6C                 	db	108	;'l'
  3367  00FFF0  69                 	db	105	;'i'
  3368  00FFF1  00                 	db	0
  3369  00FFF2                     STR_88:
  3370                           
  3371                           ; BSR set to: 57
  3372  00FFF2  6C                 	db	108	;'l'
  3373  00FFF3  75                 	db	117	;'u'
  3374  00FFF4  00                 	db	0
  3375  00FFF5                     STR_93:
  3376                           
  3377                           ; BSR set to: 57
  3378  00FFF5  6C                 	db	108	;'l'
  3379  00FFF6  78                 	db	120	;'x'
  3380  00FFF7  00                 	db	0
  3381  00FFF8                     STR_44:
  3382                           
  3383                           ; BSR set to: 57
  3384  00FFF8  25                 	db	37
  3385  00FFF9  63                 	db	99	;'c'
  3386  00FFFA  00                 	db	0
  3387  00FFFB                     STR_43:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FFFB  25                 	db	37
  3391  00FFFC  73                 	db	115	;'s'
  3392  00FFFD  00                 	db	0
  3393  0000                     
  3394                           ; #config settings
  3395  00FFFE  00                 	db	0	; dummy byte at the end
  3396  0000                     
  3397                           	psect	cinit
  3398  019FF2                     __pcinit:
  3399                           	opt callstack 0
  3400  019FF2                     start_initialization:
  3401                           	opt callstack 0
  3402  019FF2                     __initialization:
  3403                           	opt callstack 0
  3404                           
  3405                           ; Initialize objects allocated to BIGRAM (807 bytes)
  3406                           ; load TBLPTR registers with __pidataBIGRAM
  3407  019FF2  0E62               	movlw	low __pidataBIGRAM
  3408  019FF4  6EF6               	movwf	tblptrl,c
  3409  019FF6  0E68               	movlw	high __pidataBIGRAM
  3410  019FF8  6EF7               	movwf	tblptrh,c
  3411  019FFA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3412  019FFC  6EF8               	movwf	tblptru,c
  3413  019FFE  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3414  01A002  EE20 F327          	lfsr	2,807
  3415  01A006                     copy_data0:
  3416  01A006  0009               	tblrd		*+
  3417  01A008  006F FFD7 FFEE     	movff	tablat,postinc0
  3418  01A00E  50DD               	movf	postdec2,w,c
  3419  01A010  50D9               	movf	fsr2l,w,c
  3420  01A012  E1F9               	bnz	copy_data0
  3421  01A014  50DA               	movf	fsr2h,w,c
  3422  01A016  E1F7               	bnz	copy_data0
  3423                           
  3424                           ; Initialize objects allocated to BANK1 (239 bytes)
  3425                           ; load TBLPTR registers with __pidataBANK1
  3426  01A018  0E4E               	movlw	low __pidataBANK1
  3427  01A01A  6EF6               	movwf	tblptrl,c
  3428  01A01C  0E9C               	movlw	high __pidataBANK1
  3429  01A01E  6EF7               	movwf	tblptrh,c
  3430  01A020  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3431  01A022  6EF8               	movwf	tblptru,c
  3432  01A024  EE00  F100         	lfsr	0,__pdataBANK1
  3433  01A028  EE20 F0EF          	lfsr	2,239
  3434  01A02C                     copy_data1:
  3435  01A02C  0009               	tblrd		*+
  3436  01A02E  006F FFD7 FFEE     	movff	tablat,postinc0
  3437  01A034  50DD               	movf	postdec2,w,c
  3438  01A036  50D9               	movf	fsr2l,w,c
  3439  01A038  E1F9               	bnz	copy_data1
  3440                           
  3441                           ; Initialize objects allocated to BANK0 (14 bytes)
  3442                           ; load TBLPTR registers with __pidataBANK0
  3443  01A03A  0E1E               	movlw	low __pidataBANK0
  3444  01A03C  6EF6               	movwf	tblptrl,c
  3445  01A03E  0EBD               	movlw	high __pidataBANK0
  3446  01A040  6EF7               	movwf	tblptrh,c
  3447  01A042  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3448  01A044  6EF8               	movwf	tblptru,c
  3449  01A046  EE00  F0F0         	lfsr	0,__pdataBANK0
  3450  01A04A  EE20 F00E          	lfsr	2,14
  3451  01A04E                     copy_data2:
  3452  01A04E  0009               	tblrd		*+
  3453  01A050  006F FFD7 FFEE     	movff	tablat,postinc0
  3454  01A056  50DD               	movf	postdec2,w,c
  3455  01A058  50D9               	movf	fsr2l,w,c
  3456  01A05A  E1F9               	bnz	copy_data2
  3457                           
  3458                           ; Clear objects allocated to BIGRAM (482 bytes)
  3459  01A05C  EE02  F026         	lfsr	0,__pbssBIGRAM
  3460  01A060  EE20 F1E2          	lfsr	2,482
  3461  01A064                     clear_0:
  3462  01A064  6AEE               	clrf	postinc0,c
  3463  01A066  50DD               	movf	postdec2,w,c
  3464  01A068  50D9               	movf	fsr2l,w,c
  3465  01A06A  E1FC               	bnz	clear_0
  3466  01A06C  50DA               	movf	fsr2h,w,c
  3467  01A06E  E1FA               	bnz	clear_0
  3468                           
  3469                           ; Clear objects allocated to BANK4 (255 bytes)
  3470  01A070  EE01  F000         	lfsr	0,__pbssBANK4
  3471  01A074  EE20 F0FF          	lfsr	2,255
  3472  01A078                     clear_1:
  3473  01A078  6AEE               	clrf	postinc0,c
  3474  01A07A  50DD               	movf	postdec2,w,c
  3475  01A07C  50D9               	movf	fsr2l,w,c
  3476  01A07E  E1FC               	bnz	clear_1
  3477  01A080  50DA               	movf	fsr2h,w,c
  3478  01A082  E1FA               	bnz	clear_1
  3479                           
  3480                           ; Clear objects allocated to BANK3 (198 bytes)
  3481  01A084  EE00  F300         	lfsr	0,__pbssBANK3
  3482  01A088  0EC6               	movlw	198
  3483  01A08A                     clear_2:
  3484  01A08A  6AEE               	clrf	postinc0,c
  3485  01A08C  06E8               	decf	wreg,f,c
  3486  01A08E  E1FD               	bnz	clear_2
  3487                           
  3488                           ; Clear objects allocated to BANK2 (231 bytes)
  3489  01A090  EE00  F200         	lfsr	0,__pbssBANK2
  3490  01A094  0EE7               	movlw	231
  3491  01A096                     clear_3:
  3492  01A096  6AEE               	clrf	postinc0,c
  3493  01A098  06E8               	decf	wreg,f,c
  3494  01A09A  E1FD               	bnz	clear_3
  3495                           
  3496                           ; Clear objects allocated to BANK0 (119 bytes)
  3497  01A09C  EE00  F060         	lfsr	0,__pbssBANK0
  3498  01A0A0  0E77               	movlw	119
  3499  01A0A2                     clear_4:
  3500  01A0A2  6AEE               	clrf	postinc0,c
  3501  01A0A4  06E8               	decf	wreg,f,c
  3502  01A0A6  E1FD               	bnz	clear_4
  3503                           
  3504                           ; Clear objects allocated to COMRAM (14 bytes)
  3505  01A0A8  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3506  01A0AC  0E0E               	movlw	14
  3507  01A0AE                     clear_5:
  3508  01A0AE  6AEE               	clrf	postinc0,c
  3509  01A0B0  06E8               	decf	wreg,f,c
  3510  01A0B2  E1FD               	bnz	clear_5
  3511                           
  3512                           ;
  3513                           ; Setup IVTBASE
  3514                           ;
  3515  01A0B4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3516  01A0B6  6ED5               	movwf	213,c
  3517  01A0B8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3518  01A0BA  6ED6               	movwf	214,c
  3519  01A0BC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3520  01A0BE  6ED7               	movwf	215,c
  3521  01A0C0                     end_of_initialization:
  3522                           	opt callstack 0
  3523  01A0C0                     __end_of__initialization:
  3524                           	opt callstack 0
  3525  01A0C0  0100               	movlb	0
  3526  01A0C2  EF22  F089         	goto	_main	;jump to C main() function
  3527                           
  3528                           	psect	bssCOMRAM
  3529  00003A                     __pbssCOMRAM:
  3530                           	opt callstack 0
  3531  00003A                     _width:
  3532                           	opt callstack 0
  3533  00003A                     	ds	2
  3534  00003C                     _prec:
  3535                           	opt callstack 0
  3536  00003C                     	ds	2
  3537  00003E                     _flags:
  3538                           	opt callstack 0
  3539  00003E                     	ds	2
  3540  000040                     esr_check@esr_state:
  3541                           	opt callstack 0
  3542  000040                     	ds	1
  3543  000041                     calc_bsoc@log_update_wait:
  3544                           	opt callstack 0
  3545  000041                     	ds	1
  3546  000042                     check_day_time@day_delay:
  3547                           	opt callstack 0
  3548  000042                     	ds	1
  3549  000043                     _uart2RxHead:
  3550                           	opt callstack 0
  3551  000043                     	ds	1
  3552  000044                     _uart2TxBufferRemaining:
  3553                           	opt callstack 0
  3554  000044                     	ds	1
  3555  000045                     _uart2TxTail:
  3556                           	opt callstack 0
  3557  000045                     	ds	1
  3558  000046                     _uart1RxTail:
  3559                           	opt callstack 0
  3560  000046                     	ds	1
  3561  000047                     _uart1RxHead:
  3562                           	opt callstack 0
  3563  000047                     	ds	1
  3564                           
  3565                           	psect	bssBANK0
  3566  000060                     __pbssBANK0:
  3567                           	opt callstack 0
  3568  000060                     _spi_link:
  3569                           	opt callstack 0
  3570  000060                     	ds	12
  3571  00006C                     _uart1RxBuffer:
  3572                           	opt callstack 0
  3573  00006C                     	ds	8
  3574  000074                     spinners@s:
  3575                           	opt callstack 0
  3576  000074                     	ds	6
  3577  00007A                     floorf@F524:
  3578                           	opt callstack 0
  3579  00007A                     	ds	4
  3580  00007E                     fabsf@F463:
  3581                           	opt callstack 0
  3582  00007E                     	ds	4
  3583  000082                     ___fpclassifyf@F463:
  3584                           	opt callstack 0
  3585  000082                     	ds	4
  3586  000086                     calc_ror_data@bcror:
  3587                           	opt callstack 0
  3588  000086                     	ds	4
  3589  00008A                     calc_ror_data@bvror:
  3590                           	opt callstack 0
  3591  00008A                     	ds	4
  3592  00008E                     calc_model_data@bcror:
  3593                           	opt callstack 0
  3594  00008E                     	ds	4
  3595  000092                     calc_model_data@bvror:
  3596                           	opt callstack 0
  3597  000092                     	ds	4
  3598  000096                     _utctime:
  3599                           	opt callstack 0
  3600  000096                     	ds	4
  3601  00009A                     wdtdelay@dcount:
  3602                           	opt callstack 0
  3603  00009A                     	ds	4
  3604  00009E                     _P:
  3605                           	opt callstack 0
  3606  00009E                     	ds	4
  3607  0000A2                     _TMR3_InterruptHandler:
  3608                           	opt callstack 0
  3609  0000A2                     	ds	3
  3610  0000A5                     _TMR5_InterruptHandler:
  3611                           	opt callstack 0
  3612  0000A5                     	ds	3
  3613  0000A8                     _TMR6_InterruptHandler:
  3614                           	opt callstack 0
  3615  0000A8                     	ds	3
  3616  0000AB                     _ADCC_ADTI_InterruptHandler:
  3617                           	opt callstack 0
  3618  0000AB                     	ds	3
  3619  0000AE                     _ADCC_ADI_InterruptHandler:
  3620                           	opt callstack 0
  3621  0000AE                     	ds	3
  3622  0000B1                     _UART1_RxInterruptHandler:
  3623                           	opt callstack 0
  3624  0000B1                     	ds	3
  3625  0000B4                     _UART2_TxInterruptHandler:
  3626                           	opt callstack 0
  3627  0000B4                     	ds	3
  3628  0000B7                     _UART2_RxInterruptHandler:
  3629                           	opt callstack 0
  3630  0000B7                     	ds	3
  3631  0000BA                     _INT1_InterruptHandler:
  3632                           	opt callstack 0
  3633  0000BA                     	ds	3
  3634  0000BD                     _INT0_InterruptHandler:
  3635                           	opt callstack 0
  3636  0000BD                     	ds	3
  3637  0000C0                     _nout:
  3638                           	opt callstack 0
  3639  0000C0                     	ds	2
  3640  0000C2                     TMR3_ISR@CountCallBack:
  3641                           	opt callstack 0
  3642  0000C2                     	ds	2
  3643  0000C4                     _timer3ReloadVal:
  3644                           	opt callstack 0
  3645  0000C4                     	ds	2
  3646  0000C6                     TMR5_ISR@CountCallBack:
  3647                           	opt callstack 0
  3648  0000C6                     	ds	2
  3649  0000C8                     _timer5ReloadVal:
  3650                           	opt callstack 0
  3651  0000C8                     	ds	2
  3652  0000CA                     _mode_sw:
  3653                           	opt callstack 0
  3654  0000CA                     	ds	1
  3655  0000CB                     _uart2RxCount:
  3656                           	opt callstack 0
  3657  0000CB                     	ds	1
  3658  0000CC                     _uart2RxTail:
  3659                           	opt callstack 0
  3660  0000CC                     	ds	1
  3661  0000CD                     _uart2TxHead:
  3662                           	opt callstack 0
  3663  0000CD                     	ds	1
  3664  0000CE                     _uart1RxCount:
  3665                           	opt callstack 0
  3666  0000CE                     	ds	1
  3667  0000CF                     _seed:
  3668                           	opt callstack 0
  3669  0000CF                     	ds	8
  3670                           
  3671                           	psect	dataBANK0
  3672  0000F0                     __pdataBANK0:
  3673                           	opt callstack 0
  3674  0000F0                     stoa@F1166:
  3675                           	opt callstack 0
  3676  0000F0                     	ds	7
  3677  0000F7                     _H:
  3678                           	opt callstack 0
  3679  0000F7                     	ds	7
  3680                           
  3681                           	psect	dataBANK1
  3682  000100                     __pdataBANK1:
  3683                           	opt callstack 0
  3684  000100                     _R:
  3685                           	opt callstack 0
  3686  000100                     	ds	48
  3687  000130                     _V:
  3688                           	opt callstack 0
  3689  000130                     	ds	191
  3690                           
  3691                           	psect	bssBANK2
  3692  000200                     __pbssBANK2:
  3693                           	opt callstack 0
  3694  000200                     lp_filter@smooth:
  3695                           	opt callstack 0
  3696  000200                     	ds	84
  3697  000254                     _S:
  3698                           	opt callstack 0
  3699  000254                     	ds	41
  3700  00027D                     _tickCount:
  3701                           	opt callstack 0
  3702  00027D                     	ds	26
  3703  000297                     _dbuf:
  3704                           	opt callstack 0
  3705  000297                     	ds	80
  3706                           
  3707                           	psect	bssBANK3
  3708  000300                     __pbssBANK3:
  3709                           	opt callstack 0
  3710  000300                     _uart2TxBuffer:
  3711                           	opt callstack 0
  3712  000300                     	ds	64
  3713  000340                     _ring_buf2:
  3714                           	opt callstack 0
  3715  000340                     	ds	67
  3716  000383                     _ring_buf1:
  3717                           	opt callstack 0
  3718  000383                     	ds	67
  3719                           
  3720                           	psect	bssBANK4
  3721  000400                     __pbssBANK4:
  3722                           	opt callstack 0
  3723  000400                     _uart2RxBuffer:
  3724                           	opt callstack 0
  3725  000400                     	ds	255
  3726                           
  3727                           	psect	bssBIGRAM
  3728  000826                     __pbssBIGRAM:
  3729                           	opt callstack 0
  3730  000826                     _D:
  3731                           	opt callstack 0
  3732  000826                     	ds	482
  3733                           
  3734                           	psect	dataBIGRAM
  3735  0004FF                     __pdataBIGRAM:
  3736                           	opt callstack 0
  3737  0004FF                     _port_data:
  3738                           	opt callstack 0
  3739  0004FF                     	ds	512
  3740  0006FF                     _C:
  3741                           	opt callstack 0
  3742  0006FF                     	ds	295
  3743                           
  3744                           	psect	cstackBANK0
  3745  0000D7                     __pcstackBANK0:
  3746                           	opt callstack 0
  3747  0000D7                     ??_TMR3_ISR:
  3748                           
  3749                           ; 1 bytes @ 0x0
  3750  0000D7                     	ds	25
  3751                           
  3752                           	psect	cstackCOMRAM
  3753  000021                     __pcstackCOMRAM:
  3754                           	opt callstack 0
  3755  000021                     ??_ADCC_ThresholdISR:
  3756  000021                     
  3757                           ; 1 bytes @ 0x0
  3758  000021                     	ds	5
  3759  000026                     ??_TMR6_ISR:
  3760                           
  3761                           ; 1 bytes @ 0x5
  3762  000026                     	ds	1
  3763  000027                     ??_INT1_ISR:
  3764  000027                     
  3765                           ; 1 bytes @ 0x6
  3766  000027                     	ds	4
  3767  00002B                     ??_TMR5_ISR:
  3768                           
  3769                           ; 1 bytes @ 0xA
  3770  00002B                     	ds	15
  3771                           
  3772 ;;
  3773 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3774 ;;
  3775 ;; *************** function _main *****************
  3776 ;; Defined at:
  3777 ;;		line 185 in file "main.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  esr_temp        4  [STACK] float 
  3782 ;;  i_esr           2  [STACK] unsigned short 
  3783 ;;  shape           1  [STACK] unsigned char 
  3784 ;;  k               1  [STACK] unsigned char 
  3785 ;;  j               1  [STACK] unsigned char 
  3786 ;;  i               1  [STACK] unsigned char 
  3787 ;;  inp_index       1  [STACK] unsigned char 
  3788 ;;  mode            1  [STACK] enum E17013
  3789 ;;  i_ror           1  [STACK] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1  [STACK] void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels required when called:   28
  3805 ;; This function calls:
  3806 ;;		_SYSTEM_Initialize
  3807 ;;		_StartTimer
  3808 ;;		_TimerDone
  3809 ;;		_WaitMs
  3810 ;;		___fladd
  3811 ;;		___flge
  3812 ;;		___fltol
  3813 ;;		_calc_model_data
  3814 ;;		_calc_ror_data
  3815 ;;		_check_adc_scan
  3816 ;;		_check_enter_button
  3817 ;;		_check_help
  3818 ;;		_clear_adc_scan
  3819 ;;		_clear_hid_pflags
  3820 ;;		_conv_raw_result
  3821 ;;		_convert_adc_data
  3822 ;;		_eaDogM_WriteCommand
  3823 ;;		_esr_check
  3824 ;;		_fabsf
  3825 ;;		_get_raw_result
  3826 ;;		_get_switch
  3827 ;;		_get_vterm_ptr
  3828 ;;		_hid_display
  3829 ;;		_init_bsoc
  3830 ;;		_init_display
  3831 ;;		_init_port_dma
  3832 ;;		_lp_filter
  3833 ;;		_mode_lamp_dim
  3834 ;;		_set_display_info
  3835 ;;		_set_load_relay_one
  3836 ;;		_set_load_relay_two
  3837 ;;		_set_vterm
  3838 ;;		_spinners
  3839 ;;		_sprintf
  3840 ;;		_srand
  3841 ;;		_start_adc_scan
  3842 ;;		_start_switch_handler
  3843 ;;		_static_soc
  3844 ;;		_update_lcd
  3845 ;; This function is called by:
  3846 ;;		Startup code after reset
  3847 ;; This function uses a reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text0
  3851  011244                     __ptext0:
  3852                           	opt callstack 0
  3853  011244                     _main:
  3854                           	opt callstack 0
  3855                           
  3856                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3857  011244  0E11               	movlw	17
  3858  011246  26E1               	addwf	fsr1l,f,c
  3859  011248  0E00               	movlw	0
  3860  01124A  22E2               	addwfc	fsr1h,f,c
  3861                           
  3862                           ;main.c: 187:  UI_STATES mode;;main.c: 188:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3863                           ;stkvar	_inp_index @ sp[(-17)+14]
  3864                           
  3865                           ;incstack = 0
  3866  01124C  0EFD               	movlw	-3
  3867  01124E  6AE3               	clrf	plusw1,c
  3868                           
  3869                           ;stkvar	_i @ sp[(-17)+13]
  3870  011250  0EFC               	movlw	-4
  3871  011252  6AE3               	clrf	plusw1,c
  3872                           
  3873                           ;stkvar	_j @ sp[(-17)+12]
  3874  011254  0EFB               	movlw	-5
  3875  011256  6AE3               	clrf	plusw1,c
  3876  011258  2AE3               	incf	plusw1,f,c
  3877                           
  3878                           ;stkvar	_k @ sp[(-17)+11]
  3879  01125A  0EFA               	movlw	-6
  3880  01125C  6AE3               	clrf	plusw1,c
  3881  01125E  82E3               	bsf	plusw1,1,c
  3882                           
  3883                           ;main.c: 191:  SYSTEM_Initialize();
  3884  011260  EC30  F0D8         	call	_SYSTEM_Initialize	;wreg free
  3885                           
  3886                           ; BSR set to: 60
  3887                           ;main.c: 194:  (INTCON0bits.GIEH = 1);
  3888  011264  8ED2               	bsf	210,7,c	;volatile
  3889                           
  3890                           ; BSR set to: 60
  3891                           ;main.c: 197:  (INTCON0bits.GIEL = 1);
  3892  011266  8CD2               	bsf	210,6,c	;volatile
  3893                           
  3894                           ; BSR set to: 60
  3895                           ;main.c: 199:  V.ui_state = UI_STATE_INIT;
  3896  011268  0101               	movlb	1	; () banked
  3897  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  3898                           
  3899                           ; BSR set to: 1
  3900                           ;main.c: 204:  WaitMs(300);
  3901  01126C  0E2C               	movlw	44
  3902  01126E  6EE6               	movwf	postinc1,c
  3903  011270  0E01               	movlw	1
  3904  011272  6EE6               	movwf	postinc1,c
  3905  011274  EC82  F0DA         	call	_WaitMs	;wreg free
  3906                           
  3907                           ;main.c: 205:  if (PORTBbits.RB0) {
  3908  011278  A0CB               	btfss	203,0,c	;volatile
  3909  01127A  D004               	goto	l12815
  3910                           
  3911                           ;main.c: 206:   mode = UI_STATE_HOST;
  3912                           ;stkvar	_mode @ sp[(-17)+15]
  3913  01127C  0EFE               	movlw	-2
  3914  01127E  6AE3               	clrf	plusw1,c
  3915  011280  2AE3               	incf	plusw1,f,c
  3916                           
  3917                           ;main.c: 207:  } else {
  3918  011282  D004               	goto	l12817
  3919  011284                     l12815:
  3920                           
  3921                           ;main.c: 208:   mode = UI_STATE_LOG;
  3922                           ;stkvar	_mode @ sp[(-17)+15]
  3923  011284  0EFE               	movlw	-2
  3924  011286  6AE3               	clrf	plusw1,c
  3925  011288  80E3               	bsf	plusw1,0,c
  3926  01128A  82E3               	bsf	plusw1,1,c	;indir
  3927  01128C                     l12817:
  3928                           
  3929                           ;main.c: 211:  if (mode == UI_STATE_HOST) {
  3930                           ;stkvar	_mode @ sp[(-17)+15]
  3931  01128C  0EFE               	movlw	-2
  3932  01128E  04E3               	decf	plusw1,w,c
  3933  011290  A4D8               	btfss	status,2,c
  3934  011292  D007               	goto	l1324
  3935                           
  3936                           ;main.c: 212:   do { LATDbits.LATD0 = 1; } while(0);
  3937  011294  80BD               	bsf	189,0,c	;volatile
  3938                           
  3939                           ;main.c: 213:   V.mode_pwm = 70;
  3940  011296  0E00               	movlw	0
  3941  011298  0101               	movlb	1	; () banked
  3942  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  3943  01129C  0E46               	movlw	70
  3944  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  3945                           
  3946                           ;main.c: 214:  } else {
  3947  0112A0  D004               	goto	l12821
  3948  0112A2                     l1324:
  3949  0112A2  90BD               	bcf	189,0,c	;volatile
  3950                           
  3951                           ;main.c: 216:   V.mode_pwm = 0;
  3952  0112A4  0101               	movlb	1	; () banked
  3953  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  3954  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  3955  0112AA                     l12821:
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;main.c: 218:  mode_lamp_dim(V.mode_pwm);
  3959  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  3960  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  3961  0112B6  EC23  F0DE         	call	_mode_lamp_dim	;wreg free
  3962  0112BA  D32C               	goto	l12943
  3963  0112BC                     l12823:
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;main.c: 226:    init_port_dma();
  3967  0112BC  ECEC  F0DA         	call	_init_port_dma	;wreg free
  3968                           
  3969                           ; BSR set to: 59
  3970                           ;main.c: 228:    init_display();
  3971  0112C0  EC9F  F0CE         	call	_init_display	;wreg free
  3972                           
  3973                           ; BSR set to: 61
  3974                           ;main.c: 229:    eaDogM_WriteCommand(0b00001100);
  3975  0112C4  0E0C               	movlw	12
  3976  0112C6  6EE6               	movwf	postinc1,c
  3977  0112C8  EC96  F0DE         	call	_eaDogM_WriteCommand	;wreg free
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 233:    set_load_relay_one(1);
  3981  0112CC  0E01               	movlw	1
  3982  0112CE  6EE6               	movwf	postinc1,c
  3983  0112D0  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  3984                           
  3985                           ;main.c: 234:    set_load_relay_two(1);
  3986  0112D4  0E01               	movlw	1
  3987  0112D6  6EE6               	movwf	postinc1,c
  3988  0112D8  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  3989                           
  3990                           ;main.c: 236:    V.ui_state = mode;
  3991                           ;stkvar	_mode @ sp[(-17)+15]
  3992  0112DC  0EFE               	movlw	-2
  3993  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  3994                           
  3995                           ;main.c: 237:    srand(1957);
  3996  0112E4  0EA5               	movlw	165
  3997  0112E6  6EE6               	movwf	postinc1,c
  3998  0112E8  0E07               	movlw	7
  3999  0112EA  6EE6               	movwf	postinc1,c
  4000  0112EC  ECB8  F0DA         	call	_srand	;wreg free
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;main.c: 238:    set_vterm(0);
  4004  0112F0  0E00               	movlw	0
  4005  0112F2  6EE6               	movwf	postinc1,c
  4006  0112F4  ECCD  F0DD         	call	_set_vterm	;wreg free
  4007                           
  4008                           ;main.c: 239:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4009  0112F8  0E50               	movlw	low STR_1
  4010  0112FA  6EE6               	movwf	postinc1,c
  4011  0112FC  0EFF               	movlw	high STR_1
  4012  0112FE  6EE6               	movwf	postinc1,c
  4013  011300  0E00               	movlw	0
  4014  011302  6EE6               	movwf	postinc1,c
  4015  011304  0E00               	movlw	0
  4016  011306  6EE6               	movwf	postinc1,c
  4017  011308  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4018  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4019  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4020  011318  0E04               	movlw	4
  4021  01131A  6EE6               	movwf	postinc1,c
  4022  01131C  EC21  F0CD         	call	_sprintf	;wreg free
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 240:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.001");
  4026  011320  0ED0               	movlw	low STR_3
  4027  011322  6EE6               	movwf	postinc1,c
  4028  011324  0EFF               	movlw	high STR_3
  4029  011326  6EE6               	movwf	postinc1,c
  4030  011328  0EA2               	movlw	low STR_2
  4031  01132A  6EE6               	movwf	postinc1,c
  4032  01132C  0EFF               	movlw	high STR_2
  4033  01132E  6EE6               	movwf	postinc1,c
  4034  011330  0E00               	movlw	0
  4035  011332  6EE6               	movwf	postinc1,c
  4036  011334  0E01               	movlw	1
  4037  011336  6EE6               	movwf	postinc1,c
  4038  011338  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4039  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4040  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4041  011348  0E06               	movlw	6
  4042  01134A  6EE6               	movwf	postinc1,c
  4043  01134C  EC21  F0CD         	call	_sprintf	;wreg free
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;main.c: 241:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4047  011350  0E1D               	movlw	low STR_4
  4048  011352  6EE6               	movwf	postinc1,c
  4049  011354  0EFF               	movlw	high STR_4
  4050  011356  6EE6               	movwf	postinc1,c
  4051  011358  0E00               	movlw	0
  4052  01135A  6EE6               	movwf	postinc1,c
  4053  01135C  0E02               	movlw	2
  4054  01135E  6EE6               	movwf	postinc1,c
  4055  011360  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4056  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4057  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4058  011370  0E04               	movlw	4
  4059  011372  6EE6               	movwf	postinc1,c
  4060  011374  EC21  F0CD         	call	_sprintf	;wreg free
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;main.c: 242:    sprintf(get_vterm_ptr(0, 2), "                ");
  4064  011378  0E16               	movlw	low (STR_58+2)
  4065  01137A  6EE6               	movwf	postinc1,c
  4066  01137C  0EFE               	movlw	high (STR_58+2)
  4067  01137E  6EE6               	movwf	postinc1,c
  4068  011380  0E02               	movlw	2
  4069  011382  6EE6               	movwf	postinc1,c
  4070  011384  0E00               	movlw	0
  4071  011386  6EE6               	movwf	postinc1,c
  4072  011388  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4073  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4074  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4075  011398  0E04               	movlw	4
  4076  01139A  6EE6               	movwf	postinc1,c
  4077  01139C  EC21  F0CD         	call	_sprintf	;wreg free
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;main.c: 243:    sprintf(get_vterm_ptr(1, 2), "                ");
  4081  0113A0  0E16               	movlw	low (STR_58+2)
  4082  0113A2  6EE6               	movwf	postinc1,c
  4083  0113A4  0EFE               	movlw	high (STR_58+2)
  4084  0113A6  6EE6               	movwf	postinc1,c
  4085  0113A8  0E02               	movlw	2
  4086  0113AA  6EE6               	movwf	postinc1,c
  4087  0113AC  0E01               	movlw	1
  4088  0113AE  6EE6               	movwf	postinc1,c
  4089  0113B0  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4090  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4091  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4092  0113C0  0E04               	movlw	4
  4093  0113C2  6EE6               	movwf	postinc1,c
  4094  0113C4  EC21  F0CD         	call	_sprintf	;wreg free
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;main.c: 244:    sprintf(get_vterm_ptr(2, 2), "                ");
  4098  0113C8  0E16               	movlw	low (STR_58+2)
  4099  0113CA  6EE6               	movwf	postinc1,c
  4100  0113CC  0EFE               	movlw	high (STR_58+2)
  4101  0113CE  6EE6               	movwf	postinc1,c
  4102  0113D0  0E02               	movlw	2
  4103  0113D2  6EE6               	movwf	postinc1,c
  4104  0113D4  0E02               	movlw	2
  4105  0113D6  6EE6               	movwf	postinc1,c
  4106  0113D8  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4107  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4108  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4109  0113E8  0E04               	movlw	4
  4110  0113EA  6EE6               	movwf	postinc1,c
  4111  0113EC  EC21  F0CD         	call	_sprintf	;wreg free
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 245:    update_lcd(0);
  4115  0113F0  0E00               	movlw	0
  4116  0113F2  6EE6               	movwf	postinc1,c
  4117  0113F4  EC99  F0CC         	call	_update_lcd	;wreg free
  4118                           
  4119                           ;main.c: 246:    WaitMs(1000);
  4120  0113F8  0EE8               	movlw	232
  4121  0113FA  6EE6               	movwf	postinc1,c
  4122  0113FC  0E03               	movlw	3
  4123  0113FE  6EE6               	movwf	postinc1,c
  4124  011400  EC82  F0DA         	call	_WaitMs	;wreg free
  4125                           
  4126                           ;main.c: 247:    StartTimer(TMR_DISPLAY, 250);
  4127  011404  0EFA               	movlw	250
  4128  011406  6EE6               	movwf	postinc1,c
  4129  011408  0E00               	movlw	0
  4130  01140A  6EE6               	movwf	postinc1,c
  4131  01140C  0E0A               	movlw	10
  4132  01140E  6EE6               	movwf	postinc1,c
  4133  011410  EC6E  F0D9         	call	_StartTimer	;wreg free
  4134                           
  4135                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  4136  011414  0EC8               	movlw	200
  4137  011416  6EE6               	movwf	postinc1,c
  4138  011418  0E00               	movlw	0
  4139  01141A  6EE6               	movwf	postinc1,c
  4140  01141C  0E01               	movlw	1
  4141  01141E  6EE6               	movwf	postinc1,c
  4142  011420  EC6E  F0D9         	call	_StartTimer	;wreg free
  4143                           
  4144                           ;main.c: 249:    StartTimer(TMR_INFO, 3000);
  4145  011424  0EB8               	movlw	184
  4146  011426  6EE6               	movwf	postinc1,c
  4147  011428  0E0B               	movlw	11
  4148  01142A  6EE6               	movwf	postinc1,c
  4149  01142C  0E07               	movlw	7
  4150  01142E  6EE6               	movwf	postinc1,c
  4151  011430  EC6E  F0D9         	call	_StartTimer	;wreg free
  4152                           
  4153                           ;main.c: 250:    StartTimer(TMR_FLIPPER, 1500);
  4154  011434  0EDC               	movlw	220
  4155  011436  6EE6               	movwf	postinc1,c
  4156  011438  0E05               	movlw	5
  4157  01143A  6EE6               	movwf	postinc1,c
  4158  01143C  0E0B               	movlw	11
  4159  01143E  6EE6               	movwf	postinc1,c
  4160  011440  EC6E  F0D9         	call	_StartTimer	;wreg free
  4161                           
  4162                           ;main.c: 251:    StartTimer(TMR_HELPDIS, 3000);
  4163  011444  0EB8               	movlw	184
  4164  011446  6EE6               	movwf	postinc1,c
  4165  011448  0E0B               	movlw	11
  4166  01144A  6EE6               	movwf	postinc1,c
  4167  01144C  0E09               	movlw	9
  4168  01144E  6EE6               	movwf	postinc1,c
  4169  011450  EC6E  F0D9         	call	_StartTimer	;wreg free
  4170                           
  4171                           ;main.c: 253:    start_adc_scan();
  4172  011454  EC70  F0D6         	call	_start_adc_scan	;wreg free
  4173                           
  4174                           ;main.c: 254:    start_switch_handler();
  4175  011458  EC9E  F0DD         	call	_start_switch_handler	;wreg free
  4176                           
  4177                           ; BSR set to: 57
  4178                           ;main.c: 255:    WaitMs(1000);
  4179  01145C  0EE8               	movlw	232
  4180  01145E  6EE6               	movwf	postinc1,c
  4181  011460  0E03               	movlw	3
  4182  011462  6EE6               	movwf	postinc1,c
  4183  011464  EC82  F0DA         	call	_WaitMs	;wreg free
  4184                           
  4185                           ;main.c: 260:    i_ror = 1;
  4186                           ;stkvar	_i_ror @ sp[(-17)+16]
  4187  011468  0EFF               	movlw	-1
  4188  01146A  6AE3               	clrf	plusw1,c
  4189  01146C  2AE3               	incf	plusw1,f,c
  4190  01146E                     l12873:
  4191                           
  4192                           ;main.c: 262:     calc_ror_data();
  4193  01146E  EC45  F0C4         	call	_calc_ror_data	;wreg free
  4194                           
  4195                           ;main.c: 263:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4196  011472  0E00               	movlw	0
  4197  011474  6EE6               	movwf	postinc1,c
  4198  011476  0E04               	movlw	4
  4199  011478  6EE6               	movwf	postinc1,c
  4200  01147A  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  4201  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4202  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4203  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4204  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4205  011496  0E0B               	movlw	low STR_8
  4206  011498  6EE6               	movwf	postinc1,c
  4207  01149A  0EFF               	movlw	high STR_8
  4208  01149C  6EE6               	movwf	postinc1,c
  4209  01149E  0E00               	movlw	0
  4210  0114A0  6EE6               	movwf	postinc1,c
  4211  0114A2  0E01               	movlw	1
  4212  0114A4  6EE6               	movwf	postinc1,c
  4213  0114A6  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4214  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4215  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4216  0114B6  0E08               	movlw	8
  4217  0114B8  6EE6               	movwf	postinc1,c
  4218  0114BA  EC21  F0CD         	call	_sprintf	;wreg free
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;main.c: 264:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4222  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4223  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4224  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4225  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4226  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4227                           
  4228                           ;stkvar	_i_ror @ sp[(-21)+16]
  4229  0114DA  0EFB               	movlw	-5
  4230  0114DC  50E3               	movf	plusw1,w,c
  4231  0114DE  6EE6               	movwf	postinc1,c
  4232  0114E0  0E00               	movlw	0
  4233  0114E2  6EE6               	movwf	postinc1,c
  4234  0114E4  0E00               	movlw	0
  4235  0114E6  6EE6               	movwf	postinc1,c
  4236  0114E8  0E05               	movlw	5
  4237  0114EA  6EE6               	movwf	postinc1,c
  4238  0114EC  EC14  F0CF         	call	_spinners	;wreg free
  4239  0114F0  5001               	movf	btemp^0,w,c
  4240  0114F2  6EE6               	movwf	postinc1,c
  4241  0114F4  0E00               	movlw	0
  4242  0114F6  6EE6               	movwf	postinc1,c
  4243  0114F8  0E06               	movlw	low STR_9
  4244  0114FA  6EE6               	movwf	postinc1,c
  4245  0114FC  0EFD               	movlw	high STR_9
  4246  0114FE  6EE6               	movwf	postinc1,c
  4247  011500  0E00               	movlw	0
  4248  011502  6EE6               	movwf	postinc1,c
  4249  011504  0E02               	movlw	2
  4250  011506  6EE6               	movwf	postinc1,c
  4251  011508  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4252  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4253  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4254  011518  0E0C               	movlw	12
  4255  01151A  6EE6               	movwf	postinc1,c
  4256  01151C  EC21  F0CD         	call	_sprintf	;wreg free
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;main.c: 265:     update_lcd(0);
  4260  011520  0E00               	movlw	0
  4261  011522  6EE6               	movwf	postinc1,c
  4262  011524  EC99  F0CC         	call	_update_lcd	;wreg free
  4263                           
  4264                           ;main.c: 266:     WaitMs(2000);
  4265  011528  0ED0               	movlw	208
  4266  01152A  6EE6               	movwf	postinc1,c
  4267  01152C  0E07               	movlw	7
  4268  01152E  6EE6               	movwf	postinc1,c
  4269  011530  EC82  F0DA         	call	_WaitMs	;wreg free
  4270                           
  4271                           ;main.c: 267:     clear_adc_scan();
  4272  011534  ECEB  F0DE         	call	_clear_adc_scan	;wreg free
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;main.c: 268:     start_adc_scan();
  4276  011538  EC70  F0D6         	call	_start_adc_scan	;wreg free
  4277                           
  4278                           ;main.c: 269:     WaitMs(500);
  4279  01153C  0EF4               	movlw	244
  4280  01153E  6EE6               	movwf	postinc1,c
  4281  011540  0E01               	movlw	1
  4282  011542  6EE6               	movwf	postinc1,c
  4283  011544  EC82  F0DA         	call	_WaitMs	;wreg free
  4284                           
  4285                           ;main.c: 270:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4286                           ;stkvar	_i_ror @ sp[(-17)+16]
  4287  011548  0EFF               	movlw	-1
  4288  01154A  006F FF8C  F00C    	movff	plusw1,btemp+11
  4289  011550  2A0C               	incf	(btemp+11)^0,f,c
  4290  011552  0060  F033  FFE3   	movff	btemp+11,plusw1
  4291  011558  060C               	decf	(btemp+11)^0,f,c
  4292  01155A  0E1E               	movlw	30
  4293  01155C  600C               	cpfslt	(btemp+11)^0,c
  4294  01155E  D01A               	goto	u12480
  4295  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4296  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4297  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4298  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4299  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4300  01157C  0E42               	movlw	66
  4301  01157E  6EE6               	movwf	postinc1,c
  4302  011580  0E60               	movlw	96
  4303  011582  6EE6               	movwf	postinc1,c
  4304  011584  0E65               	movlw	101
  4305  011586  6EE6               	movwf	postinc1,c
  4306  011588  0E3C               	movlw	60
  4307  01158A  6EE6               	movwf	postinc1,c
  4308  01158C  EC81  F0C6         	call	___flge	;wreg free
  4309  011590  A001               	btfss	btemp& (0+255),0,c
  4310  011592  D76D               	goto	l12873
  4311  011594                     u12480:
  4312                           
  4313                           ;main.c: 272:    static_soc();
  4314  011594  ECEE  F0D9         	call	_static_soc	;wreg free
  4315                           
  4316                           ;main.c: 273:    init_bsoc();
  4317  011598  EC9C  F0BD         	call	_init_bsoc	;wreg free
  4318                           
  4319                           ;main.c: 274:    set_load_relay_one(0);
  4320  01159C  0E00               	movlw	0
  4321  01159E  6EE6               	movwf	postinc1,c
  4322  0115A0  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  4323                           
  4324                           ;main.c: 275:    set_load_relay_two(0);
  4325  0115A4  0E00               	movlw	0
  4326  0115A6  6EE6               	movwf	postinc1,c
  4327  0115A8  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  4328                           
  4329                           ;main.c: 276:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4330  0115AC  EE21  F3B1         	lfsr	2,_C+178	;volatile
  4331  0115B0  006F FF78  F00B    	movff	postinc2,btemp+10
  4332  0115B6  006F FF74  F00C    	movff	postdec2,btemp+11
  4333  0115BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4334  0115C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  4335  0115C8  0E33               	movlw	low STR_10
  4336  0115CA  6EE6               	movwf	postinc1,c
  4337  0115CC  0EFD               	movlw	high STR_10
  4338  0115CE  6EE6               	movwf	postinc1,c
  4339  0115D0  0E00               	movlw	0
  4340  0115D2  6EE6               	movwf	postinc1,c
  4341  0115D4  0E00               	movlw	0
  4342  0115D6  6EE6               	movwf	postinc1,c
  4343  0115D8  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4344  0115DC  0060  F007  FFE6   	movff	btemp,postinc1
  4345  0115E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4346  0115E8  0E06               	movlw	6
  4347  0115EA  6EE6               	movwf	postinc1,c
  4348  0115EC  EC21  F0CD         	call	_sprintf	;wreg free
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;main.c: 277:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4352  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4353  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4354  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4355  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4356  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4357  01160C  0E49               	movlw	low STR_11
  4358  01160E  6EE6               	movwf	postinc1,c
  4359  011610  0EFD               	movlw	high STR_11
  4360  011612  6EE6               	movwf	postinc1,c
  4361  011614  0E00               	movlw	0
  4362  011616  6EE6               	movwf	postinc1,c
  4363  011618  0E01               	movlw	1
  4364  01161A  6EE6               	movwf	postinc1,c
  4365  01161C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4366  011620  0060  F007  FFE6   	movff	btemp,postinc1
  4367  011626  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4368  01162C  0E08               	movlw	8
  4369  01162E  6EE6               	movwf	postinc1,c
  4370  011630  EC21  F0CD         	call	_sprintf	;wreg free
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;main.c: 278:    update_lcd(0);
  4374  011634  0E00               	movlw	0
  4375  011636  6EE6               	movwf	postinc1,c
  4376  011638  EC99  F0CC         	call	_update_lcd	;wreg free
  4377                           
  4378                           ;main.c: 279:    WaitMs(2000);
  4379  01163C  0ED0               	movlw	208
  4380  01163E  6EE6               	movwf	postinc1,c
  4381  011640  0E07               	movlw	7
  4382  011642  6EE6               	movwf	postinc1,c
  4383  011644  EC82  F0DA         	call	_WaitMs	;wreg free
  4384                           
  4385                           ;main.c: 280:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4386  011648  0E2E               	movlw	low STR_12
  4387  01164A  6EE6               	movwf	postinc1,c
  4388  01164C  0EFF               	movlw	high STR_12
  4389  01164E  6EE6               	movwf	postinc1,c
  4390  011650  0E00               	movlw	0
  4391  011652  6EE6               	movwf	postinc1,c
  4392  011654  0E00               	movlw	0
  4393  011656  6EE6               	movwf	postinc1,c
  4394  011658  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4395  01165C  0060  F007  FFE6   	movff	btemp,postinc1
  4396  011662  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4397  011668  0E04               	movlw	4
  4398  01166A  6EE6               	movwf	postinc1,c
  4399  01166C  EC21  F0CD         	call	_sprintf	;wreg free
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;main.c: 281:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4403  011670  0E3F               	movlw	low STR_13
  4404  011672  6EE6               	movwf	postinc1,c
  4405  011674  0EFF               	movlw	high STR_13
  4406  011676  6EE6               	movwf	postinc1,c
  4407  011678  0E00               	movlw	0
  4408  01167A  6EE6               	movwf	postinc1,c
  4409  01167C  0E01               	movlw	1
  4410  01167E  6EE6               	movwf	postinc1,c
  4411  011680  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4412  011684  0060  F007  FFE6   	movff	btemp,postinc1
  4413  01168A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4414  011690  0E04               	movlw	4
  4415  011692  6EE6               	movwf	postinc1,c
  4416  011694  EC21  F0CD         	call	_sprintf	;wreg free
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;main.c: 282:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4420  011698  0E72               	movlw	low STR_14
  4421  01169A  6EE6               	movwf	postinc1,c
  4422  01169C  0EFF               	movlw	high STR_14
  4423  01169E  6EE6               	movwf	postinc1,c
  4424  0116A0  0E00               	movlw	0
  4425  0116A2  6EE6               	movwf	postinc1,c
  4426  0116A4  0E02               	movlw	2
  4427  0116A6  6EE6               	movwf	postinc1,c
  4428  0116A8  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4429  0116AC  0060  F007  FFE6   	movff	btemp,postinc1
  4430  0116B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4431  0116B8  0E04               	movlw	4
  4432  0116BA  6EE6               	movwf	postinc1,c
  4433  0116BC  EC21  F0CD         	call	_sprintf	;wreg free
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;main.c: 283:    update_lcd(0);
  4437  0116C0  0E00               	movlw	0
  4438  0116C2  6EE6               	movwf	postinc1,c
  4439  0116C4  EC99  F0CC         	call	_update_lcd	;wreg free
  4440                           
  4441                           ;main.c: 284:    uint16_t i_esr = 1;
  4442  0116C8  0E01               	movlw	1
  4443  0116CA  6E0B               	movwf	(btemp+10)^0,c
  4444  0116CC  0E00               	movlw	0
  4445  0116CE  6E0C               	movwf	(btemp+11)^0,c
  4446                           
  4447                           ;stkvar	_i_esr @ sp[(-17)+8]
  4448  0116D0  0EF7               	movlw	-9
  4449  0116D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4450  0116D8  0EF8               	movlw	-8
  4451  0116DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4452                           
  4453                           ;main.c: 286:    float esr_temp;;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4454  0116E0  D06D               	goto	l12933
  4455  0116E2                     l12921:
  4456                           
  4457                           ;main.c: 288:     WaitMs(110);
  4458  0116E2  0E6E               	movlw	110
  4459  0116E4  6EE6               	movwf	postinc1,c
  4460  0116E6  0E00               	movlw	0
  4461  0116E8  6EE6               	movwf	postinc1,c
  4462  0116EA  EC82  F0DA         	call	_WaitMs	;wreg free
  4463                           
  4464                           ;main.c: 289:     shape = (uint8_t) fabsf(esr_temp);
  4465                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4466  0116EE  0EF3               	movlw	-13
  4467  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4468  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4469  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4470  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4471  011708  EC8B  F0D1         	call	_fabsf	;wreg free
  4472  01170C  0060  F007  FFE6   	movff	btemp,postinc1
  4473  011712  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4474  011718  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4475  01171E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4476  011724  ECC8  F0C5         	call	___fltol	;wreg free
  4477  011728  0060  F004  F00C   	movff	btemp,btemp+11
  4478                           
  4479                           ;stkvar	_shape @ sp[(-17)+10]
  4480  01172E  0EF9               	movlw	-7
  4481  011730  0060  F033  FFE3   	movff	btemp+11,plusw1
  4482                           
  4483                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4484  011736  0E00               	movlw	0
  4485  011738  6EE6               	movwf	postinc1,c
  4486                           
  4487                           ;stkvar	_shape @ sp[(-18)+10]
  4488  01173A  0EF8               	movlw	-8
  4489  01173C  50E3               	movf	plusw1,w,c
  4490  01173E  6EE6               	movwf	postinc1,c
  4491  011740  EC14  F0CF         	call	_spinners	;wreg free
  4492  011744  5001               	movf	btemp^0,w,c
  4493  011746  6EE6               	movwf	postinc1,c
  4494  011748  0E00               	movlw	0
  4495  01174A  6EE6               	movwf	postinc1,c
  4496  01174C  0E00               	movlw	0
  4497  01174E  6EE6               	movwf	postinc1,c
  4498  011750  0E00               	movlw	0
  4499  011752  6EE6               	movwf	postinc1,c
  4500  011754  EC14  F0CF         	call	_spinners	;wreg free
  4501  011758  5001               	movf	btemp^0,w,c
  4502  01175A  6EE6               	movwf	postinc1,c
  4503  01175C  0E00               	movlw	0
  4504  01175E  6EE6               	movwf	postinc1,c
  4505  011760  0E5F               	movlw	low STR_15
  4506  011762  6EE6               	movwf	postinc1,c
  4507  011764  0EFD               	movlw	high STR_15
  4508  011766  6EE6               	movwf	postinc1,c
  4509  011768  0E00               	movlw	0
  4510  01176A  6EE6               	movwf	postinc1,c
  4511  01176C  0E02               	movlw	2
  4512  01176E  6EE6               	movwf	postinc1,c
  4513  011770  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4514  011774  0060  F007  FFE6   	movff	btemp,postinc1
  4515  01177A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4516  011780  0E08               	movlw	8
  4517  011782  6EE6               	movwf	postinc1,c
  4518  011784  EC21  F0CD         	call	_sprintf	;wreg free
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;main.c: 291:     update_lcd(0);
  4522  011788  0E00               	movlw	0
  4523  01178A  6EE6               	movwf	postinc1,c
  4524  01178C  EC99  F0CC         	call	_update_lcd	;wreg free
  4525                           
  4526                           ;main.c: 293:     if (i_esr++ > 512)
  4527                           ;stkvar	_i_esr @ sp[(-17)+8]
  4528  011790  50E1               	movf	fsr1l,w,c
  4529  011792  0FF7               	addlw	-9
  4530  011794  6ED9               	movwf	fsr2l,c
  4531  011796  50E2               	movf	fsr1h,w,c
  4532  011798  6EDA               	movwf	fsr2h,c
  4533  01179A  0EFF               	movlw	255
  4534  01179C  22DA               	addwfc	fsr2h,f,c
  4535  01179E  006F FF7C  F00B    	movff	indf2,btemp+10
  4536  0117A4  0E01               	movlw	1
  4537  0117A6  26DE               	addwf	postinc2,f,c
  4538  0117A8  006F FF7C  F00C    	movff	indf2,btemp+11
  4539  0117AE  0E00               	movlw	0
  4540  0117B0  22DD               	addwfc	postdec2,f,c
  4541  0117B2  040B               	decf	(btemp+10)^0,w,c
  4542  0117B4  0E02               	movlw	2
  4543  0117B6  580C               	subwfb	(btemp+11)^0,w,c
  4544  0117B8  B0D8               	btfsc	status,0,c
  4545  0117BA  D017               	goto	u12500
  4546  0117BC                     l12933:
  4547                           
  4548                           ;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0) {
  4549  0117BC  0E00               	movlw	0
  4550  0117BE  6EE6               	movwf	postinc1,c
  4551  0117C0  EC3B  F0B7         	call	_esr_check	;wreg free
  4552                           
  4553                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4554  0117C4  0EF3               	movlw	-13
  4555  0117C6  0060  F007  FFE3   	movff	btemp,plusw1
  4556  0117CC  0EF4               	movlw	-12
  4557  0117CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4558  0117D4  0EF5               	movlw	-11
  4559  0117D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4560  0117DC  0EF6               	movlw	-10
  4561  0117DE  0060  F013  FFE3   	movff	btemp+3,plusw1
  4562  0117E4  0EF6               	movlw	-10
  4563  0117E6  BEE3               	btfsc	plusw1,7,c
  4564  0117E8  D77C               	goto	l12921
  4565  0117EA                     u12500:
  4566                           
  4567                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4568  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4569  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4570  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4571  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4572  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4573  011806  0E1D               	movlw	low STR_16
  4574  011808  6EE6               	movwf	postinc1,c
  4575  01180A  0EFD               	movlw	high STR_16
  4576  01180C  6EE6               	movwf	postinc1,c
  4577  01180E  0E00               	movlw	0
  4578  011810  6EE6               	movwf	postinc1,c
  4579  011812  0E00               	movlw	0
  4580  011814  6EE6               	movwf	postinc1,c
  4581  011816  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4582  01181A  0060  F007  FFE6   	movff	btemp,postinc1
  4583  011820  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4584  011826  0E08               	movlw	8
  4585  011828  6EE6               	movwf	postinc1,c
  4586  01182A  EC21  F0CD         	call	_sprintf	;wreg free
  4587                           
  4588                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4589  01182E  EE22  F009         	lfsr	2,_C+266	;volatile
  4590  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4591  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4592  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4593  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4594  01184A  EE22  F015         	lfsr	2,_C+278	;volatile
  4595  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4596  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4597  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4598  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4599  011866  0EBA               	movlw	low STR_17
  4600  011868  6EE6               	movwf	postinc1,c
  4601  01186A  0EFC               	movlw	high STR_17
  4602  01186C  6EE6               	movwf	postinc1,c
  4603  01186E  0E00               	movlw	0
  4604  011870  6EE6               	movwf	postinc1,c
  4605  011872  0E01               	movlw	1
  4606  011874  6EE6               	movwf	postinc1,c
  4607  011876  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4608  01187A  0060  F007  FFE6   	movff	btemp,postinc1
  4609  011880  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4610  011886  0E0C               	movlw	12
  4611  011888  6EE6               	movwf	postinc1,c
  4612  01188A  EC21  F0CD         	call	_sprintf	;wreg free
  4613                           
  4614                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4615  01188E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4616  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4617  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4618  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4619  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4620  0118AA  EE22  F019         	lfsr	2,_C+282	;volatile
  4621  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4622  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4623  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4624  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4625  0118C6  0ED4               	movlw	low STR_18
  4626  0118C8  6EE6               	movwf	postinc1,c
  4627  0118CA  0EFC               	movlw	high STR_18
  4628  0118CC  6EE6               	movwf	postinc1,c
  4629  0118CE  0E00               	movlw	0
  4630  0118D0  6EE6               	movwf	postinc1,c
  4631  0118D2  0E02               	movlw	2
  4632  0118D4  6EE6               	movwf	postinc1,c
  4633  0118D6  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4634  0118DA  0060  F007  FFE6   	movff	btemp,postinc1
  4635  0118E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4636  0118E6  0E0C               	movlw	12
  4637  0118E8  6EE6               	movwf	postinc1,c
  4638  0118EA  EC21  F0CD         	call	_sprintf	;wreg free
  4639                           
  4640                           ;main.c: 299:    update_lcd(0);
  4641  0118EE  0E00               	movlw	0
  4642  0118F0  6EE6               	movwf	postinc1,c
  4643  0118F2  EC99  F0CC         	call	_update_lcd	;wreg free
  4644                           
  4645                           ;main.c: 300:    WaitMs(5000);
  4646  0118F6  0E88               	movlw	136
  4647  0118F8  6EE6               	movwf	postinc1,c
  4648  0118FA  0E13               	movlw	19
  4649  0118FC  6EE6               	movwf	postinc1,c
  4650  0118FE  EC82  F0DA         	call	_WaitMs	;wreg free
  4651                           
  4652                           ;main.c: 301:    V.system_stable = 1;
  4653  011902  0E01               	movlw	1
  4654  011904  0101               	movlb	1	; () banked
  4655  011906  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4656                           
  4657                           ;main.c: 302:    break;
  4658  011908  D01C               	goto	l12945
  4659  01190A                     l1340:
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;main.c: 308:    P.SYSTEM_STABLE = 1;
  4663  01190A  0100               	movlb	0	; () banked
  4664  01190C  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4665                           
  4666                           ;main.c: 309:    break;
  4667  01190E  D019               	goto	l12945
  4668  011910                     l1342:
  4669                           
  4670                           ; BSR set to: 1
  4671                           ;main.c: 312:    V.ui_state = UI_STATE_INIT;
  4672  011910  6B30               	clrf	_V& (0+255),b	;volatile
  4673                           
  4674                           ;main.c: 313:    break;
  4675  011912  D017               	goto	l12945
  4676  011914                     l12943:
  4677  011914  0101               	movlb	1	; () banked
  4678  011916  5130               	movf	_V& (0+255),w,b	;volatile
  4679  011918  6E0B               	movwf	(btemp+10)^0,c
  4680  01191A  6A0C               	clrf	(btemp+11)^0,c
  4681                           
  4682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4683                           ; Switch size 1, requested type "simple"
  4684                           ; Number of cases is 1, Range of values is 0 to 0
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte            4     3 (average)
  4688                           ;	Chosen strategy is simple_byte
  4689  01191C  500C               	movf	(btemp+11)^0,w,c
  4690  01191E  0A00               	xorlw	0	; case 0
  4691  011920  A4D8               	btfss	status,2,c
  4692  011922  D7F6               	goto	l1342
  4693                           
  4694                           ; BSR set to: 1
  4695                           ; Switch size 1, requested type "simple"
  4696                           ; Number of cases is 5, Range of values is 0 to 5
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte           16     9 (average)
  4700                           ;	Chosen strategy is simple_byte
  4701  011924  500B               	movf	(btemp+10)^0,w,c
  4702  011926  0A00               	xorlw	0	; case 0
  4703  011928  B4D8               	btfsc	status,2,c
  4704  01192A  D4C8               	goto	l12823
  4705  01192C  0A01               	xorlw	1	; case 1
  4706  01192E  B4D8               	btfsc	status,2,c
  4707  011930  D008               	goto	l12945
  4708  011932  0A02               	xorlw	2	; case 3
  4709  011934  B4D8               	btfsc	status,2,c
  4710  011936  D005               	goto	l12945
  4711  011938  0A07               	xorlw	7	; case 4
  4712  01193A  B4D8               	btfsc	status,2,c
  4713  01193C  D7E6               	goto	l1340
  4714  01193E  0A01               	xorlw	1	; case 5
  4715  011940  D7E7               	goto	l1342
  4716  011942                     l12945:
  4717                           
  4718                           ;main.c: 316:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4719  011942  0E01               	movlw	1
  4720  011944  6EE6               	movwf	postinc1,c
  4721  011946  ECF7  F0DB         	call	_TimerDone	;wreg free
  4722  01194A  5001               	movf	btemp^0,w,c
  4723  01194C  B4D8               	btfsc	status,2,c
  4724  01194E  D013               	goto	l12957
  4725  011950  ECDB  F0DE         	call	_check_adc_scan	;wreg free
  4726  011954  5001               	movf	btemp^0,w,c
  4727  011956  B4D8               	btfsc	status,2,c
  4728  011958  D00E               	goto	l12957
  4729                           
  4730                           ;main.c: 320:    convert_adc_data();
  4731  01195A  EC2F  F0D1         	call	_convert_adc_data	;wreg free
  4732                           
  4733                           ;main.c: 324:    clear_adc_scan();
  4734  01195E  ECEB  F0DE         	call	_clear_adc_scan	;wreg free
  4735                           
  4736                           ; BSR set to: 1
  4737                           ;main.c: 325:    start_adc_scan();
  4738  011962  EC70  F0D6         	call	_start_adc_scan	;wreg free
  4739                           
  4740                           ;main.c: 326:    StartTimer(TMR_ADC, 200);
  4741  011966  0EC8               	movlw	200
  4742  011968  6EE6               	movwf	postinc1,c
  4743  01196A  0E00               	movlw	0
  4744  01196C  6EE6               	movwf	postinc1,c
  4745  01196E  0E01               	movlw	1
  4746  011970  6EE6               	movwf	postinc1,c
  4747  011972  EC6E  F0D9         	call	_StartTimer	;wreg free
  4748  011976                     l12957:
  4749                           
  4750                           ;main.c: 333:   if (TimerDone(TMR_DISPLAY)) {
  4751                           
  4752                           ;main.c: 329:   if (V.ticks) {
  4753  011976  0E0A               	movlw	10
  4754  011978  6EE6               	movwf	postinc1,c
  4755  01197A  ECF7  F0DB         	call	_TimerDone	;wreg free
  4756  01197E  5001               	movf	btemp^0,w,c
  4757  011980  B4D8               	btfsc	status,2,c
  4758  011982  EF3F  F091         	goto	l13033
  4759                           
  4760                           ;main.c: 334:    if (TimerDone(TMR_HELPDIS)) {
  4761  011986  0E09               	movlw	9
  4762  011988  6EE6               	movwf	postinc1,c
  4763  01198A  ECF7  F0DB         	call	_TimerDone	;wreg free
  4764  01198E  5001               	movf	btemp^0,w,c
  4765  011990  B4D8               	btfsc	status,2,c
  4766  011992  D004               	goto	l12965
  4767                           
  4768                           ;main.c: 335:     set_display_info(DIS_STR);
  4769  011994  0E00               	movlw	0
  4770  011996  6EE6               	movwf	postinc1,c
  4771  011998  ECDC  F0DD         	call	_set_display_info	;wreg free
  4772  01199C                     l12965:
  4773                           
  4774                           ;main.c: 337:    calc_model_data();
  4775  01199C  ECD8  F0AC         	call	_calc_model_data	;wreg free
  4776                           
  4777                           ; BSR set to: 57
  4778                           ;main.c: 344:     hid_display(&H);
  4779                           
  4780                           ;main.c: 339:    if (0) {
  4781  0119A0  0EF7               	movlw	_H& (0+255)
  4782  0119A2  6EE6               	movwf	postinc1,c
  4783  0119A4  ECA6  F0CD         	call	_hid_display	;wreg free
  4784                           
  4785                           ;main.c: 345:     switch (H.hid_display) {
  4786  0119A8  EFEE  F090         	goto	l13013
  4787  0119AC                     l1350:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;main.c: 347:      V.calib = 0;
  4791  0119AC  0101               	movlb	1	; () banked
  4792  0119AE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4796  0119B0  EE22  F01D         	lfsr	2,_C+286	;volatile
  4797  0119B4  50DF               	movf	indf2,w,c
  4798  0119B6  A4D8               	btfss	status,2,c
  4799  0119B8  D002               	goto	l12975
  4800                           
  4801                           ; BSR set to: 1
  4802  0119BA  0E20               	movlw	32
  4803  0119BC  D001               	goto	L1
  4804  0119BE                     l12975:
  4805                           
  4806                           ; BSR set to: 1
  4807  0119BE  0E44               	movlw	68
  4808  0119C0                     L1:
  4809  0119C0  6E0B               	movwf	(btemp+10)^0,c
  4810  0119C2  0E00               	movlw	0
  4811  0119C4  6E0C               	movwf	(btemp+11)^0,c
  4812                           
  4813                           ;stkvar	_main$3750 @ sp[(-17)+2]
  4814  0119C6  0EF1               	movlw	-15
  4815  0119C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4816  0119CE  0EF2               	movlw	-14
  4817  0119D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4818                           
  4819                           ; BSR set to: 1
  4820  0119D6  EE21  F37B         	lfsr	2,_C+124	;volatile
  4821  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4822  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4823  0119E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4824  0119EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4825                           
  4826                           ;stkvar	_main$3750 @ sp[(-21)+2]
  4827  0119F2  0EED               	movlw	-19
  4828  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4829  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4830  011A00  0EEC               	movlw	low STR_22
  4831  011A02  6EE6               	movwf	postinc1,c
  4832  011A04  0EFD               	movlw	high STR_22
  4833  011A06  6EE6               	movwf	postinc1,c
  4834  011A08  0E00               	movlw	0
  4835  011A0A  6EE6               	movwf	postinc1,c
  4836  011A0C  0E00               	movlw	0
  4837  011A0E  6EE6               	movwf	postinc1,c
  4838  011A10  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4839  011A14  0060  F007  FFE6   	movff	btemp,postinc1
  4840  011A1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4841  011A20  0E0A               	movlw	10
  4842  011A22  6EE6               	movwf	postinc1,c
  4843  011A24  EC21  F0CD         	call	_sprintf	;wreg free
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4847  011A28  EE21  F373         	lfsr	2,_C+116	;volatile
  4848  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4849  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4850  011A38  006F FF7B FFE6     	movff	postinc2,postinc1
  4851  011A3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4852  011A44  0EBF               	movlw	low STR_23
  4853  011A46  6EE6               	movwf	postinc1,c
  4854  011A48  0EFE               	movlw	high STR_23
  4855  011A4A  6EE6               	movwf	postinc1,c
  4856  011A4C  0E00               	movlw	0
  4857  011A4E  6EE6               	movwf	postinc1,c
  4858  011A50  0E01               	movlw	1
  4859  011A52  6EE6               	movwf	postinc1,c
  4860  011A54  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4861  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  4862  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4863  011A64  0E08               	movlw	8
  4864  011A66  6EE6               	movwf	postinc1,c
  4865  011A68  EC21  F0CD         	call	_sprintf	;wreg free
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4869  011A6C  EE21  F377         	lfsr	2,_C+120	;volatile
  4870  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4871  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4872  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4873  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  4874  011A88  0EAC               	movlw	low STR_24
  4875  011A8A  6EE6               	movwf	postinc1,c
  4876  011A8C  0EFE               	movlw	high STR_24
  4877  011A8E  6EE6               	movwf	postinc1,c
  4878  011A90  0E00               	movlw	0
  4879  011A92  6EE6               	movwf	postinc1,c
  4880  011A94  0E02               	movlw	2
  4881  011A96  6EE6               	movwf	postinc1,c
  4882  011A98  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4883  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  4884  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4885  011AA8  0E08               	movlw	8
  4886  011AAA  6EE6               	movwf	postinc1,c
  4887  011AAC  EC21  F0CD         	call	_sprintf	;wreg free
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;main.c: 352:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4891  011AB0  EE22  F01D         	lfsr	2,_C+286	;volatile
  4892  011AB4  50DF               	movf	indf2,w,c
  4893  011AB6  A4D8               	btfss	status,2,c
  4894  011AB8  D002               	goto	l12987
  4895                           
  4896                           ; BSR set to: 0
  4897  011ABA  0E20               	movlw	32
  4898  011ABC  D001               	goto	L2
  4899  011ABE                     l12987:
  4900                           
  4901                           ; BSR set to: 0
  4902  011ABE  0E44               	movlw	68
  4903  011AC0                     L2:
  4904  011AC0  6E0B               	movwf	(btemp+10)^0,c
  4905  011AC2  0E00               	movlw	0
  4906  011AC4  6E0C               	movwf	(btemp+11)^0,c
  4907                           
  4908                           ;stkvar	_main$3754 @ sp[(-17)+0]
  4909  011AC6  0EEF               	movlw	-17
  4910  011AC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4911  011ACE  0EF0               	movlw	-16
  4912  011AD0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4913                           
  4914                           ; BSR set to: 0
  4915  011AD6  EE21  F3A3         	lfsr	2,_C+164	;volatile
  4916  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  4917  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  4918  011AE6  006F FF7B FFE6     	movff	postinc2,postinc1
  4919  011AEC  006F FF7B FFE6     	movff	postinc2,postinc1
  4920                           
  4921                           ;stkvar	_main$3754 @ sp[(-21)+0]
  4922  011AF2  0EEB               	movlw	-21
  4923  011AF4  006F FF8F FFE6     	movff	plusw1,postinc1
  4924  011AFA  006F FF8F FFE6     	movff	plusw1,postinc1
  4925  011B00  0E9C               	movlw	low STR_25
  4926  011B02  6EE6               	movwf	postinc1,c
  4927  011B04  0EFD               	movlw	high STR_25
  4928  011B06  6EE6               	movwf	postinc1,c
  4929  011B08  0E01               	movlw	1
  4930  011B0A  6EE6               	movwf	postinc1,c
  4931  011B0C  0E00               	movlw	0
  4932  011B0E  6EE6               	movwf	postinc1,c
  4933  011B10  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4934  011B14  0060  F007  FFE6   	movff	btemp,postinc1
  4935  011B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4936  011B20  0E0A               	movlw	10
  4937  011B22  6EE6               	movwf	postinc1,c
  4938  011B24  EC21  F0CD         	call	_sprintf	;wreg free
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;main.c: 353:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4942  011B28  EE21  F3AB         	lfsr	2,_C+172	;volatile
  4943  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4944  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  4945  011B38  006F FF7B FFE6     	movff	postinc2,postinc1
  4946  011B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4947  011B44  0E99               	movlw	low STR_26
  4948  011B46  6EE6               	movwf	postinc1,c
  4949  011B48  0EFE               	movlw	high STR_26
  4950  011B4A  6EE6               	movwf	postinc1,c
  4951  011B4C  0E01               	movlw	1
  4952  011B4E  6EE6               	movwf	postinc1,c
  4953  011B50  0E01               	movlw	1
  4954  011B52  6EE6               	movwf	postinc1,c
  4955  011B54  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4956  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  4957  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4958  011B64  0E08               	movlw	8
  4959  011B66  6EE6               	movwf	postinc1,c
  4960  011B68  EC21  F0CD         	call	_sprintf	;wreg free
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;main.c: 354:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4964  011B6C  EE21  F3A7         	lfsr	2,_C+168	;volatile
  4965  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  4966  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  4967  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4968  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  4969  011B88  0E86               	movlw	low STR_27
  4970  011B8A  6EE6               	movwf	postinc1,c
  4971  011B8C  0EFE               	movlw	high STR_27
  4972  011B8E  6EE6               	movwf	postinc1,c
  4973  011B90  0E01               	movlw	1
  4974  011B92  6EE6               	movwf	postinc1,c
  4975  011B94  0E02               	movlw	2
  4976  011B96  6EE6               	movwf	postinc1,c
  4977  011B98  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4978  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  4979  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4980  011BA8  0E08               	movlw	8
  4981  011BAA  6EE6               	movwf	postinc1,c
  4982  011BAC  EC21  F0CD         	call	_sprintf	;wreg free
  4983                           
  4984                           ;main.c: 355:      break;
  4985  011BB0  D32B               	goto	l13015
  4986  011BB2                     l1360:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;main.c: 357:      V.calib = 0;
  4990  011BB2  0101               	movlb	1	; () banked
  4991  011BB4  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4992                           
  4993                           ; BSR set to: 1
  4994                           ;main.c: 358:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4995  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  4996  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  4997  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  4998  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  4999  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5000  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5001  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5002  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5005  011BEE  0EF8               	movlw	low STR_28
  5006  011BF0  6EE6               	movwf	postinc1,c
  5007  011BF2  0EFE               	movlw	high STR_28
  5008  011BF4  6EE6               	movwf	postinc1,c
  5009  011BF6  0E00               	movlw	0
  5010  011BF8  6EE6               	movwf	postinc1,c
  5011  011BFA  0E00               	movlw	0
  5012  011BFC  6EE6               	movwf	postinc1,c
  5013  011BFE  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5014  011C02  0060  F007  FFE6   	movff	btemp,postinc1
  5015  011C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5016  011C0E  0E0C               	movlw	12
  5017  011C10  6EE6               	movwf	postinc1,c
  5018  011C12  EC21  F0CD         	call	_sprintf	;wreg free
  5019                           
  5020                           ;main.c: 359:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5021  011C16  EE21  F2FF         	lfsr	2,_C
  5022  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5023  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5024  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5025  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5026  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5027  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5028  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5029  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5030  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5031  011C4E  0ED2               	movlw	low STR_29
  5032  011C50  6EE6               	movwf	postinc1,c
  5033  011C52  0EFE               	movlw	high STR_29
  5034  011C54  6EE6               	movwf	postinc1,c
  5035  011C56  0E00               	movlw	0
  5036  011C58  6EE6               	movwf	postinc1,c
  5037  011C5A  0E01               	movlw	1
  5038  011C5C  6EE6               	movwf	postinc1,c
  5039  011C5E  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5040  011C62  0060  F007  FFE6   	movff	btemp,postinc1
  5041  011C68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5042  011C6E  0E0C               	movlw	12
  5043  011C70  6EE6               	movwf	postinc1,c
  5044  011C72  EC21  F0CD         	call	_sprintf	;wreg free
  5045                           
  5046                           ;main.c: 360:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5047  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5048  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5049  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5050  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5051  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5053  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5055  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5056  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5057  011CAE  0EE5               	movlw	low STR_30
  5058  011CB0  6EE6               	movwf	postinc1,c
  5059  011CB2  0EFE               	movlw	high STR_30
  5060  011CB4  6EE6               	movwf	postinc1,c
  5061  011CB6  0E00               	movlw	0
  5062  011CB8  6EE6               	movwf	postinc1,c
  5063  011CBA  0E02               	movlw	2
  5064  011CBC  6EE6               	movwf	postinc1,c
  5065  011CBE  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5066  011CC2  0060  F007  FFE6   	movff	btemp,postinc1
  5067  011CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5068  011CCE  0E0C               	movlw	12
  5069  011CD0  6EE6               	movwf	postinc1,c
  5070  011CD2  EC21  F0CD         	call	_sprintf	;wreg free
  5071                           
  5072                           ;main.c: 362:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5073  011CD6  EE21  F39B         	lfsr	2,_C+156	;volatile
  5074  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5075  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5076  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5077  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5078  011CF2  0E4D               	movlw	low STR_31
  5079  011CF4  6EE6               	movwf	postinc1,c
  5080  011CF6  0EFE               	movlw	high STR_31
  5081  011CF8  6EE6               	movwf	postinc1,c
  5082  011CFA  0E01               	movlw	1
  5083  011CFC  6EE6               	movwf	postinc1,c
  5084  011CFE  0E00               	movlw	0
  5085  011D00  6EE6               	movwf	postinc1,c
  5086  011D02  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5087  011D06  0060  F007  FFE6   	movff	btemp,postinc1
  5088  011D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5089  011D12  0E08               	movlw	8
  5090  011D14  6EE6               	movwf	postinc1,c
  5091  011D16  EC21  F0CD         	call	_sprintf	;wreg free
  5092                           
  5093                           ;main.c: 363:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5094  011D1A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5095  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5096  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5097  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011D36  0E60               	movlw	low STR_32
  5100  011D38  6EE6               	movwf	postinc1,c
  5101  011D3A  0EFE               	movlw	high STR_32
  5102  011D3C  6EE6               	movwf	postinc1,c
  5103  011D3E  0E01               	movlw	1
  5104  011D40  6EE6               	movwf	postinc1,c
  5105  011D42  0E01               	movlw	1
  5106  011D44  6EE6               	movwf	postinc1,c
  5107  011D46  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5108  011D4A  0060  F007  FFE6   	movff	btemp,postinc1
  5109  011D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5110  011D56  0E08               	movlw	8
  5111  011D58  6EE6               	movwf	postinc1,c
  5112  011D5A  EC21  F0CD         	call	_sprintf	;wreg free
  5113                           
  5114                           ;main.c: 364:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5115  011D5E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5116  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5117  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5118  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5119  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5120  011D7A  EE21  F39B         	lfsr	2,_C+156	;volatile
  5121  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5122  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5123  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011D96  ECB5  F09D         	call	___fladd	;wreg free
  5126  011D9A  0060  F007  FFE6   	movff	btemp,postinc1
  5127  011DA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5128  011DA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5129  011DAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5130  011DB2  0E73               	movlw	low STR_33
  5131  011DB4  6EE6               	movwf	postinc1,c
  5132  011DB6  0EFE               	movlw	high STR_33
  5133  011DB8  6EE6               	movwf	postinc1,c
  5134  011DBA  0E01               	movlw	1
  5135  011DBC  6EE6               	movwf	postinc1,c
  5136  011DBE  0E02               	movlw	2
  5137  011DC0  6EE6               	movwf	postinc1,c
  5138  011DC2  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5139  011DC6  0060  F007  FFE6   	movff	btemp,postinc1
  5140  011DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5141  011DD2  0E08               	movlw	8
  5142  011DD4  6EE6               	movwf	postinc1,c
  5143  011DD6  EC21  F0CD         	call	_sprintf	;wreg free
  5144                           
  5145                           ;main.c: 365:      break;
  5146  011DDA  D216               	goto	l13015
  5147  011DDC                     l1361:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 367:      V.calib = 0;
  5151  011DDC  0101               	movlb	1	; () banked
  5152  011DDE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5153                           
  5154                           ; BSR set to: 1
  5155                           ;main.c: 368:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5156  011DE0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5157  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5158  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5159  011DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5160  011DF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5161  011DFC  0EB0               	movlw	low STR_34
  5162  011DFE  6EE6               	movwf	postinc1,c
  5163  011E00  0EFD               	movlw	high STR_34
  5164  011E02  6EE6               	movwf	postinc1,c
  5165  011E04  0E00               	movlw	0
  5166  011E06  6EE6               	movwf	postinc1,c
  5167  011E08  0E00               	movlw	0
  5168  011E0A  6EE6               	movwf	postinc1,c
  5169  011E0C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5170  011E10  0060  F007  FFE6   	movff	btemp,postinc1
  5171  011E16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5172  011E1C  0E08               	movlw	8
  5173  011E1E  6EE6               	movwf	postinc1,c
  5174  011E20  EC21  F0CD         	call	_sprintf	;wreg free
  5175                           
  5176                           ;main.c: 369:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5177  011E24  EE21  F393         	lfsr	2,_C+148	;volatile
  5178  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011E40  EE21  F38F         	lfsr	2,_C+144	;volatile
  5183  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5185  011E50  006F FF7B FFE6     	movff	postinc2,postinc1
  5186  011E56  006F FF7B FFE6     	movff	postinc2,postinc1
  5187  011E5C  0E00               	movlw	low STR_35
  5188  011E5E  6EE6               	movwf	postinc1,c
  5189  011E60  0EFE               	movlw	high STR_35
  5190  011E62  6EE6               	movwf	postinc1,c
  5191  011E64  0E00               	movlw	0
  5192  011E66  6EE6               	movwf	postinc1,c
  5193  011E68  0E01               	movlw	1
  5194  011E6A  6EE6               	movwf	postinc1,c
  5195  011E6C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5196  011E70  0060  F007  FFE6   	movff	btemp,postinc1
  5197  011E76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5198  011E7C  0E0C               	movlw	12
  5199  011E7E  6EE6               	movwf	postinc1,c
  5200  011E80  EC21  F0CD         	call	_sprintf	;wreg free
  5201                           
  5202                           ;main.c: 370:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5203  011E84  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5204  011E88  006F FF78  F00B    	movff	postinc2,btemp+10
  5205  011E8E  006F FF74  F00C    	movff	postdec2,btemp+11
  5206  011E94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5207  011E9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5208  011EA0  EE21  F3B1         	lfsr	2,_C+178	;volatile
  5209  011EA4  006F FF78  F00B    	movff	postinc2,btemp+10
  5210  011EAA  006F FF74  F00C    	movff	postdec2,btemp+11
  5211  011EB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5212  011EB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5213  011EBC  0E00               	movlw	0
  5214  011EBE  6EE6               	movwf	postinc1,c
  5215  011EC0  0E05               	movlw	5
  5216  011EC2  6EE6               	movwf	postinc1,c
  5217  011EC4  EC14  F0CF         	call	_spinners	;wreg free
  5218  011EC8  5001               	movf	btemp^0,w,c
  5219  011ECA  6EE6               	movwf	postinc1,c
  5220  011ECC  0E00               	movlw	0
  5221  011ECE  6EE6               	movwf	postinc1,c
  5222  011ED0  0E88               	movlw	low STR_36
  5223  011ED2  6EE6               	movwf	postinc1,c
  5224  011ED4  0EFD               	movlw	high STR_36
  5225  011ED6  6EE6               	movwf	postinc1,c
  5226  011ED8  0E00               	movlw	0
  5227  011EDA  6EE6               	movwf	postinc1,c
  5228  011EDC  0E02               	movlw	2
  5229  011EDE  6EE6               	movwf	postinc1,c
  5230  011EE0  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5231  011EE4  0060  F007  FFE6   	movff	btemp,postinc1
  5232  011EEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5233  011EF0  0E0A               	movlw	10
  5234  011EF2  6EE6               	movwf	postinc1,c
  5235  011EF4  EC21  F0CD         	call	_sprintf	;wreg free
  5236                           
  5237                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5238  011EF8  EE21  F387         	lfsr	2,_C+136	;volatile
  5239  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5240  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011F14  0E74               	movlw	low STR_37
  5244  011F16  6EE6               	movwf	postinc1,c
  5245  011F18  0EFD               	movlw	high STR_37
  5246  011F1A  6EE6               	movwf	postinc1,c
  5247  011F1C  0E01               	movlw	1
  5248  011F1E  6EE6               	movwf	postinc1,c
  5249  011F20  0E00               	movlw	0
  5250  011F22  6EE6               	movwf	postinc1,c
  5251  011F24  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5252  011F28  0060  F007  FFE6   	movff	btemp,postinc1
  5253  011F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5254  011F34  0E08               	movlw	8
  5255  011F36  6EE6               	movwf	postinc1,c
  5256  011F38  EC21  F0CD         	call	_sprintf	;wreg free
  5257                           
  5258                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5259  011F3C  EE22  F009         	lfsr	2,_C+266	;volatile
  5260  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5261  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5262  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5263  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5264  011F58  EE22  F015         	lfsr	2,_C+278	;volatile
  5265  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5266  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  011F74  0EC4               	movlw	low STR_38
  5270  011F76  6EE6               	movwf	postinc1,c
  5271  011F78  0EFD               	movlw	high STR_38
  5272  011F7A  6EE6               	movwf	postinc1,c
  5273  011F7C  0E01               	movlw	1
  5274  011F7E  6EE6               	movwf	postinc1,c
  5275  011F80  0E01               	movlw	1
  5276  011F82  6EE6               	movwf	postinc1,c
  5277  011F84  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5278  011F88  0060  F007  FFE6   	movff	btemp,postinc1
  5279  011F8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5280  011F94  0E0C               	movlw	12
  5281  011F96  6EE6               	movwf	postinc1,c
  5282  011F98  EC21  F0CD         	call	_sprintf	;wreg free
  5283                           
  5284                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5285  011F9C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5286  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5287  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5288  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5290  011FB8  EE22  F019         	lfsr	2,_C+282	;volatile
  5291  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5292  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5293  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5294  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5295  011FD4  0ED8               	movlw	low STR_39
  5296  011FD6  6EE6               	movwf	postinc1,c
  5297  011FD8  0EFD               	movlw	high STR_39
  5298  011FDA  6EE6               	movwf	postinc1,c
  5299  011FDC  0E01               	movlw	1
  5300  011FDE  6EE6               	movwf	postinc1,c
  5301  011FE0  0E02               	movlw	2
  5302  011FE2  6EE6               	movwf	postinc1,c
  5303  011FE4  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5304  011FE8  0060  F007  FFE6   	movff	btemp,postinc1
  5305  011FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5306  011FF4  0E0C               	movlw	12
  5307  011FF6  6EE6               	movwf	postinc1,c
  5308  011FF8  EC21  F0CD         	call	_sprintf	;wreg free
  5309                           
  5310                           ;main.c: 375:      break;
  5311  011FFC  D105               	goto	l13015
  5312  011FFE                     l12999:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;main.c: 377:      if (!V.calib) {
  5316  011FFE  0101               	movlb	1	; () banked
  5317  012000  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5318  012002  A4D8               	btfss	status,2,c
  5319  012004  D02D               	goto	l13003
  5320                           
  5321                           ; BSR set to: 1
  5322                           ;main.c: 378:       lp_filter(0.0, i, -1);
  5323  012006  0EFF               	movlw	255
  5324  012008  6EE6               	movwf	postinc1,c
  5325                           
  5326                           ;stkvar	_i @ sp[(-18)+13]
  5327  01200A  0EFB               	movlw	-5
  5328  01200C  50E3               	movf	plusw1,w,c
  5329  01200E  6EE6               	movwf	postinc1,c
  5330  012010  0E00               	movlw	0
  5331  012012  6EE6               	movwf	postinc1,c
  5332  012014  0E00               	movlw	0
  5333  012016  6EE6               	movwf	postinc1,c
  5334  012018  0E00               	movlw	0
  5335  01201A  6EE6               	movwf	postinc1,c
  5336  01201C  0E00               	movlw	0
  5337  01201E  6EE6               	movwf	postinc1,c
  5338  012020  ECCC  F0C1         	call	_lp_filter	;wreg free
  5339                           
  5340                           ;main.c: 379:       lp_filter(0.0, j, -1);
  5341  012024  0EFF               	movlw	255
  5342  012026  6EE6               	movwf	postinc1,c
  5343                           
  5344                           ;stkvar	_j @ sp[(-18)+12]
  5345  012028  0EFA               	movlw	-6
  5346  01202A  50E3               	movf	plusw1,w,c
  5347  01202C  6EE6               	movwf	postinc1,c
  5348  01202E  0E00               	movlw	0
  5349  012030  6EE6               	movwf	postinc1,c
  5350  012032  0E00               	movlw	0
  5351  012034  6EE6               	movwf	postinc1,c
  5352  012036  0E00               	movlw	0
  5353  012038  6EE6               	movwf	postinc1,c
  5354  01203A  0E00               	movlw	0
  5355  01203C  6EE6               	movwf	postinc1,c
  5356  01203E  ECCC  F0C1         	call	_lp_filter	;wreg free
  5357                           
  5358                           ;main.c: 380:       lp_filter(0.0, k, -1);
  5359  012042  0EFF               	movlw	255
  5360  012044  6EE6               	movwf	postinc1,c
  5361                           
  5362                           ;stkvar	_k @ sp[(-18)+11]
  5363  012046  0EF9               	movlw	-7
  5364  012048  50E3               	movf	plusw1,w,c
  5365  01204A  6EE6               	movwf	postinc1,c
  5366  01204C  0E00               	movlw	0
  5367  01204E  6EE6               	movwf	postinc1,c
  5368  012050  0E00               	movlw	0
  5369  012052  6EE6               	movwf	postinc1,c
  5370  012054  0E00               	movlw	0
  5371  012056  6EE6               	movwf	postinc1,c
  5372  012058  0E00               	movlw	0
  5373  01205A  6EE6               	movwf	postinc1,c
  5374  01205C  ECCC  F0C1         	call	_lp_filter	;wreg free
  5375  012060                     l13003:
  5376                           
  5377                           ;main.c: 382:      V.calib = 1;
  5378  012060  0E01               	movlw	1
  5379  012062  0101               	movlb	1	; () banked
  5380  012064  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5381                           
  5382                           ; BSR set to: 1
  5383                           ;main.c: 383:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5384  012066  0E02               	movlw	2
  5385  012068  6EE6               	movwf	postinc1,c
  5386  01206A  EC63  F0DB         	call	_get_switch	;wreg free
  5387  01206E  5001               	movf	btemp^0,w,c
  5388  012070  6EE6               	movwf	postinc1,c
  5389  012072  0E00               	movlw	0
  5390  012074  6EE6               	movwf	postinc1,c
  5391                           
  5392                           ;stkvar	_i @ sp[(-19)+13]
  5393  012076  0EFA               	movlw	-6
  5394  012078  50E3               	movf	plusw1,w,c
  5395  01207A  0D04               	mullw	4
  5396  01207C  0EFF               	movlw	low _C
  5397  01207E  24F3               	addwf	243,w,c
  5398  012080  6ED9               	movwf	fsr2l,c
  5399  012082  0E06               	movlw	high _C
  5400  012084  20F4               	addwfc	prodh,w,c
  5401  012086  6EDA               	movwf	fsr2h,c
  5402  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5403  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5404  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5405  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5406                           
  5407                           ;stkvar	_i @ sp[(-23)+13]
  5408  0120A0  0EF6               	movlw	-10
  5409  0120A2  50E3               	movf	plusw1,w,c
  5410  0120A4  6EE6               	movwf	postinc1,c
  5411  0120A6  EC7C  F0DD         	call	_get_raw_result	;wreg free
  5412  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5413  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5414  0120B6  0E83               	movlw	low STR_19
  5415  0120B8  6EE6               	movwf	postinc1,c
  5416  0120BA  0EFF               	movlw	high STR_19
  5417  0120BC  6EE6               	movwf	postinc1,c
  5418  0120BE  0E00               	movlw	0
  5419  0120C0  6EE6               	movwf	postinc1,c
  5420  0120C2  0E00               	movlw	0
  5421  0120C4  6EE6               	movwf	postinc1,c
  5422  0120C6  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5423  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5424  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5425  0120D6  0E0C               	movlw	12
  5426  0120D8  6EE6               	movwf	postinc1,c
  5427  0120DA  EC21  F0CD         	call	_sprintf	;wreg free
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;main.c: 384:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5431  0120DE  0E03               	movlw	3
  5432  0120E0  6EE6               	movwf	postinc1,c
  5433  0120E2  EC63  F0DB         	call	_get_switch	;wreg free
  5434  0120E6  5001               	movf	btemp^0,w,c
  5435  0120E8  6EE6               	movwf	postinc1,c
  5436  0120EA  0E00               	movlw	0
  5437  0120EC  6EE6               	movwf	postinc1,c
  5438                           
  5439                           ;stkvar	_j @ sp[(-19)+12]
  5440  0120EE  0EF9               	movlw	-7
  5441  0120F0  50E3               	movf	plusw1,w,c
  5442  0120F2  0D04               	mullw	4
  5443  0120F4  0EFF               	movlw	low _C
  5444  0120F6  24F3               	addwf	243,w,c
  5445  0120F8  6ED9               	movwf	fsr2l,c
  5446  0120FA  0E06               	movlw	high _C
  5447  0120FC  20F4               	addwfc	prodh,w,c
  5448  0120FE  6EDA               	movwf	fsr2h,c
  5449  012100  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5453                           
  5454                           ;stkvar	_j @ sp[(-23)+12]
  5455  012118  0EF5               	movlw	-11
  5456  01211A  50E3               	movf	plusw1,w,c
  5457  01211C  6EE6               	movwf	postinc1,c
  5458  01211E  EC7C  F0DD         	call	_get_raw_result	;wreg free
  5459  012122  0060  F007  FFE6   	movff	btemp,postinc1
  5460  012128  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5461  01212E  0E83               	movlw	low STR_19
  5462  012130  6EE6               	movwf	postinc1,c
  5463  012132  0EFF               	movlw	high STR_19
  5464  012134  6EE6               	movwf	postinc1,c
  5465  012136  0E00               	movlw	0
  5466  012138  6EE6               	movwf	postinc1,c
  5467  01213A  0E01               	movlw	1
  5468  01213C  6EE6               	movwf	postinc1,c
  5469  01213E  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5470  012142  0060  F007  FFE6   	movff	btemp,postinc1
  5471  012148  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5472  01214E  0E0C               	movlw	12
  5473  012150  6EE6               	movwf	postinc1,c
  5474  012152  EC21  F0CD         	call	_sprintf	;wreg free
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;main.c: 385:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5478                           ;stkvar	_inp_index @ sp[(-17)+14]
  5479  012156  0EFD               	movlw	-3
  5480  012158  50E3               	movf	plusw1,w,c
  5481  01215A  6E0B               	movwf	(btemp+10)^0,c
  5482  01215C  6A0C               	clrf	(btemp+11)^0,c
  5483  01215E  0E01               	movlw	1
  5484  012160  260B               	addwf	(btemp+10)^0,f,c
  5485  012162  0E00               	movlw	0
  5486  012164  220C               	addwfc	(btemp+11)^0,f,c
  5487  012166  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5488  01216C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5489                           
  5490                           ;stkvar	_k @ sp[(-19)+11]
  5491  012172  0EF8               	movlw	-8
  5492  012174  50E3               	movf	plusw1,w,c
  5493  012176  0D04               	mullw	4
  5494  012178  0EFF               	movlw	low _C
  5495  01217A  24F3               	addwf	243,w,c
  5496  01217C  6ED9               	movwf	fsr2l,c
  5497  01217E  0E06               	movlw	high _C
  5498  012180  20F4               	addwfc	prodh,w,c
  5499  012182  6EDA               	movwf	fsr2h,c
  5500  012184  006F FF7B FFE6     	movff	postinc2,postinc1
  5501  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5502  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5503  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5504                           
  5505                           ;stkvar	_k @ sp[(-23)+11]
  5506  01219C  0EF4               	movlw	-12
  5507  01219E  50E3               	movf	plusw1,w,c
  5508  0121A0  6EE6               	movwf	postinc1,c
  5509  0121A2  EC7C  F0DD         	call	_get_raw_result	;wreg free
  5510  0121A6  0060  F007  FFE6   	movff	btemp,postinc1
  5511  0121AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5512  0121B2  0E61               	movlw	low STR_21
  5513  0121B4  6EE6               	movwf	postinc1,c
  5514  0121B6  0EFF               	movlw	high STR_21
  5515  0121B8  6EE6               	movwf	postinc1,c
  5516  0121BA  0E00               	movlw	0
  5517  0121BC  6EE6               	movwf	postinc1,c
  5518  0121BE  0E02               	movlw	2
  5519  0121C0  6EE6               	movwf	postinc1,c
  5520  0121C2  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5521  0121C6  0060  F007  FFE6   	movff	btemp,postinc1
  5522  0121CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5523  0121D2  0E0C               	movlw	12
  5524  0121D4  6EE6               	movwf	postinc1,c
  5525  0121D6  EC21  F0CD         	call	_sprintf	;wreg free
  5526                           
  5527                           ;main.c: 386:      break;
  5528  0121DA  D016               	goto	l13015
  5529  0121DC                     l13013:
  5530  0121DC  0100               	movlb	0	; () banked
  5531  0121DE  51F7               	movf	_H& (0+255),w,b
  5532  0121E0  6E0B               	movwf	(btemp+10)^0,c
  5533  0121E2  6A0C               	clrf	(btemp+11)^0,c
  5534                           
  5535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5536                           ; Switch size 1, requested type "simple"
  5537                           ; Number of cases is 1, Range of values is 0 to 0
  5538                           ; switch strategies available:
  5539                           ; Name         Instructions Cycles
  5540                           ; simple_byte            4     3 (average)
  5541                           ;	Chosen strategy is simple_byte
  5542  0121E4  500C               	movf	(btemp+11)^0,w,c
  5543  0121E6  0A00               	xorlw	0	; case 0
  5544  0121E8  A4D8               	btfss	status,2,c
  5545  0121EA  D00E               	goto	l13015
  5546                           
  5547                           ; BSR set to: 0
  5548                           ; Switch size 1, requested type "simple"
  5549                           ; Number of cases is 4, Range of values is 0 to 3
  5550                           ; switch strategies available:
  5551                           ; Name         Instructions Cycles
  5552                           ; simple_byte           13     7 (average)
  5553                           ;	Chosen strategy is simple_byte
  5554  0121EC  500B               	movf	(btemp+10)^0,w,c
  5555  0121EE  0A00               	xorlw	0	; case 0
  5556  0121F0  B4D8               	btfsc	status,2,c
  5557  0121F2  D4DF               	goto	l1360
  5558  0121F4  0A01               	xorlw	1	; case 1
  5559  0121F6  B4D8               	btfsc	status,2,c
  5560  0121F8  EFD6  F08C         	goto	l1350
  5561  0121FC  0A03               	xorlw	3	; case 2
  5562  0121FE  B4D8               	btfsc	status,2,c
  5563  012200  D5ED               	goto	l1361
  5564  012202  0A01               	xorlw	1	; case 3
  5565  012204  B4D8               	btfsc	status,2,c
  5566  012206  D6FB               	goto	l12999
  5567  012208                     l13015:
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;main.c: 390:     clear_hid_pflags(&H);
  5571  012208  0EF7               	movlw	_H& (0+255)
  5572  01220A  6EE6               	movwf	postinc1,c
  5573  01220C  EC10  F0DD         	call	_clear_hid_pflags	;wreg free
  5574                           
  5575                           ;main.c: 392:    StartTimer(TMR_DISPLAY, 250);
  5576  012210  0EFA               	movlw	250
  5577  012212  6EE6               	movwf	postinc1,c
  5578  012214  0E00               	movlw	0
  5579  012216  6EE6               	movwf	postinc1,c
  5580  012218  0E0A               	movlw	10
  5581  01221A  6EE6               	movwf	postinc1,c
  5582  01221C  EC6E  F0D9         	call	_StartTimer	;wreg free
  5583                           
  5584                           ;main.c: 393:    V.enter = check_enter_button(&H);
  5585  012220  0EF7               	movlw	_H& (0+255)
  5586  012222  6EE6               	movwf	postinc1,c
  5587  012224  EC8E  F0D9         	call	_check_enter_button	;wreg free
  5588  012228  5001               	movf	btemp^0,w,c
  5589  01222A  0101               	movlb	1	; () banked
  5590  01222C  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5591                           
  5592                           ; BSR set to: 1
  5593                           ;main.c: 394:    if (V.enter && (H.hid_display != HID_AUX)) {
  5594  01222E  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5595  012230  B4D8               	btfsc	status,2,c
  5596  012232  D013               	goto	l13029
  5597                           
  5598                           ; BSR set to: 1
  5599  012234  0E03               	movlw	3
  5600  012236  0100               	movlb	0	; () banked
  5601  012238  19F7               	xorwf	_H& (0+255),w,b
  5602  01223A  B4D8               	btfsc	status,2,c
  5603  01223C  D00E               	goto	l13029
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;main.c: 395:     V.enter = 0;
  5607  01223E  0101               	movlb	1	; () banked
  5608  012240  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5609                           
  5610                           ; BSR set to: 1
  5611                           ;main.c: 396:     V.screen = ~V.screen;
  5612  012242  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5613  012244  D002               	goto	u12600
  5614  012246  0E01               	movlw	1
  5615  012248  D001               	goto	u12606
  5616  01224A                     u12600:
  5617  01224A  0E00               	movlw	0
  5618  01224C                     u12606:
  5619  01224C  0AFF               	xorlw	255
  5620  01224E  6E0C               	movwf	(btemp+11)^0,c
  5621  012250  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5622  012252  180C               	xorwf	(btemp+11)^0,w,c
  5623  012254  0BFE               	andlw	-2
  5624  012256  180C               	xorwf	(btemp+11)^0,w,c
  5625  012258  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5626  01225A                     l13029:
  5627                           
  5628                           ;main.c: 398:    set_vterm(V.screen);
  5629  01225A  0101               	movlb	1	; () banked
  5630  01225C  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5631  01225E  D002               	goto	u12610
  5632  012260  0E01               	movlw	1
  5633  012262  D001               	goto	u12616
  5634  012264                     u12610:
  5635  012264  0E00               	movlw	0
  5636  012266                     u12616:
  5637  012266  6EE6               	movwf	postinc1,c
  5638  012268  ECCD  F0DD         	call	_set_vterm	;wreg free
  5639                           
  5640                           ;main.c: 399:    update_lcd(V.screen);
  5641  01226C  0101               	movlb	1	; () banked
  5642  01226E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5643  012270  D002               	goto	u12620
  5644  012272  0E01               	movlw	1
  5645  012274  D001               	goto	u12626
  5646  012276                     u12620:
  5647  012276  0E00               	movlw	0
  5648  012278                     u12626:
  5649  012278  6EE6               	movwf	postinc1,c
  5650  01227A  EC99  F0CC         	call	_update_lcd	;wreg free
  5651  01227E                     l13033:
  5652                           
  5653                           ;main.c: 405:   check_help(V.flipper);
  5654  01227E  0101               	movlb	1	; () banked
  5655  012280  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5656  012282  6EE6               	movwf	postinc1,c
  5657  012284  ECC1  F0BF         	call	_check_help	;wreg free
  5658                           
  5659                           ;main.c: 407:   if (V.enter) {
  5660  012288  0101               	movlb	1	; () banked
  5661  01228A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5662  01228C  B4D8               	btfsc	status,2,c
  5663  01228E  D062               	goto	l1366
  5664                           
  5665                           ; BSR set to: 1
  5666                           ;main.c: 408:    V.enter = 0;
  5667  012290  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5668                           
  5669                           ;main.c: 409:    V.calib = 0;
  5670  012292  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5671                           
  5672                           ; BSR set to: 1
  5673                           ;main.c: 410:    inp_index += 3;
  5674                           ;stkvar	_inp_index @ sp[(-17)+14]
  5675  012294  0EFD               	movlw	-3
  5676  012296  006F FF8C  F001    	movff	plusw1,btemp
  5677  01229C  0E03               	movlw	3
  5678  01229E  2601               	addwf	btemp^0,f,c
  5679  0122A0  0EFD               	movlw	-3
  5680  0122A2  0060  F007  FFE3   	movff	btemp,plusw1
  5681                           
  5682                           ;main.c: 411:    if (inp_index > 9)
  5683                           ;stkvar	_inp_index @ sp[(-17)+14]
  5684  0122A8  0EFD               	movlw	-3
  5685  0122AA  006F FF8C  F001    	movff	plusw1,btemp
  5686  0122B0  0E09               	movlw	9
  5687  0122B2  6401               	cpfsgt	btemp^0,c
  5688  0122B4  D03A               	goto	l13061
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;main.c: 412:     inp_index = 0;
  5692                           ;stkvar	_inp_index @ sp[(-17)+14]
  5693  0122B6  0EFD               	movlw	-3
  5694  0122B8  6AE3               	clrf	plusw1,c
  5695  0122BA  D037               	goto	l13061
  5696  0122BC                     l13043:
  5697                           
  5698                           ; BSR set to: 1
  5699                           ;main.c: 415:     i = C_BATT;
  5700                           ;stkvar	_i @ sp[(-17)+13]
  5701  0122BC  0EFC               	movlw	-4
  5702  0122BE  6AE3               	clrf	plusw1,c
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;main.c: 416:     j = C_PV;
  5706                           ;stkvar	_j @ sp[(-17)+12]
  5707  0122C0  0EFB               	movlw	-5
  5708  0122C2  6AE3               	clrf	plusw1,c
  5709  0122C4  2AE3               	incf	plusw1,f,c
  5710                           
  5711                           ; BSR set to: 1
  5712                           ;main.c: 417:     k = V_CC;
  5713                           ;stkvar	_k @ sp[(-17)+11]
  5714  0122C6  0EFA               	movlw	-6
  5715  0122C8  6AE3               	clrf	plusw1,c
  5716  0122CA  82E3               	bsf	plusw1,1,c
  5717                           
  5718                           ;main.c: 418:     break;
  5719  0122CC  D043               	goto	l1366
  5720  0122CE                     l13049:
  5721                           
  5722                           ; BSR set to: 1
  5723                           ;main.c: 420:     i = V_BAT;
  5724                           ;stkvar	_i @ sp[(-17)+13]
  5725  0122CE  0EFC               	movlw	-4
  5726  0122D0  6AE3               	clrf	plusw1,c
  5727  0122D2  84E3               	bsf	plusw1,2,c
  5728                           
  5729                           ;main.c: 421:     j = V_PV;
  5730                           ;stkvar	_j @ sp[(-17)+12]
  5731  0122D4  0EFB               	movlw	-5
  5732  0122D6  6AE3               	clrf	plusw1,c
  5733  0122D8  80E3               	bsf	plusw1,0,c
  5734  0122DA  84E3               	bsf	plusw1,2,c	;indir
  5735                           
  5736                           ;main.c: 422:     k = V_CBUS;
  5737                           ;stkvar	_k @ sp[(-17)+11]
  5738  0122DC  0EFA               	movlw	-6
  5739  0122DE  6AE3               	clrf	plusw1,c
  5740  0122E0  82E3               	bsf	plusw1,1,c
  5741  0122E2  84E3               	bsf	plusw1,2,c	;indir
  5742                           
  5743                           ;main.c: 423:     break;
  5744  0122E4  D037               	goto	l1366
  5745  0122E6                     l13051:
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;main.c: 425:     i = V_BBAT;
  5749                           ;stkvar	_i @ sp[(-17)+13]
  5750  0122E6  0EFC               	movlw	-4
  5751  0122E8  6AE3               	clrf	plusw1,c
  5752  0122EA  82E3               	bsf	plusw1,1,c
  5753  0122EC  86E3               	bsf	plusw1,3,c	;indir
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;main.c: 426:     j = V_TEMP;
  5757  0122EE  0E0B               	movlw	11
  5758  0122F0  6E0C               	movwf	(btemp+11)^0,c
  5759                           
  5760                           ;stkvar	_j @ sp[(-17)+12]
  5761  0122F2  0EFB               	movlw	-5
  5762  0122F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5763                           
  5764                           ; BSR set to: 1
  5765                           ;main.c: 427:     k = V_INVERTER;
  5766                           ;stkvar	_k @ sp[(-17)+11]
  5767  0122FA  0EFA               	movlw	-6
  5768  0122FC  6AE3               	clrf	plusw1,c
  5769  0122FE  84E3               	bsf	plusw1,2,c
  5770  012300  86E3               	bsf	plusw1,3,c	;indir
  5771                           
  5772                           ;main.c: 428:     break;
  5773  012302  D028               	goto	l1366
  5774  012304                     l13057:
  5775                           
  5776                           ; BSR set to: 1
  5777                           ;main.c: 430:     i = V_LIGHT_SENSOR;
  5778  012304  0E0D               	movlw	13
  5779  012306  6E0C               	movwf	(btemp+11)^0,c
  5780                           
  5781                           ;stkvar	_i @ sp[(-17)+13]
  5782  012308  0EFC               	movlw	-4
  5783  01230A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5784                           
  5785                           ;main.c: 431:     j = V_LIGHT_SENSOR;
  5786  012310  0E0D               	movlw	13
  5787  012312  6E0C               	movwf	(btemp+11)^0,c
  5788                           
  5789                           ;stkvar	_j @ sp[(-17)+12]
  5790  012314  0EFB               	movlw	-5
  5791  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5792                           
  5793                           ;main.c: 432:     k = V_LIGHT_SENSOR;
  5794  01231C  0E0D               	movlw	13
  5795  01231E  6E0C               	movwf	(btemp+11)^0,c
  5796                           
  5797                           ;stkvar	_k @ sp[(-17)+11]
  5798  012320  0EFA               	movlw	-6
  5799  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5800                           
  5801                           ;main.c: 433:     break;
  5802  012328  D015               	goto	l1366
  5803  01232A                     l13061:
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;stkvar	_inp_index @ sp[(-17)+14]
  5807  01232A  0EFD               	movlw	-3
  5808  01232C  50E3               	movf	plusw1,w,c
  5809  01232E  6E0B               	movwf	(btemp+10)^0,c
  5810  012330  6A0C               	clrf	(btemp+11)^0,c
  5811                           
  5812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5813                           ; Switch size 1, requested type "simple"
  5814                           ; Number of cases is 1, Range of values is 0 to 0
  5815                           ; switch strategies available:
  5816                           ; Name         Instructions Cycles
  5817                           ; simple_byte            4     3 (average)
  5818                           ;	Chosen strategy is simple_byte
  5819  012332  500C               	movf	(btemp+11)^0,w,c
  5820  012334  0A00               	xorlw	0	; case 0
  5821  012336  A4D8               	btfss	status,2,c
  5822  012338  D00D               	goto	l1366
  5823                           
  5824                           ; BSR set to: 1
  5825                           ; Switch size 1, requested type "simple"
  5826                           ; Number of cases is 4, Range of values is 0 to 9
  5827                           ; switch strategies available:
  5828                           ; Name         Instructions Cycles
  5829                           ; simple_byte           13     7 (average)
  5830                           ;	Chosen strategy is simple_byte
  5831  01233A  500B               	movf	(btemp+10)^0,w,c
  5832  01233C  0A00               	xorlw	0	; case 0
  5833  01233E  B4D8               	btfsc	status,2,c
  5834  012340  D7BD               	goto	l13043
  5835  012342  0A03               	xorlw	3	; case 3
  5836  012344  B4D8               	btfsc	status,2,c
  5837  012346  D7C3               	goto	l13049
  5838  012348  0A05               	xorlw	5	; case 6
  5839  01234A  B4D8               	btfsc	status,2,c
  5840  01234C  D7CC               	goto	l13051
  5841  01234E  0A0F               	xorlw	15	; case 9
  5842  012350  B4D8               	btfsc	status,2,c
  5843  012352  D7D8               	goto	l13057
  5844  012354                     l1366:
  5845                           
  5846                           ; BSR set to: 1
  5847                           ;main.c: 442:   if (V.set_sequ) {
  5848  012354  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5849  012356  EF8A  F08C         	goto	l12943
  5850                           
  5851                           ; BSR set to: 1
  5852                           ;main.c: 443:    if (TimerDone(TMR_INFO)) {
  5853  01235A  0E07               	movlw	7
  5854  01235C  6EE6               	movwf	postinc1,c
  5855  01235E  ECF7  F0DB         	call	_TimerDone	;wreg free
  5856  012362  5001               	movf	btemp^0,w,c
  5857  012364  B4D8               	btfsc	status,2,c
  5858  012366  D00C               	goto	l13071
  5859                           
  5860                           ;main.c: 444:     V.set_sequ = 0;
  5861  012368  0101               	movlb	1	; () banked
  5862  01236A  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5863                           
  5864                           ; BSR set to: 1
  5865                           ;main.c: 445:     set_vterm(0);
  5866  01236C  0E00               	movlw	0
  5867  01236E  6EE6               	movwf	postinc1,c
  5868  012370  ECCD  F0DD         	call	_set_vterm	;wreg free
  5869                           
  5870                           ;main.c: 446:     update_lcd(0);
  5871  012374  0E00               	movlw	0
  5872  012376  6EE6               	movwf	postinc1,c
  5873  012378  EC99  F0CC         	call	_update_lcd	;wreg free
  5874                           
  5875                           ;main.c: 447:    } else {
  5876  01237C  EF8A  F08C         	goto	l12943
  5877  012380                     l13071:
  5878                           
  5879                           ;main.c: 448:     set_vterm(2);
  5880  012380  0E02               	movlw	2
  5881  012382  6EE6               	movwf	postinc1,c
  5882  012384  ECCD  F0DD         	call	_set_vterm	;wreg free
  5883                           
  5884                           ;main.c: 449:     update_lcd(2);
  5885  012388  0E02               	movlw	2
  5886  01238A  6EE6               	movwf	postinc1,c
  5887  01238C  EC99  F0CC         	call	_update_lcd	;wreg free
  5888  012390  EF8A  F08C         	goto	l12943
  5889  012394                     __end_of_main:
  5890                           	opt callstack 0
  5891                           
  5892 ;; *************** function _static_soc *****************
  5893 ;; Defined at:
  5894 ;;		line 117 in file "mbmc.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1  [STACK] void 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr2l, fsr2h
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/1
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5912 ;;Total ram usage:        0 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:   15
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_main
  5919 ;; This function uses a reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text1
  5923  01B3DC                     __ptext1:
  5924                           	opt callstack 0
  5925  01B3DC                     _static_soc:
  5926                           	opt callstack 15
  5927                           
  5928                           ;mbmc.c: 119:  C.runtime = 120;
  5929                           
  5930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5931                           ;incstack = 0
  5932  01B3DC  0E78               	movlw	120
  5933  01B3DE  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
  5934  01B3E4  0E00               	movlw	0
  5935  01B3E6  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
  5936                           
  5937                           ;mbmc.c: 120:  C.soc = 100;
  5938  01B3EC  0E64               	movlw	100
  5939  01B3EE  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
  5940  01B3F4  0E00               	movlw	0
  5941  01B3F6  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
  5942                           
  5943                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5944  01B3FC  EE21  F38B         	lfsr	2,_C+140	;volatile
  5945  01B400  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5946  01B406  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5947  01B40C  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5948  01B412  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5949                           
  5950                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5951  01B418  0012               	return		;funcret
  5952  01B41A                     __end_of_static_soc:
  5953                           	opt callstack 0
  5954                           
  5955 ;; *************** function _start_switch_handler *****************
  5956 ;; Defined at:
  5957 ;;		line 124 in file "dio.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1  [STACK] void 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 3F/39
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:   16
  5978 ;; This function calls:
  5979 ;;		_INT1_SetInterruptHandler
  5980 ;; This function is called by:
  5981 ;;		_main
  5982 ;; This function uses a reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text2
  5986  01BB3C                     __ptext2:
  5987                           	opt callstack 0
  5988  01BB3C                     _start_switch_handler:
  5989                           	opt callstack 14
  5990                           
  5991                           ;dio.c: 126:  (PIE5bits.INT1IE = 0);
  5992                           
  5993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5994                           ;incstack = 0
  5995  01BB3C  0139               	movlb	57	; () banked
  5996  01BB3E  9195               	bcf	149,0,b	;volatile
  5997                           
  5998                           ; BSR set to: 57
  5999                           ;dio.c: 127:  INT1_SetInterruptHandler(switch_handler);
  6000  01BB40  0E14               	movlw	low _switch_handler
  6001  01BB42  6EE6               	movwf	postinc1,c
  6002  01BB44  0E91               	movlw	high _switch_handler
  6003  01BB46  6EE6               	movwf	postinc1,c
  6004  01BB48  0E01               	movlw	low (_switch_handler shr (0+16))
  6005  01BB4A  6EE6               	movwf	postinc1,c
  6006  01BB4C  EC83  F0DC         	call	_INT1_SetInterruptHandler	;wreg free
  6007                           
  6008                           ;dio.c: 128:  S.button[SNULL].sw = SW_INVALID;
  6009  01BB50  0E02               	movlw	2
  6010  01BB52  0102               	movlb	2	; () banked
  6011  01BB54  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6012                           
  6013                           ; BSR set to: 2
  6014                           ;dio.c: 129:  (PIE5bits.INT1IE = 1);
  6015  01BB56  0139               	movlb	57	; () banked
  6016  01BB58  8195               	bsf	149,0,b	;volatile
  6017                           
  6018                           ; BSR set to: 57
  6019                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6020  01BB5A  0012               	return		;funcret
  6021  01BB5C                     __end_of_start_switch_handler:
  6022                           	opt callstack 0
  6023                           
  6024 ;; *************** function _srand *****************
  6025 ;; Defined at:
  6026 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  s               2  [STACK] unsigned int 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;		None
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1  [STACK] void 
  6033 ;; Registers used:
  6034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 3F/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;Total ram usage:        0 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:   15
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_main
  6051 ;; This function uses a reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text3
  6055  01B570                     __ptext3:
  6056                           	opt callstack 0
  6057  01B570                     _srand:
  6058                           	opt callstack 15
  6059                           
  6060                           ;stkvar	_s @ sp[(0)+-2]
  6061                           
  6062                           ; BSR set to: 57
  6063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6064                           ;incstack = 0
  6065  01B570  0EFE               	movlw	-2
  6066  01B572  50E3               	movf	plusw1,w,c
  6067  01B574  0FFF               	addlw	255
  6068  01B576  6E0B               	movwf	(btemp+10)^0,c
  6069  01B578  0EFF               	movlw	-1
  6070  01B57A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6071  01B580  0EFF               	movlw	255
  6072  01B582  220C               	addwfc	(btemp+11)^0,f,c
  6073  01B584  0060  F02C  F0CF   	movff	btemp+10,_seed
  6074  01B58A  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6075  01B590  0100               	movlb	0	; () banked
  6076  01B592  6BD1               	clrf	(_seed+2)& (0+255),b
  6077  01B594  6BD2               	clrf	(_seed+3)& (0+255),b
  6078  01B596  6BD3               	clrf	(_seed+4)& (0+255),b
  6079  01B598  6BD4               	clrf	(_seed+5)& (0+255),b
  6080  01B59A  6BD5               	clrf	(_seed+6)& (0+255),b
  6081  01B59C  6BD6               	clrf	(_seed+7)& (0+255),b
  6082                           
  6083                           ; BSR set to: 0
  6084                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6085  01B59E  52E5               	movf	postdec1,f,c
  6086  01B5A0  52E5               	movf	postdec1,f,c
  6087  01B5A2  0012               	return		;funcret
  6088  01B5A4                     __end_of_srand:
  6089                           	opt callstack 0
  6090                           
  6091 ;; *************** function _spinners *****************
  6092 ;; Defined at:
  6093 ;;		line 145 in file "mbmc.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  shape           1  [STACK] unsigned char 
  6096 ;;  reset           1  [STACK] unsigned char 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  c               1  [STACK] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1  [STACK] unsigned char 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:   16
  6115 ;; This function calls:
  6116 ;;		_strlen
  6117 ;; This function is called by:
  6118 ;;		_main
  6119 ;; This function uses a reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text4
  6123  019E28                     __ptext4:
  6124                           	opt callstack 0
  6125  019E28                     _spinners:
  6126                           	opt callstack 0
  6127                           
  6128                           ; BSR set to: 0
  6129                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6130  019E28  52E6               	movf	postinc1,f,c
  6131                           
  6132                           ;mbmc.c: 145: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 146: {;mbmc.c: 147:  s
      +                          tatic uint8_t s[6];;mbmc.c: 148:  char c;;mbmc.c: 150:  if (shape > (6 - 1))
  6133                           ;stkvar	_shape @ sp[(-1)+-1]
  6134                           
  6135                           ;incstack = 0
  6136  019E2A  0EFE               	movlw	-2
  6137  019E2C  006F FF8C  F001    	movff	plusw1,btemp
  6138  019E32  0E05               	movlw	5
  6139  019E34  6401               	cpfsgt	btemp^0,c
  6140  019E36  D002               	goto	l1882
  6141                           
  6142                           ;mbmc.c: 151:   shape = 0;
  6143                           ;stkvar	_shape @ sp[(-1)+-1]
  6144  019E38  0EFE               	movlw	-2
  6145  019E3A  6AE3               	clrf	plusw1,c
  6146  019E3C                     l1882:
  6147                           
  6148                           ;mbmc.c: 152:  if (reset)
  6149                           ;stkvar	_reset @ sp[(-1)+-2]
  6150  019E3C  0EFD               	movlw	-3
  6151  019E3E  50E3               	movf	plusw1,w,c
  6152  019E40  B4D8               	btfsc	status,2,c
  6153  019E42  D00A               	goto	l10761
  6154                           
  6155                           ;mbmc.c: 153:   s[shape] = 0;
  6156                           ;stkvar	_shape @ sp[(-1)+-1]
  6157  019E44  0EFE               	movlw	-2
  6158  019E46  006F FF8C  F00C    	movff	plusw1,btemp+11
  6159  019E4C  500C               	movf	(btemp+11)^0,w,c
  6160  019E4E  0F74               	addlw	low spinners@s
  6161  019E50  6ED9               	movwf	fsr2l,c
  6162  019E52  6ADA               	clrf	fsr2h,c
  6163  019E54  0E00               	movlw	0
  6164  019E56  6EDF               	movwf	indf2,c
  6165  019E58                     l10761:
  6166                           
  6167                           ;mbmc.c: 154:  c = spin[shape][s[shape]];
  6168                           ;stkvar	_shape @ sp[(-1)+-1]
  6169  019E58  0EFE               	movlw	-2
  6170  019E5A  50E3               	movf	plusw1,w,c
  6171  019E5C  0D14               	mullw	20
  6172  019E5E  0EC7               	movlw	low _spin
  6173  019E60  6E0B               	movwf	(btemp+10)^0,c
  6174  019E62  0EFB               	movlw	high _spin
  6175  019E64  6E0C               	movwf	(btemp+11)^0,c
  6176  019E66  50F3               	movf	243,w,c
  6177  019E68  260B               	addwf	(btemp+10)^0,f,c
  6178  019E6A  50F4               	movf	244,w,c
  6179  019E6C  220C               	addwfc	(btemp+11)^0,f,c
  6180                           
  6181                           ;stkvar	_shape @ sp[(-1)+-1]
  6182  019E6E  0EFE               	movlw	-2
  6183  019E70  006F FF8C  F00A    	movff	plusw1,btemp+9
  6184  019E76  500A               	movf	(btemp+9)^0,w,c
  6185  019E78  0F74               	addlw	low spinners@s
  6186  019E7A  6ED9               	movwf	fsr2l,c
  6187  019E7C  6ADA               	clrf	fsr2h,c
  6188  019E7E  50DF               	movf	indf2,w,c
  6189  019E80  260B               	addwf	(btemp+10)^0,f,c
  6190  019E82  0E00               	movlw	0
  6191  019E84  220C               	addwfc	(btemp+11)^0,f,c
  6192  019E86  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6193  019E8C  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6194  019E92                     	if	0	;tblptru may be non-zero
  6195  019E92                     	endif
  6196  019E92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6197  019E92  0E00               	movlw	low (__mediumconst shr (0+16))
  6198  019E94  6EF8               	movwf	tblptru,c
  6199  019E96                     	endif
  6200                           
  6201                           ;stkvar	_c @ sp[(-1)+0]
  6202  019E96  0008               	tblrd		*
  6203  019E98  0EFF               	movlw	-1
  6204  019E9A  006F FFD7 FFE3     	movff	tablat,plusw1
  6205                           
  6206                           ;mbmc.c: 155:  if (++s[shape] >= strlen(spin[shape]))
  6207                           ;stkvar	_shape @ sp[(-1)+-1]
  6208  019EA0  0EFE               	movlw	-2
  6209  019EA2  50E3               	movf	plusw1,w,c
  6210  019EA4  0D14               	mullw	20
  6211  019EA6  0EC7               	movlw	low _spin
  6212  019EA8  6E0B               	movwf	(btemp+10)^0,c
  6213  019EAA  0EFB               	movlw	high _spin
  6214  019EAC  6E0C               	movwf	(btemp+11)^0,c
  6215  019EAE  50F3               	movf	243,w,c
  6216  019EB0  260B               	addwf	(btemp+10)^0,f,c
  6217  019EB2  50F4               	movf	244,w,c
  6218  019EB4  220C               	addwfc	(btemp+11)^0,f,c
  6219  019EB6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6220  019EBC  0060  F033  FFE6   	movff	btemp+11,postinc1
  6221  019EC2  ECE0  F0D2         	call	_strlen	;wreg free
  6222                           
  6223                           ;stkvar	_shape @ sp[(-1)+-1]
  6224  019EC6  0EFE               	movlw	-2
  6225  019EC8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6226  019ECE  500C               	movf	(btemp+11)^0,w,c
  6227  019ED0  0F74               	addlw	low spinners@s
  6228  019ED2  6ED9               	movwf	fsr2l,c
  6229  019ED4  6ADA               	clrf	fsr2h,c
  6230  019ED6  2ADF               	incf	indf2,f,c
  6231  019ED8  50DF               	movf	indf2,w,c
  6232  019EDA  6E0B               	movwf	(btemp+10)^0,c
  6233  019EDC  6A0C               	clrf	(btemp+11)^0,c
  6234  019EDE  5001               	movf	btemp^0,w,c
  6235  019EE0  5C0B               	subwf	(btemp+10)^0,w,c
  6236  019EE2  5002               	movf	(btemp+1)^0,w,c
  6237  019EE4  580C               	subwfb	(btemp+11)^0,w,c
  6238  019EE6  A0D8               	btfss	status,0,c
  6239  019EE8  D00A               	goto	l10767
  6240                           
  6241                           ;mbmc.c: 156:   s[shape] = 0;
  6242                           ;stkvar	_shape @ sp[(-1)+-1]
  6243  019EEA  0EFE               	movlw	-2
  6244  019EEC  006F FF8C  F00C    	movff	plusw1,btemp+11
  6245  019EF2  500C               	movf	(btemp+11)^0,w,c
  6246  019EF4  0F74               	addlw	low spinners@s
  6247  019EF6  6ED9               	movwf	fsr2l,c
  6248  019EF8  6ADA               	clrf	fsr2h,c
  6249  019EFA  0E00               	movlw	0
  6250  019EFC  6EDF               	movwf	indf2,c
  6251  019EFE                     l10767:
  6252                           
  6253                           ;mbmc.c: 157:  return c;
  6254                           ;stkvar	_c @ sp[(-1)+0]
  6255  019EFE  0EFF               	movlw	-1
  6256  019F00  006F FF8C  F001    	movff	plusw1,btemp
  6257                           
  6258                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6259  019F06  52E5               	movf	postdec1,f,c
  6260  019F08  52E5               	movf	postdec1,f,c
  6261  019F0A  52E5               	movf	postdec1,f,c
  6262  019F0C  0012               	return		;funcret
  6263  019F0E                     __end_of_spinners:
  6264                           	opt callstack 0
  6265                           
  6266 ;; *************** function _init_port_dma *****************
  6267 ;; Defined at:
  6268 ;;		line 90 in file "eadog.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1  [STACK] void 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/1
  6279 ;;		On exit  : 3F/3B
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6286 ;;Total ram usage:        0 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:   15
  6289 ;; This function calls:
  6290 ;;		Nothing
  6291 ;; This function is called by:
  6292 ;;		_main
  6293 ;; This function uses a reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text5
  6297  01B5D8                     __ptext5:
  6298                           	opt callstack 0
  6299  01B5D8                     _init_port_dma:
  6300                           	opt callstack 15
  6301                           
  6302                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6303                           
  6304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6305                           ;incstack = 0
  6306  01B5D8  0E3F               	movlw	-193
  6307  01B5DA  013B               	movlb	59	; () banked
  6308  01B5DC  17DD               	andwf	221,f,b	;volatile
  6309                           
  6310                           ; BSR set to: 59
  6311                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6312  01B5DE  9BDD               	bcf	221,5,b	;volatile
  6313                           
  6314                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6315  01B5E0  51DD               	movf	221,w,b	;volatile
  6316  01B5E2  0BF9               	andlw	-7
  6317  01B5E4  0902               	iorlw	2
  6318  01B5E6  6FDD               	movwf	221,b	;volatile
  6319                           
  6320                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6321  01B5E8  0EE7               	movlw	-25
  6322  01B5EA  17DD               	andwf	221,f,b	;volatile
  6323                           
  6324                           ; BSR set to: 59
  6325                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6326  01B5EC  81DD               	bsf	221,0,b	;volatile
  6327                           
  6328                           ; BSR set to: 59
  6329                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6330  01B5EE  9DDC               	bcf	220,6,b	;volatile
  6331                           
  6332                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6333  01B5F0  0E3D               	movlw	61
  6334  01B5F2  6FD1               	movwf	209,b	;volatile
  6335  01B5F4  0EEA               	movlw	234
  6336  01B5F6  6FD0               	movwf	208,b	;volatile
  6337                           
  6338                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6339  01B5F8  0EFF               	movlw	low _port_data
  6340  01B5FA  6FD9               	movwf	217,b	;volatile
  6341  01B5FC  0E04               	movlw	high _port_data
  6342  01B5FE  6FDA               	movwf	218,b	;volatile
  6343  01B600  0E00               	movlw	low (_port_data shr (0+16))
  6344  01B602  6FDB               	movwf	219,b	;volatile
  6345                           
  6346                           ; BSR set to: 59
  6347                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6348  01B604  9BDC               	bcf	220,5,b	;volatile
  6349                           
  6350                           ; BSR set to: 59
  6351                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6352  01B606  0012               	return		;funcret
  6353  01B608                     __end_of_init_port_dma:
  6354                           	opt callstack 0
  6355                           
  6356 ;; *************** function _init_display *****************
  6357 ;; Defined at:
  6358 ;;		line 38 in file "eadog.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1  [STACK] void 
  6365 ;; Registers used:
  6366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6367 ;; Tracked objects:
  6368 ;;		On entry : 3F/3B
  6369 ;;		On exit  : 3F/3D
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:   17
  6379 ;; This function calls:
  6380 ;;		_ringBufS_init
  6381 ;;		_send_lcd_cmd
  6382 ;;		_send_lcd_cmd_long
  6383 ;;		_wdtdelay
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;; This function uses a reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text6
  6390  019D3E                     __ptext6:
  6391                           	opt callstack 0
  6392  019D3E                     _init_display:
  6393                           	opt callstack 13
  6394                           
  6395                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6396                           
  6397                           ; BSR set to: 59
  6398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6399                           ;incstack = 0
  6400  019D3E  0E83               	movlw	low _ring_buf1
  6401  019D40  0100               	movlb	0	; () banked
  6402  019D42  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6403  019D44  0E03               	movlw	high _ring_buf1
  6404  019D46  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6405                           
  6406                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6407  019D48  0E40               	movlw	low _ring_buf2
  6408  019D4A  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6409  019D4C  0E03               	movlw	high _ring_buf2
  6410  019D4E  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6414  019D50  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6415  019D56  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6416  019D5C  ECE3  F0DB         	call	_ringBufS_init	;wreg free
  6417                           
  6418                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6419  019D60  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6420  019D66  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6421  019D6C  ECE3  F0DB         	call	_ringBufS_init	;wreg free
  6422                           
  6423                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6424  019D70  84BE               	bsf	190,2,c	;volatile
  6425  019D72  84BC               	bsf	188,2,c	;volatile
  6426                           
  6427                           ;eadog.c: 59:  wdtdelay(350000);
  6428  019D74  0E30               	movlw	48
  6429  019D76  6EE6               	movwf	postinc1,c
  6430  019D78  0E57               	movlw	87
  6431  019D7A  6EE6               	movwf	postinc1,c
  6432  019D7C  0E05               	movlw	5
  6433  019D7E  6EE6               	movwf	postinc1,c
  6434  019D80  0E00               	movlw	0
  6435  019D82  6EE6               	movwf	postinc1,c
  6436  019D84  EC34  F0D7         	call	_wdtdelay	;wreg free
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6440  019D88  0E39               	movlw	57
  6441  019D8A  6EE6               	movwf	postinc1,c
  6442  019D8C  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6446  019D90  0E1D               	movlw	29
  6447  019D92  6EE6               	movwf	postinc1,c
  6448  019D94  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6452  019D98  0E50               	movlw	80
  6453  019D9A  6EE6               	movwf	postinc1,c
  6454  019D9C  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6458  019DA0  0E6C               	movlw	108
  6459  019DA2  6EE6               	movwf	postinc1,c
  6460  019DA4  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6464  019DA8  0E76               	movlw	118
  6465  019DAA  6EE6               	movwf	postinc1,c
  6466  019DAC  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6470  019DB0  0E38               	movlw	56
  6471  019DB2  6EE6               	movwf	postinc1,c
  6472  019DB4  ECBB  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6476  019DB8  0E0F               	movlw	15
  6477  019DBA  6EE6               	movwf	postinc1,c
  6478  019DBC  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6482  019DC0  0E01               	movlw	1
  6483  019DC2  6EE6               	movwf	postinc1,c
  6484  019DC4  ECBB  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6488  019DC8  0E02               	movlw	2
  6489  019DCA  6EE6               	movwf	postinc1,c
  6490  019DCC  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6494  019DD0  0E06               	movlw	6
  6495  019DD2  6EE6               	movwf	postinc1,c
  6496  019DD4  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;eadog.c: 70:  wdtdelay(30);
  6500  019DD8  0E1E               	movlw	30
  6501  019DDA  6EE6               	movwf	postinc1,c
  6502  019DDC  0E00               	movlw	0
  6503  019DDE  6EE6               	movwf	postinc1,c
  6504  019DE0  0E00               	movlw	0
  6505  019DE2  6EE6               	movwf	postinc1,c
  6506  019DE4  0E00               	movlw	0
  6507  019DE6  6EE6               	movwf	postinc1,c
  6508  019DE8  EC34  F0D7         	call	_wdtdelay	;wreg free
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6512  019DEC  0E02               	movlw	2
  6513  019DEE  013D               	movlb	61	; () banked
  6514  019DF0  6F16               	movwf	22,b	;volatile
  6515                           
  6516                           ; BSR set to: 61
  6517                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6518  019DF2  0E40               	movlw	64
  6519  019DF4  6F15               	movwf	21,b	;volatile
  6520                           
  6521                           ; BSR set to: 61
  6522                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6523  019DF6  0E83               	movlw	131
  6524  019DF8  6F14               	movwf	20,b	;volatile
  6525                           
  6526                           ; BSR set to: 61
  6527                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6528  019DFA  931A               	bcf	26,1,b	;volatile
  6529                           
  6530                           ; BSR set to: 61
  6531                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6532  019DFC  0E3F               	movlw	-193
  6533  019DFE  013B               	movlb	59	; () banked
  6534  019E00  17FD               	andwf	253,f,b	;volatile
  6535                           
  6536                           ; BSR set to: 59
  6537                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6538  019E02  9BFD               	bcf	253,5,b	;volatile
  6539                           
  6540                           ; BSR set to: 59
  6541                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6542  019E04  51FD               	movf	253,w,b	;volatile
  6543  019E06  0BF9               	andlw	-7
  6544  019E08  0902               	iorlw	2
  6545  019E0A  6FFD               	movwf	253,b	;volatile
  6546                           
  6547                           ; BSR set to: 59
  6548                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6549  019E0C  0EE7               	movlw	-25
  6550  019E0E  17FD               	andwf	253,f,b	;volatile
  6551                           
  6552                           ; BSR set to: 59
  6553                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6554  019E10  81FD               	bsf	253,0,b	;volatile
  6555                           
  6556                           ; BSR set to: 59
  6557                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6558  019E12  0E83               	movlw	low _ring_buf1
  6559  019E14  6FF9               	movwf	249,b	;volatile
  6560  019E16  0E03               	movlw	high _ring_buf1
  6561  019E18  6FFA               	movwf	250,b	;volatile
  6562  019E1A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6563  019E1C  6FFB               	movwf	251,b	;volatile
  6564                           
  6565                           ; BSR set to: 59
  6566                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6567  019E1E  9BFC               	bcf	252,5,b	;volatile
  6568                           
  6569                           ; BSR set to: 59
  6570                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6571  019E20  013D               	movlb	61	; () banked
  6572  019E22  831A               	bsf	26,1,b	;volatile
  6573                           
  6574                           ; BSR set to: 61
  6575                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6576  019E24  94BE               	bcf	190,2,c	;volatile
  6577                           
  6578                           ; BSR set to: 61
  6579                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6580  019E26  0012               	return		;funcret
  6581  019E28                     __end_of_init_display:
  6582                           	opt callstack 0
  6583                           
  6584 ;; *************** function _send_lcd_cmd_long *****************
  6585 ;; Defined at:
  6586 ;;		line 129 in file "eadog.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  cmd             1  [STACK] const unsigned char 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1  [STACK] void 
  6593 ;; Registers used:
  6594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6595 ;; Tracked objects:
  6596 ;;		On entry : 3F/0
  6597 ;;		On exit  : 3F/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6604 ;;Total ram usage:        0 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:   16
  6607 ;; This function calls:
  6608 ;;		_SPI1_Exchange8bit
  6609 ;;		_wdtdelay
  6610 ;; This function is called by:
  6611 ;;		_init_display
  6612 ;; This function uses a reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text7
  6616  01B776                     __ptext7:
  6617                           	opt callstack 0
  6618  01B776                     _send_lcd_cmd_long:
  6619                           	opt callstack 13
  6620                           
  6621                           ; BSR set to: 61
  6622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6623                           ;incstack = 0
  6624                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6625  01B776  92BC               	bcf	188,1,c	;volatile
  6626                           
  6627                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6628  01B778  94BC               	bcf	188,2,c	;volatile
  6629                           
  6630                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6631                           ;stkvar	_cmd @ sp[(0)+-1]
  6632  01B77A  0EFF               	movlw	-1
  6633  01B77C  50E3               	movf	plusw1,w,c
  6634  01B77E  6EE6               	movwf	postinc1,c
  6635  01B780  ECBE  F0DD         	call	_SPI1_Exchange8bit	;wreg free
  6636                           
  6637                           ; BSR set to: 57
  6638                           ;eadog.c: 134:  wdtdelay(800);
  6639  01B784  0E20               	movlw	32
  6640  01B786  6EE6               	movwf	postinc1,c
  6641  01B788  0E03               	movlw	3
  6642  01B78A  6EE6               	movwf	postinc1,c
  6643  01B78C  0E00               	movlw	0
  6644  01B78E  6EE6               	movwf	postinc1,c
  6645  01B790  0E00               	movlw	0
  6646  01B792  6EE6               	movwf	postinc1,c
  6647  01B794  EC34  F0D7         	call	_wdtdelay	;wreg free
  6648                           
  6649                           ; BSR set to: 0
  6650  01B798  82BC               	bsf	188,1,c	;volatile
  6651                           
  6652                           ; BSR set to: 0
  6653                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6654  01B79A  52E5               	movf	postdec1,f,c
  6655  01B79C  0012               	return		;funcret
  6656  01B79E                     __end_of_send_lcd_cmd_long:
  6657                           	opt callstack 0
  6658                           
  6659 ;; *************** function _send_lcd_cmd *****************
  6660 ;; Defined at:
  6661 ;;		line 117 in file "eadog.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  cmd             1  [STACK] const unsigned char 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1  [STACK] void 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6670 ;; Tracked objects:
  6671 ;;		On entry : 3F/0
  6672 ;;		On exit  : 3F/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:   16
  6682 ;; This function calls:
  6683 ;;		_SPI1_Exchange8bit
  6684 ;;		_wdtdelay
  6685 ;; This function is called by:
  6686 ;;		_init_display
  6687 ;; This function uses a reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text8
  6691  01B79E                     __ptext8:
  6692                           	opt callstack 0
  6693  01B79E                     _send_lcd_cmd:
  6694                           	opt callstack 13
  6695                           
  6696                           ; BSR set to: 0
  6697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6698                           ;incstack = 0
  6699                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6700  01B79E  92BC               	bcf	188,1,c	;volatile
  6701                           
  6702                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6703  01B7A0  94BC               	bcf	188,2,c	;volatile
  6704                           
  6705                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6706                           ;stkvar	_cmd @ sp[(0)+-1]
  6707  01B7A2  0EFF               	movlw	-1
  6708  01B7A4  50E3               	movf	plusw1,w,c
  6709  01B7A6  6EE6               	movwf	postinc1,c
  6710  01B7A8  ECBE  F0DD         	call	_SPI1_Exchange8bit	;wreg free
  6711                           
  6712                           ; BSR set to: 57
  6713                           ;eadog.c: 122:  wdtdelay(30);
  6714  01B7AC  0E1E               	movlw	30
  6715  01B7AE  6EE6               	movwf	postinc1,c
  6716  01B7B0  0E00               	movlw	0
  6717  01B7B2  6EE6               	movwf	postinc1,c
  6718  01B7B4  0E00               	movlw	0
  6719  01B7B6  6EE6               	movwf	postinc1,c
  6720  01B7B8  0E00               	movlw	0
  6721  01B7BA  6EE6               	movwf	postinc1,c
  6722  01B7BC  EC34  F0D7         	call	_wdtdelay	;wreg free
  6723                           
  6724                           ; BSR set to: 0
  6725  01B7C0  82BC               	bsf	188,1,c	;volatile
  6726                           
  6727                           ; BSR set to: 0
  6728                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6729  01B7C2  52E5               	movf	postdec1,f,c
  6730  01B7C4  0012               	return		;funcret
  6731  01B7C6                     __end_of_send_lcd_cmd:
  6732                           	opt callstack 0
  6733                           
  6734 ;; *************** function _SPI1_Exchange8bit *****************
  6735 ;; Defined at:
  6736 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  data            1  [STACK] unsigned char 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1  [STACK] unsigned char 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 3F/39
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:   15
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_send_lcd_cmd
  6761 ;;		_send_lcd_cmd_long
  6762 ;; This function uses a reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text9
  6766  01BB7C                     __ptext9:
  6767                           	opt callstack 0
  6768  01BB7C                     _SPI1_Exchange8bit:
  6769                           	opt callstack 13
  6770                           
  6771                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6772                           
  6773                           ; BSR set to: 0
  6774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6775                           ;incstack = 0
  6776  01BB7C  0E01               	movlw	1
  6777  01BB7E  013D               	movlb	61	; () banked
  6778  01BB80  6F12               	movwf	18,b	;volatile
  6779                           
  6780                           ; BSR set to: 61
  6781                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6782                           ;stkvar	_data @ sp[(0)+-1]
  6783  01BB82  0EFF               	movlw	-1
  6784  01BB84  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6785  01BB8A                     l807:
  6786                           
  6787                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6788  01BB8A  0139               	movlb	57	; () banked
  6789  01BB8C  A9A2               	btfss	162,4,b	;volatile
  6790  01BB8E  D7FD               	goto	l807
  6791                           
  6792                           ; BSR set to: 57
  6793                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6794  01BB90  006F F440  F001    	movff	15632,btemp	;volatile
  6795                           
  6796                           ; BSR set to: 57
  6797                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6798  01BB96  52E5               	movf	postdec1,f,c
  6799  01BB98  0012               	return		;funcret
  6800  01BB9A                     __end_of_SPI1_Exchange8bit:
  6801                           	opt callstack 0
  6802                           
  6803 ;; *************** function _ringBufS_init *****************
  6804 ;; Defined at:
  6805 ;;		line 22 in file "ringbufs.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  _this           2  [STACK] PTR volatile struct ring
  6808 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;		None
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1  [STACK] void 
  6813 ;; Registers used:
  6814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;Total ram usage:        0 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; Hardware stack levels required when called:   16
  6827 ;; This function calls:
  6828 ;;		_memset
  6829 ;; This function is called by:
  6830 ;;		_init_display
  6831 ;; This function uses a reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text10
  6835  01B7C6                     __ptext10:
  6836                           	opt callstack 0
  6837  01B7C6                     _ringBufS_init:
  6838                           	opt callstack 13
  6839                           
  6840                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6841                           
  6842                           ; BSR set to: 57
  6843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6844                           ;incstack = 0
  6845  01B7C6  0E43               	movlw	67
  6846  01B7C8  6EE6               	movwf	postinc1,c
  6847  01B7CA  0E00               	movlw	0
  6848  01B7CC  6EE6               	movwf	postinc1,c
  6849  01B7CE  0E00               	movlw	0
  6850  01B7D0  6EE6               	movwf	postinc1,c
  6851  01B7D2  0E00               	movlw	0
  6852  01B7D4  6EE6               	movwf	postinc1,c
  6853                           
  6854                           ;stkvar	__this @ sp[(-4)+-2]
  6855  01B7D6  0EFA               	movlw	-6
  6856  01B7D8  006F FF8F FFE6     	movff	plusw1,postinc1
  6857  01B7DE  006F FF8F FFE6     	movff	plusw1,postinc1
  6858  01B7E4  ECC5  F0B5         	call	_memset	;wreg free
  6859                           
  6860                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6861  01B7E8  52E5               	movf	postdec1,f,c
  6862  01B7EA  52E5               	movf	postdec1,f,c
  6863  01B7EC  0012               	return		;funcret
  6864  01B7EE                     __end_of_ringBufS_init:
  6865                           	opt callstack 0
  6866                           
  6867 ;; *************** function _init_bsoc *****************
  6868 ;; Defined at:
  6869 ;;		line 95 in file "bsoc.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1  [STACK] void 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/1
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;Total ram usage:        0 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:   18
  6890 ;; This function calls:
  6891 ;;		_TMR3_SetInterruptHandler
  6892 ;;		_Volts_to_SOC
  6893 ;;		___fldiv
  6894 ;;		___flmul
  6895 ;;		___fltol
  6896 ;;		___xxtofl
  6897 ;;		_conv_raw_result
  6898 ;; This function is called by:
  6899 ;;		_main
  6900 ;; This function uses a reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text11
  6904  017B38                     __ptext11:
  6905                           	opt callstack 0
  6906  017B38                     _init_bsoc:
  6907                           	opt callstack 12
  6908                           
  6909                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6910                           
  6911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6912                           ;incstack = 0
  6913  017B38  0E00               	movlw	0
  6914  017B3A  6EE6               	movwf	postinc1,c
  6915  017B3C  0E00               	movlw	0
  6916  017B3E  6EE6               	movwf	postinc1,c
  6917  017B40  0E7A               	movlw	122
  6918  017B42  6EE6               	movwf	postinc1,c
  6919  017B44  0E44               	movlw	68
  6920  017B46  6EE6               	movwf	postinc1,c
  6921  017B48  0E00               	movlw	0
  6922  017B4A  6EE6               	movwf	postinc1,c
  6923  017B4C  0E04               	movlw	4
  6924  017B4E  6EE6               	movwf	postinc1,c
  6925  017B50  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  6926  017B54  0060  F007  FFE6   	movff	btemp,postinc1
  6927  017B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6928  017B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6929  017B66  0060  F013  FFE6   	movff	btemp+3,postinc1
  6930  017B6C  ECC8  F0C5         	call	___fltol	;wreg free
  6931  017B70  0060  F007  FFE6   	movff	btemp,postinc1
  6932  017B76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6933  017B7C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6934  017B82  0060  F013  FFE6   	movff	btemp+3,postinc1
  6935  017B88  0E00               	movlw	0
  6936  017B8A  6EE6               	movwf	postinc1,c
  6937  017B8C  ECCA  F0C0         	call	___xxtofl	;wreg free
  6938  017B90  0060  F007  FFE6   	movff	btemp,postinc1
  6939  017B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6940  017B9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6941  017BA2  0060  F013  FFE6   	movff	btemp+3,postinc1
  6942  017BA8  ECA0  F099         	call	___flmul	;wreg free
  6943  017BAC  0060  F007  FFE6   	movff	btemp,postinc1
  6944  017BB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6945  017BB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6946  017BBE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6947  017BC4  ECC8  F0C5         	call	___fltol	;wreg free
  6948  017BC8  0060  F007  FFE6   	movff	btemp,postinc1
  6949  017BCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6950  017BD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6951  017BDA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6952  017BE0  ECF6  F0CA         	call	_Volts_to_SOC	;wreg free
  6953  017BE4  0060  F004  F7B1   	movff	btemp,_C+178	;volatile
  6954  017BEA  0060  F008  F7B2   	movff	btemp+1,_C+179	;volatile
  6955                           
  6956                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  6957  017BF0  EE21  F38B         	lfsr	2,_C+140	;volatile
  6958  017BF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6959  017BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6960  017C00  006F FF7B FFE6     	movff	postinc2,postinc1
  6961  017C06  006F FF7B FFE6     	movff	postinc2,postinc1
  6962  017C0C  0E00               	movlw	0
  6963  017C0E  6EE6               	movwf	postinc1,c
  6964  017C10  0E00               	movlw	0
  6965  017C12  6EE6               	movwf	postinc1,c
  6966  017C14  0EC8               	movlw	200
  6967  017C16  6EE6               	movwf	postinc1,c
  6968  017C18  0E42               	movlw	66
  6969  017C1A  6EE6               	movwf	postinc1,c
  6970  017C1C  0E00               	movlw	0
  6971  017C1E  6EE6               	movwf	postinc1,c
  6972  017C20  0E00               	movlw	0
  6973  017C22  6EE6               	movwf	postinc1,c
  6974  017C24  0E7A               	movlw	122
  6975  017C26  6EE6               	movwf	postinc1,c
  6976  017C28  0E44               	movlw	68
  6977  017C2A  6EE6               	movwf	postinc1,c
  6978  017C2C  0E00               	movlw	0
  6979  017C2E  6EE6               	movwf	postinc1,c
  6980  017C30  0E04               	movlw	4
  6981  017C32  6EE6               	movwf	postinc1,c
  6982  017C34  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  6983  017C38  0060  F007  FFE6   	movff	btemp,postinc1
  6984  017C3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6985  017C44  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6986  017C4A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6987  017C50  ECC8  F0C5         	call	___fltol	;wreg free
  6988  017C54  0060  F007  FFE6   	movff	btemp,postinc1
  6989  017C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6990  017C60  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6991  017C66  0060  F013  FFE6   	movff	btemp+3,postinc1
  6992  017C6C  0E00               	movlw	0
  6993  017C6E  6EE6               	movwf	postinc1,c
  6994  017C70  ECCA  F0C0         	call	___xxtofl	;wreg free
  6995  017C74  0060  F007  FFE6   	movff	btemp,postinc1
  6996  017C7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6997  017C80  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6998  017C86  0060  F013  FFE6   	movff	btemp+3,postinc1
  6999  017C8C  ECA0  F099         	call	___flmul	;wreg free
  7000  017C90  0060  F007  FFE6   	movff	btemp,postinc1
  7001  017C96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7002  017C9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7003  017CA2  0060  F013  FFE6   	movff	btemp+3,postinc1
  7004  017CA8  ECC8  F0C5         	call	___fltol	;wreg free
  7005  017CAC  0060  F007  FFE6   	movff	btemp,postinc1
  7006  017CB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7007  017CB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7008  017CBE  0060  F013  FFE6   	movff	btemp+3,postinc1
  7009  017CC4  ECF6  F0CA         	call	_Volts_to_SOC	;wreg free
  7010  017CC8  0060  F004  F00B   	movff	btemp,btemp+10
  7011  017CCE  0060  F008  F00C   	movff	btemp+1,btemp+11
  7012  017CD4  500B               	movf	(btemp+10)^0,w,c
  7013  017CD6  6E05               	movwf	(btemp+4)^0,c
  7014  017CD8  500C               	movf	(btemp+11)^0,w,c
  7015  017CDA  6E06               	movwf	(btemp+5)^0,c
  7016  017CDC  6A07               	clrf	(btemp+6)^0,c
  7017  017CDE  6A08               	clrf	(btemp+7)^0,c
  7018  017CE0  0060  F017  FFE6   	movff	btemp+4,postinc1
  7019  017CE6  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7020  017CEC  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7021  017CF2  0060  F023  FFE6   	movff	btemp+7,postinc1
  7022  017CF8  0E00               	movlw	0
  7023  017CFA  6EE6               	movwf	postinc1,c
  7024  017CFC  ECCA  F0C0         	call	___xxtofl	;wreg free
  7025  017D00  0060  F007  FFE6   	movff	btemp,postinc1
  7026  017D06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7027  017D0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7028  017D12  0060  F013  FFE6   	movff	btemp+3,postinc1
  7029  017D18  EC51  F0A5         	call	___fldiv	;wreg free
  7030  017D1C  0060  F007  FFE6   	movff	btemp,postinc1
  7031  017D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7032  017D28  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7033  017D2E  0060  F013  FFE6   	movff	btemp+3,postinc1
  7034  017D34  ECA0  F099         	call	___flmul	;wreg free
  7035  017D38  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7036  017D3E  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7037  017D44  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7038  017D4A  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7039                           
  7040                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  7041  017D50  0E26               	movlw	low _calc_bsoc
  7042  017D52  6EE6               	movwf	postinc1,c
  7043  017D54  0E43               	movlw	high _calc_bsoc
  7044  017D56  6EE6               	movwf	postinc1,c
  7045  017D58  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7046  017D5A  6EE6               	movwf	postinc1,c
  7047  017D5C  EC6F  F0DC         	call	_TMR3_SetInterruptHandler	;wreg free
  7048                           
  7049                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7050  017D60  0012               	return		;funcret
  7051  017D62                     __end_of_init_bsoc:
  7052                           	opt callstack 0
  7053                           
  7054 ;; *************** function _Volts_to_SOC *****************
  7055 ;; Defined at:
  7056 ;;		line 159 in file "bsoc.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  cvoltage        4  [STACK] unsigned long 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  soc             4  [STACK] float 
  7061 ;;  slot            1  [STACK] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  2  [STACK] unsigned short 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/1
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:   16
  7078 ;; This function calls:
  7079 ;;		___fltol
  7080 ;;		___xxtofl
  7081 ;; This function is called by:
  7082 ;;		_init_bsoc
  7083 ;; This function uses a reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text12
  7087  0195EC                     __ptext12:
  7088                           	opt callstack 0
  7089  0195EC                     _Volts_to_SOC:
  7090                           	opt callstack 0
  7091                           
  7092                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7093  0195EC  0E05               	movlw	5
  7094  0195EE  26E1               	addwf	fsr1l,f,c
  7095  0195F0  0E00               	movlw	0
  7096  0195F2  22E2               	addwfc	fsr1h,f,c
  7097                           
  7098                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  uint
      +                          8_t slot;;bsoc.c: 162:  float soc = 0;
  7099                           
  7100                           ;incstack = 0
  7101  0195F4  0E00               	movlw	0
  7102  0195F6  6E09               	movwf	(btemp+8)^0,c
  7103  0195F8  0E00               	movlw	0
  7104  0195FA  6E0A               	movwf	(btemp+9)^0,c
  7105  0195FC  0E00               	movlw	0
  7106  0195FE  6E0B               	movwf	(btemp+10)^0,c
  7107  019600  0E00               	movlw	0
  7108  019602  6E0C               	movwf	(btemp+11)^0,c
  7109                           
  7110                           ;stkvar	_soc @ sp[(-5)+0]
  7111  019604  0EFB               	movlw	-5
  7112  019606  0060  F027  FFE3   	movff	btemp+8,plusw1
  7113  01960C  0EFC               	movlw	-4
  7114  01960E  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7115  019614  0EFD               	movlw	-3
  7116  019616  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7117  01961C  0EFE               	movlw	-2
  7118  01961E  0060  F033  FFE3   	movff	btemp+11,plusw1
  7119                           
  7120                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  7121                           ;stkvar	_slot @ sp[(-5)+4]
  7122  019624  0EFF               	movlw	-1
  7123  019626  6AE3               	clrf	plusw1,c
  7124  019628                     l10537:
  7125                           
  7126                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7127                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7128                           ;stkvar	_slot @ sp[(-5)+4]
  7129  019628  0EFF               	movlw	-1
  7130  01962A  50E3               	movf	plusw1,w,c
  7131  01962C  0D08               	mullw	8
  7132  01962E  0E67               	movlw	low _BVSOC_TABLE
  7133  019630  24F3               	addwf	243,w,c
  7134  019632  6EF6               	movwf	tblptrl,c
  7135  019634  0EFA               	movlw	high _BVSOC_TABLE
  7136  019636  20F4               	addwfc	244,w,c
  7137  019638  6EF7               	movwf	tblptrh,c
  7138  01963A                     	if	1	;There are 3 active tblptr bytes
  7139  01963A  6AF8               	clrf	tblptru,c
  7140  01963C  0E00               	movlw	low (__mediumconst shr (0+16))
  7141  01963E  22F8               	addwfc	tblptru,f,c
  7142  019640                     	endif
  7143  019640  0EF7               	movlw	-9
  7144  019642  50E3               	movf	plusw1,w,c
  7145  019644  0009               	tblrd		*+
  7146  019646  5CF5               	subwf	tablat,w,c
  7147  019648  0EF8               	movlw	-8
  7148  01964A  50E3               	movf	plusw1,w,c
  7149  01964C  0009               	tblrd		*+
  7150  01964E  58F5               	subwfb	tablat,w,c
  7151  019650  0EF9               	movlw	-7
  7152  019652  50E3               	movf	plusw1,w,c
  7153  019654  0009               	tblrd		*+
  7154  019656  58F5               	subwfb	tablat,w,c
  7155  019658  0EFA               	movlw	-6
  7156  01965A  50E3               	movf	plusw1,w,c
  7157  01965C  0009               	tblrd		*+
  7158  01965E  58F5               	subwfb	tablat,w,c
  7159  019660  B0D8               	btfsc	status,0,c
  7160  019662  D034               	goto	l10541
  7161                           
  7162                           ;bsoc.c: 166:    soc = BVSOC_TABLE[slot][1];
  7163                           ;stkvar	_slot @ sp[(-5)+4]
  7164  019664  0EFF               	movlw	-1
  7165  019666  50E3               	movf	plusw1,w,c
  7166  019668  0D08               	mullw	8
  7167  01966A  0E04               	movlw	4
  7168  01966C  26F3               	addwf	243,f,c
  7169  01966E  0E00               	movlw	0
  7170  019670  22F4               	addwfc	244,f,c
  7171  019672  0E67               	movlw	low _BVSOC_TABLE
  7172  019674  24F3               	addwf	243,w,c
  7173  019676  6EF6               	movwf	tblptrl,c
  7174  019678  0EFA               	movlw	high _BVSOC_TABLE
  7175  01967A  20F4               	addwfc	244,w,c
  7176  01967C  6EF7               	movwf	tblptrh,c
  7177  01967E                     	if	1	;There are 3 active tblptr bytes
  7178  01967E  6AF8               	clrf	tblptru,c
  7179  019680  0E00               	movlw	low (__mediumconst shr (0+16))
  7180  019682  22F8               	addwfc	tblptru,f,c
  7181  019684                     	endif
  7182  019684  0009               	tblrd		*+
  7183  019686  006F FFD7 FFE6     	movff	tablat,postinc1
  7184  01968C  0009               	tblrd		*+
  7185  01968E  006F FFD7 FFE6     	movff	tablat,postinc1
  7186  019694  0009               	tblrd		*+
  7187  019696  006F FFD7 FFE6     	movff	tablat,postinc1
  7188  01969C  0009               	tblrd		*+
  7189  01969E  006F FFD7 FFE6     	movff	tablat,postinc1
  7190  0196A4  0E00               	movlw	0
  7191  0196A6  6EE6               	movwf	postinc1,c
  7192  0196A8  ECCA  F0C0         	call	___xxtofl	;wreg free
  7193                           
  7194                           ;stkvar	_soc @ sp[(-5)+0]
  7195  0196AC  0EFB               	movlw	-5
  7196  0196AE  0060  F007  FFE3   	movff	btemp,plusw1
  7197  0196B4  0EFC               	movlw	-4
  7198  0196B6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7199  0196BC  0EFD               	movlw	-3
  7200  0196BE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7201  0196C4  0EFE               	movlw	-2
  7202  0196C6  0060  F013  FFE3   	movff	btemp+3,plusw1
  7203  0196CC                     l10541:
  7204                           
  7205                           ;bsoc.c: 168:  }
  7206                           ;stkvar	_slot @ sp[(-5)+4]
  7207  0196CC  0EFF               	movlw	-1
  7208  0196CE  2AE3               	incf	plusw1,f,c
  7209                           
  7210                           ;stkvar	_slot @ sp[(-5)+4]
  7211  0196D0  0EFF               	movlw	-1
  7212  0196D2  006F FF8C  F001    	movff	plusw1,btemp
  7213  0196D8  0E19               	movlw	25
  7214  0196DA  6401               	cpfsgt	btemp^0,c
  7215  0196DC  D7A5               	goto	l10537
  7216                           
  7217                           ;bsoc.c: 169:  return soc;
  7218                           ;stkvar	_soc @ sp[(-5)+0]
  7219  0196DE  0EFB               	movlw	-5
  7220  0196E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7221  0196E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7222  0196EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7223  0196F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7224  0196F8  ECC8  F0C5         	call	___fltol	;wreg free
  7225                           
  7226                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7227  0196FC  0EF7               	movlw	247
  7228  0196FE  26E1               	addwf	fsr1l,f,c
  7229  019700  0EFF               	movlw	255
  7230  019702  22E2               	addwfc	fsr1h,f,c
  7231  019704  0012               	return		;funcret
  7232  019706                     __end_of_Volts_to_SOC:
  7233                           	opt callstack 0
  7234                           
  7235 ;; *************** function _hid_display *****************
  7236 ;; Defined at:
  7237 ;;		line 17 in file "hid.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  h               1  [STACK] PTR struct H_data
  7240 ;;		 -> H(7), 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;		None
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1  [STACK] PTR struct H_data
  7245 ;; Registers used:
  7246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7247 ;; Tracked objects:
  7248 ;;		On entry : 3F/39
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7256 ;;Total ram usage:        0 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:   17
  7259 ;; This function calls:
  7260 ;;		_hid_input
  7261 ;; This function is called by:
  7262 ;;		_main
  7263 ;; This function uses a reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text13
  7267  019B4C                     __ptext13:
  7268                           	opt callstack 0
  7269  019B4C                     _hid_display:
  7270                           	opt callstack 13
  7271                           
  7272                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7273                           ;stkvar	_h @ sp[(0)+-1]
  7274                           
  7275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7276                           ;incstack = 0
  7277  019B4C  0EFF               	movlw	-1
  7278  019B4E  50E3               	movf	plusw1,w,c
  7279  019B50  6EE6               	movwf	postinc1,c
  7280  019B52  EC10  F0D4         	call	_hid_input	;wreg free
  7281                           
  7282                           ;hid.c: 21:  switch (h->h_state) {
  7283  019B56  D066               	goto	l10943
  7284  019B58                     l10921:
  7285                           
  7286                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7287                           ;stkvar	_h @ sp[(0)+-1]
  7288  019B58  0EFF               	movlw	-1
  7289  019B5A  50E3               	movf	plusw1,w,c
  7290  019B5C  6ED9               	movwf	fsr2l,c
  7291  019B5E  6ADA               	clrf	fsr2h,c
  7292  019B60  0E01               	movlw	1
  7293  019B62  26D9               	addwf	fsr2l,f,c
  7294  019B64  0E01               	movlw	1
  7295  019B66  6EDF               	movwf	indf2,c
  7296                           
  7297                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7298                           ;stkvar	_h @ sp[(0)+-1]
  7299  019B68  0EFF               	movlw	-1
  7300  019B6A  50E3               	movf	plusw1,w,c
  7301  019B6C  6ED9               	movwf	fsr2l,c
  7302  019B6E  6ADA               	clrf	fsr2h,c
  7303  019B70  0E00               	movlw	0
  7304  019B72  6EDF               	movwf	indf2,c
  7305                           
  7306                           ;hid.c: 25:   h->wait_enter = 1;
  7307                           ;stkvar	_h @ sp[(0)+-1]
  7308  019B74  0EFF               	movlw	-1
  7309  019B76  50E3               	movf	plusw1,w,c
  7310  019B78  6ED9               	movwf	fsr2l,c
  7311  019B7A  6ADA               	clrf	fsr2h,c
  7312  019B7C  0E04               	movlw	4
  7313  019B7E  26D9               	addwf	fsr2l,f,c
  7314  019B80  0E01               	movlw	1
  7315  019B82  6EDF               	movwf	indf2,c
  7316                           
  7317                           ;hid.c: 26:   h->wait_select = 1;
  7318                           ;stkvar	_h @ sp[(0)+-1]
  7319  019B84  0EFF               	movlw	-1
  7320  019B86  50E3               	movf	plusw1,w,c
  7321  019B88  6ED9               	movwf	fsr2l,c
  7322  019B8A  6ADA               	clrf	fsr2h,c
  7323  019B8C  0E02               	movlw	2
  7324  019B8E  26D9               	addwf	fsr2l,f,c
  7325  019B90  0E01               	movlw	1
  7326  019B92  6EDF               	movwf	indf2,c
  7327                           
  7328                           ;hid.c: 27:   h->select_p = SW_OFF;
  7329                           ;stkvar	_h @ sp[(0)+-1]
  7330  019B94  0EFF               	movlw	-1
  7331  019B96  50E3               	movf	plusw1,w,c
  7332  019B98  6ED9               	movwf	fsr2l,c
  7333  019B9A  6ADA               	clrf	fsr2h,c
  7334  019B9C  0E03               	movlw	3
  7335  019B9E  26D9               	addwf	fsr2l,f,c
  7336  019BA0  0E00               	movlw	0
  7337  019BA2  6EDF               	movwf	indf2,c
  7338                           
  7339                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7340                           ;stkvar	_h @ sp[(0)+-1]
  7341  019BA4  0EFF               	movlw	-1
  7342  019BA6  50E3               	movf	plusw1,w,c
  7343  019BA8  6ED9               	movwf	fsr2l,c
  7344  019BAA  6ADA               	clrf	fsr2h,c
  7345  019BAC  0E05               	movlw	5
  7346  019BAE  26D9               	addwf	fsr2l,f,c
  7347  019BB0  0E00               	movlw	0
  7348  019BB2  D036               	goto	L3
  7349  019BB4                     l10933:
  7350                           
  7351                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7352                           ;stkvar	_h @ sp[(0)+-1]
  7353  019BB4  0EFF               	movlw	-1
  7354  019BB6  50E3               	movf	plusw1,w,c
  7355  019BB8  6ED9               	movwf	fsr2l,c
  7356  019BBA  6ADA               	clrf	fsr2h,c
  7357  019BBC  0E02               	movlw	2
  7358  019BBE  26D9               	addwf	fsr2l,f,c
  7359  019BC0  50DF               	movf	indf2,w,c
  7360  019BC2  A4D8               	btfss	status,2,c
  7361  019BC4  D042               	goto	l1976
  7362                           
  7363                           ;stkvar	_h @ sp[(0)+-1]
  7364  019BC6  0EFF               	movlw	-1
  7365  019BC8  50E3               	movf	plusw1,w,c
  7366  019BCA  6ED9               	movwf	fsr2l,c
  7367  019BCC  6ADA               	clrf	fsr2h,c
  7368  019BCE  0E03               	movlw	3
  7369  019BD0  26D9               	addwf	fsr2l,f,c
  7370  019BD2  50DF               	movf	indf2,w,c
  7371  019BD4  A4D8               	btfss	status,2,c
  7372  019BD6  D039               	goto	l1976
  7373                           
  7374                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7375                           ;stkvar	_h @ sp[(0)+-1]
  7376  019BD8  0EFF               	movlw	-1
  7377  019BDA  50E3               	movf	plusw1,w,c
  7378  019BDC  6ED9               	movwf	fsr2l,c
  7379  019BDE  6ADA               	clrf	fsr2h,c
  7380  019BE0  0E06               	movlw	6
  7381  019BE2  26D9               	addwf	fsr2l,f,c
  7382                           
  7383                           ;stkvar	_h @ sp[(0)+-1]
  7384  019BE4  0EFF               	movlw	-1
  7385  019BE6  50E3               	movf	plusw1,w,c
  7386  019BE8  6EE9               	movwf	fsr0l,c
  7387  019BEA  6AEA               	clrf	fsr0h,c
  7388  019BEC  0E06               	movlw	6
  7389  019BEE  26E9               	addwf	fsr0l,f,c
  7390  019BF0  2AEF               	incf	indf0,f,c
  7391  019BF2  50EF               	movf	indf0,w,c
  7392  019BF4  0B03               	andlw	3
  7393  019BF6  6EDF               	movwf	indf2,c
  7394                           
  7395                           ;hid.c: 34:    h->hid_display = h->sequence;
  7396                           ;stkvar	_h @ sp[(0)+-1]
  7397  019BF8  0EFF               	movlw	-1
  7398  019BFA  50E3               	movf	plusw1,w,c
  7399  019BFC  6ED9               	movwf	fsr2l,c
  7400  019BFE  6ADA               	clrf	fsr2h,c
  7401  019C00  0E06               	movlw	6
  7402  019C02  26D9               	addwf	fsr2l,f,c
  7403                           
  7404                           ;stkvar	_h @ sp[(0)+-1]
  7405  019C04  0EFF               	movlw	-1
  7406  019C06  50E3               	movf	plusw1,w,c
  7407  019C08  6EE9               	movwf	fsr0l,c
  7408  019C0A  6AEA               	clrf	fsr0h,c
  7409  019C0C  006F FF7F FFEF     	movff	indf2,indf0
  7410                           
  7411                           ;hid.c: 35:    h->wait_select = 1;
  7412                           ;stkvar	_h @ sp[(0)+-1]
  7413  019C12  0EFF               	movlw	-1
  7414  019C14  50E3               	movf	plusw1,w,c
  7415  019C16  6ED9               	movwf	fsr2l,c
  7416  019C18  6ADA               	clrf	fsr2h,c
  7417  019C1A  0E02               	movlw	2
  7418  019C1C  26D9               	addwf	fsr2l,f,c
  7419  019C1E  0E01               	movlw	1
  7420  019C20                     L3:
  7421  019C20  6EDF               	movwf	indf2,c
  7422  019C22  D013               	goto	l1976
  7423  019C24                     l10943:
  7424                           
  7425                           ;stkvar	_h @ sp[(0)+-1]
  7426  019C24  0EFF               	movlw	-1
  7427  019C26  50E3               	movf	plusw1,w,c
  7428  019C28  6ED9               	movwf	fsr2l,c
  7429  019C2A  6ADA               	clrf	fsr2h,c
  7430  019C2C  0E01               	movlw	1
  7431  019C2E  26D9               	addwf	fsr2l,f,c
  7432  019C30  50DF               	movf	indf2,w,c
  7433  019C32  6E0B               	movwf	(btemp+10)^0,c
  7434  019C34  6A0C               	clrf	(btemp+11)^0,c
  7435                           
  7436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7437                           ; Switch size 1, requested type "simple"
  7438                           ; Number of cases is 1, Range of values is 0 to 0
  7439                           ; switch strategies available:
  7440                           ; Name         Instructions Cycles
  7441                           ; simple_byte            4     3 (average)
  7442                           ;	Chosen strategy is simple_byte
  7443  019C36  500C               	movf	(btemp+11)^0,w,c
  7444  019C38  0A00               	xorlw	0	; case 0
  7445  019C3A  A4D8               	btfss	status,2,c
  7446  019C3C  D7BB               	goto	l10933
  7447                           
  7448                           ; Switch size 1, requested type "simple"
  7449                           ; Number of cases is 2, Range of values is 0 to 1
  7450                           ; switch strategies available:
  7451                           ; Name         Instructions Cycles
  7452                           ; simple_byte            7     4 (average)
  7453                           ;	Chosen strategy is simple_byte
  7454  019C3E  500B               	movf	(btemp+10)^0,w,c
  7455  019C40  0A00               	xorlw	0	; case 0
  7456  019C42  B4D8               	btfsc	status,2,c
  7457  019C44  D789               	goto	l10921
  7458  019C46  0A01               	xorlw	1	; case 1
  7459  019C48  D7B5               	goto	l10933
  7460  019C4A                     l1976:
  7461                           
  7462                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7463  019C4A  52E5               	movf	postdec1,f,c
  7464  019C4C  0012               	return		;funcret
  7465  019C4E                     __end_of_hid_display:
  7466                           	opt callstack 0
  7467                           
  7468 ;; *************** function _hid_input *****************
  7469 ;; Defined at:
  7470 ;;		line 3 in file "hid.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  h               1  [STACK] PTR struct H_data
  7473 ;;		 -> H(7), 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1  [STACK] PTR struct H_data
  7478 ;; Registers used:
  7479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/39
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:   16
  7492 ;; This function calls:
  7493 ;;		_get_switch
  7494 ;; This function is called by:
  7495 ;;		_hid_display
  7496 ;; This function uses a reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text14
  7500  01A820                     __ptext14:
  7501                           	opt callstack 0
  7502  01A820                     _hid_input:
  7503                           	opt callstack 13
  7504                           
  7505                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7506                           
  7507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7508                           ;incstack = 0
  7509  01A820  0E02               	movlw	2
  7510  01A822  6EE6               	movwf	postinc1,c
  7511  01A824  EC63  F0DB         	call	_get_switch	;wreg free
  7512  01A828  5001               	movf	btemp^0,w,c
  7513  01A82A  B4D8               	btfsc	status,2,c
  7514  01A82C  D01C               	goto	l10471
  7515                           
  7516                           ;hid.c: 6:   h->wait_select = 0;
  7517                           ;stkvar	_h @ sp[(0)+-1]
  7518  01A82E  0EFF               	movlw	-1
  7519  01A830  50E3               	movf	plusw1,w,c
  7520  01A832  6ED9               	movwf	fsr2l,c
  7521  01A834  6ADA               	clrf	fsr2h,c
  7522  01A836  0E02               	movlw	2
  7523  01A838  26D9               	addwf	fsr2l,f,c
  7524  01A83A  0E00               	movlw	0
  7525  01A83C  6EDF               	movwf	indf2,c
  7526                           
  7527                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7528  01A83E  0E02               	movlw	2
  7529  01A840  6EE6               	movwf	postinc1,c
  7530  01A842  EC63  F0DB         	call	_get_switch	;wreg free
  7531  01A846  5001               	movf	btemp^0,w,c
  7532  01A848  B4D8               	btfsc	status,2,c
  7533  01A84A  D003               	goto	u9710
  7534  01A84C  6A0C               	clrf	(btemp+11)^0,c
  7535  01A84E  2A0C               	incf	(btemp+11)^0,f,c
  7536  01A850  D001               	goto	u9728
  7537  01A852                     u9710:
  7538  01A852  6A0C               	clrf	(btemp+11)^0,c
  7539  01A854                     u9728:
  7540                           
  7541                           ;stkvar	_h @ sp[(0)+-1]
  7542  01A854  0EFF               	movlw	-1
  7543  01A856  50E3               	movf	plusw1,w,c
  7544  01A858  6ED9               	movwf	fsr2l,c
  7545  01A85A  6ADA               	clrf	fsr2h,c
  7546  01A85C  0E03               	movlw	3
  7547  01A85E  26D9               	addwf	fsr2l,f,c
  7548  01A860  0060  F033  FFDF   	movff	btemp+11,indf2
  7549  01A866                     l10471:
  7550                           
  7551                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7552  01A866  0E03               	movlw	3
  7553  01A868  6EE6               	movwf	postinc1,c
  7554  01A86A  EC63  F0DB         	call	_get_switch	;wreg free
  7555  01A86E  5001               	movf	btemp^0,w,c
  7556  01A870  B4D8               	btfsc	status,2,c
  7557  01A872  D01C               	goto	l1967
  7558                           
  7559                           ;hid.c: 11:   h->wait_enter = 0;
  7560                           ;stkvar	_h @ sp[(0)+-1]
  7561  01A874  0EFF               	movlw	-1
  7562  01A876  50E3               	movf	plusw1,w,c
  7563  01A878  6ED9               	movwf	fsr2l,c
  7564  01A87A  6ADA               	clrf	fsr2h,c
  7565  01A87C  0E04               	movlw	4
  7566  01A87E  26D9               	addwf	fsr2l,f,c
  7567  01A880  0E00               	movlw	0
  7568  01A882  6EDF               	movwf	indf2,c
  7569                           
  7570                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7571  01A884  0E03               	movlw	3
  7572  01A886  6EE6               	movwf	postinc1,c
  7573  01A888  EC63  F0DB         	call	_get_switch	;wreg free
  7574  01A88C  5001               	movf	btemp^0,w,c
  7575  01A88E  B4D8               	btfsc	status,2,c
  7576  01A890  D003               	goto	u9740
  7577  01A892  6A0C               	clrf	(btemp+11)^0,c
  7578  01A894  2A0C               	incf	(btemp+11)^0,f,c
  7579  01A896  D001               	goto	u9758
  7580  01A898                     u9740:
  7581  01A898  6A0C               	clrf	(btemp+11)^0,c
  7582  01A89A                     u9758:
  7583                           
  7584                           ;stkvar	_h @ sp[(0)+-1]
  7585  01A89A  0EFF               	movlw	-1
  7586  01A89C  50E3               	movf	plusw1,w,c
  7587  01A89E  6ED9               	movwf	fsr2l,c
  7588  01A8A0  6ADA               	clrf	fsr2h,c
  7589  01A8A2  0E05               	movlw	5
  7590  01A8A4  26D9               	addwf	fsr2l,f,c
  7591  01A8A6  0060  F033  FFDF   	movff	btemp+11,indf2
  7592  01A8AC                     l1967:
  7593                           
  7594                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7595  01A8AC  52E5               	movf	postdec1,f,c
  7596  01A8AE  0012               	return		;funcret
  7597  01A8B0                     __end_of_hid_input:
  7598                           	opt callstack 0
  7599                           
  7600 ;; *************** function _get_switch *****************
  7601 ;; Defined at:
  7602 ;;		line 18 in file "dio.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  i               1  [STACK] unsigned char 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1  [STACK] enum E17021
  7609 ;; Registers used:
  7610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/1
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:   15
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_main
  7627 ;;		_hid_input
  7628 ;; This function uses a reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text15
  7632  01B6C6                     __ptext15:
  7633                           	opt callstack 0
  7634  01B6C6                     _get_switch:
  7635                           	opt callstack 13
  7636                           
  7637                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7638                           ;stkvar	_i @ sp[(0)+-1]
  7639                           
  7640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7641                           ;incstack = 0
  7642  01B6C6  0EFF               	movlw	-1
  7643  01B6C8  006F FF8C  F001    	movff	plusw1,btemp
  7644  01B6CE  0E03               	movlw	3
  7645  01B6D0  6401               	cpfsgt	btemp^0,c
  7646  01B6D2  D002               	goto	l9851
  7647                           
  7648                           ;dio.c: 21:   return SW_OFF;
  7649  01B6D4  0E00               	movlw	0
  7650  01B6D6  D00A               	goto	L4
  7651  01B6D8                     l9851:
  7652                           
  7653                           ;dio.c: 23:  return S.button[i].sw;
  7654                           ;stkvar	_i @ sp[(0)+-1]
  7655  01B6D8  0EFF               	movlw	-1
  7656  01B6DA  50E3               	movf	plusw1,w,c
  7657  01B6DC  0D05               	mullw	5
  7658  01B6DE  0E54               	movlw	low _S
  7659  01B6E0  24F3               	addwf	243,w,c
  7660  01B6E2  6ED9               	movwf	fsr2l,c
  7661  01B6E4  0E02               	movlw	high _S
  7662  01B6E6  20F4               	addwfc	prodh,w,c
  7663  01B6E8  6EDA               	movwf	fsr2h,c
  7664  01B6EA  50DF               	movf	indf2,w,c
  7665  01B6EC                     L4:
  7666  01B6EC  6E01               	movwf	btemp^0,c
  7667                           
  7668                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7669  01B6EE  52E5               	movf	postdec1,f,c
  7670  01B6F0  0012               	return		;funcret
  7671  01B6F2                     __end_of_get_switch:
  7672                           	opt callstack 0
  7673                           
  7674 ;; *************** function _esr_check *****************
  7675 ;; Defined at:
  7676 ;;		line 178 in file "bsoc.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  fsm             1  [STACK] unsigned char 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  4  [STACK] float 
  7683 ;; Registers used:
  7684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:   18
  7697 ;; This function calls:
  7698 ;;		_StartTimer
  7699 ;;		_TimerDone
  7700 ;;		___fldiv
  7701 ;;		___flsub
  7702 ;;		_conv_raw_result
  7703 ;;		_fabsf
  7704 ;;		_set_load_relay_one
  7705 ;;		_set_load_relay_two
  7706 ;;		_update_adc_result
  7707 ;; This function is called by:
  7708 ;;		_main
  7709 ;; This function uses a reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text16
  7713  016E76                     __ptext16:
  7714                           	opt callstack 0
  7715  016E76                     _esr_check:
  7716                           	opt callstack 12
  7717                           
  7718                           ;bsoc.c: 178: float esr_check(uint8_t fsm);bsoc.c: 179: {;bsoc.c: 180:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 182:  if (fsm) {
  7719                           ;stkvar	_fsm @ sp[(0)+-1]
  7720                           
  7721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7722                           ;incstack = 0
  7723  016E76  0EFF               	movlw	-1
  7724  016E78  50E3               	movf	plusw1,w,c
  7725  016E7A  B4D8               	btfsc	status,2,c
  7726  016E7C  D146               	goto	l10855
  7727                           
  7728                           ;bsoc.c: 183:   esr_state = 0;
  7729  016E7E  6A40               	clrf	esr_check@esr_state^0,c
  7730                           
  7731                           ;bsoc.c: 184:   return -10.0;
  7732  016E80  0E00               	movlw	0
  7733  016E82  6E01               	movwf	btemp^0,c
  7734  016E84  0E00               	movlw	0
  7735  016E86  6E02               	movwf	(btemp+1)^0,c
  7736  016E88  0E20               	movlw	32
  7737  016E8A  6E03               	movwf	(btemp+2)^0,c
  7738  016E8C  0EC1               	movlw	193
  7739  016E8E  D158               	goto	L5
  7740  016E90                     l10787:
  7741                           
  7742                           ;bsoc.c: 189:   StartTimer(TMR_ESR, 10000);
  7743  016E90  0E10               	movlw	16
  7744  016E92  6EE6               	movwf	postinc1,c
  7745  016E94  0E27               	movlw	39
  7746  016E96  6EE6               	movwf	postinc1,c
  7747  016E98  0E0C               	movlw	12
  7748  016E9A  6EE6               	movwf	postinc1,c
  7749  016E9C  EC6E  F0D9         	call	_StartTimer	;wreg free
  7750  016EA0                     l10789:
  7751                           
  7752                           ;bsoc.c: 190:   esr_state++;
  7753  016EA0  2A40               	incf	esr_check@esr_state^0,f,c
  7754                           
  7755                           ;bsoc.c: 191:   break;
  7756  016EA2  D147               	goto	l10857
  7757  016EA4                     l10791:
  7758                           
  7759                           ;bsoc.c: 196:   set_load_relay_one(0);
  7760  016EA4  0E00               	movlw	0
  7761  016EA6  6EE6               	movwf	postinc1,c
  7762  016EA8  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  7763                           
  7764                           ;bsoc.c: 197:   set_load_relay_two(0);
  7765  016EAC  0E00               	movlw	0
  7766  016EAE  6EE6               	movwf	postinc1,c
  7767  016EB0  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  7768                           
  7769                           ;bsoc.c: 198:   if (TimerDone(TMR_ESR)) {
  7770  016EB4  0E0C               	movlw	12
  7771  016EB6  6EE6               	movwf	postinc1,c
  7772  016EB8  ECF7  F0DB         	call	_TimerDone	;wreg free
  7773  016EBC  5001               	movf	btemp^0,w,c
  7774  016EBE  B4D8               	btfsc	status,2,c
  7775  016EC0  D009               	goto	l10797
  7776                           
  7777                           ;bsoc.c: 199:    StartTimer(TMR_ESR, 10000);
  7778  016EC2  0E10               	movlw	16
  7779  016EC4  6EE6               	movwf	postinc1,c
  7780  016EC6  0E27               	movlw	39
  7781  016EC8  6EE6               	movwf	postinc1,c
  7782  016ECA  0E0C               	movlw	12
  7783  016ECC  6EE6               	movwf	postinc1,c
  7784  016ECE  EC6E  F0D9         	call	_StartTimer	;wreg free
  7785                           
  7786                           ;bsoc.c: 200:   } else {
  7787  016ED2  D006               	goto	l10801
  7788  016ED4                     l10797:
  7789                           
  7790                           ;bsoc.c: 201:    return -2.0;
  7791  016ED4  0E00               	movlw	0
  7792  016ED6  6E01               	movwf	btemp^0,c
  7793  016ED8  0E00               	movlw	0
  7794  016EDA  6E02               	movwf	(btemp+1)^0,c
  7795  016EDC  0E00               	movlw	0
  7796  016EDE  D066               	goto	L7
  7797  016EE0                     l10801:
  7798                           
  7799                           ;bsoc.c: 206:   update_adc_result();
  7800  016EE0  EC2D  F0DA         	call	_update_adc_result	;wreg free
  7801                           
  7802                           ;bsoc.c: 207:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7803  016EE4  0E00               	movlw	0
  7804  016EE6  6EE6               	movwf	postinc1,c
  7805  016EE8  0E04               	movlw	4
  7806  016EEA  6EE6               	movwf	postinc1,c
  7807  016EEC  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7808  016EF0  0060  F004  F811   	movff	btemp,_C+274	;volatile
  7809  016EF6  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  7810  016EFC  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  7811  016F02  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  7812  016F08  D7CB               	goto	l10789
  7813  016F0A                     l10807:
  7814                           
  7815                           ;bsoc.c: 211:   set_load_relay_one(1);
  7816  016F0A  0E01               	movlw	1
  7817  016F0C  6EE6               	movwf	postinc1,c
  7818  016F0E  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  7819                           
  7820                           ;bsoc.c: 212:   if (TimerDone(TMR_ESR)) {
  7821  016F12  0E0C               	movlw	12
  7822  016F14  6EE6               	movwf	postinc1,c
  7823  016F16  ECF7  F0DB         	call	_TimerDone	;wreg free
  7824  016F1A  5001               	movf	btemp^0,w,c
  7825  016F1C  B4D8               	btfsc	status,2,c
  7826  016F1E  D009               	goto	l10813
  7827                           
  7828                           ;bsoc.c: 213:    StartTimer(TMR_ESR, 10000);
  7829  016F20  0E10               	movlw	16
  7830  016F22  6EE6               	movwf	postinc1,c
  7831  016F24  0E27               	movlw	39
  7832  016F26  6EE6               	movwf	postinc1,c
  7833  016F28  0E0C               	movlw	12
  7834  016F2A  6EE6               	movwf	postinc1,c
  7835  016F2C  EC6E  F0D9         	call	_StartTimer	;wreg free
  7836                           
  7837                           ;bsoc.c: 214:   } else {
  7838  016F30  D006               	goto	l10817
  7839  016F32                     l10813:
  7840                           
  7841                           ;bsoc.c: 215:    return -3.0;
  7842  016F32  0E00               	movlw	0
  7843  016F34  6E01               	movwf	btemp^0,c
  7844  016F36  0E00               	movlw	0
  7845  016F38  6E02               	movwf	(btemp+1)^0,c
  7846  016F3A  0E40               	movlw	64
  7847  016F3C  D037               	goto	L7
  7848  016F3E                     l10817:
  7849                           
  7850                           ;bsoc.c: 218:   update_adc_result();
  7851  016F3E  EC2D  F0DA         	call	_update_adc_result	;wreg free
  7852                           
  7853                           ;bsoc.c: 219:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7854  016F42  0E00               	movlw	0
  7855  016F44  6EE6               	movwf	postinc1,c
  7856  016F46  0E04               	movlw	4
  7857  016F48  6EE6               	movwf	postinc1,c
  7858  016F4A  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7859  016F4E  0060  F004  F815   	movff	btemp,_C+278	;volatile
  7860  016F54  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  7861  016F5A  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  7862  016F60  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  7863                           
  7864                           ;bsoc.c: 220:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7865  016F66  0E00               	movlw	0
  7866  016F68  6EE6               	movwf	postinc1,c
  7867  016F6A  0E00               	movlw	0
  7868  016F6C  6EE6               	movwf	postinc1,c
  7869  016F6E  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7870  016F72  0060  F004  F809   	movff	btemp,_C+266	;volatile
  7871  016F78  0060  F008  F80A   	movff	btemp+1,_C+267	;volatile
  7872  016F7E  0060  F00C  F80B   	movff	btemp+2,_C+268	;volatile
  7873  016F84  0060  F010  F80C   	movff	btemp+3,_C+269	;volatile
  7874  016F8A  D78A               	goto	l10789
  7875  016F8C                     l10825:
  7876                           
  7877                           ;bsoc.c: 224:   set_load_relay_two(1);
  7878  016F8C  0E01               	movlw	1
  7879  016F8E  6EE6               	movwf	postinc1,c
  7880  016F90  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  7881                           
  7882                           ;bsoc.c: 225:   if (!TimerDone(TMR_ESR))
  7883  016F94  0E0C               	movlw	12
  7884  016F96  6EE6               	movwf	postinc1,c
  7885  016F98  ECF7  F0DB         	call	_TimerDone	;wreg free
  7886  016F9C  5001               	movf	btemp^0,w,c
  7887  016F9E  A4D8               	btfss	status,2,c
  7888  016FA0  D008               	goto	l10833
  7889                           
  7890                           ;bsoc.c: 226:    return -4.0;
  7891  016FA2  0E00               	movlw	0
  7892  016FA4  6E01               	movwf	btemp^0,c
  7893  016FA6  0E00               	movlw	0
  7894  016FA8  6E02               	movwf	(btemp+1)^0,c
  7895  016FAA  0E80               	movlw	128
  7896  016FAC                     L7:
  7897  016FAC  6E03               	movwf	(btemp+2)^0,c
  7898  016FAE  0EC0               	movlw	192
  7899  016FB0  D0C7               	goto	L5
  7900  016FB2                     l10833:
  7901                           
  7902                           ;bsoc.c: 228:   update_adc_result();
  7903  016FB2  EC2D  F0DA         	call	_update_adc_result	;wreg free
  7904                           
  7905                           ;bsoc.c: 229:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7906  016FB6  0E00               	movlw	0
  7907  016FB8  6EE6               	movwf	postinc1,c
  7908  016FBA  0E04               	movlw	4
  7909  016FBC  6EE6               	movwf	postinc1,c
  7910  016FBE  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7911  016FC2  0060  F004  F819   	movff	btemp,_C+282	;volatile
  7912  016FC8  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  7913  016FCE  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  7914  016FD4  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  7915                           
  7916                           ;bsoc.c: 230:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7917  016FDA  0E00               	movlw	0
  7918  016FDC  6EE6               	movwf	postinc1,c
  7919  016FDE  0E00               	movlw	0
  7920  016FE0  6EE6               	movwf	postinc1,c
  7921  016FE2  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7922  016FE6  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  7923  016FEC  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  7924  016FF2  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  7925  016FF8  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  7926                           
  7927                           ;bsoc.c: 232:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7928  016FFE  EE22  F00D         	lfsr	2,_C+270	;volatile
  7929  017002  006F FF7B FFE6     	movff	postinc2,postinc1
  7930  017008  006F FF7B FFE6     	movff	postinc2,postinc1
  7931  01700E  006F FF7B FFE6     	movff	postinc2,postinc1
  7932  017014  006F FF7B FFE6     	movff	postinc2,postinc1
  7933  01701A  EE22  F009         	lfsr	2,_C+266	;volatile
  7934  01701E  006F FF7B FFE6     	movff	postinc2,postinc1
  7935  017024  006F FF7B FFE6     	movff	postinc2,postinc1
  7936  01702A  006F FF7B FFE6     	movff	postinc2,postinc1
  7937  017030  006F FF7B FFE6     	movff	postinc2,postinc1
  7938  017036  EC08  F0D9         	call	___flsub	;wreg free
  7939  01703A  0060  F007  FFE6   	movff	btemp,postinc1
  7940  017040  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7941  017046  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7942  01704C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7943  017052  EE22  F019         	lfsr	2,_C+282	;volatile
  7944  017056  006F FF7B FFE6     	movff	postinc2,postinc1
  7945  01705C  006F FF7B FFE6     	movff	postinc2,postinc1
  7946  017062  006F FF7B FFE6     	movff	postinc2,postinc1
  7947  017068  006F FF7B FFE6     	movff	postinc2,postinc1
  7948  01706E  EE22  F015         	lfsr	2,_C+278	;volatile
  7949  017072  006F FF7B FFE6     	movff	postinc2,postinc1
  7950  017078  006F FF7B FFE6     	movff	postinc2,postinc1
  7951  01707E  006F FF7B FFE6     	movff	postinc2,postinc1
  7952  017084  006F FF7B FFE6     	movff	postinc2,postinc1
  7953  01708A  EC08  F0D9         	call	___flsub	;wreg free
  7954  01708E  0060  F007  FFE6   	movff	btemp,postinc1
  7955  017094  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7956  01709A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7957  0170A0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7958  0170A6  EC51  F0A5         	call	___fldiv	;wreg free
  7959  0170AA  0060  F007  FFE6   	movff	btemp,postinc1
  7960  0170B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7961  0170B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7962  0170BC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7963  0170C2  EC8B  F0D1         	call	_fabsf	;wreg free
  7964  0170C6  0060  F004  F787   	movff	btemp,_C+136	;volatile
  7965  0170CC  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  7966  0170D2  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  7967  0170D8  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  7968                           
  7969                           ;bsoc.c: 233:   set_load_relay_one(0);
  7970  0170DE  0E00               	movlw	0
  7971  0170E0  6EE6               	movwf	postinc1,c
  7972  0170E2  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  7973                           
  7974                           ;bsoc.c: 234:   set_load_relay_two(0);
  7975  0170E6  0E00               	movlw	0
  7976  0170E8  6EE6               	movwf	postinc1,c
  7977  0170EA  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  7978                           
  7979                           ;bsoc.c: 235:   esr_state = 0;
  7980  0170EE  6A40               	clrf	esr_check@esr_state^0,c
  7981                           
  7982                           ;bsoc.c: 236:   return C.esr;
  7983  0170F0  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  7984  0170F6  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  7985  0170FC  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  7986  017102  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  7987  017108  D01C               	goto	l2084
  7988  01710A                     l10855:
  7989  01710A  5040               	movf	esr_check@esr_state^0,w,c
  7990  01710C  6E0B               	movwf	(btemp+10)^0,c
  7991  01710E  6A0C               	clrf	(btemp+11)^0,c
  7992                           
  7993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7994                           ; Switch size 1, requested type "simple"
  7995                           ; Number of cases is 1, Range of values is 0 to 0
  7996                           ; switch strategies available:
  7997                           ; Name         Instructions Cycles
  7998                           ; simple_byte            4     3 (average)
  7999                           ;	Chosen strategy is simple_byte
  8000  017110  500C               	movf	(btemp+11)^0,w,c
  8001  017112  0A00               	xorlw	0	; case 0
  8002  017114  A4D8               	btfss	status,2,c
  8003  017116  D00D               	goto	l10857
  8004                           
  8005                           ; Switch size 1, requested type "simple"
  8006                           ; Number of cases is 4, Range of values is 0 to 3
  8007                           ; switch strategies available:
  8008                           ; Name         Instructions Cycles
  8009                           ; simple_byte           13     7 (average)
  8010                           ;	Chosen strategy is simple_byte
  8011  017118  500B               	movf	(btemp+10)^0,w,c
  8012  01711A  0A00               	xorlw	0	; case 0
  8013  01711C  B4D8               	btfsc	status,2,c
  8014  01711E  D6B8               	goto	l10787
  8015  017120  0A01               	xorlw	1	; case 1
  8016  017122  B4D8               	btfsc	status,2,c
  8017  017124  D6BF               	goto	l10791
  8018  017126  0A03               	xorlw	3	; case 2
  8019  017128  B4D8               	btfsc	status,2,c
  8020  01712A  D6EF               	goto	l10807
  8021  01712C  0A01               	xorlw	1	; case 3
  8022  01712E  B4D8               	btfsc	status,2,c
  8023  017130  D72D               	goto	l10825
  8024  017132                     l10857:
  8025                           
  8026                           ;bsoc.c: 241:  return -1.0;
  8027  017132  0E00               	movlw	0
  8028  017134  6E01               	movwf	btemp^0,c
  8029  017136  0E00               	movlw	0
  8030  017138  6E02               	movwf	(btemp+1)^0,c
  8031  01713A  0E80               	movlw	128
  8032  01713C  6E03               	movwf	(btemp+2)^0,c
  8033  01713E  0EBF               	movlw	191
  8034  017140                     L5:
  8035  017140  6E04               	movwf	(btemp+3)^0,c
  8036  017142                     l2084:
  8037                           
  8038                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8039  017142  52E5               	movf	postdec1,f,c
  8040  017144  0012               	return		;funcret
  8041  017146                     __end_of_esr_check:
  8042                           	opt callstack 0
  8043                           
  8044 ;; *************** function _update_adc_result *****************
  8045 ;; Defined at:
  8046 ;;		line 74 in file "daq.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1  [STACK] _Bool 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8064 ;;Total ram usage:        0 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:   17
  8067 ;; This function calls:
  8068 ;;		_StartTimer
  8069 ;;		_TimerDone
  8070 ;;		_check_adc_scan
  8071 ;;		_clear_adc_scan
  8072 ;;		_start_adc_scan
  8073 ;; This function is called by:
  8074 ;;		_esr_check
  8075 ;; This function uses a reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text17
  8079  01B45A                     __ptext17:
  8080                           	opt callstack 0
  8081  01B45A                     _update_adc_result:
  8082                           	opt callstack 12
  8083                           
  8084                           ;daq.c: 76:  if (R.done) {
  8085                           
  8086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8087                           ;incstack = 0
  8088  01B45A  0101               	movlb	1	; () banked
  8089  01B45C  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8090  01B45E  B4D8               	btfsc	status,2,c
  8091  01B460  0012               	return	
  8092                           
  8093                           ; BSR set to: 1
  8094                           ;daq.c: 77:   clear_adc_scan();
  8095  01B462  ECEB  F0DE         	call	_clear_adc_scan	;wreg free
  8096                           
  8097                           ; BSR set to: 1
  8098                           ;daq.c: 78:   start_adc_scan();
  8099  01B466  EC70  F0D6         	call	_start_adc_scan	;wreg free
  8100                           
  8101                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8102  01B46A  0EC8               	movlw	200
  8103  01B46C  6EE6               	movwf	postinc1,c
  8104  01B46E  0E00               	movlw	0
  8105  01B470  6EE6               	movwf	postinc1,c
  8106  01B472  0E01               	movlw	1
  8107  01B474  6EE6               	movwf	postinc1,c
  8108  01B476  EC6E  F0D9         	call	_StartTimer	;wreg free
  8109  01B47A                     l10401:
  8110  01B47A  0E01               	movlw	1
  8111  01B47C  6EE6               	movwf	postinc1,c
  8112  01B47E  ECF7  F0DB         	call	_TimerDone	;wreg free
  8113  01B482  5001               	movf	btemp^0,w,c
  8114  01B484  A4D8               	btfss	status,2,c
  8115  01B486  0012               	return	
  8116  01B488  ECDB  F0DE         	call	_check_adc_scan	;wreg free
  8117  01B48C  5001               	movf	btemp^0,w,c
  8118  01B48E  A4D8               	btfss	status,2,c
  8119  01B490  0012               	return	
  8120  01B492  D7F3               	goto	l10401
  8121  01B494                     __end_of_update_adc_result:
  8122                           	opt callstack 0
  8123                           
  8124 ;; *************** function _start_adc_scan *****************
  8125 ;; Defined at:
  8126 ;;		line 35 in file "daq.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;		None
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1  [STACK] _Bool 
  8133 ;; Registers used:
  8134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8144 ;;Total ram usage:        0 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:   16
  8147 ;; This function calls:
  8148 ;;		_ADCC_DischargeSampleCapacitor
  8149 ;;		_ADCC_SetADIInterruptHandler
  8150 ;;		_ADCC_SetADTIInterruptHandler
  8151 ;;		_ADCC_StartConversion
  8152 ;; This function is called by:
  8153 ;;		_main
  8154 ;;		_update_adc_result
  8155 ;; This function uses a reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text18
  8159  01ACE0                     __ptext18:
  8160                           	opt callstack 0
  8161  01ACE0                     _start_adc_scan:
  8162                           	opt callstack 14
  8163                           
  8164                           ;daq.c: 37:  if (R.done)
  8165                           
  8166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8167                           ;incstack = 0
  8168  01ACE0  0101               	movlb	1	; () banked
  8169  01ACE2  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8170  01ACE4  A4D8               	btfss	status,2,c
  8171  01ACE6  0012               	return	
  8172                           
  8173                           ; BSR set to: 1
  8174                           ;daq.c: 40:  R.scan_index = 0;
  8175  01ACE8  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8176                           
  8177                           ; BSR set to: 1
  8178                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8179  01ACEA  013A               	movlb	58	; () banked
  8180  01ACEC  5140               	movf	64,w,b	;volatile
  8181  01ACEE  006E F940  F001    	movff	14928,btemp	;volatile
  8182  01ACF4  6A02               	clrf	(btemp+1)^0,c
  8183  01ACF6  0060  F004  F002   	movff	btemp,btemp+1
  8184  01ACFC  6A01               	clrf	btemp^0,c
  8185  01ACFE  2601               	addwf	btemp^0,f,c
  8186  01AD00  0E00               	movlw	0
  8187  01AD02  2202               	addwfc	(btemp+1)^0,f,c
  8188  01AD04  0E77               	movlw	119
  8189  01AD06  1401               	andwf	btemp^0,w,c
  8190  01AD08  0101               	movlb	1	; () banked
  8191  01AD0A  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8192  01AD0C  0E3C               	movlw	60
  8193  01AD0E  1402               	andwf	(btemp+1)^0,w,c
  8194  01AD10  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8195                           
  8196                           ; BSR set to: 1
  8197                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8198  01AD12  0EFE               	movlw	low _adc_int_handler
  8199  01AD14  6EE6               	movwf	postinc1,c
  8200  01AD16  0EBD               	movlw	high _adc_int_handler
  8201  01AD18  6EE6               	movwf	postinc1,c
  8202  01AD1A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8203  01AD1C  6EE6               	movwf	postinc1,c
  8204  01AD1E  ECBF  F0DC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8205                           
  8206                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8207  01AD22  0E40               	movlw	low _adc_int_t_handler
  8208  01AD24  6EE6               	movwf	postinc1,c
  8209  01AD26  0EAA               	movlw	high _adc_int_t_handler
  8210  01AD28  6EE6               	movwf	postinc1,c
  8211  01AD2A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8212  01AD2C  6EE6               	movwf	postinc1,c
  8213  01AD2E  ECAB  F0DC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8214                           
  8215                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8216  01AD32  ECD7  F0DE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8217                           
  8218                           ; BSR set to: 62
  8219                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8220  01AD36  0101               	movlb	1	; () banked
  8221  01AD38  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8222  01AD3A  0B0F               	andlw	15
  8223  01AD3C  6EE6               	movwf	postinc1,c
  8224  01AD3E  EC66  F0DE         	call	_ADCC_StartConversion	;wreg free
  8225                           
  8226                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8227  01AD42  0012               	return		;funcret
  8228  01AD44                     __end_of_start_adc_scan:
  8229                           	opt callstack 0
  8230                           
  8231 ;; *************** function _ADCC_StartConversion *****************
  8232 ;; Defined at:
  8233 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  channel         1  [STACK] enum E16136
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;		None
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1  [STACK] void 
  8240 ;; Registers used:
  8241 ;;		fsr1l, fsr1h
  8242 ;; Tracked objects:
  8243 ;;		On entry : 3F/1
  8244 ;;		On exit  : 3F/3E
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:   15
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_start_adc_scan
  8258 ;;		_adc_int_t_handler
  8259 ;; This function uses a reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text19
  8263  01BCCC                     __ptext19:
  8264                           	opt callstack 0
  8265  01BCCC                     _ADCC_StartConversion:
  8266                           	opt callstack 0
  8267                           
  8268                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8269                           ;stkvar	_channel @ sp[(0)+-1]
  8270                           
  8271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8272                           ;incstack = 0
  8273 ;; hardware stack exceeded
  8274  01BCCC  0EFF               	movlw	-1
  8275  01BCCE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8276                           
  8277                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8278  01BCD4  013E               	movlb	62	; () banked
  8279  01BCD6  8FF8               	bsf	248,7,b	;volatile
  8280                           
  8281                           ; BSR set to: 62
  8282                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8283  01BCD8  81F8               	bsf	248,0,b	;volatile
  8284                           
  8285                           ; BSR set to: 62
  8286                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8287  01BCDA  52E5               	movf	postdec1,f,c
  8288  01BCDC  0012               	return		;funcret
  8289  01BCDE                     __end_of_ADCC_StartConversion:
  8290                           	opt callstack 0
  8291                           
  8292 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8293 ;; Defined at:
  8294 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1  [STACK] void 
  8301 ;; Registers used:
  8302 ;;		wreg, status,2
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/1
  8305 ;;		On exit  : 3F/3E
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:   15
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_start_adc_scan
  8319 ;;		_adc_int_t_handler
  8320 ;; This function uses a reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text20
  8324  01BDAE                     __ptext20:
  8325                           	opt callstack 0
  8326  01BDAE                     _ADCC_DischargeSampleCapacitor:
  8327                           	opt callstack 0
  8328                           
  8329                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8330                           
  8331                           ; BSR set to: 62
  8332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8333                           ;incstack = 0
  8334 ;; hardware stack exceeded
  8335  01BDAE  0E3B               	movlw	59
  8336  01BDB0  013E               	movlb	62	; () banked
  8337  01BDB2  6FF1               	movwf	241,b	;volatile
  8338                           
  8339                           ; BSR set to: 62
  8340                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8341  01BDB4  0012               	return		;funcret
  8342  01BDB6                     __end_of_ADCC_DischargeSampleCapacitor:
  8343                           	opt callstack 0
  8344                           
  8345 ;; *************** function _clear_adc_scan *****************
  8346 ;; Defined at:
  8347 ;;		line 66 in file "daq.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1  [STACK] void 
  8354 ;; Registers used:
  8355 ;;		None
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 3F/1
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   15
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_main
  8372 ;;		_update_adc_result
  8373 ;; This function uses a reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text21
  8377  01BDD6                     __ptext21:
  8378                           	opt callstack 0
  8379  01BDD6                     _clear_adc_scan:
  8380                           	opt callstack 13
  8381                           
  8382                           ;daq.c: 68:  R.done = 0;
  8383                           
  8384                           ; BSR set to: 62
  8385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8386                           ;incstack = 0
  8387  01BDD6  0101               	movlb	1	; () banked
  8388  01BDD8  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8389                           
  8390                           ; BSR set to: 1
  8391                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8392  01BDDA  0012               	return		;funcret
  8393  01BDDC                     __end_of_clear_adc_scan:
  8394                           	opt callstack 0
  8395                           
  8396 ;; *************** function _check_adc_scan *****************
  8397 ;; Defined at:
  8398 ;;		line 58 in file "daq.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;		None
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1  [STACK] _Bool 
  8405 ;; Registers used:
  8406 ;;		btemp
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/1
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;Total ram usage:        0 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:   15
  8419 ;; This function calls:
  8420 ;;		Nothing
  8421 ;; This function is called by:
  8422 ;;		_main
  8423 ;;		_update_adc_result
  8424 ;; This function uses a reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text22
  8428  01BDB6                     __ptext22:
  8429                           	opt callstack 0
  8430  01BDB6                     _check_adc_scan:
  8431                           	opt callstack 13
  8432                           
  8433                           ;daq.c: 60:  return R.done;
  8434                           
  8435                           ; BSR set to: 1
  8436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8437                           ;incstack = 0
  8438  01BDB6  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8439                           
  8440                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8441  01BDBC  0012               	return		;funcret
  8442  01BDBE                     __end_of_check_adc_scan:
  8443                           	opt callstack 0
  8444                           
  8445 ;; *************** function _set_load_relay_two *****************
  8446 ;; Defined at:
  8447 ;;		line 129 in file "mbmc.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  mode            1  [STACK] _Bool 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1  [STACK] void 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr1l, fsr1h
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8465 ;;Total ram usage:        0 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:   15
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_main
  8472 ;;		_esr_check
  8473 ;; This function uses a reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text23
  8477  01BCDE                     __ptext23:
  8478                           	opt callstack 0
  8479  01BCDE                     _set_load_relay_two:
  8480                           	opt callstack 15
  8481                           
  8482                           ;mbmc.c: 129: void set_load_relay_two(_Bool mode);mbmc.c: 130: {;mbmc.c: 131:  LATDbits.
      +                          LATD5 = mode;
  8483                           ;stkvar	_mode @ sp[(0)+-1]
  8484                           
  8485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8486                           ;incstack = 0
  8487  01BCDE  0EFF               	movlw	-1
  8488  01BCE0  B0E3               	btfsc	plusw1,0,c
  8489  01BCE2  D002               	bra	u9475
  8490  01BCE4  9ABD               	bcf	189,5,c	;volatile
  8491  01BCE6  D001               	bra	u9476
  8492  01BCE8                     u9475:
  8493  01BCE8  8ABD               	bsf	189,5,c	;volatile
  8494  01BCEA                     u9476:
  8495                           
  8496                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8497  01BCEA  52E5               	movf	postdec1,f,c
  8498  01BCEC  0012               	return		;funcret
  8499  01BCEE                     __end_of_set_load_relay_two:
  8500                           	opt callstack 0
  8501                           
  8502 ;; *************** function _set_load_relay_one *****************
  8503 ;; Defined at:
  8504 ;;		line 124 in file "mbmc.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  mode            1  [STACK] _Bool 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1  [STACK] void 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr1l, fsr1h
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:   15
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_main
  8529 ;;		_esr_check
  8530 ;; This function uses a reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text24
  8534  01BCEE                     __ptext24:
  8535                           	opt callstack 0
  8536  01BCEE                     _set_load_relay_one:
  8537                           	opt callstack 15
  8538                           
  8539                           ;mbmc.c: 124: void set_load_relay_one(_Bool mode);mbmc.c: 125: {;mbmc.c: 126:  LATDbits.
      +                          LATD4 = mode;
  8540                           ;stkvar	_mode @ sp[(0)+-1]
  8541                           
  8542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8543                           ;incstack = 0
  8544  01BCEE  0EFF               	movlw	-1
  8545  01BCF0  B0E3               	btfsc	plusw1,0,c
  8546  01BCF2  D002               	bra	u9465
  8547  01BCF4  98BD               	bcf	189,4,c	;volatile
  8548  01BCF6  D001               	bra	u9466
  8549  01BCF8                     u9465:
  8550  01BCF8  88BD               	bsf	189,4,c	;volatile
  8551  01BCFA                     u9466:
  8552                           
  8553                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8554  01BCFA  52E5               	movf	postdec1,f,c
  8555  01BCFC  0012               	return		;funcret
  8556  01BCFE                     __end_of_set_load_relay_one:
  8557                           	opt callstack 0
  8558                           
  8559 ;; *************** function _eaDogM_WriteCommand *****************
  8560 ;; Defined at:
  8561 ;;		line 175 in file "eadog.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  cmd             1  [STACK] const unsigned char 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1  [STACK] void 
  8568 ;; Registers used:
  8569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8570 ;; Tracked objects:
  8571 ;;		On entry : 3F/3D
  8572 ;;		On exit  : 3F/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8579 ;;Total ram usage:        0 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:   25
  8582 ;; This function calls:
  8583 ;;		_send_lcd_cmd_dma
  8584 ;; This function is called by:
  8585 ;;		_main
  8586 ;; This function uses a reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text25
  8590  01BD2C                     __ptext25:
  8591                           	opt callstack 0
  8592  01BD2C                     _eaDogM_WriteCommand:
  8593                           	opt callstack 5
  8594                           
  8595                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8596                           ;stkvar	_cmd @ sp[(0)+-1]
  8597                           
  8598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8599                           ;incstack = 0
  8600  01BD2C  0EFF               	movlw	-1
  8601  01BD2E  50E3               	movf	plusw1,w,c
  8602  01BD30  6EE6               	movwf	postinc1,c
  8603  01BD32  EC8E  F0D7         	call	_send_lcd_cmd_dma	;wreg free
  8604                           
  8605                           ; BSR set to: 0
  8606                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8607  01BD36  52E5               	movf	postdec1,f,c
  8608  01BD38  0012               	return		;funcret
  8609  01BD3A                     __end_of_eaDogM_WriteCommand:
  8610                           	opt callstack 0
  8611                           
  8612 ;; *************** function _convert_adc_data *****************
  8613 ;; Defined at:
  8614 ;;		line 51 in file "mbmc.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;  i               1  [STACK] unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1  [STACK] void 
  8621 ;; Registers used:
  8622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/1
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:   18
  8635 ;; This function calls:
  8636 ;;		_conv_raw_result
  8637 ;;		_lp_filter
  8638 ;; This function is called by:
  8639 ;;		_main
  8640 ;; This function uses a reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text26
  8644  01A25E                     __ptext26:
  8645                           	opt callstack 0
  8646  01A25E                     _convert_adc_data:
  8647                           	opt callstack 0
  8648                           
  8649                           ; BSR set to: 0
  8650                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8651  01A25E  52E6               	movf	postinc1,f,c
  8652                           
  8653                           ;mbmc.c: 53:  uint8_t i = 0;
  8654                           ;stkvar	_i @ sp[(-1)+0]
  8655                           
  8656                           ;incstack = 0
  8657  01A260  0EFF               	movlw	-1
  8658  01A262  6AE3               	clrf	plusw1,c
  8659  01A264                     l10867:
  8660                           
  8661                           ;mbmc.c: 56:   if (V.calib) {
  8662  01A264  0101               	movlb	1	; () banked
  8663  01A266  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8664  01A268  B4D8               	btfsc	status,2,c
  8665  01A26A  D01B               	goto	l10871
  8666                           
  8667                           ; BSR set to: 1
  8668                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8669  01A26C  0E01               	movlw	1
  8670  01A26E  6EE6               	movwf	postinc1,c
  8671                           
  8672                           ;stkvar	_i @ sp[(-2)+0]
  8673  01A270  0EFE               	movlw	-2
  8674  01A272  50E3               	movf	plusw1,w,c
  8675  01A274  6EE6               	movwf	postinc1,c
  8676  01A276  0E01               	movlw	1
  8677  01A278  6EE6               	movwf	postinc1,c
  8678                           
  8679                           ;stkvar	_i @ sp[(-4)+0]
  8680  01A27A  0EFC               	movlw	-4
  8681  01A27C  50E3               	movf	plusw1,w,c
  8682  01A27E  6EE6               	movwf	postinc1,c
  8683  01A280  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  8684  01A284  0060  F007  FFE6   	movff	btemp,postinc1
  8685  01A28A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8686  01A290  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8687  01A296  0060  F013  FFE6   	movff	btemp+3,postinc1
  8688  01A29C  ECCC  F0C1         	call	_lp_filter	;wreg free
  8689  01A2A0  D01A               	goto	L8
  8690  01A2A2                     l10871:
  8691                           
  8692                           ; BSR set to: 1
  8693                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8694  01A2A2  0E00               	movlw	0
  8695  01A2A4  6EE6               	movwf	postinc1,c
  8696                           
  8697                           ;stkvar	_i @ sp[(-2)+0]
  8698  01A2A6  0EFE               	movlw	-2
  8699  01A2A8  50E3               	movf	plusw1,w,c
  8700  01A2AA  6EE6               	movwf	postinc1,c
  8701  01A2AC  0E00               	movlw	0
  8702  01A2AE  6EE6               	movwf	postinc1,c
  8703                           
  8704                           ;stkvar	_i @ sp[(-4)+0]
  8705  01A2B0  0EFC               	movlw	-4
  8706  01A2B2  50E3               	movf	plusw1,w,c
  8707  01A2B4  6EE6               	movwf	postinc1,c
  8708  01A2B6  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  8709  01A2BA  0060  F007  FFE6   	movff	btemp,postinc1
  8710  01A2C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8711  01A2C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8712  01A2CC  0060  F013  FFE6   	movff	btemp+3,postinc1
  8713  01A2D2  ECCC  F0C1         	call	_lp_filter	;wreg free
  8714  01A2D6                     L8:
  8715                           
  8716                           ;stkvar	_i @ sp[(-1)+0]
  8717  01A2D6  0EFF               	movlw	-1
  8718  01A2D8  50E3               	movf	plusw1,w,c
  8719  01A2DA  0D04               	mullw	4
  8720  01A2DC  0EFF               	movlw	low _C
  8721  01A2DE  24F3               	addwf	243,w,c
  8722  01A2E0  6ED9               	movwf	fsr2l,c
  8723  01A2E2  0E06               	movlw	high _C
  8724  01A2E4  20F4               	addwfc	prodh,w,c
  8725  01A2E6  6EDA               	movwf	fsr2h,c
  8726  01A2E8  0060  F007  FFDE   	movff	btemp,postinc2
  8727  01A2EE  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8728  01A2F4  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8729  01A2FA  0060  F013  FFDE   	movff	btemp+3,postinc2
  8730                           
  8731                           ;mbmc.c: 61:  } while (++i < 16);
  8732                           ;stkvar	_i @ sp[(-1)+0]
  8733  01A300  0EFF               	movlw	-1
  8734  01A302  2AE3               	incf	plusw1,f,c
  8735  01A304  0EFF               	movlw	-1
  8736  01A306  006F FF8C  F001    	movff	plusw1,btemp
  8737  01A30C  0E0F               	movlw	15
  8738  01A30E  6401               	cpfsgt	btemp^0,c
  8739  01A310  D7A9               	goto	l10867
  8740                           
  8741                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8742  01A312  52E5               	movf	postdec1,f,c
  8743  01A314  0012               	return		;funcret
  8744  01A316                     __end_of_convert_adc_data:
  8745                           	opt callstack 0
  8746                           
  8747 ;; *************** function _clear_hid_pflags *****************
  8748 ;; Defined at:
  8749 ;;		line 51 in file "hid.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  h               1  [STACK] PTR struct H_data
  8752 ;;		 -> H(7), 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1  [STACK] void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 3F/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8768 ;;Total ram usage:        0 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:   15
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_main
  8775 ;; This function uses a reentrant model
  8776 ;;
  8777                           
  8778                           	psect	text27
  8779  01BA20                     __ptext27:
  8780                           	opt callstack 0
  8781  01BA20                     _clear_hid_pflags:
  8782                           	opt callstack 15
  8783                           
  8784                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8785                           ;stkvar	_h @ sp[(0)+-1]
  8786                           
  8787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8788                           ;incstack = 0
  8789  01BA20  0EFF               	movlw	-1
  8790  01BA22  50E3               	movf	plusw1,w,c
  8791  01BA24  6ED9               	movwf	fsr2l,c
  8792  01BA26  6ADA               	clrf	fsr2h,c
  8793  01BA28  0E03               	movlw	3
  8794  01BA2A  26D9               	addwf	fsr2l,f,c
  8795  01BA2C  0E00               	movlw	0
  8796  01BA2E  6EDF               	movwf	indf2,c
  8797                           
  8798                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8799                           ;stkvar	_h @ sp[(0)+-1]
  8800  01BA30  0EFF               	movlw	-1
  8801  01BA32  50E3               	movf	plusw1,w,c
  8802  01BA34  6ED9               	movwf	fsr2l,c
  8803  01BA36  6ADA               	clrf	fsr2h,c
  8804  01BA38  0E05               	movlw	5
  8805  01BA3A  26D9               	addwf	fsr2l,f,c
  8806  01BA3C  0E00               	movlw	0
  8807  01BA3E  6EDF               	movwf	indf2,c
  8808                           
  8809                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8810  01BA40  52E5               	movf	postdec1,f,c
  8811  01BA42  0012               	return		;funcret
  8812  01BA44                     __end_of_clear_hid_pflags:
  8813                           	opt callstack 0
  8814                           
  8815 ;; *************** function _check_help *****************
  8816 ;; Defined at:
  8817 ;;		line 40 in file "mconfig.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  flipper         1  [STACK] const _Bool 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  estatus         1    0        _Bool 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1  [STACK] _Bool 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8826 ;; Tracked objects:
  8827 ;;		On entry : 3F/1
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8835 ;;Total ram usage:        0 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:   27
  8838 ;; This function calls:
  8839 ;;		_StartTimer
  8840 ;;		_TimerDone
  8841 ;;		_display_help
  8842 ;;		_display_info
  8843 ;;		_get_vterm_ptr
  8844 ;;		_help_button
  8845 ;;		_mode_lamp_bright
  8846 ;;		_mode_lamp_dim
  8847 ;;		_set_display_info
  8848 ;;		_set_temp_display_help
  8849 ;;		_set_vterm
  8850 ;;		_sprintf
  8851 ;;		_update_lcd
  8852 ;;		_vterm_dump
  8853 ;; This function is called by:
  8854 ;;		_main
  8855 ;; This function uses a reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text28
  8859  017F82                     __ptext28:
  8860                           	opt callstack 0
  8861  017F82                     _check_help:
  8862                           	opt callstack 3
  8863                           
  8864                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8865                           
  8866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8867                           ;incstack = 0
  8868  017F82  EC4A  F0DA         	call	_help_button	;wreg free
  8869  017F86  5001               	movf	btemp^0,w,c
  8870  017F88  B4D8               	btfsc	status,2,c
  8871  017F8A  D0D0               	goto	l12767
  8872  017F8C  ECDF  F0DE         	call	_display_info	;wreg free
  8873  017F90  0401               	decf	btemp^0,w,c
  8874  017F92  B4D8               	btfsc	status,2,c
  8875  017F94  D0CB               	goto	l12767
  8876                           
  8877                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8878  017F96  0EDC               	movlw	220
  8879  017F98  6EE6               	movwf	postinc1,c
  8880  017F9A  0E05               	movlw	5
  8881  017F9C  6EE6               	movwf	postinc1,c
  8882  017F9E  0E0B               	movlw	11
  8883  017FA0  6EE6               	movwf	postinc1,c
  8884  017FA2  EC6E  F0D9         	call	_StartTimer	;wreg free
  8885                           
  8886                           ;mconfig.c: 48:   if (V.debug)
  8887  017FA6  0101               	movlb	1	; () banked
  8888  017FA8  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8889                           
  8890                           ; BSR set to: 1
  8891                           ;mconfig.c: 49:    vterm_dump();
  8892  017FAA  ECCD  F0C9         	call	_vterm_dump	;wreg free
  8893                           
  8894                           ;mconfig.c: 51:   set_vterm(1);
  8895  017FAE  0E01               	movlw	1
  8896  017FB0  6EE6               	movwf	postinc1,c
  8897  017FB2  ECCD  F0DD         	call	_set_vterm	;wreg free
  8898                           
  8899                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8900  017FB6  ECDF  F0DE         	call	_display_info	;wreg free
  8901  017FBA  5001               	movf	btemp^0,w,c
  8902  017FBC  6EE6               	movwf	postinc1,c
  8903  017FBE  EC7F  F0DE         	call	_set_temp_display_help	;wreg free
  8904                           
  8905                           ; BSR set to: 1
  8906                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8907  017FC2  0E01               	movlw	1
  8908  017FC4  6EE6               	movwf	postinc1,c
  8909  017FC6  ECDC  F0DD         	call	_set_display_info	;wreg free
  8910                           
  8911                           ;mconfig.c: 54:   if (flipper) {
  8912                           ;stkvar	_flipper @ sp[(0)+-1]
  8913  017FCA  0EFF               	movlw	-1
  8914  017FCC  50E3               	movf	plusw1,w,c
  8915  017FCE  B4D8               	btfsc	status,2,c
  8916  017FD0  D019               	goto	l12753
  8917                           
  8918                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8919  017FD2  0EB1               	movlw	low STR_46
  8920  017FD4  6EE6               	movwf	postinc1,c
  8921  017FD6  0EFF               	movlw	high STR_46
  8922  017FD8  6EE6               	movwf	postinc1,c
  8923  017FDA  0E27               	movlw	low STR_48
  8924  017FDC  6EE6               	movwf	postinc1,c
  8925  017FDE  0EFE               	movlw	high STR_48
  8926  017FE0  6EE6               	movwf	postinc1,c
  8927  017FE2  0E01               	movlw	1
  8928  017FE4  6EE6               	movwf	postinc1,c
  8929  017FE6  0E00               	movlw	0
  8930  017FE8  6EE6               	movwf	postinc1,c
  8931  017FEA  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  8932  017FEE  0060  F007  FFE6   	movff	btemp,postinc1
  8933  017FF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8934  017FFA  0E06               	movlw	6
  8935  017FFC  6EE6               	movwf	postinc1,c
  8936  017FFE  EC21  F0CD         	call	_sprintf	;wreg free
  8937                           
  8938                           ;mconfig.c: 56:   } else {
  8939  018002  D018               	goto	l1674
  8940  018004                     l12753:
  8941                           
  8942                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8943  018004  0EC7               	movlw	low STR_47
  8944  018006  6EE6               	movwf	postinc1,c
  8945  018008  0EFF               	movlw	high STR_47
  8946  01800A  6EE6               	movwf	postinc1,c
  8947  01800C  0E27               	movlw	low STR_48
  8948  01800E  6EE6               	movwf	postinc1,c
  8949  018010  0EFE               	movlw	high STR_48
  8950  018012  6EE6               	movwf	postinc1,c
  8951  018014  0E01               	movlw	1
  8952  018016  6EE6               	movwf	postinc1,c
  8953  018018  0E00               	movlw	0
  8954  01801A  6EE6               	movwf	postinc1,c
  8955  01801C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  8956  018020  0060  F007  FFE6   	movff	btemp,postinc1
  8957  018026  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8958  01802C  0E06               	movlw	6
  8959  01802E  6EE6               	movwf	postinc1,c
  8960  018030  EC21  F0CD         	call	_sprintf	;wreg free
  8961  018034                     l1674:
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8965  018034  0101               	movlb	1	; () banked
  8966  018036  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  8967  018038  32E8               	rrcf	wreg,f,c
  8968  01803A  32E8               	rrcf	wreg,f,c
  8969  01803C  0B03               	andlw	3
  8970  01803E  0D24               	mullw	36
  8971  018040  0E12               	movlw	18
  8972  018042  26F3               	addwf	243,f,c
  8973  018044  0E00               	movlw	0
  8974  018046  22F4               	addwfc	244,f,c
  8975  018048  0E37               	movlw	low _T
  8976  01804A  6E0B               	movwf	(btemp+10)^0,c
  8977  01804C  0EFB               	movlw	high _T
  8978  01804E  6E0C               	movwf	(btemp+11)^0,c
  8979  018050  50F3               	movf	243,w,c
  8980  018052  260B               	addwf	(btemp+10)^0,f,c
  8981  018054  50F4               	movf	244,w,c
  8982  018056  220C               	addwfc	(btemp+11)^0,f,c
  8983  018058  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8984  01805E  0060  F033  FFE6   	movff	btemp+11,postinc1
  8985  018064  0EBD               	movlw	low STR_50
  8986  018066  6EE6               	movwf	postinc1,c
  8987  018068  0EFF               	movlw	high STR_50
  8988  01806A  6EE6               	movwf	postinc1,c
  8989  01806C  0E01               	movlw	1
  8990  01806E  6EE6               	movwf	postinc1,c
  8991  018070  0E01               	movlw	1
  8992  018072  6EE6               	movwf	postinc1,c
  8993  018074  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  8994  018078  0060  F007  FFE6   	movff	btemp,postinc1
  8995  01807E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8996  018084  0E06               	movlw	6
  8997  018086  6EE6               	movwf	postinc1,c
  8998  018088  EC21  F0CD         	call	_sprintf	;wreg free
  8999                           
  9000                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9001  01808C  0101               	movlb	1	; () banked
  9002  01808E  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9003  018090  32E8               	rrcf	wreg,f,c
  9004  018092  32E8               	rrcf	wreg,f,c
  9005  018094  0B03               	andlw	3
  9006  018096  0D24               	mullw	36
  9007  018098  0E37               	movlw	low _T
  9008  01809A  6E0B               	movwf	(btemp+10)^0,c
  9009  01809C  0EFB               	movlw	high _T
  9010  01809E  6E0C               	movwf	(btemp+11)^0,c
  9011  0180A0  50F3               	movf	243,w,c
  9012  0180A2  260B               	addwf	(btemp+10)^0,f,c
  9013  0180A4  50F4               	movf	244,w,c
  9014  0180A6  220C               	addwfc	(btemp+11)^0,f,c
  9015  0180A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9016  0180AE  0060  F033  FFE6   	movff	btemp+11,postinc1
  9017  0180B4  0EBD               	movlw	low STR_50
  9018  0180B6  6EE6               	movwf	postinc1,c
  9019  0180B8  0EFF               	movlw	high STR_50
  9020  0180BA  6EE6               	movwf	postinc1,c
  9021  0180BC  0E01               	movlw	1
  9022  0180BE  6EE6               	movwf	postinc1,c
  9023  0180C0  0E02               	movlw	2
  9024  0180C2  6EE6               	movwf	postinc1,c
  9025  0180C4  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9026  0180C8  0060  F007  FFE6   	movff	btemp,postinc1
  9027  0180CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9028  0180D4  0E06               	movlw	6
  9029  0180D6  6EE6               	movwf	postinc1,c
  9030  0180D8  EC21  F0CD         	call	_sprintf	;wreg free
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;mconfig.c: 61:   V.help_id++;
  9034  0180DC  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9035  0180E0  38DF               	swapf	223,w,c
  9036  0180E2  6E0C               	movwf	(btemp+11)^0,c
  9037  0180E4  320C               	rrcf	(btemp+11)^0,f,c
  9038  0180E6  300C               	rrcf	(btemp+11)^0,w,c
  9039  0180E8  0B03               	andlw	3
  9040  0180EA  6E0C               	movwf	(btemp+11)^0,c
  9041  0180EC  2A0C               	incf	(btemp+11)^0,f,c
  9042  0180EE  3A0C               	swapf	(btemp+11)^0,f,c
  9043  0180F0  360C               	rlcf	(btemp+11)^0,f,c
  9044  0180F2  360C               	rlcf	(btemp+11)^0,f,c
  9045  0180F4  50DF               	movf	223,w,c
  9046  0180F6  180C               	xorwf	(btemp+11)^0,w,c
  9047  0180F8  0B3F               	andlw	-193
  9048  0180FA  180C               	xorwf	(btemp+11)^0,w,c
  9049  0180FC  6EDF               	movwf	223,c
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9053  0180FE  0EB8               	movlw	184
  9054  018100  6EE6               	movwf	postinc1,c
  9055  018102  0E0B               	movlw	11
  9056  018104  6EE6               	movwf	postinc1,c
  9057  018106  0E09               	movlw	9
  9058  018108  6EE6               	movwf	postinc1,c
  9059  01810A  EC6E  F0D9         	call	_StartTimer	;wreg free
  9060                           
  9061                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9062  01810E  0EB8               	movlw	184
  9063  018110  6EE6               	movwf	postinc1,c
  9064  018112  0E0B               	movlw	11
  9065  018114  6EE6               	movwf	postinc1,c
  9066  018116  0E07               	movlw	7
  9067  018118  6EE6               	movwf	postinc1,c
  9068  01811A  EC6E  F0D9         	call	_StartTimer	;wreg free
  9069                           
  9070                           ;mconfig.c: 64:   mode_lamp_bright();
  9071  01811E  EC9D  F0DE         	call	_mode_lamp_bright	;wreg free
  9072                           
  9073                           ;mconfig.c: 65:   update_lcd(1);
  9074  018122  0E01               	movlw	1
  9075  018124  6EE6               	movwf	postinc1,c
  9076  018126  EC99  F0CC         	call	_update_lcd	;wreg free
  9077                           
  9078                           ;mconfig.c: 67:  } else {
  9079  01812A  D032               	goto	l1675
  9080  01812C                     l12767:
  9081                           
  9082                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9083  01812C  0E09               	movlw	9
  9084  01812E  6EE6               	movwf	postinc1,c
  9085  018130  ECF7  F0DB         	call	_TimerDone	;wreg free
  9086  018134  5001               	movf	btemp^0,w,c
  9087  018136  B4D8               	btfsc	status,2,c
  9088  018138  D02B               	goto	l1675
  9089                           
  9090                           ;mconfig.c: 69:    set_vterm(0);
  9091  01813A  0E00               	movlw	0
  9092  01813C  6EE6               	movwf	postinc1,c
  9093  01813E  ECCD  F0DD         	call	_set_vterm	;wreg free
  9094                           
  9095                           ;mconfig.c: 70:    V.help = 0;
  9096  018142  0101               	movlb	1	; () banked
  9097  018144  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9098                           
  9099                           ; BSR set to: 1
  9100                           ;mconfig.c: 71:    set_display_info(display_help());
  9101  018146  ECE3  F0DE         	call	_display_help	;wreg free
  9102  01814A  5001               	movf	btemp^0,w,c
  9103  01814C  6EE6               	movwf	postinc1,c
  9104  01814E  ECDC  F0DD         	call	_set_display_info	;wreg free
  9105                           
  9106                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9107  018152  0060  F717  FFE6   	movff	_V+149,postinc1
  9108  018158  0060  F71B  FFE6   	movff	_V+150,postinc1
  9109  01815E  EC23  F0DE         	call	_mode_lamp_dim	;wreg free
  9110                           
  9111                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9112  018162  0E0B               	movlw	11
  9113  018164  6EE6               	movwf	postinc1,c
  9114  018166  ECF7  F0DB         	call	_TimerDone	;wreg free
  9115  01816A  5001               	movf	btemp^0,w,c
  9116  01816C  B4D8               	btfsc	status,2,c
  9117  01816E  D010               	goto	l1675
  9118                           
  9119                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9120  018170  0101               	movlb	1	; () banked
  9121  018172  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9122  018174  A4D8               	btfss	status,2,c
  9123  018176  D002               	goto	u12420
  9124  018178  0E01               	movlw	1
  9125  01817A  D001               	goto	u12430
  9126  01817C                     u12420:
  9127  01817C  0E00               	movlw	0
  9128  01817E                     u12430:
  9129  01817E  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9130                           
  9131                           ; BSR set to: 1
  9132                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9133  018180  0EDC               	movlw	220
  9134  018182  6EE6               	movwf	postinc1,c
  9135  018184  0E05               	movlw	5
  9136  018186  6EE6               	movwf	postinc1,c
  9137  018188  0E0B               	movlw	11
  9138  01818A  6EE6               	movwf	postinc1,c
  9139  01818C  EC6E  F0D9         	call	_StartTimer	;wreg free
  9140  018190                     l1675:
  9141                           
  9142                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9143  018190  52E5               	movf	postdec1,f,c
  9144  018192  0012               	return		;funcret
  9145  018194                     __end_of_check_help:
  9146                           	opt callstack 0
  9147                           
  9148 ;; *************** function _vterm_dump *****************
  9149 ;; Defined at:
  9150 ;;		line 121 in file "mconfig.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1  [STACK] void 
  9157 ;; Registers used:
  9158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9159 ;; Tracked objects:
  9160 ;;		On entry : 3F/1
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9168 ;;Total ram usage:        0 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; Hardware stack levels required when called:   26
  9171 ;; This function calls:
  9172 ;;		_WaitMs
  9173 ;;		_eaDogM_WriteStringAtPos
  9174 ;;		_get_vterm_ptr
  9175 ;;		_sprintf
  9176 ;;		_wait_lcd_done
  9177 ;; This function is called by:
  9178 ;;		_check_help
  9179 ;; This function uses a reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text29
  9183  01939A                     __ptext29:
  9184                           	opt callstack 0
  9185  01939A                     _vterm_dump:
  9186                           	opt callstack 3
  9187                           
  9188                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9189                           
  9190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9191                           ;incstack = 0
  9192  01939A  0E01               	movlw	1
  9193  01939C  6EE6               	movwf	postinc1,c
  9194  01939E  0E00               	movlw	0
  9195  0193A0  6EE6               	movwf	postinc1,c
  9196  0193A2  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9197  0193A6  0060  F007  FFE6   	movff	btemp,postinc1
  9198  0193AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9199  0193B2  0E00               	movlw	0
  9200  0193B4  6EE6               	movwf	postinc1,c
  9201  0193B6  0E00               	movlw	0
  9202  0193B8  6EE6               	movwf	postinc1,c
  9203  0193BA  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9204  0193BE  0060  F007  FFE6   	movff	btemp,postinc1
  9205  0193C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9206  0193CA  0E93               	movlw	low STR_52
  9207  0193CC  6EE6               	movwf	postinc1,c
  9208  0193CE  0EFF               	movlw	high STR_52
  9209  0193D0  6EE6               	movwf	postinc1,c
  9210  0193D2  0E31               	movlw	low (_V+1)
  9211  0193D4  6EE6               	movwf	postinc1,c
  9212  0193D6  0E01               	movlw	high (_V+1)
  9213  0193D8  6EE6               	movwf	postinc1,c
  9214  0193DA  0E08               	movlw	8
  9215  0193DC  6EE6               	movwf	postinc1,c
  9216  0193DE  EC21  F0CD         	call	_sprintf	;wreg free
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;mconfig.c: 124:  wait_lcd_done();
  9220  0193E2  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9224  0193E6  0E31               	movlw	low (_V+1)
  9225  0193E8  6EE6               	movwf	postinc1,c
  9226  0193EA  0E01               	movlw	high (_V+1)
  9227  0193EC  6EE6               	movwf	postinc1,c
  9228  0193EE  0E00               	movlw	0
  9229  0193F0  6EE6               	movwf	postinc1,c
  9230  0193F2  0E00               	movlw	0
  9231  0193F4  6EE6               	movwf	postinc1,c
  9232  0193F6  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9233                           
  9234                           ; BSR set to: 59
  9235                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9236  0193FA  0E01               	movlw	1
  9237  0193FC  6EE6               	movwf	postinc1,c
  9238  0193FE  0E01               	movlw	1
  9239  019400  6EE6               	movwf	postinc1,c
  9240  019402  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9241  019406  0060  F007  FFE6   	movff	btemp,postinc1
  9242  01940C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9243  019412  0E00               	movlw	0
  9244  019414  6EE6               	movwf	postinc1,c
  9245  019416  0E01               	movlw	1
  9246  019418  6EE6               	movwf	postinc1,c
  9247  01941A  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9248  01941E  0060  F007  FFE6   	movff	btemp,postinc1
  9249  019424  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9250  01942A  0E93               	movlw	low STR_52
  9251  01942C  6EE6               	movwf	postinc1,c
  9252  01942E  0EFF               	movlw	high STR_52
  9253  019430  6EE6               	movwf	postinc1,c
  9254  019432  0E31               	movlw	low (_V+1)
  9255  019434  6EE6               	movwf	postinc1,c
  9256  019436  0E01               	movlw	high (_V+1)
  9257  019438  6EE6               	movwf	postinc1,c
  9258  01943A  0E08               	movlw	8
  9259  01943C  6EE6               	movwf	postinc1,c
  9260  01943E  EC21  F0CD         	call	_sprintf	;wreg free
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;mconfig.c: 127:  wait_lcd_done();
  9264  019442  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9265                           
  9266                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9267  019446  0E31               	movlw	low (_V+1)
  9268  019448  6EE6               	movwf	postinc1,c
  9269  01944A  0E01               	movlw	high (_V+1)
  9270  01944C  6EE6               	movwf	postinc1,c
  9271  01944E  0E00               	movlw	0
  9272  019450  6EE6               	movwf	postinc1,c
  9273  019452  0E01               	movlw	1
  9274  019454  6EE6               	movwf	postinc1,c
  9275  019456  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9276                           
  9277                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9278  01945A  0E01               	movlw	1
  9279  01945C  6EE6               	movwf	postinc1,c
  9280  01945E  0E02               	movlw	2
  9281  019460  6EE6               	movwf	postinc1,c
  9282  019462  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9283  019466  0060  F007  FFE6   	movff	btemp,postinc1
  9284  01946C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9285  019472  0E00               	movlw	0
  9286  019474  6EE6               	movwf	postinc1,c
  9287  019476  0E02               	movlw	2
  9288  019478  6EE6               	movwf	postinc1,c
  9289  01947A  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9290  01947E  0060  F007  FFE6   	movff	btemp,postinc1
  9291  019484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9292  01948A  0E93               	movlw	low STR_52
  9293  01948C  6EE6               	movwf	postinc1,c
  9294  01948E  0EFF               	movlw	high STR_52
  9295  019490  6EE6               	movwf	postinc1,c
  9296  019492  0E31               	movlw	low (_V+1)
  9297  019494  6EE6               	movwf	postinc1,c
  9298  019496  0E01               	movlw	high (_V+1)
  9299  019498  6EE6               	movwf	postinc1,c
  9300  01949A  0E08               	movlw	8
  9301  01949C  6EE6               	movwf	postinc1,c
  9302  01949E  EC21  F0CD         	call	_sprintf	;wreg free
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;mconfig.c: 130:  wait_lcd_done();
  9306  0194A2  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9310  0194A6  0E31               	movlw	low (_V+1)
  9311  0194A8  6EE6               	movwf	postinc1,c
  9312  0194AA  0E01               	movlw	high (_V+1)
  9313  0194AC  6EE6               	movwf	postinc1,c
  9314  0194AE  0E00               	movlw	0
  9315  0194B0  6EE6               	movwf	postinc1,c
  9316  0194B2  0E02               	movlw	2
  9317  0194B4  6EE6               	movwf	postinc1,c
  9318  0194B6  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9319                           
  9320                           ; BSR set to: 59
  9321                           ;mconfig.c: 132:  WaitMs(3000);
  9322  0194BA  0EB8               	movlw	184
  9323  0194BC  6EE6               	movwf	postinc1,c
  9324  0194BE  0E0B               	movlw	11
  9325  0194C0  6EE6               	movwf	postinc1,c
  9326  0194C2  EC82  F0DA         	call	_WaitMs	;wreg free
  9327                           
  9328                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9329  0194C6  0012               	return		;funcret
  9330  0194C8                     __end_of_vterm_dump:
  9331                           	opt callstack 0
  9332                           
  9333 ;; *************** function _sprintf *****************
  9334 ;; Defined at:
  9335 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  s               2  [STACK] PTR unsigned char 
  9338 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9339 ;;  fmt             2  [STACK] PTR const unsigned char 
  9340 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
  9341 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9342 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9343 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9344 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9345 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9346 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9347 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9348 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9349 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9350 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9351 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9352 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9353 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9354 ;;		 -> STR_2(15), STR_1(17), 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  f               6  [STACK] struct _IO_FILE
  9357 ;;  ap              2  [STACK] PTR void [1]
  9358 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9359 ;;  ret             2    0        int 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2  [STACK] int 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 3F/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;Total ram usage:        0 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:   23
  9376 ;; This function calls:
  9377 ;;		_vfprintf
  9378 ;; This function is called by:
  9379 ;;		_main
  9380 ;;		_check_help
  9381 ;;		_vterm_dump
  9382 ;;		_calc_bsoc
  9383 ;; This function uses a reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text30
  9387  019A42                     __ptext30:
  9388                           	opt callstack 0
  9389  019A42                     _sprintf:
  9390                           	opt callstack 0
  9391                           
  9392                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9393  019A42  0E08               	movlw	8
  9394  019A44  26E1               	addwf	fsr1l,f,c
  9395  019A46  0E00               	movlw	0
  9396  019A48  22E2               	addwfc	fsr1h,f,c
  9397                           
  9398                           ;incstack = 0
  9399 ;; hardware stack exceeded
  9400  019A4A  0EFE               	movlw	254
  9401  019A4C  6E0B               	movwf	(btemp+10)^0,c
  9402  019A4E  0EFF               	movlw	255
  9403  019A50  6E0C               	movwf	(btemp+11)^0,c
  9404                           
  9405                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9406  019A52  0EF5               	movlw	245
  9407  019A54  24E1               	addwf	fsr1l,w,c
  9408  019A56  6E09               	movwf	(btemp+8)^0,c
  9409  019A58  0EFF               	movlw	255
  9410  019A5A  20E2               	addwfc	fsr1h,w,c
  9411  019A5C  6E0A               	movwf	(btemp+9)^0,c
  9412  019A5E  500B               	movf	(btemp+10)^0,w,c
  9413  019A60  2609               	addwf	(btemp+8)^0,f,c
  9414  019A62  500C               	movf	(btemp+11)^0,w,c
  9415  019A64  220A               	addwfc	(btemp+9)^0,f,c
  9416                           
  9417                           ;stkvar	_ap @ sp[(-8)+6]
  9418  019A66  0EFF               	movlw	-1
  9419  019A68  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9420  019A6E  0EFE               	movlw	-2
  9421  019A70  0060  F027  FFE3   	movff	btemp+8,plusw1
  9422                           
  9423                           ;stkvar	_s @ sp[(-8)+-3]
  9424  019A76  0EF5               	movlw	-11
  9425  019A78  006F FF8C  F00B    	movff	plusw1,btemp+10
  9426  019A7E  0EF6               	movlw	-10
  9427  019A80  006F FF8C  F00C    	movff	plusw1,btemp+11
  9428                           
  9429                           ;stkvar	_f @ sp[(-8)+0]
  9430  019A86  0EF9               	movlw	-7
  9431  019A88  0060  F033  FFE3   	movff	btemp+11,plusw1
  9432  019A8E  0EF8               	movlw	-8
  9433  019A90  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9434                           
  9435                           ;stkvar	_f @ sp[(-8)+0]
  9436  019A96  0EFA               	movlw	250
  9437  019A98  24E1               	addwf	fsr1l,w,c
  9438  019A9A  6ED9               	movwf	fsr2l,c
  9439  019A9C  0EFF               	movlw	255
  9440  019A9E  20E2               	addwfc	fsr1h,w,c
  9441  019AA0  6EDA               	movwf	fsr2h,c
  9442  019AA2  0E00               	movlw	0
  9443  019AA4  6EDE               	movwf	postinc2,c
  9444  019AA6  0E00               	movlw	0
  9445  019AA8  6EDD               	movwf	postdec2,c
  9446                           
  9447                           ;stkvar	_f @ sp[(-8)+0]
  9448  019AAA  0EFC               	movlw	252
  9449  019AAC  24E1               	addwf	fsr1l,w,c
  9450  019AAE  6ED9               	movwf	fsr2l,c
  9451  019AB0  0EFF               	movlw	255
  9452  019AB2  20E2               	addwfc	fsr1h,w,c
  9453  019AB4  6EDA               	movwf	fsr2h,c
  9454  019AB6  0E00               	movlw	0
  9455  019AB8  6EDE               	movwf	postinc2,c
  9456  019ABA  0E00               	movlw	0
  9457  019ABC  6EDD               	movwf	postdec2,c
  9458                           
  9459                           ;stkvar	_ap @ sp[(-8)+6]
  9460  019ABE  0EFE               	movlw	254
  9461  019AC0  24E1               	addwf	fsr1l,w,c
  9462  019AC2  6E01               	movwf	btemp^0,c
  9463  019AC4  0EFF               	movlw	255
  9464  019AC6  20E2               	addwfc	fsr1h,w,c
  9465  019AC8  6E02               	movwf	(btemp+1)^0,c
  9466  019ACA  0060  F007  FFE6   	movff	btemp,postinc1
  9467  019AD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9468                           
  9469                           ;stkvar	_fmt @ sp[(-10)+-5]
  9470  019AD6  0EF1               	movlw	-15
  9471  019AD8  006F FF8F FFE6     	movff	plusw1,postinc1
  9472  019ADE  006F FF8F FFE6     	movff	plusw1,postinc1
  9473                           
  9474                           ;stkvar	_f @ sp[(-12)+0]
  9475  019AE4  0EF4               	movlw	244
  9476  019AE6  24E1               	addwf	fsr1l,w,c
  9477  019AE8  6E01               	movwf	btemp^0,c
  9478  019AEA  0EFF               	movlw	255
  9479  019AEC  20E2               	addwfc	fsr1h,w,c
  9480  019AEE  6E02               	movwf	(btemp+1)^0,c
  9481  019AF0  0060  F007  FFE6   	movff	btemp,postinc1
  9482  019AF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9483  019AFC  ECE2  F0D1         	call	_vfprintf	;wreg free
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;stkvar	_f @ sp[(-8)+0]
  9487  019B00  0EFA               	movlw	250
  9488  019B02  24E1               	addwf	fsr1l,w,c
  9489  019B04  6ED9               	movwf	fsr2l,c
  9490  019B06  0EFF               	movlw	255
  9491  019B08  20E2               	addwfc	fsr1h,w,c
  9492  019B0A  6EDA               	movwf	fsr2h,c
  9493  019B0C  006F FF78  F00B    	movff	postinc2,btemp+10
  9494  019B12  006F FF74  F00C    	movff	postdec2,btemp+11
  9495                           
  9496                           ;stkvar	_s @ sp[(-8)+-3]
  9497  019B18  0EF5               	movlw	-11
  9498  019B1A  006F FF8C  F009    	movff	plusw1,btemp+8
  9499  019B20  0EF6               	movlw	-10
  9500  019B22  006F FF8C  F00A    	movff	plusw1,btemp+9
  9501  019B28  500B               	movf	(btemp+10)^0,w,c
  9502  019B2A  2409               	addwf	(btemp+8)^0,w,c
  9503  019B2C  6ED9               	movwf	fsr2l,c
  9504  019B2E  500C               	movf	(btemp+11)^0,w,c
  9505  019B30  200A               	addwfc	(btemp+9)^0,w,c
  9506  019B32  6EDA               	movwf	fsr2h,c
  9507  019B34  0E00               	movlw	0
  9508  019B36  6EDF               	movwf	indf2,c
  9509                           
  9510                           ; BSR set to: 0
  9511                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, args
      +                          ize = 4, vargsize = 0
  9512  019B38  0EF8               	movlw	248
  9513  019B3A  26E1               	addwf	fsr1l,f,c
  9514  019B3C  0EFF               	movlw	255
  9515  019B3E  22E2               	addwfc	fsr1h,f,c
  9516  019B40  52E5               	movf	postdec1,f,c
  9517  019B42  50E7               	movf	indf1,w,c
  9518  019B44  5EE1               	subwf	fsr1l,f,c
  9519  019B46  0E00               	movlw	0
  9520  019B48  5AE2               	subwfb	fsr1h,f,c
  9521  019B4A  0012               	return		;funcret
  9522  019B4C                     __end_of_sprintf:
  9523                           	opt callstack 0
  9524                           
  9525 ;; *************** function _get_vterm_ptr *****************
  9526 ;; Defined at:
  9527 ;;		line 116 in file "mconfig.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  line            1  [STACK] const unsigned char 
  9530 ;;  vterm           1  [STACK] const unsigned char 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  2  [STACK] PTR unsigned char 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;Total ram usage:        0 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:   15
  9549 ;; This function calls:
  9550 ;;		Nothing
  9551 ;; This function is called by:
  9552 ;;		_main
  9553 ;;		_check_help
  9554 ;;		_vterm_dump
  9555 ;; This function uses a reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text31
  9559  01B698                     __ptext31:
  9560                           	opt callstack 0
  9561  01B698                     _get_vterm_ptr:
  9562                           	opt callstack 15
  9563                           
  9564                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9565                           ;stkvar	_vterm @ sp[(0)+-2]
  9566                           
  9567                           ; BSR set to: 0
  9568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9569                           ;incstack = 0
  9570  01B698  0EFE               	movlw	-2
  9571  01B69A  50E3               	movf	plusw1,w,c
  9572  01B69C  0B03               	andlw	3
  9573  01B69E  0D78               	mullw	120
  9574  01B6A0  0E26               	movlw	low _D
  9575  01B6A2  6E01               	movwf	btemp^0,c
  9576  01B6A4  0E08               	movlw	high _D
  9577  01B6A6  6E02               	movwf	(btemp+1)^0,c
  9578  01B6A8  50F3               	movf	243,w,c
  9579  01B6AA  2601               	addwf	btemp^0,f,c
  9580  01B6AC  50F4               	movf	244,w,c
  9581  01B6AE  2202               	addwfc	(btemp+1)^0,f,c
  9582                           
  9583                           ;stkvar	_line @ sp[(0)+-1]
  9584  01B6B0  0EFF               	movlw	-1
  9585  01B6B2  50E3               	movf	plusw1,w,c
  9586  01B6B4  0B03               	andlw	3
  9587  01B6B6  0D28               	mullw	40
  9588  01B6B8  50F3               	movf	243,w,c
  9589  01B6BA  2601               	addwf	btemp^0,f,c
  9590  01B6BC  50F4               	movf	244,w,c
  9591  01B6BE  2202               	addwfc	(btemp+1)^0,f,c
  9592                           
  9593                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9594  01B6C0  52E5               	movf	postdec1,f,c
  9595  01B6C2  52E5               	movf	postdec1,f,c
  9596  01B6C4  0012               	return		;funcret
  9597  01B6C6                     __end_of_get_vterm_ptr:
  9598                           	opt callstack 0
  9599                           
  9600 ;; *************** function _WaitMs *****************
  9601 ;; Defined at:
  9602 ;;		line 32 in file "timers.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  numMilliseco    2  [STACK] const unsigned short 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1  [STACK] void 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/1
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:   16
  9623 ;; This function calls:
  9624 ;;		_StartTimer
  9625 ;;		_TimerDone
  9626 ;; This function is called by:
  9627 ;;		_main
  9628 ;;		_vterm_dump
  9629 ;; This function uses a reentrant model
  9630 ;;
  9631                           
  9632                           	psect	text32
  9633  01B504                     __ptext32:
  9634                           	opt callstack 0
  9635  01B504                     _WaitMs:
  9636                           	opt callstack 12
  9637                           
  9638                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9639                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9640                           
  9641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9642                           ;incstack = 0
  9643  01B504  0EFE               	movlw	-2
  9644  01B506  006F FF8F FFE6     	movff	plusw1,postinc1
  9645  01B50C  006F FF8F FFE6     	movff	plusw1,postinc1
  9646  01B512  0E00               	movlw	0
  9647  01B514  6EE6               	movwf	postinc1,c
  9648  01B516  EC6E  F0D9         	call	_StartTimer	;wreg free
  9649                           
  9650                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9651  01B51A  D005               	goto	l9793
  9652  01B51C                     l1606:
  9653                           
  9654                           ;timers.c: 36:   __nop();
  9655  01B51C  F000               	nop	
  9656                           
  9657                           ;timers.c: 37:   __nop();
  9658  01B51E  F000               	nop	
  9659                           
  9660                           ;timers.c: 38:   __nop();
  9661  01B520  F000               	nop	
  9662                           
  9663                           ;timers.c: 39:   __nop();
  9664  01B522  F000               	nop	
  9665  01B524  0004               	clrwdt		;# 
  9666  01B526                     l9793:
  9667                           
  9668                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9669  01B526  0E00               	movlw	0
  9670  01B528  6EE6               	movwf	postinc1,c
  9671  01B52A  ECF7  F0DB         	call	_TimerDone	;wreg free
  9672  01B52E  5001               	movf	btemp^0,w,c
  9673  01B530  B4D8               	btfsc	status,2,c
  9674  01B532  D7F4               	goto	l1606
  9675                           
  9676                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9677  01B534  52E5               	movf	postdec1,f,c
  9678  01B536  52E5               	movf	postdec1,f,c
  9679  01B538  0012               	return		;funcret
  9680  01B53A                     __end_of_WaitMs:
  9681                           	opt callstack 0
  9682                           
  9683 ;; *************** function _update_lcd *****************
  9684 ;; Defined at:
  9685 ;;		line 85 in file "mconfig.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  vterm           1  [STACK] unsigned char 
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;		None
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  1  [STACK] unsigned char 
  9692 ;; Registers used:
  9693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9703 ;;Total ram usage:        0 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; Hardware stack levels required when called:   26
  9706 ;; This function calls:
  9707 ;;		_eaDogM_WriteStringAtPos
  9708 ;;		_wait_lcd_done
  9709 ;; This function is called by:
  9710 ;;		_main
  9711 ;;		_check_help
  9712 ;; This function uses a reentrant model
  9713 ;;
  9714                           
  9715                           	psect	text33
  9716  019932                     __ptext33:
  9717                           	opt callstack 0
  9718  019932                     _update_lcd:
  9719                           	opt callstack 4
  9720                           
  9721                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9722                           ;stkvar	_vterm @ sp[(0)+-1]
  9723                           
  9724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9725                           ;incstack = 0
  9726  019932  0EFF               	movlw	-1
  9727  019934  006F FF8C  F001    	movff	plusw1,btemp
  9728  01993A  0E03               	movlw	3
  9729  01993C  1601               	andwf	btemp^0,f,c
  9730  01993E  0EFF               	movlw	-1
  9731  019940  0060  F007  FFE3   	movff	btemp,plusw1
  9732                           
  9733                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9734  019946  EE22  F206         	lfsr	2,_D+480
  9735  01994A  A0DF               	btfss	indf2,0,c
  9736  01994C  D004               	goto	l12577
  9737                           
  9738                           ;stkvar	_vterm @ sp[(0)+-1]
  9739  01994E  0EFF               	movlw	-1
  9740  019950  50E3               	movf	plusw1,w,c
  9741  019952  B4D8               	btfsc	status,2,c
  9742  019954  D074               	goto	l1682
  9743  019956                     l12577:
  9744                           
  9745                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9746                           ;stkvar	_vterm @ sp[(0)+-1]
  9747  019956  0EFF               	movlw	-1
  9748  019958  50E3               	movf	plusw1,w,c
  9749  01995A  0D78               	mullw	120
  9750  01995C  0E36               	movlw	low (_D+16)
  9751  01995E  24F3               	addwf	243,w,c
  9752  019960  6ED9               	movwf	fsr2l,c
  9753  019962  0E08               	movlw	high (_D+16)
  9754  019964  20F4               	addwfc	prodh,w,c
  9755  019966  6EDA               	movwf	fsr2h,c
  9756  019968  0E00               	movlw	0
  9757  01996A  6EDF               	movwf	indf2,c
  9758                           
  9759                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9760                           ;stkvar	_vterm @ sp[(0)+-1]
  9761  01996C  0EFF               	movlw	-1
  9762  01996E  50E3               	movf	plusw1,w,c
  9763  019970  0D78               	mullw	120
  9764  019972  0E5E               	movlw	low (_D+56)
  9765  019974  24F3               	addwf	243,w,c
  9766  019976  6ED9               	movwf	fsr2l,c
  9767  019978  0E08               	movlw	high (_D+56)
  9768  01997A  20F4               	addwfc	prodh,w,c
  9769  01997C  6EDA               	movwf	fsr2h,c
  9770  01997E  0E00               	movlw	0
  9771  019980  6EDF               	movwf	indf2,c
  9772                           
  9773                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9774                           ;stkvar	_vterm @ sp[(0)+-1]
  9775  019982  0EFF               	movlw	-1
  9776  019984  50E3               	movf	plusw1,w,c
  9777  019986  0D78               	mullw	120
  9778  019988  0E86               	movlw	low (_D+96)
  9779  01998A  24F3               	addwf	243,w,c
  9780  01998C  6ED9               	movwf	fsr2l,c
  9781  01998E  0E08               	movlw	high (_D+96)
  9782  019990  20F4               	addwfc	prodh,w,c
  9783  019992  6EDA               	movwf	fsr2h,c
  9784  019994  0E00               	movlw	0
  9785  019996  6EDF               	movwf	indf2,c
  9786                           
  9787                           ;mconfig.c: 95:  wait_lcd_done();
  9788  019998  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9792                           ;stkvar	_vterm @ sp[(0)+-1]
  9793  01999C  0EFF               	movlw	-1
  9794  01999E  50E3               	movf	plusw1,w,c
  9795  0199A0  0D78               	mullw	120
  9796  0199A2  0E26               	movlw	low _D
  9797  0199A4  6E0B               	movwf	(btemp+10)^0,c
  9798  0199A6  0E08               	movlw	high _D
  9799  0199A8  6E0C               	movwf	(btemp+11)^0,c
  9800  0199AA  50F3               	movf	243,w,c
  9801  0199AC  260B               	addwf	(btemp+10)^0,f,c
  9802  0199AE  50F4               	movf	244,w,c
  9803  0199B0  220C               	addwfc	(btemp+11)^0,f,c
  9804  0199B2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9805  0199B8  0060  F033  FFE6   	movff	btemp+11,postinc1
  9806  0199BE  0E00               	movlw	0
  9807  0199C0  6EE6               	movwf	postinc1,c
  9808  0199C2  0E00               	movlw	0
  9809  0199C4  6EE6               	movwf	postinc1,c
  9810  0199C6  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9811                           
  9812                           ; BSR set to: 59
  9813                           ;mconfig.c: 97:  wait_lcd_done();
  9814  0199CA  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9818                           ;stkvar	_vterm @ sp[(0)+-1]
  9819  0199CE  0EFF               	movlw	-1
  9820  0199D0  50E3               	movf	plusw1,w,c
  9821  0199D2  0D78               	mullw	120
  9822  0199D4  0E26               	movlw	low _D
  9823  0199D6  6E0B               	movwf	(btemp+10)^0,c
  9824  0199D8  0E08               	movlw	high _D
  9825  0199DA  6E0C               	movwf	(btemp+11)^0,c
  9826  0199DC  0E28               	movlw	40
  9827  0199DE  260B               	addwf	(btemp+10)^0,f,c
  9828  0199E0  0E00               	movlw	0
  9829  0199E2  220C               	addwfc	(btemp+11)^0,f,c
  9830  0199E4  50F3               	movf	243,w,c
  9831  0199E6  260B               	addwf	(btemp+10)^0,f,c
  9832  0199E8  50F4               	movf	244,w,c
  9833  0199EA  220C               	addwfc	(btemp+11)^0,f,c
  9834  0199EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9835  0199F2  0060  F033  FFE6   	movff	btemp+11,postinc1
  9836  0199F8  0E00               	movlw	0
  9837  0199FA  6EE6               	movwf	postinc1,c
  9838  0199FC  0E01               	movlw	1
  9839  0199FE  6EE6               	movwf	postinc1,c
  9840  019A00  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9841                           
  9842                           ; BSR set to: 59
  9843                           ;mconfig.c: 99:  wait_lcd_done();
  9844  019A04  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9848                           ;stkvar	_vterm @ sp[(0)+-1]
  9849  019A08  0EFF               	movlw	-1
  9850  019A0A  50E3               	movf	plusw1,w,c
  9851  019A0C  0D78               	mullw	120
  9852  019A0E  0E26               	movlw	low _D
  9853  019A10  6E0B               	movwf	(btemp+10)^0,c
  9854  019A12  0E08               	movlw	high _D
  9855  019A14  6E0C               	movwf	(btemp+11)^0,c
  9856  019A16  0E50               	movlw	80
  9857  019A18  260B               	addwf	(btemp+10)^0,f,c
  9858  019A1A  0E00               	movlw	0
  9859  019A1C  220C               	addwfc	(btemp+11)^0,f,c
  9860  019A1E  50F3               	movf	243,w,c
  9861  019A20  260B               	addwf	(btemp+10)^0,f,c
  9862  019A22  50F4               	movf	244,w,c
  9863  019A24  220C               	addwfc	(btemp+11)^0,f,c
  9864  019A26  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9865  019A2C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9866  019A32  0E00               	movlw	0
  9867  019A34  6EE6               	movwf	postinc1,c
  9868  019A36  0E02               	movlw	2
  9869  019A38  6EE6               	movwf	postinc1,c
  9870  019A3A  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9871  019A3E                     l1682:
  9872                           
  9873                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9874  019A3E  52E5               	movf	postdec1,f,c
  9875  019A40  0012               	return		;funcret
  9876  019A42                     __end_of_update_lcd:
  9877                           	opt callstack 0
  9878                           
  9879 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9880 ;; Defined at:
  9881 ;;		line 278 in file "eadog.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  r               1  [STACK] const unsigned char 
  9884 ;;  c               1  [STACK] const unsigned char 
  9885 ;;  strPtr          2  [STACK] PTR unsigned char 
  9886 ;;		 -> D.lcd(480), D(482), V(191), 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1  [STACK] void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9893 ;; Tracked objects:
  9894 ;;		On entry : 3F/0
  9895 ;;		On exit  : 3F/3B
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:   25
  9905 ;; This function calls:
  9906 ;;		_eaDogM_WriteString
  9907 ;;		_send_lcd_cmd_dma
  9908 ;; This function is called by:
  9909 ;;		_update_lcd
  9910 ;;		_vterm_dump
  9911 ;; This function uses a reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text34
  9915  01B53A                     __ptext34:
  9916                           	opt callstack 0
  9917  01B53A                     _eaDogM_WriteStringAtPos:
  9918                           	opt callstack 4
  9919                           
  9920                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9921                           ;stkvar	_c @ sp[(0)+-2]
  9922                           
  9923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9924                           ;incstack = 0
  9925  01B53A  0EFE               	movlw	-2
  9926  01B53C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9927                           
  9928                           ;stkvar	_r @ sp[(0)+-1]
  9929  01B542  0EFF               	movlw	-1
  9930  01B544  50E3               	movf	plusw1,w,c
  9931  01B546  0D10               	mullw	16
  9932  01B548  50F3               	movf	243,w,c
  9933  01B54A  240C               	addwf	(btemp+11)^0,w,c
  9934  01B54C  0F80               	addlw	128
  9935  01B54E  6EE6               	movwf	postinc1,c
  9936  01B550  EC8E  F0D7         	call	_send_lcd_cmd_dma	;wreg free
  9937                           
  9938                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9939                           ;stkvar	_strPtr @ sp[(0)+-4]
  9940  01B554  0EFC               	movlw	-4
  9941  01B556  006F FF8F FFE6     	movff	plusw1,postinc1
  9942  01B55C  006F FF8F FFE6     	movff	plusw1,postinc1
  9943  01B562  EC8D  F0D2         	call	_eaDogM_WriteString	;wreg free
  9944                           
  9945                           ; BSR set to: 59
  9946                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9947  01B566  52E5               	movf	postdec1,f,c
  9948  01B568  52E5               	movf	postdec1,f,c
  9949  01B56A  52E5               	movf	postdec1,f,c
  9950  01B56C  52E5               	movf	postdec1,f,c
  9951  01B56E  0012               	return		;funcret
  9952  01B570                     __end_of_eaDogM_WriteStringAtPos:
  9953                           	opt callstack 0
  9954                           
  9955 ;; *************** function _send_lcd_cmd_dma *****************
  9956 ;; Defined at:
  9957 ;;		line 220 in file "eadog.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  strPtr          1  [STACK] unsigned char 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;		None
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  1  [STACK] void 
  9964 ;; Registers used:
  9965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/3D
  9968 ;;		On exit  : 3F/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9975 ;;Total ram usage:        0 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:   24
  9978 ;; This function calls:
  9979 ;;		_printf
  9980 ;;		_ringBufS_flush
  9981 ;;		_start_lcd
  9982 ;;		_wait_lcd_done
  9983 ;;		_wait_lcd_set
  9984 ;; This function is called by:
  9985 ;;		_eaDogM_WriteCommand
  9986 ;;		_eaDogM_WriteStringAtPos
  9987 ;; This function uses a reentrant model
  9988 ;;
  9989                           
  9990                           	psect	text35
  9991  01AF1C                     __ptext35:
  9992                           	opt callstack 0
  9993  01AF1C                     _send_lcd_cmd_dma:
  9994                           	opt callstack 4
  9995                           
  9996                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9997                           
  9998                           ; BSR set to: 59
  9999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10000                           ;incstack = 0
 10001  01AF1C  ECEE  F0DE         	call	_wait_lcd_set	;wreg free
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
 10005  01AF20  0E00               	movlw	0
 10006  01AF22  6EE6               	movwf	postinc1,c
 10007  01AF24  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10008  01AF2A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10009  01AF30  ECC7  F0D3         	call	_ringBufS_flush	;wreg free
 10010  01AF34  92BC               	bcf	188,1,c	;volatile
 10011  01AF36  94BC               	bcf	188,2,c	;volatile
 10012                           
 10013                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
 10014  01AF38  013B               	movlb	59	; () banked
 10015  01AF3A  9FFC               	bcf	252,7,b	;volatile
 10016                           
 10017                           ; BSR set to: 59
 10018                           ;eadog.c: 229:  DMA1SSZ = 1;
 10019  01AF3C  0E00               	movlw	0
 10020  01AF3E  6FF8               	movwf	248,b	;volatile
 10021  01AF40  0E01               	movlw	1
 10022  01AF42  6FF7               	movwf	247,b	;volatile
 10023                           
 10024                           ; BSR set to: 59
 10025                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
 10026  01AF44  8FFC               	bsf	252,7,b	;volatile
 10027                           
 10028                           ; BSR set to: 59
 10029                           ;eadog.c: 231:  printf("%c", strPtr);
 10030                           ;stkvar	_strPtr @ sp[(0)+-1]
 10031  01AF46  0EFF               	movlw	-1
 10032  01AF48  50E3               	movf	plusw1,w,c
 10033  01AF4A  6EE6               	movwf	postinc1,c
 10034  01AF4C  0E00               	movlw	0
 10035  01AF4E  6EE6               	movwf	postinc1,c
 10036  01AF50  0EF8               	movlw	low STR_44
 10037  01AF52  6EE6               	movwf	postinc1,c
 10038  01AF54  0EFF               	movlw	high STR_44
 10039  01AF56  6EE6               	movwf	postinc1,c
 10040  01AF58  0E04               	movlw	4
 10041  01AF5A  6EE6               	movwf	postinc1,c
 10042  01AF5C  ECA2  F0D6         	call	_printf	;wreg free
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;eadog.c: 232:  start_lcd();
 10046  01AF60  ECF1  F0DE         	call	_start_lcd	;wreg free
 10047                           
 10048                           ; BSR set to: 59
 10049                           ;eadog.c: 233:  wait_lcd_done();
 10050  01AF64  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
 10051                           
 10052                           ; BSR set to: 0
 10053  01AF68  82BC               	bsf	188,1,c	;volatile
 10054                           
 10055                           ; BSR set to: 0
 10056                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10057  01AF6A  52E5               	movf	postdec1,f,c
 10058  01AF6C  0012               	return		;funcret
 10059  01AF6E                     __end_of_send_lcd_cmd_dma:
 10060                           	opt callstack 0
 10061                           
 10062 ;; *************** function _wait_lcd_done *****************
 10063 ;; Defined at:
 10064 ;;		line 156 in file "eadog.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1  [STACK] void 
 10071 ;; Registers used:
 10072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 3F/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:   16
 10085 ;; This function calls:
 10086 ;;		_wdtdelay
 10087 ;; This function is called by:
 10088 ;;		_send_lcd_cmd_dma
 10089 ;;		_update_lcd
 10090 ;;		_vterm_dump
 10091 ;; This function uses a reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text36
 10095  01BBF4                     __ptext36:
 10096                           	opt callstack 0
 10097  01BBF4                     _wait_lcd_done:
 10098                           	opt callstack 13
 10099                           
 10100                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
 10101                           
 10102                           ; BSR set to: 0
 10103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10104                           ;incstack = 0
 10105  01BBF4  0100               	movlb	0	; () banked
 10106  01BBF6  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10107  01BBF8  D7FD               	goto	_wait_lcd_done
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;eadog.c: 159:  wdtdelay(50);
 10111  01BBFA  0E32               	movlw	50
 10112  01BBFC  6EE6               	movwf	postinc1,c
 10113  01BBFE  0E00               	movlw	0
 10114  01BC00  6EE6               	movwf	postinc1,c
 10115  01BC02  0E00               	movlw	0
 10116  01BC04  6EE6               	movwf	postinc1,c
 10117  01BC06  0E00               	movlw	0
 10118  01BC08  6EE6               	movwf	postinc1,c
 10119  01BC0A  EC34  F0D7         	call	_wdtdelay	;wreg free
 10120                           
 10121                           ; BSR set to: 0
 10122                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10123  01BC0E  0012               	return		;funcret
 10124  01BC10                     __end_of_wait_lcd_done:
 10125                           	opt callstack 0
 10126                           
 10127 ;; *************** function _wdtdelay *****************
 10128 ;; Defined at:
 10129 ;;		line 23 in file "eadog.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  delay           4  [STACK] const unsigned long 
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1  [STACK] void 
 10136 ;; Registers used:
 10137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 3F/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10147 ;;Total ram usage:        0 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:   15
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_init_display
 10154 ;;		_send_lcd_cmd
 10155 ;;		_send_lcd_cmd_long
 10156 ;;		_wait_lcd_done
 10157 ;; This function uses a reentrant model
 10158 ;;
 10159                           
 10160                           	psect	text37
 10161  01AE68                     __ptext37:
 10162                           	opt callstack 0
 10163  01AE68                     _wdtdelay:
 10164                           	opt callstack 13
 10165                           
 10166                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10167                           
 10168                           ; BSR set to: 0
 10169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10170                           ;incstack = 0
 10171  01AE68  0100               	movlb	0	; () banked
 10172  01AE6A  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10173  01AE6C  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10174  01AE6E  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10175  01AE70  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10176  01AE72                     l1447:
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;eadog.c: 28:   __nop();
 10180  01AE72  F000               	nop	
 10181  01AE74  0004               	clrwdt		;# 
 10182                           
 10183                           ;eadog.c: 30:  };
 10184  01AE76  0E01               	movlw	1
 10185  01AE78  0100               	movlb	0	; () banked
 10186  01AE7A  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10187  01AE7C  0E00               	movlw	0
 10188  01AE7E  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10189  01AE80  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10190  01AE82  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;stkvar	_delay @ sp[(0)+-4]
 10194  01AE84  0EFC               	movlw	-4
 10195  01AE86  006F FF8C  F001    	movff	plusw1,btemp
 10196  01AE8C  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10197  01AE8E  5C01               	subwf	btemp^0,w,c
 10198  01AE90  0EFD               	movlw	-3
 10199  01AE92  006F FF8C  F001    	movff	plusw1,btemp
 10200  01AE98  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10201  01AE9A  5801               	subwfb	btemp^0,w,c
 10202  01AE9C  0EFE               	movlw	-2
 10203  01AE9E  006F FF8C  F001    	movff	plusw1,btemp
 10204  01AEA4  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10205  01AEA6  5801               	subwfb	btemp^0,w,c
 10206  01AEA8  0EFF               	movlw	-1
 10207  01AEAA  006F FF8C  F001    	movff	plusw1,btemp
 10208  01AEB0  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10209  01AEB2  5801               	subwfb	btemp^0,w,c
 10210  01AEB4  B0D8               	btfsc	status,0,c
 10211  01AEB6  D7DD               	goto	l1447
 10212                           
 10213                           ; BSR set to: 0
 10214                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10215  01AEB8  52E5               	movf	postdec1,f,c
 10216  01AEBA  52E5               	movf	postdec1,f,c
 10217  01AEBC  52E5               	movf	postdec1,f,c
 10218  01AEBE  52E5               	movf	postdec1,f,c
 10219  01AEC0  0012               	return		;funcret
 10220  01AEC2                     __end_of_wdtdelay:
 10221                           	opt callstack 0
 10222                           
 10223 ;; *************** function _eaDogM_WriteString *****************
 10224 ;; Defined at:
 10225 ;;		line 199 in file "eadog.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  strPtr          2  [STACK] PTR unsigned char 
 10228 ;;		 -> D.lcd(480), D(482), V(191), 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;		None
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1  [STACK] void 
 10233 ;; Registers used:
 10234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10235 ;; Tracked objects:
 10236 ;;		On entry : 3F/0
 10237 ;;		On exit  : 3F/3B
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10244 ;;Total ram usage:        0 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:   24
 10247 ;; This function calls:
 10248 ;;		_printf
 10249 ;;		_ringBufS_flush
 10250 ;;		_start_lcd
 10251 ;;		_strlen
 10252 ;;		_wait_lcd_set
 10253 ;; This function is called by:
 10254 ;;		_eaDogM_WriteStringAtPos
 10255 ;; This function uses a reentrant model
 10256 ;;
 10257                           
 10258                           	psect	text38
 10259  01A51A                     __ptext38:
 10260                           	opt callstack 0
 10261  01A51A                     _eaDogM_WriteString:
 10262                           	opt callstack 4
 10263                           
 10264                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10265                           
 10266                           ; BSR set to: 0
 10267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10268                           ;incstack = 0
 10269  01A51A  ECEE  F0DE         	call	_wait_lcd_set	;wreg free
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10273  01A51E  0E00               	movlw	0
 10274  01A520  6EE6               	movwf	postinc1,c
 10275  01A522  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10276  01A528  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10277  01A52E  ECC7  F0D3         	call	_ringBufS_flush	;wreg free
 10278  01A532  94BC               	bcf	188,2,c	;volatile
 10279                           
 10280                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10281                           ;stkvar	_strPtr @ sp[(0)+-2]
 10282  01A534  0EFE               	movlw	-2
 10283  01A536  006F FF8F FFE6     	movff	plusw1,postinc1
 10284  01A53C  006F FF8F FFE6     	movff	plusw1,postinc1
 10285  01A542  ECE0  F0D2         	call	_strlen	;wreg free
 10286  01A546  5002               	movf	(btemp+1)^0,w,c
 10287  01A548  E104               	bnz	u12200
 10288  01A54A  0E41               	movlw	65
 10289  01A54C  5C01               	subwf	btemp^0,w,c
 10290  01A54E  A0D8               	btfss	status,0,c
 10291  01A550  D010               	goto	l12531
 10292  01A552                     u12200:
 10293                           
 10294                           ;stkvar	_strPtr @ sp[(0)+-2]
 10295  01A552  0EFE               	movlw	-2
 10296  01A554  006F FF8C  F00B    	movff	plusw1,btemp+10
 10297  01A55A  0EFF               	movlw	-1
 10298  01A55C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10299  01A562  0E40               	movlw	64
 10300  01A564  240B               	addwf	(btemp+10)^0,w,c
 10301  01A566  6ED9               	movwf	fsr2l,c
 10302  01A568  0E00               	movlw	0
 10303  01A56A  200C               	addwfc	(btemp+11)^0,w,c
 10304  01A56C  6EDA               	movwf	fsr2h,c
 10305  01A56E  0E00               	movlw	0
 10306  01A570  6EDF               	movwf	indf2,c
 10307  01A572                     l12531:
 10308                           
 10309                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10310  01A572  013B               	movlb	59	; () banked
 10311  01A574  9FFC               	bcf	252,7,b	;volatile
 10312                           
 10313                           ; BSR set to: 59
 10314                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10315                           ;stkvar	_strPtr @ sp[(0)+-2]
 10316  01A576  0EFE               	movlw	-2
 10317  01A578  006F FF8F FFE6     	movff	plusw1,postinc1
 10318  01A57E  006F FF8F FFE6     	movff	plusw1,postinc1
 10319  01A584  ECE0  F0D2         	call	_strlen	;wreg free
 10320  01A588  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10321  01A58E  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10322                           
 10323                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10324  01A594  013B               	movlb	59	; () banked
 10325  01A596  8FFC               	bsf	252,7,b	;volatile
 10326                           
 10327                           ; BSR set to: 59
 10328                           ;eadog.c: 210:  printf("%s", strPtr);
 10329                           ;stkvar	_strPtr @ sp[(0)+-2]
 10330  01A598  0EFE               	movlw	-2
 10331  01A59A  006F FF8F FFE6     	movff	plusw1,postinc1
 10332  01A5A0  006F FF8F FFE6     	movff	plusw1,postinc1
 10333  01A5A6  0EFB               	movlw	low STR_43
 10334  01A5A8  6EE6               	movwf	postinc1,c
 10335  01A5AA  0EFF               	movlw	high STR_43
 10336  01A5AC  6EE6               	movwf	postinc1,c
 10337  01A5AE  0E04               	movlw	4
 10338  01A5B0  6EE6               	movwf	postinc1,c
 10339  01A5B2  ECA2  F0D6         	call	_printf	;wreg free
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;eadog.c: 211:  start_lcd();
 10343  01A5B6  ECF1  F0DE         	call	_start_lcd	;wreg free
 10344                           
 10345                           ; BSR set to: 59
 10346                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10347  01A5BA  52E5               	movf	postdec1,f,c
 10348  01A5BC  52E5               	movf	postdec1,f,c
 10349  01A5BE  0012               	return		;funcret
 10350  01A5C0                     __end_of_eaDogM_WriteString:
 10351                           	opt callstack 0
 10352                           
 10353 ;; *************** function _wait_lcd_set *****************
 10354 ;; Defined at:
 10355 ;;		line 146 in file "eadog.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;		None
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;		None
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1  [STACK] void 
 10362 ;; Registers used:
 10363 ;;		None
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/3D
 10366 ;;		On exit  : 3F/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10373 ;;Total ram usage:        0 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:   15
 10376 ;; This function calls:
 10377 ;;		Nothing
 10378 ;; This function is called by:
 10379 ;;		_eaDogM_WriteString
 10380 ;;		_send_lcd_cmd_dma
 10381 ;; This function uses a reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text39
 10385  01BDDC                     __ptext39:
 10386                           	opt callstack 0
 10387  01BDDC                     _wait_lcd_set:
 10388                           	opt callstack 12
 10389                           
 10390                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10391                           
 10392                           ; BSR set to: 59
 10393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10394                           ;incstack = 0
 10395  01BDDC  0100               	movlb	0	; () banked
 10396  01BDDE  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10397                           
 10398                           ; BSR set to: 0
 10399                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10400  01BDE0  0012               	return		;funcret
 10401  01BDE2                     __end_of_wait_lcd_set:
 10402                           	opt callstack 0
 10403                           
 10404 ;; *************** function _start_lcd *****************
 10405 ;; Defined at:
 10406 ;;		line 141 in file "eadog.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1  [STACK] void 
 10413 ;; Registers used:
 10414 ;;		None
 10415 ;; Tracked objects:
 10416 ;;		On entry : 3F/0
 10417 ;;		On exit  : 3F/3B
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10424 ;;Total ram usage:        0 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:   15
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_eaDogM_WriteString
 10431 ;;		_send_lcd_cmd_dma
 10432 ;; This function uses a reentrant model
 10433 ;;
 10434                           
 10435                           	psect	text40
 10436  01BDE2                     __ptext40:
 10437                           	opt callstack 0
 10438  01BDE2                     _start_lcd:
 10439                           	opt callstack 12
 10440                           
 10441                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10442                           
 10443                           ; BSR set to: 0
 10444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10445                           ;incstack = 0
 10446  01BDE2  013B               	movlb	59	; () banked
 10447  01BDE4  8DFC               	bsf	252,6,b	;volatile
 10448                           
 10449                           ; BSR set to: 59
 10450                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10451  01BDE6  0012               	return		;funcret
 10452  01BDE8                     __end_of_start_lcd:
 10453                           	opt callstack 0
 10454                           
 10455 ;; *************** function _ringBufS_flush *****************
 10456 ;; Defined at:
 10457 ;;		line 76 in file "ringbufs.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10460 ;;		 -> ring_buf1(67), 
 10461 ;;  clearBuffer     1  [STACK] const char 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;		None
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1  [STACK] void 
 10466 ;; Registers used:
 10467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10468 ;; Tracked objects:
 10469 ;;		On entry : 3F/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10477 ;;Total ram usage:        0 bytes
 10478 ;; Hardware stack levels used:    1
 10479 ;; Hardware stack levels required when called:   16
 10480 ;; This function calls:
 10481 ;;		_memset
 10482 ;; This function is called by:
 10483 ;;		_eaDogM_WriteString
 10484 ;;		_send_lcd_cmd_dma
 10485 ;; This function uses a reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text41
 10489  01A78E                     __ptext41:
 10490                           	opt callstack 0
 10491  01A78E                     _ringBufS_flush:
 10492                           	opt callstack 11
 10493                           
 10494                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10495                           ;stkvar	__this @ sp[(0)+-2]
 10496                           
 10497                           ; BSR set to: 59
 10498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10499                           ;incstack = 0
 10500  01A78E  0EFE               	movlw	-2
 10501  01A790  006F FF8C  F00B    	movff	plusw1,btemp+10
 10502  01A796  0EFF               	movlw	-1
 10503  01A798  006F FF8C  F00C    	movff	plusw1,btemp+11
 10504  01A79E  0E42               	movlw	66
 10505  01A7A0  240B               	addwf	(btemp+10)^0,w,c
 10506  01A7A2  6ED9               	movwf	fsr2l,c
 10507  01A7A4  0E00               	movlw	0
 10508  01A7A6  200C               	addwfc	(btemp+11)^0,w,c
 10509  01A7A8  6EDA               	movwf	fsr2h,c
 10510  01A7AA  0E00               	movlw	0
 10511  01A7AC  6EDF               	movwf	indf2,c
 10512                           
 10513                           ;ringbufs.c: 79:  _this->head = 0;
 10514                           ;stkvar	__this @ sp[(0)+-2]
 10515  01A7AE  0EFE               	movlw	-2
 10516  01A7B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10517  01A7B6  0EFF               	movlw	-1
 10518  01A7B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10519  01A7BE  0E40               	movlw	64
 10520  01A7C0  240B               	addwf	(btemp+10)^0,w,c
 10521  01A7C2  6ED9               	movwf	fsr2l,c
 10522  01A7C4  0E00               	movlw	0
 10523  01A7C6  200C               	addwfc	(btemp+11)^0,w,c
 10524  01A7C8  6EDA               	movwf	fsr2h,c
 10525  01A7CA  0E00               	movlw	0
 10526  01A7CC  6EDF               	movwf	indf2,c
 10527                           
 10528                           ;ringbufs.c: 80:  _this->tail = 0;
 10529                           ;stkvar	__this @ sp[(0)+-2]
 10530  01A7CE  0EFE               	movlw	-2
 10531  01A7D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10532  01A7D6  0EFF               	movlw	-1
 10533  01A7D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10534  01A7DE  0E41               	movlw	65
 10535  01A7E0  240B               	addwf	(btemp+10)^0,w,c
 10536  01A7E2  6ED9               	movwf	fsr2l,c
 10537  01A7E4  0E00               	movlw	0
 10538  01A7E6  200C               	addwfc	(btemp+11)^0,w,c
 10539  01A7E8  6EDA               	movwf	fsr2h,c
 10540  01A7EA  0E00               	movlw	0
 10541  01A7EC  6EDF               	movwf	indf2,c
 10542                           
 10543                           ;ringbufs.c: 81:  if (clearBuffer) {
 10544                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10545  01A7EE  0EFD               	movlw	-3
 10546  01A7F0  50E3               	movf	plusw1,w,c
 10547  01A7F2  B4D8               	btfsc	status,2,c
 10548  01A7F4  D011               	goto	l1591
 10549                           
 10550                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10551  01A7F6  0E40               	movlw	64
 10552  01A7F8  6EE6               	movwf	postinc1,c
 10553  01A7FA  0E00               	movlw	0
 10554  01A7FC  6EE6               	movwf	postinc1,c
 10555  01A7FE  0E00               	movlw	0
 10556  01A800  6EE6               	movwf	postinc1,c
 10557  01A802  0E00               	movlw	0
 10558  01A804  6EE6               	movwf	postinc1,c
 10559                           
 10560                           ;stkvar	__this @ sp[(-4)+-2]
 10561  01A806  0EFA               	movlw	-6
 10562  01A808  006F FF8F FFE6     	movff	plusw1,postinc1
 10563  01A80E  006F FF8F FFE6     	movff	plusw1,postinc1
 10564  01A814  ECC5  F0B5         	call	_memset	;wreg free
 10565  01A818                     l1591:
 10566                           
 10567                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10568  01A818  52E5               	movf	postdec1,f,c
 10569  01A81A  52E5               	movf	postdec1,f,c
 10570  01A81C  52E5               	movf	postdec1,f,c
 10571  01A81E  0012               	return		;funcret
 10572  01A820                     __end_of_ringBufS_flush:
 10573                           	opt callstack 0
 10574                           
 10575 ;; *************** function _memset *****************
 10576 ;; Defined at:
 10577 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  dest            2  [STACK] PTR void 
 10580 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10581 ;;  c               2  [STACK] int 
 10582 ;;  n               2  [STACK] unsigned int 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  s               2  [STACK] PTR unsigned char 
 10585 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10586 ;;  k               2  [STACK] unsigned int 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  2  [STACK] PTR void 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;Total ram usage:        0 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:   15
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_ringBufS_init
 10607 ;;		_ringBufS_flush
 10608 ;; This function uses a reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text42
 10612  016B8A                     __ptext42:
 10613                           	opt callstack 0
 10614  016B8A                     _memset:
 10615                           	opt callstack 0
 10616                           
 10617                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10618  016B8A  52E6               	movf	postinc1,f,c
 10619  016B8C  52E6               	movf	postinc1,f,c
 10620  016B8E  52E6               	movf	postinc1,f,c
 10621  016B90  52E6               	movf	postinc1,f,c
 10622                           
 10623                           ;stkvar	_dest @ sp[(-4)+-2]
 10624                           
 10625                           ;incstack = 0
 10626  016B92  0EFA               	movlw	-6
 10627  016B94  006F FF8C  F00B    	movff	plusw1,btemp+10
 10628  016B9A  0EFB               	movlw	-5
 10629  016B9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10630                           
 10631                           ;stkvar	_s @ sp[(-4)+0]
 10632  016BA2  0EFD               	movlw	-3
 10633  016BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10634  016BAA  0EFC               	movlw	-4
 10635  016BAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10636                           
 10637                           ;stkvar	_n @ sp[(-4)+-6]
 10638  016BB2  0EF6               	movlw	-10
 10639  016BB4  006F FF8C  F001    	movff	plusw1,btemp
 10640  016BBA  0EF7               	movlw	-9
 10641  016BBC  50E3               	movf	plusw1,w,c
 10642  016BBE  1001               	iorwf	btemp^0,w,c
 10643  016BC0  B4D8               	btfsc	status,2,c
 10644  016BC2  D154               	goto	u10810
 10645                           
 10646                           ;stkvar	_c @ sp[(-4)+-4]
 10647                           ;stkvar	_s @ sp[(-4)+0]
 10648  016BC4  0EFC               	movlw	-4
 10649  016BC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10650  016BCC  0EFD               	movlw	-3
 10651  016BCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10652  016BD4  0EF8               	movlw	-8
 10653  016BD6  006F FF8F FFDF     	movff	plusw1,indf2
 10654                           
 10655                           ;stkvar	_c @ sp[(-4)+-4]
 10656                           ;stkvar	_n @ sp[(-4)+-6]
 10657                           ;stkvar	_s @ sp[(-4)+0]
 10658  016BDC  0EFC               	movlw	-4
 10659  016BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10660  016BE4  0EFD               	movlw	-3
 10661  016BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10662  016BEC  0EF6               	movlw	-10
 10663  016BEE  50E3               	movf	plusw1,w,c
 10664  016BF0  260B               	addwf	(btemp+10)^0,f,c
 10665  016BF2  0EF7               	movlw	-9
 10666  016BF4  50E3               	movf	plusw1,w,c
 10667  016BF6  220C               	addwfc	(btemp+11)^0,f,c
 10668  016BF8  0EFF               	movlw	255
 10669  016BFA  240B               	addwf	(btemp+10)^0,w,c
 10670  016BFC  6ED9               	movwf	fsr2l,c
 10671  016BFE  0EFF               	movlw	255
 10672  016C00  200C               	addwfc	(btemp+11)^0,w,c
 10673  016C02  6EDA               	movwf	fsr2h,c
 10674  016C04  0EF8               	movlw	-8
 10675  016C06  006F FF8F FFDF     	movff	plusw1,indf2
 10676                           
 10677                           ;stkvar	_n @ sp[(-4)+-6]
 10678  016C0C  0EF7               	movlw	-9
 10679  016C0E  50E3               	movf	plusw1,w,c
 10680  016C10  E108               	bnz	l11703
 10681  016C12  0EF6               	movlw	-10
 10682  016C14  006F FF8C  F001    	movff	plusw1,btemp
 10683  016C1A  0E03               	movlw	3
 10684  016C1C  5E01               	subwf	btemp^0,f,c
 10685  016C1E  A0D8               	btfss	status,0,c
 10686  016C20  D125               	goto	u10810
 10687  016C22                     l11703:
 10688                           
 10689                           ;stkvar	_c @ sp[(-4)+-4]
 10690                           ;stkvar	_s @ sp[(-4)+0]
 10691  016C22  0EFC               	movlw	-4
 10692  016C24  006F FF8C  F00B    	movff	plusw1,btemp+10
 10693  016C2A  0EFD               	movlw	-3
 10694  016C2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10695  016C32  0E01               	movlw	1
 10696  016C34  240B               	addwf	(btemp+10)^0,w,c
 10697  016C36  6ED9               	movwf	fsr2l,c
 10698  016C38  0E00               	movlw	0
 10699  016C3A  200C               	addwfc	(btemp+11)^0,w,c
 10700  016C3C  6EDA               	movwf	fsr2h,c
 10701  016C3E  0EF8               	movlw	-8
 10702  016C40  006F FF8F FFDF     	movff	plusw1,indf2
 10703                           
 10704                           ;stkvar	_c @ sp[(-4)+-4]
 10705                           ;stkvar	_s @ sp[(-4)+0]
 10706  016C46  0EFC               	movlw	-4
 10707  016C48  006F FF8C  F00B    	movff	plusw1,btemp+10
 10708  016C4E  0EFD               	movlw	-3
 10709  016C50  006F FF8C  F00C    	movff	plusw1,btemp+11
 10710  016C56  0E02               	movlw	2
 10711  016C58  240B               	addwf	(btemp+10)^0,w,c
 10712  016C5A  6ED9               	movwf	fsr2l,c
 10713  016C5C  0E00               	movlw	0
 10714  016C5E  200C               	addwfc	(btemp+11)^0,w,c
 10715  016C60  6EDA               	movwf	fsr2h,c
 10716  016C62  0EF8               	movlw	-8
 10717  016C64  006F FF8F FFDF     	movff	plusw1,indf2
 10718                           
 10719                           ;stkvar	_c @ sp[(-4)+-4]
 10720                           ;stkvar	_n @ sp[(-4)+-6]
 10721                           ;stkvar	_s @ sp[(-4)+0]
 10722  016C6A  0EFC               	movlw	-4
 10723  016C6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10724  016C72  0EFD               	movlw	-3
 10725  016C74  006F FF8C  F00C    	movff	plusw1,btemp+11
 10726  016C7A  0EF6               	movlw	-10
 10727  016C7C  50E3               	movf	plusw1,w,c
 10728  016C7E  260B               	addwf	(btemp+10)^0,f,c
 10729  016C80  0EF7               	movlw	-9
 10730  016C82  50E3               	movf	plusw1,w,c
 10731  016C84  220C               	addwfc	(btemp+11)^0,f,c
 10732  016C86  0EFE               	movlw	254
 10733  016C88  240B               	addwf	(btemp+10)^0,w,c
 10734  016C8A  6ED9               	movwf	fsr2l,c
 10735  016C8C  0EFF               	movlw	255
 10736  016C8E  200C               	addwfc	(btemp+11)^0,w,c
 10737  016C90  6EDA               	movwf	fsr2h,c
 10738  016C92  0EF8               	movlw	-8
 10739  016C94  006F FF8F FFDF     	movff	plusw1,indf2
 10740                           
 10741                           ;stkvar	_c @ sp[(-4)+-4]
 10742                           ;stkvar	_n @ sp[(-4)+-6]
 10743                           ;stkvar	_s @ sp[(-4)+0]
 10744  016C9A  0EFC               	movlw	-4
 10745  016C9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10746  016CA2  0EFD               	movlw	-3
 10747  016CA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10748  016CAA  0EF6               	movlw	-10
 10749  016CAC  50E3               	movf	plusw1,w,c
 10750  016CAE  260B               	addwf	(btemp+10)^0,f,c
 10751  016CB0  0EF7               	movlw	-9
 10752  016CB2  50E3               	movf	plusw1,w,c
 10753  016CB4  220C               	addwfc	(btemp+11)^0,f,c
 10754  016CB6  0EFD               	movlw	253
 10755  016CB8  240B               	addwf	(btemp+10)^0,w,c
 10756  016CBA  6ED9               	movwf	fsr2l,c
 10757  016CBC  0EFF               	movlw	255
 10758  016CBE  200C               	addwfc	(btemp+11)^0,w,c
 10759  016CC0  6EDA               	movwf	fsr2h,c
 10760  016CC2  0EF8               	movlw	-8
 10761  016CC4  006F FF8F FFDF     	movff	plusw1,indf2
 10762                           
 10763                           ;stkvar	_n @ sp[(-4)+-6]
 10764  016CCA  0EF7               	movlw	-9
 10765  016CCC  50E3               	movf	plusw1,w,c
 10766  016CCE  E108               	bnz	l11709
 10767  016CD0  0EF6               	movlw	-10
 10768  016CD2  006F FF8C  F001    	movff	plusw1,btemp
 10769  016CD8  0E07               	movlw	7
 10770  016CDA  5E01               	subwf	btemp^0,f,c
 10771  016CDC  A0D8               	btfss	status,0,c
 10772  016CDE  D0C6               	goto	u10810
 10773  016CE0                     l11709:
 10774                           
 10775                           ;stkvar	_c @ sp[(-4)+-4]
 10776                           ;stkvar	_s @ sp[(-4)+0]
 10777  016CE0  0EFC               	movlw	-4
 10778  016CE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10779  016CE8  0EFD               	movlw	-3
 10780  016CEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10781  016CF0  0E03               	movlw	3
 10782  016CF2  240B               	addwf	(btemp+10)^0,w,c
 10783  016CF4  6ED9               	movwf	fsr2l,c
 10784  016CF6  0E00               	movlw	0
 10785  016CF8  200C               	addwfc	(btemp+11)^0,w,c
 10786  016CFA  6EDA               	movwf	fsr2h,c
 10787  016CFC  0EF8               	movlw	-8
 10788  016CFE  006F FF8F FFDF     	movff	plusw1,indf2
 10789                           
 10790                           ;stkvar	_c @ sp[(-4)+-4]
 10791                           ;stkvar	_n @ sp[(-4)+-6]
 10792                           ;stkvar	_s @ sp[(-4)+0]
 10793  016D04  0EFC               	movlw	-4
 10794  016D06  006F FF8C  F00B    	movff	plusw1,btemp+10
 10795  016D0C  0EFD               	movlw	-3
 10796  016D0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10797  016D14  0EF6               	movlw	-10
 10798  016D16  50E3               	movf	plusw1,w,c
 10799  016D18  260B               	addwf	(btemp+10)^0,f,c
 10800  016D1A  0EF7               	movlw	-9
 10801  016D1C  50E3               	movf	plusw1,w,c
 10802  016D1E  220C               	addwfc	(btemp+11)^0,f,c
 10803  016D20  0EFC               	movlw	252
 10804  016D22  240B               	addwf	(btemp+10)^0,w,c
 10805  016D24  6ED9               	movwf	fsr2l,c
 10806  016D26  0EFF               	movlw	255
 10807  016D28  200C               	addwfc	(btemp+11)^0,w,c
 10808  016D2A  6EDA               	movwf	fsr2h,c
 10809  016D2C  0EF8               	movlw	-8
 10810  016D2E  006F FF8F FFDF     	movff	plusw1,indf2
 10811                           
 10812                           ;stkvar	_n @ sp[(-4)+-6]
 10813  016D34  0EF7               	movlw	-9
 10814  016D36  50E3               	movf	plusw1,w,c
 10815  016D38  E108               	bnz	l11715
 10816  016D3A  0EF6               	movlw	-10
 10817  016D3C  006F FF8C  F001    	movff	plusw1,btemp
 10818  016D42  0E09               	movlw	9
 10819  016D44  5E01               	subwf	btemp^0,f,c
 10820  016D46  A0D8               	btfss	status,0,c
 10821  016D48  D091               	goto	u10810
 10822  016D4A                     l11715:
 10823                           
 10824                           ;stkvar	_s @ sp[(-4)+0]
 10825  016D4A  0EFC               	movlw	-4
 10826  016D4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10827  016D52  1E0B               	comf	(btemp+10)^0,f,c
 10828  016D54  0EFD               	movlw	-3
 10829  016D56  006F FF8C  F00C    	movff	plusw1,btemp+11
 10830  016D5C  1E0C               	comf	(btemp+11)^0,f,c
 10831  016D5E  2A0B               	incf	(btemp+10)^0,f,c
 10832  016D60  B4D8               	btfsc	status,2,c
 10833  016D62  2A0C               	incf	(btemp+11)^0,f,c
 10834  016D64  0E03               	movlw	3
 10835  016D66  160B               	andwf	(btemp+10)^0,f,c
 10836  016D68  0E00               	movlw	0
 10837  016D6A  160C               	andwf	(btemp+11)^0,f,c
 10838                           
 10839                           ;stkvar	_k @ sp[(-4)+2]
 10840  016D6C  0EFE               	movlw	-2
 10841  016D6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10842  016D74  0EFF               	movlw	-1
 10843  016D76  0060  F033  FFE3   	movff	btemp+11,plusw1
 10844                           
 10845                           ;stkvar	_k @ sp[(-4)+2]
 10846                           ;stkvar	_s @ sp[(-4)+0]
 10847  016D7C  0EFC               	movlw	-4
 10848  016D7E  50E3               	movf	plusw1,w,c
 10849  016D80  6E01               	movwf	btemp^0,c
 10850  016D82  0EFE               	movlw	-2
 10851  016D84  50E3               	movf	plusw1,w,c
 10852  016D86  2601               	addwf	btemp^0,f,c
 10853  016D88  0EFC               	movlw	-4
 10854  016D8A  0060  F007  FFE3   	movff	btemp,plusw1
 10855  016D90  0EFD               	movlw	-3
 10856  016D92  50E3               	movf	plusw1,w,c
 10857  016D94  6E01               	movwf	btemp^0,c
 10858  016D96  0EFF               	movlw	-1
 10859  016D98  50E3               	movf	plusw1,w,c
 10860  016D9A  2201               	addwfc	btemp^0,f,c
 10861  016D9C  0EFD               	movlw	-3
 10862  016D9E  0060  F007  FFE3   	movff	btemp,plusw1
 10863                           
 10864                           ;stkvar	_k @ sp[(-4)+2]
 10865                           ;stkvar	_n @ sp[(-4)+-6]
 10866  016DA4  0EF6               	movlw	-10
 10867  016DA6  50E3               	movf	plusw1,w,c
 10868  016DA8  6E01               	movwf	btemp^0,c
 10869  016DAA  0EFE               	movlw	-2
 10870  016DAC  50E3               	movf	plusw1,w,c
 10871  016DAE  5E01               	subwf	btemp^0,f,c
 10872  016DB0  0EF6               	movlw	-10
 10873  016DB2  0060  F007  FFE3   	movff	btemp,plusw1
 10874  016DB8  0EF7               	movlw	-9
 10875  016DBA  50E3               	movf	plusw1,w,c
 10876  016DBC  6E01               	movwf	btemp^0,c
 10877  016DBE  0EFF               	movlw	-1
 10878  016DC0  50E3               	movf	plusw1,w,c
 10879  016DC2  5A01               	subwfb	btemp^0,f,c
 10880  016DC4  0EF7               	movlw	-9
 10881  016DC6  0060  F007  FFE3   	movff	btemp,plusw1
 10882  016DCC  0EFC               	movlw	252
 10883  016DCE  6E0B               	movwf	(btemp+10)^0,c
 10884  016DD0  0EFF               	movlw	255
 10885  016DD2  6E0C               	movwf	(btemp+11)^0,c
 10886                           
 10887                           ;stkvar	_n @ sp[(-4)+-6]
 10888  016DD4  0EF6               	movlw	-10
 10889  016DD6  006F FF8C  F001    	movff	plusw1,btemp
 10890  016DDC  500B               	movf	(btemp+10)^0,w,c
 10891  016DDE  1601               	andwf	btemp^0,f,c
 10892  016DE0  0EF6               	movlw	-10
 10893  016DE2  0060  F007  FFE3   	movff	btemp,plusw1
 10894  016DE8  0EF7               	movlw	-9
 10895  016DEA  006F FF8C  F001    	movff	plusw1,btemp
 10896  016DF0  500C               	movf	(btemp+11)^0,w,c
 10897  016DF2  1601               	andwf	btemp^0,f,c
 10898  016DF4  0EF7               	movlw	-9
 10899  016DF6  D02E               	goto	L9
 10900  016DF8                     l11723:
 10901                           
 10902                           ;stkvar	_c @ sp[(-4)+-4]
 10903                           ;stkvar	_s @ sp[(-4)+0]
 10904  016DF8  0EFC               	movlw	-4
 10905  016DFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10906  016E00  0EFD               	movlw	-3
 10907  016E02  006F FF8F FFDA     	movff	plusw1,fsr2h
 10908  016E08  0EF8               	movlw	-8
 10909  016E0A  006F FF8F FFDF     	movff	plusw1,indf2
 10910                           
 10911                           ;stkvar	_n @ sp[(-4)+-6]
 10912  016E10  0EF6               	movlw	-10
 10913  016E12  006F FF8C  F001    	movff	plusw1,btemp
 10914  016E18  0E01               	movlw	1
 10915  016E1A  5E01               	subwf	btemp^0,f,c
 10916  016E1C  0EF6               	movlw	-10
 10917  016E1E  0060  F007  FFE3   	movff	btemp,plusw1
 10918  016E24  0EF7               	movlw	-9
 10919  016E26  006F FF8C  F001    	movff	plusw1,btemp
 10920  016E2C  0E00               	movlw	0
 10921  016E2E  5A01               	subwfb	btemp^0,f,c
 10922  016E30  0EF7               	movlw	-9
 10923  016E32  0060  F007  FFE3   	movff	btemp,plusw1
 10924                           
 10925                           ;stkvar	_s @ sp[(-4)+0]
 10926  016E38  0EFC               	movlw	-4
 10927  016E3A  50E3               	movf	plusw1,w,c
 10928  016E3C  0F01               	addlw	1
 10929  016E3E  6E01               	movwf	btemp^0,c
 10930  016E40  0EFC               	movlw	-4
 10931  016E42  0060  F007  FFE3   	movff	btemp,plusw1
 10932  016E48  6A01               	clrf	btemp^0,c
 10933  016E4A  0EFD               	movlw	-3
 10934  016E4C  50E3               	movf	plusw1,w,c
 10935  016E4E  2001               	addwfc	btemp^0,w,c
 10936  016E50  6E01               	movwf	btemp^0,c
 10937  016E52  0EFD               	movlw	-3
 10938  016E54                     L9:
 10939  016E54  0060  F007  FFE3   	movff	btemp,plusw1
 10940                           
 10941                           ;stkvar	_n @ sp[(-4)+-6]
 10942  016E5A  0EF6               	movlw	-10
 10943  016E5C  006F FF8C  F001    	movff	plusw1,btemp
 10944  016E62  0EF7               	movlw	-9
 10945  016E64  50E3               	movf	plusw1,w,c
 10946  016E66  1001               	iorwf	btemp^0,w,c
 10947  016E68  A4D8               	btfss	status,2,c
 10948  016E6A  D7C6               	goto	l11723
 10949  016E6C                     u10810:
 10950                           
 10951                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10952  016E6C  0EF6               	movlw	246
 10953  016E6E  26E1               	addwf	fsr1l,f,c
 10954  016E70  0EFF               	movlw	255
 10955  016E72  22E2               	addwfc	fsr1h,f,c
 10956  016E74  0012               	return		;funcret
 10957  016E76                     __end_of_memset:
 10958                           	opt callstack 0
 10959                           
 10960 ;; *************** function _printf *****************
 10961 ;; Defined at:
 10962 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;  fmt             2  [STACK] PTR const unsigned char 
 10965 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  ap              2  [STACK] PTR void [1]
 10968 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10969 ;;  ret             2    0        int 
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  2  [STACK] int 
 10972 ;; Registers used:
 10973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10974 ;; Tracked objects:
 10975 ;;		On entry : 3F/3B
 10976 ;;		On exit  : 3F/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10983 ;;Total ram usage:        0 bytes
 10984 ;; Hardware stack levels used:    1
 10985 ;; Hardware stack levels required when called:   23
 10986 ;; This function calls:
 10987 ;;		_vfprintf
 10988 ;; This function is called by:
 10989 ;;		_eaDogM_WriteString
 10990 ;;		_send_lcd_cmd_dma
 10991 ;; This function uses a reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text43
 10995  01AD44                     __ptext43:
 10996                           	opt callstack 0
 10997  01AD44                     _printf:
 10998                           	opt callstack 0
 10999                           
 11000                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11001  01AD44  52E6               	movf	postinc1,f,c
 11002  01AD46  52E6               	movf	postinc1,f,c
 11003                           
 11004                           ;stkvar	?_printf @ sp[(-2)+-3]
 11005                           
 11006                           ;incstack = 0
 11007  01AD48  0EFB               	movlw	251
 11008  01AD4A  24E1               	addwf	fsr1l,w,c
 11009  01AD4C  6E0B               	movwf	(btemp+10)^0,c
 11010  01AD4E  0EFF               	movlw	255
 11011  01AD50  20E2               	addwfc	fsr1h,w,c
 11012  01AD52  6E0C               	movwf	(btemp+11)^0,c
 11013                           
 11014                           ;stkvar	_ap @ sp[(-2)+0]
 11015  01AD54  0EFF               	movlw	-1
 11016  01AD56  0060  F033  FFE3   	movff	btemp+11,plusw1
 11017  01AD5C  0EFE               	movlw	-2
 11018  01AD5E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11019                           
 11020                           ;stkvar	_ap @ sp[(-2)+0]
 11021  01AD64  0EFE               	movlw	254
 11022  01AD66  24E1               	addwf	fsr1l,w,c
 11023  01AD68  6E01               	movwf	btemp^0,c
 11024  01AD6A  0EFF               	movlw	255
 11025  01AD6C  20E2               	addwfc	fsr1h,w,c
 11026  01AD6E  6E02               	movwf	(btemp+1)^0,c
 11027  01AD70  0060  F007  FFE6   	movff	btemp,postinc1
 11028  01AD76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11029                           
 11030                           ;stkvar	_fmt @ sp[(-4)+-3]
 11031  01AD7C  0EF9               	movlw	-7
 11032  01AD7E  006F FF8F FFE6     	movff	plusw1,postinc1
 11033  01AD84  006F FF8F FFE6     	movff	plusw1,postinc1
 11034  01AD8A  0E00               	movlw	0
 11035  01AD8C  6EE6               	movwf	postinc1,c
 11036  01AD8E  0E00               	movlw	0
 11037  01AD90  6EE6               	movwf	postinc1,c
 11038  01AD92  ECE2  F0D1         	call	_vfprintf	;wreg free
 11039                           
 11040                           ; BSR set to: 0
 11041                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11042  01AD96  52E5               	movf	postdec1,f,c
 11043  01AD98  52E5               	movf	postdec1,f,c
 11044  01AD9A  52E5               	movf	postdec1,f,c
 11045  01AD9C  50E7               	movf	indf1,w,c
 11046  01AD9E  5EE1               	subwf	fsr1l,f,c
 11047  01ADA0  0E00               	movlw	0
 11048  01ADA2  5AE2               	subwfb	fsr1h,f,c
 11049  01ADA4  0012               	return		;funcret
 11050  01ADA6                     __end_of_printf:
 11051                           	opt callstack 0
 11052                           
 11053 ;; *************** function _vfprintf *****************
 11054 ;; Defined at:
 11055 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11058 ;;		 -> f(6), NULL(0), 
 11059 ;;  fmt             2  [STACK] PTR const unsigned char 
 11060 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11061 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11062 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11063 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11064 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11065 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11066 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11067 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11068 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11069 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11070 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11071 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11072 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11073 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11074 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11075 ;;		 -> STR_1(17), 
 11076 ;;  ap              2  [STACK] PTR PTR void 
 11077 ;;		 -> ap(2), ap(2), 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  cfmt            2  [STACK] PTR unsigned char 
 11080 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11081 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11082 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11083 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11084 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11085 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11086 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11087 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11088 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11089 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11090 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11091 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11092 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11093 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11094 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11095 ;;		 -> STR_1(17), 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  2  [STACK] int 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 3F/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11109 ;;Total ram usage:        0 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:   22
 11112 ;; This function calls:
 11113 ;;		_vfpfcnvrt
 11114 ;; This function is called by:
 11115 ;;		_sprintf
 11116 ;;		_printf
 11117 ;; This function uses a reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text44
 11121  01A3C4                     __ptext44:
 11122                           	opt callstack 0
 11123  01A3C4                     _vfprintf:
 11124                           	opt callstack 0
 11125                           
 11126                           ; BSR set to: 0
 11127                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11128  01A3C4  52E6               	movf	postinc1,f,c
 11129  01A3C6  52E6               	movf	postinc1,f,c
 11130                           
 11131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11132                           ;stkvar	_fmt @ sp[(-2)+-4]
 11133                           
 11134                           ;incstack = 0
 11135 ;; hardware stack exceeded
 11136  01A3C8  0EFA               	movlw	-6
 11137  01A3CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11138  01A3D0  0EFB               	movlw	-5
 11139  01A3D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11140                           
 11141                           ;stkvar	_cfmt @ sp[(-2)+0]
 11142  01A3D8  0EFF               	movlw	-1
 11143  01A3DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11144  01A3E0  0EFE               	movlw	-2
 11145  01A3E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11146                           
 11147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11148  01A3E8  0100               	movlb	0	; () banked
 11149  01A3EA  6BC0               	clrf	_nout& (0+255),b
 11150  01A3EC  6BC1               	clrf	(_nout+1)& (0+255),b
 11151                           
 11152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11153  01A3EE  D021               	goto	l12547
 11154  01A3F0                     l12545:
 11155                           
 11156                           ; BSR set to: 0
 11157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11158                           ;stkvar	_ap @ sp[(-2)+-6]
 11159  01A3F0  0EF8               	movlw	-8
 11160  01A3F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11161  01A3F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11162                           
 11163                           ;stkvar	_cfmt @ sp[(-4)+0]
 11164  01A3FE  0EFC               	movlw	252
 11165  01A400  24E1               	addwf	fsr1l,w,c
 11166  01A402  6E01               	movwf	btemp^0,c
 11167  01A404  0EFF               	movlw	255
 11168  01A406  20E2               	addwfc	fsr1h,w,c
 11169  01A408  6E02               	movwf	(btemp+1)^0,c
 11170  01A40A  0060  F007  FFE6   	movff	btemp,postinc1
 11171  01A410  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11172                           
 11173                           ;stkvar	_fp @ sp[(-6)+-2]
 11174  01A416  0EF8               	movlw	-8
 11175  01A418  006F FF8F FFE6     	movff	plusw1,postinc1
 11176  01A41E  006F FF8F FFE6     	movff	plusw1,postinc1
 11177  01A424  ECCA  F091         	call	_vfpfcnvrt	;wreg free
 11178  01A428  5001               	movf	btemp^0,w,c
 11179  01A42A  0100               	movlb	0	; () banked
 11180  01A42C  27C0               	addwf	_nout& (0+255),f,b
 11181  01A42E  5002               	movf	(btemp+1)^0,w,c
 11182  01A430  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11183  01A432                     l12547:
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11187                           ;stkvar	_cfmt @ sp[(-2)+0]
 11188  01A432  50E1               	movf	fsr1l,w,c
 11189  01A434  0FFE               	addlw	-2
 11190  01A436  6ED9               	movwf	fsr2l,c
 11191  01A438  50E2               	movf	fsr1h,w,c
 11192  01A43A  6EDA               	movwf	fsr2h,c
 11193  01A43C  0EFF               	movlw	255
 11194  01A43E  22DA               	addwfc	fsr2h,f,c
 11195  01A440  006F FF7B FFF6     	movff	postinc2,tblptrl
 11196  01A446  006F FF77 FFF7     	movff	postdec2,tblptrh
 11197  01A44C                     	if	0	;tblptru may be non-zero
 11198  01A44C                     	endif
 11199  01A44C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11200  01A44C  0E00               	movlw	low (__mediumconst shr (0+16))
 11201  01A44E  6EF8               	movwf	tblptru,c
 11202  01A450                     	endif
 11203  01A450  0008               	tblrd		*
 11204  01A452  50F5               	movf	tablat,w,c
 11205  01A454  0900               	iorlw	0
 11206  01A456  A4D8               	btfss	status,2,c
 11207  01A458  D7CB               	goto	l12545
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11211  01A45A  0060  F300  F001   	movff	_nout,btemp
 11212  01A460  0060  F304  F002   	movff	_nout+1,btemp+1
 11213                           
 11214                           ; BSR set to: 0
 11215                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11216  01A466  0EF8               	movlw	248
 11217  01A468  26E1               	addwf	fsr1l,f,c
 11218  01A46A  0EFF               	movlw	255
 11219  01A46C  22E2               	addwfc	fsr1h,f,c
 11220  01A46E  0012               	return		;funcret
 11221  01A470                     __end_of_vfprintf:
 11222                           	opt callstack 0
 11223                           
 11224 ;; *************** function _vfpfcnvrt *****************
 11225 ;; Defined at:
 11226 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11229 ;;		 -> f(6), NULL(0), 
 11230 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11231 ;;		 -> cfmt(2), 
 11232 ;;  ap              2  [STACK] PTR PTR void 
 11233 ;;		 -> ap(2), ap(2), 
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;  llu             8  [STACK] unsigned long long 
 11236 ;;  ll              8  [STACK] long long 
 11237 ;;  f               4  [STACK] long long 
 11238 ;;  ct              3  [STACK] unsigned char [3]
 11239 ;;  vp              3    0        PTR void 
 11240 ;;  cp              2  [STACK] PTR unsigned char 
 11241 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11242 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11243 ;;		 -> V(191), 
 11244 ;;  i               2    0        int 
 11245 ;;  done            2    0        int 
 11246 ;;  c               1  [STACK] unsigned char 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  2  [STACK] int 
 11249 ;; Registers used:
 11250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11260 ;;Total ram usage:        0 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:   21
 11263 ;; This function calls:
 11264 ;;		_atoi
 11265 ;;		_ctoa
 11266 ;;		_dtoa
 11267 ;;		_efgtoa
 11268 ;;		_fputc
 11269 ;;		_isdigit
 11270 ;;		_isupper
 11271 ;;		_stoa
 11272 ;;		_strncmp
 11273 ;;		_tolower
 11274 ;;		_utoa
 11275 ;;		_xtoa
 11276 ;; This function is called by:
 11277 ;;		_vfprintf
 11278 ;; This function uses a reentrant model
 11279 ;;
 11280                           
 11281                           	psect	text45
 11282  012394                     __ptext45:
 11283                           	opt callstack 0
 11284  012394                     _vfpfcnvrt:
 11285                           	opt callstack 0
 11286                           
 11287                           ; BSR set to: 0
 11288                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11289  012394  0E20               	movlw	32
 11290  012396  26E1               	addwf	fsr1l,f,c
 11291  012398  0E00               	movlw	0
 11292  01239A  22E2               	addwfc	fsr1h,f,c
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11295                           ;stkvar	_fmt @ sp[(-32)+-4]
 11296                           
 11297                           ;incstack = 0
 11298 ;; hardware stack exceeded
 11299  01239C  0EDC               	movlw	-36
 11300  01239E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11301  0123A4  0EDD               	movlw	-35
 11302  0123A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11303  0123AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11304  0123B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11305  0123B8                     	if	0	;tblptru may be non-zero
 11306  0123B8                     	endif
 11307  0123B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11308  0123B8  0E00               	movlw	low (__mediumconst shr (0+16))
 11309  0123BA  6EF8               	movwf	tblptru,c
 11310  0123BC                     	endif
 11311  0123BC  0008               	tblrd		*
 11312  0123BE  50F5               	movf	tablat,w,c
 11313  0123C0  0A25               	xorlw	37
 11314  0123C2  A4D8               	btfss	status,2,c
 11315  0123C4  EF71  F099         	goto	l12491
 11316                           
 11317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11318                           ;stkvar	_fmt @ sp[(-32)+-4]
 11319  0123C8  0EDC               	movlw	-36
 11320  0123CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11321  0123D0  0EDD               	movlw	-35
 11322  0123D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11323  0123D8  2ADE               	incf	postinc2,f,c
 11324  0123DA  0E00               	movlw	0
 11325  0123DC  22DD               	addwfc	postdec2,f,c
 11326                           
 11327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11328  0123DE  6A3A               	clrf	_width^0,c
 11329  0123E0  6A3B               	clrf	(_width+1)^0,c
 11330  0123E2  6A3E               	clrf	_flags^0,c
 11331  0123E4  6A3F               	clrf	(_flags+1)^0,c
 11332                           
 11333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11334  0123E6  683C               	setf	_prec^0,c
 11335  0123E8  683D               	setf	(_prec+1)^0,c
 11336                           
 11337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11338                           ;stkvar	_fmt @ sp[(-32)+-4]
 11339  0123EA  0EDC               	movlw	-36
 11340  0123EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11341  0123F2  0EDD               	movlw	-35
 11342  0123F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11343  0123FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11344  012400  006F FF77 FFF7     	movff	postdec2,tblptrh
 11345  012406                     	if	0	;tblptru may be non-zero
 11346  012406                     	endif
 11347  012406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11348  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 11349  012408  6EF8               	movwf	tblptru,c
 11350  01240A                     	endif
 11351  01240A  0008               	tblrd		*
 11352  01240C  50F5               	movf	tablat,w,c
 11353  01240E  0A2A               	xorlw	42
 11354  012410  A4D8               	btfss	status,2,c
 11355  012412  D031               	goto	l12309
 11356                           
 11357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11358                           ;stkvar	_fmt @ sp[(-32)+-4]
 11359  012414  0EDC               	movlw	-36
 11360  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11361  01241C  0EDD               	movlw	-35
 11362  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11363  012424  2ADE               	incf	postinc2,f,c
 11364  012426  0E00               	movlw	0
 11365  012428  22DD               	addwfc	postdec2,f,c
 11366                           
 11367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11368                           ;stkvar	_ap @ sp[(-32)+-6]
 11369  01242A  0EDA               	movlw	-38
 11370  01242C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11371  012432  0EDB               	movlw	-37
 11372  012434  006F FF8F FFDA     	movff	plusw1,fsr2h
 11373  01243A  0E02               	movlw	2
 11374  01243C  5EDE               	subwf	postinc2,f,c
 11375  01243E  0E00               	movlw	0
 11376  012440  5ADD               	subwfb	postdec2,f,c
 11377  012442  006F FF78  F00B    	movff	postinc2,btemp+10
 11378  012448  006F FF74  F00C    	movff	postdec2,btemp+11
 11379  01244E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11380  012454  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11381  01245A  006F FF78  F03A    	movff	postinc2,_width
 11382  012460  006F FF74  F03B    	movff	postdec2,_width+1
 11383                           
 11384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11385  012466  AE3B               	btfss	(_width+1)^0,7,c
 11386  012468  D066               	goto	u11940
 11387                           
 11388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11389  01246A  803E               	bsf	_flags^0,0,c
 11390                           
 11391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11392  01246C  6C3A               	negf	_width^0,c
 11393  01246E  1E3B               	comf	(_width+1)^0,f,c
 11394  012470  B0D8               	btfsc	status,0,c
 11395  012472  2A3B               	incf	(_width+1)^0,f,c
 11396  012474  D060               	goto	u11940
 11397  012476                     l12309:
 11398                           
 11399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11400                           ;stkvar	_fmt @ sp[(-32)+-4]
 11401  012476  0EDC               	movlw	-36
 11402  012478  006F FF8F FFD9     	movff	plusw1,fsr2l
 11403  01247E  0EDD               	movlw	-35
 11404  012480  006F FF8F FFDA     	movff	plusw1,fsr2h
 11405  012486  006F FF78  F00B    	movff	postinc2,btemp+10
 11406  01248C  006F FF74  F00C    	movff	postdec2,btemp+11
 11407  012492  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11408  012498  0060  F033  FFE6   	movff	btemp+11,postinc1
 11409  01249E  EC42  F0BB         	call	_atoi	;wreg free
 11410  0124A2  0060  F004  F03A   	movff	btemp,_width
 11411  0124A8  0060  F008  F03B   	movff	btemp+1,_width+1
 11412                           
 11413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11414  0124AE  D00B               	goto	l12313
 11415  0124B0                     l12311:
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11418                           ;stkvar	_fmt @ sp[(-32)+-4]
 11419  0124B0  0EDC               	movlw	-36
 11420  0124B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11421  0124B8  0EDD               	movlw	-35
 11422  0124BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11423  0124C0  2ADE               	incf	postinc2,f,c
 11424  0124C2  0E00               	movlw	0
 11425  0124C4  22DD               	addwfc	postdec2,f,c
 11426  0124C6                     l12313:
 11427  0124C6  0ED0               	movlw	208
 11428  0124C8  6E0B               	movwf	(btemp+10)^0,c
 11429  0124CA  0EFF               	movlw	255
 11430  0124CC  6E0C               	movwf	(btemp+11)^0,c
 11431                           
 11432                           ;stkvar	_fmt @ sp[(-32)+-4]
 11433  0124CE  0EDC               	movlw	-36
 11434  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11435  0124D6  0EDD               	movlw	-35
 11436  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11437  0124DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11438  0124E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11439  0124EA                     	if	0	;tblptru may be non-zero
 11440  0124EA                     	endif
 11441  0124EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11442  0124EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11443  0124EC  6EF8               	movwf	tblptru,c
 11444  0124EE                     	endif
 11445  0124EE  0008               	tblrd		*
 11446  0124F0  50F5               	movf	tablat,w,c
 11447  0124F2  6E09               	movwf	(btemp+8)^0,c
 11448  0124F4  6A0A               	clrf	(btemp+9)^0,c
 11449  0124F6  500B               	movf	(btemp+10)^0,w,c
 11450  0124F8  2609               	addwf	(btemp+8)^0,f,c
 11451  0124FA  500C               	movf	(btemp+11)^0,w,c
 11452  0124FC  220A               	addwfc	(btemp+9)^0,f,c
 11453  0124FE  500A               	movf	(btemp+9)^0,w,c
 11454  012500  E106               	bnz	u11920
 11455  012502  0E0A               	movlw	10
 11456  012504  5C09               	subwf	(btemp+8)^0,w,c
 11457  012506  B0D8               	btfsc	status,0,c
 11458  012508  D002               	goto	u11920
 11459  01250A  0E01               	movlw	1
 11460  01250C  D001               	goto	u11930
 11461  01250E                     u11920:
 11462  01250E  0E00               	movlw	0
 11463  012510                     u11930:
 11464  012510  6E0B               	movwf	(btemp+10)^0,c
 11465  012512  6A0C               	clrf	(btemp+11)^0,c
 11466                           
 11467                           ;stkvar	_vfpfcnvrt$5547 @ sp[(-32)+4]
 11468  012514  0EE4               	movlw	-28
 11469  012516  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11470  01251C  0EE5               	movlw	-27
 11471  01251E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11472                           
 11473                           ;stkvar	_vfpfcnvrt$5547 @ sp[(-32)+4]
 11474  012524  0EE4               	movlw	-28
 11475  012526  006F FF8C  F001    	movff	plusw1,btemp
 11476  01252C  0EE5               	movlw	-27
 11477  01252E  50E3               	movf	plusw1,w,c
 11478  012530  1001               	iorwf	btemp^0,w,c
 11479  012532  A4D8               	btfss	status,2,c
 11480  012534  D7BD               	goto	l12311
 11481  012536                     u11940:
 11482                           
 11483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11484                           ;stkvar	_fmt @ sp[(-32)+-4]
 11485  012536  0EDC               	movlw	-36
 11486  012538  006F FF8F FFD9     	movff	plusw1,fsr2l
 11487  01253E  0EDD               	movlw	-35
 11488  012540  006F FF8F FFDA     	movff	plusw1,fsr2h
 11489  012546  006F FF7B FFF6     	movff	postinc2,tblptrl
 11490  01254C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11491  012552                     	if	0	;tblptru may be non-zero
 11492  012552                     	endif
 11493  012552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11494  012552  0E00               	movlw	low (__mediumconst shr (0+16))
 11495  012554  6EF8               	movwf	tblptru,c
 11496  012556                     	endif
 11497  012556  0008               	tblrd		*
 11498  012558  50F5               	movf	tablat,w,c
 11499  01255A  0A2E               	xorlw	46
 11500  01255C  A4D8               	btfss	status,2,c
 11501  01255E  D0AC               	goto	u11990
 11502                           
 11503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11504  012560  6A3C               	clrf	_prec^0,c
 11505  012562  6A3D               	clrf	(_prec+1)^0,c
 11506                           
 11507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11508                           ;stkvar	_fmt @ sp[(-32)+-4]
 11509  012564  0EDC               	movlw	-36
 11510  012566  006F FF8F FFD9     	movff	plusw1,fsr2l
 11511  01256C  0EDD               	movlw	-35
 11512  01256E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11513  012574  2ADE               	incf	postinc2,f,c
 11514  012576  0E00               	movlw	0
 11515  012578  22DD               	addwfc	postdec2,f,c
 11516                           
 11517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11518                           ;stkvar	_fmt @ sp[(-32)+-4]
 11519  01257A  0EDC               	movlw	-36
 11520  01257C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11521  012582  0EDD               	movlw	-35
 11522  012584  006F FF8F FFDA     	movff	plusw1,fsr2h
 11523  01258A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11524  012590  006F FF77 FFF7     	movff	postdec2,tblptrh
 11525  012596                     	if	0	;tblptru may be non-zero
 11526  012596                     	endif
 11527  012596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11528  012596  0E00               	movlw	low (__mediumconst shr (0+16))
 11529  012598  6EF8               	movwf	tblptru,c
 11530  01259A                     	endif
 11531  01259A  0008               	tblrd		*
 11532  01259C  50F5               	movf	tablat,w,c
 11533  01259E  0A2A               	xorlw	42
 11534  0125A0  A4D8               	btfss	status,2,c
 11535  0125A2  D02A               	goto	l12331
 11536                           
 11537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11538                           ;stkvar	_fmt @ sp[(-32)+-4]
 11539  0125A4  0EDC               	movlw	-36
 11540  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11541  0125AC  0EDD               	movlw	-35
 11542  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11543  0125B4  2ADE               	incf	postinc2,f,c
 11544  0125B6  0E00               	movlw	0
 11545  0125B8  22DD               	addwfc	postdec2,f,c
 11546                           
 11547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11548                           ;stkvar	_ap @ sp[(-32)+-6]
 11549  0125BA  0EDA               	movlw	-38
 11550  0125BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11551  0125C2  0EDB               	movlw	-37
 11552  0125C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11553  0125CA  0E02               	movlw	2
 11554  0125CC  5EDE               	subwf	postinc2,f,c
 11555  0125CE  0E00               	movlw	0
 11556  0125D0  5ADD               	subwfb	postdec2,f,c
 11557  0125D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11558  0125D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11559  0125DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11560  0125E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11561  0125EA  006F FF78  F03C    	movff	postinc2,_prec
 11562  0125F0  006F FF74  F03D    	movff	postdec2,_prec+1
 11563                           
 11564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11565  0125F6  D060               	goto	u11990
 11566  0125F8                     l12331:
 11567                           
 11568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11569                           ;stkvar	_fmt @ sp[(-32)+-4]
 11570  0125F8  0EDC               	movlw	-36
 11571  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11572  012600  0EDD               	movlw	-35
 11573  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 11574  012608  006F FF78  F00B    	movff	postinc2,btemp+10
 11575  01260E  006F FF74  F00C    	movff	postdec2,btemp+11
 11576  012614  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11577  01261A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11578  012620  EC42  F0BB         	call	_atoi	;wreg free
 11579  012624  0060  F004  F03C   	movff	btemp,_prec
 11580  01262A  0060  F008  F03D   	movff	btemp+1,_prec+1
 11581                           
 11582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11583  012630  D00B               	goto	l12335
 11584  012632                     l12333:
 11585                           
 11586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11587                           ;stkvar	_fmt @ sp[(-32)+-4]
 11588  012632  0EDC               	movlw	-36
 11589  012634  006F FF8F FFD9     	movff	plusw1,fsr2l
 11590  01263A  0EDD               	movlw	-35
 11591  01263C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11592  012642  2ADE               	incf	postinc2,f,c
 11593  012644  0E00               	movlw	0
 11594  012646  22DD               	addwfc	postdec2,f,c
 11595  012648                     l12335:
 11596  012648  0ED0               	movlw	208
 11597  01264A  6E0B               	movwf	(btemp+10)^0,c
 11598  01264C  0EFF               	movlw	255
 11599  01264E  6E0C               	movwf	(btemp+11)^0,c
 11600                           
 11601                           ;stkvar	_fmt @ sp[(-32)+-4]
 11602  012650  0EDC               	movlw	-36
 11603  012652  006F FF8F FFD9     	movff	plusw1,fsr2l
 11604  012658  0EDD               	movlw	-35
 11605  01265A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11606  012660  006F FF7B FFF6     	movff	postinc2,tblptrl
 11607  012666  006F FF77 FFF7     	movff	postdec2,tblptrh
 11608  01266C                     	if	0	;tblptru may be non-zero
 11609  01266C                     	endif
 11610  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11611  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 11612  01266E  6EF8               	movwf	tblptru,c
 11613  012670                     	endif
 11614  012670  0008               	tblrd		*
 11615  012672  50F5               	movf	tablat,w,c
 11616  012674  6E09               	movwf	(btemp+8)^0,c
 11617  012676  6A0A               	clrf	(btemp+9)^0,c
 11618  012678  500B               	movf	(btemp+10)^0,w,c
 11619  01267A  2609               	addwf	(btemp+8)^0,f,c
 11620  01267C  500C               	movf	(btemp+11)^0,w,c
 11621  01267E  220A               	addwfc	(btemp+9)^0,f,c
 11622  012680  500A               	movf	(btemp+9)^0,w,c
 11623  012682  E106               	bnz	u11970
 11624  012684  0E0A               	movlw	10
 11625  012686  5C09               	subwf	(btemp+8)^0,w,c
 11626  012688  B0D8               	btfsc	status,0,c
 11627  01268A  D002               	goto	u11970
 11628  01268C  0E01               	movlw	1
 11629  01268E  D001               	goto	u11980
 11630  012690                     u11970:
 11631  012690  0E00               	movlw	0
 11632  012692                     u11980:
 11633  012692  6E0B               	movwf	(btemp+10)^0,c
 11634  012694  6A0C               	clrf	(btemp+11)^0,c
 11635                           
 11636                           ;stkvar	_vfpfcnvrt$5548 @ sp[(-32)+0]
 11637  012696  0EE0               	movlw	-32
 11638  012698  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11639  01269E  0EE1               	movlw	-31
 11640  0126A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 11641                           
 11642                           ;stkvar	_vfpfcnvrt$5548 @ sp[(-32)+0]
 11643  0126A6  0EE0               	movlw	-32
 11644  0126A8  006F FF8C  F001    	movff	plusw1,btemp
 11645  0126AE  0EE1               	movlw	-31
 11646  0126B0  50E3               	movf	plusw1,w,c
 11647  0126B2  1001               	iorwf	btemp^0,w,c
 11648  0126B4  A4D8               	btfss	status,2,c
 11649  0126B6  D7BD               	goto	l12333
 11650  0126B8                     u11990:
 11651                           
 11652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11653                           ;stkvar	_fmt @ sp[(-32)+-4]
 11654  0126B8  0EDC               	movlw	-36
 11655  0126BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11656  0126C0  0EDD               	movlw	-35
 11657  0126C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11658  0126C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11659  0126CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11660  0126D4                     	if	0	;tblptru may be non-zero
 11661  0126D4                     	endif
 11662  0126D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11663  0126D4  0E00               	movlw	low (__mediumconst shr (0+16))
 11664  0126D6  6EF8               	movwf	tblptru,c
 11665  0126D8                     	endif
 11666  0126D8  0008               	tblrd		*
 11667  0126DA  50F5               	movf	tablat,w,c
 11668  0126DC  6EE6               	movwf	postinc1,c
 11669  0126DE  0E00               	movlw	0
 11670  0126E0  6EE6               	movwf	postinc1,c
 11671  0126E2  ECDE  F0D4         	call	_tolower	;wreg free
 11672                           
 11673                           ;stkvar	_ct @ sp[(-32)+26]
 11674  0126E6  0EFA               	movlw	-6
 11675  0126E8  0060  F007  FFE3   	movff	btemp,plusw1
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11678                           ;stkvar	_ct @ sp[(-32)+26]
 11679  0126EE  0EFA               	movlw	-6
 11680  0126F0  50E3               	movf	plusw1,w,c
 11681  0126F2  B4D8               	btfsc	status,2,c
 11682  0126F4  D05B               	goto	l12351
 11683                           
 11684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11685                           ;stkvar	_ct @ sp[(-32)+26]
 11686  0126F6  0EFB               	movlw	251
 11687  0126F8  24E1               	addwf	fsr1l,w,c
 11688  0126FA  6ED9               	movwf	fsr2l,c
 11689  0126FC  0EFF               	movlw	255
 11690  0126FE  20E2               	addwfc	fsr1h,w,c
 11691  012700  6EDA               	movwf	fsr2h,c
 11692                           
 11693                           ;stkvar	_fmt @ sp[(-32)+-4]
 11694  012702  0EDC               	movlw	-36
 11695  012704  006F FF8F FFE9     	movff	plusw1,fsr0l
 11696  01270A  0EDD               	movlw	-35
 11697  01270C  006F FF8F FFEA     	movff	plusw1,fsr0h
 11698  012712  006F FFB8  F00B    	movff	postinc0,btemp+10
 11699  012718  006F FFB4  F00C    	movff	postdec0,btemp+11
 11700  01271E  0E01               	movlw	1
 11701  012720  260B               	addwf	(btemp+10)^0,f,c
 11702  012722  0E00               	movlw	0
 11703  012724  220C               	addwfc	(btemp+11)^0,f,c
 11704  012726  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11705  01272C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11706  012732                     	if	0	;tblptru may be non-zero
 11707  012732                     	endif
 11708  012732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11709  012732  0E00               	movlw	low (__mediumconst shr (0+16))
 11710  012734  6EF8               	movwf	tblptru,c
 11711  012736                     	endif
 11712  012736  0008               	tblrd		*
 11713  012738  50F5               	movf	tablat,w,c
 11714  01273A  6EE6               	movwf	postinc1,c
 11715  01273C  0E00               	movlw	0
 11716  01273E  6EE6               	movwf	postinc1,c
 11717  012740  ECDE  F0D4         	call	_tolower	;wreg free
 11718  012744  5001               	movf	btemp^0,w,c
 11719  012746  6EDF               	movwf	indf2,c
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11722                           ;stkvar	_ct @ sp[(-32)+26]
 11723  012748  0EFB               	movlw	251
 11724  01274A  24E1               	addwf	fsr1l,w,c
 11725  01274C  6ED9               	movwf	fsr2l,c
 11726  01274E  0EFF               	movlw	255
 11727  012750  20E2               	addwfc	fsr1h,w,c
 11728  012752  6EDA               	movwf	fsr2h,c
 11729  012754  50DF               	movf	indf2,w,c
 11730  012756  B4D8               	btfsc	status,2,c
 11731  012758  D029               	goto	l12351
 11732                           
 11733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11734                           ;stkvar	_ct @ sp[(-32)+26]
 11735  01275A  0EFC               	movlw	252
 11736  01275C  24E1               	addwf	fsr1l,w,c
 11737  01275E  6ED9               	movwf	fsr2l,c
 11738  012760  0EFF               	movlw	255
 11739  012762  20E2               	addwfc	fsr1h,w,c
 11740  012764  6EDA               	movwf	fsr2h,c
 11741                           
 11742                           ;stkvar	_fmt @ sp[(-32)+-4]
 11743  012766  0EDC               	movlw	-36
 11744  012768  006F FF8F FFE9     	movff	plusw1,fsr0l
 11745  01276E  0EDD               	movlw	-35
 11746  012770  006F FF8F FFEA     	movff	plusw1,fsr0h
 11747  012776  006F FFB8  F00B    	movff	postinc0,btemp+10
 11748  01277C  006F FFB4  F00C    	movff	postdec0,btemp+11
 11749  012782  0E02               	movlw	2
 11750  012784  260B               	addwf	(btemp+10)^0,f,c
 11751  012786  0E00               	movlw	0
 11752  012788  220C               	addwfc	(btemp+11)^0,f,c
 11753  01278A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11754  012790  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11755  012796                     	if	0	;tblptru may be non-zero
 11756  012796                     	endif
 11757  012796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11758  012796  0E00               	movlw	low (__mediumconst shr (0+16))
 11759  012798  6EF8               	movwf	tblptru,c
 11760  01279A                     	endif
 11761  01279A  0008               	tblrd		*
 11762  01279C  50F5               	movf	tablat,w,c
 11763  01279E  6EE6               	movwf	postinc1,c
 11764  0127A0  0E00               	movlw	0
 11765  0127A2  6EE6               	movwf	postinc1,c
 11766  0127A4  ECDE  F0D4         	call	_tolower	;wreg free
 11767  0127A8  5001               	movf	btemp^0,w,c
 11768  0127AA  6EDF               	movwf	indf2,c
 11769  0127AC                     l12351:
 11770                           
 11771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11772                           ;stkvar	_fmt @ sp[(-32)+-4]
 11773  0127AC  0EDC               	movlw	-36
 11774  0127AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11775  0127B4  0EDD               	movlw	-35
 11776  0127B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11777  0127BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11778  0127C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11779  0127C8                     	if	0	;tblptru may be non-zero
 11780  0127C8                     	endif
 11781  0127C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11782  0127C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11783  0127CA  6EF8               	movwf	tblptru,c
 11784  0127CC                     	endif
 11785  0127CC  0008               	tblrd		*
 11786  0127CE  50F5               	movf	tablat,w,c
 11787  0127D0  0A63               	xorlw	99
 11788  0127D2  A4D8               	btfss	status,2,c
 11789  0127D4  D037               	goto	l12361
 11790                           
 11791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11792                           ;stkvar	_fmt @ sp[(-32)+-4]
 11793  0127D6  0EDC               	movlw	-36
 11794  0127D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11795  0127DE  0EDD               	movlw	-35
 11796  0127E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11797  0127E6  2ADE               	incf	postinc2,f,c
 11798  0127E8  0E00               	movlw	0
 11799  0127EA  22DD               	addwfc	postdec2,f,c
 11800                           
 11801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11802                           ;stkvar	_ap @ sp[(-32)+-6]
 11803  0127EC  0EDA               	movlw	-38
 11804  0127EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11805  0127F4  0EDB               	movlw	-37
 11806  0127F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11807  0127FC  0E02               	movlw	2
 11808  0127FE  5EDE               	subwf	postinc2,f,c
 11809  012800  0E00               	movlw	0
 11810  012802  5ADD               	subwfb	postdec2,f,c
 11811  012804  006F FF78  F00B    	movff	postinc2,btemp+10
 11812  01280A  006F FF74  F00C    	movff	postdec2,btemp+11
 11813  012810  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11814  012816  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11815  01281C  50DF               	movf	indf2,w,c
 11816  01281E  6E0C               	movwf	(btemp+11)^0,c
 11817                           
 11818                           ;stkvar	_c @ sp[(-32)+31]
 11819  012820  0EFF               	movlw	-1
 11820  012822  0060  F033  FFE3   	movff	btemp+11,plusw1
 11821                           
 11822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11823                           ;stkvar	_c @ sp[(-32)+31]
 11824  012828  0EFF               	movlw	-1
 11825  01282A  50E3               	movf	plusw1,w,c
 11826  01282C  6EE6               	movwf	postinc1,c
 11827                           
 11828                           ;stkvar	_fp @ sp[(-33)+-2]
 11829  01282E  0EDD               	movlw	-35
 11830  012830  006F FF8F FFE6     	movff	plusw1,postinc1
 11831  012836  006F FF8F FFE6     	movff	plusw1,postinc1
 11832  01283C  EC58  F0D4         	call	_ctoa	;wreg free
 11833  012840  EF9B  F099         	goto	l2367
 11834  012844                     l12361:
 11835                           
 11836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11837                           ;stkvar	_fmt @ sp[(-32)+-4]
 11838  012844  0EDC               	movlw	-36
 11839  012846  006F FF8F FFD9     	movff	plusw1,fsr2l
 11840  01284C  0EDD               	movlw	-35
 11841  01284E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11842  012854  006F FF7B FFF6     	movff	postinc2,tblptrl
 11843  01285A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11844  012860                     	if	0	;tblptru may be non-zero
 11845  012860                     	endif
 11846  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11847  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 11848  012862  6EF8               	movwf	tblptru,c
 11849  012864                     	endif
 11850  012864  0008               	tblrd		*
 11851  012866  50F5               	movf	tablat,w,c
 11852  012868  0A64               	xorlw	100
 11853  01286A  B4D8               	btfsc	status,2,c
 11854  01286C  D015               	goto	u12040
 11855                           
 11856                           ;stkvar	_fmt @ sp[(-32)+-4]
 11857  01286E  0EDC               	movlw	-36
 11858  012870  006F FF8F FFD9     	movff	plusw1,fsr2l
 11859  012876  0EDD               	movlw	-35
 11860  012878  006F FF8F FFDA     	movff	plusw1,fsr2h
 11861  01287E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11862  012884  006F FF77 FFF7     	movff	postdec2,tblptrh
 11863  01288A                     	if	0	;tblptru may be non-zero
 11864  01288A                     	endif
 11865  01288A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11866  01288A  0E00               	movlw	low (__mediumconst shr (0+16))
 11867  01288C  6EF8               	movwf	tblptru,c
 11868  01288E                     	endif
 11869  01288E  0008               	tblrd		*
 11870  012890  50F5               	movf	tablat,w,c
 11871  012892  0A69               	xorlw	105
 11872  012894  A4D8               	btfss	status,2,c
 11873  012896  D076               	goto	l12373
 11874  012898                     u12040:
 11875                           
 11876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11877                           ;stkvar	_fmt @ sp[(-32)+-4]
 11878  012898  0EDC               	movlw	-36
 11879  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11880  0128A0  0EDD               	movlw	-35
 11881  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11882  0128A8  2ADE               	incf	postinc2,f,c
 11883  0128AA  0E00               	movlw	0
 11884  0128AC  22DD               	addwfc	postdec2,f,c
 11885                           
 11886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11887                           ;stkvar	_ap @ sp[(-32)+-6]
 11888  0128AE  0EDA               	movlw	-38
 11889  0128B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11890  0128B6  0EDB               	movlw	-37
 11891  0128B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11892  0128BE  0E02               	movlw	2
 11893  0128C0  5EDE               	subwf	postinc2,f,c
 11894  0128C2  0E00               	movlw	0
 11895  0128C4  5ADD               	subwfb	postdec2,f,c
 11896  0128C6  006F FF78  F00B    	movff	postinc2,btemp+10
 11897  0128CC  006F FF74  F00C    	movff	postdec2,btemp+11
 11898  0128D2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11899  0128D8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11900  0128DE  006F FF78  F00B    	movff	postinc2,btemp+10
 11901  0128E4  006F FF74  F00C    	movff	postdec2,btemp+11
 11902                           
 11903                           ;stkvar	_ll @ sp[(-32)+14]
 11904  0128EA  0EEE               	movlw	-18
 11905  0128EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11906  0128F2  0EEF               	movlw	-17
 11907  0128F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11908  0128FA  6A01               	clrf	btemp^0,c
 11909  0128FC  BEE3               	btfsc	plusw1,7,c
 11910  0128FE  6801               	setf	btemp^0,c
 11911  012900  0EF0               	movlw	-16
 11912  012902  0060  F007  FFE3   	movff	btemp,plusw1
 11913  012908  0EF1               	movlw	-15
 11914  01290A  0060  F007  FFE3   	movff	btemp,plusw1
 11915  012910  0EF2               	movlw	-14
 11916  012912  0060  F007  FFE3   	movff	btemp,plusw1
 11917  012918  0EF3               	movlw	-13
 11918  01291A  0060  F007  FFE3   	movff	btemp,plusw1
 11919  012920  0EF4               	movlw	-12
 11920  012922  0060  F007  FFE3   	movff	btemp,plusw1
 11921  012928  0EF5               	movlw	-11
 11922  01292A  0060  F007  FFE3   	movff	btemp,plusw1
 11923  012930                     l12369:
 11924                           
 11925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11926                           ;stkvar	_ll @ sp[(-32)+14]
 11927  012930  50E1               	movf	fsr1l,w,c
 11928  012932  0FEE               	addlw	-18
 11929  012934  6ED9               	movwf	fsr2l,c
 11930  012936  50E2               	movf	fsr1h,w,c
 11931  012938  6EDA               	movwf	fsr2h,c
 11932  01293A  0EFF               	movlw	255
 11933  01293C  22DA               	addwfc	fsr2h,f,c
 11934  01293E  006F FF7B FFE6     	movff	postinc2,postinc1
 11935  012944  006F FF7B FFE6     	movff	postinc2,postinc1
 11936  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 11937  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 11938  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 11939  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 11940  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 11941  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 11942                           
 11943                           ;stkvar	_fp @ sp[(-40)+-2]
 11944  01296E  0ED6               	movlw	-42
 11945  012970  006F FF8F FFE6     	movff	plusw1,postinc1
 11946  012976  006F FF8F FFE6     	movff	plusw1,postinc1
 11947  01297C  EC98  F0AA         	call	_dtoa	;wreg free
 11948  012980  EF9B  F099         	goto	l2367
 11949  012984                     l12373:
 11950                           
 11951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11952  012984  0E02               	movlw	2
 11953  012986  6EE6               	movwf	postinc1,c
 11954  012988  0E00               	movlw	0
 11955  01298A  6EE6               	movwf	postinc1,c
 11956  01298C  0EE9               	movlw	low STR_74
 11957  01298E  6EE6               	movwf	postinc1,c
 11958  012990  0EFF               	movlw	high STR_74
 11959  012992  6EE6               	movwf	postinc1,c
 11960                           
 11961                           ;stkvar	_fmt @ sp[(-36)+-4]
 11962  012994  0ED8               	movlw	-40
 11963  012996  006F FF8F FFD9     	movff	plusw1,fsr2l
 11964  01299C  0ED9               	movlw	-39
 11965  01299E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11966  0129A4  006F FF78  F00B    	movff	postinc2,btemp+10
 11967  0129AA  006F FF74  F00C    	movff	postdec2,btemp+11
 11968  0129B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11969  0129B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11970  0129BC  ECB1  F0BE         	call	_strncmp	;wreg free
 11971  0129C0  5001               	movf	btemp^0,w,c
 11972  0129C2  1002               	iorwf	(btemp+1)^0,w,c
 11973  0129C4  B4D8               	btfsc	status,2,c
 11974  0129C6  D022               	goto	u12060
 11975  0129C8  0E02               	movlw	2
 11976  0129CA  6EE6               	movwf	postinc1,c
 11977  0129CC  0E00               	movlw	0
 11978  0129CE  6EE6               	movwf	postinc1,c
 11979  0129D0  0EEF               	movlw	low STR_78
 11980  0129D2  6EE6               	movwf	postinc1,c
 11981  0129D4  0EFF               	movlw	high STR_78
 11982  0129D6  6EE6               	movwf	postinc1,c
 11983                           
 11984                           ;stkvar	_fmt @ sp[(-36)+-4]
 11985  0129D8  0ED8               	movlw	-40
 11986  0129DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11987  0129E0  0ED9               	movlw	-39
 11988  0129E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11989  0129E8  006F FF78  F00B    	movff	postinc2,btemp+10
 11990  0129EE  006F FF74  F00C    	movff	postdec2,btemp+11
 11991  0129F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11992  0129FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 11993  012A00  ECB1  F0BE         	call	_strncmp	;wreg free
 11994  012A04  5001               	movf	btemp^0,w,c
 11995  012A06  1002               	iorwf	(btemp+1)^0,w,c
 11996  012A08  A4D8               	btfss	status,2,c
 11997  012A0A  D069               	goto	l12385
 11998  012A0C                     u12060:
 11999                           
 12000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12001                           ;stkvar	_fmt @ sp[(-32)+-4]
 12002  012A0C  0EDC               	movlw	-36
 12003  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12004  012A14  0EDD               	movlw	-35
 12005  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12006  012A1C  0E02               	movlw	2
 12007  012A1E  26DE               	addwf	postinc2,f,c
 12008  012A20  0E00               	movlw	0
 12009  012A22  22DD               	addwfc	postdec2,f,c
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12012                           ;stkvar	_ap @ sp[(-32)+-6]
 12013  012A24  0EDA               	movlw	-38
 12014  012A26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12015  012A2C  0EDB               	movlw	-37
 12016  012A2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12017  012A34  0E04               	movlw	4
 12018  012A36  5EDE               	subwf	postinc2,f,c
 12019  012A38  0E00               	movlw	0
 12020  012A3A  5ADD               	subwfb	postdec2,f,c
 12021  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12022  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 12023  012A48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12024  012A4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12025  012A54  006F FF78  F009    	movff	postinc2,btemp+8
 12026  012A5A  006F FF78  F00A    	movff	postinc2,btemp+9
 12027  012A60  006F FF78  F00B    	movff	postinc2,btemp+10
 12028  012A66  006F FF78  F00C    	movff	postinc2,btemp+11
 12029  012A6C  0060  F024  F011   	movff	btemp+8,btemp+16
 12030  012A72  0060  F028  F012   	movff	btemp+9,btemp+17
 12031  012A78  0060  F02C  F013   	movff	btemp+10,btemp+18
 12032  012A7E  0060  F030  F014   	movff	btemp+11,btemp+19
 12033  012A84  6A15               	clrf	(btemp+20)^0,c
 12034  012A86  BE14               	btfsc	(btemp+19)^0,7,c
 12035  012A88  6815               	setf	(btemp+20)^0,c
 12036  012A8A  0060  F054  F016   	movff	btemp+20,btemp+21
 12037  012A90  0060  F054  F017   	movff	btemp+20,btemp+22
 12038  012A96  0060  F054  F018   	movff	btemp+20,btemp+23
 12039                           
 12040                           ;stkvar	_ll @ sp[(-32)+14]
 12041  012A9C  0EEE               	movlw	-18
 12042  012A9E  0060  F047  FFE3   	movff	btemp+16,plusw1
 12043  012AA4  0EEF               	movlw	-17
 12044  012AA6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12045  012AAC  0EF0               	movlw	-16
 12046  012AAE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12047  012AB4  0EF1               	movlw	-15
 12048  012AB6  0060  F053  FFE3   	movff	btemp+19,plusw1
 12049  012ABC  0EF2               	movlw	-14
 12050  012ABE  0060  F057  FFE3   	movff	btemp+20,plusw1
 12051  012AC4  0EF3               	movlw	-13
 12052  012AC6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12053  012ACC  0EF4               	movlw	-12
 12054  012ACE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12055  012AD4  0EF5               	movlw	-11
 12056  012AD6  0060  F063  FFE3   	movff	btemp+23,plusw1
 12057  012ADC  D729               	goto	l12369
 12058  012ADE                     l12385:
 12059                           
 12060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12061                           ;stkvar	_ct @ sp[(-32)+26]
 12062  012ADE  0EFA               	movlw	-6
 12063  012AE0  006F FF8C  F001    	movff	plusw1,btemp
 12064  012AE6  0E66               	movlw	102
 12065  012AE8  1801               	xorwf	btemp^0,w,c
 12066  012AEA  A4D8               	btfss	status,2,c
 12067  012AEC  D06E               	goto	l12397
 12068                           
 12069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12070                           ;stkvar	_fmt @ sp[(-32)+-4]
 12071  012AEE  0EDC               	movlw	-36
 12072  012AF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12073  012AF6  0EDD               	movlw	-35
 12074  012AF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12075  012AFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12076  012B04  006F FF77 FFF7     	movff	postdec2,tblptrh
 12077  012B0A                     	if	0	;tblptru may be non-zero
 12078  012B0A                     	endif
 12079  012B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12080  012B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 12081  012B0C  6EF8               	movwf	tblptru,c
 12082  012B0E                     	endif
 12083                           
 12084                           ;stkvar	_c @ sp[(-32)+31]
 12085  012B0E  0008               	tblrd		*
 12086  012B10  0EFF               	movlw	-1
 12087  012B12  006F FFD7 FFE3     	movff	tablat,plusw1
 12088                           
 12089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12090                           ;stkvar	_fmt @ sp[(-32)+-4]
 12091  012B18  0EDC               	movlw	-36
 12092  012B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12093  012B20  0EDD               	movlw	-35
 12094  012B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12095  012B28  2ADE               	incf	postinc2,f,c
 12096  012B2A  0E00               	movlw	0
 12097  012B2C  22DD               	addwfc	postdec2,f,c
 12098                           
 12099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12100                           ;stkvar	_ap @ sp[(-32)+-6]
 12101  012B2E  0EDA               	movlw	-38
 12102  012B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 12103  012B36  0EDB               	movlw	-37
 12104  012B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 12105  012B3E  0E04               	movlw	4
 12106  012B40  5EDE               	subwf	postinc2,f,c
 12107  012B42  0E00               	movlw	0
 12108  012B44  5ADD               	subwfb	postdec2,f,c
 12109  012B46  006F FF78  F00B    	movff	postinc2,btemp+10
 12110  012B4C  006F FF74  F00C    	movff	postdec2,btemp+11
 12111  012B52  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12112  012B58  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12113  012B5E  006F FF78  F009    	movff	postinc2,btemp+8
 12114  012B64  006F FF78  F00A    	movff	postinc2,btemp+9
 12115  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 12116  012B70  006F FF78  F00C    	movff	postinc2,btemp+11
 12117                           
 12118                           ;stkvar	_f @ sp[(-32)+22]
 12119  012B76  0EF6               	movlw	-10
 12120  012B78  0060  F027  FFE3   	movff	btemp+8,plusw1
 12121  012B7E  0EF7               	movlw	-9
 12122  012B80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12123  012B86  0EF8               	movlw	-8
 12124  012B88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12125  012B8E  0EF9               	movlw	-7
 12126  012B90  0060  F033  FFE3   	movff	btemp+11,plusw1
 12127  012B96                     l12393:
 12128                           
 12129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12130                           ;stkvar	_c @ sp[(-32)+31]
 12131  012B96  0EFF               	movlw	-1
 12132  012B98  50E3               	movf	plusw1,w,c
 12133  012B9A  6EE6               	movwf	postinc1,c
 12134                           
 12135                           ;stkvar	_f @ sp[(-33)+22]
 12136  012B9C  0EF5               	movlw	-11
 12137  012B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12138  012BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12139  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12140  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12141                           
 12142                           ;stkvar	_fp @ sp[(-37)+-2]
 12143  012BB6  0ED9               	movlw	-39
 12144  012BB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12145  012BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12146  012BC4  EC00  F080         	call	_efgtoa	;wreg free
 12147  012BC8  D3B6               	goto	l2367
 12148  012BCA                     l12397:
 12149                           
 12150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12151  012BCA  0E02               	movlw	2
 12152  012BCC  6EE6               	movwf	postinc1,c
 12153  012BCE  0E00               	movlw	0
 12154  012BD0  6EE6               	movwf	postinc1,c
 12155  012BD2  0EEC               	movlw	low STR_83
 12156  012BD4  6EE6               	movwf	postinc1,c
 12157  012BD6  0EFF               	movlw	high STR_83
 12158  012BD8  6EE6               	movwf	postinc1,c
 12159                           
 12160                           ;stkvar	_ct @ sp[(-36)+26]
 12161  012BDA  0EF6               	movlw	246
 12162  012BDC  24E1               	addwf	fsr1l,w,c
 12163  012BDE  6E01               	movwf	btemp^0,c
 12164  012BE0  0EFF               	movlw	255
 12165  012BE2  20E2               	addwfc	fsr1h,w,c
 12166  012BE4  6E02               	movwf	(btemp+1)^0,c
 12167  012BE6  0060  F007  FFE6   	movff	btemp,postinc1
 12168  012BEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12169  012BF2  ECB1  F0BE         	call	_strncmp	;wreg free
 12170  012BF6  5001               	movf	btemp^0,w,c
 12171  012BF8  1002               	iorwf	(btemp+1)^0,w,c
 12172  012BFA  A4D8               	btfss	status,2,c
 12173  012BFC  D096               	goto	l12417
 12174                           
 12175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12176                           ;stkvar	_fmt @ sp[(-32)+-4]
 12177  012BFE  0EDC               	movlw	-36
 12178  012C00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12179  012C06  0EDD               	movlw	-35
 12180  012C08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12181  012C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12182  012C14  006F FF74  F00C    	movff	postdec2,btemp+11
 12183  012C1A  0E01               	movlw	1
 12184  012C1C  260B               	addwf	(btemp+10)^0,f,c
 12185  012C1E  0E00               	movlw	0
 12186  012C20  220C               	addwfc	(btemp+11)^0,f,c
 12187  012C22  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12188  012C28  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12189  012C2E                     	if	0	;tblptru may be non-zero
 12190  012C2E                     	endif
 12191  012C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12192  012C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 12193  012C30  6EF8               	movwf	tblptru,c
 12194  012C32                     	endif
 12195                           
 12196                           ;stkvar	_c @ sp[(-32)+31]
 12197  012C32  0008               	tblrd		*
 12198  012C34  0EFF               	movlw	-1
 12199  012C36  006F FFD7 FFE3     	movff	tablat,plusw1
 12200  012C3C  0EBF               	movlw	191
 12201  012C3E  6E0B               	movwf	(btemp+10)^0,c
 12202  012C40  0EFF               	movlw	255
 12203  012C42  6E0C               	movwf	(btemp+11)^0,c
 12204                           
 12205                           ;stkvar	_fmt @ sp[(-32)+-4]
 12206  012C44  0EDC               	movlw	-36
 12207  012C46  006F FF8F FFD9     	movff	plusw1,fsr2l
 12208  012C4C  0EDD               	movlw	-35
 12209  012C4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12210  012C54  006F FF7B FFF6     	movff	postinc2,tblptrl
 12211  012C5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12212  012C60                     	if	0	;tblptru may be non-zero
 12213  012C60                     	endif
 12214  012C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12215  012C60  0E00               	movlw	low (__mediumconst shr (0+16))
 12216  012C62  6EF8               	movwf	tblptru,c
 12217  012C64                     	endif
 12218  012C64  0008               	tblrd		*
 12219  012C66  50F5               	movf	tablat,w,c
 12220  012C68  6E09               	movwf	(btemp+8)^0,c
 12221  012C6A  6A0A               	clrf	(btemp+9)^0,c
 12222  012C6C  500B               	movf	(btemp+10)^0,w,c
 12223  012C6E  2609               	addwf	(btemp+8)^0,f,c
 12224  012C70  500C               	movf	(btemp+11)^0,w,c
 12225  012C72  220A               	addwfc	(btemp+9)^0,f,c
 12226  012C74  500A               	movf	(btemp+9)^0,w,c
 12227  012C76  E106               	bnz	u12090
 12228  012C78  0E1A               	movlw	26
 12229  012C7A  5C09               	subwf	(btemp+8)^0,w,c
 12230  012C7C  B0D8               	btfsc	status,0,c
 12231  012C7E  D002               	goto	u12090
 12232  012C80  0E01               	movlw	1
 12233  012C82  D001               	goto	u12100
 12234  012C84                     u12090:
 12235  012C84  0E00               	movlw	0
 12236  012C86                     u12100:
 12237  012C86  6E0B               	movwf	(btemp+10)^0,c
 12238  012C88  6A0C               	clrf	(btemp+11)^0,c
 12239                           
 12240                           ;stkvar	_vfpfcnvrt$5559 @ sp[(-32)+2]
 12241  012C8A  0EE2               	movlw	-30
 12242  012C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12243  012C92  0EE3               	movlw	-29
 12244  012C94  0060  F033  FFE3   	movff	btemp+11,plusw1
 12245                           
 12246                           ;stkvar	_vfpfcnvrt$5559 @ sp[(-32)+2]
 12247  012C9A  0EE2               	movlw	-30
 12248  012C9C  006F FF8C  F001    	movff	plusw1,btemp
 12249  012CA2  0EE3               	movlw	-29
 12250  012CA4  50E3               	movf	plusw1,w,c
 12251  012CA6  1001               	iorwf	btemp^0,w,c
 12252                           
 12253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12254                           ;stkvar	_ap @ sp[(-32)+-6]
 12255                           
 12256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12257                           
 12258                           ;stkvar	_f @ sp[(-32)+22]
 12259                           
 12260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12261                           ;stkvar	_ap @ sp[(-32)+-6]
 12262  012CA8  0EDA               	movlw	-38
 12263  012CAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12264  012CB0  0EDB               	movlw	-37
 12265  012CB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12266  012CB8  0E04               	movlw	4
 12267  012CBA  5EDE               	subwf	postinc2,f,c
 12268  012CBC  0E00               	movlw	0
 12269  012CBE  5ADD               	subwfb	postdec2,f,c
 12270  012CC0  006F FF78  F00B    	movff	postinc2,btemp+10
 12271  012CC6  006F FF74  F00C    	movff	postdec2,btemp+11
 12272  012CCC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12273  012CD2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12274  012CD8  006F FF78  F009    	movff	postinc2,btemp+8
 12275  012CDE  006F FF78  F00A    	movff	postinc2,btemp+9
 12276  012CE4  006F FF78  F00B    	movff	postinc2,btemp+10
 12277  012CEA  006F FF78  F00C    	movff	postinc2,btemp+11
 12278                           
 12279                           ;stkvar	_f @ sp[(-32)+22]
 12280  012CF0  0EF6               	movlw	-10
 12281  012CF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 12282  012CF8  0EF7               	movlw	-9
 12283  012CFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12284  012D00  0EF8               	movlw	-8
 12285  012D02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12286  012D08  0EF9               	movlw	-7
 12287  012D0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12288                           
 12289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12290                           ;stkvar	_fmt @ sp[(-32)+-4]
 12291  012D10  0EDC               	movlw	-36
 12292  012D12  006F FF8F FFD9     	movff	plusw1,fsr2l
 12293  012D18  0EDD               	movlw	-35
 12294  012D1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12295  012D20  0E02               	movlw	2
 12296  012D22  26DE               	addwf	postinc2,f,c
 12297  012D24  0E00               	movlw	0
 12298  012D26  22DD               	addwfc	postdec2,f,c
 12299  012D28  D736               	goto	l12393
 12300  012D2A                     l12417:
 12301                           
 12302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12303                           ;stkvar	_fmt @ sp[(-32)+-4]
 12304  012D2A  0EDC               	movlw	-36
 12305  012D2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12306  012D32  0EDD               	movlw	-35
 12307  012D34  006F FF8F FFDA     	movff	plusw1,fsr2h
 12308  012D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12309  012D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 12310  012D46                     	if	0	;tblptru may be non-zero
 12311  012D46                     	endif
 12312  012D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12313  012D46  0E00               	movlw	low (__mediumconst shr (0+16))
 12314  012D48  6EF8               	movwf	tblptru,c
 12315  012D4A                     	endif
 12316  012D4A  0008               	tblrd		*
 12317  012D4C  50F5               	movf	tablat,w,c
 12318  012D4E  0A73               	xorlw	115
 12319  012D50  A4D8               	btfss	status,2,c
 12320  012D52  D042               	goto	l12427
 12321                           
 12322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12323                           ;stkvar	_fmt @ sp[(-32)+-4]
 12324  012D54  0EDC               	movlw	-36
 12325  012D56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12326  012D5C  0EDD               	movlw	-35
 12327  012D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12328  012D64  2ADE               	incf	postinc2,f,c
 12329  012D66  0E00               	movlw	0
 12330  012D68  22DD               	addwfc	postdec2,f,c
 12331                           
 12332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12333                           ;stkvar	_ap @ sp[(-32)+-6]
 12334  012D6A  0EDA               	movlw	-38
 12335  012D6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12336  012D72  0EDB               	movlw	-37
 12337  012D74  006F FF8F FFDA     	movff	plusw1,fsr2h
 12338  012D7A  0E02               	movlw	2
 12339  012D7C  5EDE               	subwf	postinc2,f,c
 12340  012D7E  0E00               	movlw	0
 12341  012D80  5ADD               	subwfb	postdec2,f,c
 12342  012D82  006F FF78  F00B    	movff	postinc2,btemp+10
 12343  012D88  006F FF74  F00C    	movff	postdec2,btemp+11
 12344  012D8E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12345  012D94  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12346  012D9A  006F FF78  F00B    	movff	postinc2,btemp+10
 12347  012DA0  006F FF74  F00C    	movff	postdec2,btemp+11
 12348                           
 12349                           ;stkvar	_cp @ sp[(-32)+29]
 12350  012DA6  0EFE               	movlw	-2
 12351  012DA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12352  012DAE  0EFD               	movlw	-3
 12353  012DB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12354                           
 12355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12356                           ;stkvar	_cp @ sp[(-32)+29]
 12357  012DB6  0EFD               	movlw	-3
 12358  012DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12359  012DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12360                           
 12361                           ;stkvar	_fp @ sp[(-34)+-2]
 12362  012DC4  0EDC               	movlw	-36
 12363  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12364  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  012DD2  ECA3  F0B8         	call	_stoa	;wreg free
 12366  012DD6  D2AF               	goto	l2367
 12367  012DD8                     l12427:
 12368                           
 12369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12370                           ;stkvar	_fmt @ sp[(-32)+-4]
 12371  012DD8  0EDC               	movlw	-36
 12372  012DDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12373  012DE0  0EDD               	movlw	-35
 12374  012DE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12375  012DE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12376  012DEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12377  012DF4                     	if	0	;tblptru may be non-zero
 12378  012DF4                     	endif
 12379  012DF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12380  012DF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12381  012DF6  6EF8               	movwf	tblptru,c
 12382  012DF8                     	endif
 12383  012DF8  0008               	tblrd		*
 12384  012DFA  50F5               	movf	tablat,w,c
 12385  012DFC  0A75               	xorlw	117
 12386  012DFE  A4D8               	btfss	status,2,c
 12387  012E00  D07C               	goto	l12437
 12388                           
 12389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12390                           ;stkvar	_fmt @ sp[(-32)+-4]
 12391  012E02  0EDC               	movlw	-36
 12392  012E04  006F FF8F FFD9     	movff	plusw1,fsr2l
 12393  012E0A  0EDD               	movlw	-35
 12394  012E0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12395  012E12  2ADE               	incf	postinc2,f,c
 12396  012E14  0E00               	movlw	0
 12397  012E16  22DD               	addwfc	postdec2,f,c
 12398                           
 12399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12400                           ;stkvar	_ap @ sp[(-32)+-6]
 12401  012E18  0EDA               	movlw	-38
 12402  012E1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12403  012E20  0EDB               	movlw	-37
 12404  012E22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12405  012E28  0E02               	movlw	2
 12406  012E2A  5EDE               	subwf	postinc2,f,c
 12407  012E2C  0E00               	movlw	0
 12408  012E2E  5ADD               	subwfb	postdec2,f,c
 12409  012E30  006F FF78  F00B    	movff	postinc2,btemp+10
 12410  012E36  006F FF74  F00C    	movff	postdec2,btemp+11
 12411  012E3C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12412  012E42  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12413  012E48  006F FF78  F00B    	movff	postinc2,btemp+10
 12414  012E4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12415  012E54  500B               	movf	(btemp+10)^0,w,c
 12416  012E56  6E11               	movwf	(btemp+16)^0,c
 12417  012E58  500C               	movf	(btemp+11)^0,w,c
 12418  012E5A  6E12               	movwf	(btemp+17)^0,c
 12419  012E5C  6A13               	clrf	(btemp+18)^0,c
 12420  012E5E  6A14               	clrf	(btemp+19)^0,c
 12421  012E60  6A15               	clrf	(btemp+20)^0,c
 12422  012E62  6A16               	clrf	(btemp+21)^0,c
 12423  012E64  6A17               	clrf	(btemp+22)^0,c
 12424  012E66  6A18               	clrf	(btemp+23)^0,c
 12425                           
 12426                           ;stkvar	_llu @ sp[(-32)+6]
 12427  012E68  0EE6               	movlw	-26
 12428  012E6A  0060  F047  FFE3   	movff	btemp+16,plusw1
 12429  012E70  0EE7               	movlw	-25
 12430  012E72  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12431  012E78  0EE8               	movlw	-24
 12432  012E7A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12433  012E80  0EE9               	movlw	-23
 12434  012E82  0060  F053  FFE3   	movff	btemp+19,plusw1
 12435  012E88  0EEA               	movlw	-22
 12436  012E8A  0060  F057  FFE3   	movff	btemp+20,plusw1
 12437  012E90  0EEB               	movlw	-21
 12438  012E92  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12439  012E98  0EEC               	movlw	-20
 12440  012E9A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12441  012EA0  0EED               	movlw	-19
 12442  012EA2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12443                           
 12444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12445                           ;stkvar	_llu @ sp[(-32)+6]
 12446  012EA8  50E1               	movf	fsr1l,w,c
 12447  012EAA  0FE6               	addlw	-26
 12448  012EAC  6ED9               	movwf	fsr2l,c
 12449  012EAE  50E2               	movf	fsr1h,w,c
 12450  012EB0  6EDA               	movwf	fsr2h,c
 12451  012EB2  0EFF               	movlw	255
 12452  012EB4  22DA               	addwfc	fsr2h,f,c
 12453  012EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12454  012EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12455  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12456  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12457  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12458  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12459  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12460  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12461                           
 12462                           ;stkvar	_fp @ sp[(-40)+-2]
 12463  012EE6  0ED6               	movlw	-42
 12464  012EE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12465  012EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  012EF4  EC91  F0B2         	call	_utoa	;wreg free
 12467  012EF8  D21E               	goto	l2367
 12468  012EFA                     l12437:
 12469                           
 12470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12471  012EFA  0E02               	movlw	2
 12472  012EFC  6EE6               	movwf	postinc1,c
 12473  012EFE  0E00               	movlw	0
 12474  012F00  6EE6               	movwf	postinc1,c
 12475  012F02  0EF2               	movlw	low STR_88
 12476  012F04  6EE6               	movwf	postinc1,c
 12477  012F06  0EFF               	movlw	high STR_88
 12478  012F08  6EE6               	movwf	postinc1,c
 12479                           
 12480                           ;stkvar	_fmt @ sp[(-36)+-4]
 12481  012F0A  0ED8               	movlw	-40
 12482  012F0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12483  012F12  0ED9               	movlw	-39
 12484  012F14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12485  012F1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12486  012F20  006F FF74  F00C    	movff	postdec2,btemp+11
 12487  012F26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12488  012F2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12489  012F32  ECB1  F0BE         	call	_strncmp	;wreg free
 12490  012F36  5001               	movf	btemp^0,w,c
 12491  012F38  1002               	iorwf	(btemp+1)^0,w,c
 12492  012F3A  A4D8               	btfss	status,2,c
 12493  012F3C  D039               	goto	l12447
 12494                           
 12495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12496                           ;stkvar	_fmt @ sp[(-32)+-4]
 12497  012F3E  0EDC               	movlw	-36
 12498  012F40  006F FF8F FFD9     	movff	plusw1,fsr2l
 12499  012F46  0EDD               	movlw	-35
 12500  012F48  006F FF8F FFDA     	movff	plusw1,fsr2h
 12501  012F4E  0E02               	movlw	2
 12502  012F50  26DE               	addwf	postinc2,f,c
 12503  012F52  0E00               	movlw	0
 12504  012F54  22DD               	addwfc	postdec2,f,c
 12505                           
 12506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12507                           ;stkvar	_ap @ sp[(-32)+-6]
 12508  012F56  0EDA               	movlw	-38
 12509  012F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 12510  012F5E  0EDB               	movlw	-37
 12511  012F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 12512  012F66  0E04               	movlw	4
 12513  012F68  5EDE               	subwf	postinc2,f,c
 12514  012F6A  0E00               	movlw	0
 12515  012F6C  5ADD               	subwfb	postdec2,f,c
 12516  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 12517  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 12518  012F7A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12519  012F80  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12520  012F86  006F FF78  F009    	movff	postinc2,btemp+8
 12521  012F8C  006F FF78  F00A    	movff	postinc2,btemp+9
 12522  012F92  006F FF78  F00B    	movff	postinc2,btemp+10
 12523  012F98  006F FF78  F00C    	movff	postinc2,btemp+11
 12524  012F9E  5009               	movf	(btemp+8)^0,w,c
 12525  012FA0  6E11               	movwf	(btemp+16)^0,c
 12526  012FA2  500A               	movf	(btemp+9)^0,w,c
 12527  012FA4  6E12               	movwf	(btemp+17)^0,c
 12528  012FA6  500B               	movf	(btemp+10)^0,w,c
 12529  012FA8  6E13               	movwf	(btemp+18)^0,c
 12530  012FAA  500C               	movf	(btemp+11)^0,w,c
 12531  012FAC  6E14               	movwf	(btemp+19)^0,c
 12532  012FAE  D758               	goto	L10
 12533  012FB0                     l12447:
 12534                           
 12535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12536                           ;stkvar	_fmt @ sp[(-32)+-4]
 12537  012FB0  0EDC               	movlw	-36
 12538  012FB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12539  012FB8  0EDD               	movlw	-35
 12540  012FBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12541  012FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12542  012FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12543  012FCC                     	if	0	;tblptru may be non-zero
 12544  012FCC                     	endif
 12545  012FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12546  012FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 12547  012FCE  6EF8               	movwf	tblptru,c
 12548  012FD0                     	endif
 12549  012FD0  0008               	tblrd		*
 12550  012FD2  50F5               	movf	tablat,w,c
 12551  012FD4  0A78               	xorlw	120
 12552  012FD6  B4D8               	btfsc	status,2,c
 12553  012FD8  D015               	goto	u12160
 12554                           
 12555                           ;stkvar	_fmt @ sp[(-32)+-4]
 12556  012FDA  0EDC               	movlw	-36
 12557  012FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12558  012FE2  0EDD               	movlw	-35
 12559  012FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12560  012FEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 12561  012FF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12562  012FF6                     	if	0	;tblptru may be non-zero
 12563  012FF6                     	endif
 12564  012FF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12565  012FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12566  012FF8  6EF8               	movwf	tblptru,c
 12567  012FFA                     	endif
 12568  012FFA  0008               	tblrd		*
 12569  012FFC  50F5               	movf	tablat,w,c
 12570  012FFE  0A58               	xorlw	88
 12571  013000  A4D8               	btfss	status,2,c
 12572  013002  D094               	goto	l12461
 12573  013004                     u12160:
 12574                           
 12575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12576                           ;stkvar	_fmt @ sp[(-32)+-4]
 12577  013004  0EDC               	movlw	-36
 12578  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 12579  01300C  0EDD               	movlw	-35
 12580  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12581  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 12582  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12583  013020                     	if	0	;tblptru may be non-zero
 12584  013020                     	endif
 12585  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12586  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 12587  013022  6EF8               	movwf	tblptru,c
 12588  013024                     	endif
 12589                           
 12590                           ;stkvar	_c @ sp[(-32)+31]
 12591  013024  0008               	tblrd		*
 12592  013026  0EFF               	movlw	-1
 12593  013028  006F FFD7 FFE3     	movff	tablat,plusw1
 12594                           
 12595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12596                           ;stkvar	_fmt @ sp[(-32)+-4]
 12597  01302E  0EDC               	movlw	-36
 12598  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 12599  013036  0EDD               	movlw	-35
 12600  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 12601  01303E  2ADE               	incf	postinc2,f,c
 12602  013040  0E00               	movlw	0
 12603  013042  22DD               	addwfc	postdec2,f,c
 12604                           
 12605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12606                           ;stkvar	_ap @ sp[(-32)+-6]
 12607  013044  0EDA               	movlw	-38
 12608  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 12609  01304C  0EDB               	movlw	-37
 12610  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12611  013054  0E02               	movlw	2
 12612  013056  5EDE               	subwf	postinc2,f,c
 12613  013058  0E00               	movlw	0
 12614  01305A  5ADD               	subwfb	postdec2,f,c
 12615  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 12616  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 12617  013068  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12618  01306E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12619  013074  006F FF78  F00B    	movff	postinc2,btemp+10
 12620  01307A  006F FF74  F00C    	movff	postdec2,btemp+11
 12621  013080  500B               	movf	(btemp+10)^0,w,c
 12622  013082  6E11               	movwf	(btemp+16)^0,c
 12623  013084  500C               	movf	(btemp+11)^0,w,c
 12624  013086  6E12               	movwf	(btemp+17)^0,c
 12625  013088  6A13               	clrf	(btemp+18)^0,c
 12626  01308A  6A14               	clrf	(btemp+19)^0,c
 12627  01308C  6A15               	clrf	(btemp+20)^0,c
 12628  01308E  6A16               	clrf	(btemp+21)^0,c
 12629  013090  6A17               	clrf	(btemp+22)^0,c
 12630  013092  6A18               	clrf	(btemp+23)^0,c
 12631                           
 12632                           ;stkvar	_llu @ sp[(-32)+6]
 12633  013094  0EE6               	movlw	-26
 12634  013096  0060  F047  FFE3   	movff	btemp+16,plusw1
 12635  01309C  0EE7               	movlw	-25
 12636  01309E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12637  0130A4  0EE8               	movlw	-24
 12638  0130A6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12639  0130AC  0EE9               	movlw	-23
 12640  0130AE  0060  F053  FFE3   	movff	btemp+19,plusw1
 12641  0130B4  0EEA               	movlw	-22
 12642  0130B6  0060  F057  FFE3   	movff	btemp+20,plusw1
 12643  0130BC  0EEB               	movlw	-21
 12644  0130BE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12645  0130C4  0EEC               	movlw	-20
 12646  0130C6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12647  0130CC  0EED               	movlw	-19
 12648  0130CE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12649                           
 12650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12651                           ;stkvar	_c @ sp[(-32)+31]
 12652  0130D4  0EFF               	movlw	-1
 12653  0130D6  50E3               	movf	plusw1,w,c
 12654  0130D8  6EE6               	movwf	postinc1,c
 12655                           
 12656                           ;stkvar	_llu @ sp[(-33)+6]
 12657  0130DA  50E1               	movf	fsr1l,w,c
 12658  0130DC  0FE5               	addlw	-27
 12659  0130DE  6ED9               	movwf	fsr2l,c
 12660  0130E0  50E2               	movf	fsr1h,w,c
 12661  0130E2  6EDA               	movwf	fsr2h,c
 12662  0130E4  0EFF               	movlw	255
 12663  0130E6  22DA               	addwfc	fsr2h,f,c
 12664  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 12665  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 12666  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 12667  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 12668  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 12669  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 12670  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 12671  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 12672                           
 12673                           ;stkvar	_fp @ sp[(-41)+-2]
 12674  013118  0ED5               	movlw	-43
 12675  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 12676  013120  006F FF8F FFE6     	movff	plusw1,postinc1
 12677  013126  ECFE  F0AE         	call	_xtoa	;wreg free
 12678  01312A  D105               	goto	l2367
 12679  01312C                     l12461:
 12680                           
 12681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12682  01312C  0E02               	movlw	2
 12683  01312E  6EE6               	movwf	postinc1,c
 12684  013130  0E00               	movlw	0
 12685  013132  6EE6               	movwf	postinc1,c
 12686  013134  0EF5               	movlw	low STR_93
 12687  013136  6EE6               	movwf	postinc1,c
 12688  013138  0EFF               	movlw	high STR_93
 12689  01313A  6EE6               	movwf	postinc1,c
 12690                           
 12691                           ;stkvar	_fmt @ sp[(-36)+-4]
 12692  01313C  0ED8               	movlw	-40
 12693  01313E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12694  013144  0ED9               	movlw	-39
 12695  013146  006F FF8F FFDA     	movff	plusw1,fsr2h
 12696  01314C  006F FF78  F00B    	movff	postinc2,btemp+10
 12697  013152  006F FF74  F00C    	movff	postdec2,btemp+11
 12698  013158  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12699  01315E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12700  013164  ECB1  F0BE         	call	_strncmp	;wreg free
 12701  013168  5001               	movf	btemp^0,w,c
 12702  01316A  1002               	iorwf	(btemp+1)^0,w,c
 12703  01316C  B4D8               	btfsc	status,2,c
 12704  01316E  D022               	goto	u12180
 12705  013170  0E02               	movlw	2
 12706  013172  6EE6               	movwf	postinc1,c
 12707  013174  0E00               	movlw	0
 12708  013176  6EE6               	movwf	postinc1,c
 12709  013178  0EE6               	movlw	low STR_97
 12710  01317A  6EE6               	movwf	postinc1,c
 12711  01317C  0EFF               	movlw	high STR_97
 12712  01317E  6EE6               	movwf	postinc1,c
 12713                           
 12714                           ;stkvar	_fmt @ sp[(-36)+-4]
 12715  013180  0ED8               	movlw	-40
 12716  013182  006F FF8F FFD9     	movff	plusw1,fsr2l
 12717  013188  0ED9               	movlw	-39
 12718  01318A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12719  013190  006F FF78  F00B    	movff	postinc2,btemp+10
 12720  013196  006F FF74  F00C    	movff	postdec2,btemp+11
 12721  01319C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12722  0131A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12723  0131A8  ECB1  F0BE         	call	_strncmp	;wreg free
 12724  0131AC  5001               	movf	btemp^0,w,c
 12725  0131AE  1002               	iorwf	(btemp+1)^0,w,c
 12726  0131B0  A4D8               	btfss	status,2,c
 12727  0131B2  D058               	goto	l12475
 12728  0131B4                     u12180:
 12729                           
 12730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12731                           ;stkvar	_fmt @ sp[(-32)+-4]
 12732  0131B4  0EDC               	movlw	-36
 12733  0131B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12734  0131BC  0EDD               	movlw	-35
 12735  0131BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12736  0131C4  006F FF78  F00B    	movff	postinc2,btemp+10
 12737  0131CA  006F FF74  F00C    	movff	postdec2,btemp+11
 12738  0131D0  0E01               	movlw	1
 12739  0131D2  260B               	addwf	(btemp+10)^0,f,c
 12740  0131D4  0E00               	movlw	0
 12741  0131D6  220C               	addwfc	(btemp+11)^0,f,c
 12742  0131D8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12743  0131DE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12744  0131E4                     	if	0	;tblptru may be non-zero
 12745  0131E4                     	endif
 12746  0131E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12747  0131E4  0E00               	movlw	low (__mediumconst shr (0+16))
 12748  0131E6  6EF8               	movwf	tblptru,c
 12749  0131E8                     	endif
 12750                           
 12751                           ;stkvar	_c @ sp[(-32)+31]
 12752  0131E8  0008               	tblrd		*
 12753  0131EA  0EFF               	movlw	-1
 12754  0131EC  006F FFD7 FFE3     	movff	tablat,plusw1
 12755                           
 12756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12757                           ;stkvar	_fmt @ sp[(-32)+-4]
 12758  0131F2  0EDC               	movlw	-36
 12759  0131F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12760  0131FA  0EDD               	movlw	-35
 12761  0131FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12762  013202  0E02               	movlw	2
 12763  013204  26DE               	addwf	postinc2,f,c
 12764  013206  0E00               	movlw	0
 12765  013208  22DD               	addwfc	postdec2,f,c
 12766                           
 12767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12768                           ;stkvar	_ap @ sp[(-32)+-6]
 12769  01320A  0EDA               	movlw	-38
 12770  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12771  013212  0EDB               	movlw	-37
 12772  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 12773  01321A  0E04               	movlw	4
 12774  01321C  5EDE               	subwf	postinc2,f,c
 12775  01321E  0E00               	movlw	0
 12776  013220  5ADD               	subwfb	postdec2,f,c
 12777  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 12778  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 12779  01322E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12780  013234  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12781  01323A  006F FF78  F009    	movff	postinc2,btemp+8
 12782  013240  006F FF78  F00A    	movff	postinc2,btemp+9
 12783  013246  006F FF78  F00B    	movff	postinc2,btemp+10
 12784  01324C  006F FF78  F00C    	movff	postinc2,btemp+11
 12785  013252  5009               	movf	(btemp+8)^0,w,c
 12786  013254  6E11               	movwf	(btemp+16)^0,c
 12787  013256  500A               	movf	(btemp+9)^0,w,c
 12788  013258  6E12               	movwf	(btemp+17)^0,c
 12789  01325A  500B               	movf	(btemp+10)^0,w,c
 12790  01325C  6E13               	movwf	(btemp+18)^0,c
 12791  01325E  500C               	movf	(btemp+11)^0,w,c
 12792  013260  6E14               	movwf	(btemp+19)^0,c
 12793  013262  D714               	goto	L11
 12794  013264                     l12475:
 12795                           
 12796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12797                           ;stkvar	_fmt @ sp[(-32)+-4]
 12798  013264  0EDC               	movlw	-36
 12799  013266  006F FF8F FFD9     	movff	plusw1,fsr2l
 12800  01326C  0EDD               	movlw	-35
 12801  01326E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12802  013274  006F FF7B FFF6     	movff	postinc2,tblptrl
 12803  01327A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12804  013280                     	if	0	;tblptru may be non-zero
 12805  013280                     	endif
 12806  013280                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12807  013280  0E00               	movlw	low (__mediumconst shr (0+16))
 12808  013282  6EF8               	movwf	tblptru,c
 12809  013284                     	endif
 12810  013284  0008               	tblrd		*
 12811  013286  50F5               	movf	tablat,w,c
 12812  013288  0A25               	xorlw	37
 12813  01328A  A4D8               	btfss	status,2,c
 12814  01328C  D01A               	goto	l12485
 12815                           
 12816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12817                           ;stkvar	_fmt @ sp[(-32)+-4]
 12818  01328E  0EDC               	movlw	-36
 12819  013290  006F FF8F FFD9     	movff	plusw1,fsr2l
 12820  013296  0EDD               	movlw	-35
 12821  013298  006F FF8F FFDA     	movff	plusw1,fsr2h
 12822  01329E  2ADE               	incf	postinc2,f,c
 12823  0132A0  0E00               	movlw	0
 12824  0132A2  22DD               	addwfc	postdec2,f,c
 12825                           
 12826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12827                           ;stkvar	_fp @ sp[(-32)+-2]
 12828  0132A4  0EDE               	movlw	-34
 12829  0132A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12830  0132AC  006F FF8F FFE6     	movff	plusw1,postinc1
 12831  0132B2  0E25               	movlw	37
 12832  0132B4  6EE6               	movwf	postinc1,c
 12833  0132B6  0E00               	movlw	0
 12834  0132B8  6EE6               	movwf	postinc1,c
 12835  0132BA  EC64  F0CA         	call	_fputc	;wreg free
 12836  0132BE                     l12481:
 12837                           
 12838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12839  0132BE  0E01               	movlw	1
 12840  0132C0  D00C               	goto	L12
 12841  0132C2                     l12485:
 12842                           
 12843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12844                           ;stkvar	_fmt @ sp[(-32)+-4]
 12845  0132C2  0EDC               	movlw	-36
 12846  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12847  0132CA  0EDD               	movlw	-35
 12848  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12849  0132D2  2ADE               	incf	postinc2,f,c
 12850  0132D4  0E00               	movlw	0
 12851  0132D6  22DD               	addwfc	postdec2,f,c
 12852                           
 12853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12854  0132D8  0E00               	movlw	0
 12855  0132DA                     L12:
 12856  0132DA  6E01               	movwf	btemp^0,c
 12857  0132DC  0E00               	movlw	0
 12858  0132DE  6E02               	movwf	(btemp+1)^0,c
 12859  0132E0  D02A               	goto	l2367
 12860  0132E2                     l12491:
 12861                           
 12862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12863                           ;stkvar	_fp @ sp[(-32)+-2]
 12864  0132E2  0EDE               	movlw	-34
 12865  0132E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12866  0132EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12867                           
 12868                           ;stkvar	_fmt @ sp[(-34)+-4]
 12869  0132F0  0EDA               	movlw	-38
 12870  0132F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12871  0132F8  0EDB               	movlw	-37
 12872  0132FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12873  013300  006F FF7B FFF6     	movff	postinc2,tblptrl
 12874  013306  006F FF77 FFF7     	movff	postdec2,tblptrh
 12875  01330C                     	if	0	;tblptru may be non-zero
 12876  01330C                     	endif
 12877  01330C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12878  01330C  0E00               	movlw	low (__mediumconst shr (0+16))
 12879  01330E  6EF8               	movwf	tblptru,c
 12880  013310                     	endif
 12881  013310  0008               	tblrd		*
 12882  013312  50F5               	movf	tablat,w,c
 12883  013314  6EE6               	movwf	postinc1,c
 12884  013316  0E00               	movlw	0
 12885  013318  6EE6               	movwf	postinc1,c
 12886  01331A  EC64  F0CA         	call	_fputc	;wreg free
 12887                           
 12888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12889                           ;stkvar	_fmt @ sp[(-32)+-4]
 12890  01331E  0EDC               	movlw	-36
 12891  013320  006F FF8F FFD9     	movff	plusw1,fsr2l
 12892  013326  0EDD               	movlw	-35
 12893  013328  006F FF8F FFDA     	movff	plusw1,fsr2h
 12894  01332E  2ADE               	incf	postinc2,f,c
 12895  013330  0E00               	movlw	0
 12896  013332  22DD               	addwfc	postdec2,f,c
 12897  013334  D7C4               	goto	l12481
 12898  013336                     l2367:
 12899                           
 12900                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12901  013336  0EDA               	movlw	218
 12902  013338  26E1               	addwf	fsr1l,f,c
 12903  01333A  0EFF               	movlw	255
 12904  01333C  22E2               	addwfc	fsr1h,f,c
 12905  01333E  0012               	return		;funcret
 12906  013340                     __end_of_vfpfcnvrt:
 12907                           	opt callstack 0
 12908                           
 12909 ;; *************** function _xtoa *****************
 12910 ;; Defined at:
 12911 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12914 ;;		 -> f(6), NULL(0), 
 12915 ;;  d               8  [STACK] unsigned long long 
 12916 ;;  x               1  [STACK] unsigned char 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;  n               8  [STACK] unsigned long long 
 12919 ;;  c               2  [STACK] int 
 12920 ;;  i               2  [STACK] int 
 12921 ;;  w               2  [STACK] int 
 12922 ;;  p               2  [STACK] int 
 12923 ;; Return value:  Size  Location     Type
 12924 ;;                  2  [STACK] int 
 12925 ;; Registers used:
 12926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12927 ;; Tracked objects:
 12928 ;;		On entry : 0/0
 12929 ;;		On exit  : 0/0
 12930 ;;		Unchanged: 0/0
 12931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;Total ram usage:        0 bytes
 12937 ;; Hardware stack levels used:    1
 12938 ;; Hardware stack levels required when called:   20
 12939 ;; This function calls:
 12940 ;;		_isalpha
 12941 ;;		_isupper
 12942 ;;		_pad
 12943 ;;		_toupper
 12944 ;; This function is called by:
 12945 ;;		_vfpfcnvrt
 12946 ;; This function uses a reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text46
 12950  015DFC                     __ptext46:
 12951                           	opt callstack 0
 12952  015DFC                     _xtoa:
 12953                           	opt callstack 0
 12954                           
 12955                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12956  015DFC  0E14               	movlw	20
 12957  015DFE  26E1               	addwf	fsr1l,f,c
 12958  015E00  0E00               	movlw	0
 12959  015E02  22E2               	addwfc	fsr1h,f,c
 12960                           
 12961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12962                           
 12963                           ;incstack = 0
 12964 ;; hardware stack exceeded
 12965  015E04  AE3D               	btfss	(_prec+1)^0,7,c
 12966                           
 12967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12968  015E06  923E               	bcf	_flags^0,1,c
 12969                           
 12970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12971  015E08  BE3D               	btfsc	(_prec+1)^0,7,c
 12972  015E0A  D005               	goto	u11710
 12973  015E0C  503D               	movf	(_prec+1)^0,w,c
 12974  015E0E  E110               	bnz	l12215
 12975  015E10  043C               	decf	_prec^0,w,c
 12976  015E12  B0D8               	btfsc	status,0,c
 12977  015E14  D00D               	goto	l12215
 12978  015E16                     u11710:
 12979  015E16  0E01               	movlw	1
 12980  015E18  6E0B               	movwf	(btemp+10)^0,c
 12981  015E1A  0E00               	movlw	0
 12982  015E1C  6E0C               	movwf	(btemp+11)^0,c
 12983                           
 12984                           ;stkvar	_p @ sp[(-20)+18]
 12985  015E1E  0EFE               	movlw	-2
 12986  015E20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12987  015E26  0EFF               	movlw	-1
 12988  015E28  0060  F033  FFE3   	movff	btemp+11,plusw1
 12989  015E2E  D008               	goto	l2317
 12990  015E30                     l12215:
 12991                           
 12992                           ;stkvar	_p @ sp[(-20)+18]
 12993  015E30  0EFE               	movlw	-2
 12994  015E32  0060  F0F3  FFE3   	movff	_prec,plusw1
 12995  015E38  0EFF               	movlw	-1
 12996  015E3A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 12997  015E40                     l2317:
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13000                           ;stkvar	_w @ sp[(-20)+16]
 13001  015E40  0EFC               	movlw	-4
 13002  015E42  0060  F0EB  FFE3   	movff	_width,plusw1
 13003  015E48  0EFD               	movlw	-3
 13004  015E4A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13005                           
 13006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13007  015E50  A83E               	btfss	_flags^0,4,c
 13008  015E52  D00B               	goto	l12221
 13009                           
 13010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13011                           ;stkvar	_w @ sp[(-20)+16]
 13012  015E54  50E1               	movf	fsr1l,w,c
 13013  015E56  0FFC               	addlw	-4
 13014  015E58  6ED9               	movwf	fsr2l,c
 13015  015E5A  50E2               	movf	fsr1h,w,c
 13016  015E5C  6EDA               	movwf	fsr2h,c
 13017  015E5E  0EFF               	movlw	255
 13018  015E60  22DA               	addwfc	fsr2h,f,c
 13019  015E62  0EFE               	movlw	254
 13020  015E64  26DE               	addwf	postinc2,f,c
 13021  015E66  0EFF               	movlw	255
 13022  015E68  22DD               	addwfc	postdec2,f,c
 13023  015E6A                     l12221:
 13024                           
 13025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13026                           ;stkvar	_d @ sp[(-20)+-10]
 13027  015E6A  0EE2               	movlw	226
 13028  015E6C  24E1               	addwf	fsr1l,w,c
 13029  015E6E  6ED9               	movwf	fsr2l,c
 13030  015E70  0EFF               	movlw	255
 13031  015E72  20E2               	addwfc	fsr1h,w,c
 13032  015E74  6EDA               	movwf	fsr2h,c
 13033                           
 13034                           ;stkvar	_n @ sp[(-20)+4]
 13035  015E76  0E08               	movlw	8
 13036  015E78  6E01               	movwf	btemp^0,c
 13037  015E7A  0EF0               	movlw	-16
 13038  015E7C                     us1173999:
 13039  015E7C  006F FF7B FFE3     	movff	postinc2,plusw1
 13040  015E82  28E8               	incf	wreg,w,c
 13041  015E84  2E01               	decfsz	btemp^0,f,c
 13042  015E86  D7FA               	bra	us1173999
 13043                           
 13044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13045  015E88  0E4F               	movlw	79
 13046  015E8A  6E0B               	movwf	(btemp+10)^0,c
 13047  015E8C  0E00               	movlw	0
 13048  015E8E  6E0C               	movwf	(btemp+11)^0,c
 13049                           
 13050                           ;stkvar	_i @ sp[(-20)+14]
 13051  015E90  0EFA               	movlw	-6
 13052  015E92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13053  015E98  0EFB               	movlw	-5
 13054  015E9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13055                           
 13056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13057  015EA0  0102               	movlb	2	; () banked
 13058  015EA2  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13059                           
 13060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13061  015EA4  D0EE               	goto	l12259
 13062  015EA6                     l12227:
 13063                           
 13064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13065                           ;stkvar	_i @ sp[(-20)+14]
 13066  015EA6  50E1               	movf	fsr1l,w,c
 13067  015EA8  0FFA               	addlw	-6
 13068  015EAA  6ED9               	movwf	fsr2l,c
 13069  015EAC  50E2               	movf	fsr1h,w,c
 13070  015EAE  6EDA               	movwf	fsr2h,c
 13071  015EB0  0EFF               	movlw	255
 13072  015EB2  22DA               	addwfc	fsr2h,f,c
 13073  015EB4  06DE               	decf	postinc2,f,c
 13074  015EB6  0E00               	movlw	0
 13075  015EB8  5ADD               	subwfb	postdec2,f,c
 13076                           
 13077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13078                           ;stkvar	_n @ sp[(-20)+4]
 13079  015EBA  0EF0               	movlw	-16
 13080  015EBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13081  015EC2  0EF1               	movlw	-15
 13082  015EC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13083  015ECA  0E0F               	movlw	15
 13084  015ECC  160B               	andwf	(btemp+10)^0,f,c
 13085  015ECE  0E00               	movlw	0
 13086  015ED0  160C               	andwf	(btemp+11)^0,f,c
 13087                           
 13088                           ;stkvar	_c @ sp[(-20)+12]
 13089  015ED2  0EF8               	movlw	-8
 13090  015ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13091  015EDA  0EF9               	movlw	-7
 13092  015EDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13093                           
 13094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13095                           ;stkvar	_c @ sp[(-20)+12]
 13096  015EE2  0EF9               	movlw	-7
 13097  015EE4  BEE3               	btfsc	plusw1,7,c
 13098  015EE6  D00F               	goto	l12235
 13099  015EE8  0EF9               	movlw	-7
 13100  015EEA  50E3               	movf	plusw1,w,c
 13101  015EEC  E108               	bnz	u11740
 13102  015EEE  0EF8               	movlw	-8
 13103  015EF0  006F FF8C  F001    	movff	plusw1,btemp
 13104  015EF6  0E0A               	movlw	10
 13105  015EF8  5E01               	subwf	btemp^0,f,c
 13106  015EFA  A0D8               	btfss	status,0,c
 13107  015EFC  D004               	goto	l12235
 13108  015EFE                     u11740:
 13109                           
 13110                           ;stkvar	_c @ sp[(-20)+12]
 13111  015EFE  0EF8               	movlw	-8
 13112  015F00  50E3               	movf	plusw1,w,c
 13113  015F02  0F57               	addlw	87
 13114  015F04  D003               	goto	L13
 13115  015F06                     l12235:
 13116                           
 13117                           ;stkvar	_c @ sp[(-20)+12]
 13118  015F06  0EF8               	movlw	-8
 13119  015F08  50E3               	movf	plusw1,w,c
 13120  015F0A  0F30               	addlw	48
 13121  015F0C                     L13:
 13122  015F0C  6E0B               	movwf	(btemp+10)^0,c
 13123  015F0E  0EF9               	movlw	-7
 13124  015F10  006F FF8C  F00C    	movff	plusw1,btemp+11
 13125  015F16  0E00               	movlw	0
 13126  015F18  220C               	addwfc	(btemp+11)^0,f,c
 13127                           
 13128                           ;stkvar	_c @ sp[(-20)+12]
 13129  015F1A  0EF8               	movlw	-8
 13130  015F1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13131  015F22  0EF9               	movlw	-7
 13132  015F24  0060  F033  FFE3   	movff	btemp+11,plusw1
 13133  015F2A  0EBF               	movlw	191
 13134  015F2C  6E0B               	movwf	(btemp+10)^0,c
 13135  015F2E  0EFF               	movlw	255
 13136  015F30  6E0C               	movwf	(btemp+11)^0,c
 13137                           
 13138                           ;stkvar	_x @ sp[(-20)+-11]
 13139  015F32  0EE1               	movlw	-31
 13140  015F34  50E3               	movf	plusw1,w,c
 13141  015F36  6E09               	movwf	(btemp+8)^0,c
 13142  015F38  6A0A               	clrf	(btemp+9)^0,c
 13143  015F3A  500B               	movf	(btemp+10)^0,w,c
 13144  015F3C  2609               	addwf	(btemp+8)^0,f,c
 13145  015F3E  500C               	movf	(btemp+11)^0,w,c
 13146  015F40  220A               	addwfc	(btemp+9)^0,f,c
 13147  015F42  500A               	movf	(btemp+9)^0,w,c
 13148  015F44  E106               	bnz	u11750
 13149  015F46  0E1A               	movlw	26
 13150  015F48  5C09               	subwf	(btemp+8)^0,w,c
 13151  015F4A  B0D8               	btfsc	status,0,c
 13152  015F4C  D002               	goto	u11750
 13153  015F4E  0E01               	movlw	1
 13154  015F50  D001               	goto	u11760
 13155  015F52                     u11750:
 13156  015F52  0E00               	movlw	0
 13157  015F54                     u11760:
 13158  015F54  6E0B               	movwf	(btemp+10)^0,c
 13159  015F56  6A0C               	clrf	(btemp+11)^0,c
 13160                           
 13161                           ;stkvar	_xtoa$5532 @ sp[(-20)+2]
 13162  015F58  0EEE               	movlw	-18
 13163  015F5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13164  015F60  0EEF               	movlw	-17
 13165  015F62  0060  F033  FFE3   	movff	btemp+11,plusw1
 13166                           
 13167                           ;stkvar	_xtoa$5532 @ sp[(-20)+2]
 13168  015F68  0EEE               	movlw	-18
 13169  015F6A  006F FF8C  F001    	movff	plusw1,btemp
 13170  015F70  0EEF               	movlw	-17
 13171  015F72  50E3               	movf	plusw1,w,c
 13172  015F74  1001               	iorwf	btemp^0,w,c
 13173  015F76  B4D8               	btfsc	status,2,c
 13174  015F78  D041               	goto	l12251
 13175  015F7A  0E9F               	movlw	159
 13176  015F7C  6E0B               	movwf	(btemp+10)^0,c
 13177  015F7E  0EFF               	movlw	255
 13178  015F80  6E0C               	movwf	(btemp+11)^0,c
 13179                           
 13180                           ;stkvar	_c @ sp[(-20)+12]
 13181  015F82  0EF8               	movlw	-8
 13182  015F84  006F FF8C  F009    	movff	plusw1,btemp+8
 13183  015F8A  0EF9               	movlw	-7
 13184  015F8C  006F FF8C  F00A    	movff	plusw1,btemp+9
 13185  015F92  0E20               	movlw	32
 13186  015F94  1209               	iorwf	(btemp+8)^0,f,c
 13187  015F96  0E00               	movlw	0
 13188  015F98  120A               	iorwf	(btemp+9)^0,f,c
 13189  015F9A  500B               	movf	(btemp+10)^0,w,c
 13190  015F9C  2609               	addwf	(btemp+8)^0,f,c
 13191  015F9E  500C               	movf	(btemp+11)^0,w,c
 13192  015FA0  220A               	addwfc	(btemp+9)^0,f,c
 13193  015FA2  500A               	movf	(btemp+9)^0,w,c
 13194  015FA4  E106               	bnz	u11780
 13195  015FA6  0E1A               	movlw	26
 13196  015FA8  5C09               	subwf	(btemp+8)^0,w,c
 13197  015FAA  B0D8               	btfsc	status,0,c
 13198  015FAC  D002               	goto	u11780
 13199  015FAE  0E01               	movlw	1
 13200  015FB0  D001               	goto	u11790
 13201  015FB2                     u11780:
 13202  015FB2  0E00               	movlw	0
 13203  015FB4                     u11790:
 13204  015FB4  6E0B               	movwf	(btemp+10)^0,c
 13205  015FB6  6A0C               	clrf	(btemp+11)^0,c
 13206                           
 13207                           ;stkvar	_xtoa$5533 @ sp[(-20)+0]
 13208  015FB8  0EEC               	movlw	-20
 13209  015FBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13210  015FC0  0EED               	movlw	-19
 13211  015FC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13212                           
 13213                           ;stkvar	_xtoa$5533 @ sp[(-20)+0]
 13214  015FC8  0EEC               	movlw	-20
 13215  015FCA  006F FF8C  F001    	movff	plusw1,btemp
 13216  015FD0  0EED               	movlw	-19
 13217  015FD2  50E3               	movf	plusw1,w,c
 13218  015FD4  1001               	iorwf	btemp^0,w,c
 13219  015FD6  B4D8               	btfsc	status,2,c
 13220  015FD8  D011               	goto	l12251
 13221                           
 13222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13223                           ;stkvar	_c @ sp[(-20)+12]
 13224  015FDA  0EF8               	movlw	-8
 13225  015FDC  006F FF8F FFE6     	movff	plusw1,postinc1
 13226  015FE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13227  015FE8  EC9C  F0D4         	call	_toupper	;wreg free
 13228                           
 13229                           ;stkvar	_c @ sp[(-20)+12]
 13230  015FEC  0EF8               	movlw	-8
 13231  015FEE  0060  F007  FFE3   	movff	btemp,plusw1
 13232  015FF4  0EF9               	movlw	-7
 13233  015FF6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13234  015FFC                     l12251:
 13235                           
 13236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13237                           ;stkvar	_c @ sp[(-20)+12]
 13238                           ;stkvar	_i @ sp[(-20)+14]
 13239  015FFC  0EFA               	movlw	-6
 13240  015FFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13241  016004  0EFB               	movlw	-5
 13242  016006  006F FF8C  F00C    	movff	plusw1,btemp+11
 13243  01600C  0E97               	movlw	low _dbuf
 13244  01600E  240B               	addwf	(btemp+10)^0,w,c
 13245  016010  6ED9               	movwf	fsr2l,c
 13246  016012  0E02               	movlw	high _dbuf
 13247  016014  200C               	addwfc	(btemp+11)^0,w,c
 13248  016016  6EDA               	movwf	fsr2h,c
 13249  016018  0EF8               	movlw	-8
 13250  01601A  006F FF8F FFDF     	movff	plusw1,indf2
 13251                           
 13252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13253                           ;stkvar	_p @ sp[(-20)+18]
 13254  016020  50E1               	movf	fsr1l,w,c
 13255  016022  0FFE               	addlw	-2
 13256  016024  6ED9               	movwf	fsr2l,c
 13257  016026  50E2               	movf	fsr1h,w,c
 13258  016028  6EDA               	movwf	fsr2h,c
 13259  01602A  0EFF               	movlw	255
 13260  01602C  22DA               	addwfc	fsr2h,f,c
 13261  01602E  06DE               	decf	postinc2,f,c
 13262  016030  0E00               	movlw	0
 13263  016032  5ADD               	subwfb	postdec2,f,c
 13264                           
 13265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13266                           ;stkvar	_w @ sp[(-20)+16]
 13267  016034  50E1               	movf	fsr1l,w,c
 13268  016036  0FFC               	addlw	-4
 13269  016038  6ED9               	movwf	fsr2l,c
 13270  01603A  50E2               	movf	fsr1h,w,c
 13271  01603C  6EDA               	movwf	fsr2h,c
 13272  01603E  0EFF               	movlw	255
 13273  016040  22DA               	addwfc	fsr2h,f,c
 13274  016042  06DE               	decf	postinc2,f,c
 13275  016044  0E00               	movlw	0
 13276  016046  5ADD               	subwfb	postdec2,f,c
 13277                           
 13278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13279  016048  0E04               	movlw	4
 13280  01604A  6E0C               	movwf	(btemp+11)^0,c
 13281                           
 13282                           ;stkvar	_n @ sp[(-20)+4]
 13283  01604C  50E1               	movf	fsr1l,w,c
 13284  01604E  0FF0               	addlw	-16
 13285  016050  6ED9               	movwf	fsr2l,c
 13286  016052  50E2               	movf	fsr1h,w,c
 13287  016054  6EDA               	movwf	fsr2h,c
 13288  016056  0EFF               	movlw	255
 13289  016058  22DA               	addwfc	fsr2h,f,c
 13290  01605A  280C               	incf	(btemp+11)^0,w,c
 13291  01605C  52DE               	movf	postinc2,f,c
 13292  01605E  D00F               	goto	u11810
 13293  016060                     u11815:
 13294  016060  52DE               	movf	postinc2,f,c
 13295  016062  52DE               	movf	postinc2,f,c
 13296  016064  52DE               	movf	postinc2,f,c
 13297  016066  52DE               	movf	postinc2,f,c
 13298  016068  52DE               	movf	postinc2,f,c
 13299  01606A  52DE               	movf	postinc2,f,c
 13300  01606C  90D8               	bcf	status,0,c
 13301  01606E  32DD               	rrcf	postdec2,f,c
 13302  016070  32DD               	rrcf	postdec2,f,c
 13303  016072  32DD               	rrcf	postdec2,f,c
 13304  016074  32DD               	rrcf	postdec2,f,c
 13305  016076  32DD               	rrcf	postdec2,f,c
 13306  016078  32DD               	rrcf	postdec2,f,c
 13307  01607A  32DD               	rrcf	postdec2,f,c
 13308  01607C  32DE               	rrcf	postinc2,f,c
 13309  01607E                     u11810:
 13310  01607E  2EE8               	decfsz	wreg,f,c
 13311  016080  D7EF               	goto	u11815
 13312  016082                     l12259:
 13313                           
 13314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13315                           ;stkvar	_i @ sp[(-20)+14]
 13316  016082  0EFB               	movlw	-5
 13317  016084  BEE3               	btfsc	plusw1,7,c
 13318  016086  D03A               	goto	u11860
 13319  016088  0EFB               	movlw	-5
 13320  01608A  50E3               	movf	plusw1,w,c
 13321  01608C  E108               	bnz	u11820
 13322  01608E  0EFA               	movlw	-6
 13323  016090  006F FF8C  F001    	movff	plusw1,btemp
 13324  016096  0E02               	movlw	2
 13325  016098  5E01               	subwf	btemp^0,f,c
 13326  01609A  A0D8               	btfss	status,0,c
 13327  01609C  D02F               	goto	u11860
 13328  01609E                     u11820:
 13329                           
 13330                           ;stkvar	_n @ sp[(-20)+4]
 13331  01609E  0EF0               	movlw	-16
 13332  0160A0  50E3               	movf	plusw1,w,c
 13333  0160A2  E115               	bnz	u11831
 13334  0160A4  0EF1               	movlw	-15
 13335  0160A6  50E3               	movf	plusw1,w,c
 13336  0160A8  E112               	bnz	u11831
 13337  0160AA  0EF2               	movlw	-14
 13338  0160AC  50E3               	movf	plusw1,w,c
 13339  0160AE  E10F               	bnz	u11831
 13340  0160B0  0EF3               	movlw	-13
 13341  0160B2  50E3               	movf	plusw1,w,c
 13342  0160B4  E10C               	bnz	u11831
 13343  0160B6  0EF4               	movlw	-12
 13344  0160B8  50E3               	movf	plusw1,w,c
 13345  0160BA  E109               	bnz	u11831
 13346  0160BC  0EF5               	movlw	-11
 13347  0160BE  50E3               	movf	plusw1,w,c
 13348  0160C0  E106               	bnz	u11831
 13349  0160C2  0EF6               	movlw	-10
 13350  0160C4  50E3               	movf	plusw1,w,c
 13351  0160C6  E103               	bnz	u11831
 13352  0160C8  0EF7               	movlw	-9
 13353  0160CA  50E3               	movf	plusw1,w,c
 13354  0160CC  A4D8               	btfss	status,2,c
 13355  0160CE                     u11831:
 13356  0160CE  D6EB               	goto	l12227
 13357                           
 13358                           ;stkvar	_p @ sp[(-20)+18]
 13359  0160D0  0EFF               	movlw	-1
 13360  0160D2  BEE3               	btfsc	plusw1,7,c
 13361  0160D4  D007               	goto	u11840
 13362  0160D6  0EFF               	movlw	-1
 13363  0160D8  50E3               	movf	plusw1,w,c
 13364  0160DA  E103               	bnz	u11841
 13365  0160DC  0EFE               	movlw	-2
 13366  0160DE  04E3               	decf	plusw1,w,c
 13367  0160E0  B0D8               	btfsc	status,0,c
 13368  0160E2                     u11841:
 13369  0160E2  D6E1               	goto	l12227
 13370  0160E4                     u11840:
 13371                           
 13372                           ;stkvar	_w @ sp[(-20)+16]
 13373  0160E4  0EFD               	movlw	-3
 13374  0160E6  BEE3               	btfsc	plusw1,7,c
 13375  0160E8  D009               	goto	u11860
 13376  0160EA  0EFD               	movlw	-3
 13377  0160EC  50E3               	movf	plusw1,w,c
 13378  0160EE  E104               	bnz	u11850
 13379  0160F0  0EFC               	movlw	-4
 13380  0160F2  04E3               	decf	plusw1,w,c
 13381  0160F4  A0D8               	btfss	status,0,c
 13382  0160F6  D002               	goto	u11860
 13383  0160F8                     u11850:
 13384  0160F8  B23E               	btfsc	_flags^0,1,c
 13385  0160FA  D6D5               	goto	l12227
 13386  0160FC                     u11860:
 13387                           
 13388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13389  0160FC  A83E               	btfss	_flags^0,4,c
 13390  0160FE  D036               	goto	l12275
 13391                           
 13392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13393                           ;stkvar	_i @ sp[(-20)+14]
 13394  016100  50E1               	movf	fsr1l,w,c
 13395  016102  0FFA               	addlw	-6
 13396  016104  6ED9               	movwf	fsr2l,c
 13397  016106  50E2               	movf	fsr1h,w,c
 13398  016108  6EDA               	movwf	fsr2h,c
 13399  01610A  0EFF               	movlw	255
 13400  01610C  22DA               	addwfc	fsr2h,f,c
 13401  01610E  06DE               	decf	postinc2,f,c
 13402  016110  0E00               	movlw	0
 13403  016112  5ADD               	subwfb	postdec2,f,c
 13404                           
 13405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13406                           ;stkvar	_x @ sp[(-20)+-11]
 13407                           ;stkvar	_i @ sp[(-20)+14]
 13408  016114  0EFA               	movlw	-6
 13409  016116  006F FF8C  F00B    	movff	plusw1,btemp+10
 13410  01611C  0EFB               	movlw	-5
 13411  01611E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13412  016124  0E97               	movlw	low _dbuf
 13413  016126  240B               	addwf	(btemp+10)^0,w,c
 13414  016128  6ED9               	movwf	fsr2l,c
 13415  01612A  0E02               	movlw	high _dbuf
 13416  01612C  200C               	addwfc	(btemp+11)^0,w,c
 13417  01612E  6EDA               	movwf	fsr2h,c
 13418  016130  0EE1               	movlw	-31
 13419  016132  006F FF8F FFDF     	movff	plusw1,indf2
 13420                           
 13421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13422                           ;stkvar	_i @ sp[(-20)+14]
 13423  016138  50E1               	movf	fsr1l,w,c
 13424  01613A  0FFA               	addlw	-6
 13425  01613C  6ED9               	movwf	fsr2l,c
 13426  01613E  50E2               	movf	fsr1h,w,c
 13427  016140  6EDA               	movwf	fsr2h,c
 13428  016142  0EFF               	movlw	255
 13429  016144  22DA               	addwfc	fsr2h,f,c
 13430  016146  06DE               	decf	postinc2,f,c
 13431  016148  0E00               	movlw	0
 13432  01614A  5ADD               	subwfb	postdec2,f,c
 13433                           
 13434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13435                           ;stkvar	_i @ sp[(-20)+14]
 13436  01614C  0EFA               	movlw	-6
 13437  01614E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13438  016154  0EFB               	movlw	-5
 13439  016156  006F FF8C  F00C    	movff	plusw1,btemp+11
 13440  01615C  0E97               	movlw	low _dbuf
 13441  01615E  240B               	addwf	(btemp+10)^0,w,c
 13442  016160  6ED9               	movwf	fsr2l,c
 13443  016162  0E02               	movlw	high _dbuf
 13444  016164  200C               	addwfc	(btemp+11)^0,w,c
 13445  016166  6EDA               	movwf	fsr2h,c
 13446  016168  0E30               	movlw	48
 13447  01616A  6EDF               	movwf	indf2,c
 13448  01616C                     l12275:
 13449                           
 13450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13451                           ;stkvar	_w @ sp[(-20)+16]
 13452  01616C  0EFC               	movlw	-4
 13453  01616E  006F FF8F FFE6     	movff	plusw1,postinc1
 13454  016174  006F FF8F FFE6     	movff	plusw1,postinc1
 13455                           
 13456                           ;stkvar	_i @ sp[(-22)+14]
 13457  01617A  0E97               	movlw	low _dbuf
 13458  01617C  6E0B               	movwf	(btemp+10)^0,c
 13459  01617E  0E02               	movlw	high _dbuf
 13460  016180  6E0C               	movwf	(btemp+11)^0,c
 13461  016182  0EF8               	movlw	-8
 13462  016184  50E3               	movf	plusw1,w,c
 13463  016186  260B               	addwf	(btemp+10)^0,f,c
 13464  016188  0EF9               	movlw	-7
 13465  01618A  50E3               	movf	plusw1,w,c
 13466  01618C  220C               	addwfc	(btemp+11)^0,f,c
 13467  01618E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13468  016194  0060  F033  FFE6   	movff	btemp+11,postinc1
 13469                           
 13470                           ;stkvar	_fp @ sp[(-24)+-2]
 13471  01619A  0EE6               	movlw	-26
 13472  01619C  006F FF8F FFE6     	movff	plusw1,postinc1
 13473  0161A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13474  0161A8  EC0F  F0CC         	call	_pad	;wreg free
 13475                           
 13476                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13477  0161AC  0EE1               	movlw	225
 13478  0161AE  26E1               	addwf	fsr1l,f,c
 13479  0161B0  0EFF               	movlw	255
 13480  0161B2  22E2               	addwfc	fsr1h,f,c
 13481  0161B4  0012               	return		;funcret
 13482  0161B6                     __end_of_xtoa:
 13483                           	opt callstack 0
 13484                           
 13485 ;; *************** function _toupper *****************
 13486 ;; Defined at:
 13487 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  c               2  [STACK] int 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  2  [STACK] int 
 13494 ;; Registers used:
 13495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/2
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:   16
 13508 ;; This function calls:
 13509 ;;		_islower
 13510 ;; This function is called by:
 13511 ;;		_xtoa
 13512 ;; This function uses a reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text47
 13516  01A938                     __ptext47:
 13517                           	opt callstack 0
 13518  01A938                     _toupper:
 13519                           	opt callstack 0
 13520                           
 13521                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13522  01A938  52E6               	movf	postinc1,f,c
 13523  01A93A  52E6               	movf	postinc1,f,c
 13524                           
 13525                           ;stkvar	_c @ sp[(-2)+-2]
 13526                           
 13527                           ;incstack = 0
 13528 ;; hardware stack exceeded
 13529  01A93C  0EFC               	movlw	-4
 13530  01A93E  50E3               	movf	plusw1,w,c
 13531  01A940  0F9F               	addlw	159
 13532  01A942  6E0B               	movwf	(btemp+10)^0,c
 13533  01A944  0EFD               	movlw	-3
 13534  01A946  006F FF8C  F00C    	movff	plusw1,btemp+11
 13535  01A94C  0EFF               	movlw	255
 13536  01A94E  220C               	addwfc	(btemp+11)^0,f,c
 13537  01A950  500C               	movf	(btemp+11)^0,w,c
 13538  01A952  E106               	bnz	u6160
 13539  01A954  0E1A               	movlw	26
 13540  01A956  5C0B               	subwf	(btemp+10)^0,w,c
 13541  01A958  B0D8               	btfsc	status,0,c
 13542  01A95A  D002               	goto	u6160
 13543  01A95C  0E01               	movlw	1
 13544  01A95E  D001               	goto	u6170
 13545  01A960                     u6160:
 13546  01A960  0E00               	movlw	0
 13547  01A962                     u6170:
 13548  01A962  6E0B               	movwf	(btemp+10)^0,c
 13549  01A964  6A0C               	clrf	(btemp+11)^0,c
 13550                           
 13551                           ;stkvar	_toupper$6339 @ sp[(-2)+0]
 13552  01A966  0EFE               	movlw	-2
 13553  01A968  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13554  01A96E  0EFF               	movlw	-1
 13555  01A970  0060  F033  FFE3   	movff	btemp+11,plusw1
 13556                           
 13557                           ;stkvar	_toupper$6339 @ sp[(-2)+0]
 13558  01A976  0EFE               	movlw	-2
 13559  01A978  006F FF8C  F001    	movff	plusw1,btemp
 13560  01A97E  0EFF               	movlw	-1
 13561  01A980  50E3               	movf	plusw1,w,c
 13562  01A982  1001               	iorwf	btemp^0,w,c
 13563  01A984  B4D8               	btfsc	status,2,c
 13564  01A986  D00D               	goto	l7985
 13565                           
 13566                           ;stkvar	_c @ sp[(-2)+-2]
 13567  01A988  0EFC               	movlw	-4
 13568  01A98A  006F FF8C  F001    	movff	plusw1,btemp
 13569  01A990  0EFD               	movlw	-3
 13570  01A992  006F FF8C  F002    	movff	plusw1,btemp+1
 13571  01A998  0E5F               	movlw	95
 13572  01A99A  1601               	andwf	btemp^0,f,c
 13573  01A99C  0E00               	movlw	0
 13574  01A99E  1602               	andwf	(btemp+1)^0,f,c
 13575  01A9A0  D008               	goto	l3484
 13576  01A9A2                     l7985:
 13577                           
 13578                           ;stkvar	_c @ sp[(-2)+-2]
 13579  01A9A2  0EFC               	movlw	-4
 13580  01A9A4  006F FF8C  F001    	movff	plusw1,btemp
 13581  01A9AA  0EFD               	movlw	-3
 13582  01A9AC  006F FF8C  F002    	movff	plusw1,btemp+1
 13583  01A9B2                     l3484:
 13584                           
 13585                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13586  01A9B2  52E5               	movf	postdec1,f,c
 13587  01A9B4  52E5               	movf	postdec1,f,c
 13588  01A9B6  52E5               	movf	postdec1,f,c
 13589  01A9B8  52E5               	movf	postdec1,f,c
 13590  01A9BA  0012               	return		;funcret
 13591  01A9BC                     __end_of_toupper:
 13592                           	opt callstack 0
 13593                           
 13594 ;; *************** function _islower *****************
 13595 ;; Defined at:
 13596 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13597 ;; Parameters:    Size  Location     Type
 13598 ;;  c               2  [STACK] int 
 13599 ;; Auto vars:     Size  Location     Type
 13600 ;;		None
 13601 ;; Return value:  Size  Location     Type
 13602 ;;                  2  [STACK] int 
 13603 ;; Registers used:
 13604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13605 ;; Tracked objects:
 13606 ;;		On entry : 0/0
 13607 ;;		On exit  : 0/0
 13608 ;;		Unchanged: 0/0
 13609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13614 ;;Total ram usage:        0 bytes
 13615 ;; Hardware stack levels used:    1
 13616 ;; Hardware stack levels required when called:   15
 13617 ;; This function calls:
 13618 ;;		Nothing
 13619 ;; This function is called by:
 13620 ;;		_toupper
 13621 ;; This function uses a reentrant model
 13622 ;;
 13623                           
 13624                           	psect	text48
 13625  01B608                     __ptext48:
 13626                           	opt callstack 0
 13627  01B608                     _islower:
 13628                           	opt callstack 0
 13629                           
 13630                           ;stkvar	_c @ sp[(0)+-2]
 13631                           
 13632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13633                           ;incstack = 0
 13634 ;; hardware stack exceeded
 13635  01B608  0EFE               	movlw	-2
 13636  01B60A  50E3               	movf	plusw1,w,c
 13637  01B60C  0F9F               	addlw	159
 13638  01B60E  6E0B               	movwf	(btemp+10)^0,c
 13639  01B610  0EFF               	movlw	-1
 13640  01B612  006F FF8C  F00C    	movff	plusw1,btemp+11
 13641  01B618  0EFF               	movlw	255
 13642  01B61A  220C               	addwfc	(btemp+11)^0,f,c
 13643  01B61C  500C               	movf	(btemp+11)^0,w,c
 13644  01B61E  E106               	bnz	u5850
 13645  01B620  0E1A               	movlw	26
 13646  01B622  5C0B               	subwf	(btemp+10)^0,w,c
 13647  01B624  B0D8               	btfsc	status,0,c
 13648  01B626  D002               	goto	u5850
 13649  01B628  0E01               	movlw	1
 13650  01B62A  D001               	goto	u5860
 13651  01B62C                     u5850:
 13652  01B62C  0E00               	movlw	0
 13653  01B62E                     u5860:
 13654  01B62E  6E01               	movwf	btemp^0,c
 13655  01B630  6A02               	clrf	(btemp+1)^0,c
 13656                           
 13657                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13658  01B632  52E5               	movf	postdec1,f,c
 13659  01B634  52E5               	movf	postdec1,f,c
 13660  01B636  0012               	return		;funcret
 13661  01B638                     __end_of_islower:
 13662                           	opt callstack 0
 13663                           
 13664 ;; *************** function _isalpha *****************
 13665 ;; Defined at:
 13666 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;  c               2  [STACK] int 
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  2  [STACK] int 
 13673 ;; Registers used:
 13674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13684 ;;Total ram usage:        0 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:   15
 13687 ;; This function calls:
 13688 ;;		Nothing
 13689 ;; This function is called by:
 13690 ;;		_xtoa
 13691 ;; This function uses a reentrant model
 13692 ;;
 13693                           
 13694                           	psect	text49
 13695  01B256                     __ptext49:
 13696                           	opt callstack 0
 13697  01B256                     _isalpha:
 13698                           	opt callstack 0
 13699                           
 13700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13701                           ;incstack = 0
 13702 ;; hardware stack exceeded
 13703  01B256  0E9F               	movlw	159
 13704  01B258  6E0B               	movwf	(btemp+10)^0,c
 13705  01B25A  0EFF               	movlw	255
 13706  01B25C  6E0C               	movwf	(btemp+11)^0,c
 13707                           
 13708                           ;stkvar	_c @ sp[(0)+-2]
 13709  01B25E  0EFE               	movlw	-2
 13710  01B260  006F FF8C  F009    	movff	plusw1,btemp+8
 13711  01B266  0EFF               	movlw	-1
 13712  01B268  006F FF8C  F00A    	movff	plusw1,btemp+9
 13713  01B26E  0E20               	movlw	32
 13714  01B270  1209               	iorwf	(btemp+8)^0,f,c
 13715  01B272  0E00               	movlw	0
 13716  01B274  120A               	iorwf	(btemp+9)^0,f,c
 13717  01B276  500B               	movf	(btemp+10)^0,w,c
 13718  01B278  2609               	addwf	(btemp+8)^0,f,c
 13719  01B27A  500C               	movf	(btemp+11)^0,w,c
 13720  01B27C  220A               	addwfc	(btemp+9)^0,f,c
 13721  01B27E  500A               	movf	(btemp+9)^0,w,c
 13722  01B280  E106               	bnz	u6140
 13723  01B282  0E1A               	movlw	26
 13724  01B284  5C09               	subwf	(btemp+8)^0,w,c
 13725  01B286  B0D8               	btfsc	status,0,c
 13726  01B288  D002               	goto	u6140
 13727  01B28A  0E01               	movlw	1
 13728  01B28C  D001               	goto	u6150
 13729  01B28E                     u6140:
 13730  01B28E  0E00               	movlw	0
 13731  01B290                     u6150:
 13732  01B290  6E01               	movwf	btemp^0,c
 13733  01B292  6A02               	clrf	(btemp+1)^0,c
 13734                           
 13735                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13736  01B294  52E5               	movf	postdec1,f,c
 13737  01B296  52E5               	movf	postdec1,f,c
 13738  01B298  0012               	return		;funcret
 13739  01B29A                     __end_of_isalpha:
 13740                           	opt callstack 0
 13741                           
 13742 ;; *************** function _utoa *****************
 13743 ;; Defined at:
 13744 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13747 ;;		 -> f(6), NULL(0), 
 13748 ;;  d               8  [STACK] unsigned long long 
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;  n               8  [STACK] unsigned long long 
 13751 ;;  i               2  [STACK] int 
 13752 ;;  w               2  [STACK] int 
 13753 ;;  p               2  [STACK] int 
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  2  [STACK] int 
 13756 ;; Registers used:
 13757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13758 ;; Tracked objects:
 13759 ;;		On entry : 0/0
 13760 ;;		On exit  : 0/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13767 ;;Total ram usage:        0 bytes
 13768 ;; Hardware stack levels used:    1
 13769 ;; Hardware stack levels required when called:   20
 13770 ;; This function calls:
 13771 ;;		___lodiv
 13772 ;;		___lomod
 13773 ;;		_pad
 13774 ;; This function is called by:
 13775 ;;		_vfpfcnvrt
 13776 ;; This function uses a reentrant model
 13777 ;;
 13778                           
 13779                           	psect	text50
 13780  016522                     __ptext50:
 13781                           	opt callstack 0
 13782  016522                     _utoa:
 13783                           	opt callstack 0
 13784                           
 13785                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13786  016522  0E0E               	movlw	14
 13787  016524  26E1               	addwf	fsr1l,f,c
 13788  016526  0E00               	movlw	0
 13789  016528  22E2               	addwfc	fsr1h,f,c
 13790                           
 13791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13792                           
 13793                           ;incstack = 0
 13794 ;; hardware stack exceeded
 13795  01652A  AE3D               	btfss	(_prec+1)^0,7,c
 13796                           
 13797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13798  01652C  923E               	bcf	_flags^0,1,c
 13799                           
 13800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13801  01652E  BE3D               	btfsc	(_prec+1)^0,7,c
 13802  016530  D005               	goto	u11630
 13803  016532  503D               	movf	(_prec+1)^0,w,c
 13804  016534  E110               	bnz	l12175
 13805  016536  043C               	decf	_prec^0,w,c
 13806  016538  B0D8               	btfsc	status,0,c
 13807  01653A  D00D               	goto	l12175
 13808  01653C                     u11630:
 13809  01653C  0E01               	movlw	1
 13810  01653E  6E0B               	movwf	(btemp+10)^0,c
 13811  016540  0E00               	movlw	0
 13812  016542  6E0C               	movwf	(btemp+11)^0,c
 13813                           
 13814                           ;stkvar	_p @ sp[(-14)+12]
 13815  016544  0EFE               	movlw	-2
 13816  016546  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13817  01654C  0EFF               	movlw	-1
 13818  01654E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13819  016554  D008               	goto	l2302
 13820  016556                     l12175:
 13821                           
 13822                           ;stkvar	_p @ sp[(-14)+12]
 13823  016556  0EFE               	movlw	-2
 13824  016558  0060  F0F3  FFE3   	movff	_prec,plusw1
 13825  01655E  0EFF               	movlw	-1
 13826  016560  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13827  016566                     l2302:
 13828                           
 13829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13830                           ;stkvar	_w @ sp[(-14)+10]
 13831  016566  0EFC               	movlw	-4
 13832  016568  0060  F0EB  FFE3   	movff	_width,plusw1
 13833  01656E  0EFD               	movlw	-3
 13834  016570  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13835                           
 13836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13837                           ;stkvar	_d @ sp[(-14)+-10]
 13838  016576  0EE8               	movlw	232
 13839  016578  24E1               	addwf	fsr1l,w,c
 13840  01657A  6ED9               	movwf	fsr2l,c
 13841  01657C  0EFF               	movlw	255
 13842  01657E  20E2               	addwfc	fsr1h,w,c
 13843  016580  6EDA               	movwf	fsr2h,c
 13844                           
 13845                           ;stkvar	_n @ sp[(-14)+0]
 13846  016582  0E08               	movlw	8
 13847  016584  6E01               	movwf	btemp^0,c
 13848  016586  0EF2               	movlw	-14
 13849  016588                     us1164999:
 13850  016588  006F FF7B FFE3     	movff	postinc2,plusw1
 13851  01658E  28E8               	incf	wreg,w,c
 13852  016590  2E01               	decfsz	btemp^0,f,c
 13853  016592  D7FA               	bra	us1164999
 13854                           
 13855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13856  016594  0E4F               	movlw	79
 13857  016596  6E0B               	movwf	(btemp+10)^0,c
 13858  016598  0E00               	movlw	0
 13859  01659A  6E0C               	movwf	(btemp+11)^0,c
 13860                           
 13861                           ;stkvar	_i @ sp[(-14)+8]
 13862  01659C  0EFA               	movlw	-6
 13863  01659E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13864  0165A4  0EFB               	movlw	-5
 13865  0165A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13866                           
 13867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13868  0165AC  0102               	movlb	2	; () banked
 13869  0165AE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13870                           
 13871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13872  0165B0  D0FB               	goto	l12193
 13873  0165B2                     l12183:
 13874                           
 13875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13876                           ;stkvar	_i @ sp[(-14)+8]
 13877  0165B2  50E1               	movf	fsr1l,w,c
 13878  0165B4  0FFA               	addlw	-6
 13879  0165B6  6ED9               	movwf	fsr2l,c
 13880  0165B8  50E2               	movf	fsr1h,w,c
 13881  0165BA  6EDA               	movwf	fsr2h,c
 13882  0165BC  0EFF               	movlw	255
 13883  0165BE  22DA               	addwfc	fsr2h,f,c
 13884  0165C0  06DE               	decf	postinc2,f,c
 13885  0165C2  0E00               	movlw	0
 13886  0165C4  5ADD               	subwfb	postdec2,f,c
 13887                           
 13888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13889  0165C6  0E0A               	movlw	10
 13890  0165C8  6EE6               	movwf	postinc1,c
 13891  0165CA  0E00               	movlw	0
 13892  0165CC  6EE6               	movwf	postinc1,c
 13893  0165CE  0E00               	movlw	0
 13894  0165D0  6EE6               	movwf	postinc1,c
 13895  0165D2  0E00               	movlw	0
 13896  0165D4  6EE6               	movwf	postinc1,c
 13897  0165D6  0E00               	movlw	0
 13898  0165D8  6EE6               	movwf	postinc1,c
 13899  0165DA  0E00               	movlw	0
 13900  0165DC  6EE6               	movwf	postinc1,c
 13901  0165DE  0E00               	movlw	0
 13902  0165E0  6EE6               	movwf	postinc1,c
 13903  0165E2  0E00               	movlw	0
 13904  0165E4  6EE6               	movwf	postinc1,c
 13905                           
 13906                           ;stkvar	_n @ sp[(-22)+0]
 13907  0165E6  50E1               	movf	fsr1l,w,c
 13908  0165E8  0FEA               	addlw	-22
 13909  0165EA  6ED9               	movwf	fsr2l,c
 13910  0165EC  50E2               	movf	fsr1h,w,c
 13911  0165EE  6EDA               	movwf	fsr2h,c
 13912  0165F0  0EFF               	movlw	255
 13913  0165F2  22DA               	addwfc	fsr2h,f,c
 13914  0165F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13915  0165FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13916  016600  006F FF7B FFE6     	movff	postinc2,postinc1
 13917  016606  006F FF7B FFE6     	movff	postinc2,postinc1
 13918  01660C  006F FF7B FFE6     	movff	postinc2,postinc1
 13919  016612  006F FF7B FFE6     	movff	postinc2,postinc1
 13920  016618  006F FF7B FFE6     	movff	postinc2,postinc1
 13921  01661E  006F FF7B FFE6     	movff	postinc2,postinc1
 13922  016624  EC2D  F0C9         	call	___lomod	;wreg free
 13923  016628  52E5               	movf	postdec1,f,c
 13924  01662A  006F FF9C  F018    	movff	indf1,btemp+23
 13925  016630  52E5               	movf	postdec1,f,c
 13926  016632  006F FF9C  F017    	movff	indf1,btemp+22
 13927  016638  52E5               	movf	postdec1,f,c
 13928  01663A  006F FF9C  F016    	movff	indf1,btemp+21
 13929  016640  52E5               	movf	postdec1,f,c
 13930  016642  006F FF9C  F015    	movff	indf1,btemp+20
 13931  016648  52E5               	movf	postdec1,f,c
 13932  01664A  006F FF9C  F014    	movff	indf1,btemp+19
 13933  016650  52E5               	movf	postdec1,f,c
 13934  016652  006F FF9C  F013    	movff	indf1,btemp+18
 13935  016658  52E5               	movf	postdec1,f,c
 13936  01665A  006F FF9C  F012    	movff	indf1,btemp+17
 13937  016660  52E5               	movf	postdec1,f,c
 13938  016662  006F FF9C  F011    	movff	indf1,btemp+16
 13939  016668  0EF8               	movlw	248
 13940  01666A  26E1               	addwf	fsr1l,f,c
 13941  01666C  0EFF               	movlw	255
 13942  01666E  22E2               	addwfc	fsr1h,f,c
 13943  016670  0E30               	movlw	48
 13944  016672  2611               	addwf	(btemp+16)^0,f,c
 13945                           
 13946                           ;stkvar	_i @ sp[(-14)+8]
 13947  016674  0EFA               	movlw	-6
 13948  016676  006F FF8C  F00B    	movff	plusw1,btemp+10
 13949  01667C  0EFB               	movlw	-5
 13950  01667E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13951  016684  0E97               	movlw	low _dbuf
 13952  016686  240B               	addwf	(btemp+10)^0,w,c
 13953  016688  6ED9               	movwf	fsr2l,c
 13954  01668A  0E02               	movlw	high _dbuf
 13955  01668C  200C               	addwfc	(btemp+11)^0,w,c
 13956  01668E  6EDA               	movwf	fsr2h,c
 13957  016690  0060  F047  FFDF   	movff	btemp+16,indf2
 13958                           
 13959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13960                           ;stkvar	_p @ sp[(-14)+12]
 13961  016696  50E1               	movf	fsr1l,w,c
 13962  016698  0FFE               	addlw	-2
 13963  01669A  6ED9               	movwf	fsr2l,c
 13964  01669C  50E2               	movf	fsr1h,w,c
 13965  01669E  6EDA               	movwf	fsr2h,c
 13966  0166A0  0EFF               	movlw	255
 13967  0166A2  22DA               	addwfc	fsr2h,f,c
 13968  0166A4  06DE               	decf	postinc2,f,c
 13969  0166A6  0E00               	movlw	0
 13970  0166A8  5ADD               	subwfb	postdec2,f,c
 13971                           
 13972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13973                           ;stkvar	_w @ sp[(-14)+10]
 13974  0166AA  50E1               	movf	fsr1l,w,c
 13975  0166AC  0FFC               	addlw	-4
 13976  0166AE  6ED9               	movwf	fsr2l,c
 13977  0166B0  50E2               	movf	fsr1h,w,c
 13978  0166B2  6EDA               	movwf	fsr2h,c
 13979  0166B4  0EFF               	movlw	255
 13980  0166B6  22DA               	addwfc	fsr2h,f,c
 13981  0166B8  06DE               	decf	postinc2,f,c
 13982  0166BA  0E00               	movlw	0
 13983  0166BC  5ADD               	subwfb	postdec2,f,c
 13984                           
 13985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13986  0166BE  0E0A               	movlw	10
 13987  0166C0  6EE6               	movwf	postinc1,c
 13988  0166C2  0E00               	movlw	0
 13989  0166C4  6EE6               	movwf	postinc1,c
 13990  0166C6  0E00               	movlw	0
 13991  0166C8  6EE6               	movwf	postinc1,c
 13992  0166CA  0E00               	movlw	0
 13993  0166CC  6EE6               	movwf	postinc1,c
 13994  0166CE  0E00               	movlw	0
 13995  0166D0  6EE6               	movwf	postinc1,c
 13996  0166D2  0E00               	movlw	0
 13997  0166D4  6EE6               	movwf	postinc1,c
 13998  0166D6  0E00               	movlw	0
 13999  0166D8  6EE6               	movwf	postinc1,c
 14000  0166DA  0E00               	movlw	0
 14001  0166DC  6EE6               	movwf	postinc1,c
 14002                           
 14003                           ;stkvar	_n @ sp[(-22)+0]
 14004  0166DE  50E1               	movf	fsr1l,w,c
 14005  0166E0  0FEA               	addlw	-22
 14006  0166E2  6ED9               	movwf	fsr2l,c
 14007  0166E4  50E2               	movf	fsr1h,w,c
 14008  0166E6  6EDA               	movwf	fsr2h,c
 14009  0166E8  0EFF               	movlw	255
 14010  0166EA  22DA               	addwfc	fsr2h,f,c
 14011  0166EC  006F FF7B FFE6     	movff	postinc2,postinc1
 14012  0166F2  006F FF7B FFE6     	movff	postinc2,postinc1
 14013  0166F8  006F FF7B FFE6     	movff	postinc2,postinc1
 14014  0166FE  006F FF7B FFE6     	movff	postinc2,postinc1
 14015  016704  006F FF7B FFE6     	movff	postinc2,postinc1
 14016  01670A  006F FF7B FFE6     	movff	postinc2,postinc1
 14017  016710  006F FF7B FFE6     	movff	postinc2,postinc1
 14018  016716  006F FF7B FFE6     	movff	postinc2,postinc1
 14019  01671C  EC08  F0C5         	call	___lodiv	;wreg free
 14020  016720  52E5               	movf	postdec1,f,c
 14021  016722  006F FF9C  F018    	movff	indf1,btemp+23
 14022  016728  52E5               	movf	postdec1,f,c
 14023  01672A  006F FF9C  F017    	movff	indf1,btemp+22
 14024  016730  52E5               	movf	postdec1,f,c
 14025  016732  006F FF9C  F016    	movff	indf1,btemp+21
 14026  016738  52E5               	movf	postdec1,f,c
 14027  01673A  006F FF9C  F015    	movff	indf1,btemp+20
 14028  016740  52E5               	movf	postdec1,f,c
 14029  016742  006F FF9C  F014    	movff	indf1,btemp+19
 14030  016748  52E5               	movf	postdec1,f,c
 14031  01674A  006F FF9C  F013    	movff	indf1,btemp+18
 14032  016750  52E5               	movf	postdec1,f,c
 14033  016752  006F FF9C  F012    	movff	indf1,btemp+17
 14034  016758  52E5               	movf	postdec1,f,c
 14035  01675A  006F FF9C  F011    	movff	indf1,btemp+16
 14036  016760  0EF8               	movlw	248
 14037  016762  26E1               	addwf	fsr1l,f,c
 14038  016764  0EFF               	movlw	255
 14039  016766  22E2               	addwfc	fsr1h,f,c
 14040                           
 14041                           ;stkvar	_n @ sp[(-14)+0]
 14042  016768  0EF2               	movlw	-14
 14043  01676A  0060  F047  FFE3   	movff	btemp+16,plusw1
 14044  016770  0EF3               	movlw	-13
 14045  016772  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14046  016778  0EF4               	movlw	-12
 14047  01677A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14048  016780  0EF5               	movlw	-11
 14049  016782  0060  F053  FFE3   	movff	btemp+19,plusw1
 14050  016788  0EF6               	movlw	-10
 14051  01678A  0060  F057  FFE3   	movff	btemp+20,plusw1
 14052  016790  0EF7               	movlw	-9
 14053  016792  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14054  016798  0EF8               	movlw	-8
 14055  01679A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14056  0167A0  0EF9               	movlw	-7
 14057  0167A2  0060  F063  FFE3   	movff	btemp+23,plusw1
 14058  0167A8                     l12193:
 14059                           
 14060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14061                           ;stkvar	_i @ sp[(-14)+8]
 14062  0167A8  0EFA               	movlw	-6
 14063  0167AA  006F FF8C  F001    	movff	plusw1,btemp
 14064  0167B0  0EFB               	movlw	-5
 14065  0167B2  50E3               	movf	plusw1,w,c
 14066  0167B4  1001               	iorwf	btemp^0,w,c
 14067  0167B6  B4D8               	btfsc	status,2,c
 14068  0167B8  D02F               	goto	u11690
 14069                           
 14070                           ;stkvar	_n @ sp[(-14)+0]
 14071  0167BA  0EF2               	movlw	-14
 14072  0167BC  50E3               	movf	plusw1,w,c
 14073  0167BE  E115               	bnz	u11661
 14074  0167C0  0EF3               	movlw	-13
 14075  0167C2  50E3               	movf	plusw1,w,c
 14076  0167C4  E112               	bnz	u11661
 14077  0167C6  0EF4               	movlw	-12
 14078  0167C8  50E3               	movf	plusw1,w,c
 14079  0167CA  E10F               	bnz	u11661
 14080  0167CC  0EF5               	movlw	-11
 14081  0167CE  50E3               	movf	plusw1,w,c
 14082  0167D0  E10C               	bnz	u11661
 14083  0167D2  0EF6               	movlw	-10
 14084  0167D4  50E3               	movf	plusw1,w,c
 14085  0167D6  E109               	bnz	u11661
 14086  0167D8  0EF7               	movlw	-9
 14087  0167DA  50E3               	movf	plusw1,w,c
 14088  0167DC  E106               	bnz	u11661
 14089  0167DE  0EF8               	movlw	-8
 14090  0167E0  50E3               	movf	plusw1,w,c
 14091  0167E2  E103               	bnz	u11661
 14092  0167E4  0EF9               	movlw	-7
 14093  0167E6  50E3               	movf	plusw1,w,c
 14094  0167E8  A4D8               	btfss	status,2,c
 14095  0167EA                     u11661:
 14096  0167EA  D6E3               	goto	l12183
 14097                           
 14098                           ;stkvar	_p @ sp[(-14)+12]
 14099  0167EC  0EFF               	movlw	-1
 14100  0167EE  BEE3               	btfsc	plusw1,7,c
 14101  0167F0  D007               	goto	u11670
 14102  0167F2  0EFF               	movlw	-1
 14103  0167F4  50E3               	movf	plusw1,w,c
 14104  0167F6  E103               	bnz	u11671
 14105  0167F8  0EFE               	movlw	-2
 14106  0167FA  04E3               	decf	plusw1,w,c
 14107  0167FC  B0D8               	btfsc	status,0,c
 14108  0167FE                     u11671:
 14109  0167FE  D6D9               	goto	l12183
 14110  016800                     u11670:
 14111                           
 14112                           ;stkvar	_w @ sp[(-14)+10]
 14113  016800  0EFD               	movlw	-3
 14114  016802  BEE3               	btfsc	plusw1,7,c
 14115  016804  D009               	goto	u11690
 14116  016806  0EFD               	movlw	-3
 14117  016808  50E3               	movf	plusw1,w,c
 14118  01680A  E104               	bnz	u11680
 14119  01680C  0EFC               	movlw	-4
 14120  01680E  04E3               	decf	plusw1,w,c
 14121  016810  A0D8               	btfss	status,0,c
 14122  016812  D002               	goto	u11690
 14123  016814                     u11680:
 14124  016814  B23E               	btfsc	_flags^0,1,c
 14125  016816  D6CD               	goto	l12183
 14126  016818                     u11690:
 14127                           
 14128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14129                           ;stkvar	_w @ sp[(-14)+10]
 14130  016818  0EFC               	movlw	-4
 14131  01681A  006F FF8F FFE6     	movff	plusw1,postinc1
 14132  016820  006F FF8F FFE6     	movff	plusw1,postinc1
 14133                           
 14134                           ;stkvar	_i @ sp[(-16)+8]
 14135  016826  0E97               	movlw	low _dbuf
 14136  016828  6E0B               	movwf	(btemp+10)^0,c
 14137  01682A  0E02               	movlw	high _dbuf
 14138  01682C  6E0C               	movwf	(btemp+11)^0,c
 14139  01682E  0EF8               	movlw	-8
 14140  016830  50E3               	movf	plusw1,w,c
 14141  016832  260B               	addwf	(btemp+10)^0,f,c
 14142  016834  0EF9               	movlw	-7
 14143  016836  50E3               	movf	plusw1,w,c
 14144  016838  220C               	addwfc	(btemp+11)^0,f,c
 14145  01683A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14146  016840  0060  F033  FFE6   	movff	btemp+11,postinc1
 14147                           
 14148                           ;stkvar	_fp @ sp[(-18)+-2]
 14149  016846  0EEC               	movlw	-20
 14150  016848  006F FF8F FFE6     	movff	plusw1,postinc1
 14151  01684E  006F FF8F FFE6     	movff	plusw1,postinc1
 14152  016854  EC0F  F0CC         	call	_pad	;wreg free
 14153                           
 14154                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14155  016858  0EE8               	movlw	232
 14156  01685A  26E1               	addwf	fsr1l,f,c
 14157  01685C  0EFF               	movlw	255
 14158  01685E  22E2               	addwfc	fsr1h,f,c
 14159  016860  0012               	return		;funcret
 14160  016862                     __end_of_utoa:
 14161                           	opt callstack 0
 14162                           
 14163 ;; *************** function ___lomod *****************
 14164 ;; Defined at:
 14165 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;  dividend        8  [STACK] unsigned long long 
 14168 ;;  divisor         8  [STACK] unsigned long long 
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;  counter         1  [STACK] unsigned char 
 14171 ;; Return value:  Size  Location     Type
 14172 ;;                  8  [STACK] unsigned long long 
 14173 ;; Registers used:
 14174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14175 ;; Tracked objects:
 14176 ;;		On entry : 0/2
 14177 ;;		On exit  : 0/0
 14178 ;;		Unchanged: 0/0
 14179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14184 ;;Total ram usage:        0 bytes
 14185 ;; Hardware stack levels used:    1
 14186 ;; Hardware stack levels required when called:   15
 14187 ;; This function calls:
 14188 ;;		Nothing
 14189 ;; This function is called by:
 14190 ;;		_utoa
 14191 ;; This function uses a reentrant model
 14192 ;;
 14193                           
 14194                           	psect	text51
 14195  01925A                     __ptext51:
 14196                           	opt callstack 0
 14197  01925A                     ___lomod:
 14198                           	opt callstack 0
 14199                           
 14200                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14201  01925A  52E6               	movf	postinc1,f,c
 14202                           
 14203                           ;stkvar	_divisor @ sp[(-1)+-16]
 14204                           
 14205                           ;incstack = 0
 14206 ;; hardware stack exceeded
 14207  01925C  0EEF               	movlw	-17
 14208  01925E  50E3               	movf	plusw1,w,c
 14209  019260  E116               	bnz	u7290
 14210  019262  0EF0               	movlw	-16
 14211  019264  50E3               	movf	plusw1,w,c
 14212  019266  E113               	bnz	u7290
 14213  019268  0EF1               	movlw	-15
 14214  01926A  50E3               	movf	plusw1,w,c
 14215  01926C  E110               	bnz	u7290
 14216  01926E  0EF2               	movlw	-14
 14217  019270  50E3               	movf	plusw1,w,c
 14218  019272  E10D               	bnz	u7290
 14219  019274  0EF3               	movlw	-13
 14220  019276  50E3               	movf	plusw1,w,c
 14221  019278  E10A               	bnz	u7290
 14222  01927A  0EF4               	movlw	-12
 14223  01927C  50E3               	movf	plusw1,w,c
 14224  01927E  E107               	bnz	u7290
 14225  019280  0EF5               	movlw	-11
 14226  019282  50E3               	movf	plusw1,w,c
 14227  019284  E104               	bnz	u7290
 14228  019286  0EF6               	movlw	-10
 14229  019288  50E3               	movf	plusw1,w,c
 14230  01928A  B4D8               	btfsc	status,2,c
 14231  01928C  D075               	goto	u7320
 14232  01928E                     u7290:
 14233                           
 14234                           ;stkvar	_counter @ sp[(-1)+0]
 14235  01928E  0EFF               	movlw	-1
 14236  019290  6AE3               	clrf	plusw1,c
 14237  019292  D012               	goto	L14
 14238  019294                     l8595:
 14239                           
 14240                           ;stkvar	_divisor @ sp[(-1)+-16]
 14241  019294  90D8               	bcf	status,0,c
 14242  019296  0EEF               	movlw	-17
 14243  019298  36E3               	rlcf	plusw1,f,c
 14244  01929A  0EF0               	movlw	-16
 14245  01929C  36E3               	rlcf	plusw1,f,c
 14246  01929E  0EF1               	movlw	-15
 14247  0192A0  36E3               	rlcf	plusw1,f,c
 14248  0192A2  0EF2               	movlw	-14
 14249  0192A4  36E3               	rlcf	plusw1,f,c
 14250  0192A6  0EF3               	movlw	-13
 14251  0192A8  36E3               	rlcf	plusw1,f,c
 14252  0192AA  0EF4               	movlw	-12
 14253  0192AC  36E3               	rlcf	plusw1,f,c
 14254  0192AE  0EF5               	movlw	-11
 14255  0192B0  36E3               	rlcf	plusw1,f,c
 14256  0192B2  0EF6               	movlw	-10
 14257  0192B4  36E3               	rlcf	plusw1,f,c
 14258                           
 14259                           ;stkvar	_counter @ sp[(-1)+0]
 14260  0192B6  0EFF               	movlw	-1
 14261  0192B8                     L14:
 14262  0192B8  2AE3               	incf	plusw1,f,c
 14263                           
 14264                           ;stkvar	_divisor @ sp[(-1)+-16]
 14265  0192BA  0EF6               	movlw	-10
 14266  0192BC  AEE3               	btfss	plusw1,7,c
 14267  0192BE  D7EA               	goto	l8595
 14268  0192C0                     u7300:
 14269                           
 14270                           ;stkvar	_divisor @ sp[(-1)+-16]
 14271                           ;stkvar	_dividend @ sp[(-1)+-8]
 14272  0192C0  50E1               	movf	fsr1l,w,c
 14273  0192C2  0FF7               	addlw	-9
 14274  0192C4  6ED9               	movwf	fsr2l,c
 14275  0192C6  50E2               	movf	fsr1h,w,c
 14276  0192C8  6EDA               	movwf	fsr2h,c
 14277  0192CA  0EFF               	movlw	255
 14278  0192CC  22DA               	addwfc	fsr2h,f,c
 14279  0192CE  0EEF               	movlw	-17
 14280  0192D0  50E3               	movf	plusw1,w,c
 14281  0192D2  5CDE               	subwf	postinc2,w,c
 14282  0192D4  0EF0               	movlw	-16
 14283  0192D6  50E3               	movf	plusw1,w,c
 14284  0192D8  58DE               	subwfb	postinc2,w,c
 14285  0192DA  0EF1               	movlw	-15
 14286  0192DC  50E3               	movf	plusw1,w,c
 14287  0192DE  58DE               	subwfb	postinc2,w,c
 14288  0192E0  0EF2               	movlw	-14
 14289  0192E2  50E3               	movf	plusw1,w,c
 14290  0192E4  58DE               	subwfb	postinc2,w,c
 14291  0192E6  0EF3               	movlw	-13
 14292  0192E8  50E3               	movf	plusw1,w,c
 14293  0192EA  58DE               	subwfb	postinc2,w,c
 14294  0192EC  0EF4               	movlw	-12
 14295  0192EE  50E3               	movf	plusw1,w,c
 14296  0192F0  58DE               	subwfb	postinc2,w,c
 14297  0192F2  0EF5               	movlw	-11
 14298  0192F4  50E3               	movf	plusw1,w,c
 14299  0192F6  58DE               	subwfb	postinc2,w,c
 14300  0192F8  0EF6               	movlw	-10
 14301  0192FA  50E3               	movf	plusw1,w,c
 14302  0192FC  58DE               	subwfb	postinc2,w,c
 14303  0192FE  A0D8               	btfss	status,0,c
 14304  019300  D01F               	goto	l8603
 14305                           
 14306                           ;stkvar	_divisor @ sp[(-1)+-16]
 14307                           ;stkvar	_dividend @ sp[(-1)+-8]
 14308  019302  50E1               	movf	fsr1l,w,c
 14309  019304  0FF7               	addlw	-9
 14310  019306  6ED9               	movwf	fsr2l,c
 14311  019308  50E2               	movf	fsr1h,w,c
 14312  01930A  6EDA               	movwf	fsr2h,c
 14313  01930C  0EFF               	movlw	255
 14314  01930E  22DA               	addwfc	fsr2h,f,c
 14315  019310  0EEF               	movlw	-17
 14316  019312  50E3               	movf	plusw1,w,c
 14317  019314  5EDE               	subwf	postinc2,f,c
 14318  019316  0EF0               	movlw	-16
 14319  019318  50E3               	movf	plusw1,w,c
 14320  01931A  5ADE               	subwfb	postinc2,f,c
 14321  01931C  0EF1               	movlw	-15
 14322  01931E  50E3               	movf	plusw1,w,c
 14323  019320  5ADE               	subwfb	postinc2,f,c
 14324  019322  0EF2               	movlw	-14
 14325  019324  50E3               	movf	plusw1,w,c
 14326  019326  5ADE               	subwfb	postinc2,f,c
 14327  019328  0EF3               	movlw	-13
 14328  01932A  50E3               	movf	plusw1,w,c
 14329  01932C  5ADE               	subwfb	postinc2,f,c
 14330  01932E  0EF4               	movlw	-12
 14331  019330  50E3               	movf	plusw1,w,c
 14332  019332  5ADE               	subwfb	postinc2,f,c
 14333  019334  0EF5               	movlw	-11
 14334  019336  50E3               	movf	plusw1,w,c
 14335  019338  5ADE               	subwfb	postinc2,f,c
 14336  01933A  0EF6               	movlw	-10
 14337  01933C  50E3               	movf	plusw1,w,c
 14338  01933E  5ADE               	subwfb	postinc2,f,c
 14339  019340                     l8603:
 14340                           
 14341                           ;stkvar	_divisor @ sp[(-1)+-16]
 14342  019340  90D8               	bcf	status,0,c
 14343  019342  0EF6               	movlw	-10
 14344  019344  32E3               	rrcf	plusw1,f,c
 14345  019346  0EF5               	movlw	-11
 14346  019348  32E3               	rrcf	plusw1,f,c
 14347  01934A  0EF4               	movlw	-12
 14348  01934C  32E3               	rrcf	plusw1,f,c
 14349  01934E  0EF3               	movlw	-13
 14350  019350  32E3               	rrcf	plusw1,f,c
 14351  019352  0EF2               	movlw	-14
 14352  019354  32E3               	rrcf	plusw1,f,c
 14353  019356  0EF1               	movlw	-15
 14354  019358  32E3               	rrcf	plusw1,f,c
 14355  01935A  0EF0               	movlw	-16
 14356  01935C  32E3               	rrcf	plusw1,f,c
 14357  01935E  0EEF               	movlw	-17
 14358  019360  32E3               	rrcf	plusw1,f,c
 14359                           
 14360                           ;stkvar	_counter @ sp[(-1)+0]
 14361  019362  0EFF               	movlw	-1
 14362  019364  50E3               	movf	plusw1,w,c
 14363  019366  6E01               	movwf	btemp^0,c
 14364  019368  0E01               	movlw	1
 14365  01936A  5E01               	subwf	btemp^0,f,c
 14366  01936C  0EFF               	movlw	-1
 14367  01936E  0060  F007  FFE3   	movff	btemp,plusw1
 14368  019374  A4D8               	btfss	status,2,c
 14369  019376  D7A4               	goto	u7300
 14370  019378                     u7320:
 14371                           
 14372                           ;stkvar	_dividend @ sp[(-1)+-8]
 14373  019378  0EF7               	movlw	247
 14374  01937A  24E1               	addwf	fsr1l,w,c
 14375  01937C  6ED9               	movwf	fsr2l,c
 14376  01937E  0EFF               	movlw	255
 14377  019380  20E2               	addwfc	fsr1h,w,c
 14378  019382  6EDA               	movwf	fsr2h,c
 14379                           
 14380                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14381  019384  0E08               	movlw	8
 14382  019386  6E01               	movwf	btemp^0,c
 14383  019388  0EF7               	movlw	-9
 14384  01938A                     us733999:
 14385  01938A  006F FF7B FFE3     	movff	postinc2,plusw1
 14386  019390  28E8               	incf	wreg,w,c
 14387  019392  2E01               	decfsz	btemp^0,f,c
 14388  019394  D7FA               	bra	us733999
 14389                           
 14390                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14391  019396  52E5               	movf	postdec1,f,c
 14392  019398  0012               	return		;funcret
 14393  01939A                     __end_of___lomod:
 14394                           	opt callstack 0
 14395                           
 14396 ;; *************** function ___lodiv *****************
 14397 ;; Defined at:
 14398 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  dividend        8  [STACK] unsigned long long 
 14401 ;;  divisor         8  [STACK] unsigned long long 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  quotient        8  [STACK] unsigned long long 
 14404 ;;  counter         1  [STACK] unsigned char 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  8  [STACK] unsigned long long 
 14407 ;; Registers used:
 14408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/2
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14418 ;;Total ram usage:        0 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:   15
 14421 ;; This function calls:
 14422 ;;		Nothing
 14423 ;; This function is called by:
 14424 ;;		_utoa
 14425 ;; This function uses a reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text52
 14429  018A10                     __ptext52:
 14430                           	opt callstack 0
 14431  018A10                     ___lodiv:
 14432                           	opt callstack 0
 14433                           
 14434                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14435  018A10  0E09               	movlw	9
 14436  018A12  26E1               	addwf	fsr1l,f,c
 14437  018A14  0E00               	movlw	0
 14438  018A16  22E2               	addwfc	fsr1h,f,c
 14439                           
 14440                           ;stkvar	_quotient @ sp[(-9)+0]
 14441                           
 14442                           ;incstack = 0
 14443 ;; hardware stack exceeded
 14444  018A18  0E07               	movlw	7
 14445  018A1A  6E01               	movwf	btemp^0,c
 14446  018A1C  0EF7               	movlw	-9
 14447  018A1E                     u7231:
 14448  018A1E  6AE3               	clrf	plusw1,c
 14449  018A20  2AE8               	incf	wreg,f,c
 14450  018A22  0601               	decf	btemp^0,f,c
 14451  018A24  E2FC               	bc	u7231
 14452                           
 14453                           ;stkvar	_divisor @ sp[(-9)+-16]
 14454  018A26  0EE7               	movlw	-25
 14455  018A28  50E3               	movf	plusw1,w,c
 14456  018A2A  E116               	bnz	u7240
 14457  018A2C  0EE8               	movlw	-24
 14458  018A2E  50E3               	movf	plusw1,w,c
 14459  018A30  E113               	bnz	u7240
 14460  018A32  0EE9               	movlw	-23
 14461  018A34  50E3               	movf	plusw1,w,c
 14462  018A36  E110               	bnz	u7240
 14463  018A38  0EEA               	movlw	-22
 14464  018A3A  50E3               	movf	plusw1,w,c
 14465  018A3C  E10D               	bnz	u7240
 14466  018A3E  0EEB               	movlw	-21
 14467  018A40  50E3               	movf	plusw1,w,c
 14468  018A42  E10A               	bnz	u7240
 14469  018A44  0EEC               	movlw	-20
 14470  018A46  50E3               	movf	plusw1,w,c
 14471  018A48  E107               	bnz	u7240
 14472  018A4A  0EED               	movlw	-19
 14473  018A4C  50E3               	movf	plusw1,w,c
 14474  018A4E  E104               	bnz	u7240
 14475  018A50  0EEE               	movlw	-18
 14476  018A52  50E3               	movf	plusw1,w,c
 14477  018A54  B4D8               	btfsc	status,2,c
 14478  018A56  D088               	goto	u7270
 14479  018A58                     u7240:
 14480                           
 14481                           ;stkvar	_counter @ sp[(-9)+8]
 14482  018A58  0EFF               	movlw	-1
 14483  018A5A  6AE3               	clrf	plusw1,c
 14484  018A5C  D012               	goto	L15
 14485  018A5E                     l8571:
 14486                           
 14487                           ;stkvar	_divisor @ sp[(-9)+-16]
 14488  018A5E  90D8               	bcf	status,0,c
 14489  018A60  0EE7               	movlw	-25
 14490  018A62  36E3               	rlcf	plusw1,f,c
 14491  018A64  0EE8               	movlw	-24
 14492  018A66  36E3               	rlcf	plusw1,f,c
 14493  018A68  0EE9               	movlw	-23
 14494  018A6A  36E3               	rlcf	plusw1,f,c
 14495  018A6C  0EEA               	movlw	-22
 14496  018A6E  36E3               	rlcf	plusw1,f,c
 14497  018A70  0EEB               	movlw	-21
 14498  018A72  36E3               	rlcf	plusw1,f,c
 14499  018A74  0EEC               	movlw	-20
 14500  018A76  36E3               	rlcf	plusw1,f,c
 14501  018A78  0EED               	movlw	-19
 14502  018A7A  36E3               	rlcf	plusw1,f,c
 14503  018A7C  0EEE               	movlw	-18
 14504  018A7E  36E3               	rlcf	plusw1,f,c
 14505                           
 14506                           ;stkvar	_counter @ sp[(-9)+8]
 14507  018A80  0EFF               	movlw	-1
 14508  018A82                     L15:
 14509  018A82  2AE3               	incf	plusw1,f,c
 14510                           
 14511                           ;stkvar	_divisor @ sp[(-9)+-16]
 14512  018A84  0EEE               	movlw	-18
 14513  018A86  AEE3               	btfss	plusw1,7,c
 14514  018A88  D7EA               	goto	l8571
 14515  018A8A                     u7250:
 14516                           
 14517                           ;stkvar	_quotient @ sp[(-9)+0]
 14518  018A8A  90D8               	bcf	status,0,c
 14519  018A8C  0EF7               	movlw	-9
 14520  018A8E  36E3               	rlcf	plusw1,f,c
 14521  018A90  0EF8               	movlw	-8
 14522  018A92  36E3               	rlcf	plusw1,f,c
 14523  018A94  0EF9               	movlw	-7
 14524  018A96  36E3               	rlcf	plusw1,f,c
 14525  018A98  0EFA               	movlw	-6
 14526  018A9A  36E3               	rlcf	plusw1,f,c
 14527  018A9C  0EFB               	movlw	-5
 14528  018A9E  36E3               	rlcf	plusw1,f,c
 14529  018AA0  0EFC               	movlw	-4
 14530  018AA2  36E3               	rlcf	plusw1,f,c
 14531  018AA4  0EFD               	movlw	-3
 14532  018AA6  36E3               	rlcf	plusw1,f,c
 14533  018AA8  0EFE               	movlw	-2
 14534  018AAA  36E3               	rlcf	plusw1,f,c
 14535                           
 14536                           ;stkvar	_divisor @ sp[(-9)+-16]
 14537                           ;stkvar	_dividend @ sp[(-9)+-8]
 14538  018AAC  50E1               	movf	fsr1l,w,c
 14539  018AAE  0FEF               	addlw	-17
 14540  018AB0  6ED9               	movwf	fsr2l,c
 14541  018AB2  50E2               	movf	fsr1h,w,c
 14542  018AB4  6EDA               	movwf	fsr2h,c
 14543  018AB6  0EFF               	movlw	255
 14544  018AB8  22DA               	addwfc	fsr2h,f,c
 14545  018ABA  0EE7               	movlw	-25
 14546  018ABC  50E3               	movf	plusw1,w,c
 14547  018ABE  5CDE               	subwf	postinc2,w,c
 14548  018AC0  0EE8               	movlw	-24
 14549  018AC2  50E3               	movf	plusw1,w,c
 14550  018AC4  58DE               	subwfb	postinc2,w,c
 14551  018AC6  0EE9               	movlw	-23
 14552  018AC8  50E3               	movf	plusw1,w,c
 14553  018ACA  58DE               	subwfb	postinc2,w,c
 14554  018ACC  0EEA               	movlw	-22
 14555  018ACE  50E3               	movf	plusw1,w,c
 14556  018AD0  58DE               	subwfb	postinc2,w,c
 14557  018AD2  0EEB               	movlw	-21
 14558  018AD4  50E3               	movf	plusw1,w,c
 14559  018AD6  58DE               	subwfb	postinc2,w,c
 14560  018AD8  0EEC               	movlw	-20
 14561  018ADA  50E3               	movf	plusw1,w,c
 14562  018ADC  58DE               	subwfb	postinc2,w,c
 14563  018ADE  0EED               	movlw	-19
 14564  018AE0  50E3               	movf	plusw1,w,c
 14565  018AE2  58DE               	subwfb	postinc2,w,c
 14566  018AE4  0EEE               	movlw	-18
 14567  018AE6  50E3               	movf	plusw1,w,c
 14568  018AE8  58DE               	subwfb	postinc2,w,c
 14569  018AEA  A0D8               	btfss	status,0,c
 14570  018AEC  D021               	goto	l8583
 14571                           
 14572                           ;stkvar	_divisor @ sp[(-9)+-16]
 14573                           ;stkvar	_dividend @ sp[(-9)+-8]
 14574  018AEE  50E1               	movf	fsr1l,w,c
 14575  018AF0  0FEF               	addlw	-17
 14576  018AF2  6ED9               	movwf	fsr2l,c
 14577  018AF4  50E2               	movf	fsr1h,w,c
 14578  018AF6  6EDA               	movwf	fsr2h,c
 14579  018AF8  0EFF               	movlw	255
 14580  018AFA  22DA               	addwfc	fsr2h,f,c
 14581  018AFC  0EE7               	movlw	-25
 14582  018AFE  50E3               	movf	plusw1,w,c
 14583  018B00  5EDE               	subwf	postinc2,f,c
 14584  018B02  0EE8               	movlw	-24
 14585  018B04  50E3               	movf	plusw1,w,c
 14586  018B06  5ADE               	subwfb	postinc2,f,c
 14587  018B08  0EE9               	movlw	-23
 14588  018B0A  50E3               	movf	plusw1,w,c
 14589  018B0C  5ADE               	subwfb	postinc2,f,c
 14590  018B0E  0EEA               	movlw	-22
 14591  018B10  50E3               	movf	plusw1,w,c
 14592  018B12  5ADE               	subwfb	postinc2,f,c
 14593  018B14  0EEB               	movlw	-21
 14594  018B16  50E3               	movf	plusw1,w,c
 14595  018B18  5ADE               	subwfb	postinc2,f,c
 14596  018B1A  0EEC               	movlw	-20
 14597  018B1C  50E3               	movf	plusw1,w,c
 14598  018B1E  5ADE               	subwfb	postinc2,f,c
 14599  018B20  0EED               	movlw	-19
 14600  018B22  50E3               	movf	plusw1,w,c
 14601  018B24  5ADE               	subwfb	postinc2,f,c
 14602  018B26  0EEE               	movlw	-18
 14603  018B28  50E3               	movf	plusw1,w,c
 14604  018B2A  5ADE               	subwfb	postinc2,f,c
 14605                           
 14606                           ;stkvar	_quotient @ sp[(-9)+0]
 14607  018B2C  0EF7               	movlw	-9
 14608  018B2E  80E3               	bsf	plusw1,0,c
 14609  018B30                     l8583:
 14610                           
 14611                           ;stkvar	_divisor @ sp[(-9)+-16]
 14612  018B30  90D8               	bcf	status,0,c
 14613  018B32  0EEE               	movlw	-18
 14614  018B34  32E3               	rrcf	plusw1,f,c
 14615  018B36  0EED               	movlw	-19
 14616  018B38  32E3               	rrcf	plusw1,f,c
 14617  018B3A  0EEC               	movlw	-20
 14618  018B3C  32E3               	rrcf	plusw1,f,c
 14619  018B3E  0EEB               	movlw	-21
 14620  018B40  32E3               	rrcf	plusw1,f,c
 14621  018B42  0EEA               	movlw	-22
 14622  018B44  32E3               	rrcf	plusw1,f,c
 14623  018B46  0EE9               	movlw	-23
 14624  018B48  32E3               	rrcf	plusw1,f,c
 14625  018B4A  0EE8               	movlw	-24
 14626  018B4C  32E3               	rrcf	plusw1,f,c
 14627  018B4E  0EE7               	movlw	-25
 14628  018B50  32E3               	rrcf	plusw1,f,c
 14629                           
 14630                           ;stkvar	_counter @ sp[(-9)+8]
 14631  018B52  0EFF               	movlw	-1
 14632  018B54  50E3               	movf	plusw1,w,c
 14633  018B56  6E01               	movwf	btemp^0,c
 14634  018B58  0E01               	movlw	1
 14635  018B5A  5E01               	subwf	btemp^0,f,c
 14636  018B5C  0EFF               	movlw	-1
 14637  018B5E  0060  F007  FFE3   	movff	btemp,plusw1
 14638  018B64  A4D8               	btfss	status,2,c
 14639  018B66  D791               	goto	u7250
 14640  018B68                     u7270:
 14641                           
 14642                           ;stkvar	_quotient @ sp[(-9)+0]
 14643  018B68  0EF7               	movlw	247
 14644  018B6A  24E1               	addwf	fsr1l,w,c
 14645  018B6C  6ED9               	movwf	fsr2l,c
 14646  018B6E  0EFF               	movlw	255
 14647  018B70  20E2               	addwfc	fsr1h,w,c
 14648  018B72  6EDA               	movwf	fsr2h,c
 14649                           
 14650                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14651  018B74  0E08               	movlw	8
 14652  018B76  6E01               	movwf	btemp^0,c
 14653  018B78  0EEF               	movlw	-17
 14654  018B7A                     us728999:
 14655  018B7A  006F FF7B FFE3     	movff	postinc2,plusw1
 14656  018B80  28E8               	incf	wreg,w,c
 14657  018B82  2E01               	decfsz	btemp^0,f,c
 14658  018B84  D7FA               	bra	us728999
 14659                           
 14660                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14661  018B86  0EF7               	movlw	247
 14662  018B88  26E1               	addwf	fsr1l,f,c
 14663  018B8A  0EFF               	movlw	255
 14664  018B8C  22E2               	addwfc	fsr1h,f,c
 14665  018B8E  0012               	return		;funcret
 14666  018B90                     __end_of___lodiv:
 14667                           	opt callstack 0
 14668                           
 14669 ;; *************** function _strncmp *****************
 14670 ;; Defined at:
 14671 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  _l              2  [STACK] PTR const unsigned char 
 14674 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14675 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14676 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14677 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14678 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14679 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14680 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14681 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14682 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14683 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14684 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14685 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14686 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14687 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14688 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14689 ;;		 -> STR_2(15), STR_1(17), 
 14690 ;;  _r              2  [STACK] PTR const unsigned char 
 14691 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14692 ;;		 -> STR_80(3), STR_76(3), 
 14693 ;;  n               2  [STACK] unsigned int 
 14694 ;; Auto vars:     Size  Location     Type
 14695 ;;  r               2  [STACK] PTR const unsigned char 
 14696 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14697 ;;		 -> STR_80(3), STR_76(3), 
 14698 ;;  l               2  [STACK] PTR const unsigned char 
 14699 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14700 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14701 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14702 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14703 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14704 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14705 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14706 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14707 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14708 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14709 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14710 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14711 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14712 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14713 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14714 ;;		 -> STR_2(15), STR_1(17), 
 14715 ;; Return value:  Size  Location     Type
 14716 ;;                  2  [STACK] int 
 14717 ;; Registers used:
 14718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14719 ;; Tracked objects:
 14720 ;;		On entry : 0/0
 14721 ;;		On exit  : 0/0
 14722 ;;		Unchanged: 0/0
 14723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14728 ;;Total ram usage:        0 bytes
 14729 ;; Hardware stack levels used:    1
 14730 ;; Hardware stack levels required when called:   15
 14731 ;; This function calls:
 14732 ;;		Nothing
 14733 ;; This function is called by:
 14734 ;;		_vfpfcnvrt
 14735 ;; This function uses a reentrant model
 14736 ;;
 14737                           
 14738                           	psect	text53
 14739  017D62                     __ptext53:
 14740                           	opt callstack 0
 14741  017D62                     _strncmp:
 14742                           	opt callstack 0
 14743                           
 14744                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14745  017D62  52E6               	movf	postinc1,f,c
 14746  017D64  52E6               	movf	postinc1,f,c
 14747  017D66  52E6               	movf	postinc1,f,c
 14748  017D68  52E6               	movf	postinc1,f,c
 14749                           
 14750                           ;stkvar	__l @ sp[(-4)+-2]
 14751                           
 14752                           ;incstack = 0
 14753 ;; hardware stack exceeded
 14754  017D6A  0EFA               	movlw	-6
 14755  017D6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14756  017D72  0EFB               	movlw	-5
 14757  017D74  006F FF8C  F00C    	movff	plusw1,btemp+11
 14758                           
 14759                           ;stkvar	_l @ sp[(-4)+2]
 14760  017D7A  0EFF               	movlw	-1
 14761  017D7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14762  017D82  0EFE               	movlw	-2
 14763  017D84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14764                           
 14765                           ;stkvar	__r @ sp[(-4)+-4]
 14766  017D8A  0EF8               	movlw	-8
 14767  017D8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14768  017D92  0EF9               	movlw	-7
 14769  017D94  006F FF8C  F00C    	movff	plusw1,btemp+11
 14770                           
 14771                           ;stkvar	_r @ sp[(-4)+0]
 14772  017D9A  0EFD               	movlw	-3
 14773  017D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14774  017DA2  0EFC               	movlw	-4
 14775  017DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14776                           
 14777                           ;stkvar	_n @ sp[(-4)+-6]
 14778  017DAA  0EF6               	movlw	-10
 14779  017DAC  006F FF8C  F001    	movff	plusw1,btemp
 14780  017DB2  0E01               	movlw	1
 14781  017DB4  5E01               	subwf	btemp^0,f,c
 14782  017DB6  0EF6               	movlw	-10
 14783  017DB8  0060  F007  FFE3   	movff	btemp,plusw1
 14784  017DBE  0EF7               	movlw	-9
 14785  017DC0  006F FF8C  F001    	movff	plusw1,btemp
 14786  017DC6  0E00               	movlw	0
 14787  017DC8  5A01               	subwfb	btemp^0,f,c
 14788  017DCA  0EF7               	movlw	-9
 14789  017DCC  0060  F007  FFE3   	movff	btemp,plusw1
 14790  017DD2  0EF6               	movlw	-10
 14791  017DD4  28E3               	incf	plusw1,w,c
 14792  017DD6  E13F               	bnz	l9279
 14793  017DD8  0EF7               	movlw	-9
 14794  017DDA  28E3               	incf	plusw1,w,c
 14795  017DDC  A4D8               	btfss	status,2,c
 14796  017DDE  D03B               	goto	l9279
 14797  017DE0  0E00               	movlw	0
 14798  017DE2  6E01               	movwf	btemp^0,c
 14799  017DE4  0E00               	movlw	0
 14800  017DE6  6E02               	movwf	(btemp+1)^0,c
 14801  017DE8  D0C7               	goto	l3456
 14802  017DEA                     l9277:
 14803                           
 14804                           ;stkvar	_l @ sp[(-4)+2]
 14805  017DEA  0EFE               	movlw	-2
 14806  017DEC  50E3               	movf	plusw1,w,c
 14807  017DEE  0F01               	addlw	1
 14808  017DF0  6E01               	movwf	btemp^0,c
 14809  017DF2  0EFE               	movlw	-2
 14810  017DF4  0060  F007  FFE3   	movff	btemp,plusw1
 14811  017DFA  6A01               	clrf	btemp^0,c
 14812  017DFC  0EFF               	movlw	-1
 14813  017DFE  50E3               	movf	plusw1,w,c
 14814  017E00  2001               	addwfc	btemp^0,w,c
 14815  017E02  6E01               	movwf	btemp^0,c
 14816  017E04  0EFF               	movlw	-1
 14817  017E06  0060  F007  FFE3   	movff	btemp,plusw1
 14818                           
 14819                           ;stkvar	_r @ sp[(-4)+0]
 14820  017E0C  0EFC               	movlw	-4
 14821  017E0E  50E3               	movf	plusw1,w,c
 14822  017E10  0F01               	addlw	1
 14823  017E12  6E01               	movwf	btemp^0,c
 14824  017E14  0EFC               	movlw	-4
 14825  017E16  0060  F007  FFE3   	movff	btemp,plusw1
 14826  017E1C  6A01               	clrf	btemp^0,c
 14827  017E1E  0EFD               	movlw	-3
 14828  017E20  50E3               	movf	plusw1,w,c
 14829  017E22  2001               	addwfc	btemp^0,w,c
 14830  017E24  6E01               	movwf	btemp^0,c
 14831  017E26  0EFD               	movlw	-3
 14832  017E28  0060  F007  FFE3   	movff	btemp,plusw1
 14833                           
 14834                           ;stkvar	_n @ sp[(-4)+-6]
 14835  017E2E  0EF6               	movlw	-10
 14836  017E30  006F FF8C  F001    	movff	plusw1,btemp
 14837  017E36  0E01               	movlw	1
 14838  017E38  5E01               	subwf	btemp^0,f,c
 14839  017E3A  0EF6               	movlw	-10
 14840  017E3C  0060  F007  FFE3   	movff	btemp,plusw1
 14841  017E42  0EF7               	movlw	-9
 14842  017E44  006F FF8C  F001    	movff	plusw1,btemp
 14843  017E4A  0E00               	movlw	0
 14844  017E4C  5A01               	subwfb	btemp^0,f,c
 14845  017E4E  0EF7               	movlw	-9
 14846  017E50  0060  F007  FFE3   	movff	btemp,plusw1
 14847  017E56                     l9279:
 14848                           
 14849                           ;stkvar	_l @ sp[(-4)+2]
 14850  017E56  0EFE               	movlw	-2
 14851  017E58  006F FF8F FFF6     	movff	plusw1,tblptrl
 14852  017E5E  0EFF               	movlw	-1
 14853  017E60  006F FF8F FFF7     	movff	plusw1,tblptrh
 14854  017E66  0E00               	movlw	low (__mediumconst shr (0+16))
 14855  017E68  6EF8               	movwf	tblptru,c
 14856  017E6A  0E1F               	movlw	(high __ramtop+-1)
 14857  017E6C  64F7               	cpfsgt	tblptrh,c
 14858  017E6E  D003               	bra	u8567
 14859  017E70  0008               	tblrd		*
 14860  017E72  50F5               	movf	tablat,w,c
 14861  017E74  D007               	bra	u8560
 14862  017E76                     u8567:
 14863  017E76  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14864  017E7C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14865  017E82  50EF               	movf	indf0,w,c
 14866  017E84                     u8560:
 14867  017E84  0900               	iorlw	0
 14868  017E86  B4D8               	btfsc	status,2,c
 14869  017E88  D04A               	goto	u8600
 14870                           
 14871                           ;stkvar	_r @ sp[(-4)+0]
 14872  017E8A  50E1               	movf	fsr1l,w,c
 14873  017E8C  0FFC               	addlw	-4
 14874  017E8E  6ED9               	movwf	fsr2l,c
 14875  017E90  50E2               	movf	fsr1h,w,c
 14876  017E92  6EDA               	movwf	fsr2h,c
 14877  017E94  0EFF               	movlw	255
 14878  017E96  22DA               	addwfc	fsr2h,f,c
 14879  017E98  006F FF7B FFF6     	movff	postinc2,tblptrl
 14880  017E9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 14881  017EA4                     	if	0	;tblptru may be non-zero
 14882  017EA4                     	endif
 14883  017EA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14884  017EA4  0E00               	movlw	low (__mediumconst shr (0+16))
 14885  017EA6  6EF8               	movwf	tblptru,c
 14886  017EA8                     	endif
 14887  017EA8  0008               	tblrd		*
 14888  017EAA  50F5               	movf	tablat,w,c
 14889  017EAC  0900               	iorlw	0
 14890  017EAE  B4D8               	btfsc	status,2,c
 14891  017EB0  D036               	goto	u8600
 14892                           
 14893                           ;stkvar	_n @ sp[(-4)+-6]
 14894  017EB2  0EF6               	movlw	-10
 14895  017EB4  006F FF8C  F001    	movff	plusw1,btemp
 14896  017EBA  0EF7               	movlw	-9
 14897  017EBC  50E3               	movf	plusw1,w,c
 14898  017EBE  1001               	iorwf	btemp^0,w,c
 14899  017EC0  B4D8               	btfsc	status,2,c
 14900  017EC2  D02D               	goto	u8600
 14901                           
 14902                           ;stkvar	_r @ sp[(-4)+0]
 14903  017EC4  50E1               	movf	fsr1l,w,c
 14904  017EC6  0FFC               	addlw	-4
 14905  017EC8  6ED9               	movwf	fsr2l,c
 14906  017ECA  50E2               	movf	fsr1h,w,c
 14907  017ECC  6EDA               	movwf	fsr2h,c
 14908  017ECE  0EFF               	movlw	255
 14909  017ED0  22DA               	addwfc	fsr2h,f,c
 14910  017ED2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14911  017ED8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14912  017EDE                     	if	0	;tblptru may be non-zero
 14913  017EDE                     	endif
 14914  017EDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14915  017EDE  0E00               	movlw	low (__mediumconst shr (0+16))
 14916  017EE0  6EF8               	movwf	tblptru,c
 14917  017EE2                     	endif
 14918  017EE2  0008               	tblrd		*
 14919  017EE4  006F FFD4  F00C    	movff	tablat,btemp+11
 14920                           
 14921                           ;stkvar	_l @ sp[(-4)+2]
 14922  017EEA  0EFE               	movlw	-2
 14923  017EEC  006F FF8F FFF6     	movff	plusw1,tblptrl
 14924  017EF2  0EFF               	movlw	-1
 14925  017EF4  006F FF8F FFF7     	movff	plusw1,tblptrh
 14926  017EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 14927  017EFC  6EF8               	movwf	tblptru,c
 14928  017EFE  0E1F               	movlw	(high __ramtop+-1)
 14929  017F00  64F7               	cpfsgt	tblptrh,c
 14930  017F02  D003               	bra	u8607
 14931  017F04  0008               	tblrd		*
 14932  017F06  50F5               	movf	tablat,w,c
 14933  017F08  D007               	bra	u8605
 14934  017F0A                     u8607:
 14935  017F0A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14936  017F10  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14937  017F16  50EF               	movf	indf0,w,c
 14938  017F18                     u8605:
 14939  017F18  180C               	xorwf	(btemp+11)^0,w,c
 14940  017F1A  B4D8               	btfsc	status,2,c
 14941  017F1C  D766               	goto	l9277
 14942  017F1E                     u8600:
 14943                           
 14944                           ;stkvar	_l @ sp[(-4)+2]
 14945  017F1E  0EFE               	movlw	-2
 14946  017F20  006F FF8F FFF6     	movff	plusw1,tblptrl
 14947  017F26  0EFF               	movlw	-1
 14948  017F28  006F FF8F FFF7     	movff	plusw1,tblptrh
 14949  017F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 14950  017F30  6EF8               	movwf	tblptru,c
 14951  017F32  0E1F               	movlw	(high __ramtop+-1)
 14952  017F34  64F7               	cpfsgt	tblptrh,c
 14953  017F36  D003               	bra	u8617
 14954  017F38  0008               	tblrd		*
 14955  017F3A  50F5               	movf	tablat,w,c
 14956  017F3C  D007               	bra	u8610
 14957  017F3E                     u8617:
 14958  017F3E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14959  017F44  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14960  017F4A  50EF               	movf	indf0,w,c
 14961  017F4C                     u8610:
 14962  017F4C  6E01               	movwf	btemp^0,c
 14963  017F4E  6A02               	clrf	(btemp+1)^0,c
 14964                           
 14965                           ;stkvar	_r @ sp[(-4)+0]
 14966  017F50  50E1               	movf	fsr1l,w,c
 14967  017F52  0FFC               	addlw	-4
 14968  017F54  6ED9               	movwf	fsr2l,c
 14969  017F56  50E2               	movf	fsr1h,w,c
 14970  017F58  6EDA               	movwf	fsr2h,c
 14971  017F5A  0EFF               	movlw	255
 14972  017F5C  22DA               	addwfc	fsr2h,f,c
 14973  017F5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14974  017F64  006F FF77 FFF7     	movff	postdec2,tblptrh
 14975  017F6A                     	if	0	;tblptru may be non-zero
 14976  017F6A                     	endif
 14977  017F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14978  017F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 14979  017F6C  6EF8               	movwf	tblptru,c
 14980  017F6E                     	endif
 14981  017F6E  0008               	tblrd		*
 14982  017F70  50F5               	movf	tablat,w,c
 14983  017F72  5E01               	subwf	btemp^0,f,c
 14984  017F74  0E00               	movlw	0
 14985  017F76  5A02               	subwfb	(btemp+1)^0,f,c
 14986  017F78                     l3456:
 14987                           
 14988                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14989  017F78  0EF6               	movlw	246
 14990  017F7A  26E1               	addwf	fsr1l,f,c
 14991  017F7C  0EFF               	movlw	255
 14992  017F7E  22E2               	addwfc	fsr1h,f,c
 14993  017F80  0012               	return		;funcret
 14994  017F82                     __end_of_strncmp:
 14995                           	opt callstack 0
 14996                           
 14997 ;; *************** function _stoa *****************
 14998 ;; Defined at:
 14999 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15002 ;;		 -> f(6), NULL(0), 
 15003 ;;  s               2  [STACK] PTR unsigned char 
 15004 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 15005 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 15006 ;;		 -> V(191), 
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;  nuls            7  [STACK] unsigned char [7]
 15009 ;;  l               2  [STACK] int 
 15010 ;;  p               2  [STACK] int 
 15011 ;;  cp              2  [STACK] PTR unsigned char 
 15012 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 15013 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 15014 ;;		 -> STR_3(6), V(191), 
 15015 ;;  w               2  [STACK] int 
 15016 ;;  i               2  [STACK] int 
 15017 ;; Return value:  Size  Location     Type
 15018 ;;                  2  [STACK] int 
 15019 ;; Registers used:
 15020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15021 ;; Tracked objects:
 15022 ;;		On entry : 0/0
 15023 ;;		On exit  : 0/0
 15024 ;;		Unchanged: 0/0
 15025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15030 ;;Total ram usage:        0 bytes
 15031 ;; Hardware stack levels used:    1
 15032 ;; Hardware stack levels required when called:   18
 15033 ;; This function calls:
 15034 ;;		_fputc
 15035 ;;		_strlen
 15036 ;; This function is called by:
 15037 ;;		_vfpfcnvrt
 15038 ;; This function uses a reentrant model
 15039 ;;
 15040                           
 15041                           	psect	text54
 15042  017146                     __ptext54:
 15043                           	opt callstack 0
 15044  017146                     _stoa:
 15045                           	opt callstack 0
 15046                           
 15047                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15048  017146  0E11               	movlw	17
 15049  017148  26E1               	addwf	fsr1l,f,c
 15050  01714A  0E00               	movlw	0
 15051  01714C  22E2               	addwfc	fsr1h,f,c
 15052                           
 15053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15054                           
 15055                           ;incstack = 0
 15056 ;; hardware stack exceeded
 15057  01714E  EE20  F0F0         	lfsr	2,stoa@F1166
 15058                           
 15059                           ;stkvar	_nuls @ sp[(-17)+0]
 15060  017152  0E07               	movlw	7
 15061  017154  6E01               	movwf	btemp^0,c
 15062  017156  0EEF               	movlw	-17
 15063  017158                     us1152999:
 15064  017158  006F FF7B FFE3     	movff	postinc2,plusw1
 15065  01715E  28E8               	incf	wreg,w,c
 15066  017160  2E01               	decfsz	btemp^0,f,c
 15067  017162  D7FA               	bra	us1152999
 15068                           
 15069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15070                           ;stkvar	_s @ sp[(-17)+-4]
 15071  017164  0EEB               	movlw	-21
 15072  017166  006F FF8C  F00B    	movff	plusw1,btemp+10
 15073  01716C  0EEC               	movlw	-20
 15074  01716E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15075                           
 15076                           ;stkvar	_cp @ sp[(-17)+11]
 15077  017174  0EFB               	movlw	-5
 15078  017176  0060  F033  FFE3   	movff	btemp+11,plusw1
 15079  01717C  0EFA               	movlw	-6
 15080  01717E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15081                           
 15082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15083                           ;stkvar	_cp @ sp[(-17)+11]
 15084  017184  0EFA               	movlw	-6
 15085  017186  006F FF8C  F001    	movff	plusw1,btemp
 15086  01718C  0EFB               	movlw	-5
 15087  01718E  50E3               	movf	plusw1,w,c
 15088  017190  1001               	iorwf	btemp^0,w,c
 15089  017192  A4D8               	btfss	status,2,c
 15090  017194  D00E               	goto	l12123
 15091                           
 15092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15093                           ;stkvar	_nuls @ sp[(-17)+0]
 15094  017196  0EEF               	movlw	239
 15095  017198  24E1               	addwf	fsr1l,w,c
 15096  01719A  6E0B               	movwf	(btemp+10)^0,c
 15097  01719C  0EFF               	movlw	255
 15098  01719E  20E2               	addwfc	fsr1h,w,c
 15099  0171A0  6E0C               	movwf	(btemp+11)^0,c
 15100                           
 15101                           ;stkvar	_cp @ sp[(-17)+11]
 15102  0171A2  0EFB               	movlw	-5
 15103  0171A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15104  0171AA  0EFA               	movlw	-6
 15105  0171AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15106  0171B2                     l12123:
 15107                           
 15108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15109                           ;stkvar	_cp @ sp[(-17)+11]
 15110  0171B2  0EFA               	movlw	-6
 15111  0171B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15112  0171BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15113  0171C0  ECE0  F0D2         	call	_strlen	;wreg free
 15114                           
 15115                           ;stkvar	_l @ sp[(-17)+7]
 15116  0171C4  0EF6               	movlw	-10
 15117  0171C6  0060  F007  FFE3   	movff	btemp,plusw1
 15118  0171CC  0EF7               	movlw	-9
 15119  0171CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15120                           
 15121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15122                           ;stkvar	_p @ sp[(-17)+9]
 15123  0171D4  0EF8               	movlw	-8
 15124  0171D6  0060  F0F3  FFE3   	movff	_prec,plusw1
 15125  0171DC  0EF9               	movlw	-7
 15126  0171DE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15127                           
 15128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15129                           ;stkvar	_p @ sp[(-17)+9]
 15130  0171E4  0EF9               	movlw	-7
 15131  0171E6  BEE3               	btfsc	plusw1,7,c
 15132  0171E8  D023               	goto	l2281
 15133                           
 15134                           ;stkvar	_l @ sp[(-17)+7]
 15135                           ;stkvar	_p @ sp[(-17)+9]
 15136  0171EA  50E1               	movf	fsr1l,w,c
 15137  0171EC  0FF8               	addlw	-8
 15138  0171EE  6ED9               	movwf	fsr2l,c
 15139  0171F0  50E2               	movf	fsr1h,w,c
 15140  0171F2  6EDA               	movwf	fsr2h,c
 15141  0171F4  0EFF               	movlw	255
 15142  0171F6  22DA               	addwfc	fsr2h,f,c
 15143  0171F8  0EF6               	movlw	-10
 15144  0171FA  50E3               	movf	plusw1,w,c
 15145  0171FC  5CDE               	subwf	postinc2,w,c
 15146  0171FE  50DE               	movf	postinc2,w,c
 15147  017200  0A80               	xorlw	128
 15148  017202  6E01               	movwf	btemp^0,c
 15149  017204  0EF7               	movlw	-9
 15150  017206  50E3               	movf	plusw1,w,c
 15151  017208  0A80               	xorlw	128
 15152  01720A  5801               	subwfb	btemp^0,w,c
 15153  01720C  B0D8               	btfsc	status,0,c
 15154  01720E  D010               	goto	l2281
 15155                           
 15156                           ;stkvar	_p @ sp[(-17)+9]
 15157                           ;stkvar	_l @ sp[(-17)+7]
 15158  017210  0EF8               	movlw	-8
 15159  017212  006F FF8C  F001    	movff	plusw1,btemp
 15160  017218  0EF6               	movlw	-10
 15161  01721A  0060  F007  FFE3   	movff	btemp,plusw1
 15162  017220  0EF9               	movlw	-7
 15163  017222  006F FF8C  F001    	movff	plusw1,btemp
 15164  017228  0EF7               	movlw	-9
 15165  01722A  0060  F007  FFE3   	movff	btemp,plusw1
 15166  017230                     l2281:
 15167                           
 15168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15169                           ;stkvar	_l @ sp[(-17)+7]
 15170                           ;stkvar	_p @ sp[(-17)+9]
 15171  017230  0EF6               	movlw	-10
 15172  017232  006F FF8C  F001    	movff	plusw1,btemp
 15173  017238  0EF8               	movlw	-8
 15174  01723A  0060  F007  FFE3   	movff	btemp,plusw1
 15175  017240  0EF7               	movlw	-9
 15176  017242  006F FF8C  F001    	movff	plusw1,btemp
 15177  017248  0EF9               	movlw	-7
 15178  01724A  0060  F007  FFE3   	movff	btemp,plusw1
 15179                           
 15180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15181                           ;stkvar	_w @ sp[(-17)+13]
 15182  017250  0EFC               	movlw	-4
 15183  017252  0060  F0EB  FFE3   	movff	_width,plusw1
 15184  017258  0EFD               	movlw	-3
 15185  01725A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15186                           
 15187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15188  017260  A03E               	btfss	_flags^0,0,c
 15189  017262  D01F               	goto	l12143
 15190  017264  D031               	goto	u11570
 15191  017266                     l12139:
 15192                           
 15193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15194                           ;stkvar	_fp @ sp[(-17)+-2]
 15195  017266  0EED               	movlw	-19
 15196  017268  006F FF8F FFE6     	movff	plusw1,postinc1
 15197  01726E  006F FF8F FFE6     	movff	plusw1,postinc1
 15198  017274  0E20               	movlw	32
 15199  017276  6EE6               	movwf	postinc1,c
 15200  017278  0E00               	movlw	0
 15201  01727A  6EE6               	movwf	postinc1,c
 15202  01727C  EC64  F0CA         	call	_fputc	;wreg free
 15203                           
 15204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15205                           ;stkvar	_l @ sp[(-17)+7]
 15206  017280  0EF6               	movlw	-10
 15207  017282  50E3               	movf	plusw1,w,c
 15208  017284  0F01               	addlw	1
 15209  017286  6E01               	movwf	btemp^0,c
 15210  017288  0EF6               	movlw	-10
 15211  01728A  0060  F007  FFE3   	movff	btemp,plusw1
 15212  017290  6A01               	clrf	btemp^0,c
 15213  017292  0EF7               	movlw	-9
 15214  017294  50E3               	movf	plusw1,w,c
 15215  017296  2001               	addwfc	btemp^0,w,c
 15216  017298  6E01               	movwf	btemp^0,c
 15217  01729A  0EF7               	movlw	-9
 15218  01729C  0060  F007  FFE3   	movff	btemp,plusw1
 15219  0172A2                     l12143:
 15220                           
 15221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15222                           ;stkvar	_w @ sp[(-17)+13]
 15223                           ;stkvar	_l @ sp[(-17)+7]
 15224  0172A2  50E1               	movf	fsr1l,w,c
 15225  0172A4  0FF6               	addlw	-10
 15226  0172A6  6ED9               	movwf	fsr2l,c
 15227  0172A8  50E2               	movf	fsr1h,w,c
 15228  0172AA  6EDA               	movwf	fsr2h,c
 15229  0172AC  0EFF               	movlw	255
 15230  0172AE  22DA               	addwfc	fsr2h,f,c
 15231  0172B0  0EFC               	movlw	-4
 15232  0172B2  50E3               	movf	plusw1,w,c
 15233  0172B4  5CDE               	subwf	postinc2,w,c
 15234  0172B6  50DE               	movf	postinc2,w,c
 15235  0172B8  0A80               	xorlw	128
 15236  0172BA  6E01               	movwf	btemp^0,c
 15237  0172BC  0EFD               	movlw	-3
 15238  0172BE  50E3               	movf	plusw1,w,c
 15239  0172C0  0A80               	xorlw	128
 15240  0172C2  5801               	subwfb	btemp^0,w,c
 15241  0172C4  A0D8               	btfss	status,0,c
 15242  0172C6  D7CF               	goto	l12139
 15243  0172C8                     u11570:
 15244                           
 15245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15246                           ;stkvar	_i @ sp[(-17)+15]
 15247  0172C8  0EFE               	movlw	-2
 15248  0172CA  6AE3               	clrf	plusw1,c
 15249  0172CC  0EFF               	movlw	-1
 15250  0172CE  6AE3               	clrf	plusw1,c
 15251                           
 15252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15253  0172D0  D045               	goto	l12153
 15254  0172D2                     l12147:
 15255                           
 15256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15257                           ;stkvar	_fp @ sp[(-17)+-2]
 15258  0172D2  0EED               	movlw	-19
 15259  0172D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15260  0172DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15261                           
 15262                           ;stkvar	_cp @ sp[(-19)+11]
 15263  0172E0  0EF8               	movlw	-8
 15264  0172E2  006F FF8F FFF6     	movff	plusw1,tblptrl
 15265  0172E8  0EF9               	movlw	-7
 15266  0172EA  006F FF8F FFF7     	movff	plusw1,tblptrh
 15267  0172F0  0E00               	movlw	low (__mediumconst shr (0+16))
 15268  0172F2  6EF8               	movwf	tblptru,c
 15269  0172F4  0E1F               	movlw	(high __ramtop+-1)
 15270  0172F6  64F7               	cpfsgt	tblptrh,c
 15271  0172F8  D003               	bra	u11587
 15272  0172FA  0008               	tblrd		*
 15273  0172FC  50F5               	movf	tablat,w,c
 15274  0172FE  D007               	bra	u11580
 15275  017300                     u11587:
 15276  017300  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15277  017306  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15278  01730C  50EF               	movf	indf0,w,c
 15279  01730E                     u11580:
 15280  01730E  6EE6               	movwf	postinc1,c
 15281  017310  0E00               	movlw	0
 15282  017312  6EE6               	movwf	postinc1,c
 15283  017314  EC64  F0CA         	call	_fputc	;wreg free
 15284                           
 15285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15286                           ;stkvar	_cp @ sp[(-17)+11]
 15287  017318  0EFA               	movlw	-6
 15288  01731A  50E3               	movf	plusw1,w,c
 15289  01731C  0F01               	addlw	1
 15290  01731E  6E01               	movwf	btemp^0,c
 15291  017320  0EFA               	movlw	-6
 15292  017322  0060  F007  FFE3   	movff	btemp,plusw1
 15293  017328  6A01               	clrf	btemp^0,c
 15294  01732A  0EFB               	movlw	-5
 15295  01732C  50E3               	movf	plusw1,w,c
 15296  01732E  2001               	addwfc	btemp^0,w,c
 15297  017330  6E01               	movwf	btemp^0,c
 15298  017332  0EFB               	movlw	-5
 15299  017334  0060  F007  FFE3   	movff	btemp,plusw1
 15300                           
 15301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15302                           ;stkvar	_i @ sp[(-17)+15]
 15303  01733A  0EFE               	movlw	-2
 15304  01733C  50E3               	movf	plusw1,w,c
 15305  01733E  0F01               	addlw	1
 15306  017340  6E01               	movwf	btemp^0,c
 15307  017342  0EFE               	movlw	-2
 15308  017344  0060  F007  FFE3   	movff	btemp,plusw1
 15309  01734A  6A01               	clrf	btemp^0,c
 15310  01734C  0EFF               	movlw	-1
 15311  01734E  50E3               	movf	plusw1,w,c
 15312  017350  2001               	addwfc	btemp^0,w,c
 15313  017352  6E01               	movwf	btemp^0,c
 15314  017354  0EFF               	movlw	-1
 15315  017356  0060  F007  FFE3   	movff	btemp,plusw1
 15316  01735C                     l12153:
 15317                           
 15318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15319                           ;stkvar	_p @ sp[(-17)+9]
 15320                           ;stkvar	_i @ sp[(-17)+15]
 15321  01735C  50E1               	movf	fsr1l,w,c
 15322  01735E  0FFE               	addlw	-2
 15323  017360  6ED9               	movwf	fsr2l,c
 15324  017362  50E2               	movf	fsr1h,w,c
 15325  017364  6EDA               	movwf	fsr2h,c
 15326  017366  0EFF               	movlw	255
 15327  017368  22DA               	addwfc	fsr2h,f,c
 15328  01736A  0EF8               	movlw	-8
 15329  01736C  50E3               	movf	plusw1,w,c
 15330  01736E  5CDE               	subwf	postinc2,w,c
 15331  017370  50DE               	movf	postinc2,w,c
 15332  017372  0A80               	xorlw	128
 15333  017374  6E01               	movwf	btemp^0,c
 15334  017376  0EF9               	movlw	-7
 15335  017378  50E3               	movf	plusw1,w,c
 15336  01737A  0A80               	xorlw	128
 15337  01737C  5801               	subwfb	btemp^0,w,c
 15338  01737E  A0D8               	btfss	status,0,c
 15339  017380  D7A8               	goto	l12147
 15340                           
 15341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15342  017382  B03E               	btfsc	_flags^0,0,c
 15343  017384  D01F               	goto	l12161
 15344  017386  D031               	goto	u11610
 15345  017388                     l12157:
 15346                           
 15347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15348                           ;stkvar	_fp @ sp[(-17)+-2]
 15349  017388  0EED               	movlw	-19
 15350  01738A  006F FF8F FFE6     	movff	plusw1,postinc1
 15351  017390  006F FF8F FFE6     	movff	plusw1,postinc1
 15352  017396  0E20               	movlw	32
 15353  017398  6EE6               	movwf	postinc1,c
 15354  01739A  0E00               	movlw	0
 15355  01739C  6EE6               	movwf	postinc1,c
 15356  01739E  EC64  F0CA         	call	_fputc	;wreg free
 15357                           
 15358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15359                           ;stkvar	_l @ sp[(-17)+7]
 15360  0173A2  0EF6               	movlw	-10
 15361  0173A4  50E3               	movf	plusw1,w,c
 15362  0173A6  0F01               	addlw	1
 15363  0173A8  6E01               	movwf	btemp^0,c
 15364  0173AA  0EF6               	movlw	-10
 15365  0173AC  0060  F007  FFE3   	movff	btemp,plusw1
 15366  0173B2  6A01               	clrf	btemp^0,c
 15367  0173B4  0EF7               	movlw	-9
 15368  0173B6  50E3               	movf	plusw1,w,c
 15369  0173B8  2001               	addwfc	btemp^0,w,c
 15370  0173BA  6E01               	movwf	btemp^0,c
 15371  0173BC  0EF7               	movlw	-9
 15372  0173BE  0060  F007  FFE3   	movff	btemp,plusw1
 15373  0173C4                     l12161:
 15374                           
 15375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15376                           ;stkvar	_w @ sp[(-17)+13]
 15377                           ;stkvar	_l @ sp[(-17)+7]
 15378  0173C4  50E1               	movf	fsr1l,w,c
 15379  0173C6  0FF6               	addlw	-10
 15380  0173C8  6ED9               	movwf	fsr2l,c
 15381  0173CA  50E2               	movf	fsr1h,w,c
 15382  0173CC  6EDA               	movwf	fsr2h,c
 15383  0173CE  0EFF               	movlw	255
 15384  0173D0  22DA               	addwfc	fsr2h,f,c
 15385  0173D2  0EFC               	movlw	-4
 15386  0173D4  50E3               	movf	plusw1,w,c
 15387  0173D6  5CDE               	subwf	postinc2,w,c
 15388  0173D8  50DE               	movf	postinc2,w,c
 15389  0173DA  0A80               	xorlw	128
 15390  0173DC  6E01               	movwf	btemp^0,c
 15391  0173DE  0EFD               	movlw	-3
 15392  0173E0  50E3               	movf	plusw1,w,c
 15393  0173E2  0A80               	xorlw	128
 15394  0173E4  5801               	subwfb	btemp^0,w,c
 15395  0173E6  A0D8               	btfss	status,0,c
 15396  0173E8  D7CF               	goto	l12157
 15397  0173EA                     u11610:
 15398                           
 15399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15400                           ;stkvar	_l @ sp[(-17)+7]
 15401  0173EA  0EF6               	movlw	-10
 15402  0173EC  006F FF8C  F001    	movff	plusw1,btemp
 15403  0173F2  0EF7               	movlw	-9
 15404  0173F4  006F FF8C  F002    	movff	plusw1,btemp+1
 15405                           
 15406                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15407  0173FA  0EEB               	movlw	235
 15408  0173FC  26E1               	addwf	fsr1l,f,c
 15409  0173FE  0EFF               	movlw	255
 15410  017400  22E2               	addwfc	fsr1h,f,c
 15411  017402  0012               	return		;funcret
 15412  017404                     __end_of_stoa:
 15413                           	opt callstack 0
 15414                           
 15415 ;; *************** function _efgtoa *****************
 15416 ;; Defined at:
 15417 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15420 ;;		 -> f(6), NULL(0), 
 15421 ;;  f               4  [STACK] PTR struct _IO_FILE
 15422 ;;  c               1  [STACK] unsigned char 
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;  u               4  [STACK] unsigned char 
 15425 ;;  g               4  [STACK] unsigned char 
 15426 ;;  l               4  [STACK] unsigned char 
 15427 ;;  h               4  [STACK] unsigned char 
 15428 ;;  ou              4  [STACK] unsigned char 
 15429 ;;  n               2  [STACK] int 
 15430 ;;  e               2  [STACK] int 
 15431 ;;  i               2  [STACK] int 
 15432 ;;  w               2  [STACK] int 
 15433 ;;  p               2  [STACK] int 
 15434 ;;  sign            2  [STACK] int 
 15435 ;;  d               2  [STACK] int 
 15436 ;;  ne              2  [STACK] int 
 15437 ;;  m               2  [STACK] int 
 15438 ;;  pp              2  [STACK] int 
 15439 ;;  t               2  [STACK] int 
 15440 ;;  mode            1  [STACK] unsigned char 
 15441 ;;  nmode           1  [STACK] unsigned char 
 15442 ;; Return value:  Size  Location     Type
 15443 ;;                  2  [STACK] int 
 15444 ;; Registers used:
 15445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15446 ;; Tracked objects:
 15447 ;;		On entry : 0/0
 15448 ;;		On exit  : 0/0
 15449 ;;		Unchanged: 0/0
 15450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;Total ram usage:        0 bytes
 15456 ;; Hardware stack levels used:    1
 15457 ;; Hardware stack levels required when called:   20
 15458 ;; This function calls:
 15459 ;;		___awdiv
 15460 ;;		___awmod
 15461 ;;		___fladd
 15462 ;;		___fldiv
 15463 ;;		___fleq
 15464 ;;		___flge
 15465 ;;		___flmul
 15466 ;;		___flneg
 15467 ;;		___flsub
 15468 ;;		___fltol
 15469 ;;		___fpclassifyf
 15470 ;;		_floorf
 15471 ;;		_isupper
 15472 ;;		_pad
 15473 ;;		_strcpy
 15474 ;;		_tolower
 15475 ;; This function is called by:
 15476 ;;		_vfpfcnvrt
 15477 ;; This function uses a reentrant model
 15478 ;;
 15479                           
 15480                           	psect	text55
 15481  010000                     __ptext55:
 15482                           	opt callstack 0
 15483  010000                     _efgtoa:
 15484                           	opt callstack 0
 15485                           
 15486                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15487  010000  0E38               	movlw	56
 15488  010002  26E1               	addwf	fsr1l,f,c
 15489  010004  0E00               	movlw	0
 15490  010006  22E2               	addwfc	fsr1h,f,c
 15491                           
 15492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15493                           ;stkvar	_sign @ sp[(-56)+42]
 15494                           
 15495                           ;incstack = 0
 15496 ;; hardware stack exceeded
 15497  010008  0EF2               	movlw	-14
 15498  01000A  6AE3               	clrf	plusw1,c
 15499  01000C  0EF3               	movlw	-13
 15500  01000E  6AE3               	clrf	plusw1,c
 15501                           
 15502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15503                           ;stkvar	_f @ sp[(-56)+-6]
 15504  010010  0EC2               	movlw	-62
 15505  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15506  010018  0EC3               	movlw	-61
 15507  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15508  010020  0EC4               	movlw	-60
 15509  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15510  010028  0EC5               	movlw	-59
 15511  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15512                           
 15513                           ;stkvar	_g @ sp[(-56)+16]
 15514  010030  0ED8               	movlw	-40
 15515  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15516  010038  0ED9               	movlw	-39
 15517  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15518  010040  0EDA               	movlw	-38
 15519  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15520  010048  0EDB               	movlw	-37
 15521  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15522                           
 15523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15524                           ;stkvar	_g @ sp[(-56)+16]
 15525  010050  0EDB               	movlw	-37
 15526  010052  AEE3               	btfss	plusw1,7,c
 15527  010054  D02B               	goto	l11821
 15528                           
 15529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15530  010056  0E01               	movlw	1
 15531  010058  6E0B               	movwf	(btemp+10)^0,c
 15532  01005A  0E00               	movlw	0
 15533  01005C  6E0C               	movwf	(btemp+11)^0,c
 15534                           
 15535                           ;stkvar	_sign @ sp[(-56)+42]
 15536  01005E  0EF2               	movlw	-14
 15537  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15538  010066  0EF3               	movlw	-13
 15539  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15542                           ;stkvar	_g @ sp[(-56)+16]
 15543  01006E  0ED8               	movlw	-40
 15544  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15545  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15546  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15547  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15548  010088  EC55  F0D8         	call	___flneg	;wreg free
 15549                           
 15550                           ;stkvar	_g @ sp[(-56)+16]
 15551  01008C  0ED8               	movlw	-40
 15552  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15553  010094  0ED9               	movlw	-39
 15554  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15555  01009C  0EDA               	movlw	-38
 15556  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15557  0100A4  0EDB               	movlw	-37
 15558  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15559  0100AC                     l11821:
 15560                           
 15561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15562                           ;stkvar	_n @ sp[(-56)+32]
 15563  0100AC  0EE8               	movlw	-24
 15564  0100AE  6AE3               	clrf	plusw1,c
 15565  0100B0  0EE9               	movlw	-23
 15566  0100B2  6AE3               	clrf	plusw1,c
 15567                           
 15568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15569                           ;stkvar	_w @ sp[(-56)+38]
 15570  0100B4  0EEE               	movlw	-18
 15571  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15572  0100BC  0EEF               	movlw	-17
 15573  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15574                           
 15575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15576                           ;stkvar	_sign @ sp[(-56)+42]
 15577  0100C4  0EF2               	movlw	-14
 15578  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15579  0100CC  0EF3               	movlw	-13
 15580  0100CE  50E3               	movf	plusw1,w,c
 15581  0100D0  1001               	iorwf	btemp^0,w,c
 15582  0100D2  A4D8               	btfss	status,2,c
 15583  0100D4  D002               	goto	u11020
 15584  0100D6  A43E               	btfss	_flags^0,2,c
 15585  0100D8  D036               	goto	l11841
 15586  0100DA                     u11020:
 15587                           
 15588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15589                           ;stkvar	_sign @ sp[(-56)+42]
 15590  0100DA  0EF2               	movlw	-14
 15591  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15592  0100E2  0EF3               	movlw	-13
 15593  0100E4  50E3               	movf	plusw1,w,c
 15594  0100E6  1001               	iorwf	btemp^0,w,c
 15595  0100E8  A4D8               	btfss	status,2,c
 15596  0100EA  D002               	goto	l11833
 15597  0100EC  0E2B               	movlw	43
 15598  0100EE  D001               	goto	L16
 15599  0100F0                     l11833:
 15600  0100F0  0E2D               	movlw	45
 15601  0100F2                     L16:
 15602  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15603  0100F4  0E00               	movlw	0
 15604  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15605                           
 15606                           ;stkvar	_efgtoa$5494 @ sp[(-56)+10]
 15607  0100F8  0ED2               	movlw	-46
 15608  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15609  010100  0ED3               	movlw	-45
 15610  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15611                           
 15612                           ;stkvar	_efgtoa$5494 @ sp[(-56)+10]
 15613  010108  0ED2               	movlw	-46
 15614  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 15615                           
 15616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15617                           ;stkvar	_n @ sp[(-56)+32]
 15618  010110  0EE8               	movlw	-24
 15619  010112  50E3               	movf	plusw1,w,c
 15620  010114  0F01               	addlw	1
 15621  010116  6E01               	movwf	btemp^0,c
 15622  010118  0EE8               	movlw	-24
 15623  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15624  010120  6A01               	clrf	btemp^0,c
 15625  010122  0EE9               	movlw	-23
 15626  010124  50E3               	movf	plusw1,w,c
 15627  010126  2001               	addwfc	btemp^0,w,c
 15628  010128  6E01               	movwf	btemp^0,c
 15629  01012A  0EE9               	movlw	-23
 15630  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15631                           
 15632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15633                           ;stkvar	_w @ sp[(-56)+38]
 15634  010132  50E1               	movf	fsr1l,w,c
 15635  010134  0FEE               	addlw	-18
 15636  010136  6ED9               	movwf	fsr2l,c
 15637  010138  50E2               	movf	fsr1h,w,c
 15638  01013A  6EDA               	movwf	fsr2h,c
 15639  01013C  0EFF               	movlw	255
 15640  01013E  22DA               	addwfc	fsr2h,f,c
 15641  010140  06DE               	decf	postinc2,f,c
 15642  010142  0E00               	movlw	0
 15643  010144  5ADD               	subwfb	postdec2,f,c
 15644  010146                     l11841:
 15645                           
 15646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15647                           ;stkvar	_g @ sp[(-56)+16]
 15648  010146  0ED8               	movlw	-40
 15649  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15650  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15651  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15652  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15653  010160  EC7A  F0C3         	call	___fpclassifyf	;wreg free
 15654  010164  0401               	decf	btemp^0,w,c
 15655  010166  1002               	iorwf	(btemp+1)^0,w,c
 15656  010168  A4D8               	btfss	status,2,c
 15657  01016A  D076               	goto	l11859
 15658  01016C  0EBF               	movlw	191
 15659  01016E  6E0B               	movwf	(btemp+10)^0,c
 15660  010170  0EFF               	movlw	255
 15661  010172  6E0C               	movwf	(btemp+11)^0,c
 15662                           
 15663                           ;stkvar	_c @ sp[(-56)+-7]
 15664  010174  0EC1               	movlw	-63
 15665  010176  50E3               	movf	plusw1,w,c
 15666  010178  6E09               	movwf	(btemp+8)^0,c
 15667  01017A  6A0A               	clrf	(btemp+9)^0,c
 15668  01017C  500B               	movf	(btemp+10)^0,w,c
 15669  01017E  2609               	addwf	(btemp+8)^0,f,c
 15670  010180  500C               	movf	(btemp+11)^0,w,c
 15671  010182  220A               	addwfc	(btemp+9)^0,f,c
 15672  010184  500A               	movf	(btemp+9)^0,w,c
 15673  010186  E106               	bnz	u11050
 15674  010188  0E1A               	movlw	26
 15675  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15676  01018C  B0D8               	btfsc	status,0,c
 15677  01018E  D002               	goto	u11050
 15678  010190  0E01               	movlw	1
 15679  010192  D001               	goto	u11060
 15680  010194                     u11050:
 15681  010194  0E00               	movlw	0
 15682  010196                     u11060:
 15683  010196  6E0B               	movwf	(btemp+10)^0,c
 15684  010198  6A0C               	clrf	(btemp+11)^0,c
 15685                           
 15686                           ;stkvar	_efgtoa$5495 @ sp[(-56)+8]
 15687  01019A  0ED0               	movlw	-48
 15688  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15689  0101A2  0ED1               	movlw	-47
 15690  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15691                           
 15692                           ;stkvar	_efgtoa$5495 @ sp[(-56)+8]
 15693  0101AA  0ED0               	movlw	-48
 15694  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15695  0101B2  0ED1               	movlw	-47
 15696  0101B4  50E3               	movf	plusw1,w,c
 15697  0101B6  1001               	iorwf	btemp^0,w,c
 15698  0101B8  B4D8               	btfsc	status,2,c
 15699  0101BA  D017               	goto	l11851
 15700                           
 15701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15702  0101BC  0ED6               	movlw	low STR_66
 15703  0101BE  6EE6               	movwf	postinc1,c
 15704  0101C0  0EFF               	movlw	high STR_66
 15705  0101C2  6EE6               	movwf	postinc1,c
 15706                           
 15707                           ;stkvar	_n @ sp[(-58)+32]
 15708  0101C4  0E97               	movlw	low _dbuf
 15709  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15710  0101C8  0E02               	movlw	high _dbuf
 15711  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15712  0101CC  0EE6               	movlw	-26
 15713  0101CE  50E3               	movf	plusw1,w,c
 15714  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15715  0101D2  0EE7               	movlw	-25
 15716  0101D4  50E3               	movf	plusw1,w,c
 15717  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15718  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15719  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15720  0101E4  EC63  F0D0         	call	_strcpy	;wreg free
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15723  0101E8  D016               	goto	l11853
 15724  0101EA                     l11851:
 15725                           
 15726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15727  0101EA  0EDE               	movlw	low STR_67
 15728  0101EC  6EE6               	movwf	postinc1,c
 15729  0101EE  0EFF               	movlw	high STR_67
 15730  0101F0  6EE6               	movwf	postinc1,c
 15731                           
 15732                           ;stkvar	_n @ sp[(-58)+32]
 15733  0101F2  0E97               	movlw	low _dbuf
 15734  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15735  0101F6  0E02               	movlw	high _dbuf
 15736  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15737  0101FA  0EE6               	movlw	-26
 15738  0101FC  50E3               	movf	plusw1,w,c
 15739  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15740  010200  0EE7               	movlw	-25
 15741  010202  50E3               	movf	plusw1,w,c
 15742  010204  220C               	addwfc	(btemp+11)^0,f,c
 15743  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15744  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15745  010212  EC63  F0D0         	call	_strcpy	;wreg free
 15746  010216                     l11853:
 15747                           
 15748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15749                           ;stkvar	_w @ sp[(-56)+38]
 15750  010216  50E1               	movf	fsr1l,w,c
 15751  010218  0FEE               	addlw	-18
 15752  01021A  6ED9               	movwf	fsr2l,c
 15753  01021C  50E2               	movf	fsr1h,w,c
 15754  01021E  6EDA               	movwf	fsr2h,c
 15755  010220  0EFF               	movlw	255
 15756  010222  22DA               	addwfc	fsr2h,f,c
 15757  010224  0EFD               	movlw	253
 15758  010226  26DE               	addwf	postinc2,f,c
 15759  010228  0EFF               	movlw	255
 15760  01022A  22DD               	addwfc	postdec2,f,c
 15761  01022C                     l11855:
 15762                           
 15763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15764                           ;stkvar	_w @ sp[(-56)+38]
 15765  01022C  0EEE               	movlw	-18
 15766  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15767  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15768  01023A  0E97               	movlw	low _dbuf
 15769  01023C  6EE6               	movwf	postinc1,c
 15770  01023E  0E02               	movlw	high _dbuf
 15771  010240  6EE6               	movwf	postinc1,c
 15772                           
 15773                           ;stkvar	_fp @ sp[(-60)+-2]
 15774  010242  0EC2               	movlw	-62
 15775  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15776  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15777  010250  EC0F  F0CC         	call	_pad	;wreg free
 15778  010254  EF1D  F089         	goto	l2199
 15779  010258                     l11859:
 15780                           
 15781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15782                           ;stkvar	_g @ sp[(-56)+16]
 15783  010258  0ED8               	movlw	-40
 15784  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15785  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15786  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15787  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15788  010272  EC7A  F0C3         	call	___fpclassifyf	;wreg free
 15789  010276  5001               	movf	btemp^0,w,c
 15790  010278  1002               	iorwf	(btemp+1)^0,w,c
 15791  01027A  A4D8               	btfss	status,2,c
 15792  01027C  D056               	goto	l11877
 15793  01027E  0EBF               	movlw	191
 15794  010280  6E0B               	movwf	(btemp+10)^0,c
 15795  010282  0EFF               	movlw	255
 15796  010284  6E0C               	movwf	(btemp+11)^0,c
 15797                           
 15798                           ;stkvar	_c @ sp[(-56)+-7]
 15799  010286  0EC1               	movlw	-63
 15800  010288  50E3               	movf	plusw1,w,c
 15801  01028A  6E09               	movwf	(btemp+8)^0,c
 15802  01028C  6A0A               	clrf	(btemp+9)^0,c
 15803  01028E  500B               	movf	(btemp+10)^0,w,c
 15804  010290  2609               	addwf	(btemp+8)^0,f,c
 15805  010292  500C               	movf	(btemp+11)^0,w,c
 15806  010294  220A               	addwfc	(btemp+9)^0,f,c
 15807  010296  500A               	movf	(btemp+9)^0,w,c
 15808  010298  E106               	bnz	u11090
 15809  01029A  0E1A               	movlw	26
 15810  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15811  01029E  B0D8               	btfsc	status,0,c
 15812  0102A0  D002               	goto	u11090
 15813  0102A2  0E01               	movlw	1
 15814  0102A4  D001               	goto	u11100
 15815  0102A6                     u11090:
 15816  0102A6  0E00               	movlw	0
 15817  0102A8                     u11100:
 15818  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15819  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15820                           
 15821                           ;stkvar	_efgtoa$5499 @ sp[(-56)+6]
 15822  0102AC  0ECE               	movlw	-50
 15823  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15824  0102B4  0ECF               	movlw	-49
 15825  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15826                           
 15827                           ;stkvar	_efgtoa$5499 @ sp[(-56)+6]
 15828  0102BC  0ECE               	movlw	-50
 15829  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15830  0102C4  0ECF               	movlw	-49
 15831  0102C6  50E3               	movf	plusw1,w,c
 15832  0102C8  1001               	iorwf	btemp^0,w,c
 15833  0102CA  B4D8               	btfsc	status,2,c
 15834  0102CC  D017               	goto	l11869
 15835                           
 15836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15837  0102CE  0EDA               	movlw	low STR_70
 15838  0102D0  6EE6               	movwf	postinc1,c
 15839  0102D2  0EFF               	movlw	high STR_70
 15840  0102D4  6EE6               	movwf	postinc1,c
 15841                           
 15842                           ;stkvar	_n @ sp[(-58)+32]
 15843  0102D6  0E97               	movlw	low _dbuf
 15844  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15845  0102DA  0E02               	movlw	high _dbuf
 15846  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15847  0102DE  0EE6               	movlw	-26
 15848  0102E0  50E3               	movf	plusw1,w,c
 15849  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15850  0102E4  0EE7               	movlw	-25
 15851  0102E6  50E3               	movf	plusw1,w,c
 15852  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15853  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15854  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15855  0102F6  EC63  F0D0         	call	_strcpy	;wreg free
 15856                           
 15857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15858  0102FA  D78D               	goto	l11853
 15859  0102FC                     l11869:
 15860                           
 15861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15862  0102FC  0EE2               	movlw	low STR_71
 15863  0102FE  6EE6               	movwf	postinc1,c
 15864  010300  0EFF               	movlw	high STR_71
 15865  010302  6EE6               	movwf	postinc1,c
 15866                           
 15867                           ;stkvar	_n @ sp[(-58)+32]
 15868  010304  0E97               	movlw	low _dbuf
 15869  010306  6E0B               	movwf	(btemp+10)^0,c
 15870  010308  0E02               	movlw	high _dbuf
 15871  01030A  6E0C               	movwf	(btemp+11)^0,c
 15872  01030C  0EE6               	movlw	-26
 15873  01030E  50E3               	movf	plusw1,w,c
 15874  010310  260B               	addwf	(btemp+10)^0,f,c
 15875  010312  0EE7               	movlw	-25
 15876  010314  50E3               	movf	plusw1,w,c
 15877  010316  220C               	addwfc	(btemp+11)^0,f,c
 15878  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15879  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15880  010324  EC63  F0D0         	call	_strcpy	;wreg free
 15881  010328  D776               	goto	l11853
 15882  01032A                     l11877:
 15883                           
 15884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15885  01032A  0E00               	movlw	0
 15886  01032C  6E09               	movwf	(btemp+8)^0,c
 15887  01032E  0E00               	movlw	0
 15888  010330  6E0A               	movwf	(btemp+9)^0,c
 15889  010332  0E80               	movlw	128
 15890  010334  6E0B               	movwf	(btemp+10)^0,c
 15891  010336  0E3F               	movlw	63
 15892  010338  6E0C               	movwf	(btemp+11)^0,c
 15893                           
 15894                           ;stkvar	_u @ sp[(-56)+12]
 15895  01033A  0ED4               	movlw	-44
 15896  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15897  010342  0ED5               	movlw	-43
 15898  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15899  01034A  0ED6               	movlw	-42
 15900  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15901  010352  0ED7               	movlw	-41
 15902  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15903                           
 15904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15905                           ;stkvar	_e @ sp[(-56)+34]
 15906  01035A  0EEA               	movlw	-22
 15907  01035C  6AE3               	clrf	plusw1,c
 15908  01035E  0EEB               	movlw	-21
 15909  010360  6AE3               	clrf	plusw1,c
 15910                           
 15911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15912  010362  0E00               	movlw	0
 15913  010364  6EE6               	movwf	postinc1,c
 15914  010366  0E00               	movlw	0
 15915  010368  6EE6               	movwf	postinc1,c
 15916  01036A  0E00               	movlw	0
 15917  01036C  6EE6               	movwf	postinc1,c
 15918  01036E  0E00               	movlw	0
 15919  010370  6EE6               	movwf	postinc1,c
 15920                           
 15921                           ;stkvar	_g @ sp[(-60)+16]
 15922  010372  0ED4               	movlw	-44
 15923  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15924  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15925  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15926  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15927  01038C  ECCD  F0D0         	call	___fleq	;wreg free
 15928  010390  A001               	btfss	btemp& (0+255),0,c
 15929  010392  D039               	goto	l11889
 15930  010394  D0BC               	goto	u11140
 15931  010396                     l11885:
 15932                           
 15933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15934  010396  0E00               	movlw	0
 15935  010398  6EE6               	movwf	postinc1,c
 15936  01039A  0E00               	movlw	0
 15937  01039C  6EE6               	movwf	postinc1,c
 15938  01039E  0E20               	movlw	32
 15939  0103A0  6EE6               	movwf	postinc1,c
 15940  0103A2  0E41               	movlw	65
 15941  0103A4  6EE6               	movwf	postinc1,c
 15942                           
 15943                           ;stkvar	_u @ sp[(-60)+12]
 15944  0103A6  0ED0               	movlw	-48
 15945  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15946  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15947  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15948  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15949  0103C0  ECA0  F099         	call	___flmul	;wreg free
 15950                           
 15951                           ;stkvar	_u @ sp[(-56)+12]
 15952  0103C4  0ED4               	movlw	-44
 15953  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15954  0103CC  0ED5               	movlw	-43
 15955  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15956  0103D4  0ED6               	movlw	-42
 15957  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15958  0103DC  0ED7               	movlw	-41
 15959  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15960                           
 15961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15962                           ;stkvar	_e @ sp[(-56)+34]
 15963  0103E4  0EEA               	movlw	-22
 15964  0103E6  50E3               	movf	plusw1,w,c
 15965  0103E8  0F01               	addlw	1
 15966  0103EA  6E01               	movwf	btemp^0,c
 15967  0103EC  0EEA               	movlw	-22
 15968  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 15969  0103F4  6A01               	clrf	btemp^0,c
 15970  0103F6  0EEB               	movlw	-21
 15971  0103F8  50E3               	movf	plusw1,w,c
 15972  0103FA  2001               	addwfc	btemp^0,w,c
 15973  0103FC  6E01               	movwf	btemp^0,c
 15974  0103FE  0EEB               	movlw	-21
 15975  010400  0060  F007  FFE3   	movff	btemp,plusw1
 15976  010406                     l11889:
 15977                           
 15978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15979  010406  0E00               	movlw	0
 15980  010408  6EE6               	movwf	postinc1,c
 15981  01040A  0E00               	movlw	0
 15982  01040C  6EE6               	movwf	postinc1,c
 15983  01040E  0E20               	movlw	32
 15984  010410  6EE6               	movwf	postinc1,c
 15985  010412  0E41               	movlw	65
 15986  010414  6EE6               	movwf	postinc1,c
 15987                           
 15988                           ;stkvar	_u @ sp[(-60)+12]
 15989  010416  0ED0               	movlw	-48
 15990  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15991  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15992  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15993  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15994  010430  ECA0  F099         	call	___flmul	;wreg free
 15995  010434  0060  F007  FFE6   	movff	btemp,postinc1
 15996  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15997  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15998  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 15999                           
 16000                           ;stkvar	_g @ sp[(-60)+16]
 16001  01044C  0ED4               	movlw	-44
 16002  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16003  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16004  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16006  010466  EC81  F0C6         	call	___flge	;wreg free
 16007  01046A  A001               	btfss	btemp& (0+255),0,c
 16008  01046C  D032               	goto	l11895
 16009  01046E  D793               	goto	l11885
 16010  010470                     l11891:
 16011                           
 16012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16013  010470  0E00               	movlw	0
 16014  010472  6EE6               	movwf	postinc1,c
 16015  010474  0E00               	movlw	0
 16016  010476  6EE6               	movwf	postinc1,c
 16017  010478  0E20               	movlw	32
 16018  01047A  6EE6               	movwf	postinc1,c
 16019  01047C  0E41               	movlw	65
 16020  01047E  6EE6               	movwf	postinc1,c
 16021                           
 16022                           ;stkvar	_u @ sp[(-60)+12]
 16023  010480  0ED0               	movlw	-48
 16024  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16025  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16026  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16027  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16028  01049A  EC51  F0A5         	call	___fldiv	;wreg free
 16029                           
 16030                           ;stkvar	_u @ sp[(-56)+12]
 16031  01049E  0ED4               	movlw	-44
 16032  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16033  0104A6  0ED5               	movlw	-43
 16034  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16035  0104AE  0ED6               	movlw	-42
 16036  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16037  0104B6  0ED7               	movlw	-41
 16038  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16039                           
 16040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16041                           ;stkvar	_e @ sp[(-56)+34]
 16042  0104BE  50E1               	movf	fsr1l,w,c
 16043  0104C0  0FEA               	addlw	-22
 16044  0104C2  6ED9               	movwf	fsr2l,c
 16045  0104C4  50E2               	movf	fsr1h,w,c
 16046  0104C6  6EDA               	movwf	fsr2h,c
 16047  0104C8  0EFF               	movlw	255
 16048  0104CA  22DA               	addwfc	fsr2h,f,c
 16049  0104CC  06DE               	decf	postinc2,f,c
 16050  0104CE  0E00               	movlw	0
 16051  0104D0  5ADD               	subwfb	postdec2,f,c
 16052  0104D2                     l11895:
 16053                           
 16054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16055                           ;stkvar	_u @ sp[(-56)+12]
 16056  0104D2  0ED4               	movlw	-44
 16057  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16058  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16059  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16060  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16061                           
 16062                           ;stkvar	_g @ sp[(-60)+16]
 16063  0104EC  0ED4               	movlw	-44
 16064  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16065  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16066  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16067  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16068  010506  EC81  F0C6         	call	___flge	;wreg free
 16069  01050A  A001               	btfss	btemp& (0+255),0,c
 16070  01050C  D7B1               	goto	l11891
 16071  01050E                     u11140:
 16072                           
 16073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16074                           ;stkvar	_c @ sp[(-56)+-7]
 16075  01050E  0EC1               	movlw	-63
 16076  010510  50E3               	movf	plusw1,w,c
 16077  010512  6EE6               	movwf	postinc1,c
 16078  010514  0E00               	movlw	0
 16079  010516  6EE6               	movwf	postinc1,c
 16080  010518  ECDE  F0D4         	call	_tolower	;wreg free
 16081                           
 16082                           ;stkvar	_mode @ sp[(-56)+54]
 16083  01051C  0EFE               	movlw	-2
 16084  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16085                           
 16086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16087                           ;stkvar	_mode @ sp[(-56)+54]
 16088                           ;stkvar	_nmode @ sp[(-56)+55]
 16089  010524  0EFE               	movlw	-2
 16090  010526  006F FF8C  F001    	movff	plusw1,btemp
 16091  01052C  0EFF               	movlw	-1
 16092  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16093                           
 16094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16095                           ;stkvar	_mode @ sp[(-56)+54]
 16096  010534  0EFE               	movlw	-2
 16097  010536  006F FF8C  F001    	movff	plusw1,btemp
 16098  01053C  0E67               	movlw	103
 16099  01053E  1801               	xorwf	btemp^0,w,c
 16100  010540  A4D8               	btfss	status,2,c
 16101  010542  D025               	goto	l11913
 16102                           
 16103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16104  010544  503C               	movf	_prec^0,w,c
 16105  010546  103D               	iorwf	(_prec+1)^0,w,c
 16106  010548  A4D8               	btfss	status,2,c
 16107  01054A  D004               	goto	l11907
 16108                           
 16109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16110  01054C  0E00               	movlw	0
 16111  01054E  6E3D               	movwf	(_prec+1)^0,c
 16112  010550  0E01               	movlw	1
 16113  010552  6E3C               	movwf	_prec^0,c
 16114  010554                     l11907:
 16115                           
 16116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16117  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16118  010556  D005               	goto	u11170
 16119  010558  503D               	movf	(_prec+1)^0,w,c
 16120  01055A  E110               	bnz	l11911
 16121  01055C  043C               	decf	_prec^0,w,c
 16122  01055E  B0D8               	btfsc	status,0,c
 16123  010560  D00D               	goto	l11911
 16124  010562                     u11170:
 16125  010562  0E06               	movlw	6
 16126  010564  6E0B               	movwf	(btemp+10)^0,c
 16127  010566  0E00               	movlw	0
 16128  010568  6E0C               	movwf	(btemp+11)^0,c
 16129                           
 16130                           ;stkvar	_p @ sp[(-56)+40]
 16131  01056A  0EF0               	movlw	-16
 16132  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16133  010572  0EF1               	movlw	-15
 16134  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16135  01057A  D00C               	goto	l11919
 16136  01057C                     l11911:
 16137                           
 16138                           ;stkvar	_p @ sp[(-56)+40]
 16139  01057C  0EF0               	movlw	-16
 16140  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16141  010584  0EF1               	movlw	-15
 16142  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16143  01058C  D003               	goto	l11919
 16144  01058E                     l11913:
 16145                           
 16146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16147  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16148  010590  D7F5               	goto	l11911
 16149  010592  D7E7               	goto	u11170
 16150  010594                     l11919:
 16151                           
 16152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16153                           ;stkvar	_mode @ sp[(-56)+54]
 16154  010594  0EFE               	movlw	-2
 16155  010596  006F FF8C  F001    	movff	plusw1,btemp
 16156  01059C  0E67               	movlw	103
 16157  01059E  1801               	xorwf	btemp^0,w,c
 16158  0105A0  A4D8               	btfss	status,2,c
 16159  0105A2  D02F               	goto	l11929
 16160                           
 16161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16162                           ;stkvar	_e @ sp[(-56)+34]
 16163  0105A4  0EEB               	movlw	-21
 16164  0105A6  AEE3               	btfss	plusw1,7,c
 16165  0105A8  D00E               	goto	u11200
 16166  0105AA  0EEA               	movlw	-22
 16167  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16168  0105B2  0EFC               	movlw	252
 16169  0105B4  5E01               	subwf	btemp^0,f,c
 16170  0105B6  0EEB               	movlw	-21
 16171  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16172  0105BE  0EFF               	movlw	255
 16173  0105C0  5A01               	subwfb	btemp^0,f,c
 16174  0105C2  A0D8               	btfss	status,0,c
 16175  0105C4  D018               	goto	l11927
 16176  0105C6                     u11200:
 16177                           
 16178                           ;stkvar	_e @ sp[(-56)+34]
 16179                           ;stkvar	_p @ sp[(-56)+40]
 16180  0105C6  0EF0               	movlw	-16
 16181  0105C8  50E3               	movf	plusw1,w,c
 16182  0105CA  0FFF               	addlw	255
 16183  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16184  0105CE  0EF1               	movlw	-15
 16185  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16186  0105D6  0EFF               	movlw	255
 16187  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16188  0105DA  0EEA               	movlw	-22
 16189  0105DC  50E3               	movf	plusw1,w,c
 16190  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16191  0105E0  500C               	movf	(btemp+11)^0,w,c
 16192  0105E2  0A80               	xorlw	128
 16193  0105E4  6E01               	movwf	btemp^0,c
 16194  0105E6  0EEB               	movlw	-21
 16195  0105E8  50E3               	movf	plusw1,w,c
 16196  0105EA  0A80               	xorlw	128
 16197  0105EC  5801               	subwfb	btemp^0,w,c
 16198  0105EE  A0D8               	btfss	status,0,c
 16199  0105F0  D002               	goto	l11927
 16200                           
 16201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16202  0105F2  0E66               	movlw	102
 16203  0105F4  D001               	goto	L17
 16204  0105F6                     l11927:
 16205                           
 16206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16207  0105F6  0E65               	movlw	101
 16208  0105F8                     L17:
 16209  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16210                           
 16211                           ;stkvar	_nmode @ sp[(-56)+55]
 16212  0105FA  0EFF               	movlw	-1
 16213  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16214  010602                     l11929:
 16215                           
 16216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16217                           ;stkvar	_p @ sp[(-56)+40]
 16218                           ;stkvar	_m @ sp[(-56)+48]
 16219  010602  0EF0               	movlw	-16
 16220  010604  006F FF8C  F001    	movff	plusw1,btemp
 16221  01060A  0EF8               	movlw	-8
 16222  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16223  010612  0EF1               	movlw	-15
 16224  010614  006F FF8C  F001    	movff	plusw1,btemp
 16225  01061A  0EF9               	movlw	-7
 16226  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16227                           
 16228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16229                           ;stkvar	_mode @ sp[(-56)+54]
 16230  010622  0EFE               	movlw	-2
 16231  010624  006F FF8C  F001    	movff	plusw1,btemp
 16232  01062A  0E67               	movlw	103
 16233  01062C  1801               	xorwf	btemp^0,w,c
 16234  01062E  A4D8               	btfss	status,2,c
 16235  010630  D00B               	goto	u11240
 16236                           
 16237                           ;stkvar	_nmode @ sp[(-56)+55]
 16238  010632  0EFF               	movlw	-1
 16239  010634  006F FF8C  F001    	movff	plusw1,btemp
 16240  01063A  0E66               	movlw	102
 16241  01063C  1801               	xorwf	btemp^0,w,c
 16242  01063E  A4D8               	btfss	status,2,c
 16243  010640  D014               	goto	l2228
 16244                           
 16245                           ;stkvar	_e @ sp[(-56)+34]
 16246  010642  0EEB               	movlw	-21
 16247  010644  AEE3               	btfss	plusw1,7,c
 16248  010646  D011               	goto	l2228
 16249  010648                     u11240:
 16250                           
 16251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16252                           ;stkvar	_m @ sp[(-56)+48]
 16253  010648  0EF8               	movlw	-8
 16254  01064A  50E3               	movf	plusw1,w,c
 16255  01064C  0F01               	addlw	1
 16256  01064E  6E01               	movwf	btemp^0,c
 16257  010650  0EF8               	movlw	-8
 16258  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16259  010658  6A01               	clrf	btemp^0,c
 16260  01065A  0EF9               	movlw	-7
 16261  01065C  50E3               	movf	plusw1,w,c
 16262  01065E  2001               	addwfc	btemp^0,w,c
 16263  010660  6E01               	movwf	btemp^0,c
 16264  010662  0EF9               	movlw	-7
 16265  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16266  01066A                     l2228:
 16267                           
 16268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16269                           ;stkvar	_nmode @ sp[(-56)+55]
 16270  01066A  0EFF               	movlw	-1
 16271  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16272  010672  0E66               	movlw	102
 16273  010674  1801               	xorwf	btemp^0,w,c
 16274  010676  A4D8               	btfss	status,2,c
 16275  010678  D03B               	goto	l11949
 16276                           
 16277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16278                           ;stkvar	_e @ sp[(-56)+34]
 16279  01067A  0EEB               	movlw	-21
 16280  01067C  AEE3               	btfss	plusw1,7,c
 16281  01067E  D01C               	goto	l11945
 16282                           
 16283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16284  010680  0E00               	movlw	0
 16285  010682  6E09               	movwf	(btemp+8)^0,c
 16286  010684  0E00               	movlw	0
 16287  010686  6E0A               	movwf	(btemp+9)^0,c
 16288  010688  0E80               	movlw	128
 16289  01068A  6E0B               	movwf	(btemp+10)^0,c
 16290  01068C  0E3F               	movlw	63
 16291  01068E  6E0C               	movwf	(btemp+11)^0,c
 16292                           
 16293                           ;stkvar	_u @ sp[(-56)+12]
 16294  010690  0ED4               	movlw	-44
 16295  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16296  010698  0ED5               	movlw	-43
 16297  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16298  0106A0  0ED6               	movlw	-42
 16299  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16300  0106A8  0ED7               	movlw	-41
 16301  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16302                           
 16303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16304                           ;stkvar	_e @ sp[(-56)+34]
 16305  0106B0  0EEA               	movlw	-22
 16306  0106B2  6AE3               	clrf	plusw1,c
 16307  0106B4  0EEB               	movlw	-21
 16308  0106B6  6AE3               	clrf	plusw1,c
 16309  0106B8                     l11945:
 16310                           
 16311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16312                           ;stkvar	_mode @ sp[(-56)+54]
 16313  0106B8  0EFE               	movlw	-2
 16314  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16315  0106C0  0E67               	movlw	103
 16316  0106C2  1801               	xorwf	btemp^0,w,c
 16317  0106C4  B4D8               	btfsc	status,2,c
 16318  0106C6  D014               	goto	l11949
 16319                           
 16320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16321                           ;stkvar	_e @ sp[(-56)+34]
 16322                           ;stkvar	_m @ sp[(-56)+48]
 16323  0106C8  0EF8               	movlw	-8
 16324  0106CA  50E3               	movf	plusw1,w,c
 16325  0106CC  6E01               	movwf	btemp^0,c
 16326  0106CE  0EEA               	movlw	-22
 16327  0106D0  50E3               	movf	plusw1,w,c
 16328  0106D2  2601               	addwf	btemp^0,f,c
 16329  0106D4  0EF8               	movlw	-8
 16330  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16331  0106DC  0EF9               	movlw	-7
 16332  0106DE  50E3               	movf	plusw1,w,c
 16333  0106E0  6E01               	movwf	btemp^0,c
 16334  0106E2  0EEB               	movlw	-21
 16335  0106E4  50E3               	movf	plusw1,w,c
 16336  0106E6  2201               	addwfc	btemp^0,f,c
 16337  0106E8  0EF9               	movlw	-7
 16338  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16339  0106F0                     l11949:
 16340                           
 16341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16342                           ;stkvar	_i @ sp[(-56)+36]
 16343  0106F0  0EEC               	movlw	-20
 16344  0106F2  6AE3               	clrf	plusw1,c
 16345  0106F4  0EED               	movlw	-19
 16346  0106F6  6AE3               	clrf	plusw1,c
 16347                           
 16348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16349                           ;stkvar	_g @ sp[(-56)+16]
 16350  0106F8  0ED8               	movlw	-40
 16351  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16352  010700  0ED9               	movlw	-39
 16353  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16354  010708  0EDA               	movlw	-38
 16355  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16356  010710  0EDB               	movlw	-37
 16357  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16358                           
 16359                           ;stkvar	_h @ sp[(-56)+24]
 16360  010718  0EE0               	movlw	-32
 16361  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16362  010720  0EE1               	movlw	-31
 16363  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16364  010728  0EE2               	movlw	-30
 16365  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16366  010730  0EE3               	movlw	-29
 16367  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16368                           
 16369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16370                           ;stkvar	_u @ sp[(-56)+12]
 16371  010738  0ED4               	movlw	-44
 16372  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16373  010740  0ED5               	movlw	-43
 16374  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16375  010748  0ED6               	movlw	-42
 16376  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16377  010750  0ED7               	movlw	-41
 16378  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16379                           
 16380                           ;stkvar	_ou @ sp[(-56)+28]
 16381  010758  0EE4               	movlw	-28
 16382  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16383  010760  0EE5               	movlw	-27
 16384  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16385  010768  0EE6               	movlw	-26
 16386  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16387  010770  0EE7               	movlw	-25
 16388  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16389                           
 16390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16391  010778  D0D6               	goto	l11965
 16392  01077A                     l11955:
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16395                           ;stkvar	_u @ sp[(-56)+12]
 16396  01077A  0ED4               	movlw	-44
 16397  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16398  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16401                           
 16402                           ;stkvar	_h @ sp[(-60)+24]
 16403  010794  0EDC               	movlw	-36
 16404  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16405  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16406  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16407  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16408  0107AE  EC51  F0A5         	call	___fldiv	;wreg free
 16409  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16410  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16411  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16412  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16413  0107CA  ECDB  F0B0         	call	_floorf	;wreg free
 16414                           
 16415                           ;stkvar	_l @ sp[(-56)+20]
 16416  0107CE  0EDC               	movlw	-36
 16417  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16418  0107D6  0EDD               	movlw	-35
 16419  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16420  0107DE  0EDE               	movlw	-34
 16421  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16422  0107E6  0EDF               	movlw	-33
 16423  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16424                           
 16425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16426                           ;stkvar	_l @ sp[(-56)+20]
 16427  0107EE  0EDC               	movlw	-36
 16428  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16429  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16431  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16432  010808  ECC8  F0C5         	call	___fltol	;wreg free
 16433  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16434  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16435                           
 16436                           ;stkvar	_d @ sp[(-56)+44]
 16437  010818  0EF4               	movlw	-12
 16438  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16439  010820  0EF5               	movlw	-11
 16440  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16441                           
 16442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16443                           ;stkvar	_u @ sp[(-56)+12]
 16444  010828  0ED4               	movlw	-44
 16445  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16446  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16447  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16448  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16449                           
 16450                           ;stkvar	_l @ sp[(-60)+20]
 16451  010842  0ED8               	movlw	-40
 16452  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16453  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16454  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16455  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16456  01085C  ECA0  F099         	call	___flmul	;wreg free
 16457  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16458  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16459  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16460  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16461                           
 16462                           ;stkvar	_h @ sp[(-60)+24]
 16463  010878  0EDC               	movlw	-36
 16464  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16465  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16466  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16467  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16468  010892  EC08  F0D9         	call	___flsub	;wreg free
 16469                           
 16470                           ;stkvar	_h @ sp[(-56)+24]
 16471  010896  0EE0               	movlw	-32
 16472  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16473  01089E  0EE1               	movlw	-31
 16474  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16475  0108A6  0EE2               	movlw	-30
 16476  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16477  0108AE  0EE3               	movlw	-29
 16478  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16479                           
 16480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16481  0108B6  0E00               	movlw	0
 16482  0108B8  6EE6               	movwf	postinc1,c
 16483  0108BA  0E00               	movlw	0
 16484  0108BC  6EE6               	movwf	postinc1,c
 16485  0108BE  0E20               	movlw	32
 16486  0108C0  6EE6               	movwf	postinc1,c
 16487  0108C2  0E41               	movlw	65
 16488  0108C4  6EE6               	movwf	postinc1,c
 16489                           
 16490                           ;stkvar	_u @ sp[(-60)+12]
 16491  0108C6  0ED0               	movlw	-48
 16492  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16493  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16494  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16495  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16496  0108E0  EC51  F0A5         	call	___fldiv	;wreg free
 16497                           
 16498                           ;stkvar	_u @ sp[(-56)+12]
 16499  0108E4  0ED4               	movlw	-44
 16500  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16501  0108EC  0ED5               	movlw	-43
 16502  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16503  0108F4  0ED6               	movlw	-42
 16504  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16505  0108FC  0ED7               	movlw	-41
 16506  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16507                           
 16508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16509                           ;stkvar	_i @ sp[(-56)+36]
 16510  010904  0EEC               	movlw	-20
 16511  010906  50E3               	movf	plusw1,w,c
 16512  010908  0F01               	addlw	1
 16513  01090A  6E01               	movwf	btemp^0,c
 16514  01090C  0EEC               	movlw	-20
 16515  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16516  010914  6A01               	clrf	btemp^0,c
 16517  010916  0EED               	movlw	-19
 16518  010918  50E3               	movf	plusw1,w,c
 16519  01091A  2001               	addwfc	btemp^0,w,c
 16520  01091C  6E01               	movwf	btemp^0,c
 16521  01091E  0EED               	movlw	-19
 16522  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16523  010926                     l11965:
 16524                           
 16525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16526                           ;stkvar	_m @ sp[(-56)+48]
 16527                           ;stkvar	_i @ sp[(-56)+36]
 16528  010926  50E1               	movf	fsr1l,w,c
 16529  010928  0FEC               	addlw	-20
 16530  01092A  6ED9               	movwf	fsr2l,c
 16531  01092C  50E2               	movf	fsr1h,w,c
 16532  01092E  6EDA               	movwf	fsr2h,c
 16533  010930  0EFF               	movlw	255
 16534  010932  22DA               	addwfc	fsr2h,f,c
 16535  010934  0EF8               	movlw	-8
 16536  010936  50E3               	movf	plusw1,w,c
 16537  010938  5CDE               	subwf	postinc2,w,c
 16538  01093A  50DE               	movf	postinc2,w,c
 16539  01093C  0A80               	xorlw	128
 16540  01093E  6E01               	movwf	btemp^0,c
 16541  010940  0EF9               	movlw	-7
 16542  010942  50E3               	movf	plusw1,w,c
 16543  010944  0A80               	xorlw	128
 16544  010946  5801               	subwfb	btemp^0,w,c
 16545  010948  A0D8               	btfss	status,0,c
 16546  01094A  D717               	goto	l11955
 16547                           
 16548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16549  01094C  0E00               	movlw	0
 16550  01094E  6EE6               	movwf	postinc1,c
 16551  010950  0E00               	movlw	0
 16552  010952  6EE6               	movwf	postinc1,c
 16553  010954  0EA0               	movlw	160
 16554  010956  6EE6               	movwf	postinc1,c
 16555  010958  0E40               	movlw	64
 16556  01095A  6EE6               	movwf	postinc1,c
 16557                           
 16558                           ;stkvar	_u @ sp[(-60)+12]
 16559  01095C  0ED0               	movlw	-48
 16560  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16561  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16562  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16563  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16564  010976  ECA0  F099         	call	___flmul	;wreg free
 16565                           
 16566                           ;stkvar	_l @ sp[(-56)+20]
 16567  01097A  0EDC               	movlw	-36
 16568  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16569  010982  0EDD               	movlw	-35
 16570  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16571  01098A  0EDE               	movlw	-34
 16572  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16573  010992  0EDF               	movlw	-33
 16574  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16575                           
 16576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16577                           ;stkvar	_l @ sp[(-56)+20]
 16578  01099A  0EDC               	movlw	-36
 16579  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16580  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16581  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16582  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16583                           
 16584                           ;stkvar	_h @ sp[(-60)+24]
 16585  0109B4  0EDC               	movlw	-36
 16586  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16587  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16588  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16589  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16590  0109CE  EC81  F0C6         	call	___flge	;wreg free
 16591  0109D2  A001               	btfss	btemp& (0+255),0,c
 16592  0109D4  D021               	goto	u11310
 16593                           
 16594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16595                           ;stkvar	_l @ sp[(-56)+20]
 16596                           
 16597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16598                           
 16599                           ;stkvar	_l @ sp[(-56)+20]
 16600                           
 16601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16602  0109D6  0EDC               	movlw	-36
 16603  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16604  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16605  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16606  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16607                           
 16608                           ;stkvar	_h @ sp[(-60)+24]
 16609  0109F0  0EDC               	movlw	-36
 16610  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16611  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16612  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16613  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16614  010A0A  ECCD  F0D0         	call	___fleq	;wreg free
 16615  010A0E  A001               	btfss	btemp& (0+255),0,c
 16616  010A10  D01B               	goto	l11979
 16617                           
 16618                           ;stkvar	_d @ sp[(-56)+44]
 16619  010A12  0EF4               	movlw	-12
 16620  010A14  B0E3               	btfsc	plusw1,0,c
 16621  010A16  D018               	goto	l11979
 16622  010A18                     u11310:
 16623                           
 16624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16625  010A18  0E00               	movlw	0
 16626  010A1A  6E09               	movwf	(btemp+8)^0,c
 16627  010A1C  0E00               	movlw	0
 16628  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16629  010A20  0E00               	movlw	0
 16630  010A22  6E0B               	movwf	(btemp+10)^0,c
 16631  010A24  0E00               	movlw	0
 16632  010A26  6E0C               	movwf	(btemp+11)^0,c
 16633                           
 16634                           ;stkvar	_l @ sp[(-56)+20]
 16635  010A28  0EDC               	movlw	-36
 16636  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16637  010A30  0EDD               	movlw	-35
 16638  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16639  010A38  0EDE               	movlw	-34
 16640  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16641  010A40  0EDF               	movlw	-33
 16642  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16643  010A48                     l11979:
 16644                           
 16645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16646                           ;stkvar	_l @ sp[(-56)+20]
 16647  010A48  0EDC               	movlw	-36
 16648  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16649  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16650  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16651  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16652                           
 16653                           ;stkvar	_g @ sp[(-60)+16]
 16654  010A62  0ED4               	movlw	-44
 16655  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16656  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16657  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16658  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16659  010A7C  ECB5  F09D         	call	___fladd	;wreg free
 16660                           
 16661                           ;stkvar	_h @ sp[(-56)+24]
 16662  010A80  0EE0               	movlw	-32
 16663  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16664  010A88  0EE1               	movlw	-31
 16665  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16666  010A90  0EE2               	movlw	-30
 16667  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16668  010A98  0EE3               	movlw	-29
 16669  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16670                           
 16671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16672                           ;stkvar	_ou @ sp[(-56)+28]
 16673  010AA0  0EE4               	movlw	-28
 16674  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16675  010AA8  0EE5               	movlw	-27
 16676  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16677  010AB0  0EE6               	movlw	-26
 16678  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16679  010AB8  0EE7               	movlw	-25
 16680  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16681                           
 16682                           ;stkvar	_u @ sp[(-56)+12]
 16683  010AC0  0ED4               	movlw	-44
 16684  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16685  010AC8  0ED5               	movlw	-43
 16686  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16687  010AD0  0ED6               	movlw	-42
 16688  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16689  010AD8  0ED7               	movlw	-41
 16690  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16691                           
 16692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16693                           ;stkvar	_nmode @ sp[(-56)+55]
 16694  010AE0  0EFF               	movlw	-1
 16695  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16696  010AE8  0E65               	movlw	101
 16697  010AEA  1801               	xorwf	btemp^0,w,c
 16698  010AEC  B4D8               	btfsc	status,2,c
 16699  010AEE  D011               	goto	l11987
 16700                           
 16701                           ;stkvar	_e @ sp[(-56)+34]
 16702                           ;stkvar	_ne @ sp[(-56)+46]
 16703  010AF0  0EEA               	movlw	-22
 16704  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16705  010AF8  0EF6               	movlw	-10
 16706  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16707  010B00  0EEB               	movlw	-21
 16708  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16709  010B08  0EF7               	movlw	-9
 16710  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16711  010B10  D004               	goto	l2243
 16712  010B12                     l11987:
 16713                           
 16714                           ;stkvar	_ne @ sp[(-56)+46]
 16715  010B12  0EF6               	movlw	-10
 16716  010B14  6AE3               	clrf	plusw1,c
 16717  010B16  0EF7               	movlw	-9
 16718  010B18  6AE3               	clrf	plusw1,c
 16719  010B1A                     l2243:
 16720                           
 16721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16722                           ;stkvar	_pp @ sp[(-56)+50]
 16723  010B1A  0EFA               	movlw	-6
 16724  010B1C  6AE3               	clrf	plusw1,c
 16725  010B1E  0EFB               	movlw	-5
 16726  010B20  6AE3               	clrf	plusw1,c
 16727                           
 16728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16729                           ;stkvar	_t @ sp[(-56)+52]
 16730  010B22  0EFC               	movlw	-4
 16731  010B24  6AE3               	clrf	plusw1,c
 16732  010B26  0EFD               	movlw	-3
 16733  010B28  6AE3               	clrf	plusw1,c
 16734                           
 16735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16736                           ;stkvar	_i @ sp[(-56)+36]
 16737  010B2A  0EEC               	movlw	-20
 16738  010B2C  6AE3               	clrf	plusw1,c
 16739  010B2E  0EED               	movlw	-19
 16740  010B30  6AE3               	clrf	plusw1,c
 16741                           
 16742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16743  010B32  D1B7               	goto	l12039
 16744  010B34                     l11989:
 16745                           
 16746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16747                           ;stkvar	_u @ sp[(-56)+12]
 16748  010B34  0ED4               	movlw	-44
 16749  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16750  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16751  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16752  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16753                           
 16754                           ;stkvar	_h @ sp[(-60)+24]
 16755  010B4E  0EDC               	movlw	-36
 16756  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16757  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16758  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16759  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16760  010B68  EC51  F0A5         	call	___fldiv	;wreg free
 16761  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16762  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16763  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16764  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16765  010B84  ECDB  F0B0         	call	_floorf	;wreg free
 16766                           
 16767                           ;stkvar	_l @ sp[(-56)+20]
 16768  010B88  0EDC               	movlw	-36
 16769  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16770  010B90  0EDD               	movlw	-35
 16771  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16772  010B98  0EDE               	movlw	-34
 16773  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16774  010BA0  0EDF               	movlw	-33
 16775  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16776                           
 16777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16778                           ;stkvar	_l @ sp[(-56)+20]
 16779  010BA8  0EDC               	movlw	-36
 16780  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16781  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16783  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  010BC2  ECC8  F0C5         	call	___fltol	;wreg free
 16785  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16786  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16787                           
 16788                           ;stkvar	_d @ sp[(-56)+44]
 16789  010BD2  0EF4               	movlw	-12
 16790  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16791  010BDA  0EF5               	movlw	-11
 16792  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16793                           
 16794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16795  010BE2  B83E               	btfsc	_flags^0,4,c
 16796  010BE4  D026               	goto	l12003
 16797                           
 16798                           ;stkvar	_d @ sp[(-56)+44]
 16799  010BE6  0EF4               	movlw	-12
 16800  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16801  010BEE  0EF5               	movlw	-11
 16802  010BF0  50E3               	movf	plusw1,w,c
 16803  010BF2  1001               	iorwf	btemp^0,w,c
 16804  010BF4  A4D8               	btfss	status,2,c
 16805  010BF6  D01D               	goto	l12003
 16806                           
 16807                           ;stkvar	_mode @ sp[(-56)+54]
 16808  010BF8  0EFE               	movlw	-2
 16809  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16810  010C00  0E67               	movlw	103
 16811  010C02  1801               	xorwf	btemp^0,w,c
 16812  010C04  A4D8               	btfss	status,2,c
 16813  010C06  D015               	goto	l12003
 16814                           
 16815                           ;stkvar	_ne @ sp[(-56)+46]
 16816  010C08  0EF7               	movlw	-9
 16817  010C0A  AEE3               	btfss	plusw1,7,c
 16818  010C0C  D012               	goto	l12003
 16819                           
 16820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16821                           ;stkvar	_t @ sp[(-56)+52]
 16822  010C0E  0EFC               	movlw	-4
 16823  010C10  50E3               	movf	plusw1,w,c
 16824  010C12  0F01               	addlw	1
 16825  010C14  6E01               	movwf	btemp^0,c
 16826  010C16  0EFC               	movlw	-4
 16827  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16828  010C1E  6A01               	clrf	btemp^0,c
 16829  010C20  0EFD               	movlw	-3
 16830  010C22  50E3               	movf	plusw1,w,c
 16831  010C24  2001               	addwfc	btemp^0,w,c
 16832  010C26  6E01               	movwf	btemp^0,c
 16833  010C28  0EFD               	movlw	-3
 16834  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16835                           
 16836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16837  010C30  D0AF               	goto	l12031
 16838  010C32                     l12003:
 16839                           
 16840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16841                           ;stkvar	_pp @ sp[(-56)+50]
 16842  010C32  0EFA               	movlw	-6
 16843  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16844  010C3A  0EFB               	movlw	-5
 16845  010C3C  50E3               	movf	plusw1,w,c
 16846  010C3E  1001               	iorwf	btemp^0,w,c
 16847  010C40  A4D8               	btfss	status,2,c
 16848  010C42  D070               	goto	l12023
 16849                           
 16850                           ;stkvar	_ne @ sp[(-56)+46]
 16851  010C44  0EF7               	movlw	-9
 16852  010C46  AEE3               	btfss	plusw1,7,c
 16853  010C48  D06D               	goto	l12023
 16854                           
 16855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16856                           ;stkvar	_n @ sp[(-56)+32]
 16857  010C4A  0EE8               	movlw	-24
 16858  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16859  010C52  0EE9               	movlw	-23
 16860  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16861  010C5A  0E97               	movlw	low _dbuf
 16862  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16863  010C5E  6ED9               	movwf	fsr2l,c
 16864  010C60  0E02               	movlw	high _dbuf
 16865  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16866  010C64  6EDA               	movwf	fsr2h,c
 16867  010C66  0E2E               	movlw	46
 16868  010C68  6EDF               	movwf	indf2,c
 16869                           
 16870                           ;stkvar	_n @ sp[(-56)+32]
 16871  010C6A  0EE8               	movlw	-24
 16872  010C6C  50E3               	movf	plusw1,w,c
 16873  010C6E  0F01               	addlw	1
 16874  010C70  6E01               	movwf	btemp^0,c
 16875  010C72  0EE8               	movlw	-24
 16876  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16877  010C7A  6A01               	clrf	btemp^0,c
 16878  010C7C  0EE9               	movlw	-23
 16879  010C7E  50E3               	movf	plusw1,w,c
 16880  010C80  2001               	addwfc	btemp^0,w,c
 16881  010C82  6E01               	movwf	btemp^0,c
 16882  010C84  0EE9               	movlw	-23
 16883  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16884                           
 16885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16886                           ;stkvar	_w @ sp[(-56)+38]
 16887  010C8C  50E1               	movf	fsr1l,w,c
 16888  010C8E  0FEE               	addlw	-18
 16889  010C90  6ED9               	movwf	fsr2l,c
 16890  010C92  50E2               	movf	fsr1h,w,c
 16891  010C94  6EDA               	movwf	fsr2h,c
 16892  010C96  0EFF               	movlw	255
 16893  010C98  22DA               	addwfc	fsr2h,f,c
 16894  010C9A  06DE               	decf	postinc2,f,c
 16895  010C9C  0E00               	movlw	0
 16896  010C9E  5ADD               	subwfb	postdec2,f,c
 16897                           
 16898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16899  010CA0  0E01               	movlw	1
 16900  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16901  010CA4  0E00               	movlw	0
 16902  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16903                           
 16904                           ;stkvar	_pp @ sp[(-56)+50]
 16905  010CA8  0EFA               	movlw	-6
 16906  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16907  010CB0  0EFB               	movlw	-5
 16908  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16909  010CB8  D035               	goto	l12023
 16910  010CBA                     l12015:
 16911                           
 16912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16913                           ;stkvar	_n @ sp[(-56)+32]
 16914  010CBA  0EE8               	movlw	-24
 16915  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16916  010CC2  0EE9               	movlw	-23
 16917  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16918  010CCA  0E97               	movlw	low _dbuf
 16919  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16920  010CCE  6ED9               	movwf	fsr2l,c
 16921  010CD0  0E02               	movlw	high _dbuf
 16922  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16923  010CD4  6EDA               	movwf	fsr2h,c
 16924  010CD6  0E30               	movlw	48
 16925  010CD8  6EDF               	movwf	indf2,c
 16926                           
 16927                           ;stkvar	_n @ sp[(-56)+32]
 16928  010CDA  0EE8               	movlw	-24
 16929  010CDC  50E3               	movf	plusw1,w,c
 16930  010CDE  0F01               	addlw	1
 16931  010CE0  6E01               	movwf	btemp^0,c
 16932  010CE2  0EE8               	movlw	-24
 16933  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16934  010CEA  6A01               	clrf	btemp^0,c
 16935  010CEC  0EE9               	movlw	-23
 16936  010CEE  50E3               	movf	plusw1,w,c
 16937  010CF0  2001               	addwfc	btemp^0,w,c
 16938  010CF2  6E01               	movwf	btemp^0,c
 16939  010CF4  0EE9               	movlw	-23
 16940  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16941                           
 16942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16943                           ;stkvar	_w @ sp[(-56)+38]
 16944  010CFC  50E1               	movf	fsr1l,w,c
 16945  010CFE  0FEE               	addlw	-18
 16946  010D00  6ED9               	movwf	fsr2l,c
 16947  010D02  50E2               	movf	fsr1h,w,c
 16948  010D04  6EDA               	movwf	fsr2h,c
 16949  010D06  0EFF               	movlw	255
 16950  010D08  22DA               	addwfc	fsr2h,f,c
 16951  010D0A  06DE               	decf	postinc2,f,c
 16952  010D0C  0E00               	movlw	0
 16953  010D0E  5ADD               	subwfb	postdec2,f,c
 16954                           
 16955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16956                           ;stkvar	_t @ sp[(-56)+52]
 16957  010D10  50E1               	movf	fsr1l,w,c
 16958  010D12  0FFC               	addlw	-4
 16959  010D14  6ED9               	movwf	fsr2l,c
 16960  010D16  50E2               	movf	fsr1h,w,c
 16961  010D18  6EDA               	movwf	fsr2h,c
 16962  010D1A  0EFF               	movlw	255
 16963  010D1C  22DA               	addwfc	fsr2h,f,c
 16964  010D1E  06DE               	decf	postinc2,f,c
 16965  010D20  0E00               	movlw	0
 16966  010D22  5ADD               	subwfb	postdec2,f,c
 16967  010D24                     l12023:
 16968                           
 16969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16970                           ;stkvar	_t @ sp[(-56)+52]
 16971  010D24  0EFC               	movlw	-4
 16972  010D26  006F FF8C  F001    	movff	plusw1,btemp
 16973  010D2C  0EFD               	movlw	-3
 16974  010D2E  50E3               	movf	plusw1,w,c
 16975  010D30  1001               	iorwf	btemp^0,w,c
 16976  010D32  A4D8               	btfss	status,2,c
 16977  010D34  D7C2               	goto	l12015
 16978                           
 16979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16980                           ;stkvar	_n @ sp[(-56)+32]
 16981  010D36  0EE8               	movlw	-24
 16982  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 16983  010D3E  0EE9               	movlw	-23
 16984  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 16985  010D46  0E97               	movlw	low _dbuf
 16986  010D48  240B               	addwf	(btemp+10)^0,w,c
 16987  010D4A  6ED9               	movwf	fsr2l,c
 16988  010D4C  0E02               	movlw	high _dbuf
 16989  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 16990  010D50  6EDA               	movwf	fsr2h,c
 16991                           
 16992                           ;stkvar	_d @ sp[(-56)+44]
 16993  010D52  0EF4               	movlw	-12
 16994  010D54  50E3               	movf	plusw1,w,c
 16995  010D56  0F30               	addlw	48
 16996  010D58  6EDF               	movwf	indf2,c
 16997                           
 16998                           ;stkvar	_n @ sp[(-56)+32]
 16999  010D5A  0EE8               	movlw	-24
 17000  010D5C  50E3               	movf	plusw1,w,c
 17001  010D5E  0F01               	addlw	1
 17002  010D60  6E01               	movwf	btemp^0,c
 17003  010D62  0EE8               	movlw	-24
 17004  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17005  010D6A  6A01               	clrf	btemp^0,c
 17006  010D6C  0EE9               	movlw	-23
 17007  010D6E  50E3               	movf	plusw1,w,c
 17008  010D70  2001               	addwfc	btemp^0,w,c
 17009  010D72  6E01               	movwf	btemp^0,c
 17010  010D74  0EE9               	movlw	-23
 17011  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17012                           
 17013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17014                           ;stkvar	_w @ sp[(-56)+38]
 17015  010D7C  50E1               	movf	fsr1l,w,c
 17016  010D7E  0FEE               	addlw	-18
 17017  010D80  6ED9               	movwf	fsr2l,c
 17018  010D82  50E2               	movf	fsr1h,w,c
 17019  010D84  6EDA               	movwf	fsr2h,c
 17020  010D86  0EFF               	movlw	255
 17021  010D88  22DA               	addwfc	fsr2h,f,c
 17022  010D8A  06DE               	decf	postinc2,f,c
 17023  010D8C  0E00               	movlw	0
 17024  010D8E  5ADD               	subwfb	postdec2,f,c
 17025  010D90                     l12031:
 17026                           
 17027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17028                           ;stkvar	_u @ sp[(-56)+12]
 17029  010D90  0ED4               	movlw	-44
 17030  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17031  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17032  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17033  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17034                           
 17035                           ;stkvar	_l @ sp[(-60)+20]
 17036  010DAA  0ED8               	movlw	-40
 17037  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17038  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17039  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17040  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17041  010DC4  ECA0  F099         	call	___flmul	;wreg free
 17042  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17043  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17044  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17045  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17046                           
 17047                           ;stkvar	_h @ sp[(-60)+24]
 17048  010DE0  0EDC               	movlw	-36
 17049  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17050  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17051  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17052  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17053  010DFA  EC08  F0D9         	call	___flsub	;wreg free
 17054                           
 17055                           ;stkvar	_h @ sp[(-56)+24]
 17056  010DFE  0EE0               	movlw	-32
 17057  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17058  010E06  0EE1               	movlw	-31
 17059  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17060  010E0E  0EE2               	movlw	-30
 17061  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17062  010E16  0EE3               	movlw	-29
 17063  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17066  010E1E  0E00               	movlw	0
 17067  010E20  6EE6               	movwf	postinc1,c
 17068  010E22  0E00               	movlw	0
 17069  010E24  6EE6               	movwf	postinc1,c
 17070  010E26  0E20               	movlw	32
 17071  010E28  6EE6               	movwf	postinc1,c
 17072  010E2A  0E41               	movlw	65
 17073  010E2C  6EE6               	movwf	postinc1,c
 17074                           
 17075                           ;stkvar	_u @ sp[(-60)+12]
 17076  010E2E  0ED0               	movlw	-48
 17077  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17078  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17079  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17080  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17081  010E48  EC51  F0A5         	call	___fldiv	;wreg free
 17082                           
 17083                           ;stkvar	_u @ sp[(-56)+12]
 17084  010E4C  0ED4               	movlw	-44
 17085  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17086  010E54  0ED5               	movlw	-43
 17087  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17088  010E5C  0ED6               	movlw	-42
 17089  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17090  010E64  0ED7               	movlw	-41
 17091  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17092                           
 17093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17094                           ;stkvar	_ne @ sp[(-56)+46]
 17095  010E6C  50E1               	movf	fsr1l,w,c
 17096  010E6E  0FF6               	addlw	-10
 17097  010E70  6ED9               	movwf	fsr2l,c
 17098  010E72  50E2               	movf	fsr1h,w,c
 17099  010E74  6EDA               	movwf	fsr2h,c
 17100  010E76  0EFF               	movlw	255
 17101  010E78  22DA               	addwfc	fsr2h,f,c
 17102  010E7A  06DE               	decf	postinc2,f,c
 17103  010E7C  0E00               	movlw	0
 17104  010E7E  5ADD               	subwfb	postdec2,f,c
 17105                           
 17106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17107                           ;stkvar	_i @ sp[(-56)+36]
 17108  010E80  0EEC               	movlw	-20
 17109  010E82  50E3               	movf	plusw1,w,c
 17110  010E84  0F01               	addlw	1
 17111  010E86  6E01               	movwf	btemp^0,c
 17112  010E88  0EEC               	movlw	-20
 17113  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17114  010E90  6A01               	clrf	btemp^0,c
 17115  010E92  0EED               	movlw	-19
 17116  010E94  50E3               	movf	plusw1,w,c
 17117  010E96  2001               	addwfc	btemp^0,w,c
 17118  010E98  6E01               	movwf	btemp^0,c
 17119  010E9A  0EED               	movlw	-19
 17120  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17121  010EA2                     l12039:
 17122                           
 17123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17124                           ;stkvar	_m @ sp[(-56)+48]
 17125                           ;stkvar	_i @ sp[(-56)+36]
 17126  010EA2  50E1               	movf	fsr1l,w,c
 17127  010EA4  0FEC               	addlw	-20
 17128  010EA6  6ED9               	movwf	fsr2l,c
 17129  010EA8  50E2               	movf	fsr1h,w,c
 17130  010EAA  6EDA               	movwf	fsr2h,c
 17131  010EAC  0EFF               	movlw	255
 17132  010EAE  22DA               	addwfc	fsr2h,f,c
 17133  010EB0  0EF8               	movlw	-8
 17134  010EB2  50E3               	movf	plusw1,w,c
 17135  010EB4  5CDE               	subwf	postinc2,w,c
 17136  010EB6  50DE               	movf	postinc2,w,c
 17137  010EB8  0A80               	xorlw	128
 17138  010EBA  6E01               	movwf	btemp^0,c
 17139  010EBC  0EF9               	movlw	-7
 17140  010EBE  50E3               	movf	plusw1,w,c
 17141  010EC0  0A80               	xorlw	128
 17142  010EC2  5801               	subwfb	btemp^0,w,c
 17143  010EC4  B0D8               	btfsc	status,0,c
 17144  010EC6  D00E               	goto	u11410
 17145                           
 17146                           ;stkvar	_n @ sp[(-56)+32]
 17147  010EC8  0EE9               	movlw	-23
 17148  010ECA  BEE3               	btfsc	plusw1,7,c
 17149  010ECC  D633               	goto	l11989
 17150  010ECE  0EE9               	movlw	-23
 17151  010ED0  50E3               	movf	plusw1,w,c
 17152  010ED2  E108               	bnz	u11410
 17153  010ED4  0EE8               	movlw	-24
 17154  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17155  010EDC  0E4B               	movlw	75
 17156  010EDE  5E01               	subwf	btemp^0,f,c
 17157  010EE0  A0D8               	btfss	status,0,c
 17158  010EE2  D628               	goto	l11989
 17159  010EE4                     u11410:
 17160                           
 17161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17162                           ;stkvar	_pp @ sp[(-56)+50]
 17163  010EE4  0EFA               	movlw	-6
 17164  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17165  010EEC  0EFB               	movlw	-5
 17166  010EEE  50E3               	movf	plusw1,w,c
 17167  010EF0  1001               	iorwf	btemp^0,w,c
 17168  010EF2  B4D8               	btfsc	status,2,c
 17169  010EF4  A83E               	btfss	_flags^0,4,c
 17170  010EF6  D021               	goto	l12051
 17171                           
 17172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17173                           ;stkvar	_n @ sp[(-56)+32]
 17174  010EF8  0EE8               	movlw	-24
 17175  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17176  010F00  0EE9               	movlw	-23
 17177  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17178  010F08  0E97               	movlw	low _dbuf
 17179  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17180  010F0C  6ED9               	movwf	fsr2l,c
 17181  010F0E  0E02               	movlw	high _dbuf
 17182  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17183  010F12  6EDA               	movwf	fsr2h,c
 17184  010F14  0E2E               	movlw	46
 17185  010F16  6EDF               	movwf	indf2,c
 17186                           
 17187                           ;stkvar	_n @ sp[(-56)+32]
 17188  010F18  0EE8               	movlw	-24
 17189  010F1A  50E3               	movf	plusw1,w,c
 17190  010F1C  0F01               	addlw	1
 17191  010F1E  6E01               	movwf	btemp^0,c
 17192  010F20  0EE8               	movlw	-24
 17193  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17194  010F28  6A01               	clrf	btemp^0,c
 17195  010F2A  0EE9               	movlw	-23
 17196  010F2C  50E3               	movf	plusw1,w,c
 17197  010F2E  2001               	addwfc	btemp^0,w,c
 17198  010F30  6E01               	movwf	btemp^0,c
 17199  010F32  0EE9               	movlw	-23
 17200  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17201  010F3A                     l12051:
 17202                           
 17203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17204                           ;stkvar	_n @ sp[(-56)+32]
 17205  010F3A  0EE8               	movlw	-24
 17206  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17207  010F42  0EE9               	movlw	-23
 17208  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17209  010F4A  0E97               	movlw	low _dbuf
 17210  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17211  010F4E  6ED9               	movwf	fsr2l,c
 17212  010F50  0E02               	movlw	high _dbuf
 17213  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17214  010F54  6EDA               	movwf	fsr2h,c
 17215  010F56  0E00               	movlw	0
 17216  010F58  6EDF               	movwf	indf2,c
 17217                           
 17218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17219                           ;stkvar	_nmode @ sp[(-56)+55]
 17220  010F5A  0EFF               	movlw	-1
 17221  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17222  010F62  0E65               	movlw	101
 17223  010F64  1801               	xorwf	btemp^0,w,c
 17224  010F66  A4D8               	btfss	status,2,c
 17225  010F68  EF16  F081         	goto	l11855
 17226                           
 17227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17228  010F6C  0E4F               	movlw	79
 17229  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17230  010F70  0E00               	movlw	0
 17231  010F72  6E0C               	movwf	(btemp+11)^0,c
 17232                           
 17233                           ;stkvar	_i @ sp[(-56)+36]
 17234  010F74  0EEC               	movlw	-20
 17235  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17236  010F7C  0EED               	movlw	-19
 17237  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17238                           
 17239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17240                           ;stkvar	_i @ sp[(-56)+36]
 17241  010F84  0EEC               	movlw	-20
 17242  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17243  010F8C  0EED               	movlw	-19
 17244  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17245  010F94  0E97               	movlw	low _dbuf
 17246  010F96  240B               	addwf	(btemp+10)^0,w,c
 17247  010F98  6ED9               	movwf	fsr2l,c
 17248  010F9A  0E02               	movlw	high _dbuf
 17249  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17250  010F9E  6EDA               	movwf	fsr2h,c
 17251  010FA0  0E00               	movlw	0
 17252  010FA2  6EDF               	movwf	indf2,c
 17253                           
 17254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17255                           ;stkvar	_sign @ sp[(-56)+42]
 17256  010FA4  0EF2               	movlw	-14
 17257  010FA6  6AE3               	clrf	plusw1,c
 17258  010FA8  0EF3               	movlw	-13
 17259  010FAA  6AE3               	clrf	plusw1,c
 17260                           
 17261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17262                           ;stkvar	_e @ sp[(-56)+34]
 17263  010FAC  0EEB               	movlw	-21
 17264  010FAE  AEE3               	btfss	plusw1,7,c
 17265  010FB0  D012               	goto	l12065
 17266                           
 17267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17268  010FB2  0E01               	movlw	1
 17269  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17270  010FB6  0E00               	movlw	0
 17271  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17272                           
 17273                           ;stkvar	_sign @ sp[(-56)+42]
 17274  010FBA  0EF2               	movlw	-14
 17275  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17276  010FC2  0EF3               	movlw	-13
 17277  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17278                           
 17279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17280                           ;stkvar	_e @ sp[(-56)+34]
 17281                           ;stkvar	_e @ sp[(-56)+34]
 17282  010FCA  0EEA               	movlw	-22
 17283  010FCC  6CE3               	negf	plusw1,c
 17284  010FCE  0EEB               	movlw	-21
 17285  010FD0  1EE3               	comf	plusw1,f,c
 17286  010FD2  B0D8               	btfsc	status,0,c
 17287  010FD4  2AE3               	incf	plusw1,f,c
 17288  010FD6                     l12065:
 17289                           
 17290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17291  010FD6  0E02               	movlw	2
 17292  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17293  010FDA  0E00               	movlw	0
 17294  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17295                           
 17296                           ;stkvar	_p @ sp[(-56)+40]
 17297  010FDE  0EF0               	movlw	-16
 17298  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17299  010FE6  0EF1               	movlw	-15
 17300  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17301                           
 17302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17303  010FEE  D051               	goto	l12077
 17304  010FF0                     l12067:
 17305                           
 17306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17307                           ;stkvar	_i @ sp[(-56)+36]
 17308  010FF0  50E1               	movf	fsr1l,w,c
 17309  010FF2  0FEC               	addlw	-20
 17310  010FF4  6ED9               	movwf	fsr2l,c
 17311  010FF6  50E2               	movf	fsr1h,w,c
 17312  010FF8  6EDA               	movwf	fsr2h,c
 17313  010FFA  0EFF               	movlw	255
 17314  010FFC  22DA               	addwfc	fsr2h,f,c
 17315  010FFE  06DE               	decf	postinc2,f,c
 17316  011000  0E00               	movlw	0
 17317  011002  5ADD               	subwfb	postdec2,f,c
 17318                           
 17319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17320                           ;stkvar	_i @ sp[(-56)+36]
 17321  011004  0EEC               	movlw	-20
 17322  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17323  01100C  0EED               	movlw	-19
 17324  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17325  011014  0E97               	movlw	low _dbuf
 17326  011016  240B               	addwf	(btemp+10)^0,w,c
 17327  011018  6ED9               	movwf	fsr2l,c
 17328  01101A  0E02               	movlw	high _dbuf
 17329  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17330  01101E  6EDA               	movwf	fsr2h,c
 17331  011020  0E0A               	movlw	10
 17332  011022  6EE6               	movwf	postinc1,c
 17333  011024  0E00               	movlw	0
 17334  011026  6EE6               	movwf	postinc1,c
 17335                           
 17336                           ;stkvar	_e @ sp[(-58)+34]
 17337  011028  0EE8               	movlw	-24
 17338  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17339  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17340  011036  EC83  F0CB         	call	___awmod	;wreg free
 17341  01103A  5001               	movf	btemp^0,w,c
 17342  01103C  0F30               	addlw	48
 17343  01103E  6EDF               	movwf	indf2,c
 17344                           
 17345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17346  011040  0E0A               	movlw	10
 17347  011042  6EE6               	movwf	postinc1,c
 17348  011044  0E00               	movlw	0
 17349  011046  6EE6               	movwf	postinc1,c
 17350                           
 17351                           ;stkvar	_e @ sp[(-58)+34]
 17352  011048  0EE8               	movlw	-24
 17353  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17354  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17355  011056  ECE3  F0C7         	call	___awdiv	;wreg free
 17356                           
 17357                           ;stkvar	_e @ sp[(-56)+34]
 17358  01105A  0EEA               	movlw	-22
 17359  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17360  011062  0EEB               	movlw	-21
 17361  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17362                           
 17363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17364                           ;stkvar	_p @ sp[(-56)+40]
 17365  01106A  50E1               	movf	fsr1l,w,c
 17366  01106C  0FF0               	addlw	-16
 17367  01106E  6ED9               	movwf	fsr2l,c
 17368  011070  50E2               	movf	fsr1h,w,c
 17369  011072  6EDA               	movwf	fsr2h,c
 17370  011074  0EFF               	movlw	255
 17371  011076  22DA               	addwfc	fsr2h,f,c
 17372  011078  06DE               	decf	postinc2,f,c
 17373  01107A  0E00               	movlw	0
 17374  01107C  5ADD               	subwfb	postdec2,f,c
 17375                           
 17376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17377                           ;stkvar	_w @ sp[(-56)+38]
 17378  01107E  50E1               	movf	fsr1l,w,c
 17379  011080  0FEE               	addlw	-18
 17380  011082  6ED9               	movwf	fsr2l,c
 17381  011084  50E2               	movf	fsr1h,w,c
 17382  011086  6EDA               	movwf	fsr2h,c
 17383  011088  0EFF               	movlw	255
 17384  01108A  22DA               	addwfc	fsr2h,f,c
 17385  01108C  06DE               	decf	postinc2,f,c
 17386  01108E  0E00               	movlw	0
 17387  011090  5ADD               	subwfb	postdec2,f,c
 17388  011092                     l12077:
 17389                           
 17390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17391                           ;stkvar	_e @ sp[(-56)+34]
 17392  011092  0EEA               	movlw	-22
 17393  011094  006F FF8C  F001    	movff	plusw1,btemp
 17394  01109A  0EEB               	movlw	-21
 17395  01109C  50E3               	movf	plusw1,w,c
 17396  01109E  1001               	iorwf	btemp^0,w,c
 17397  0110A0  A4D8               	btfss	status,2,c
 17398  0110A2  D7A6               	goto	l12067
 17399                           
 17400                           ;stkvar	_p @ sp[(-56)+40]
 17401  0110A4  0EF1               	movlw	-15
 17402  0110A6  BEE3               	btfsc	plusw1,7,c
 17403  0110A8  D007               	goto	u11470
 17404  0110AA  0EF1               	movlw	-15
 17405  0110AC  50E3               	movf	plusw1,w,c
 17406  0110AE  E1A0               	bnz	l12067
 17407  0110B0  0EF0               	movlw	-16
 17408  0110B2  04E3               	decf	plusw1,w,c
 17409  0110B4  B0D8               	btfsc	status,0,c
 17410  0110B6  D79C               	goto	l12067
 17411  0110B8                     u11470:
 17412                           
 17413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17414                           ;stkvar	_i @ sp[(-56)+36]
 17415  0110B8  50E1               	movf	fsr1l,w,c
 17416  0110BA  0FEC               	addlw	-20
 17417  0110BC  6ED9               	movwf	fsr2l,c
 17418  0110BE  50E2               	movf	fsr1h,w,c
 17419  0110C0  6EDA               	movwf	fsr2h,c
 17420  0110C2  0EFF               	movlw	255
 17421  0110C4  22DA               	addwfc	fsr2h,f,c
 17422  0110C6  06DE               	decf	postinc2,f,c
 17423  0110C8  0E00               	movlw	0
 17424  0110CA  5ADD               	subwfb	postdec2,f,c
 17425                           
 17426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17427                           ;stkvar	_sign @ sp[(-56)+42]
 17428  0110CC  0EF2               	movlw	-14
 17429  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17430  0110D4  0EF3               	movlw	-13
 17431  0110D6  50E3               	movf	plusw1,w,c
 17432  0110D8  1001               	iorwf	btemp^0,w,c
 17433  0110DA  A4D8               	btfss	status,2,c
 17434  0110DC  D002               	goto	l12087
 17435  0110DE  0E2B               	movlw	43
 17436  0110E0  D001               	goto	L18
 17437  0110E2                     l12087:
 17438  0110E2  0E2D               	movlw	45
 17439  0110E4                     L18:
 17440  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17441  0110E6  0E00               	movlw	0
 17442  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17443                           
 17444                           ;stkvar	_efgtoa$5503 @ sp[(-56)+4]
 17445  0110EA  0ECC               	movlw	-52
 17446  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17447  0110F2  0ECD               	movlw	-51
 17448  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17449                           
 17450                           ;stkvar	_efgtoa$5503 @ sp[(-56)+4]
 17451                           ;stkvar	_i @ sp[(-56)+36]
 17452  0110FA  0EEC               	movlw	-20
 17453  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17454  011102  0EED               	movlw	-19
 17455  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17456  01110A  0E97               	movlw	low _dbuf
 17457  01110C  240B               	addwf	(btemp+10)^0,w,c
 17458  01110E  6ED9               	movwf	fsr2l,c
 17459  011110  0E02               	movlw	high _dbuf
 17460  011112  200C               	addwfc	(btemp+11)^0,w,c
 17461  011114  6EDA               	movwf	fsr2h,c
 17462  011116  0ECC               	movlw	-52
 17463  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17464                           
 17465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17466                           ;stkvar	_w @ sp[(-56)+38]
 17467  01111E  50E1               	movf	fsr1l,w,c
 17468  011120  0FEE               	addlw	-18
 17469  011122  6ED9               	movwf	fsr2l,c
 17470  011124  50E2               	movf	fsr1h,w,c
 17471  011126  6EDA               	movwf	fsr2h,c
 17472  011128  0EFF               	movlw	255
 17473  01112A  22DA               	addwfc	fsr2h,f,c
 17474  01112C  06DE               	decf	postinc2,f,c
 17475  01112E  0E00               	movlw	0
 17476  011130  5ADD               	subwfb	postdec2,f,c
 17477                           
 17478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17479                           ;stkvar	_i @ sp[(-56)+36]
 17480  011132  50E1               	movf	fsr1l,w,c
 17481  011134  0FEC               	addlw	-20
 17482  011136  6ED9               	movwf	fsr2l,c
 17483  011138  50E2               	movf	fsr1h,w,c
 17484  01113A  6EDA               	movwf	fsr2h,c
 17485  01113C  0EFF               	movlw	255
 17486  01113E  22DA               	addwfc	fsr2h,f,c
 17487  011140  06DE               	decf	postinc2,f,c
 17488  011142  0E00               	movlw	0
 17489  011144  5ADD               	subwfb	postdec2,f,c
 17490  011146  0EBF               	movlw	191
 17491  011148  6E0B               	movwf	(btemp+10)^0,c
 17492  01114A  0EFF               	movlw	255
 17493  01114C  6E0C               	movwf	(btemp+11)^0,c
 17494                           
 17495                           ;stkvar	_c @ sp[(-56)+-7]
 17496  01114E  0EC1               	movlw	-63
 17497  011150  50E3               	movf	plusw1,w,c
 17498  011152  6E09               	movwf	(btemp+8)^0,c
 17499  011154  6A0A               	clrf	(btemp+9)^0,c
 17500  011156  500B               	movf	(btemp+10)^0,w,c
 17501  011158  2609               	addwf	(btemp+8)^0,f,c
 17502  01115A  500C               	movf	(btemp+11)^0,w,c
 17503  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17504  01115E  500A               	movf	(btemp+9)^0,w,c
 17505  011160  E106               	bnz	u11490
 17506  011162  0E1A               	movlw	26
 17507  011164  5C09               	subwf	(btemp+8)^0,w,c
 17508  011166  B0D8               	btfsc	status,0,c
 17509  011168  D002               	goto	u11490
 17510  01116A  0E01               	movlw	1
 17511  01116C  D001               	goto	u11500
 17512  01116E                     u11490:
 17513  01116E  0E00               	movlw	0
 17514  011170                     u11500:
 17515  011170  6E0B               	movwf	(btemp+10)^0,c
 17516  011172  6A0C               	clrf	(btemp+11)^0,c
 17517                           
 17518                           ;stkvar	_efgtoa$5505 @ sp[(-56)+0]
 17519  011174  0EC8               	movlw	-56
 17520  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17521  01117C  0EC9               	movlw	-55
 17522  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17523                           
 17524                           ;stkvar	_efgtoa$5505 @ sp[(-56)+0]
 17525  011184  0EC8               	movlw	-56
 17526  011186  006F FF8C  F001    	movff	plusw1,btemp
 17527  01118C  0EC9               	movlw	-55
 17528  01118E  50E3               	movf	plusw1,w,c
 17529  011190  1001               	iorwf	btemp^0,w,c
 17530  011192  A4D8               	btfss	status,2,c
 17531  011194  D002               	goto	l12103
 17532  011196  0E65               	movlw	101
 17533  011198  D001               	goto	L19
 17534  01119A                     l12103:
 17535  01119A  0E45               	movlw	69
 17536  01119C                     L19:
 17537  01119C  6E0B               	movwf	(btemp+10)^0,c
 17538  01119E  0E00               	movlw	0
 17539  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17540                           
 17541                           ;stkvar	_efgtoa$5504 @ sp[(-56)+2]
 17542  0111A2  0ECA               	movlw	-54
 17543  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17544  0111AA  0ECB               	movlw	-53
 17545  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17546                           
 17547                           ;stkvar	_efgtoa$5504 @ sp[(-56)+2]
 17548                           ;stkvar	_i @ sp[(-56)+36]
 17549  0111B2  0EEC               	movlw	-20
 17550  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17551  0111BA  0EED               	movlw	-19
 17552  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17553  0111C2  0E97               	movlw	low _dbuf
 17554  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17555  0111C6  6ED9               	movwf	fsr2l,c
 17556  0111C8  0E02               	movlw	high _dbuf
 17557  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17558  0111CC  6EDA               	movwf	fsr2h,c
 17559  0111CE  0ECA               	movlw	-54
 17560  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17561                           
 17562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17563                           ;stkvar	_w @ sp[(-56)+38]
 17564  0111D6  50E1               	movf	fsr1l,w,c
 17565  0111D8  0FEE               	addlw	-18
 17566  0111DA  6ED9               	movwf	fsr2l,c
 17567  0111DC  50E2               	movf	fsr1h,w,c
 17568  0111DE  6EDA               	movwf	fsr2h,c
 17569  0111E0  0EFF               	movlw	255
 17570  0111E2  22DA               	addwfc	fsr2h,f,c
 17571  0111E4  06DE               	decf	postinc2,f,c
 17572  0111E6  0E00               	movlw	0
 17573  0111E8  5ADD               	subwfb	postdec2,f,c
 17574                           
 17575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17576                           ;stkvar	_i @ sp[(-56)+36]
 17577  0111EA  0EEC               	movlw	-20
 17578  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17579  0111F2  0EED               	movlw	-19
 17580  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17581  0111FA  0E97               	movlw	low _dbuf
 17582  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17583  0111FE  6E09               	movwf	(btemp+8)^0,c
 17584  011200  0E02               	movlw	high _dbuf
 17585  011202  200C               	addwfc	(btemp+11)^0,w,c
 17586  011204  6E0A               	movwf	(btemp+9)^0,c
 17587  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17588  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17589                           
 17590                           ;stkvar	_n @ sp[(-58)+32]
 17591  011212  0E97               	movlw	low _dbuf
 17592  011214  6E0B               	movwf	(btemp+10)^0,c
 17593  011216  0E02               	movlw	high _dbuf
 17594  011218  6E0C               	movwf	(btemp+11)^0,c
 17595  01121A  0EE6               	movlw	-26
 17596  01121C  50E3               	movf	plusw1,w,c
 17597  01121E  260B               	addwf	(btemp+10)^0,f,c
 17598  011220  0EE7               	movlw	-25
 17599  011222  50E3               	movf	plusw1,w,c
 17600  011224  220C               	addwfc	(btemp+11)^0,f,c
 17601  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17602  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17603  011232  EC63  F0D0         	call	_strcpy	;wreg free
 17604  011236  EF16  F081         	goto	l11855
 17605  01123A                     l2199:
 17606                           
 17607                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17608  01123A  0EC1               	movlw	193
 17609  01123C  26E1               	addwf	fsr1l,f,c
 17610  01123E  0EFF               	movlw	255
 17611  011240  22E2               	addwfc	fsr1h,f,c
 17612  011242  0012               	return		;funcret
 17613  011244                     __end_of_efgtoa:
 17614                           	opt callstack 0
 17615                           
 17616 ;; *************** function _tolower *****************
 17617 ;; Defined at:
 17618 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17619 ;; Parameters:    Size  Location     Type
 17620 ;;  c               2  [STACK] int 
 17621 ;; Auto vars:     Size  Location     Type
 17622 ;;		None
 17623 ;; Return value:  Size  Location     Type
 17624 ;;                  2  [STACK] int 
 17625 ;; Registers used:
 17626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17627 ;; Tracked objects:
 17628 ;;		On entry : 0/0
 17629 ;;		On exit  : 0/0
 17630 ;;		Unchanged: 0/0
 17631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17636 ;;Total ram usage:        0 bytes
 17637 ;; Hardware stack levels used:    1
 17638 ;; Hardware stack levels required when called:   16
 17639 ;; This function calls:
 17640 ;;		_isupper
 17641 ;; This function is called by:
 17642 ;;		_efgtoa
 17643 ;;		_vfpfcnvrt
 17644 ;; This function uses a reentrant model
 17645 ;;
 17646                           
 17647                           	psect	text56
 17648  01A9BC                     __ptext56:
 17649                           	opt callstack 0
 17650  01A9BC                     _tolower:
 17651                           	opt callstack 0
 17652                           
 17653                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17654  01A9BC  52E6               	movf	postinc1,f,c
 17655  01A9BE  52E6               	movf	postinc1,f,c
 17656                           
 17657                           ;stkvar	_c @ sp[(-2)+-2]
 17658                           
 17659                           ;incstack = 0
 17660 ;; hardware stack exceeded
 17661  01A9C0  0EFC               	movlw	-4
 17662  01A9C2  50E3               	movf	plusw1,w,c
 17663  01A9C4  0FBF               	addlw	191
 17664  01A9C6  6E0B               	movwf	(btemp+10)^0,c
 17665  01A9C8  0EFD               	movlw	-3
 17666  01A9CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17667  01A9D0  0EFF               	movlw	255
 17668  01A9D2  220C               	addwfc	(btemp+11)^0,f,c
 17669  01A9D4  500C               	movf	(btemp+11)^0,w,c
 17670  01A9D6  E106               	bnz	u6010
 17671  01A9D8  0E1A               	movlw	26
 17672  01A9DA  5C0B               	subwf	(btemp+10)^0,w,c
 17673  01A9DC  B0D8               	btfsc	status,0,c
 17674  01A9DE  D002               	goto	u6010
 17675  01A9E0  0E01               	movlw	1
 17676  01A9E2  D001               	goto	u6020
 17677  01A9E4                     u6010:
 17678  01A9E4  0E00               	movlw	0
 17679  01A9E6                     u6020:
 17680  01A9E6  6E0B               	movwf	(btemp+10)^0,c
 17681  01A9E8  6A0C               	clrf	(btemp+11)^0,c
 17682                           
 17683                           ;stkvar	_tolower$6324 @ sp[(-2)+0]
 17684  01A9EA  0EFE               	movlw	-2
 17685  01A9EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17686  01A9F2  0EFF               	movlw	-1
 17687  01A9F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17688                           
 17689                           ;stkvar	_tolower$6324 @ sp[(-2)+0]
 17690  01A9FA  0EFE               	movlw	-2
 17691  01A9FC  006F FF8C  F001    	movff	plusw1,btemp
 17692  01AA02  0EFF               	movlw	-1
 17693  01AA04  50E3               	movf	plusw1,w,c
 17694  01AA06  1001               	iorwf	btemp^0,w,c
 17695  01AA08  B4D8               	btfsc	status,2,c
 17696  01AA0A  D00D               	goto	l7929
 17697                           
 17698                           ;stkvar	_c @ sp[(-2)+-2]
 17699  01AA0C  0EFC               	movlw	-4
 17700  01AA0E  006F FF8C  F001    	movff	plusw1,btemp
 17701  01AA14  0EFD               	movlw	-3
 17702  01AA16  006F FF8C  F002    	movff	plusw1,btemp+1
 17703  01AA1C  0E20               	movlw	32
 17704  01AA1E  1201               	iorwf	btemp^0,f,c
 17705  01AA20  0E00               	movlw	0
 17706  01AA22  1202               	iorwf	(btemp+1)^0,f,c
 17707  01AA24  D008               	goto	l3471
 17708  01AA26                     l7929:
 17709                           
 17710                           ;stkvar	_c @ sp[(-2)+-2]
 17711  01AA26  0EFC               	movlw	-4
 17712  01AA28  006F FF8C  F001    	movff	plusw1,btemp
 17713  01AA2E  0EFD               	movlw	-3
 17714  01AA30  006F FF8C  F002    	movff	plusw1,btemp+1
 17715  01AA36                     l3471:
 17716                           
 17717                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17718  01AA36  52E5               	movf	postdec1,f,c
 17719  01AA38  52E5               	movf	postdec1,f,c
 17720  01AA3A  52E5               	movf	postdec1,f,c
 17721  01AA3C  52E5               	movf	postdec1,f,c
 17722  01AA3E  0012               	return		;funcret
 17723  01AA40                     __end_of_tolower:
 17724                           	opt callstack 0
 17725                           
 17726 ;; *************** function _isupper *****************
 17727 ;; Defined at:
 17728 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;  c               2  [STACK] int 
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;		None
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  2  [STACK] int 
 17735 ;; Registers used:
 17736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17746 ;;Total ram usage:        0 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; Hardware stack levels required when called:   15
 17749 ;; This function calls:
 17750 ;;		Nothing
 17751 ;; This function is called by:
 17752 ;;		_efgtoa
 17753 ;;		_xtoa
 17754 ;;		_vfpfcnvrt
 17755 ;;		_tolower
 17756 ;; This function uses a reentrant model
 17757 ;;
 17758                           
 17759                           	psect	text57
 17760  01B638                     __ptext57:
 17761                           	opt callstack 0
 17762  01B638                     _isupper:
 17763                           	opt callstack 0
 17764                           
 17765                           ;stkvar	_c @ sp[(0)+-2]
 17766                           
 17767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17768                           ;incstack = 0
 17769 ;; hardware stack exceeded
 17770  01B638  0EFE               	movlw	-2
 17771  01B63A  50E3               	movf	plusw1,w,c
 17772  01B63C  0FBF               	addlw	191
 17773  01B63E  6E0B               	movwf	(btemp+10)^0,c
 17774  01B640  0EFF               	movlw	-1
 17775  01B642  006F FF8C  F00C    	movff	plusw1,btemp+11
 17776  01B648  0EFF               	movlw	255
 17777  01B64A  220C               	addwfc	(btemp+11)^0,f,c
 17778  01B64C  500C               	movf	(btemp+11)^0,w,c
 17779  01B64E  E106               	bnz	u5410
 17780  01B650  0E1A               	movlw	26
 17781  01B652  5C0B               	subwf	(btemp+10)^0,w,c
 17782  01B654  B0D8               	btfsc	status,0,c
 17783  01B656  D002               	goto	u5410
 17784  01B658  0E01               	movlw	1
 17785  01B65A  D001               	goto	u5420
 17786  01B65C                     u5410:
 17787  01B65C  0E00               	movlw	0
 17788  01B65E                     u5420:
 17789  01B65E  6E01               	movwf	btemp^0,c
 17790  01B660  6A02               	clrf	(btemp+1)^0,c
 17791                           
 17792                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17793  01B662  52E5               	movf	postdec1,f,c
 17794  01B664  52E5               	movf	postdec1,f,c
 17795  01B666  0012               	return		;funcret
 17796  01B668                     __end_of_isupper:
 17797                           	opt callstack 0
 17798                           
 17799 ;; *************** function _strcpy *****************
 17800 ;; Defined at:
 17801 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17802 ;; Parameters:    Size  Location     Type
 17803 ;;  dest            2  [STACK] PTR unsigned char 
 17804 ;;		 -> dbuf(80), 
 17805 ;;  src             2  [STACK] PTR const unsigned char 
 17806 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17807 ;;		 -> dbuf(80), 
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;  d               2  [STACK] PTR unsigned char 
 17810 ;;		 -> dbuf(80), 
 17811 ;;  s               2  [STACK] PTR const unsigned char 
 17812 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17813 ;;		 -> dbuf(80), 
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  2  [STACK] PTR unsigned char 
 17816 ;; Registers used:
 17817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17827 ;;Total ram usage:        0 bytes
 17828 ;; Hardware stack levels used:    1
 17829 ;; Hardware stack levels required when called:   15
 17830 ;; This function calls:
 17831 ;;		Nothing
 17832 ;; This function is called by:
 17833 ;;		_efgtoa
 17834 ;; This function uses a reentrant model
 17835 ;;
 17836                           
 17837                           	psect	text58
 17838  01A0C6                     __ptext58:
 17839                           	opt callstack 0
 17840  01A0C6                     _strcpy:
 17841                           	opt callstack 0
 17842                           
 17843                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17844  01A0C6  52E6               	movf	postinc1,f,c
 17845  01A0C8  52E6               	movf	postinc1,f,c
 17846  01A0CA  52E6               	movf	postinc1,f,c
 17847  01A0CC  52E6               	movf	postinc1,f,c
 17848                           
 17849                           ;stkvar	_src @ sp[(-4)+-4]
 17850                           
 17851                           ;incstack = 0
 17852 ;; hardware stack exceeded
 17853  01A0CE  0EF8               	movlw	-8
 17854  01A0D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17855  01A0D6  0EF9               	movlw	-7
 17856  01A0D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17857                           
 17858                           ;stkvar	_s @ sp[(-4)+2]
 17859  01A0DE  0EFF               	movlw	-1
 17860  01A0E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17861  01A0E6  0EFE               	movlw	-2
 17862  01A0E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17863                           
 17864                           ;stkvar	_dest @ sp[(-4)+-2]
 17865  01A0EE  0EFA               	movlw	-6
 17866  01A0F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17867  01A0F6  0EFB               	movlw	-5
 17868  01A0F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17869                           
 17870                           ;stkvar	_d @ sp[(-4)+0]
 17871  01A0FE  0EFD               	movlw	-3
 17872  01A100  0060  F033  FFE3   	movff	btemp+11,plusw1
 17873  01A106  0EFC               	movlw	-4
 17874  01A108  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17875  01A10E                     l11687:
 17876                           
 17877                           ;stkvar	_s @ sp[(-4)+2]
 17878  01A10E  50E1               	movf	fsr1l,w,c
 17879  01A110  0FFE               	addlw	-2
 17880  01A112  6ED9               	movwf	fsr2l,c
 17881  01A114  50E2               	movf	fsr1h,w,c
 17882  01A116  6EDA               	movwf	fsr2h,c
 17883  01A118  0EFF               	movlw	255
 17884  01A11A  22DA               	addwfc	fsr2h,f,c
 17885  01A11C  006F FF7C  F00B    	movff	indf2,btemp+10
 17886  01A122  0E01               	movlw	1
 17887  01A124  26DE               	addwf	postinc2,f,c
 17888  01A126  006F FF7C  F00C    	movff	indf2,btemp+11
 17889  01A12C  0E00               	movlw	0
 17890  01A12E  22DD               	addwfc	postdec2,f,c
 17891  01A130  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17892  01A136  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17893  01A13C  0E00               	movlw	low (__mediumconst shr (0+16))
 17894  01A13E  6EF8               	movwf	tblptru,c
 17895                           
 17896                           ;stkvar	_d @ sp[(-4)+0]
 17897  01A140  50E1               	movf	fsr1l,w,c
 17898  01A142  0FFC               	addlw	-4
 17899  01A144  6ED9               	movwf	fsr2l,c
 17900  01A146  50E2               	movf	fsr1h,w,c
 17901  01A148  6EDA               	movwf	fsr2h,c
 17902  01A14A  0EFF               	movlw	255
 17903  01A14C  22DA               	addwfc	fsr2h,f,c
 17904  01A14E  006F FF7C  F00B    	movff	indf2,btemp+10
 17905  01A154  0E01               	movlw	1
 17906  01A156  26DE               	addwf	postinc2,f,c
 17907  01A158  006F FF7C  F00C    	movff	indf2,btemp+11
 17908  01A15E  0E00               	movlw	0
 17909  01A160  22DD               	addwfc	postdec2,f,c
 17910  01A162  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17911  01A168  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17912  01A16E  0E1F               	movlw	(high __ramtop+-1)
 17913  01A170  64F7               	cpfsgt	tblptrh,c
 17914  01A172  D003               	bra	u10757
 17915  01A174  0008               	tblrd		*
 17916  01A176  50F5               	movf	tablat,w,c
 17917  01A178  D007               	bra	u10750
 17918  01A17A                     u10757:
 17919  01A17A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17920  01A180  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17921  01A186  50EF               	movf	indf0,w,c
 17922  01A188                     u10750:
 17923  01A188  6EDF               	movwf	indf2,c
 17924  01A18A  50DF               	movf	indf2,w,c
 17925  01A18C  A4D8               	btfss	status,2,c
 17926  01A18E  D7BF               	goto	l11687
 17927                           
 17928                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17929  01A190  0EF8               	movlw	248
 17930  01A192  26E1               	addwf	fsr1l,f,c
 17931  01A194  0EFF               	movlw	255
 17932  01A196  22E2               	addwfc	fsr1h,f,c
 17933  01A198  0012               	return		;funcret
 17934  01A19A                     __end_of_strcpy:
 17935                           	opt callstack 0
 17936                           
 17937 ;; *************** function _floorf *****************
 17938 ;; Defined at:
 17939 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;  x               4  [STACK] float 
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;  u               4  [STACK] struct .
 17944 ;;  m               4  [STACK] unsigned long 
 17945 ;;  e               2  [STACK] int 
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  4  [STACK] float 
 17948 ;; Registers used:
 17949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17959 ;;Total ram usage:        0 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:   15
 17962 ;; This function calls:
 17963 ;;		Nothing
 17964 ;; This function is called by:
 17965 ;;		_efgtoa
 17966 ;; This function uses a reentrant model
 17967 ;;
 17968                           
 17969                           	psect	text59
 17970  0161B6                     __ptext59:
 17971                           	opt callstack 0
 17972  0161B6                     _floorf:
 17973                           	opt callstack 0
 17974                           
 17975                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17976  0161B6  0E0A               	movlw	10
 17977  0161B8  26E1               	addwf	fsr1l,f,c
 17978  0161BA  0E00               	movlw	0
 17979  0161BC  22E2               	addwfc	fsr1h,f,c
 17980                           
 17981                           ;incstack = 0
 17982 ;; hardware stack exceeded
 17983  0161BE  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 17984  0161C4  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 17985  0161CA  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 17986  0161D0  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 17987                           
 17988                           ;stkvar	_u @ sp[(-10)+0]
 17989  0161D6  0EF6               	movlw	-10
 17990  0161D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 17991  0161DE  0EF7               	movlw	-9
 17992  0161E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17993  0161E6  0EF8               	movlw	-8
 17994  0161E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17995  0161EE  0EF9               	movlw	-7
 17996  0161F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17997                           
 17998                           ;stkvar	_x @ sp[(-10)+-4]
 17999  0161F6  0EF2               	movlw	-14
 18000  0161F8  006F FF8C  F009    	movff	plusw1,btemp+8
 18001  0161FE  0EF3               	movlw	-13
 18002  016200  006F FF8C  F00A    	movff	plusw1,btemp+9
 18003  016206  0EF4               	movlw	-12
 18004  016208  006F FF8C  F00B    	movff	plusw1,btemp+10
 18005  01620E  0EF5               	movlw	-11
 18006  016210  006F FF8C  F00C    	movff	plusw1,btemp+11
 18007                           
 18008                           ;stkvar	_u @ sp[(-10)+0]
 18009  016216  0EF6               	movlw	-10
 18010  016218  0060  F027  FFE3   	movff	btemp+8,plusw1
 18011  01621E  0EF7               	movlw	-9
 18012  016220  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18013  016226  0EF8               	movlw	-8
 18014  016228  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18015  01622E  0EF9               	movlw	-7
 18016  016230  0060  F033  FFE3   	movff	btemp+11,plusw1
 18017  016236  0E81               	movlw	129
 18018  016238  6E0B               	movwf	(btemp+10)^0,c
 18019  01623A  0EFF               	movlw	255
 18020  01623C  6E0C               	movwf	(btemp+11)^0,c
 18021                           
 18022                           ;stkvar	_u @ sp[(-10)+0]
 18023  01623E  0EF6               	movlw	-10
 18024  016240  006F FF8C  F005    	movff	plusw1,btemp+4
 18025  016246  0EF7               	movlw	-9
 18026  016248  006F FF8C  F006    	movff	plusw1,btemp+5
 18027  01624E  0EF8               	movlw	-8
 18028  016250  006F FF8C  F007    	movff	plusw1,btemp+6
 18029  016256  0EF9               	movlw	-7
 18030  016258  006F FF8C  F008    	movff	plusw1,btemp+7
 18031  01625E  0E18               	movlw	24
 18032  016260  D005               	goto	u6040
 18033  016262                     u6045:
 18034  016262  90D8               	bcf	status,0,c
 18035  016264  3208               	rrcf	(btemp+7)^0,f,c
 18036  016266  3207               	rrcf	(btemp+6)^0,f,c
 18037  016268  3206               	rrcf	(btemp+5)^0,f,c
 18038  01626A  3205               	rrcf	(btemp+4)^0,f,c
 18039  01626C                     u6040:
 18040  01626C  2EE8               	decfsz	wreg,f,c
 18041  01626E  D7F9               	goto	u6045
 18042  016270  0060  F014  F009   	movff	btemp+4,btemp+8
 18043  016276  0060  F018  F00A   	movff	btemp+5,btemp+9
 18044  01627C  0EFF               	movlw	255
 18045  01627E  1609               	andwf	(btemp+8)^0,f,c
 18046  016280  0E00               	movlw	0
 18047  016282  160A               	andwf	(btemp+9)^0,f,c
 18048  016284  500B               	movf	(btemp+10)^0,w,c
 18049  016286  2609               	addwf	(btemp+8)^0,f,c
 18050  016288  500C               	movf	(btemp+11)^0,w,c
 18051  01628A  220A               	addwfc	(btemp+9)^0,f,c
 18052                           
 18053                           ;stkvar	_e @ sp[(-10)+8]
 18054  01628C  0EFE               	movlw	-2
 18055  01628E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18056  016294  0EFF               	movlw	-1
 18057  016296  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18058                           
 18059                           ;stkvar	_e @ sp[(-10)+8]
 18060  01629C  0EFF               	movlw	-1
 18061  01629E  BEE3               	btfsc	plusw1,7,c
 18062  0162A0  D019               	goto	l7943
 18063  0162A2  0EFF               	movlw	-1
 18064  0162A4  50E3               	movf	plusw1,w,c
 18065  0162A6  E108               	bnz	u6050
 18066  0162A8  0EFE               	movlw	-2
 18067  0162AA  006F FF8C  F001    	movff	plusw1,btemp
 18068  0162B0  0E17               	movlw	23
 18069  0162B2  5E01               	subwf	btemp^0,f,c
 18070  0162B4  A0D8               	btfss	status,0,c
 18071  0162B6  D00E               	goto	l7943
 18072  0162B8                     u6050:
 18073                           
 18074                           ;stkvar	_x @ sp[(-10)+-4]
 18075  0162B8  0EF2               	movlw	-14
 18076  0162BA  006F FF8C  F001    	movff	plusw1,btemp
 18077  0162C0  0EF3               	movlw	-13
 18078  0162C2  006F FF8C  F002    	movff	plusw1,btemp+1
 18079  0162C8  0EF4               	movlw	-12
 18080  0162CA  006F FF8C  F003    	movff	plusw1,btemp+2
 18081  0162D0  0EF5               	movlw	-11
 18082  0162D2  D11F               	goto	L20
 18083  0162D4                     l7943:
 18084                           
 18085                           ;stkvar	_e @ sp[(-10)+8]
 18086  0162D4  0EFF               	movlw	-1
 18087  0162D6  BEE3               	btfsc	plusw1,7,c
 18088  0162D8  D0B4               	goto	l7959
 18089                           
 18090                           ;stkvar	_e @ sp[(-10)+8]
 18091  0162DA  0EFE               	movlw	-2
 18092  0162DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18093  0162E2  0EFF               	movlw	255
 18094  0162E4  6E05               	movwf	(btemp+4)^0,c
 18095  0162E6  0EFF               	movlw	255
 18096  0162E8  6E06               	movwf	(btemp+5)^0,c
 18097  0162EA  0E7F               	movlw	127
 18098  0162EC  6E07               	movwf	(btemp+6)^0,c
 18099  0162EE  0E00               	movlw	0
 18100  0162F0  6E08               	movwf	(btemp+7)^0,c
 18101  0162F2                     u6075:
 18102  0162F2  660C               	tstfsz	(btemp+11)^0,c
 18103  0162F4  D001               	goto	u6076
 18104  0162F6  D007               	goto	u6077
 18105  0162F8                     u6076:
 18106  0162F8  3408               	rlcf	(btemp+7)^0,w,c
 18107  0162FA  3208               	rrcf	(btemp+7)^0,f,c
 18108  0162FC  3207               	rrcf	(btemp+6)^0,f,c
 18109  0162FE  3206               	rrcf	(btemp+5)^0,f,c
 18110  016300  3205               	rrcf	(btemp+4)^0,f,c
 18111  016302  2E0C               	decfsz	(btemp+11)^0,f,c
 18112  016304  D7F6               	goto	u6075
 18113  016306                     u6077:
 18114                           
 18115                           ;stkvar	_m @ sp[(-10)+4]
 18116  016306  0EFA               	movlw	-6
 18117  016308  0060  F017  FFE3   	movff	btemp+4,plusw1
 18118  01630E  0EFB               	movlw	-5
 18119  016310  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18120  016316  0EFC               	movlw	-4
 18121  016318  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18122  01631E  0EFD               	movlw	-3
 18123  016320  0060  F023  FFE3   	movff	btemp+7,plusw1
 18124                           
 18125                           ;stkvar	_m @ sp[(-10)+4]
 18126                           ;stkvar	_u @ sp[(-10)+0]
 18127  016326  0EF6               	movlw	-10
 18128  016328  006F FF8C  F009    	movff	plusw1,btemp+8
 18129  01632E  0EF7               	movlw	-9
 18130  016330  006F FF8C  F00A    	movff	plusw1,btemp+9
 18131  016336  0EF8               	movlw	-8
 18132  016338  006F FF8C  F00B    	movff	plusw1,btemp+10
 18133  01633E  0EF9               	movlw	-7
 18134  016340  006F FF8C  F00C    	movff	plusw1,btemp+11
 18135  016346  0EFA               	movlw	-6
 18136  016348  50E3               	movf	plusw1,w,c
 18137  01634A  1609               	andwf	(btemp+8)^0,f,c
 18138  01634C  0EFB               	movlw	-5
 18139  01634E  50E3               	movf	plusw1,w,c
 18140  016350  160A               	andwf	(btemp+9)^0,f,c
 18141  016352  0EFC               	movlw	-4
 18142  016354  50E3               	movf	plusw1,w,c
 18143  016356  160B               	andwf	(btemp+10)^0,f,c
 18144  016358  0EFD               	movlw	-3
 18145  01635A  50E3               	movf	plusw1,w,c
 18146  01635C  160C               	andwf	(btemp+11)^0,f,c
 18147  01635E  5009               	movf	(btemp+8)^0,w,c
 18148  016360  100A               	iorwf	(btemp+9)^0,w,c
 18149  016362  100B               	iorwf	(btemp+10)^0,w,c
 18150  016364  100C               	iorwf	(btemp+11)^0,w,c
 18151  016366  B4D8               	btfsc	status,2,c
 18152  016368  D7A7               	goto	u6050
 18153                           
 18154                           ;stkvar	_u @ sp[(-10)+0]
 18155  01636A  0EF6               	movlw	-10
 18156  01636C  006F FF8C  F009    	movff	plusw1,btemp+8
 18157  016372  0EF7               	movlw	-9
 18158  016374  006F FF8C  F00A    	movff	plusw1,btemp+9
 18159  01637A  0EF8               	movlw	-8
 18160  01637C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18161  016382  0EF9               	movlw	-7
 18162  016384  006F FF8C  F00C    	movff	plusw1,btemp+11
 18163  01638A  0E20               	movlw	32
 18164  01638C  D005               	goto	u6090
 18165  01638E                     u6095:
 18166  01638E  90D8               	bcf	status,0,c
 18167  016390  320C               	rrcf	(btemp+11)^0,f,c
 18168  016392  320B               	rrcf	(btemp+10)^0,f,c
 18169  016394  320A               	rrcf	(btemp+9)^0,f,c
 18170  016396  3209               	rrcf	(btemp+8)^0,f,c
 18171  016398                     u6090:
 18172  016398  2EE8               	decfsz	wreg,f,c
 18173  01639A  D7F9               	goto	u6095
 18174  01639C  5009               	movf	(btemp+8)^0,w,c
 18175  01639E  B4D8               	btfsc	status,2,c
 18176  0163A0  D028               	goto	l7957
 18177                           
 18178                           ;stkvar	_m @ sp[(-10)+4]
 18179                           ;stkvar	_u @ sp[(-10)+0]
 18180  0163A2  0EF6               	movlw	-10
 18181  0163A4  50E3               	movf	plusw1,w,c
 18182  0163A6  6E01               	movwf	btemp^0,c
 18183  0163A8  0EFA               	movlw	-6
 18184  0163AA  50E3               	movf	plusw1,w,c
 18185  0163AC  2601               	addwf	btemp^0,f,c
 18186  0163AE  0EF6               	movlw	-10
 18187  0163B0  0060  F007  FFE3   	movff	btemp,plusw1
 18188  0163B6  0EF7               	movlw	-9
 18189  0163B8  50E3               	movf	plusw1,w,c
 18190  0163BA  6E01               	movwf	btemp^0,c
 18191  0163BC  0EFB               	movlw	-5
 18192  0163BE  50E3               	movf	plusw1,w,c
 18193  0163C0  2201               	addwfc	btemp^0,f,c
 18194  0163C2  0EF7               	movlw	-9
 18195  0163C4  0060  F007  FFE3   	movff	btemp,plusw1
 18196  0163CA  0EF8               	movlw	-8
 18197  0163CC  50E3               	movf	plusw1,w,c
 18198  0163CE  6E01               	movwf	btemp^0,c
 18199  0163D0  0EFC               	movlw	-4
 18200  0163D2  50E3               	movf	plusw1,w,c
 18201  0163D4  2201               	addwfc	btemp^0,f,c
 18202  0163D6  0EF8               	movlw	-8
 18203  0163D8  0060  F007  FFE3   	movff	btemp,plusw1
 18204  0163DE  0EF9               	movlw	-7
 18205  0163E0  50E3               	movf	plusw1,w,c
 18206  0163E2  6E01               	movwf	btemp^0,c
 18207  0163E4  0EFD               	movlw	-3
 18208  0163E6  50E3               	movf	plusw1,w,c
 18209  0163E8  2201               	addwfc	btemp^0,f,c
 18210  0163EA  0EF9               	movlw	-7
 18211  0163EC  0060  F007  FFE3   	movff	btemp,plusw1
 18212  0163F2                     l7957:
 18213                           
 18214                           ;stkvar	_m @ sp[(-10)+4]
 18215  0163F2  0EFA               	movlw	-6
 18216  0163F4  006F FF8C  F009    	movff	plusw1,btemp+8
 18217  0163FA  0EFB               	movlw	-5
 18218  0163FC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18219  016402  0EFC               	movlw	-4
 18220  016404  006F FF8C  F00B    	movff	plusw1,btemp+10
 18221  01640A  0EFD               	movlw	-3
 18222  01640C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18223  016412  1C09               	comf	(btemp+8)^0,w,c
 18224  016414  6E05               	movwf	(btemp+4)^0,c
 18225  016416  1C0A               	comf	(btemp+9)^0,w,c
 18226  016418  6E06               	movwf	(btemp+5)^0,c
 18227  01641A  1C0B               	comf	(btemp+10)^0,w,c
 18228  01641C  6E07               	movwf	(btemp+6)^0,c
 18229  01641E  1C0C               	comf	(btemp+11)^0,w,c
 18230  016420  6E08               	movwf	(btemp+7)^0,c
 18231                           
 18232                           ;stkvar	_u @ sp[(-10)+0]
 18233  016422  50E1               	movf	fsr1l,w,c
 18234  016424  0FF6               	addlw	-10
 18235  016426  6ED9               	movwf	fsr2l,c
 18236  016428  50E2               	movf	fsr1h,w,c
 18237  01642A  6EDA               	movwf	fsr2h,c
 18238  01642C  0EFF               	movlw	255
 18239  01642E  22DA               	addwfc	fsr2h,f,c
 18240  016430  5005               	movf	(btemp+4)^0,w,c
 18241  016432  16DE               	andwf	postinc2,f,c
 18242  016434  5006               	movf	(btemp+5)^0,w,c
 18243  016436  16DE               	andwf	postinc2,f,c
 18244  016438  5007               	movf	(btemp+6)^0,w,c
 18245  01643A  16DE               	andwf	postinc2,f,c
 18246  01643C  5008               	movf	(btemp+7)^0,w,c
 18247  01643E  16DE               	andwf	postinc2,f,c
 18248  016440  D05B               	goto	l7967
 18249  016442                     l7959:
 18250                           
 18251                           ;stkvar	_u @ sp[(-10)+0]
 18252  016442  0EF6               	movlw	-10
 18253  016444  006F FF8C  F009    	movff	plusw1,btemp+8
 18254  01644A  0EF7               	movlw	-9
 18255  01644C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18256  016452  0EF8               	movlw	-8
 18257  016454  006F FF8C  F00B    	movff	plusw1,btemp+10
 18258  01645A  0EF9               	movlw	-7
 18259  01645C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18260  016462  0E20               	movlw	32
 18261  016464  D005               	goto	u6110
 18262  016466                     u6115:
 18263  016466  90D8               	bcf	status,0,c
 18264  016468  320C               	rrcf	(btemp+11)^0,f,c
 18265  01646A  320B               	rrcf	(btemp+10)^0,f,c
 18266  01646C  320A               	rrcf	(btemp+9)^0,f,c
 18267  01646E  3209               	rrcf	(btemp+8)^0,f,c
 18268  016470                     u6110:
 18269  016470  2EE8               	decfsz	wreg,f,c
 18270  016472  D7F9               	goto	u6115
 18271  016474  6609               	tstfsz	(btemp+8)^0,c
 18272  016476  D009               	goto	l7963
 18273                           
 18274                           ;stkvar	_u @ sp[(-10)+0]
 18275  016478  0EF6               	movlw	-10
 18276  01647A  6AE3               	clrf	plusw1,c
 18277  01647C  0EF7               	movlw	-9
 18278  01647E  6AE3               	clrf	plusw1,c
 18279  016480  0EF8               	movlw	-8
 18280  016482  6AE3               	clrf	plusw1,c
 18281  016484  0EF9               	movlw	-7
 18282  016486  6AE3               	clrf	plusw1,c
 18283  016488  D037               	goto	l7967
 18284  01648A                     l7963:
 18285                           
 18286                           ;stkvar	_u @ sp[(-10)+0]
 18287  01648A  0EF6               	movlw	-10
 18288  01648C  006F FF8C  F009    	movff	plusw1,btemp+8
 18289  016492  0EF7               	movlw	-9
 18290  016494  006F FF8C  F00A    	movff	plusw1,btemp+9
 18291  01649A  0EF8               	movlw	-8
 18292  01649C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18293  0164A2  0EF9               	movlw	-7
 18294  0164A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18295  0164AA  90D8               	bcf	status,0,c
 18296  0164AC  3409               	rlcf	(btemp+8)^0,w,c
 18297  0164AE  6E05               	movwf	(btemp+4)^0,c
 18298  0164B0  340A               	rlcf	(btemp+9)^0,w,c
 18299  0164B2  6E06               	movwf	(btemp+5)^0,c
 18300  0164B4  340B               	rlcf	(btemp+10)^0,w,c
 18301  0164B6  6E07               	movwf	(btemp+6)^0,c
 18302  0164B8  340C               	rlcf	(btemp+11)^0,w,c
 18303  0164BA  6E08               	movwf	(btemp+7)^0,c
 18304  0164BC  5005               	movf	(btemp+4)^0,w,c
 18305  0164BE  1006               	iorwf	(btemp+5)^0,w,c
 18306  0164C0  1007               	iorwf	(btemp+6)^0,w,c
 18307  0164C2  1008               	iorwf	(btemp+7)^0,w,c
 18308  0164C4  B4D8               	btfsc	status,2,c
 18309  0164C6  D018               	goto	l7967
 18310  0164C8  0E00               	movlw	0
 18311  0164CA  6E09               	movwf	(btemp+8)^0,c
 18312  0164CC  0E00               	movlw	0
 18313  0164CE  6E0A               	movwf	(btemp+9)^0,c
 18314  0164D0  0E80               	movlw	128
 18315  0164D2  6E0B               	movwf	(btemp+10)^0,c
 18316  0164D4  0EBF               	movlw	191
 18317  0164D6  6E0C               	movwf	(btemp+11)^0,c
 18318                           
 18319                           ;stkvar	_u @ sp[(-10)+0]
 18320  0164D8  0EF6               	movlw	-10
 18321  0164DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 18322  0164E0  0EF7               	movlw	-9
 18323  0164E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18324  0164E8  0EF8               	movlw	-8
 18325  0164EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18326  0164F0  0EF9               	movlw	-7
 18327  0164F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18328  0164F8                     l7967:
 18329                           
 18330                           ;stkvar	_u @ sp[(-10)+0]
 18331  0164F8  0EF6               	movlw	-10
 18332  0164FA  006F FF8C  F001    	movff	plusw1,btemp
 18333  016500  0EF7               	movlw	-9
 18334  016502  006F FF8C  F002    	movff	plusw1,btemp+1
 18335  016508  0EF8               	movlw	-8
 18336  01650A  006F FF8C  F003    	movff	plusw1,btemp+2
 18337  016510  0EF9               	movlw	-7
 18338  016512                     L20:
 18339  016512  006F FF8C  F004    	movff	plusw1,btemp+3
 18340                           
 18341                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18342  016518  0EF2               	movlw	242
 18343  01651A  26E1               	addwf	fsr1l,f,c
 18344  01651C  0EFF               	movlw	255
 18345  01651E  22E2               	addwfc	fsr1h,f,c
 18346  016520  0012               	return		;funcret
 18347  016522                     __end_of_floorf:
 18348                           	opt callstack 0
 18349                           
 18350 ;; *************** function ___fpclassifyf *****************
 18351 ;; Defined at:
 18352 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18353 ;; Parameters:    Size  Location     Type
 18354 ;;  x               4  [STACK] float 
 18355 ;; Auto vars:     Size  Location     Type
 18356 ;;  u               4  [STACK] struct .
 18357 ;;  e               2  [STACK] int 
 18358 ;; Return value:  Size  Location     Type
 18359 ;;                  2  [STACK] int 
 18360 ;; Registers used:
 18361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18362 ;; Tracked objects:
 18363 ;;		On entry : 0/0
 18364 ;;		On exit  : 0/0
 18365 ;;		Unchanged: 0/0
 18366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18371 ;;Total ram usage:        0 bytes
 18372 ;; Hardware stack levels used:    1
 18373 ;; Hardware stack levels required when called:   15
 18374 ;; This function calls:
 18375 ;;		Nothing
 18376 ;; This function is called by:
 18377 ;;		_efgtoa
 18378 ;; This function uses a reentrant model
 18379 ;;
 18380                           
 18381                           	psect	text60
 18382  0186F4                     __ptext60:
 18383                           	opt callstack 0
 18384  0186F4                     ___fpclassifyf:
 18385                           	opt callstack 0
 18386                           
 18387                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18388  0186F4  0E06               	movlw	6
 18389  0186F6  26E1               	addwf	fsr1l,f,c
 18390  0186F8  0E00               	movlw	0
 18391  0186FA  22E2               	addwfc	fsr1h,f,c
 18392                           
 18393                           ;incstack = 0
 18394 ;; hardware stack exceeded
 18395  0186FC  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18396  018702  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18397  018708  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18398  01870E  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18399                           
 18400                           ;stkvar	_u @ sp[(-6)+0]
 18401  018714  0EFA               	movlw	-6
 18402  018716  0060  F027  FFE3   	movff	btemp+8,plusw1
 18403  01871C  0EFB               	movlw	-5
 18404  01871E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18405  018724  0EFC               	movlw	-4
 18406  018726  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18407  01872C  0EFD               	movlw	-3
 18408  01872E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18409                           
 18410                           ;stkvar	_x @ sp[(-6)+-4]
 18411  018734  0EF6               	movlw	-10
 18412  018736  006F FF8C  F009    	movff	plusw1,btemp+8
 18413  01873C  0EF7               	movlw	-9
 18414  01873E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18415  018744  0EF8               	movlw	-8
 18416  018746  006F FF8C  F00B    	movff	plusw1,btemp+10
 18417  01874C  0EF9               	movlw	-7
 18418  01874E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18419                           
 18420                           ;stkvar	_u @ sp[(-6)+0]
 18421  018754  0EFA               	movlw	-6
 18422  018756  0060  F027  FFE3   	movff	btemp+8,plusw1
 18423  01875C  0EFB               	movlw	-5
 18424  01875E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18425  018764  0EFC               	movlw	-4
 18426  018766  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18427  01876C  0EFD               	movlw	-3
 18428  01876E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18429                           
 18430                           ;stkvar	_u @ sp[(-6)+0]
 18431  018774  0EFA               	movlw	-6
 18432  018776  006F FF8C  F009    	movff	plusw1,btemp+8
 18433  01877C  0EFB               	movlw	-5
 18434  01877E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18435  018784  0EFC               	movlw	-4
 18436  018786  006F FF8C  F00B    	movff	plusw1,btemp+10
 18437  01878C  0EFD               	movlw	-3
 18438  01878E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18439  018794  0E18               	movlw	24
 18440  018796  D005               	goto	u5920
 18441  018798                     u5925:
 18442  018798  90D8               	bcf	status,0,c
 18443  01879A  320C               	rrcf	(btemp+11)^0,f,c
 18444  01879C  320B               	rrcf	(btemp+10)^0,f,c
 18445  01879E  320A               	rrcf	(btemp+9)^0,f,c
 18446  0187A0  3209               	rrcf	(btemp+8)^0,f,c
 18447  0187A2                     u5920:
 18448  0187A2  2EE8               	decfsz	wreg,f,c
 18449  0187A4  D7F9               	goto	u5925
 18450  0187A6  0060  F024  F007   	movff	btemp+8,btemp+6
 18451  0187AC  0060  F028  F008   	movff	btemp+9,btemp+7
 18452  0187B2  0EFF               	movlw	255
 18453  0187B4  1607               	andwf	(btemp+6)^0,f,c
 18454  0187B6  0E00               	movlw	0
 18455  0187B8  1608               	andwf	(btemp+7)^0,f,c
 18456                           
 18457                           ;stkvar	_e @ sp[(-6)+4]
 18458  0187BA  0EFE               	movlw	-2
 18459  0187BC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18460  0187C2  0EFF               	movlw	-1
 18461  0187C4  0060  F023  FFE3   	movff	btemp+7,plusw1
 18462                           
 18463                           ;stkvar	_e @ sp[(-6)+4]
 18464  0187CA  0EFE               	movlw	-2
 18465  0187CC  006F FF8C  F001    	movff	plusw1,btemp
 18466  0187D2  0EFF               	movlw	-1
 18467  0187D4  50E3               	movf	plusw1,w,c
 18468  0187D6  1001               	iorwf	btemp^0,w,c
 18469  0187D8  A4D8               	btfss	status,2,c
 18470  0187DA  D023               	goto	l7905
 18471                           
 18472                           ;stkvar	_u @ sp[(-6)+0]
 18473  0187DC  0EFA               	movlw	-6
 18474  0187DE  006F FF8C  F009    	movff	plusw1,btemp+8
 18475  0187E4  0EFB               	movlw	-5
 18476  0187E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18477  0187EC  0EFC               	movlw	-4
 18478  0187EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18479  0187F4  0EFD               	movlw	-3
 18480  0187F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18481  0187FC  90D8               	bcf	status,0,c
 18482  0187FE  3409               	rlcf	(btemp+8)^0,w,c
 18483  018800  6E05               	movwf	(btemp+4)^0,c
 18484  018802  340A               	rlcf	(btemp+9)^0,w,c
 18485  018804  6E06               	movwf	(btemp+5)^0,c
 18486  018806  340B               	rlcf	(btemp+10)^0,w,c
 18487  018808  6E07               	movwf	(btemp+6)^0,c
 18488  01880A  340C               	rlcf	(btemp+11)^0,w,c
 18489  01880C  6E08               	movwf	(btemp+7)^0,c
 18490  01880E  5005               	movf	(btemp+4)^0,w,c
 18491  018810  1006               	iorwf	(btemp+5)^0,w,c
 18492  018812  1007               	iorwf	(btemp+6)^0,w,c
 18493  018814  1008               	iorwf	(btemp+7)^0,w,c
 18494  018816  A4D8               	btfss	status,2,c
 18495  018818  D002               	goto	l7901
 18496  01881A  0E02               	movlw	2
 18497  01881C  D02E               	goto	L21
 18498  01881E                     l7901:
 18499  01881E  0E03               	movlw	3
 18500  018820  D02C               	goto	L21
 18501  018822                     l7905:
 18502                           
 18503                           ;stkvar	_e @ sp[(-6)+4]
 18504  018822  0EFE               	movlw	-2
 18505  018824  28E3               	incf	plusw1,w,c
 18506  018826  E128               	bnz	l7911
 18507  018828  0EFF               	movlw	-1
 18508  01882A  50E3               	movf	plusw1,w,c
 18509  01882C  A4D8               	btfss	status,2,c
 18510  01882E  D024               	goto	l7911
 18511                           
 18512                           ;stkvar	_u @ sp[(-6)+0]
 18513  018830  0EFA               	movlw	-6
 18514  018832  006F FF8C  F009    	movff	plusw1,btemp+8
 18515  018838  0EFB               	movlw	-5
 18516  01883A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18517  018840  0EFC               	movlw	-4
 18518  018842  006F FF8C  F00B    	movff	plusw1,btemp+10
 18519  018848  0EFD               	movlw	-3
 18520  01884A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18521  018850  0E09               	movlw	9
 18522  018852                     u5965:
 18523  018852  90D8               	bcf	status,0,c
 18524  018854  3609               	rlcf	(btemp+8)^0,f,c
 18525  018856  360A               	rlcf	(btemp+9)^0,f,c
 18526  018858  360B               	rlcf	(btemp+10)^0,f,c
 18527  01885A  360C               	rlcf	(btemp+11)^0,f,c
 18528  01885C  2EE8               	decfsz	wreg,f,c
 18529  01885E  D7F9               	goto	u5965
 18530  018860  5009               	movf	(btemp+8)^0,w,c
 18531  018862  100A               	iorwf	(btemp+9)^0,w,c
 18532  018864  100B               	iorwf	(btemp+10)^0,w,c
 18533  018866  100C               	iorwf	(btemp+11)^0,w,c
 18534  018868  A4D8               	btfss	status,2,c
 18535  01886A  D002               	goto	u5970
 18536  01886C  0E01               	movlw	1
 18537  01886E  D001               	goto	u5980
 18538  018870                     u5970:
 18539  018870  0E00               	movlw	0
 18540  018872                     u5980:
 18541  018872  6E01               	movwf	btemp^0,c
 18542  018874  6A02               	clrf	(btemp+1)^0,c
 18543  018876  D004               	goto	l3081
 18544  018878                     l7911:
 18545  018878  0E04               	movlw	4
 18546  01887A                     L21:
 18547  01887A  6E01               	movwf	btemp^0,c
 18548  01887C  0E00               	movlw	0
 18549  01887E  6E02               	movwf	(btemp+1)^0,c
 18550  018880                     l3081:
 18551                           
 18552                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18553  018880  0EF6               	movlw	246
 18554  018882  26E1               	addwf	fsr1l,f,c
 18555  018884  0EFF               	movlw	255
 18556  018886  22E2               	addwfc	fsr1h,f,c
 18557  018888  0012               	return		;funcret
 18558  01888A                     __end_of___fpclassifyf:
 18559                           	opt callstack 0
 18560                           
 18561 ;; *************** function ___fltol *****************
 18562 ;; Defined at:
 18563 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18564 ;; Parameters:    Size  Location     Type
 18565 ;;  f1              4  [STACK] int 
 18566 ;; Auto vars:     Size  Location     Type
 18567 ;;  exp1            1  [STACK] unsigned char 
 18568 ;;  sign1           1  [STACK] unsigned char 
 18569 ;; Return value:  Size  Location     Type
 18570 ;;                  4  [STACK] long 
 18571 ;; Registers used:
 18572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18573 ;; Tracked objects:
 18574 ;;		On entry : 0/0
 18575 ;;		On exit  : 0/0
 18576 ;;		Unchanged: 0/0
 18577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18582 ;;Total ram usage:        0 bytes
 18583 ;; Hardware stack levels used:    1
 18584 ;; Hardware stack levels required when called:   15
 18585 ;; This function calls:
 18586 ;;		Nothing
 18587 ;; This function is called by:
 18588 ;;		_main
 18589 ;;		_calc_bsoc
 18590 ;;		_init_bsoc
 18591 ;;		_Volts_to_SOC
 18592 ;;		_efgtoa
 18593 ;; This function uses a reentrant model
 18594 ;;
 18595                           
 18596                           	psect	text61
 18597  018B90                     __ptext61:
 18598                           	opt callstack 0
 18599  018B90                     ___fltol:
 18600                           	opt callstack 0
 18601                           
 18602                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18603  018B90  52E6               	movf	postinc1,f,c
 18604  018B92  52E6               	movf	postinc1,f,c
 18605                           
 18606                           ;stkvar	_f1 @ sp[(-2)+-4]
 18607                           
 18608                           ;incstack = 0
 18609 ;; hardware stack exceeded
 18610  018B94  0EFA               	movlw	-6
 18611  018B96  006F FF8C  F009    	movff	plusw1,btemp+8
 18612  018B9C  0EFB               	movlw	-5
 18613  018B9E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18614  018BA4  0EFC               	movlw	-4
 18615  018BA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18616  018BAC  0EFD               	movlw	-3
 18617  018BAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18618  018BB4  0E18               	movlw	24
 18619  018BB6  D005               	goto	u7130
 18620  018BB8                     u7135:
 18621  018BB8  90D8               	bcf	status,0,c
 18622  018BBA  320C               	rrcf	(btemp+11)^0,f,c
 18623  018BBC  320B               	rrcf	(btemp+10)^0,f,c
 18624  018BBE  320A               	rrcf	(btemp+9)^0,f,c
 18625  018BC0  3209               	rrcf	(btemp+8)^0,f,c
 18626  018BC2                     u7130:
 18627  018BC2  2EE8               	decfsz	wreg,f,c
 18628  018BC4  D7F9               	goto	u7135
 18629                           
 18630                           ;stkvar	_exp1 @ sp[(-2)+0]
 18631  018BC6  0EFE               	movlw	-2
 18632  018BC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18633  018BCE  0EFE               	movlw	-2
 18634  018BD0  50E3               	movf	plusw1,w,c
 18635  018BD2  A4D8               	btfss	status,2,c
 18636  018BD4  D006               	goto	l8531
 18637  018BD6                     u7140:
 18638  018BD6  0E00               	movlw	0
 18639  018BD8  6E01               	movwf	btemp^0,c
 18640  018BDA  6A02               	clrf	(btemp+1)^0,c
 18641  018BDC  6A03               	clrf	(btemp+2)^0,c
 18642  018BDE  6A04               	clrf	(btemp+3)^0,c
 18643  018BE0  D08B               	goto	l2697
 18644  018BE2                     l8531:
 18645                           
 18646                           ;stkvar	_f1 @ sp[(-2)+-4]
 18647  018BE2  0EFA               	movlw	-6
 18648  018BE4  006F FF8C  F009    	movff	plusw1,btemp+8
 18649  018BEA  0EFB               	movlw	-5
 18650  018BEC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18651  018BF2  0EFC               	movlw	-4
 18652  018BF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18653  018BFA  0EFD               	movlw	-3
 18654  018BFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18655  018C02  0E20               	movlw	32
 18656  018C04  D005               	goto	u7150
 18657  018C06                     u7155:
 18658  018C06  90D8               	bcf	status,0,c
 18659  018C08  320C               	rrcf	(btemp+11)^0,f,c
 18660  018C0A  320B               	rrcf	(btemp+10)^0,f,c
 18661  018C0C  320A               	rrcf	(btemp+9)^0,f,c
 18662  018C0E  3209               	rrcf	(btemp+8)^0,f,c
 18663  018C10                     u7150:
 18664  018C10  2EE8               	decfsz	wreg,f,c
 18665  018C12  D7F9               	goto	u7155
 18666                           
 18667                           ;stkvar	_sign1 @ sp[(-2)+1]
 18668  018C14  0EFF               	movlw	-1
 18669  018C16  0060  F027  FFE3   	movff	btemp+8,plusw1
 18670                           
 18671                           ;stkvar	_f1 @ sp[(-2)+-4]
 18672  018C1C  0EFC               	movlw	-4
 18673  018C1E  8EE3               	bsf	plusw1,7,c
 18674                           
 18675                           ;stkvar	_f1 @ sp[(-2)+-4]
 18676  018C20  50E1               	movf	fsr1l,w,c
 18677  018C22  0FFA               	addlw	-6
 18678  018C24  6ED9               	movwf	fsr2l,c
 18679  018C26  50E2               	movf	fsr1h,w,c
 18680  018C28  6EDA               	movwf	fsr2h,c
 18681  018C2A  0EFF               	movlw	255
 18682  018C2C  22DA               	addwfc	fsr2h,f,c
 18683  018C2E  0EFF               	movlw	255
 18684  018C30  16DE               	andwf	postinc2,f,c
 18685  018C32  0EFF               	movlw	255
 18686  018C34  16DE               	andwf	postinc2,f,c
 18687  018C36  0EFF               	movlw	255
 18688  018C38  16DE               	andwf	postinc2,f,c
 18689  018C3A  0E00               	movlw	0
 18690  018C3C  16DE               	andwf	postinc2,f,c
 18691                           
 18692                           ;stkvar	_exp1 @ sp[(-2)+0]
 18693  018C3E  0EFE               	movlw	-2
 18694  018C40  006F FF8C  F001    	movff	plusw1,btemp
 18695  018C46  0E96               	movlw	150
 18696  018C48  5E01               	subwf	btemp^0,f,c
 18697  018C4A  0EFE               	movlw	-2
 18698  018C4C  0060  F007  FFE3   	movff	btemp,plusw1
 18699                           
 18700                           ;stkvar	_exp1 @ sp[(-2)+0]
 18701  018C52  0EFE               	movlw	-2
 18702  018C54  AEE3               	btfss	plusw1,7,c
 18703  018C56  D014               	goto	l8549
 18704                           
 18705                           ;stkvar	_exp1 @ sp[(-2)+0]
 18706  018C58  0EFE               	movlw	-2
 18707  018C5A  50E3               	movf	plusw1,w,c
 18708  018C5C  0A80               	xorlw	128
 18709  018C5E  0F97               	addlw	151
 18710  018C60  A0D8               	btfss	status,0,c
 18711  018C62  D7B9               	goto	u7140
 18712  018C64                     l8547:
 18713                           
 18714                           ;stkvar	_f1 @ sp[(-2)+-4]
 18715  018C64  90D8               	bcf	status,0,c
 18716  018C66  0EFD               	movlw	-3
 18717  018C68  32E3               	rrcf	plusw1,f,c
 18718  018C6A  0EFC               	movlw	-4
 18719  018C6C  32E3               	rrcf	plusw1,f,c
 18720  018C6E  0EFB               	movlw	-5
 18721  018C70  32E3               	rrcf	plusw1,f,c
 18722  018C72  0EFA               	movlw	-6
 18723  018C74  32E3               	rrcf	plusw1,f,c
 18724                           
 18725                           ;stkvar	_exp1 @ sp[(-2)+0]
 18726  018C76  0EFE               	movlw	-2
 18727  018C78  2AE3               	incf	plusw1,f,c
 18728  018C7A  B4D8               	btfsc	status,2,c
 18729  018C7C  D018               	goto	u7200
 18730  018C7E  D7F2               	goto	l8547
 18731  018C80                     l8549:
 18732                           
 18733                           ;stkvar	_exp1 @ sp[(-2)+0]
 18734  018C80  0EFE               	movlw	-2
 18735  018C82  006F FF8C  F001    	movff	plusw1,btemp
 18736  018C88  0E1F               	movlw	31
 18737  018C8A  6401               	cpfsgt	btemp^0,c
 18738  018C8C  D00C               	goto	l8557
 18739  018C8E  D7A3               	goto	u7140
 18740  018C90                     l8555:
 18741                           
 18742                           ;stkvar	_f1 @ sp[(-2)+-4]
 18743  018C90  90D8               	bcf	status,0,c
 18744  018C92  0EFA               	movlw	-6
 18745  018C94  36E3               	rlcf	plusw1,f,c
 18746  018C96  0EFB               	movlw	-5
 18747  018C98  36E3               	rlcf	plusw1,f,c
 18748  018C9A  0EFC               	movlw	-4
 18749  018C9C  36E3               	rlcf	plusw1,f,c
 18750  018C9E  0EFD               	movlw	-3
 18751  018CA0  36E3               	rlcf	plusw1,f,c
 18752                           
 18753                           ;stkvar	_exp1 @ sp[(-2)+0]
 18754  018CA2  0EFE               	movlw	-2
 18755  018CA4  06E3               	decf	plusw1,f,c
 18756  018CA6                     l8557:
 18757                           
 18758                           ;stkvar	_exp1 @ sp[(-2)+0]
 18759  018CA6  0EFE               	movlw	-2
 18760  018CA8  50E3               	movf	plusw1,w,c
 18761  018CAA  A4D8               	btfss	status,2,c
 18762  018CAC  D7F1               	goto	l8555
 18763  018CAE                     u7200:
 18764                           
 18765                           ;stkvar	_sign1 @ sp[(-2)+1]
 18766  018CAE  0EFF               	movlw	-1
 18767  018CB0  50E3               	movf	plusw1,w,c
 18768  018CB2  B4D8               	btfsc	status,2,c
 18769  018CB4  D011               	goto	u7220
 18770                           
 18771                           ;stkvar	_f1 @ sp[(-2)+-4]
 18772                           ;stkvar	_f1 @ sp[(-2)+-4]
 18773  018CB6  0EFA               	movlw	-6
 18774  018CB8  6CE3               	negf	plusw1,c
 18775  018CBA  0EFB               	movlw	-5
 18776  018CBC  1EE3               	comf	plusw1,f,c
 18777  018CBE  0EFC               	movlw	-4
 18778  018CC0  1EE3               	comf	plusw1,f,c
 18779  018CC2  0EFD               	movlw	-3
 18780  018CC4  1EE3               	comf	plusw1,f,c
 18781  018CC6  E308               	bnc	u7220
 18782  018CC8  0EFB               	movlw	-5
 18783  018CCA  2AE3               	incf	plusw1,f,c
 18784  018CCC  E305               	bnc	u7220
 18785  018CCE  0EFC               	movlw	-4
 18786  018CD0  2AE3               	incf	plusw1,f,c
 18787  018CD2  E302               	bnc	u7220
 18788  018CD4  0EFD               	movlw	-3
 18789  018CD6  2AE3               	incf	plusw1,f,c
 18790  018CD8                     u7220:
 18791                           
 18792                           ;stkvar	_f1 @ sp[(-2)+-4]
 18793  018CD8  0EFA               	movlw	-6
 18794  018CDA  006F FF8C  F001    	movff	plusw1,btemp
 18795  018CE0  0EFB               	movlw	-5
 18796  018CE2  006F FF8C  F002    	movff	plusw1,btemp+1
 18797  018CE8  0EFC               	movlw	-4
 18798  018CEA  006F FF8C  F003    	movff	plusw1,btemp+2
 18799  018CF0  0EFD               	movlw	-3
 18800  018CF2  006F FF8C  F004    	movff	plusw1,btemp+3
 18801  018CF8                     l2697:
 18802                           
 18803                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18804  018CF8  0EFA               	movlw	250
 18805  018CFA  26E1               	addwf	fsr1l,f,c
 18806  018CFC  0EFF               	movlw	255
 18807  018CFE  22E2               	addwfc	fsr1h,f,c
 18808  018D00  0012               	return		;funcret
 18809  018D02                     __end_of___fltol:
 18810                           	opt callstack 0
 18811                           
 18812 ;; *************** function ___flneg *****************
 18813 ;; Defined at:
 18814 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;  f1              4  [STACK] long 
 18817 ;; Auto vars:     Size  Location     Type
 18818 ;;		None
 18819 ;; Return value:  Size  Location     Type
 18820 ;;                  4  [STACK] long 
 18821 ;; Registers used:
 18822 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18823 ;; Tracked objects:
 18824 ;;		On entry : 0/0
 18825 ;;		On exit  : 0/0
 18826 ;;		Unchanged: 0/0
 18827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;Total ram usage:        0 bytes
 18833 ;; Hardware stack levels used:    1
 18834 ;; Hardware stack levels required when called:   15
 18835 ;; This function calls:
 18836 ;;		Nothing
 18837 ;; This function is called by:
 18838 ;;		_calc_bsoc
 18839 ;;		_efgtoa
 18840 ;; This function uses a reentrant model
 18841 ;;
 18842                           
 18843                           	psect	text62
 18844  01B0AA                     __ptext62:
 18845                           	opt callstack 0
 18846  01B0AA                     ___flneg:
 18847                           	opt callstack 0
 18848                           
 18849                           ;stkvar	_f1 @ sp[(0)+-4]
 18850                           
 18851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18852                           ;incstack = 0
 18853 ;; hardware stack exceeded
 18854  01B0AA  0EFC               	movlw	-4
 18855  01B0AC  50E3               	movf	plusw1,w,c
 18856  01B0AE  E10A               	bnz	u7120
 18857  01B0B0  0EFD               	movlw	-3
 18858  01B0B2  50E3               	movf	plusw1,w,c
 18859  01B0B4  E107               	bnz	u7120
 18860  01B0B6  0EFE               	movlw	-2
 18861  01B0B8  50E3               	movf	plusw1,w,c
 18862  01B0BA  E104               	bnz	u7120
 18863  01B0BC  0EFF               	movlw	-1
 18864  01B0BE  50E3               	movf	plusw1,w,c
 18865  01B0C0  B4D8               	btfsc	status,2,c
 18866  01B0C2  D002               	goto	l8521
 18867  01B0C4                     u7120:
 18868                           
 18869                           ;stkvar	_f1 @ sp[(0)+-4]
 18870  01B0C4  0EFF               	movlw	-1
 18871  01B0C6  7EE3               	btg	plusw1,7,c
 18872  01B0C8                     l8521:
 18873                           
 18874                           ;stkvar	_f1 @ sp[(0)+-4]
 18875  01B0C8  0EFC               	movlw	-4
 18876  01B0CA  006F FF8C  F001    	movff	plusw1,btemp
 18877  01B0D0  0EFD               	movlw	-3
 18878  01B0D2  006F FF8C  F002    	movff	plusw1,btemp+1
 18879  01B0D8  0EFE               	movlw	-2
 18880  01B0DA  006F FF8C  F003    	movff	plusw1,btemp+2
 18881  01B0E0  0EFF               	movlw	-1
 18882  01B0E2  006F FF8C  F004    	movff	plusw1,btemp+3
 18883                           
 18884                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18885  01B0E8  52E5               	movf	postdec1,f,c
 18886  01B0EA  52E5               	movf	postdec1,f,c
 18887  01B0EC  52E5               	movf	postdec1,f,c
 18888  01B0EE  52E5               	movf	postdec1,f,c
 18889  01B0F0  0012               	return		;funcret
 18890  01B0F2                     __end_of___flneg:
 18891                           	opt callstack 0
 18892                           
 18893 ;; *************** function ___fleq *****************
 18894 ;; Defined at:
 18895 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18896 ;; Parameters:    Size  Location     Type
 18897 ;;  ff1             4  [STACK] long 
 18898 ;;  ff2             4  [STACK] long 
 18899 ;; Auto vars:     Size  Location     Type
 18900 ;;		None
 18901 ;; Return value:  Size  Location     Type
 18902 ;;		None               void
 18903 ;; Registers used:
 18904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : 0/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18914 ;;Total ram usage:        0 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:   15
 18917 ;; This function calls:
 18918 ;;		Nothing
 18919 ;; This function is called by:
 18920 ;;		_efgtoa
 18921 ;; This function uses a reentrant model
 18922 ;;
 18923                           
 18924                           	psect	text63
 18925  01A19A                     __ptext63:
 18926                           	opt callstack 0
 18927  01A19A                     ___fleq:
 18928                           	opt callstack 0
 18929                           
 18930                           ;stkvar	_ff1 @ sp[(0)+-4]
 18931                           
 18932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18933                           ;incstack = 0
 18934 ;; hardware stack exceeded
 18935  01A19A  50E1               	movf	fsr1l,w,c
 18936  01A19C  0FFC               	addlw	-4
 18937  01A19E  6ED9               	movwf	fsr2l,c
 18938  01A1A0  50E2               	movf	fsr1h,w,c
 18939  01A1A2  6EDA               	movwf	fsr2h,c
 18940  01A1A4  0EFF               	movlw	255
 18941  01A1A6  22DA               	addwfc	fsr2h,f,c
 18942  01A1A8  0E00               	movlw	0
 18943  01A1AA  14DE               	andwf	postinc2,w,c
 18944  01A1AC  6E09               	movwf	(btemp+8)^0,c
 18945  01A1AE  0E00               	movlw	0
 18946  01A1B0  14DE               	andwf	postinc2,w,c
 18947  01A1B2  6E0A               	movwf	(btemp+9)^0,c
 18948  01A1B4  0E80               	movlw	128
 18949  01A1B6  14DE               	andwf	postinc2,w,c
 18950  01A1B8  6E0B               	movwf	(btemp+10)^0,c
 18951  01A1BA  0E7F               	movlw	127
 18952  01A1BC  14DE               	andwf	postinc2,w,c
 18953  01A1BE  6E0C               	movwf	(btemp+11)^0,c
 18954  01A1C0  5009               	movf	(btemp+8)^0,w,c
 18955  01A1C2  100A               	iorwf	(btemp+9)^0,w,c
 18956  01A1C4  100B               	iorwf	(btemp+10)^0,w,c
 18957  01A1C6  100C               	iorwf	(btemp+11)^0,w,c
 18958  01A1C8  A4D8               	btfss	status,2,c
 18959  01A1CA  D008               	goto	l8479
 18960                           
 18961                           ;stkvar	_ff1 @ sp[(0)+-4]
 18962  01A1CC  0EFC               	movlw	-4
 18963  01A1CE  6AE3               	clrf	plusw1,c
 18964  01A1D0  0EFD               	movlw	-3
 18965  01A1D2  6AE3               	clrf	plusw1,c
 18966  01A1D4  0EFE               	movlw	-2
 18967  01A1D6  6AE3               	clrf	plusw1,c
 18968  01A1D8  0EFF               	movlw	-1
 18969  01A1DA  6AE3               	clrf	plusw1,c
 18970  01A1DC                     l8479:
 18971                           
 18972                           ;stkvar	_ff2 @ sp[(0)+-8]
 18973  01A1DC  50E1               	movf	fsr1l,w,c
 18974  01A1DE  0FF8               	addlw	-8
 18975  01A1E0  6ED9               	movwf	fsr2l,c
 18976  01A1E2  50E2               	movf	fsr1h,w,c
 18977  01A1E4  6EDA               	movwf	fsr2h,c
 18978  01A1E6  0EFF               	movlw	255
 18979  01A1E8  22DA               	addwfc	fsr2h,f,c
 18980  01A1EA  0E00               	movlw	0
 18981  01A1EC  14DE               	andwf	postinc2,w,c
 18982  01A1EE  6E09               	movwf	(btemp+8)^0,c
 18983  01A1F0  0E00               	movlw	0
 18984  01A1F2  14DE               	andwf	postinc2,w,c
 18985  01A1F4  6E0A               	movwf	(btemp+9)^0,c
 18986  01A1F6  0E80               	movlw	128
 18987  01A1F8  14DE               	andwf	postinc2,w,c
 18988  01A1FA  6E0B               	movwf	(btemp+10)^0,c
 18989  01A1FC  0E7F               	movlw	127
 18990  01A1FE  14DE               	andwf	postinc2,w,c
 18991  01A200  6E0C               	movwf	(btemp+11)^0,c
 18992  01A202  5009               	movf	(btemp+8)^0,w,c
 18993  01A204  100A               	iorwf	(btemp+9)^0,w,c
 18994  01A206  100B               	iorwf	(btemp+10)^0,w,c
 18995  01A208  100C               	iorwf	(btemp+11)^0,w,c
 18996  01A20A  A4D8               	btfss	status,2,c
 18997  01A20C  D008               	goto	l8483
 18998                           
 18999                           ;stkvar	_ff2 @ sp[(0)+-8]
 19000  01A20E  0EF8               	movlw	-8
 19001  01A210  6AE3               	clrf	plusw1,c
 19002  01A212  0EF9               	movlw	-7
 19003  01A214  6AE3               	clrf	plusw1,c
 19004  01A216  0EFA               	movlw	-6
 19005  01A218  6AE3               	clrf	plusw1,c
 19006  01A21A  0EFB               	movlw	-5
 19007  01A21C  6AE3               	clrf	plusw1,c
 19008  01A21E                     l8483:
 19009                           
 19010                           ;stkvar	_ff2 @ sp[(0)+-8]
 19011                           ;stkvar	_ff1 @ sp[(0)+-4]
 19012  01A21E  50E1               	movf	fsr1l,w,c
 19013  01A220  0FFC               	addlw	-4
 19014  01A222  6ED9               	movwf	fsr2l,c
 19015  01A224  50E2               	movf	fsr1h,w,c
 19016  01A226  6EDA               	movwf	fsr2h,c
 19017  01A228  0EFF               	movlw	255
 19018  01A22A  22DA               	addwfc	fsr2h,f,c
 19019  01A22C  0EF8               	movlw	-8
 19020  01A22E  50E3               	movf	plusw1,w,c
 19021  01A230  18DE               	xorwf	postinc2,w,c
 19022  01A232  E10D               	bnz	u7060
 19023  01A234  0EF9               	movlw	-7
 19024  01A236  50E3               	movf	plusw1,w,c
 19025  01A238  18DE               	xorwf	postinc2,w,c
 19026  01A23A  E109               	bnz	u7060
 19027  01A23C  0EFA               	movlw	-6
 19028  01A23E  50E3               	movf	plusw1,w,c
 19029  01A240  18DE               	xorwf	postinc2,w,c
 19030  01A242  E105               	bnz	u7060
 19031  01A244  0EFB               	movlw	-5
 19032  01A246  50E3               	movf	plusw1,w,c
 19033  01A248  18DE               	xorwf	postinc2,w,c
 19034  01A24A  B4D8               	btfsc	status,2,c
 19035  01A24C  D002               	goto	l8487
 19036  01A24E                     u7060:
 19037  01A24E  9001               	bcf	btemp& (0+255),0,c
 19038  01A250  D001               	goto	l2659
 19039  01A252                     l8487:
 19040  01A252  8001               	bsf	btemp& (0+255),0,c
 19041  01A254                     l2659:
 19042                           
 19043                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19044  01A254  0EF8               	movlw	248
 19045  01A256  26E1               	addwf	fsr1l,f,c
 19046  01A258  0EFF               	movlw	255
 19047  01A25A  22E2               	addwfc	fsr1h,f,c
 19048  01A25C  0012               	return		;funcret
 19049  01A25E                     __end_of___fleq:
 19050                           	opt callstack 0
 19051                           
 19052 ;; *************** function ___awmod *****************
 19053 ;; Defined at:
 19054 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19055 ;; Parameters:    Size  Location     Type
 19056 ;;  dividend        2  [STACK] int 
 19057 ;;  divisor         2  [STACK] int 
 19058 ;; Auto vars:     Size  Location     Type
 19059 ;;  sign            1  [STACK] unsigned char 
 19060 ;;  counter         1  [STACK] unsigned char 
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  2  [STACK] int 
 19063 ;; Registers used:
 19064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; Hardware stack levels required when called:   15
 19077 ;; This function calls:
 19078 ;;		Nothing
 19079 ;; This function is called by:
 19080 ;;		_efgtoa
 19081 ;; This function uses a reentrant model
 19082 ;;
 19083                           
 19084                           	psect	text64
 19085  019706                     __ptext64:
 19086                           	opt callstack 0
 19087  019706                     ___awmod:
 19088                           	opt callstack 0
 19089                           
 19090                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19091  019706  52E6               	movf	postinc1,f,c
 19092  019708  52E6               	movf	postinc1,f,c
 19093                           
 19094                           ;stkvar	_sign @ sp[(-2)+0]
 19095                           
 19096                           ;incstack = 0
 19097 ;; hardware stack exceeded
 19098  01970A  0EFE               	movlw	-2
 19099  01970C  6AE3               	clrf	plusw1,c
 19100                           
 19101                           ;stkvar	_dividend @ sp[(-2)+-2]
 19102  01970E  0EFD               	movlw	-3
 19103  019710  AEE3               	btfss	plusw1,7,c
 19104  019712  D009               	goto	l8445
 19105                           
 19106                           ;stkvar	_dividend @ sp[(-2)+-2]
 19107                           ;stkvar	_dividend @ sp[(-2)+-2]
 19108  019714  0EFC               	movlw	-4
 19109  019716  6CE3               	negf	plusw1,c
 19110  019718  0EFD               	movlw	-3
 19111  01971A  1EE3               	comf	plusw1,f,c
 19112  01971C  B0D8               	btfsc	status,0,c
 19113  01971E  2AE3               	incf	plusw1,f,c
 19114                           
 19115                           ;stkvar	_sign @ sp[(-2)+0]
 19116  019720  0EFE               	movlw	-2
 19117  019722  6AE3               	clrf	plusw1,c
 19118  019724  2AE3               	incf	plusw1,f,c
 19119  019726                     l8445:
 19120                           
 19121                           ;stkvar	_divisor @ sp[(-2)+-4]
 19122  019726  0EFB               	movlw	-5
 19123  019728  AEE3               	btfss	plusw1,7,c
 19124  01972A  D006               	goto	l8449
 19125                           
 19126                           ;stkvar	_divisor @ sp[(-2)+-4]
 19127                           ;stkvar	_divisor @ sp[(-2)+-4]
 19128  01972C  0EFA               	movlw	-6
 19129  01972E  6CE3               	negf	plusw1,c
 19130  019730  0EFB               	movlw	-5
 19131  019732  1EE3               	comf	plusw1,f,c
 19132  019734  B0D8               	btfsc	status,0,c
 19133  019736  2AE3               	incf	plusw1,f,c
 19134  019738                     l8449:
 19135                           
 19136                           ;stkvar	_divisor @ sp[(-2)+-4]
 19137  019738  0EFA               	movlw	-6
 19138  01973A  006F FF8C  F001    	movff	plusw1,btemp
 19139  019740  0EFB               	movlw	-5
 19140  019742  50E3               	movf	plusw1,w,c
 19141  019744  1001               	iorwf	btemp^0,w,c
 19142  019746  B4D8               	btfsc	status,2,c
 19143  019748  D053               	goto	u7020
 19144                           
 19145                           ;stkvar	_counter @ sp[(-2)+1]
 19146  01974A  0EFF               	movlw	-1
 19147  01974C  6AE3               	clrf	plusw1,c
 19148  01974E  D012               	goto	L22
 19149  019750                     l8453:
 19150                           
 19151                           ;stkvar	_divisor @ sp[(-2)+-4]
 19152  019750  0EFA               	movlw	-6
 19153  019752  50E3               	movf	plusw1,w,c
 19154  019754  90D8               	bcf	status,0,c
 19155  019756  34E8               	rlcf	wreg,w,c
 19156  019758  6E01               	movwf	btemp^0,c
 19157  01975A  0EFA               	movlw	-6
 19158  01975C  0060  F007  FFE3   	movff	btemp,plusw1
 19159  019762  0EFB               	movlw	-5
 19160  019764  50E3               	movf	plusw1,w,c
 19161  019766  34E8               	rlcf	wreg,w,c
 19162  019768  6E01               	movwf	btemp^0,c
 19163  01976A  0EFB               	movlw	-5
 19164  01976C  0060  F007  FFE3   	movff	btemp,plusw1
 19165                           
 19166                           ;stkvar	_counter @ sp[(-2)+1]
 19167  019772  0EFF               	movlw	-1
 19168  019774                     L22:
 19169  019774  2AE3               	incf	plusw1,f,c
 19170                           
 19171                           ;stkvar	_divisor @ sp[(-2)+-4]
 19172  019776  0EFB               	movlw	-5
 19173  019778  AEE3               	btfss	plusw1,7,c
 19174  01977A  D7EA               	goto	l8453
 19175  01977C                     u7000:
 19176                           
 19177                           ;stkvar	_divisor @ sp[(-2)+-4]
 19178  01977C  0EFA               	movlw	-6
 19179  01977E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19180  019784  0EFB               	movlw	-5
 19181  019786  006F FF8C  F00C    	movff	plusw1,btemp+11
 19182                           
 19183                           ;stkvar	_dividend @ sp[(-2)+-2]
 19184  01978C  0EFC               	movlw	-4
 19185  01978E  006F FF8C  F009    	movff	plusw1,btemp+8
 19186  019794  0EFD               	movlw	-3
 19187  019796  006F FF8C  F00A    	movff	plusw1,btemp+9
 19188  01979C  500B               	movf	(btemp+10)^0,w,c
 19189  01979E  5C09               	subwf	(btemp+8)^0,w,c
 19190  0197A0  500C               	movf	(btemp+11)^0,w,c
 19191  0197A2  580A               	subwfb	(btemp+9)^0,w,c
 19192  0197A4  A0D8               	btfss	status,0,c
 19193  0197A6  D014               	goto	l8463
 19194                           
 19195                           ;stkvar	_divisor @ sp[(-2)+-4]
 19196                           ;stkvar	_dividend @ sp[(-2)+-2]
 19197  0197A8  0EFC               	movlw	-4
 19198  0197AA  50E3               	movf	plusw1,w,c
 19199  0197AC  6E01               	movwf	btemp^0,c
 19200  0197AE  0EFA               	movlw	-6
 19201  0197B0  50E3               	movf	plusw1,w,c
 19202  0197B2  5E01               	subwf	btemp^0,f,c
 19203  0197B4  0EFC               	movlw	-4
 19204  0197B6  0060  F007  FFE3   	movff	btemp,plusw1
 19205  0197BC  0EFD               	movlw	-3
 19206  0197BE  50E3               	movf	plusw1,w,c
 19207  0197C0  6E01               	movwf	btemp^0,c
 19208  0197C2  0EFB               	movlw	-5
 19209  0197C4  50E3               	movf	plusw1,w,c
 19210  0197C6  5A01               	subwfb	btemp^0,f,c
 19211  0197C8  0EFD               	movlw	-3
 19212  0197CA  0060  F007  FFE3   	movff	btemp,plusw1
 19213  0197D0                     l8463:
 19214                           
 19215                           ;stkvar	_divisor @ sp[(-2)+-4]
 19216  0197D0  90D8               	bcf	status,0,c
 19217  0197D2  0EFB               	movlw	-5
 19218  0197D4  32E3               	rrcf	plusw1,f,c
 19219  0197D6  0EFA               	movlw	-6
 19220  0197D8  32E3               	rrcf	plusw1,f,c
 19221                           
 19222                           ;stkvar	_counter @ sp[(-2)+1]
 19223  0197DA  0EFF               	movlw	-1
 19224  0197DC  50E3               	movf	plusw1,w,c
 19225  0197DE  6E01               	movwf	btemp^0,c
 19226  0197E0  0E01               	movlw	1
 19227  0197E2  5E01               	subwf	btemp^0,f,c
 19228  0197E4  0EFF               	movlw	-1
 19229  0197E6  0060  F007  FFE3   	movff	btemp,plusw1
 19230  0197EC  A4D8               	btfss	status,2,c
 19231  0197EE  D7C6               	goto	u7000
 19232  0197F0                     u7020:
 19233                           
 19234                           ;stkvar	_sign @ sp[(-2)+0]
 19235  0197F0  0EFE               	movlw	-2
 19236  0197F2  50E3               	movf	plusw1,w,c
 19237  0197F4  B4D8               	btfsc	status,2,c
 19238  0197F6  D006               	goto	l8471
 19239                           
 19240                           ;stkvar	_dividend @ sp[(-2)+-2]
 19241                           ;stkvar	_dividend @ sp[(-2)+-2]
 19242  0197F8  0EFC               	movlw	-4
 19243  0197FA  6CE3               	negf	plusw1,c
 19244  0197FC  0EFD               	movlw	-3
 19245  0197FE  1EE3               	comf	plusw1,f,c
 19246  019800  B0D8               	btfsc	status,0,c
 19247  019802  2AE3               	incf	plusw1,f,c
 19248  019804                     l8471:
 19249                           
 19250                           ;stkvar	_dividend @ sp[(-2)+-2]
 19251  019804  0EFC               	movlw	-4
 19252  019806  006F FF8C  F001    	movff	plusw1,btemp
 19253  01980C  0EFD               	movlw	-3
 19254  01980E  006F FF8C  F002    	movff	plusw1,btemp+1
 19255                           
 19256                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19257  019814  0EFA               	movlw	250
 19258  019816  26E1               	addwf	fsr1l,f,c
 19259  019818  0EFF               	movlw	255
 19260  01981A  22E2               	addwfc	fsr1h,f,c
 19261  01981C  0012               	return		;funcret
 19262  01981E                     __end_of___awmod:
 19263                           	opt callstack 0
 19264                           
 19265 ;; *************** function ___awdiv *****************
 19266 ;; Defined at:
 19267 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19268 ;; Parameters:    Size  Location     Type
 19269 ;;  dividend        2  [STACK] int 
 19270 ;;  divisor         2  [STACK] int 
 19271 ;; Auto vars:     Size  Location     Type
 19272 ;;  quotient        2  [STACK] int 
 19273 ;;  sign            1  [STACK] unsigned char 
 19274 ;;  counter         1  [STACK] unsigned char 
 19275 ;; Return value:  Size  Location     Type
 19276 ;;                  2  [STACK] int 
 19277 ;; Registers used:
 19278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19279 ;; Tracked objects:
 19280 ;;		On entry : 0/0
 19281 ;;		On exit  : 0/0
 19282 ;;		Unchanged: 0/0
 19283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19288 ;;Total ram usage:        0 bytes
 19289 ;; Hardware stack levels used:    1
 19290 ;; Hardware stack levels required when called:   15
 19291 ;; This function calls:
 19292 ;;		Nothing
 19293 ;; This function is called by:
 19294 ;;		_efgtoa
 19295 ;; This function uses a reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text65
 19299  018FC6                     __ptext65:
 19300                           	opt callstack 0
 19301  018FC6                     ___awdiv:
 19302                           	opt callstack 0
 19303                           
 19304                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19305  018FC6  52E6               	movf	postinc1,f,c
 19306  018FC8  52E6               	movf	postinc1,f,c
 19307  018FCA  52E6               	movf	postinc1,f,c
 19308  018FCC  52E6               	movf	postinc1,f,c
 19309                           
 19310                           ;stkvar	_sign @ sp[(-4)+2]
 19311                           
 19312                           ;incstack = 0
 19313 ;; hardware stack exceeded
 19314  018FCE  0EFE               	movlw	-2
 19315  018FD0  6AE3               	clrf	plusw1,c
 19316                           
 19317                           ;stkvar	_divisor @ sp[(-4)+-4]
 19318  018FD2  0EF9               	movlw	-7
 19319  018FD4  AEE3               	btfss	plusw1,7,c
 19320  018FD6  D009               	goto	l8399
 19321                           
 19322                           ;stkvar	_divisor @ sp[(-4)+-4]
 19323                           ;stkvar	_divisor @ sp[(-4)+-4]
 19324  018FD8  0EF8               	movlw	-8
 19325  018FDA  6CE3               	negf	plusw1,c
 19326  018FDC  0EF9               	movlw	-7
 19327  018FDE  1EE3               	comf	plusw1,f,c
 19328  018FE0  B0D8               	btfsc	status,0,c
 19329  018FE2  2AE3               	incf	plusw1,f,c
 19330                           
 19331                           ;stkvar	_sign @ sp[(-4)+2]
 19332  018FE4  0EFE               	movlw	-2
 19333  018FE6  6AE3               	clrf	plusw1,c
 19334  018FE8  2AE3               	incf	plusw1,f,c
 19335  018FEA                     l8399:
 19336                           
 19337                           ;stkvar	_dividend @ sp[(-4)+-2]
 19338  018FEA  0EFB               	movlw	-5
 19339  018FEC  AEE3               	btfss	plusw1,7,c
 19340  018FEE  D008               	goto	l8405
 19341                           
 19342                           ;stkvar	_dividend @ sp[(-4)+-2]
 19343                           ;stkvar	_dividend @ sp[(-4)+-2]
 19344  018FF0  0EFA               	movlw	-6
 19345  018FF2  6CE3               	negf	plusw1,c
 19346  018FF4  0EFB               	movlw	-5
 19347  018FF6  1EE3               	comf	plusw1,f,c
 19348  018FF8  B0D8               	btfsc	status,0,c
 19349  018FFA  2AE3               	incf	plusw1,f,c
 19350                           
 19351                           ;stkvar	_sign @ sp[(-4)+2]
 19352  018FFC  0EFE               	movlw	-2
 19353  018FFE  70E3               	btg	plusw1,0,c
 19354  019000                     l8405:
 19355                           
 19356                           ;stkvar	_quotient @ sp[(-4)+0]
 19357  019000  0EFC               	movlw	-4
 19358  019002  6AE3               	clrf	plusw1,c
 19359  019004  0EFD               	movlw	-3
 19360  019006  6AE3               	clrf	plusw1,c
 19361                           
 19362                           ;stkvar	_divisor @ sp[(-4)+-4]
 19363  019008  0EF8               	movlw	-8
 19364  01900A  006F FF8C  F001    	movff	plusw1,btemp
 19365  019010  0EF9               	movlw	-7
 19366  019012  50E3               	movf	plusw1,w,c
 19367  019014  1001               	iorwf	btemp^0,w,c
 19368  019016  B4D8               	btfsc	status,2,c
 19369  019018  D066               	goto	u6950
 19370                           
 19371                           ;stkvar	_counter @ sp[(-4)+3]
 19372  01901A  0EFF               	movlw	-1
 19373  01901C  6AE3               	clrf	plusw1,c
 19374  01901E  D012               	goto	L23
 19375  019020                     l8411:
 19376                           
 19377                           ;stkvar	_divisor @ sp[(-4)+-4]
 19378  019020  0EF8               	movlw	-8
 19379  019022  50E3               	movf	plusw1,w,c
 19380  019024  90D8               	bcf	status,0,c
 19381  019026  34E8               	rlcf	wreg,w,c
 19382  019028  6E01               	movwf	btemp^0,c
 19383  01902A  0EF8               	movlw	-8
 19384  01902C  0060  F007  FFE3   	movff	btemp,plusw1
 19385  019032  0EF9               	movlw	-7
 19386  019034  50E3               	movf	plusw1,w,c
 19387  019036  34E8               	rlcf	wreg,w,c
 19388  019038  6E01               	movwf	btemp^0,c
 19389  01903A  0EF9               	movlw	-7
 19390  01903C  0060  F007  FFE3   	movff	btemp,plusw1
 19391                           
 19392                           ;stkvar	_counter @ sp[(-4)+3]
 19393  019042  0EFF               	movlw	-1
 19394  019044                     L23:
 19395  019044  2AE3               	incf	plusw1,f,c
 19396                           
 19397                           ;stkvar	_divisor @ sp[(-4)+-4]
 19398  019046  0EF9               	movlw	-7
 19399  019048  AEE3               	btfss	plusw1,7,c
 19400  01904A  D7EA               	goto	l8411
 19401  01904C                     u6930:
 19402                           
 19403                           ;stkvar	_quotient @ sp[(-4)+0]
 19404  01904C  0EFC               	movlw	-4
 19405  01904E  50E3               	movf	plusw1,w,c
 19406  019050  90D8               	bcf	status,0,c
 19407  019052  34E8               	rlcf	wreg,w,c
 19408  019054  6E01               	movwf	btemp^0,c
 19409  019056  0EFC               	movlw	-4
 19410  019058  0060  F007  FFE3   	movff	btemp,plusw1
 19411  01905E  0EFD               	movlw	-3
 19412  019060  50E3               	movf	plusw1,w,c
 19413  019062  34E8               	rlcf	wreg,w,c
 19414  019064  6E01               	movwf	btemp^0,c
 19415  019066  0EFD               	movlw	-3
 19416  019068  0060  F007  FFE3   	movff	btemp,plusw1
 19417                           
 19418                           ;stkvar	_divisor @ sp[(-4)+-4]
 19419  01906E  0EF8               	movlw	-8
 19420  019070  006F FF8C  F00B    	movff	plusw1,btemp+10
 19421  019076  0EF9               	movlw	-7
 19422  019078  006F FF8C  F00C    	movff	plusw1,btemp+11
 19423                           
 19424                           ;stkvar	_dividend @ sp[(-4)+-2]
 19425  01907E  0EFA               	movlw	-6
 19426  019080  006F FF8C  F009    	movff	plusw1,btemp+8
 19427  019086  0EFB               	movlw	-5
 19428  019088  006F FF8C  F00A    	movff	plusw1,btemp+9
 19429  01908E  500B               	movf	(btemp+10)^0,w,c
 19430  019090  5C09               	subwf	(btemp+8)^0,w,c
 19431  019092  500C               	movf	(btemp+11)^0,w,c
 19432  019094  580A               	subwfb	(btemp+9)^0,w,c
 19433  019096  A0D8               	btfss	status,0,c
 19434  019098  D016               	goto	l8425
 19435                           
 19436                           ;stkvar	_divisor @ sp[(-4)+-4]
 19437                           ;stkvar	_dividend @ sp[(-4)+-2]
 19438  01909A  0EFA               	movlw	-6
 19439  01909C  50E3               	movf	plusw1,w,c
 19440  01909E  6E01               	movwf	btemp^0,c
 19441  0190A0  0EF8               	movlw	-8
 19442  0190A2  50E3               	movf	plusw1,w,c
 19443  0190A4  5E01               	subwf	btemp^0,f,c
 19444  0190A6  0EFA               	movlw	-6
 19445  0190A8  0060  F007  FFE3   	movff	btemp,plusw1
 19446  0190AE  0EFB               	movlw	-5
 19447  0190B0  50E3               	movf	plusw1,w,c
 19448  0190B2  6E01               	movwf	btemp^0,c
 19449  0190B4  0EF9               	movlw	-7
 19450  0190B6  50E3               	movf	plusw1,w,c
 19451  0190B8  5A01               	subwfb	btemp^0,f,c
 19452  0190BA  0EFB               	movlw	-5
 19453  0190BC  0060  F007  FFE3   	movff	btemp,plusw1
 19454                           
 19455                           ;stkvar	_quotient @ sp[(-4)+0]
 19456  0190C2  0EFC               	movlw	-4
 19457  0190C4  80E3               	bsf	plusw1,0,c
 19458  0190C6                     l8425:
 19459                           
 19460                           ;stkvar	_divisor @ sp[(-4)+-4]
 19461  0190C6  90D8               	bcf	status,0,c
 19462  0190C8  0EF9               	movlw	-7
 19463  0190CA  32E3               	rrcf	plusw1,f,c
 19464  0190CC  0EF8               	movlw	-8
 19465  0190CE  32E3               	rrcf	plusw1,f,c
 19466                           
 19467                           ;stkvar	_counter @ sp[(-4)+3]
 19468  0190D0  0EFF               	movlw	-1
 19469  0190D2  50E3               	movf	plusw1,w,c
 19470  0190D4  6E01               	movwf	btemp^0,c
 19471  0190D6  0E01               	movlw	1
 19472  0190D8  5E01               	subwf	btemp^0,f,c
 19473  0190DA  0EFF               	movlw	-1
 19474  0190DC  0060  F007  FFE3   	movff	btemp,plusw1
 19475  0190E2  A4D8               	btfss	status,2,c
 19476  0190E4  D7B3               	goto	u6930
 19477  0190E6                     u6950:
 19478                           
 19479                           ;stkvar	_sign @ sp[(-4)+2]
 19480  0190E6  0EFE               	movlw	-2
 19481  0190E8  50E3               	movf	plusw1,w,c
 19482  0190EA  B4D8               	btfsc	status,2,c
 19483  0190EC  D006               	goto	l8433
 19484                           
 19485                           ;stkvar	_quotient @ sp[(-4)+0]
 19486                           ;stkvar	_quotient @ sp[(-4)+0]
 19487  0190EE  0EFC               	movlw	-4
 19488  0190F0  6CE3               	negf	plusw1,c
 19489  0190F2  0EFD               	movlw	-3
 19490  0190F4  1EE3               	comf	plusw1,f,c
 19491  0190F6  B0D8               	btfsc	status,0,c
 19492  0190F8  2AE3               	incf	plusw1,f,c
 19493  0190FA                     l8433:
 19494                           
 19495                           ;stkvar	_quotient @ sp[(-4)+0]
 19496  0190FA  0EFC               	movlw	-4
 19497  0190FC  006F FF8C  F001    	movff	plusw1,btemp
 19498  019102  0EFD               	movlw	-3
 19499  019104  006F FF8C  F002    	movff	plusw1,btemp+1
 19500                           
 19501                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19502  01910A  0EF8               	movlw	248
 19503  01910C  26E1               	addwf	fsr1l,f,c
 19504  01910E  0EFF               	movlw	255
 19505  019110  22E2               	addwfc	fsr1h,f,c
 19506  019112  0012               	return		;funcret
 19507  019114                     __end_of___awdiv:
 19508                           	opt callstack 0
 19509                           
 19510 ;; *************** function _dtoa *****************
 19511 ;; Defined at:
 19512 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19515 ;;		 -> f(6), NULL(0), 
 19516 ;;  d               8  [STACK] long long 
 19517 ;; Auto vars:     Size  Location     Type
 19518 ;;  n               8  [STACK] long long 
 19519 ;;  i               2  [STACK] int 
 19520 ;;  s               2  [STACK] int 
 19521 ;;  w               2  [STACK] int 
 19522 ;;  p               2  [STACK] int 
 19523 ;; Return value:  Size  Location     Type
 19524 ;;                  2  [STACK] int 
 19525 ;; Registers used:
 19526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19527 ;; Tracked objects:
 19528 ;;		On entry : 0/0
 19529 ;;		On exit  : 0/0
 19530 ;;		Unchanged: 0/0
 19531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19536 ;;Total ram usage:        0 bytes
 19537 ;; Hardware stack levels used:    1
 19538 ;; Hardware stack levels required when called:   20
 19539 ;; This function calls:
 19540 ;;		___aodiv
 19541 ;;		___aomod
 19542 ;;		_abs
 19543 ;;		_pad
 19544 ;; This function is called by:
 19545 ;;		_vfpfcnvrt
 19546 ;; This function uses a reentrant model
 19547 ;;
 19548                           
 19549                           	psect	text66
 19550  015530                     __ptext66:
 19551                           	opt callstack 0
 19552  015530                     _dtoa:
 19553                           	opt callstack 0
 19554                           
 19555                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19556  015530  0E12               	movlw	18
 19557  015532  26E1               	addwf	fsr1l,f,c
 19558  015534  0E00               	movlw	0
 19559  015536  22E2               	addwfc	fsr1h,f,c
 19560                           
 19561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19562                           ;stkvar	_d @ sp[(-18)+-10]
 19563                           
 19564                           ;incstack = 0
 19565 ;; hardware stack exceeded
 19566  015538  0EE4               	movlw	228
 19567  01553A  24E1               	addwf	fsr1l,w,c
 19568  01553C  6ED9               	movwf	fsr2l,c
 19569  01553E  0EFF               	movlw	255
 19570  015540  20E2               	addwfc	fsr1h,w,c
 19571  015542  6EDA               	movwf	fsr2h,c
 19572                           
 19573                           ;stkvar	_n @ sp[(-18)+2]
 19574  015544  0E08               	movlw	8
 19575  015546  6E01               	movwf	btemp^0,c
 19576  015548  0EF0               	movlw	-16
 19577  01554A                     us1083999:
 19578  01554A  006F FF7B FFE3     	movff	postinc2,plusw1
 19579  015550  28E8               	incf	wreg,w,c
 19580  015552  2E01               	decfsz	btemp^0,f,c
 19581  015554  D7FA               	bra	us1083999
 19582                           
 19583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19584                           ;stkvar	_n @ sp[(-18)+2]
 19585  015556  0EF7               	movlw	-9
 19586  015558  AEE3               	btfss	plusw1,7,c
 19587  01555A  D002               	goto	u10840
 19588  01555C  0E01               	movlw	1
 19589  01555E  D001               	goto	u10850
 19590  015560                     u10840:
 19591  015560  0E00               	movlw	0
 19592  015562                     u10850:
 19593  015562  6E0B               	movwf	(btemp+10)^0,c
 19594  015564  6A0C               	clrf	(btemp+11)^0,c
 19595                           
 19596                           ;stkvar	_s @ sp[(-18)+12]
 19597  015566  0EFA               	movlw	-6
 19598  015568  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19599  01556E  0EFB               	movlw	-5
 19600  015570  0060  F033  FFE3   	movff	btemp+11,plusw1
 19601                           
 19602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19603                           ;stkvar	_s @ sp[(-18)+12]
 19604  015576  0EFA               	movlw	-6
 19605  015578  006F FF8C  F001    	movff	plusw1,btemp
 19606  01557E  0EFB               	movlw	-5
 19607  015580  50E3               	movf	plusw1,w,c
 19608  015582  1001               	iorwf	btemp^0,w,c
 19609  015584  B4D8               	btfsc	status,2,c
 19610  015586  D025               	goto	u10870
 19611                           
 19612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19613                           ;stkvar	_n @ sp[(-18)+2]
 19614                           ;stkvar	_n @ sp[(-18)+2]
 19615  015588  0EF0               	movlw	-16
 19616  01558A  6CE3               	negf	plusw1,c
 19617  01558C  0EF1               	movlw	-15
 19618  01558E  1EE3               	comf	plusw1,f,c
 19619  015590  0EF2               	movlw	-14
 19620  015592  1EE3               	comf	plusw1,f,c
 19621  015594  0EF3               	movlw	-13
 19622  015596  1EE3               	comf	plusw1,f,c
 19623  015598  0EF4               	movlw	-12
 19624  01559A  1EE3               	comf	plusw1,f,c
 19625  01559C  0EF5               	movlw	-11
 19626  01559E  1EE3               	comf	plusw1,f,c
 19627  0155A0  0EF6               	movlw	-10
 19628  0155A2  1EE3               	comf	plusw1,f,c
 19629  0155A4  0EF7               	movlw	-9
 19630  0155A6  1EE3               	comf	plusw1,f,c
 19631  0155A8  E314               	bnc	u10870
 19632  0155AA  0EF1               	movlw	-15
 19633  0155AC  2AE3               	incf	plusw1,f,c
 19634  0155AE  E311               	bnc	u10870
 19635  0155B0  0EF2               	movlw	-14
 19636  0155B2  2AE3               	incf	plusw1,f,c
 19637  0155B4  E30E               	bnc	u10870
 19638  0155B6  0EF3               	movlw	-13
 19639  0155B8  2AE3               	incf	plusw1,f,c
 19640  0155BA  E30B               	bnc	u10870
 19641  0155BC  0EF4               	movlw	-12
 19642  0155BE  2AE3               	incf	plusw1,f,c
 19643  0155C0  E308               	bnc	u10870
 19644  0155C2  0EF5               	movlw	-11
 19645  0155C4  2AE3               	incf	plusw1,f,c
 19646  0155C6  E305               	bnc	u10870
 19647  0155C8  0EF6               	movlw	-10
 19648  0155CA  2AE3               	incf	plusw1,f,c
 19649  0155CC  E302               	bnc	u10870
 19650  0155CE  0EF7               	movlw	-9
 19651  0155D0  2AE3               	incf	plusw1,f,c
 19652  0155D2                     u10870:
 19653                           
 19654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19655  0155D2  AE3D               	btfss	(_prec+1)^0,7,c
 19656                           
 19657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19658  0155D4  923E               	bcf	_flags^0,1,c
 19659                           
 19660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19661  0155D6  BE3D               	btfsc	(_prec+1)^0,7,c
 19662  0155D8  D005               	goto	u10890
 19663  0155DA  503D               	movf	(_prec+1)^0,w,c
 19664  0155DC  E110               	bnz	l11761
 19665  0155DE  043C               	decf	_prec^0,w,c
 19666  0155E0  B0D8               	btfsc	status,0,c
 19667  0155E2  D00D               	goto	l11761
 19668  0155E4                     u10890:
 19669  0155E4  0E01               	movlw	1
 19670  0155E6  6E0B               	movwf	(btemp+10)^0,c
 19671  0155E8  0E00               	movlw	0
 19672  0155EA  6E0C               	movwf	(btemp+11)^0,c
 19673                           
 19674                           ;stkvar	_p @ sp[(-18)+16]
 19675  0155EC  0EFE               	movlw	-2
 19676  0155EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19677  0155F4  0EFF               	movlw	-1
 19678  0155F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19679  0155FC  D008               	goto	l2163
 19680  0155FE                     l11761:
 19681                           
 19682                           ;stkvar	_p @ sp[(-18)+16]
 19683  0155FE  0EFE               	movlw	-2
 19684  015600  0060  F0F3  FFE3   	movff	_prec,plusw1
 19685  015606  0EFF               	movlw	-1
 19686  015608  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19687  01560E                     l2163:
 19688                           
 19689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19690                           ;stkvar	_w @ sp[(-18)+14]
 19691  01560E  0EFC               	movlw	-4
 19692  015610  0060  F0EB  FFE3   	movff	_width,plusw1
 19693  015616  0EFD               	movlw	-3
 19694  015618  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19695                           
 19696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19697                           ;stkvar	_s @ sp[(-18)+12]
 19698  01561E  0EFA               	movlw	-6
 19699  015620  006F FF8C  F001    	movff	plusw1,btemp
 19700  015626  0EFB               	movlw	-5
 19701  015628  50E3               	movf	plusw1,w,c
 19702  01562A  1001               	iorwf	btemp^0,w,c
 19703  01562C  A4D8               	btfss	status,2,c
 19704  01562E  D002               	goto	u10910
 19705  015630  A43E               	btfss	_flags^0,2,c
 19706  015632  D00A               	goto	l11769
 19707  015634                     u10910:
 19708                           
 19709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19710                           ;stkvar	_w @ sp[(-18)+14]
 19711  015634  50E1               	movf	fsr1l,w,c
 19712  015636  0FFC               	addlw	-4
 19713  015638  6ED9               	movwf	fsr2l,c
 19714  01563A  50E2               	movf	fsr1h,w,c
 19715  01563C  6EDA               	movwf	fsr2h,c
 19716  01563E  0EFF               	movlw	255
 19717  015640  22DA               	addwfc	fsr2h,f,c
 19718  015642  06DE               	decf	postinc2,f,c
 19719  015644  0E00               	movlw	0
 19720  015646  5ADD               	subwfb	postdec2,f,c
 19721  015648                     l11769:
 19722                           
 19723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19724  015648  0E4F               	movlw	79
 19725  01564A  6E0B               	movwf	(btemp+10)^0,c
 19726  01564C  0E00               	movlw	0
 19727  01564E  6E0C               	movwf	(btemp+11)^0,c
 19728                           
 19729                           ;stkvar	_i @ sp[(-18)+10]
 19730  015650  0EF8               	movlw	-8
 19731  015652  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19732  015658  0EF9               	movlw	-7
 19733  01565A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19734                           
 19735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19736  015660  0102               	movlb	2	; () banked
 19737  015662  6BE6               	clrf	(_dbuf+79)& (0+255),b
 19738                           
 19739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19740  015664  D109               	goto	l11783
 19741  015666                     l11773:
 19742                           
 19743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19744                           ;stkvar	_i @ sp[(-18)+10]
 19745  015666  50E1               	movf	fsr1l,w,c
 19746  015668  0FF8               	addlw	-8
 19747  01566A  6ED9               	movwf	fsr2l,c
 19748  01566C  50E2               	movf	fsr1h,w,c
 19749  01566E  6EDA               	movwf	fsr2h,c
 19750  015670  0EFF               	movlw	255
 19751  015672  22DA               	addwfc	fsr2h,f,c
 19752  015674  06DE               	decf	postinc2,f,c
 19753  015676  0E00               	movlw	0
 19754  015678  5ADD               	subwfb	postdec2,f,c
 19755                           
 19756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19757  01567A  0E0A               	movlw	10
 19758  01567C  6EE6               	movwf	postinc1,c
 19759  01567E  0E00               	movlw	0
 19760  015680  6EE6               	movwf	postinc1,c
 19761  015682  0E00               	movlw	0
 19762  015684  6EE6               	movwf	postinc1,c
 19763  015686  0E00               	movlw	0
 19764  015688  6EE6               	movwf	postinc1,c
 19765  01568A  0E00               	movlw	0
 19766  01568C  6EE6               	movwf	postinc1,c
 19767  01568E  0E00               	movlw	0
 19768  015690  6EE6               	movwf	postinc1,c
 19769  015692  0E00               	movlw	0
 19770  015694  6EE6               	movwf	postinc1,c
 19771  015696  0E00               	movlw	0
 19772  015698  6EE6               	movwf	postinc1,c
 19773                           
 19774                           ;stkvar	_n @ sp[(-26)+2]
 19775  01569A  50E1               	movf	fsr1l,w,c
 19776  01569C  0FE8               	addlw	-24
 19777  01569E  6ED9               	movwf	fsr2l,c
 19778  0156A0  50E2               	movf	fsr1h,w,c
 19779  0156A2  6EDA               	movwf	fsr2h,c
 19780  0156A4  0EFF               	movlw	255
 19781  0156A6  22DA               	addwfc	fsr2h,f,c
 19782  0156A8  006F FF7B FFE6     	movff	postinc2,postinc1
 19783  0156AE  006F FF7B FFE6     	movff	postinc2,postinc1
 19784  0156B4  006F FF7B FFE6     	movff	postinc2,postinc1
 19785  0156BA  006F FF7B FFE6     	movff	postinc2,postinc1
 19786  0156C0  006F FF7B FFE6     	movff	postinc2,postinc1
 19787  0156C6  006F FF7B FFE6     	movff	postinc2,postinc1
 19788  0156CC  006F FF7B FFE6     	movff	postinc2,postinc1
 19789  0156D2  006F FF7B FFE6     	movff	postinc2,postinc1
 19790  0156D8  EC7C  F0BC         	call	___aomod	;wreg free
 19791  0156DC  52E5               	movf	postdec1,f,c
 19792  0156DE  006F FF9C  F018    	movff	indf1,btemp+23
 19793  0156E4  52E5               	movf	postdec1,f,c
 19794  0156E6  006F FF9C  F017    	movff	indf1,btemp+22
 19795  0156EC  52E5               	movf	postdec1,f,c
 19796  0156EE  006F FF9C  F016    	movff	indf1,btemp+21
 19797  0156F4  52E5               	movf	postdec1,f,c
 19798  0156F6  006F FF9C  F015    	movff	indf1,btemp+20
 19799  0156FC  52E5               	movf	postdec1,f,c
 19800  0156FE  006F FF9C  F014    	movff	indf1,btemp+19
 19801  015704  52E5               	movf	postdec1,f,c
 19802  015706  006F FF9C  F013    	movff	indf1,btemp+18
 19803  01570C  52E5               	movf	postdec1,f,c
 19804  01570E  006F FF9C  F012    	movff	indf1,btemp+17
 19805  015714  52E5               	movf	postdec1,f,c
 19806  015716  006F FF9C  F011    	movff	indf1,btemp+16
 19807  01571C  0EF8               	movlw	248
 19808  01571E  26E1               	addwf	fsr1l,f,c
 19809  015720  0EFF               	movlw	255
 19810  015722  22E2               	addwfc	fsr1h,f,c
 19811  015724  0060  F044  F00B   	movff	btemp+16,btemp+10
 19812  01572A  0060  F048  F00C   	movff	btemp+17,btemp+11
 19813  015730  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19814  015736  0060  F033  FFE6   	movff	btemp+11,postinc1
 19815  01573C  ECE5  F0D8         	call	_abs	;wreg free
 19816  015740  0E30               	movlw	48
 19817  015742  2601               	addwf	btemp^0,f,c
 19818                           
 19819                           ;stkvar	_i @ sp[(-18)+10]
 19820  015744  0EF8               	movlw	-8
 19821  015746  006F FF8C  F00B    	movff	plusw1,btemp+10
 19822  01574C  0EF9               	movlw	-7
 19823  01574E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19824  015754  0E97               	movlw	low _dbuf
 19825  015756  240B               	addwf	(btemp+10)^0,w,c
 19826  015758  6ED9               	movwf	fsr2l,c
 19827  01575A  0E02               	movlw	high _dbuf
 19828  01575C  200C               	addwfc	(btemp+11)^0,w,c
 19829  01575E  6EDA               	movwf	fsr2h,c
 19830  015760  0060  F007  FFDF   	movff	btemp,indf2
 19831                           
 19832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19833                           ;stkvar	_p @ sp[(-18)+16]
 19834  015766  50E1               	movf	fsr1l,w,c
 19835  015768  0FFE               	addlw	-2
 19836  01576A  6ED9               	movwf	fsr2l,c
 19837  01576C  50E2               	movf	fsr1h,w,c
 19838  01576E  6EDA               	movwf	fsr2h,c
 19839  015770  0EFF               	movlw	255
 19840  015772  22DA               	addwfc	fsr2h,f,c
 19841  015774  06DE               	decf	postinc2,f,c
 19842  015776  0E00               	movlw	0
 19843  015778  5ADD               	subwfb	postdec2,f,c
 19844                           
 19845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19846                           ;stkvar	_w @ sp[(-18)+14]
 19847  01577A  50E1               	movf	fsr1l,w,c
 19848  01577C  0FFC               	addlw	-4
 19849  01577E  6ED9               	movwf	fsr2l,c
 19850  015780  50E2               	movf	fsr1h,w,c
 19851  015782  6EDA               	movwf	fsr2h,c
 19852  015784  0EFF               	movlw	255
 19853  015786  22DA               	addwfc	fsr2h,f,c
 19854  015788  06DE               	decf	postinc2,f,c
 19855  01578A  0E00               	movlw	0
 19856  01578C  5ADD               	subwfb	postdec2,f,c
 19857                           
 19858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19859  01578E  0E0A               	movlw	10
 19860  015790  6EE6               	movwf	postinc1,c
 19861  015792  0E00               	movlw	0
 19862  015794  6EE6               	movwf	postinc1,c
 19863  015796  0E00               	movlw	0
 19864  015798  6EE6               	movwf	postinc1,c
 19865  01579A  0E00               	movlw	0
 19866  01579C  6EE6               	movwf	postinc1,c
 19867  01579E  0E00               	movlw	0
 19868  0157A0  6EE6               	movwf	postinc1,c
 19869  0157A2  0E00               	movlw	0
 19870  0157A4  6EE6               	movwf	postinc1,c
 19871  0157A6  0E00               	movlw	0
 19872  0157A8  6EE6               	movwf	postinc1,c
 19873  0157AA  0E00               	movlw	0
 19874  0157AC  6EE6               	movwf	postinc1,c
 19875                           
 19876                           ;stkvar	_n @ sp[(-26)+2]
 19877  0157AE  50E1               	movf	fsr1l,w,c
 19878  0157B0  0FE8               	addlw	-24
 19879  0157B2  6ED9               	movwf	fsr2l,c
 19880  0157B4  50E2               	movf	fsr1h,w,c
 19881  0157B6  6EDA               	movwf	fsr2h,c
 19882  0157B8  0EFF               	movlw	255
 19883  0157BA  22DA               	addwfc	fsr2h,f,c
 19884  0157BC  006F FF7B FFE6     	movff	postinc2,postinc1
 19885  0157C2  006F FF7B FFE6     	movff	postinc2,postinc1
 19886  0157C8  006F FF7B FFE6     	movff	postinc2,postinc1
 19887  0157CE  006F FF7B FFE6     	movff	postinc2,postinc1
 19888  0157D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19889  0157DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19890  0157E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19891  0157E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19892  0157EC  EC02  F0BA         	call	___aodiv	;wreg free
 19893  0157F0  52E5               	movf	postdec1,f,c
 19894  0157F2  006F FF9C  F018    	movff	indf1,btemp+23
 19895  0157F8  52E5               	movf	postdec1,f,c
 19896  0157FA  006F FF9C  F017    	movff	indf1,btemp+22
 19897  015800  52E5               	movf	postdec1,f,c
 19898  015802  006F FF9C  F016    	movff	indf1,btemp+21
 19899  015808  52E5               	movf	postdec1,f,c
 19900  01580A  006F FF9C  F015    	movff	indf1,btemp+20
 19901  015810  52E5               	movf	postdec1,f,c
 19902  015812  006F FF9C  F014    	movff	indf1,btemp+19
 19903  015818  52E5               	movf	postdec1,f,c
 19904  01581A  006F FF9C  F013    	movff	indf1,btemp+18
 19905  015820  52E5               	movf	postdec1,f,c
 19906  015822  006F FF9C  F012    	movff	indf1,btemp+17
 19907  015828  52E5               	movf	postdec1,f,c
 19908  01582A  006F FF9C  F011    	movff	indf1,btemp+16
 19909  015830  0EF8               	movlw	248
 19910  015832  26E1               	addwf	fsr1l,f,c
 19911  015834  0EFF               	movlw	255
 19912  015836  22E2               	addwfc	fsr1h,f,c
 19913                           
 19914                           ;stkvar	_n @ sp[(-18)+2]
 19915  015838  0EF0               	movlw	-16
 19916  01583A  0060  F047  FFE3   	movff	btemp+16,plusw1
 19917  015840  0EF1               	movlw	-15
 19918  015842  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19919  015848  0EF2               	movlw	-14
 19920  01584A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19921  015850  0EF3               	movlw	-13
 19922  015852  0060  F053  FFE3   	movff	btemp+19,plusw1
 19923  015858  0EF4               	movlw	-12
 19924  01585A  0060  F057  FFE3   	movff	btemp+20,plusw1
 19925  015860  0EF5               	movlw	-11
 19926  015862  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19927  015868  0EF6               	movlw	-10
 19928  01586A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19929  015870  0EF7               	movlw	-9
 19930  015872  0060  F063  FFE3   	movff	btemp+23,plusw1
 19931  015878                     l11783:
 19932                           
 19933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19934                           ;stkvar	_i @ sp[(-18)+10]
 19935  015878  0EF9               	movlw	-7
 19936  01587A  BEE3               	btfsc	plusw1,7,c
 19937  01587C  D036               	goto	u10960
 19938  01587E  0EF9               	movlw	-7
 19939  015880  50E3               	movf	plusw1,w,c
 19940  015882  E104               	bnz	u10920
 19941  015884  0EF8               	movlw	-8
 19942  015886  04E3               	decf	plusw1,w,c
 19943  015888  A0D8               	btfss	status,0,c
 19944  01588A  D02F               	goto	u10960
 19945  01588C                     u10920:
 19946                           
 19947                           ;stkvar	_n @ sp[(-18)+2]
 19948  01588C  0EF0               	movlw	-16
 19949  01588E  50E3               	movf	plusw1,w,c
 19950  015890  E115               	bnz	u10931
 19951  015892  0EF1               	movlw	-15
 19952  015894  50E3               	movf	plusw1,w,c
 19953  015896  E112               	bnz	u10931
 19954  015898  0EF2               	movlw	-14
 19955  01589A  50E3               	movf	plusw1,w,c
 19956  01589C  E10F               	bnz	u10931
 19957  01589E  0EF3               	movlw	-13
 19958  0158A0  50E3               	movf	plusw1,w,c
 19959  0158A2  E10C               	bnz	u10931
 19960  0158A4  0EF4               	movlw	-12
 19961  0158A6  50E3               	movf	plusw1,w,c
 19962  0158A8  E109               	bnz	u10931
 19963  0158AA  0EF5               	movlw	-11
 19964  0158AC  50E3               	movf	plusw1,w,c
 19965  0158AE  E106               	bnz	u10931
 19966  0158B0  0EF6               	movlw	-10
 19967  0158B2  50E3               	movf	plusw1,w,c
 19968  0158B4  E103               	bnz	u10931
 19969  0158B6  0EF7               	movlw	-9
 19970  0158B8  50E3               	movf	plusw1,w,c
 19971  0158BA  A4D8               	btfss	status,2,c
 19972  0158BC                     u10931:
 19973  0158BC  D6D4               	goto	l11773
 19974                           
 19975                           ;stkvar	_p @ sp[(-18)+16]
 19976  0158BE  0EFF               	movlw	-1
 19977  0158C0  BEE3               	btfsc	plusw1,7,c
 19978  0158C2  D007               	goto	u10940
 19979  0158C4  0EFF               	movlw	-1
 19980  0158C6  50E3               	movf	plusw1,w,c
 19981  0158C8  E103               	bnz	u10941
 19982  0158CA  0EFE               	movlw	-2
 19983  0158CC  04E3               	decf	plusw1,w,c
 19984  0158CE  B0D8               	btfsc	status,0,c
 19985  0158D0                     u10941:
 19986  0158D0  D6CA               	goto	l11773
 19987  0158D2                     u10940:
 19988                           
 19989                           ;stkvar	_w @ sp[(-18)+14]
 19990  0158D2  0EFD               	movlw	-3
 19991  0158D4  BEE3               	btfsc	plusw1,7,c
 19992  0158D6  D009               	goto	u10960
 19993  0158D8  0EFD               	movlw	-3
 19994  0158DA  50E3               	movf	plusw1,w,c
 19995  0158DC  E104               	bnz	u10950
 19996  0158DE  0EFC               	movlw	-4
 19997  0158E0  04E3               	decf	plusw1,w,c
 19998  0158E2  A0D8               	btfss	status,0,c
 19999  0158E4  D002               	goto	u10960
 20000  0158E6                     u10950:
 20001  0158E6  B23E               	btfsc	_flags^0,1,c
 20002  0158E8  D6BE               	goto	l11773
 20003  0158EA                     u10960:
 20004                           
 20005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20006                           ;stkvar	_s @ sp[(-18)+12]
 20007  0158EA  0EFA               	movlw	-6
 20008  0158EC  006F FF8C  F001    	movff	plusw1,btemp
 20009  0158F2  0EFB               	movlw	-5
 20010  0158F4  50E3               	movf	plusw1,w,c
 20011  0158F6  1001               	iorwf	btemp^0,w,c
 20012  0158F8  A4D8               	btfss	status,2,c
 20013  0158FA  D002               	goto	u10980
 20014  0158FC  A43E               	btfss	_flags^0,2,c
 20015  0158FE  D033               	goto	l11807
 20016  015900                     u10980:
 20017                           
 20018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20019                           ;stkvar	_i @ sp[(-18)+10]
 20020  015900  50E1               	movf	fsr1l,w,c
 20021  015902  0FF8               	addlw	-8
 20022  015904  6ED9               	movwf	fsr2l,c
 20023  015906  50E2               	movf	fsr1h,w,c
 20024  015908  6EDA               	movwf	fsr2h,c
 20025  01590A  0EFF               	movlw	255
 20026  01590C  22DA               	addwfc	fsr2h,f,c
 20027  01590E  06DE               	decf	postinc2,f,c
 20028  015910  0E00               	movlw	0
 20029  015912  5ADD               	subwfb	postdec2,f,c
 20030                           
 20031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20032                           ;stkvar	_s @ sp[(-18)+12]
 20033  015914  0EFA               	movlw	-6
 20034  015916  006F FF8C  F001    	movff	plusw1,btemp
 20035  01591C  0EFB               	movlw	-5
 20036  01591E  50E3               	movf	plusw1,w,c
 20037  015920  1001               	iorwf	btemp^0,w,c
 20038  015922  A4D8               	btfss	status,2,c
 20039  015924  D002               	goto	l11803
 20040  015926  0E2B               	movlw	43
 20041  015928  D001               	goto	L24
 20042  01592A                     l11803:
 20043  01592A  0E2D               	movlw	45
 20044  01592C                     L24:
 20045  01592C  6E0B               	movwf	(btemp+10)^0,c
 20046  01592E  0E00               	movlw	0
 20047  015930  6E0C               	movwf	(btemp+11)^0,c
 20048                           
 20049                           ;stkvar	_dtoa$5471 @ sp[(-18)+0]
 20050  015932  0EEE               	movlw	-18
 20051  015934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20052  01593A  0EEF               	movlw	-17
 20053  01593C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20054                           
 20055                           ;stkvar	_dtoa$5471 @ sp[(-18)+0]
 20056                           ;stkvar	_i @ sp[(-18)+10]
 20057  015942  0EF8               	movlw	-8
 20058  015944  006F FF8C  F00B    	movff	plusw1,btemp+10
 20059  01594A  0EF9               	movlw	-7
 20060  01594C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20061  015952  0E97               	movlw	low _dbuf
 20062  015954  240B               	addwf	(btemp+10)^0,w,c
 20063  015956  6ED9               	movwf	fsr2l,c
 20064  015958  0E02               	movlw	high _dbuf
 20065  01595A  200C               	addwfc	(btemp+11)^0,w,c
 20066  01595C  6EDA               	movwf	fsr2h,c
 20067  01595E  0EEE               	movlw	-18
 20068  015960  006F FF8F FFDF     	movff	plusw1,indf2
 20069  015966                     l11807:
 20070                           
 20071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20072                           ;stkvar	_w @ sp[(-18)+14]
 20073  015966  0EFC               	movlw	-4
 20074  015968  006F FF8F FFE6     	movff	plusw1,postinc1
 20075  01596E  006F FF8F FFE6     	movff	plusw1,postinc1
 20076                           
 20077                           ;stkvar	_i @ sp[(-20)+10]
 20078  015974  0E97               	movlw	low _dbuf
 20079  015976  6E0B               	movwf	(btemp+10)^0,c
 20080  015978  0E02               	movlw	high _dbuf
 20081  01597A  6E0C               	movwf	(btemp+11)^0,c
 20082  01597C  0EF6               	movlw	-10
 20083  01597E  50E3               	movf	plusw1,w,c
 20084  015980  260B               	addwf	(btemp+10)^0,f,c
 20085  015982  0EF7               	movlw	-9
 20086  015984  50E3               	movf	plusw1,w,c
 20087  015986  220C               	addwfc	(btemp+11)^0,f,c
 20088  015988  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20089  01598E  0060  F033  FFE6   	movff	btemp+11,postinc1
 20090                           
 20091                           ;stkvar	_fp @ sp[(-22)+-2]
 20092  015994  0EE8               	movlw	-24
 20093  015996  006F FF8F FFE6     	movff	plusw1,postinc1
 20094  01599C  006F FF8F FFE6     	movff	plusw1,postinc1
 20095  0159A2  EC0F  F0CC         	call	_pad	;wreg free
 20096                           
 20097                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20098  0159A6  0EE4               	movlw	228
 20099  0159A8  26E1               	addwf	fsr1l,f,c
 20100  0159AA  0EFF               	movlw	255
 20101  0159AC  22E2               	addwfc	fsr1h,f,c
 20102  0159AE  0012               	return		;funcret
 20103  0159B0                     __end_of_dtoa:
 20104                           	opt callstack 0
 20105                           
 20106 ;; *************** function _abs *****************
 20107 ;; Defined at:
 20108 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20109 ;; Parameters:    Size  Location     Type
 20110 ;;  a               2  [STACK] int 
 20111 ;; Auto vars:     Size  Location     Type
 20112 ;;		None
 20113 ;; Return value:  Size  Location     Type
 20114 ;;                  2  [STACK] int 
 20115 ;; Registers used:
 20116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20117 ;; Tracked objects:
 20118 ;;		On entry : 0/2
 20119 ;;		On exit  : 0/0
 20120 ;;		Unchanged: 0/0
 20121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;Total ram usage:        0 bytes
 20127 ;; Hardware stack levels used:    1
 20128 ;; Hardware stack levels required when called:   15
 20129 ;; This function calls:
 20130 ;;		Nothing
 20131 ;; This function is called by:
 20132 ;;		_dtoa
 20133 ;; This function uses a reentrant model
 20134 ;;
 20135                           
 20136                           	psect	text67
 20137  01B1CA                     __ptext67:
 20138                           	opt callstack 0
 20139  01B1CA                     _abs:
 20140                           	opt callstack 0
 20141                           
 20142                           ;stkvar	_a @ sp[(0)+-2]
 20143                           
 20144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20145                           ;incstack = 0
 20146 ;; hardware stack exceeded
 20147  01B1CA  0EFF               	movlw	-1
 20148  01B1CC  BEE3               	btfsc	plusw1,7,c
 20149  01B1CE  D007               	goto	u5910
 20150  01B1D0  0EFF               	movlw	-1
 20151  01B1D2  50E3               	movf	plusw1,w,c
 20152  01B1D4  E112               	bnz	l7887
 20153  01B1D6  0EFE               	movlw	-2
 20154  01B1D8  04E3               	decf	plusw1,w,c
 20155  01B1DA  B0D8               	btfsc	status,0,c
 20156  01B1DC  D00E               	goto	l7887
 20157  01B1DE                     u5910:
 20158                           
 20159                           ;stkvar	_a @ sp[(0)+-2]
 20160  01B1DE  0EFE               	movlw	-2
 20161  01B1E0  006F FF8C  F001    	movff	plusw1,btemp
 20162  01B1E6  1E01               	comf	btemp^0,f,c
 20163  01B1E8  0EFF               	movlw	-1
 20164  01B1EA  006F FF8C  F002    	movff	plusw1,btemp+1
 20165  01B1F0  1E02               	comf	(btemp+1)^0,f,c
 20166  01B1F2  2A01               	incf	btemp^0,f,c
 20167  01B1F4  B4D8               	btfsc	status,2,c
 20168  01B1F6  2A02               	incf	(btemp+1)^0,f,c
 20169  01B1F8  D008               	goto	l3089
 20170  01B1FA                     l7887:
 20171                           
 20172                           ;stkvar	_a @ sp[(0)+-2]
 20173  01B1FA  0EFE               	movlw	-2
 20174  01B1FC  006F FF8C  F001    	movff	plusw1,btemp
 20175  01B202  0EFF               	movlw	-1
 20176  01B204  006F FF8C  F002    	movff	plusw1,btemp+1
 20177  01B20A                     l3089:
 20178                           
 20179                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20180  01B20A  52E5               	movf	postdec1,f,c
 20181  01B20C  52E5               	movf	postdec1,f,c
 20182  01B20E  0012               	return		;funcret
 20183  01B210                     __end_of_abs:
 20184                           	opt callstack 0
 20185                           
 20186 ;; *************** function ___aomod *****************
 20187 ;; Defined at:
 20188 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20189 ;; Parameters:    Size  Location     Type
 20190 ;;  dividend        8  [STACK] long long 
 20191 ;;  divisor         8  [STACK] long long 
 20192 ;; Auto vars:     Size  Location     Type
 20193 ;;  sign            1  [STACK] unsigned char 
 20194 ;;  counter         1  [STACK] unsigned char 
 20195 ;; Return value:  Size  Location     Type
 20196 ;;                  8  [STACK] long long 
 20197 ;; Registers used:
 20198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20199 ;; Tracked objects:
 20200 ;;		On entry : 0/2
 20201 ;;		On exit  : 0/0
 20202 ;;		Unchanged: 0/0
 20203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20208 ;;Total ram usage:        0 bytes
 20209 ;; Hardware stack levels used:    1
 20210 ;; Hardware stack levels required when called:   15
 20211 ;; This function calls:
 20212 ;;		Nothing
 20213 ;; This function is called by:
 20214 ;;		_dtoa
 20215 ;; This function uses a reentrant model
 20216 ;;
 20217                           
 20218                           	psect	text68
 20219  0178F8                     __ptext68:
 20220                           	opt callstack 0
 20221  0178F8                     ___aomod:
 20222                           	opt callstack 0
 20223                           
 20224                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20225  0178F8  52E6               	movf	postinc1,f,c
 20226  0178FA  52E6               	movf	postinc1,f,c
 20227                           
 20228                           ;stkvar	_sign @ sp[(-2)+0]
 20229                           
 20230                           ;incstack = 0
 20231 ;; hardware stack exceeded
 20232  0178FC  0EFE               	movlw	-2
 20233  0178FE  6AE3               	clrf	plusw1,c
 20234                           
 20235                           ;stkvar	_dividend @ sp[(-2)+-8]
 20236  017900  0EFD               	movlw	-3
 20237  017902  AEE3               	btfss	plusw1,7,c
 20238  017904  D028               	goto	l8045
 20239                           
 20240                           ;stkvar	_dividend @ sp[(-2)+-8]
 20241                           ;stkvar	_dividend @ sp[(-2)+-8]
 20242  017906  0EF6               	movlw	-10
 20243  017908  6CE3               	negf	plusw1,c
 20244  01790A  0EF7               	movlw	-9
 20245  01790C  1EE3               	comf	plusw1,f,c
 20246  01790E  0EF8               	movlw	-8
 20247  017910  1EE3               	comf	plusw1,f,c
 20248  017912  0EF9               	movlw	-7
 20249  017914  1EE3               	comf	plusw1,f,c
 20250  017916  0EFA               	movlw	-6
 20251  017918  1EE3               	comf	plusw1,f,c
 20252  01791A  0EFB               	movlw	-5
 20253  01791C  1EE3               	comf	plusw1,f,c
 20254  01791E  0EFC               	movlw	-4
 20255  017920  1EE3               	comf	plusw1,f,c
 20256  017922  0EFD               	movlw	-3
 20257  017924  1EE3               	comf	plusw1,f,c
 20258  017926  E314               	bnc	u6340
 20259  017928  0EF7               	movlw	-9
 20260  01792A  2AE3               	incf	plusw1,f,c
 20261  01792C  E311               	bnc	u6340
 20262  01792E  0EF8               	movlw	-8
 20263  017930  2AE3               	incf	plusw1,f,c
 20264  017932  E30E               	bnc	u6340
 20265  017934  0EF9               	movlw	-7
 20266  017936  2AE3               	incf	plusw1,f,c
 20267  017938  E30B               	bnc	u6340
 20268  01793A  0EFA               	movlw	-6
 20269  01793C  2AE3               	incf	plusw1,f,c
 20270  01793E  E308               	bnc	u6340
 20271  017940  0EFB               	movlw	-5
 20272  017942  2AE3               	incf	plusw1,f,c
 20273  017944  E305               	bnc	u6340
 20274  017946  0EFC               	movlw	-4
 20275  017948  2AE3               	incf	plusw1,f,c
 20276  01794A  E302               	bnc	u6340
 20277  01794C  0EFD               	movlw	-3
 20278  01794E  2AE3               	incf	plusw1,f,c
 20279  017950                     u6340:
 20280                           
 20281                           ;stkvar	_sign @ sp[(-2)+0]
 20282  017950  0EFE               	movlw	-2
 20283  017952  6AE3               	clrf	plusw1,c
 20284  017954  2AE3               	incf	plusw1,f,c
 20285  017956                     l8045:
 20286                           
 20287                           ;stkvar	_divisor @ sp[(-2)+-16]
 20288  017956  0EF5               	movlw	-11
 20289  017958  AEE3               	btfss	plusw1,7,c
 20290  01795A  D025               	goto	u6360
 20291                           
 20292                           ;stkvar	_divisor @ sp[(-2)+-16]
 20293                           ;stkvar	_divisor @ sp[(-2)+-16]
 20294  01795C  0EEE               	movlw	-18
 20295  01795E  6CE3               	negf	plusw1,c
 20296  017960  0EEF               	movlw	-17
 20297  017962  1EE3               	comf	plusw1,f,c
 20298  017964  0EF0               	movlw	-16
 20299  017966  1EE3               	comf	plusw1,f,c
 20300  017968  0EF1               	movlw	-15
 20301  01796A  1EE3               	comf	plusw1,f,c
 20302  01796C  0EF2               	movlw	-14
 20303  01796E  1EE3               	comf	plusw1,f,c
 20304  017970  0EF3               	movlw	-13
 20305  017972  1EE3               	comf	plusw1,f,c
 20306  017974  0EF4               	movlw	-12
 20307  017976  1EE3               	comf	plusw1,f,c
 20308  017978  0EF5               	movlw	-11
 20309  01797A  1EE3               	comf	plusw1,f,c
 20310  01797C  E314               	bnc	u6360
 20311  01797E  0EEF               	movlw	-17
 20312  017980  2AE3               	incf	plusw1,f,c
 20313  017982  E311               	bnc	u6360
 20314  017984  0EF0               	movlw	-16
 20315  017986  2AE3               	incf	plusw1,f,c
 20316  017988  E30E               	bnc	u6360
 20317  01798A  0EF1               	movlw	-15
 20318  01798C  2AE3               	incf	plusw1,f,c
 20319  01798E  E30B               	bnc	u6360
 20320  017990  0EF2               	movlw	-14
 20321  017992  2AE3               	incf	plusw1,f,c
 20322  017994  E308               	bnc	u6360
 20323  017996  0EF3               	movlw	-13
 20324  017998  2AE3               	incf	plusw1,f,c
 20325  01799A  E305               	bnc	u6360
 20326  01799C  0EF4               	movlw	-12
 20327  01799E  2AE3               	incf	plusw1,f,c
 20328  0179A0  E302               	bnc	u6360
 20329  0179A2  0EF5               	movlw	-11
 20330  0179A4  2AE3               	incf	plusw1,f,c
 20331  0179A6                     u6360:
 20332                           
 20333                           ;stkvar	_divisor @ sp[(-2)+-16]
 20334  0179A6  0EEE               	movlw	-18
 20335  0179A8  50E3               	movf	plusw1,w,c
 20336  0179AA  E116               	bnz	u6370
 20337  0179AC  0EEF               	movlw	-17
 20338  0179AE  50E3               	movf	plusw1,w,c
 20339  0179B0  E113               	bnz	u6370
 20340  0179B2  0EF0               	movlw	-16
 20341  0179B4  50E3               	movf	plusw1,w,c
 20342  0179B6  E110               	bnz	u6370
 20343  0179B8  0EF1               	movlw	-15
 20344  0179BA  50E3               	movf	plusw1,w,c
 20345  0179BC  E10D               	bnz	u6370
 20346  0179BE  0EF2               	movlw	-14
 20347  0179C0  50E3               	movf	plusw1,w,c
 20348  0179C2  E10A               	bnz	u6370
 20349  0179C4  0EF3               	movlw	-13
 20350  0179C6  50E3               	movf	plusw1,w,c
 20351  0179C8  E107               	bnz	u6370
 20352  0179CA  0EF4               	movlw	-12
 20353  0179CC  50E3               	movf	plusw1,w,c
 20354  0179CE  E104               	bnz	u6370
 20355  0179D0  0EF5               	movlw	-11
 20356  0179D2  50E3               	movf	plusw1,w,c
 20357  0179D4  B4D8               	btfsc	status,2,c
 20358  0179D6  D075               	goto	u6400
 20359  0179D8                     u6370:
 20360                           
 20361                           ;stkvar	_counter @ sp[(-2)+1]
 20362  0179D8  0EFF               	movlw	-1
 20363  0179DA  6AE3               	clrf	plusw1,c
 20364  0179DC  D012               	goto	L25
 20365  0179DE                     l8053:
 20366                           
 20367                           ;stkvar	_divisor @ sp[(-2)+-16]
 20368  0179DE  90D8               	bcf	status,0,c
 20369  0179E0  0EEE               	movlw	-18
 20370  0179E2  36E3               	rlcf	plusw1,f,c
 20371  0179E4  0EEF               	movlw	-17
 20372  0179E6  36E3               	rlcf	plusw1,f,c
 20373  0179E8  0EF0               	movlw	-16
 20374  0179EA  36E3               	rlcf	plusw1,f,c
 20375  0179EC  0EF1               	movlw	-15
 20376  0179EE  36E3               	rlcf	plusw1,f,c
 20377  0179F0  0EF2               	movlw	-14
 20378  0179F2  36E3               	rlcf	plusw1,f,c
 20379  0179F4  0EF3               	movlw	-13
 20380  0179F6  36E3               	rlcf	plusw1,f,c
 20381  0179F8  0EF4               	movlw	-12
 20382  0179FA  36E3               	rlcf	plusw1,f,c
 20383  0179FC  0EF5               	movlw	-11
 20384  0179FE  36E3               	rlcf	plusw1,f,c
 20385                           
 20386                           ;stkvar	_counter @ sp[(-2)+1]
 20387  017A00  0EFF               	movlw	-1
 20388  017A02                     L25:
 20389  017A02  2AE3               	incf	plusw1,f,c
 20390                           
 20391                           ;stkvar	_divisor @ sp[(-2)+-16]
 20392  017A04  0EF5               	movlw	-11
 20393  017A06  AEE3               	btfss	plusw1,7,c
 20394  017A08  D7EA               	goto	l8053
 20395  017A0A                     u6380:
 20396                           
 20397                           ;stkvar	_divisor @ sp[(-2)+-16]
 20398                           ;stkvar	_dividend @ sp[(-2)+-8]
 20399  017A0A  50E1               	movf	fsr1l,w,c
 20400  017A0C  0FF6               	addlw	-10
 20401  017A0E  6ED9               	movwf	fsr2l,c
 20402  017A10  50E2               	movf	fsr1h,w,c
 20403  017A12  6EDA               	movwf	fsr2h,c
 20404  017A14  0EFF               	movlw	255
 20405  017A16  22DA               	addwfc	fsr2h,f,c
 20406  017A18  0EEE               	movlw	-18
 20407  017A1A  50E3               	movf	plusw1,w,c
 20408  017A1C  5CDE               	subwf	postinc2,w,c
 20409  017A1E  0EEF               	movlw	-17
 20410  017A20  50E3               	movf	plusw1,w,c
 20411  017A22  58DE               	subwfb	postinc2,w,c
 20412  017A24  0EF0               	movlw	-16
 20413  017A26  50E3               	movf	plusw1,w,c
 20414  017A28  58DE               	subwfb	postinc2,w,c
 20415  017A2A  0EF1               	movlw	-15
 20416  017A2C  50E3               	movf	plusw1,w,c
 20417  017A2E  58DE               	subwfb	postinc2,w,c
 20418  017A30  0EF2               	movlw	-14
 20419  017A32  50E3               	movf	plusw1,w,c
 20420  017A34  58DE               	subwfb	postinc2,w,c
 20421  017A36  0EF3               	movlw	-13
 20422  017A38  50E3               	movf	plusw1,w,c
 20423  017A3A  58DE               	subwfb	postinc2,w,c
 20424  017A3C  0EF4               	movlw	-12
 20425  017A3E  50E3               	movf	plusw1,w,c
 20426  017A40  58DE               	subwfb	postinc2,w,c
 20427  017A42  0EF5               	movlw	-11
 20428  017A44  50E3               	movf	plusw1,w,c
 20429  017A46  58DE               	subwfb	postinc2,w,c
 20430  017A48  A0D8               	btfss	status,0,c
 20431  017A4A  D01F               	goto	l8061
 20432                           
 20433                           ;stkvar	_divisor @ sp[(-2)+-16]
 20434                           ;stkvar	_dividend @ sp[(-2)+-8]
 20435  017A4C  50E1               	movf	fsr1l,w,c
 20436  017A4E  0FF6               	addlw	-10
 20437  017A50  6ED9               	movwf	fsr2l,c
 20438  017A52  50E2               	movf	fsr1h,w,c
 20439  017A54  6EDA               	movwf	fsr2h,c
 20440  017A56  0EFF               	movlw	255
 20441  017A58  22DA               	addwfc	fsr2h,f,c
 20442  017A5A  0EEE               	movlw	-18
 20443  017A5C  50E3               	movf	plusw1,w,c
 20444  017A5E  5EDE               	subwf	postinc2,f,c
 20445  017A60  0EEF               	movlw	-17
 20446  017A62  50E3               	movf	plusw1,w,c
 20447  017A64  5ADE               	subwfb	postinc2,f,c
 20448  017A66  0EF0               	movlw	-16
 20449  017A68  50E3               	movf	plusw1,w,c
 20450  017A6A  5ADE               	subwfb	postinc2,f,c
 20451  017A6C  0EF1               	movlw	-15
 20452  017A6E  50E3               	movf	plusw1,w,c
 20453  017A70  5ADE               	subwfb	postinc2,f,c
 20454  017A72  0EF2               	movlw	-14
 20455  017A74  50E3               	movf	plusw1,w,c
 20456  017A76  5ADE               	subwfb	postinc2,f,c
 20457  017A78  0EF3               	movlw	-13
 20458  017A7A  50E3               	movf	plusw1,w,c
 20459  017A7C  5ADE               	subwfb	postinc2,f,c
 20460  017A7E  0EF4               	movlw	-12
 20461  017A80  50E3               	movf	plusw1,w,c
 20462  017A82  5ADE               	subwfb	postinc2,f,c
 20463  017A84  0EF5               	movlw	-11
 20464  017A86  50E3               	movf	plusw1,w,c
 20465  017A88  5ADE               	subwfb	postinc2,f,c
 20466  017A8A                     l8061:
 20467                           
 20468                           ;stkvar	_divisor @ sp[(-2)+-16]
 20469  017A8A  90D8               	bcf	status,0,c
 20470  017A8C  0EF5               	movlw	-11
 20471  017A8E  32E3               	rrcf	plusw1,f,c
 20472  017A90  0EF4               	movlw	-12
 20473  017A92  32E3               	rrcf	plusw1,f,c
 20474  017A94  0EF3               	movlw	-13
 20475  017A96  32E3               	rrcf	plusw1,f,c
 20476  017A98  0EF2               	movlw	-14
 20477  017A9A  32E3               	rrcf	plusw1,f,c
 20478  017A9C  0EF1               	movlw	-15
 20479  017A9E  32E3               	rrcf	plusw1,f,c
 20480  017AA0  0EF0               	movlw	-16
 20481  017AA2  32E3               	rrcf	plusw1,f,c
 20482  017AA4  0EEF               	movlw	-17
 20483  017AA6  32E3               	rrcf	plusw1,f,c
 20484  017AA8  0EEE               	movlw	-18
 20485  017AAA  32E3               	rrcf	plusw1,f,c
 20486                           
 20487                           ;stkvar	_counter @ sp[(-2)+1]
 20488  017AAC  0EFF               	movlw	-1
 20489  017AAE  50E3               	movf	plusw1,w,c
 20490  017AB0  6E01               	movwf	btemp^0,c
 20491  017AB2  0E01               	movlw	1
 20492  017AB4  5E01               	subwf	btemp^0,f,c
 20493  017AB6  0EFF               	movlw	-1
 20494  017AB8  0060  F007  FFE3   	movff	btemp,plusw1
 20495  017ABE  A4D8               	btfss	status,2,c
 20496  017AC0  D7A4               	goto	u6380
 20497  017AC2                     u6400:
 20498                           
 20499                           ;stkvar	_sign @ sp[(-2)+0]
 20500  017AC2  0EFE               	movlw	-2
 20501  017AC4  50E3               	movf	plusw1,w,c
 20502  017AC6  B4D8               	btfsc	status,2,c
 20503  017AC8  D025               	goto	u6420
 20504                           
 20505                           ;stkvar	_dividend @ sp[(-2)+-8]
 20506                           ;stkvar	_dividend @ sp[(-2)+-8]
 20507  017ACA  0EF6               	movlw	-10
 20508  017ACC  6CE3               	negf	plusw1,c
 20509  017ACE  0EF7               	movlw	-9
 20510  017AD0  1EE3               	comf	plusw1,f,c
 20511  017AD2  0EF8               	movlw	-8
 20512  017AD4  1EE3               	comf	plusw1,f,c
 20513  017AD6  0EF9               	movlw	-7
 20514  017AD8  1EE3               	comf	plusw1,f,c
 20515  017ADA  0EFA               	movlw	-6
 20516  017ADC  1EE3               	comf	plusw1,f,c
 20517  017ADE  0EFB               	movlw	-5
 20518  017AE0  1EE3               	comf	plusw1,f,c
 20519  017AE2  0EFC               	movlw	-4
 20520  017AE4  1EE3               	comf	plusw1,f,c
 20521  017AE6  0EFD               	movlw	-3
 20522  017AE8  1EE3               	comf	plusw1,f,c
 20523  017AEA  E314               	bnc	u6420
 20524  017AEC  0EF7               	movlw	-9
 20525  017AEE  2AE3               	incf	plusw1,f,c
 20526  017AF0  E311               	bnc	u6420
 20527  017AF2  0EF8               	movlw	-8
 20528  017AF4  2AE3               	incf	plusw1,f,c
 20529  017AF6  E30E               	bnc	u6420
 20530  017AF8  0EF9               	movlw	-7
 20531  017AFA  2AE3               	incf	plusw1,f,c
 20532  017AFC  E30B               	bnc	u6420
 20533  017AFE  0EFA               	movlw	-6
 20534  017B00  2AE3               	incf	plusw1,f,c
 20535  017B02  E308               	bnc	u6420
 20536  017B04  0EFB               	movlw	-5
 20537  017B06  2AE3               	incf	plusw1,f,c
 20538  017B08  E305               	bnc	u6420
 20539  017B0A  0EFC               	movlw	-4
 20540  017B0C  2AE3               	incf	plusw1,f,c
 20541  017B0E  E302               	bnc	u6420
 20542  017B10  0EFD               	movlw	-3
 20543  017B12  2AE3               	incf	plusw1,f,c
 20544  017B14                     u6420:
 20545                           
 20546                           ;stkvar	_dividend @ sp[(-2)+-8]
 20547  017B14  0EF6               	movlw	246
 20548  017B16  24E1               	addwf	fsr1l,w,c
 20549  017B18  6ED9               	movwf	fsr2l,c
 20550  017B1A  0EFF               	movlw	255
 20551  017B1C  20E2               	addwfc	fsr1h,w,c
 20552  017B1E  6EDA               	movwf	fsr2h,c
 20553                           
 20554                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20555  017B20  0E08               	movlw	8
 20556  017B22  6E01               	movwf	btemp^0,c
 20557  017B24  0EF6               	movlw	-10
 20558  017B26                     us643999:
 20559  017B26  006F FF7B FFE3     	movff	postinc2,plusw1
 20560  017B2C  28E8               	incf	wreg,w,c
 20561  017B2E  2E01               	decfsz	btemp^0,f,c
 20562  017B30  D7FA               	bra	us643999
 20563                           
 20564                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20565  017B32  52E5               	movf	postdec1,f,c
 20566  017B34  52E5               	movf	postdec1,f,c
 20567  017B36  0012               	return		;funcret
 20568  017B38                     __end_of___aomod:
 20569                           	opt callstack 0
 20570                           
 20571 ;; *************** function ___aodiv *****************
 20572 ;; Defined at:
 20573 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20574 ;; Parameters:    Size  Location     Type
 20575 ;;  dividend        8  [STACK] long long 
 20576 ;;  divisor         8  [STACK] long long 
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;  quotient        8  [STACK] long long 
 20579 ;;  sign            1  [STACK] unsigned char 
 20580 ;;  counter         1  [STACK] unsigned char 
 20581 ;; Return value:  Size  Location     Type
 20582 ;;                  8  [STACK] long long 
 20583 ;; Registers used:
 20584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20585 ;; Tracked objects:
 20586 ;;		On entry : 0/2
 20587 ;;		On exit  : 0/0
 20588 ;;		Unchanged: 0/0
 20589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20594 ;;Total ram usage:        0 bytes
 20595 ;; Hardware stack levels used:    1
 20596 ;; Hardware stack levels required when called:   15
 20597 ;; This function calls:
 20598 ;;		Nothing
 20599 ;; This function is called by:
 20600 ;;		_dtoa
 20601 ;; This function uses a reentrant model
 20602 ;;
 20603                           
 20604                           	psect	text69
 20605  017404                     __ptext69:
 20606                           	opt callstack 0
 20607  017404                     ___aodiv:
 20608                           	opt callstack 0
 20609                           
 20610                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20611  017404  0E0A               	movlw	10
 20612  017406  26E1               	addwf	fsr1l,f,c
 20613  017408  0E00               	movlw	0
 20614  01740A  22E2               	addwfc	fsr1h,f,c
 20615                           
 20616                           ;stkvar	_sign @ sp[(-10)+8]
 20617                           
 20618                           ;incstack = 0
 20619 ;; hardware stack exceeded
 20620  01740C  0EFE               	movlw	-2
 20621  01740E  6AE3               	clrf	plusw1,c
 20622                           
 20623                           ;stkvar	_divisor @ sp[(-10)+-16]
 20624  017410  0EED               	movlw	-19
 20625  017412  AEE3               	btfss	plusw1,7,c
 20626  017414  D028               	goto	l8001
 20627                           
 20628                           ;stkvar	_divisor @ sp[(-10)+-16]
 20629                           ;stkvar	_divisor @ sp[(-10)+-16]
 20630  017416  0EE6               	movlw	-26
 20631  017418  6CE3               	negf	plusw1,c
 20632  01741A  0EE7               	movlw	-25
 20633  01741C  1EE3               	comf	plusw1,f,c
 20634  01741E  0EE8               	movlw	-24
 20635  017420  1EE3               	comf	plusw1,f,c
 20636  017422  0EE9               	movlw	-23
 20637  017424  1EE3               	comf	plusw1,f,c
 20638  017426  0EEA               	movlw	-22
 20639  017428  1EE3               	comf	plusw1,f,c
 20640  01742A  0EEB               	movlw	-21
 20641  01742C  1EE3               	comf	plusw1,f,c
 20642  01742E  0EEC               	movlw	-20
 20643  017430  1EE3               	comf	plusw1,f,c
 20644  017432  0EED               	movlw	-19
 20645  017434  1EE3               	comf	plusw1,f,c
 20646  017436  E314               	bnc	u6220
 20647  017438  0EE7               	movlw	-25
 20648  01743A  2AE3               	incf	plusw1,f,c
 20649  01743C  E311               	bnc	u6220
 20650  01743E  0EE8               	movlw	-24
 20651  017440  2AE3               	incf	plusw1,f,c
 20652  017442  E30E               	bnc	u6220
 20653  017444  0EE9               	movlw	-23
 20654  017446  2AE3               	incf	plusw1,f,c
 20655  017448  E30B               	bnc	u6220
 20656  01744A  0EEA               	movlw	-22
 20657  01744C  2AE3               	incf	plusw1,f,c
 20658  01744E  E308               	bnc	u6220
 20659  017450  0EEB               	movlw	-21
 20660  017452  2AE3               	incf	plusw1,f,c
 20661  017454  E305               	bnc	u6220
 20662  017456  0EEC               	movlw	-20
 20663  017458  2AE3               	incf	plusw1,f,c
 20664  01745A  E302               	bnc	u6220
 20665  01745C  0EED               	movlw	-19
 20666  01745E  2AE3               	incf	plusw1,f,c
 20667  017460                     u6220:
 20668                           
 20669                           ;stkvar	_sign @ sp[(-10)+8]
 20670  017460  0EFE               	movlw	-2
 20671  017462  6AE3               	clrf	plusw1,c
 20672  017464  2AE3               	incf	plusw1,f,c
 20673  017466                     l8001:
 20674                           
 20675                           ;stkvar	_dividend @ sp[(-10)+-8]
 20676  017466  0EF5               	movlw	-11
 20677  017468  AEE3               	btfss	plusw1,7,c
 20678  01746A  D027               	goto	l8007
 20679                           
 20680                           ;stkvar	_dividend @ sp[(-10)+-8]
 20681                           ;stkvar	_dividend @ sp[(-10)+-8]
 20682  01746C  0EEE               	movlw	-18
 20683  01746E  6CE3               	negf	plusw1,c
 20684  017470  0EEF               	movlw	-17
 20685  017472  1EE3               	comf	plusw1,f,c
 20686  017474  0EF0               	movlw	-16
 20687  017476  1EE3               	comf	plusw1,f,c
 20688  017478  0EF1               	movlw	-15
 20689  01747A  1EE3               	comf	plusw1,f,c
 20690  01747C  0EF2               	movlw	-14
 20691  01747E  1EE3               	comf	plusw1,f,c
 20692  017480  0EF3               	movlw	-13
 20693  017482  1EE3               	comf	plusw1,f,c
 20694  017484  0EF4               	movlw	-12
 20695  017486  1EE3               	comf	plusw1,f,c
 20696  017488  0EF5               	movlw	-11
 20697  01748A  1EE3               	comf	plusw1,f,c
 20698  01748C  E314               	bnc	u6240
 20699  01748E  0EEF               	movlw	-17
 20700  017490  2AE3               	incf	plusw1,f,c
 20701  017492  E311               	bnc	u6240
 20702  017494  0EF0               	movlw	-16
 20703  017496  2AE3               	incf	plusw1,f,c
 20704  017498  E30E               	bnc	u6240
 20705  01749A  0EF1               	movlw	-15
 20706  01749C  2AE3               	incf	plusw1,f,c
 20707  01749E  E30B               	bnc	u6240
 20708  0174A0  0EF2               	movlw	-14
 20709  0174A2  2AE3               	incf	plusw1,f,c
 20710  0174A4  E308               	bnc	u6240
 20711  0174A6  0EF3               	movlw	-13
 20712  0174A8  2AE3               	incf	plusw1,f,c
 20713  0174AA  E305               	bnc	u6240
 20714  0174AC  0EF4               	movlw	-12
 20715  0174AE  2AE3               	incf	plusw1,f,c
 20716  0174B0  E302               	bnc	u6240
 20717  0174B2  0EF5               	movlw	-11
 20718  0174B4  2AE3               	incf	plusw1,f,c
 20719  0174B6                     u6240:
 20720                           
 20721                           ;stkvar	_sign @ sp[(-10)+8]
 20722  0174B6  0EFE               	movlw	-2
 20723  0174B8  70E3               	btg	plusw1,0,c
 20724  0174BA                     l8007:
 20725                           
 20726                           ;stkvar	_quotient @ sp[(-10)+0]
 20727  0174BA  0E07               	movlw	7
 20728  0174BC  6E01               	movwf	btemp^0,c
 20729  0174BE  0EF6               	movlw	-10
 20730  0174C0                     u6251:
 20731  0174C0  6AE3               	clrf	plusw1,c
 20732  0174C2  2AE8               	incf	wreg,f,c
 20733  0174C4  0601               	decf	btemp^0,f,c
 20734  0174C6  E2FC               	bc	u6251
 20735                           
 20736                           ;stkvar	_divisor @ sp[(-10)+-16]
 20737  0174C8  0EE6               	movlw	-26
 20738  0174CA  50E3               	movf	plusw1,w,c
 20739  0174CC  E116               	bnz	u6260
 20740  0174CE  0EE7               	movlw	-25
 20741  0174D0  50E3               	movf	plusw1,w,c
 20742  0174D2  E113               	bnz	u6260
 20743  0174D4  0EE8               	movlw	-24
 20744  0174D6  50E3               	movf	plusw1,w,c
 20745  0174D8  E110               	bnz	u6260
 20746  0174DA  0EE9               	movlw	-23
 20747  0174DC  50E3               	movf	plusw1,w,c
 20748  0174DE  E10D               	bnz	u6260
 20749  0174E0  0EEA               	movlw	-22
 20750  0174E2  50E3               	movf	plusw1,w,c
 20751  0174E4  E10A               	bnz	u6260
 20752  0174E6  0EEB               	movlw	-21
 20753  0174E8  50E3               	movf	plusw1,w,c
 20754  0174EA  E107               	bnz	u6260
 20755  0174EC  0EEC               	movlw	-20
 20756  0174EE  50E3               	movf	plusw1,w,c
 20757  0174F0  E104               	bnz	u6260
 20758  0174F2  0EED               	movlw	-19
 20759  0174F4  50E3               	movf	plusw1,w,c
 20760  0174F6  B4D8               	btfsc	status,2,c
 20761  0174F8  D088               	goto	u6290
 20762  0174FA                     u6260:
 20763                           
 20764                           ;stkvar	_counter @ sp[(-10)+9]
 20765  0174FA  0EFF               	movlw	-1
 20766  0174FC  6AE3               	clrf	plusw1,c
 20767  0174FE  D012               	goto	L26
 20768  017500                     l8013:
 20769                           
 20770                           ;stkvar	_divisor @ sp[(-10)+-16]
 20771  017500  90D8               	bcf	status,0,c
 20772  017502  0EE6               	movlw	-26
 20773  017504  36E3               	rlcf	plusw1,f,c
 20774  017506  0EE7               	movlw	-25
 20775  017508  36E3               	rlcf	plusw1,f,c
 20776  01750A  0EE8               	movlw	-24
 20777  01750C  36E3               	rlcf	plusw1,f,c
 20778  01750E  0EE9               	movlw	-23
 20779  017510  36E3               	rlcf	plusw1,f,c
 20780  017512  0EEA               	movlw	-22
 20781  017514  36E3               	rlcf	plusw1,f,c
 20782  017516  0EEB               	movlw	-21
 20783  017518  36E3               	rlcf	plusw1,f,c
 20784  01751A  0EEC               	movlw	-20
 20785  01751C  36E3               	rlcf	plusw1,f,c
 20786  01751E  0EED               	movlw	-19
 20787  017520  36E3               	rlcf	plusw1,f,c
 20788                           
 20789                           ;stkvar	_counter @ sp[(-10)+9]
 20790  017522  0EFF               	movlw	-1
 20791  017524                     L26:
 20792  017524  2AE3               	incf	plusw1,f,c
 20793                           
 20794                           ;stkvar	_divisor @ sp[(-10)+-16]
 20795  017526  0EED               	movlw	-19
 20796  017528  AEE3               	btfss	plusw1,7,c
 20797  01752A  D7EA               	goto	l8013
 20798  01752C                     u6270:
 20799                           
 20800                           ;stkvar	_quotient @ sp[(-10)+0]
 20801  01752C  90D8               	bcf	status,0,c
 20802  01752E  0EF6               	movlw	-10
 20803  017530  36E3               	rlcf	plusw1,f,c
 20804  017532  0EF7               	movlw	-9
 20805  017534  36E3               	rlcf	plusw1,f,c
 20806  017536  0EF8               	movlw	-8
 20807  017538  36E3               	rlcf	plusw1,f,c
 20808  01753A  0EF9               	movlw	-7
 20809  01753C  36E3               	rlcf	plusw1,f,c
 20810  01753E  0EFA               	movlw	-6
 20811  017540  36E3               	rlcf	plusw1,f,c
 20812  017542  0EFB               	movlw	-5
 20813  017544  36E3               	rlcf	plusw1,f,c
 20814  017546  0EFC               	movlw	-4
 20815  017548  36E3               	rlcf	plusw1,f,c
 20816  01754A  0EFD               	movlw	-3
 20817  01754C  36E3               	rlcf	plusw1,f,c
 20818                           
 20819                           ;stkvar	_divisor @ sp[(-10)+-16]
 20820                           ;stkvar	_dividend @ sp[(-10)+-8]
 20821  01754E  50E1               	movf	fsr1l,w,c
 20822  017550  0FEE               	addlw	-18
 20823  017552  6ED9               	movwf	fsr2l,c
 20824  017554  50E2               	movf	fsr1h,w,c
 20825  017556  6EDA               	movwf	fsr2h,c
 20826  017558  0EFF               	movlw	255
 20827  01755A  22DA               	addwfc	fsr2h,f,c
 20828  01755C  0EE6               	movlw	-26
 20829  01755E  50E3               	movf	plusw1,w,c
 20830  017560  5CDE               	subwf	postinc2,w,c
 20831  017562  0EE7               	movlw	-25
 20832  017564  50E3               	movf	plusw1,w,c
 20833  017566  58DE               	subwfb	postinc2,w,c
 20834  017568  0EE8               	movlw	-24
 20835  01756A  50E3               	movf	plusw1,w,c
 20836  01756C  58DE               	subwfb	postinc2,w,c
 20837  01756E  0EE9               	movlw	-23
 20838  017570  50E3               	movf	plusw1,w,c
 20839  017572  58DE               	subwfb	postinc2,w,c
 20840  017574  0EEA               	movlw	-22
 20841  017576  50E3               	movf	plusw1,w,c
 20842  017578  58DE               	subwfb	postinc2,w,c
 20843  01757A  0EEB               	movlw	-21
 20844  01757C  50E3               	movf	plusw1,w,c
 20845  01757E  58DE               	subwfb	postinc2,w,c
 20846  017580  0EEC               	movlw	-20
 20847  017582  50E3               	movf	plusw1,w,c
 20848  017584  58DE               	subwfb	postinc2,w,c
 20849  017586  0EED               	movlw	-19
 20850  017588  50E3               	movf	plusw1,w,c
 20851  01758A  58DE               	subwfb	postinc2,w,c
 20852  01758C  A0D8               	btfss	status,0,c
 20853  01758E  D021               	goto	l8025
 20854                           
 20855                           ;stkvar	_divisor @ sp[(-10)+-16]
 20856                           ;stkvar	_dividend @ sp[(-10)+-8]
 20857  017590  50E1               	movf	fsr1l,w,c
 20858  017592  0FEE               	addlw	-18
 20859  017594  6ED9               	movwf	fsr2l,c
 20860  017596  50E2               	movf	fsr1h,w,c
 20861  017598  6EDA               	movwf	fsr2h,c
 20862  01759A  0EFF               	movlw	255
 20863  01759C  22DA               	addwfc	fsr2h,f,c
 20864  01759E  0EE6               	movlw	-26
 20865  0175A0  50E3               	movf	plusw1,w,c
 20866  0175A2  5EDE               	subwf	postinc2,f,c
 20867  0175A4  0EE7               	movlw	-25
 20868  0175A6  50E3               	movf	plusw1,w,c
 20869  0175A8  5ADE               	subwfb	postinc2,f,c
 20870  0175AA  0EE8               	movlw	-24
 20871  0175AC  50E3               	movf	plusw1,w,c
 20872  0175AE  5ADE               	subwfb	postinc2,f,c
 20873  0175B0  0EE9               	movlw	-23
 20874  0175B2  50E3               	movf	plusw1,w,c
 20875  0175B4  5ADE               	subwfb	postinc2,f,c
 20876  0175B6  0EEA               	movlw	-22
 20877  0175B8  50E3               	movf	plusw1,w,c
 20878  0175BA  5ADE               	subwfb	postinc2,f,c
 20879  0175BC  0EEB               	movlw	-21
 20880  0175BE  50E3               	movf	plusw1,w,c
 20881  0175C0  5ADE               	subwfb	postinc2,f,c
 20882  0175C2  0EEC               	movlw	-20
 20883  0175C4  50E3               	movf	plusw1,w,c
 20884  0175C6  5ADE               	subwfb	postinc2,f,c
 20885  0175C8  0EED               	movlw	-19
 20886  0175CA  50E3               	movf	plusw1,w,c
 20887  0175CC  5ADE               	subwfb	postinc2,f,c
 20888                           
 20889                           ;stkvar	_quotient @ sp[(-10)+0]
 20890  0175CE  0EF6               	movlw	-10
 20891  0175D0  80E3               	bsf	plusw1,0,c
 20892  0175D2                     l8025:
 20893                           
 20894                           ;stkvar	_divisor @ sp[(-10)+-16]
 20895  0175D2  90D8               	bcf	status,0,c
 20896  0175D4  0EED               	movlw	-19
 20897  0175D6  32E3               	rrcf	plusw1,f,c
 20898  0175D8  0EEC               	movlw	-20
 20899  0175DA  32E3               	rrcf	plusw1,f,c
 20900  0175DC  0EEB               	movlw	-21
 20901  0175DE  32E3               	rrcf	plusw1,f,c
 20902  0175E0  0EEA               	movlw	-22
 20903  0175E2  32E3               	rrcf	plusw1,f,c
 20904  0175E4  0EE9               	movlw	-23
 20905  0175E6  32E3               	rrcf	plusw1,f,c
 20906  0175E8  0EE8               	movlw	-24
 20907  0175EA  32E3               	rrcf	plusw1,f,c
 20908  0175EC  0EE7               	movlw	-25
 20909  0175EE  32E3               	rrcf	plusw1,f,c
 20910  0175F0  0EE6               	movlw	-26
 20911  0175F2  32E3               	rrcf	plusw1,f,c
 20912                           
 20913                           ;stkvar	_counter @ sp[(-10)+9]
 20914  0175F4  0EFF               	movlw	-1
 20915  0175F6  50E3               	movf	plusw1,w,c
 20916  0175F8  6E01               	movwf	btemp^0,c
 20917  0175FA  0E01               	movlw	1
 20918  0175FC  5E01               	subwf	btemp^0,f,c
 20919  0175FE  0EFF               	movlw	-1
 20920  017600  0060  F007  FFE3   	movff	btemp,plusw1
 20921  017606  A4D8               	btfss	status,2,c
 20922  017608  D791               	goto	u6270
 20923  01760A                     u6290:
 20924                           
 20925                           ;stkvar	_sign @ sp[(-10)+8]
 20926  01760A  0EFE               	movlw	-2
 20927  01760C  50E3               	movf	plusw1,w,c
 20928  01760E  B4D8               	btfsc	status,2,c
 20929  017610  D025               	goto	u6310
 20930                           
 20931                           ;stkvar	_quotient @ sp[(-10)+0]
 20932                           ;stkvar	_quotient @ sp[(-10)+0]
 20933  017612  0EF6               	movlw	-10
 20934  017614  6CE3               	negf	plusw1,c
 20935  017616  0EF7               	movlw	-9
 20936  017618  1EE3               	comf	plusw1,f,c
 20937  01761A  0EF8               	movlw	-8
 20938  01761C  1EE3               	comf	plusw1,f,c
 20939  01761E  0EF9               	movlw	-7
 20940  017620  1EE3               	comf	plusw1,f,c
 20941  017622  0EFA               	movlw	-6
 20942  017624  1EE3               	comf	plusw1,f,c
 20943  017626  0EFB               	movlw	-5
 20944  017628  1EE3               	comf	plusw1,f,c
 20945  01762A  0EFC               	movlw	-4
 20946  01762C  1EE3               	comf	plusw1,f,c
 20947  01762E  0EFD               	movlw	-3
 20948  017630  1EE3               	comf	plusw1,f,c
 20949  017632  E314               	bnc	u6310
 20950  017634  0EF7               	movlw	-9
 20951  017636  2AE3               	incf	plusw1,f,c
 20952  017638  E311               	bnc	u6310
 20953  01763A  0EF8               	movlw	-8
 20954  01763C  2AE3               	incf	plusw1,f,c
 20955  01763E  E30E               	bnc	u6310
 20956  017640  0EF9               	movlw	-7
 20957  017642  2AE3               	incf	plusw1,f,c
 20958  017644  E30B               	bnc	u6310
 20959  017646  0EFA               	movlw	-6
 20960  017648  2AE3               	incf	plusw1,f,c
 20961  01764A  E308               	bnc	u6310
 20962  01764C  0EFB               	movlw	-5
 20963  01764E  2AE3               	incf	plusw1,f,c
 20964  017650  E305               	bnc	u6310
 20965  017652  0EFC               	movlw	-4
 20966  017654  2AE3               	incf	plusw1,f,c
 20967  017656  E302               	bnc	u6310
 20968  017658  0EFD               	movlw	-3
 20969  01765A  2AE3               	incf	plusw1,f,c
 20970  01765C                     u6310:
 20971                           
 20972                           ;stkvar	_quotient @ sp[(-10)+0]
 20973  01765C  0EF6               	movlw	246
 20974  01765E  24E1               	addwf	fsr1l,w,c
 20975  017660  6ED9               	movwf	fsr2l,c
 20976  017662  0EFF               	movlw	255
 20977  017664  20E2               	addwfc	fsr1h,w,c
 20978  017666  6EDA               	movwf	fsr2h,c
 20979                           
 20980                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20981  017668  0E08               	movlw	8
 20982  01766A  6E01               	movwf	btemp^0,c
 20983  01766C  0EEE               	movlw	-18
 20984  01766E                     us632999:
 20985  01766E  006F FF7B FFE3     	movff	postinc2,plusw1
 20986  017674  28E8               	incf	wreg,w,c
 20987  017676  2E01               	decfsz	btemp^0,f,c
 20988  017678  D7FA               	bra	us632999
 20989                           
 20990                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20991  01767A  0EF6               	movlw	246
 20992  01767C  26E1               	addwf	fsr1l,f,c
 20993  01767E  0EFF               	movlw	255
 20994  017680  22E2               	addwfc	fsr1h,f,c
 20995  017682  0012               	return		;funcret
 20996  017684                     __end_of___aodiv:
 20997                           	opt callstack 0
 20998                           
 20999 ;; *************** function _ctoa *****************
 21000 ;; Defined at:
 21001 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21002 ;; Parameters:    Size  Location     Type
 21003 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21004 ;;		 -> f(6), NULL(0), 
 21005 ;;  c               1  [STACK] unsigned char 
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;  w               2  [STACK] int 
 21008 ;;  l               2    0        int 
 21009 ;; Return value:  Size  Location     Type
 21010 ;;                  2  [STACK] int 
 21011 ;; Registers used:
 21012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21013 ;; Tracked objects:
 21014 ;;		On entry : 0/0
 21015 ;;		On exit  : 0/0
 21016 ;;		Unchanged: 0/0
 21017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21022 ;;Total ram usage:        0 bytes
 21023 ;; Hardware stack levels used:    1
 21024 ;; Hardware stack levels required when called:   20
 21025 ;; This function calls:
 21026 ;;		_pad
 21027 ;; This function is called by:
 21028 ;;		_vfpfcnvrt
 21029 ;; This function uses a reentrant model
 21030 ;;
 21031                           
 21032                           	psect	text70
 21033  01A8B0                     __ptext70:
 21034                           	opt callstack 0
 21035  01A8B0                     _ctoa:
 21036                           	opt callstack 0
 21037                           
 21038                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21039  01A8B0  52E6               	movf	postinc1,f,c
 21040  01A8B2  52E6               	movf	postinc1,f,c
 21041                           
 21042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21043                           
 21044                           ;incstack = 0
 21045 ;; hardware stack exceeded
 21046  01A8B4  503A               	movf	_width^0,w,c
 21047  01A8B6  103B               	iorwf	(_width+1)^0,w,c
 21048  01A8B8  A4D8               	btfss	status,2,c
 21049  01A8BA  D009               	goto	l11735
 21050                           
 21051                           ;stkvar	_w @ sp[(-2)+0]
 21052  01A8BC  0EFE               	movlw	-2
 21053  01A8BE  0060  F0EB  FFE3   	movff	_width,plusw1
 21054  01A8C4  0EFF               	movlw	-1
 21055  01A8C6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21056  01A8CC  D016               	goto	l11737
 21057  01A8CE                     l11735:
 21058  01A8CE  0EFF               	movlw	255
 21059  01A8D0  6E0B               	movwf	(btemp+10)^0,c
 21060  01A8D2  0EFF               	movlw	255
 21061  01A8D4  6E0C               	movwf	(btemp+11)^0,c
 21062  01A8D6  0060  F0E8  F009   	movff	_width,btemp+8
 21063  01A8DC  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21064  01A8E2  500B               	movf	(btemp+10)^0,w,c
 21065  01A8E4  2609               	addwf	(btemp+8)^0,f,c
 21066  01A8E6  500C               	movf	(btemp+11)^0,w,c
 21067  01A8E8  220A               	addwfc	(btemp+9)^0,f,c
 21068                           
 21069                           ;stkvar	_w @ sp[(-2)+0]
 21070  01A8EA  0EFE               	movlw	-2
 21071  01A8EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21072  01A8F2  0EFF               	movlw	-1
 21073  01A8F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21074  01A8FA                     l11737:
 21075                           
 21076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21077                           ;stkvar	_c @ sp[(-2)+-3]
 21078  01A8FA  0EFB               	movlw	-5
 21079  01A8FC  006F FF8C  F297    	movff	plusw1,_dbuf
 21080                           
 21081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21082  01A902  0102               	movlb	2	; () banked
 21083  01A904  6B98               	clrf	(_dbuf+1)& (0+255),b
 21084                           
 21085                           ; BSR set to: 2
 21086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21087                           ;stkvar	_w @ sp[(-2)+0]
 21088  01A906  0EFE               	movlw	-2
 21089  01A908  006F FF8F FFE6     	movff	plusw1,postinc1
 21090  01A90E  006F FF8F FFE6     	movff	plusw1,postinc1
 21091  01A914  0E97               	movlw	low _dbuf
 21092  01A916  6EE6               	movwf	postinc1,c
 21093  01A918  0E02               	movlw	high _dbuf
 21094  01A91A  6EE6               	movwf	postinc1,c
 21095                           
 21096                           ;stkvar	_fp @ sp[(-6)+-2]
 21097  01A91C  0EF8               	movlw	-8
 21098  01A91E  006F FF8F FFE6     	movff	plusw1,postinc1
 21099  01A924  006F FF8F FFE6     	movff	plusw1,postinc1
 21100  01A92A  EC0F  F0CC         	call	_pad	;wreg free
 21101                           
 21102                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21103  01A92E  0EFB               	movlw	251
 21104  01A930  26E1               	addwf	fsr1l,f,c
 21105  01A932  0EFF               	movlw	255
 21106  01A934  22E2               	addwfc	fsr1h,f,c
 21107  01A936  0012               	return		;funcret
 21108  01A938                     __end_of_ctoa:
 21109                           	opt callstack 0
 21110                           
 21111 ;; *************** function _pad *****************
 21112 ;; Defined at:
 21113 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21114 ;; Parameters:    Size  Location     Type
 21115 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21116 ;;		 -> f(6), NULL(0), 
 21117 ;;  buf             2  [STACK] PTR unsigned char 
 21118 ;;		 -> dbuf(80), 
 21119 ;;  p               2  [STACK] int 
 21120 ;; Auto vars:     Size  Location     Type
 21121 ;;  w               2  [STACK] int 
 21122 ;;  i               2  [STACK] int 
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  2  [STACK] int 
 21125 ;; Registers used:
 21126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/2
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21136 ;;Total ram usage:        0 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:   19
 21139 ;; This function calls:
 21140 ;;		_fputc
 21141 ;;		_fputs
 21142 ;;		_strlen
 21143 ;; This function is called by:
 21144 ;;		_ctoa
 21145 ;;		_dtoa
 21146 ;;		_efgtoa
 21147 ;;		_utoa
 21148 ;;		_xtoa
 21149 ;; This function uses a reentrant model
 21150 ;;
 21151                           
 21152                           	psect	text71
 21153  01981E                     __ptext71:
 21154                           	opt callstack 0
 21155  01981E                     _pad:
 21156                           	opt callstack 0
 21157                           
 21158                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21159  01981E  52E6               	movf	postinc1,f,c
 21160  019820  52E6               	movf	postinc1,f,c
 21161  019822  52E6               	movf	postinc1,f,c
 21162  019824  52E6               	movf	postinc1,f,c
 21163                           
 21164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21165                           
 21166                           ;incstack = 0
 21167 ;; hardware stack exceeded
 21168  019826  A03E               	btfss	_flags^0,0,c
 21169  019828  D010               	goto	l11667
 21170                           
 21171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21172                           ;stkvar	_fp @ sp[(-4)+-2]
 21173  01982A  0EFA               	movlw	-6
 21174  01982C  006F FF8F FFE6     	movff	plusw1,postinc1
 21175  019832  006F FF8F FFE6     	movff	plusw1,postinc1
 21176                           
 21177                           ;stkvar	_buf @ sp[(-6)+-4]
 21178  019838  0EF6               	movlw	-10
 21179  01983A  006F FF8F FFE6     	movff	plusw1,postinc1
 21180  019840  006F FF8F FFE6     	movff	plusw1,postinc1
 21181  019846  EC31  F0D3         	call	_fputs	;wreg free
 21182  01984A                     l11667:
 21183                           
 21184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21185                           ;stkvar	_p @ sp[(-4)+-6]
 21186  01984A  0EF7               	movlw	-9
 21187  01984C  BEE3               	btfsc	plusw1,7,c
 21188  01984E  D011               	goto	l11671
 21189                           
 21190                           ;stkvar	_p @ sp[(-4)+-6]
 21191                           ;stkvar	_w @ sp[(-4)+0]
 21192  019850  0EF6               	movlw	-10
 21193  019852  006F FF8C  F001    	movff	plusw1,btemp
 21194  019858  0EFC               	movlw	-4
 21195  01985A  0060  F007  FFE3   	movff	btemp,plusw1
 21196  019860  0EF7               	movlw	-9
 21197  019862  006F FF8C  F001    	movff	plusw1,btemp
 21198  019868  0EFD               	movlw	-3
 21199  01986A  0060  F007  FFE3   	movff	btemp,plusw1
 21200  019870  D004               	goto	l2143
 21201  019872                     l11671:
 21202                           
 21203                           ;stkvar	_w @ sp[(-4)+0]
 21204  019872  0EFC               	movlw	-4
 21205  019874  6AE3               	clrf	plusw1,c
 21206  019876  0EFD               	movlw	-3
 21207  019878  6AE3               	clrf	plusw1,c
 21208  01987A                     l2143:
 21209                           
 21210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21211                           ;stkvar	_i @ sp[(-4)+2]
 21212  01987A  0EFE               	movlw	-2
 21213  01987C  6AE3               	clrf	plusw1,c
 21214  01987E  0EFF               	movlw	-1
 21215  019880  6AE3               	clrf	plusw1,c
 21216                           
 21217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21218  019882  D01E               	goto	l11677
 21219  019884                     l11673:
 21220                           
 21221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21222                           ;stkvar	_fp @ sp[(-4)+-2]
 21223  019884  0EFA               	movlw	-6
 21224  019886  006F FF8F FFE6     	movff	plusw1,postinc1
 21225  01988C  006F FF8F FFE6     	movff	plusw1,postinc1
 21226  019892  0E20               	movlw	32
 21227  019894  6EE6               	movwf	postinc1,c
 21228  019896  0E00               	movlw	0
 21229  019898  6EE6               	movwf	postinc1,c
 21230  01989A  EC64  F0CA         	call	_fputc	;wreg free
 21231                           
 21232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21233                           ;stkvar	_i @ sp[(-4)+2]
 21234  01989E  0EFE               	movlw	-2
 21235  0198A0  50E3               	movf	plusw1,w,c
 21236  0198A2  0F01               	addlw	1
 21237  0198A4  6E01               	movwf	btemp^0,c
 21238  0198A6  0EFE               	movlw	-2
 21239  0198A8  0060  F007  FFE3   	movff	btemp,plusw1
 21240  0198AE  6A01               	clrf	btemp^0,c
 21241  0198B0  0EFF               	movlw	-1
 21242  0198B2  50E3               	movf	plusw1,w,c
 21243  0198B4  2001               	addwfc	btemp^0,w,c
 21244  0198B6  6E01               	movwf	btemp^0,c
 21245  0198B8  0EFF               	movlw	-1
 21246  0198BA  0060  F007  FFE3   	movff	btemp,plusw1
 21247  0198C0                     l11677:
 21248                           
 21249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21250                           ;stkvar	_w @ sp[(-4)+0]
 21251                           ;stkvar	_i @ sp[(-4)+2]
 21252  0198C0  50E1               	movf	fsr1l,w,c
 21253  0198C2  0FFE               	addlw	-2
 21254  0198C4  6ED9               	movwf	fsr2l,c
 21255  0198C6  50E2               	movf	fsr1h,w,c
 21256  0198C8  6EDA               	movwf	fsr2h,c
 21257  0198CA  0EFF               	movlw	255
 21258  0198CC  22DA               	addwfc	fsr2h,f,c
 21259  0198CE  0EFC               	movlw	-4
 21260  0198D0  50E3               	movf	plusw1,w,c
 21261  0198D2  5CDE               	subwf	postinc2,w,c
 21262  0198D4  50DE               	movf	postinc2,w,c
 21263  0198D6  0A80               	xorlw	128
 21264  0198D8  6E01               	movwf	btemp^0,c
 21265  0198DA  0EFD               	movlw	-3
 21266  0198DC  50E3               	movf	plusw1,w,c
 21267  0198DE  0A80               	xorlw	128
 21268  0198E0  5801               	subwfb	btemp^0,w,c
 21269  0198E2  A0D8               	btfss	status,0,c
 21270  0198E4  D7CF               	goto	l11673
 21271                           
 21272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21273  0198E6  B03E               	btfsc	_flags^0,0,c
 21274  0198E8  D010               	goto	l11681
 21275                           
 21276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21277                           ;stkvar	_fp @ sp[(-4)+-2]
 21278  0198EA  0EFA               	movlw	-6
 21279  0198EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21280  0198F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21281                           
 21282                           ;stkvar	_buf @ sp[(-6)+-4]
 21283  0198F8  0EF6               	movlw	-10
 21284  0198FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21285  019900  006F FF8F FFE6     	movff	plusw1,postinc1
 21286  019906  EC31  F0D3         	call	_fputs	;wreg free
 21287  01990A                     l11681:
 21288                           
 21289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21290                           ;stkvar	_w @ sp[(-4)+0]
 21291                           ;stkvar	_buf @ sp[(-4)+-4]
 21292  01990A  0EF8               	movlw	-8
 21293  01990C  006F FF8F FFE6     	movff	plusw1,postinc1
 21294  019912  006F FF8F FFE6     	movff	plusw1,postinc1
 21295  019918  ECE0  F0D2         	call	_strlen	;wreg free
 21296  01991C  0EFC               	movlw	-4
 21297  01991E  50E3               	movf	plusw1,w,c
 21298  019920  2601               	addwf	btemp^0,f,c
 21299  019922  0EFD               	movlw	-3
 21300  019924  50E3               	movf	plusw1,w,c
 21301  019926  2202               	addwfc	(btemp+1)^0,f,c
 21302                           
 21303                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21304  019928  0EF6               	movlw	246
 21305  01992A  26E1               	addwf	fsr1l,f,c
 21306  01992C  0EFF               	movlw	255
 21307  01992E  22E2               	addwfc	fsr1h,f,c
 21308  019930  0012               	return		;funcret
 21309  019932                     __end_of_pad:
 21310                           	opt callstack 0
 21311                           
 21312 ;; *************** function _strlen *****************
 21313 ;; Defined at:
 21314 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21315 ;; Parameters:    Size  Location     Type
 21316 ;;  s               2  [STACK] PTR const unsigned char 
 21317 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21318 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21319 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21320 ;;		 -> V(191), 
 21321 ;; Auto vars:     Size  Location     Type
 21322 ;;  a               2  [STACK] PTR const unsigned char 
 21323 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21324 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21325 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21326 ;;		 -> V(191), 
 21327 ;; Return value:  Size  Location     Type
 21328 ;;                  2  [STACK] unsigned int 
 21329 ;; Registers used:
 21330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21331 ;; Tracked objects:
 21332 ;;		On entry : 0/0
 21333 ;;		On exit  : 0/0
 21334 ;;		Unchanged: 0/0
 21335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21340 ;;Total ram usage:        0 bytes
 21341 ;; Hardware stack levels used:    1
 21342 ;; Hardware stack levels required when called:   15
 21343 ;; This function calls:
 21344 ;;		Nothing
 21345 ;; This function is called by:
 21346 ;;		_eaDogM_WriteString
 21347 ;;		_spinners
 21348 ;;		_calc_bsoc
 21349 ;;		_pad
 21350 ;;		_stoa
 21351 ;; This function uses a reentrant model
 21352 ;;
 21353                           
 21354                           	psect	text72
 21355  01A5C0                     __ptext72:
 21356                           	opt callstack 0
 21357  01A5C0                     _strlen:
 21358                           	opt callstack 0
 21359                           
 21360                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21361  01A5C0  52E6               	movf	postinc1,f,c
 21362  01A5C2  52E6               	movf	postinc1,f,c
 21363                           
 21364                           ;stkvar	_s @ sp[(-2)+-2]
 21365                           
 21366                           ;incstack = 0
 21367 ;; hardware stack exceeded
 21368  01A5C4  0EFC               	movlw	-4
 21369  01A5C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21370  01A5CC  0EFD               	movlw	-3
 21371  01A5CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21372                           
 21373                           ;stkvar	_a @ sp[(-2)+0]
 21374  01A5D4  0EFF               	movlw	-1
 21375  01A5D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21376  01A5DC  0EFE               	movlw	-2
 21377  01A5DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21378  01A5E4  D011               	goto	l7619
 21379  01A5E6                     l7617:
 21380                           
 21381                           ;stkvar	_s @ sp[(-2)+-2]
 21382  01A5E6  0EFC               	movlw	-4
 21383  01A5E8  50E3               	movf	plusw1,w,c
 21384  01A5EA  0F01               	addlw	1
 21385  01A5EC  6E01               	movwf	btemp^0,c
 21386  01A5EE  0EFC               	movlw	-4
 21387  01A5F0  0060  F007  FFE3   	movff	btemp,plusw1
 21388  01A5F6  6A01               	clrf	btemp^0,c
 21389  01A5F8  0EFD               	movlw	-3
 21390  01A5FA  50E3               	movf	plusw1,w,c
 21391  01A5FC  2001               	addwfc	btemp^0,w,c
 21392  01A5FE  6E01               	movwf	btemp^0,c
 21393  01A600  0EFD               	movlw	-3
 21394  01A602  0060  F007  FFE3   	movff	btemp,plusw1
 21395  01A608                     l7619:
 21396                           
 21397                           ;stkvar	_s @ sp[(-2)+-2]
 21398  01A608  0EFC               	movlw	-4
 21399  01A60A  006F FF8F FFF6     	movff	plusw1,tblptrl
 21400  01A610  0EFD               	movlw	-3
 21401  01A612  006F FF8F FFF7     	movff	plusw1,tblptrh
 21402  01A618  0E00               	movlw	low (__mediumconst shr (0+16))
 21403  01A61A  6EF8               	movwf	tblptru,c
 21404  01A61C  0E1F               	movlw	(high __ramtop+-1)
 21405  01A61E  64F7               	cpfsgt	tblptrh,c
 21406  01A620  D003               	bra	u5387
 21407  01A622  0008               	tblrd		*
 21408  01A624  50F5               	movf	tablat,w,c
 21409  01A626  D007               	bra	u5380
 21410  01A628                     u5387:
 21411  01A628  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21412  01A62E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21413  01A634  50EF               	movf	indf0,w,c
 21414  01A636                     u5380:
 21415  01A636  0900               	iorlw	0
 21416  01A638  A4D8               	btfss	status,2,c
 21417  01A63A  D7D5               	goto	l7617
 21418                           
 21419                           ;stkvar	_a @ sp[(-2)+0]
 21420                           ;stkvar	_s @ sp[(-2)+-2]
 21421  01A63C  0EFC               	movlw	-4
 21422  01A63E  006F FF8C  F001    	movff	plusw1,btemp
 21423  01A644  0EFD               	movlw	-3
 21424  01A646  006F FF8C  F002    	movff	plusw1,btemp+1
 21425  01A64C  0EFE               	movlw	-2
 21426  01A64E  50E3               	movf	plusw1,w,c
 21427  01A650  5E01               	subwf	btemp^0,f,c
 21428  01A652  0EFF               	movlw	-1
 21429  01A654  50E3               	movf	plusw1,w,c
 21430  01A656  5A02               	subwfb	(btemp+1)^0,f,c
 21431                           
 21432                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21433  01A658  52E5               	movf	postdec1,f,c
 21434  01A65A  52E5               	movf	postdec1,f,c
 21435  01A65C  52E5               	movf	postdec1,f,c
 21436  01A65E  52E5               	movf	postdec1,f,c
 21437  01A660  0012               	return		;funcret
 21438  01A662                     __end_of_strlen:
 21439                           	opt callstack 0
 21440                           
 21441 ;; *************** function _fputs *****************
 21442 ;; Defined at:
 21443 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21444 ;; Parameters:    Size  Location     Type
 21445 ;;  s               2  [STACK] PTR const unsigned char 
 21446 ;;		 -> dbuf(80), 
 21447 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21448 ;;		 -> f(6), NULL(0), 
 21449 ;; Auto vars:     Size  Location     Type
 21450 ;;  i               2  [STACK] int 
 21451 ;;  c               1  [STACK] unsigned char 
 21452 ;; Return value:  Size  Location     Type
 21453 ;;                  2  [STACK] int 
 21454 ;; Registers used:
 21455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21456 ;; Tracked objects:
 21457 ;;		On entry : 0/2
 21458 ;;		On exit  : 0/0
 21459 ;;		Unchanged: 0/0
 21460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21465 ;;Total ram usage:        0 bytes
 21466 ;; Hardware stack levels used:    1
 21467 ;; Hardware stack levels required when called:   18
 21468 ;; This function calls:
 21469 ;;		_fputc
 21470 ;; This function is called by:
 21471 ;;		_pad
 21472 ;; This function uses a reentrant model
 21473 ;;
 21474                           
 21475                           	psect	text73
 21476  01A662                     __ptext73:
 21477                           	opt callstack 0
 21478  01A662                     _fputs:
 21479                           	opt callstack 0
 21480                           
 21481                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21482  01A662  52E6               	movf	postinc1,f,c
 21483  01A664  52E6               	movf	postinc1,f,c
 21484  01A666  52E6               	movf	postinc1,f,c
 21485                           
 21486                           ;stkvar	_i @ sp[(-3)+0]
 21487                           
 21488                           ;incstack = 0
 21489 ;; hardware stack exceeded
 21490  01A668  0EFD               	movlw	-3
 21491  01A66A  6AE3               	clrf	plusw1,c
 21492  01A66C  0EFE               	movlw	-2
 21493  01A66E  6AE3               	clrf	plusw1,c
 21494  01A670  D01F               	goto	l11661
 21495  01A672                     l11657:
 21496                           
 21497                           ;stkvar	_fp @ sp[(-3)+-4]
 21498  01A672  0EF9               	movlw	-7
 21499  01A674  006F FF8F FFE6     	movff	plusw1,postinc1
 21500  01A67A  006F FF8F FFE6     	movff	plusw1,postinc1
 21501                           
 21502                           ;stkvar	_c @ sp[(-5)+2]
 21503  01A680  0EFD               	movlw	-3
 21504  01A682  50E3               	movf	plusw1,w,c
 21505  01A684  6EE6               	movwf	postinc1,c
 21506  01A686  0E00               	movlw	0
 21507  01A688  6EE6               	movwf	postinc1,c
 21508  01A68A  EC64  F0CA         	call	_fputc	;wreg free
 21509                           
 21510                           ;stkvar	_i @ sp[(-3)+0]
 21511  01A68E  0EFD               	movlw	-3
 21512  01A690  50E3               	movf	plusw1,w,c
 21513  01A692  0F01               	addlw	1
 21514  01A694  6E01               	movwf	btemp^0,c
 21515  01A696  0EFD               	movlw	-3
 21516  01A698  0060  F007  FFE3   	movff	btemp,plusw1
 21517  01A69E  6A01               	clrf	btemp^0,c
 21518  01A6A0  0EFE               	movlw	-2
 21519  01A6A2  50E3               	movf	plusw1,w,c
 21520  01A6A4  2001               	addwfc	btemp^0,w,c
 21521  01A6A6  6E01               	movwf	btemp^0,c
 21522  01A6A8  0EFE               	movlw	-2
 21523  01A6AA  0060  F007  FFE3   	movff	btemp,plusw1
 21524  01A6B0                     l11661:
 21525                           
 21526                           ;stkvar	_i @ sp[(-3)+0]
 21527  01A6B0  0EFD               	movlw	-3
 21528  01A6B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21529  01A6B8  0EFE               	movlw	-2
 21530  01A6BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21531                           
 21532                           ;stkvar	_s @ sp[(-3)+-2]
 21533  01A6C0  0EFB               	movlw	-5
 21534  01A6C2  006F FF8C  F009    	movff	plusw1,btemp+8
 21535  01A6C8  0EFC               	movlw	-4
 21536  01A6CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 21537  01A6D0  500B               	movf	(btemp+10)^0,w,c
 21538  01A6D2  2409               	addwf	(btemp+8)^0,w,c
 21539  01A6D4  6ED9               	movwf	fsr2l,c
 21540  01A6D6  500C               	movf	(btemp+11)^0,w,c
 21541  01A6D8  200A               	addwfc	(btemp+9)^0,w,c
 21542  01A6DA  6EDA               	movwf	fsr2h,c
 21543  01A6DC  50DF               	movf	indf2,w,c
 21544  01A6DE  6E0C               	movwf	(btemp+11)^0,c
 21545                           
 21546                           ;stkvar	_c @ sp[(-3)+2]
 21547  01A6E0  0EFF               	movlw	-1
 21548  01A6E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21549  01A6E8  0EFF               	movlw	-1
 21550  01A6EA  50E3               	movf	plusw1,w,c
 21551  01A6EC  A4D8               	btfss	status,2,c
 21552  01A6EE  D7C1               	goto	l11657
 21553                           
 21554                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21555  01A6F0  0EF9               	movlw	249
 21556  01A6F2  26E1               	addwf	fsr1l,f,c
 21557  01A6F4  0EFF               	movlw	255
 21558  01A6F6  22E2               	addwfc	fsr1h,f,c
 21559  01A6F8  0012               	return		;funcret
 21560  01A6FA                     __end_of_fputs:
 21561                           	opt callstack 0
 21562                           
 21563 ;; *************** function _fputc *****************
 21564 ;; Defined at:
 21565 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21566 ;; Parameters:    Size  Location     Type
 21567 ;;  c               2  [STACK] int 
 21568 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21569 ;;		 -> f(6), NULL(0), 
 21570 ;; Auto vars:     Size  Location     Type
 21571 ;;		None
 21572 ;; Return value:  Size  Location     Type
 21573 ;;                  2  [STACK] int 
 21574 ;; Registers used:
 21575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21576 ;; Tracked objects:
 21577 ;;		On entry : 0/0
 21578 ;;		On exit  : 0/0
 21579 ;;		Unchanged: 0/0
 21580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21585 ;;Total ram usage:        0 bytes
 21586 ;; Hardware stack levels used:    1
 21587 ;; Hardware stack levels required when called:   17
 21588 ;; This function calls:
 21589 ;;		_putch
 21590 ;; This function is called by:
 21591 ;;		_pad
 21592 ;;		_stoa
 21593 ;;		_vfpfcnvrt
 21594 ;;		_fputs
 21595 ;; This function uses a reentrant model
 21596 ;;
 21597                           
 21598                           	psect	text74
 21599  0194C8                     __ptext74:
 21600                           	opt callstack 0
 21601  0194C8                     _fputc:
 21602                           	opt callstack 0
 21603                           
 21604                           ;stkvar	_fp @ sp[(0)+-4]
 21605                           
 21606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21607                           ;incstack = 0
 21608 ;; hardware stack exceeded
 21609  0194C8  0EFC               	movlw	-4
 21610  0194CA  006F FF8C  F001    	movff	plusw1,btemp
 21611  0194D0  0EFD               	movlw	-3
 21612  0194D2  50E3               	movf	plusw1,w,c
 21613  0194D4  1001               	iorwf	btemp^0,w,c
 21614  0194D6  B4D8               	btfsc	status,2,c
 21615  0194D8  D009               	goto	u10670
 21616                           
 21617                           ;stkvar	_fp @ sp[(0)+-4]
 21618  0194DA  0EFC               	movlw	-4
 21619  0194DC  006F FF8C  F001    	movff	plusw1,btemp
 21620  0194E2  0EFD               	movlw	-3
 21621  0194E4  50E3               	movf	plusw1,w,c
 21622  0194E6  1001               	iorwf	btemp^0,w,c
 21623  0194E8  A4D8               	btfss	status,2,c
 21624  0194EA  D006               	goto	l11645
 21625  0194EC                     u10670:
 21626                           
 21627                           ;stkvar	_c @ sp[(0)+-2]
 21628  0194EC  0EFE               	movlw	-2
 21629  0194EE  50E3               	movf	plusw1,w,c
 21630  0194F0  6EE6               	movwf	postinc1,c
 21631  0194F2  EC08  F0DE         	call	_putch	;wreg free
 21632  0194F6  D075               	goto	l3189
 21633  0194F8                     l11645:
 21634                           
 21635                           ;stkvar	_fp @ sp[(0)+-4]
 21636  0194F8  0EFC               	movlw	-4
 21637  0194FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21638  019500  0EFD               	movlw	-3
 21639  019502  006F FF8C  F00C    	movff	plusw1,btemp+11
 21640  019508  0E04               	movlw	4
 21641  01950A  240B               	addwf	(btemp+10)^0,w,c
 21642  01950C  6ED9               	movwf	fsr2l,c
 21643  01950E  0E00               	movlw	0
 21644  019510  200C               	addwfc	(btemp+11)^0,w,c
 21645  019512  6EDA               	movwf	fsr2h,c
 21646  019514  50DE               	movf	postinc2,w,c
 21647  019516  10DE               	iorwf	postinc2,w,c
 21648  019518  B4D8               	btfsc	status,2,c
 21649  01951A  D026               	goto	u10690
 21650                           
 21651                           ;stkvar	_fp @ sp[(0)+-4]
 21652  01951C  0EFC               	movlw	-4
 21653  01951E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21654  019524  0EFD               	movlw	-3
 21655  019526  006F FF8C  F00C    	movff	plusw1,btemp+11
 21656  01952C  0E04               	movlw	4
 21657  01952E  240B               	addwf	(btemp+10)^0,w,c
 21658  019530  6ED9               	movwf	fsr2l,c
 21659  019532  0E00               	movlw	0
 21660  019534  200C               	addwfc	(btemp+11)^0,w,c
 21661  019536  6EDA               	movwf	fsr2h,c
 21662                           
 21663                           ;stkvar	_fp @ sp[(0)+-4]
 21664  019538  0EFC               	movlw	-4
 21665  01953A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21666  019540  0EFD               	movlw	-3
 21667  019542  006F FF8C  F00C    	movff	plusw1,btemp+11
 21668  019548  0E02               	movlw	2
 21669  01954A  240B               	addwf	(btemp+10)^0,w,c
 21670  01954C  6EE9               	movwf	fsr0l,c
 21671  01954E  0E00               	movlw	0
 21672  019550  200C               	addwfc	(btemp+11)^0,w,c
 21673  019552  6EEA               	movwf	fsr0h,c
 21674  019554  50DE               	movf	postinc2,w,c
 21675  019556  5CEE               	subwf	postinc0,w,c
 21676  019558  50EE               	movf	postinc0,w,c
 21677  01955A  0A80               	xorlw	128
 21678  01955C  6E01               	movwf	btemp^0,c
 21679  01955E  50DE               	movf	postinc2,w,c
 21680  019560  0A80               	xorlw	128
 21681  019562  5801               	subwfb	btemp^0,w,c
 21682  019564  B0D8               	btfsc	status,0,c
 21683  019566  D03D               	goto	l3189
 21684  019568                     u10690:
 21685                           
 21686                           ;stkvar	_c @ sp[(0)+-2]
 21687                           ;stkvar	_fp @ sp[(0)+-4]
 21688  019568  0EFC               	movlw	-4
 21689  01956A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21690  019570  0EFD               	movlw	-3
 21691  019572  006F FF8C  F00C    	movff	plusw1,btemp+11
 21692  019578  0E02               	movlw	2
 21693  01957A  240B               	addwf	(btemp+10)^0,w,c
 21694  01957C  6ED9               	movwf	fsr2l,c
 21695  01957E  0E00               	movlw	0
 21696  019580  200C               	addwfc	(btemp+11)^0,w,c
 21697  019582  6EDA               	movwf	fsr2h,c
 21698  019584  006F FF78  F00B    	movff	postinc2,btemp+10
 21699  01958A  006F FF74  F00C    	movff	postdec2,btemp+11
 21700                           
 21701                           ;stkvar	_fp @ sp[(0)+-4]
 21702  019590  0EFC               	movlw	-4
 21703  019592  006F FF8F FFD9     	movff	plusw1,fsr2l
 21704  019598  0EFD               	movlw	-3
 21705  01959A  006F FF8F FFDA     	movff	plusw1,fsr2h
 21706  0195A0  006F FF78  F009    	movff	postinc2,btemp+8
 21707  0195A6  006F FF74  F00A    	movff	postdec2,btemp+9
 21708  0195AC  500B               	movf	(btemp+10)^0,w,c
 21709  0195AE  2409               	addwf	(btemp+8)^0,w,c
 21710  0195B0  6ED9               	movwf	fsr2l,c
 21711  0195B2  500C               	movf	(btemp+11)^0,w,c
 21712  0195B4  200A               	addwfc	(btemp+9)^0,w,c
 21713  0195B6  6EDA               	movwf	fsr2h,c
 21714  0195B8  0EFE               	movlw	-2
 21715  0195BA  006F FF8F FFDF     	movff	plusw1,indf2
 21716                           
 21717                           ;stkvar	_fp @ sp[(0)+-4]
 21718  0195C0  0EFC               	movlw	-4
 21719  0195C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21720  0195C8  0EFD               	movlw	-3
 21721  0195CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21722  0195D0  0E02               	movlw	2
 21723  0195D2  240B               	addwf	(btemp+10)^0,w,c
 21724  0195D4  6ED9               	movwf	fsr2l,c
 21725  0195D6  0E00               	movlw	0
 21726  0195D8  200C               	addwfc	(btemp+11)^0,w,c
 21727  0195DA  6EDA               	movwf	fsr2h,c
 21728  0195DC  2ADE               	incf	postinc2,f,c
 21729  0195DE  0E00               	movlw	0
 21730  0195E0  22DD               	addwfc	postdec2,f,c
 21731  0195E2                     l3189:
 21732                           
 21733                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21734  0195E2  52E5               	movf	postdec1,f,c
 21735  0195E4  52E5               	movf	postdec1,f,c
 21736  0195E6  52E5               	movf	postdec1,f,c
 21737  0195E8  52E5               	movf	postdec1,f,c
 21738  0195EA  0012               	return		;funcret
 21739  0195EC                     __end_of_fputc:
 21740                           	opt callstack 0
 21741                           
 21742 ;; *************** function _putch *****************
 21743 ;; Defined at:
 21744 ;;		line 170 in file "eadog.c"
 21745 ;; Parameters:    Size  Location     Type
 21746 ;;  c               1  [STACK] unsigned char 
 21747 ;; Auto vars:     Size  Location     Type
 21748 ;;		None
 21749 ;; Return value:  Size  Location     Type
 21750 ;;                  1  [STACK] void 
 21751 ;; Registers used:
 21752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21753 ;; Tracked objects:
 21754 ;;		On entry : 0/0
 21755 ;;		On exit  : 0/0
 21756 ;;		Unchanged: 0/0
 21757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;Total ram usage:        0 bytes
 21763 ;; Hardware stack levels used:    1
 21764 ;; Hardware stack levels required when called:   16
 21765 ;; This function calls:
 21766 ;;		_ringBufS_put_dma
 21767 ;; This function is called by:
 21768 ;;		_fputc
 21769 ;; This function uses a reentrant model
 21770 ;;
 21771                           
 21772                           	psect	text75
 21773  01BC10                     __ptext75:
 21774                           	opt callstack 0
 21775  01BC10                     _putch:
 21776                           	opt callstack 0
 21777                           
 21778                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21779                           ;stkvar	_c @ sp[(0)+-1]
 21780                           
 21781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21782                           ;incstack = 0
 21783 ;; hardware stack exceeded
 21784  01BC10  0EFF               	movlw	-1
 21785  01BC12  50E3               	movf	plusw1,w,c
 21786  01BC14  6EE6               	movwf	postinc1,c
 21787  01BC16  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21788  01BC1C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21789  01BC22  EC38  F0D2         	call	_ringBufS_put_dma	;wreg free
 21790                           
 21791                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21792  01BC26  52E5               	movf	postdec1,f,c
 21793  01BC28  0012               	return		;funcret
 21794  01BC2A                     __end_of_putch:
 21795                           	opt callstack 0
 21796                           
 21797 ;; *************** function _ringBufS_put_dma *****************
 21798 ;; Defined at:
 21799 ;;		line 67 in file "ringbufs.c"
 21800 ;; Parameters:    Size  Location     Type
 21801 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21802 ;;		 -> ring_buf1(67), 
 21803 ;;  c               1  [STACK] const unsigned char 
 21804 ;; Auto vars:     Size  Location     Type
 21805 ;;		None
 21806 ;; Return value:  Size  Location     Type
 21807 ;;                  1  [STACK] void 
 21808 ;; Registers used:
 21809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21810 ;; Tracked objects:
 21811 ;;		On entry : 0/0
 21812 ;;		On exit  : 0/0
 21813 ;;		Unchanged: 0/0
 21814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21819 ;;Total ram usage:        0 bytes
 21820 ;; Hardware stack levels used:    1
 21821 ;; Hardware stack levels required when called:   15
 21822 ;; This function calls:
 21823 ;;		Nothing
 21824 ;; This function is called by:
 21825 ;;		_putch
 21826 ;; This function uses a reentrant model
 21827 ;;
 21828                           
 21829                           	psect	text76
 21830  01A470                     __ptext76:
 21831                           	opt callstack 0
 21832  01A470                     _ringBufS_put_dma:
 21833                           	opt callstack 0
 21834                           
 21835                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21836                           ;stkvar	__this @ sp[(0)+-2]
 21837                           
 21838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21839                           ;incstack = 0
 21840 ;; hardware stack exceeded
 21841  01A470  0EFE               	movlw	-2
 21842  01A472  006F FF8C  F00B    	movff	plusw1,btemp+10
 21843  01A478  0EFF               	movlw	-1
 21844  01A47A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21845  01A480  0E42               	movlw	66
 21846  01A482  240B               	addwf	(btemp+10)^0,w,c
 21847  01A484  6ED9               	movwf	fsr2l,c
 21848  01A486  0E00               	movlw	0
 21849  01A488  200C               	addwfc	(btemp+11)^0,w,c
 21850  01A48A  6EDA               	movwf	fsr2h,c
 21851  01A48C  0E40               	movlw	64
 21852  01A48E  60DF               	cpfslt	indf2,c
 21853  01A490  D040               	goto	l1587
 21854                           
 21855                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21856                           ;stkvar	_c @ sp[(0)+-3]
 21857                           ;stkvar	__this @ sp[(0)+-2]
 21858  01A492  0EFE               	movlw	-2
 21859  01A494  006F FF8C  F00B    	movff	plusw1,btemp+10
 21860  01A49A  0EFF               	movlw	-1
 21861  01A49C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21862  01A4A2  0E40               	movlw	64
 21863  01A4A4  240B               	addwf	(btemp+10)^0,w,c
 21864  01A4A6  6ED9               	movwf	fsr2l,c
 21865  01A4A8  0E00               	movlw	0
 21866  01A4AA  200C               	addwfc	(btemp+11)^0,w,c
 21867  01A4AC  6EDA               	movwf	fsr2h,c
 21868  01A4AE  50DF               	movf	indf2,w,c
 21869  01A4B0  6E0C               	movwf	(btemp+11)^0,c
 21870                           
 21871                           ;stkvar	__this @ sp[(0)+-2]
 21872  01A4B2  0EFE               	movlw	-2
 21873  01A4B4  006F FF8C  F009    	movff	plusw1,btemp+8
 21874  01A4BA  0EFF               	movlw	-1
 21875  01A4BC  006F FF8C  F00A    	movff	plusw1,btemp+9
 21876  01A4C2  500C               	movf	(btemp+11)^0,w,c
 21877  01A4C4  2409               	addwf	(btemp+8)^0,w,c
 21878  01A4C6  6ED9               	movwf	fsr2l,c
 21879  01A4C8  0E00               	movlw	0
 21880  01A4CA  200A               	addwfc	(btemp+9)^0,w,c
 21881  01A4CC  6EDA               	movwf	fsr2h,c
 21882  01A4CE  0EFD               	movlw	-3
 21883  01A4D0  006F FF8F FFDF     	movff	plusw1,indf2
 21884                           
 21885                           ;ringbufs.c: 71:   ++_this->head;
 21886                           ;stkvar	__this @ sp[(0)+-2]
 21887  01A4D6  0EFE               	movlw	-2
 21888  01A4D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21889  01A4DE  0EFF               	movlw	-1
 21890  01A4E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21891  01A4E6  0E40               	movlw	64
 21892  01A4E8  240B               	addwf	(btemp+10)^0,w,c
 21893  01A4EA  6ED9               	movwf	fsr2l,c
 21894  01A4EC  0E00               	movlw	0
 21895  01A4EE  200C               	addwfc	(btemp+11)^0,w,c
 21896  01A4F0  6EDA               	movwf	fsr2h,c
 21897  01A4F2  2ADF               	incf	indf2,f,c
 21898                           
 21899                           ;ringbufs.c: 72:   ++_this->count;
 21900                           ;stkvar	__this @ sp[(0)+-2]
 21901  01A4F4  0EFE               	movlw	-2
 21902  01A4F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21903  01A4FC  0EFF               	movlw	-1
 21904  01A4FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21905  01A504  0E42               	movlw	66
 21906  01A506  240B               	addwf	(btemp+10)^0,w,c
 21907  01A508  6ED9               	movwf	fsr2l,c
 21908  01A50A  0E00               	movlw	0
 21909  01A50C  200C               	addwfc	(btemp+11)^0,w,c
 21910  01A50E  6EDA               	movwf	fsr2h,c
 21911  01A510  2ADF               	incf	indf2,f,c
 21912  01A512                     l1587:
 21913                           
 21914                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21915  01A512  52E5               	movf	postdec1,f,c
 21916  01A514  52E5               	movf	postdec1,f,c
 21917  01A516  52E5               	movf	postdec1,f,c
 21918  01A518  0012               	return		;funcret
 21919  01A51A                     __end_of_ringBufS_put_dma:
 21920                           	opt callstack 0
 21921                           
 21922 ;; *************** function _atoi *****************
 21923 ;; Defined at:
 21924 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21925 ;; Parameters:    Size  Location     Type
 21926 ;;  s               2  [STACK] PTR const unsigned char 
 21927 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 21928 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21929 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21930 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21931 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21932 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21933 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21934 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21935 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21936 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 21937 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 21938 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21939 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21940 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21941 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21942 ;;		 -> STR_1(17), 
 21943 ;; Auto vars:     Size  Location     Type
 21944 ;;  n               2  [STACK] int 
 21945 ;;  neg             2  [STACK] int 
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  2  [STACK] int 
 21948 ;; Registers used:
 21949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21959 ;;Total ram usage:        0 bytes
 21960 ;; Hardware stack levels used:    1
 21961 ;; Hardware stack levels required when called:   16
 21962 ;; This function calls:
 21963 ;;		_isdigit
 21964 ;;		_isspace
 21965 ;; This function is called by:
 21966 ;;		_vfpfcnvrt
 21967 ;; This function uses a reentrant model
 21968 ;;
 21969                           
 21970                           	psect	text77
 21971  017684                     __ptext77:
 21972                           	opt callstack 0
 21973  017684                     _atoi:
 21974                           	opt callstack 0
 21975                           
 21976                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21977  017684  0E09               	movlw	9
 21978  017686  26E1               	addwf	fsr1l,f,c
 21979  017688  0E00               	movlw	0
 21980  01768A  22E2               	addwfc	fsr1h,f,c
 21981                           
 21982                           ;stkvar	_n @ sp[(-9)+5]
 21983                           
 21984                           ;incstack = 0
 21985 ;; hardware stack exceeded
 21986  01768C  0EFC               	movlw	-4
 21987  01768E  6AE3               	clrf	plusw1,c
 21988  017690  0EFD               	movlw	-3
 21989  017692  6AE3               	clrf	plusw1,c
 21990                           
 21991                           ;stkvar	_neg @ sp[(-9)+7]
 21992  017694  0EFE               	movlw	-2
 21993  017696  6AE3               	clrf	plusw1,c
 21994  017698  0EFF               	movlw	-1
 21995  01769A  6AE3               	clrf	plusw1,c
 21996  01769C  D011               	goto	l9227
 21997  01769E                     l9225:
 21998                           
 21999                           ;stkvar	_s @ sp[(-9)+-2]
 22000  01769E  0EF5               	movlw	-11
 22001  0176A0  50E3               	movf	plusw1,w,c
 22002  0176A2  0F01               	addlw	1
 22003  0176A4  6E01               	movwf	btemp^0,c
 22004  0176A6  0EF5               	movlw	-11
 22005  0176A8  0060  F007  FFE3   	movff	btemp,plusw1
 22006  0176AE  6A01               	clrf	btemp^0,c
 22007  0176B0  0EF6               	movlw	-10
 22008  0176B2  50E3               	movf	plusw1,w,c
 22009  0176B4  2001               	addwfc	btemp^0,w,c
 22010  0176B6  6E01               	movwf	btemp^0,c
 22011  0176B8  0EF6               	movlw	-10
 22012  0176BA  0060  F007  FFE3   	movff	btemp,plusw1
 22013  0176C0                     l9227:
 22014                           
 22015                           ;stkvar	_atoi$6054 @ sp[(-9)+4]
 22016  0176C0  0EFB               	movlw	-5
 22017  0176C2  6AE3               	clrf	plusw1,c
 22018  0176C4  2AE3               	incf	plusw1,f,c
 22019                           
 22020                           ;stkvar	_s @ sp[(-9)+-2]
 22021  0176C6  50E1               	movf	fsr1l,w,c
 22022  0176C8  0FF5               	addlw	-11
 22023  0176CA  6ED9               	movwf	fsr2l,c
 22024  0176CC  50E2               	movf	fsr1h,w,c
 22025  0176CE  6EDA               	movwf	fsr2h,c
 22026  0176D0  0EFF               	movlw	255
 22027  0176D2  22DA               	addwfc	fsr2h,f,c
 22028  0176D4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22029  0176DA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22030  0176E0                     	if	0	;tblptru may be non-zero
 22031  0176E0                     	endif
 22032  0176E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22033  0176E0  0E00               	movlw	low (__mediumconst shr (0+16))
 22034  0176E2  6EF8               	movwf	tblptru,c
 22035  0176E4                     	endif
 22036  0176E4  0008               	tblrd		*
 22037  0176E6  50F5               	movf	tablat,w,c
 22038  0176E8  0A20               	xorlw	32
 22039  0176EA  B4D8               	btfsc	status,2,c
 22040  0176EC  D023               	goto	l9235
 22041  0176EE  0EF7               	movlw	247
 22042  0176F0  6E0B               	movwf	(btemp+10)^0,c
 22043  0176F2  0EFF               	movlw	255
 22044  0176F4  6E0C               	movwf	(btemp+11)^0,c
 22045                           
 22046                           ;stkvar	_s @ sp[(-9)+-2]
 22047  0176F6  50E1               	movf	fsr1l,w,c
 22048  0176F8  0FF5               	addlw	-11
 22049  0176FA  6ED9               	movwf	fsr2l,c
 22050  0176FC  50E2               	movf	fsr1h,w,c
 22051  0176FE  6EDA               	movwf	fsr2h,c
 22052  017700  0EFF               	movlw	255
 22053  017702  22DA               	addwfc	fsr2h,f,c
 22054  017704  006F FF7B FFF6     	movff	postinc2,tblptrl
 22055  01770A  006F FF77 FFF7     	movff	postdec2,tblptrh
 22056  017710                     	if	0	;tblptru may be non-zero
 22057  017710                     	endif
 22058  017710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22059  017710  0E00               	movlw	low (__mediumconst shr (0+16))
 22060  017712  6EF8               	movwf	tblptru,c
 22061  017714                     	endif
 22062  017714  0008               	tblrd		*
 22063  017716  50F5               	movf	tablat,w,c
 22064  017718  6E09               	movwf	(btemp+8)^0,c
 22065  01771A  6A0A               	clrf	(btemp+9)^0,c
 22066  01771C  500B               	movf	(btemp+10)^0,w,c
 22067  01771E  2609               	addwf	(btemp+8)^0,f,c
 22068  017720  500C               	movf	(btemp+11)^0,w,c
 22069  017722  220A               	addwfc	(btemp+9)^0,f,c
 22070  017724  500A               	movf	(btemp+9)^0,w,c
 22071  017726  E104               	bnz	u8490
 22072  017728  0E05               	movlw	5
 22073  01772A  5C09               	subwf	(btemp+8)^0,w,c
 22074  01772C  A0D8               	btfss	status,0,c
 22075  01772E  D002               	goto	l9235
 22076  017730                     u8490:
 22077                           
 22078                           ;stkvar	_atoi$6054 @ sp[(-9)+4]
 22079  017730  0EFB               	movlw	-5
 22080  017732  6AE3               	clrf	plusw1,c
 22081  017734                     l9235:
 22082                           
 22083                           ;stkvar	_atoi$6054 @ sp[(-9)+4]
 22084  017734  0EFB               	movlw	-5
 22085  017736  50E3               	movf	plusw1,w,c
 22086  017738  6E0B               	movwf	(btemp+10)^0,c
 22087  01773A  6A0C               	clrf	(btemp+11)^0,c
 22088                           
 22089                           ;stkvar	_atoi$6053 @ sp[(-9)+2]
 22090  01773C  0EF9               	movlw	-7
 22091  01773E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22092  017744  0EFA               	movlw	-6
 22093  017746  0060  F033  FFE3   	movff	btemp+11,plusw1
 22094                           
 22095                           ;stkvar	_atoi$6053 @ sp[(-9)+2]
 22096  01774C  0EF9               	movlw	-7
 22097  01774E  006F FF8C  F001    	movff	plusw1,btemp
 22098  017754  0EFA               	movlw	-6
 22099  017756  50E3               	movf	plusw1,w,c
 22100  017758  1001               	iorwf	btemp^0,w,c
 22101  01775A  B4D8               	btfsc	status,2,c
 22102  01775C  D01F               	goto	l9245
 22103  01775E  D79F               	goto	l9225
 22104  017760                     l9241:
 22105  017760  0E01               	movlw	1
 22106  017762  6E0B               	movwf	(btemp+10)^0,c
 22107  017764  0E00               	movlw	0
 22108  017766  6E0C               	movwf	(btemp+11)^0,c
 22109                           
 22110                           ;stkvar	_neg @ sp[(-9)+7]
 22111  017768  0EFE               	movlw	-2
 22112  01776A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22113  017770  0EFF               	movlw	-1
 22114  017772  0060  F033  FFE3   	movff	btemp+11,plusw1
 22115  017778                     l9243:
 22116                           
 22117                           ;stkvar	_s @ sp[(-9)+-2]
 22118  017778  0EF5               	movlw	-11
 22119  01777A  50E3               	movf	plusw1,w,c
 22120  01777C  0F01               	addlw	1
 22121  01777E  6E01               	movwf	btemp^0,c
 22122  017780  0EF5               	movlw	-11
 22123  017782  0060  F007  FFE3   	movff	btemp,plusw1
 22124  017788  6A01               	clrf	btemp^0,c
 22125  01778A  0EF6               	movlw	-10
 22126  01778C  50E3               	movf	plusw1,w,c
 22127  01778E  2001               	addwfc	btemp^0,w,c
 22128  017790  6E01               	movwf	btemp^0,c
 22129  017792  0EF6               	movlw	-10
 22130  017794  0060  F007  FFE3   	movff	btemp,plusw1
 22131  01779A  D053               	goto	l9251
 22132  01779C                     l9245:
 22133                           
 22134                           ;stkvar	_s @ sp[(-9)+-2]
 22135  01779C  50E1               	movf	fsr1l,w,c
 22136  01779E  0FF5               	addlw	-11
 22137  0177A0  6ED9               	movwf	fsr2l,c
 22138  0177A2  50E2               	movf	fsr1h,w,c
 22139  0177A4  6EDA               	movwf	fsr2h,c
 22140  0177A6  0EFF               	movlw	255
 22141  0177A8  22DA               	addwfc	fsr2h,f,c
 22142  0177AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 22143  0177B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22144  0177B6                     	if	0	;tblptru may be non-zero
 22145  0177B6                     	endif
 22146  0177B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22147  0177B6  0E00               	movlw	low (__mediumconst shr (0+16))
 22148  0177B8  6EF8               	movwf	tblptru,c
 22149  0177BA                     	endif
 22150  0177BA  0008               	tblrd		*
 22151  0177BC  50F5               	movf	tablat,w,c
 22152  0177BE  6E0B               	movwf	(btemp+10)^0,c
 22153  0177C0  6A0C               	clrf	(btemp+11)^0,c
 22154                           
 22155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22156                           ; Switch size 1, requested type "simple"
 22157                           ; Number of cases is 1, Range of values is 0 to 0
 22158                           ; switch strategies available:
 22159                           ; Name         Instructions Cycles
 22160                           ; simple_byte            4     3 (average)
 22161                           ;	Chosen strategy is simple_byte
 22162  0177C2  500C               	movf	(btemp+11)^0,w,c
 22163  0177C4  0A00               	xorlw	0	; case 0
 22164  0177C6  A4D8               	btfss	status,2,c
 22165  0177C8  D03C               	goto	l9251
 22166                           
 22167                           ; Switch size 1, requested type "simple"
 22168                           ; Number of cases is 2, Range of values is 43 to 45
 22169                           ; switch strategies available:
 22170                           ; Name         Instructions Cycles
 22171                           ; simple_byte            7     4 (average)
 22172                           ;	Chosen strategy is simple_byte
 22173  0177CA  500B               	movf	(btemp+10)^0,w,c
 22174  0177CC  0A2B               	xorlw	43	; case 43
 22175  0177CE  B4D8               	btfsc	status,2,c
 22176  0177D0  D7D3               	goto	l9243
 22177  0177D2  0A06               	xorlw	6	; case 45
 22178  0177D4  B4D8               	btfsc	status,2,c
 22179  0177D6  D7C4               	goto	l9241
 22180  0177D8  D034               	goto	l9251
 22181  0177DA                     l9247:
 22182                           
 22183                           ;stkvar	_n @ sp[(-9)+5]
 22184  0177DA  0EFC               	movlw	-4
 22185  0177DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22186  0177E2  0EFD               	movlw	-3
 22187  0177E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22188  0177EA  0E0A               	movlw	10
 22189  0177EC  020B               	mulwf	(btemp+10)^0,c
 22190  0177EE  006F FFCC  F009    	movff	prodl,btemp+8
 22191  0177F4  006F FFD0  F00A    	movff	prodh,btemp+9
 22192  0177FA  020C               	mulwf	(btemp+11)^0,c
 22193  0177FC  50F3               	movf	prodl,w,c
 22194  0177FE  260A               	addwf	(btemp+9)^0,f,c
 22195                           
 22196                           ;stkvar	_s @ sp[(-9)+-2]
 22197  017800  50E1               	movf	fsr1l,w,c
 22198  017802  0FF5               	addlw	-11
 22199  017804  6ED9               	movwf	fsr2l,c
 22200  017806  50E2               	movf	fsr1h,w,c
 22201  017808  6EDA               	movwf	fsr2h,c
 22202  01780A  0EFF               	movlw	255
 22203  01780C  22DA               	addwfc	fsr2h,f,c
 22204  01780E  006F FF7B FFF6     	movff	postinc2,tblptrl
 22205  017814  006F FF77 FFF7     	movff	postdec2,tblptrh
 22206  01781A                     	if	0	;tblptru may be non-zero
 22207  01781A                     	endif
 22208  01781A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22209  01781A  0E00               	movlw	low (__mediumconst shr (0+16))
 22210  01781C  6EF8               	movwf	tblptru,c
 22211  01781E                     	endif
 22212  01781E  0008               	tblrd		*
 22213  017820  50F5               	movf	tablat,w,c
 22214  017822  5E09               	subwf	(btemp+8)^0,f,c
 22215  017824  0E00               	movlw	0
 22216  017826  5A0A               	subwfb	(btemp+9)^0,f,c
 22217  017828  0E30               	movlw	48
 22218  01782A  2609               	addwf	(btemp+8)^0,f,c
 22219  01782C  0E00               	movlw	0
 22220  01782E  220A               	addwfc	(btemp+9)^0,f,c
 22221                           
 22222                           ;stkvar	_n @ sp[(-9)+5]
 22223  017830  0EFC               	movlw	-4
 22224  017832  0060  F027  FFE3   	movff	btemp+8,plusw1
 22225  017838  0EFD               	movlw	-3
 22226  01783A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22227  017840  D79B               	goto	l9243
 22228  017842                     l9251:
 22229  017842  0ED0               	movlw	208
 22230  017844  6E0B               	movwf	(btemp+10)^0,c
 22231  017846  0EFF               	movlw	255
 22232  017848  6E0C               	movwf	(btemp+11)^0,c
 22233                           
 22234                           ;stkvar	_s @ sp[(-9)+-2]
 22235  01784A  50E1               	movf	fsr1l,w,c
 22236  01784C  0FF5               	addlw	-11
 22237  01784E  6ED9               	movwf	fsr2l,c
 22238  017850  50E2               	movf	fsr1h,w,c
 22239  017852  6EDA               	movwf	fsr2h,c
 22240  017854  0EFF               	movlw	255
 22241  017856  22DA               	addwfc	fsr2h,f,c
 22242  017858  006F FF7B FFF6     	movff	postinc2,tblptrl
 22243  01785E  006F FF77 FFF7     	movff	postdec2,tblptrh
 22244  017864                     	if	0	;tblptru may be non-zero
 22245  017864                     	endif
 22246  017864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22247  017864  0E00               	movlw	low (__mediumconst shr (0+16))
 22248  017866  6EF8               	movwf	tblptru,c
 22249  017868                     	endif
 22250  017868  0008               	tblrd		*
 22251  01786A  50F5               	movf	tablat,w,c
 22252  01786C  6E09               	movwf	(btemp+8)^0,c
 22253  01786E  6A0A               	clrf	(btemp+9)^0,c
 22254  017870  500B               	movf	(btemp+10)^0,w,c
 22255  017872  2609               	addwf	(btemp+8)^0,f,c
 22256  017874  500C               	movf	(btemp+11)^0,w,c
 22257  017876  220A               	addwfc	(btemp+9)^0,f,c
 22258  017878  500A               	movf	(btemp+9)^0,w,c
 22259  01787A  E106               	bnz	u8510
 22260  01787C  0E0A               	movlw	10
 22261  01787E  5C09               	subwf	(btemp+8)^0,w,c
 22262  017880  B0D8               	btfsc	status,0,c
 22263  017882  D002               	goto	u8510
 22264  017884  0E01               	movlw	1
 22265  017886  D001               	goto	u8520
 22266  017888                     u8510:
 22267  017888  0E00               	movlw	0
 22268  01788A                     u8520:
 22269  01788A  6E0B               	movwf	(btemp+10)^0,c
 22270  01788C  6A0C               	clrf	(btemp+11)^0,c
 22271                           
 22272                           ;stkvar	_atoi$6055 @ sp[(-9)+0]
 22273  01788E  0EF7               	movlw	-9
 22274  017890  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22275  017896  0EF8               	movlw	-8
 22276  017898  0060  F033  FFE3   	movff	btemp+11,plusw1
 22277                           
 22278                           ;stkvar	_atoi$6055 @ sp[(-9)+0]
 22279  01789E  0EF7               	movlw	-9
 22280  0178A0  006F FF8C  F001    	movff	plusw1,btemp
 22281  0178A6  0EF8               	movlw	-8
 22282  0178A8  50E3               	movf	plusw1,w,c
 22283  0178AA  1001               	iorwf	btemp^0,w,c
 22284  0178AC  A4D8               	btfss	status,2,c
 22285  0178AE  D795               	goto	l9247
 22286                           
 22287                           ;stkvar	_neg @ sp[(-9)+7]
 22288  0178B0  0EFE               	movlw	-2
 22289  0178B2  006F FF8C  F001    	movff	plusw1,btemp
 22290  0178B8  0EFF               	movlw	-1
 22291  0178BA  50E3               	movf	plusw1,w,c
 22292  0178BC  1001               	iorwf	btemp^0,w,c
 22293  0178BE  A4D8               	btfss	status,2,c
 22294  0178C0  D00E               	goto	l9261
 22295                           
 22296                           ;stkvar	_n @ sp[(-9)+5]
 22297  0178C2  0EFC               	movlw	-4
 22298  0178C4  006F FF8C  F001    	movff	plusw1,btemp
 22299  0178CA  1E01               	comf	btemp^0,f,c
 22300  0178CC  0EFD               	movlw	-3
 22301  0178CE  006F FF8C  F002    	movff	plusw1,btemp+1
 22302  0178D4  1E02               	comf	(btemp+1)^0,f,c
 22303  0178D6  2A01               	incf	btemp^0,f,c
 22304  0178D8  B4D8               	btfsc	status,2,c
 22305  0178DA  2A02               	incf	(btemp+1)^0,f,c
 22306  0178DC  D008               	goto	l3120
 22307  0178DE                     l9261:
 22308                           
 22309                           ;stkvar	_n @ sp[(-9)+5]
 22310  0178DE  0EFC               	movlw	-4
 22311  0178E0  006F FF8C  F001    	movff	plusw1,btemp
 22312  0178E6  0EFD               	movlw	-3
 22313  0178E8  006F FF8C  F002    	movff	plusw1,btemp+1
 22314  0178EE                     l3120:
 22315                           
 22316                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22317  0178EE  0EF5               	movlw	245
 22318  0178F0  26E1               	addwf	fsr1l,f,c
 22319  0178F2  0EFF               	movlw	255
 22320  0178F4  22E2               	addwfc	fsr1h,f,c
 22321  0178F6  0012               	return		;funcret
 22322  0178F8                     __end_of_atoi:
 22323                           	opt callstack 0
 22324                           
 22325 ;; *************** function _isspace *****************
 22326 ;; Defined at:
 22327 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22328 ;; Parameters:    Size  Location     Type
 22329 ;;  c               2  [STACK] int 
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;		None
 22332 ;; Return value:  Size  Location     Type
 22333 ;;                  2  [STACK] int 
 22334 ;; Registers used:
 22335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22336 ;; Tracked objects:
 22337 ;;		On entry : 0/0
 22338 ;;		On exit  : 0/0
 22339 ;;		Unchanged: 0/0
 22340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22345 ;;Total ram usage:        0 bytes
 22346 ;; Hardware stack levels used:    1
 22347 ;; Hardware stack levels required when called:   15
 22348 ;; This function calls:
 22349 ;;		Nothing
 22350 ;; This function is called by:
 22351 ;;		_atoi
 22352 ;; This function uses a reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text78
 22356  01AF6E                     __ptext78:
 22357                           	opt callstack 0
 22358  01AF6E                     _isspace:
 22359                           	opt callstack 0
 22360                           
 22361                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22362  01AF6E  52E6               	movf	postinc1,f,c
 22363                           
 22364                           ;stkvar	_isspace$6104 @ sp[(-1)+0]
 22365                           
 22366                           ;incstack = 0
 22367 ;; hardware stack exceeded
 22368  01AF70  0EFF               	movlw	-1
 22369  01AF72  6AE3               	clrf	plusw1,c
 22370  01AF74  2AE3               	incf	plusw1,f,c
 22371                           
 22372                           ;stkvar	_c @ sp[(-1)+-2]
 22373  01AF76  0EFD               	movlw	-3
 22374  01AF78  006F FF8C  F001    	movff	plusw1,btemp
 22375  01AF7E  0E20               	movlw	32
 22376  01AF80  1801               	xorwf	btemp^0,w,c
 22377  01AF82  E104               	bnz	u7340
 22378  01AF84  0EFE               	movlw	-2
 22379  01AF86  50E3               	movf	plusw1,w,c
 22380  01AF88  B4D8               	btfsc	status,2,c
 22381  01AF8A  D012               	goto	l8619
 22382  01AF8C                     u7340:
 22383                           
 22384                           ;stkvar	_c @ sp[(-1)+-2]
 22385  01AF8C  0EFD               	movlw	-3
 22386  01AF8E  50E3               	movf	plusw1,w,c
 22387  01AF90  0FF7               	addlw	247
 22388  01AF92  6E0B               	movwf	(btemp+10)^0,c
 22389  01AF94  0EFE               	movlw	-2
 22390  01AF96  006F FF8C  F00C    	movff	plusw1,btemp+11
 22391  01AF9C  0EFF               	movlw	255
 22392  01AF9E  220C               	addwfc	(btemp+11)^0,f,c
 22393  01AFA0  500C               	movf	(btemp+11)^0,w,c
 22394  01AFA2  E104               	bnz	u7350
 22395  01AFA4  0E05               	movlw	5
 22396  01AFA6  5C0B               	subwf	(btemp+10)^0,w,c
 22397  01AFA8  A0D8               	btfss	status,0,c
 22398  01AFAA  D002               	goto	l8619
 22399  01AFAC                     u7350:
 22400                           
 22401                           ;stkvar	_isspace$6104 @ sp[(-1)+0]
 22402  01AFAC  0EFF               	movlw	-1
 22403  01AFAE  6AE3               	clrf	plusw1,c
 22404  01AFB0                     l8619:
 22405                           
 22406                           ;stkvar	_isspace$6104 @ sp[(-1)+0]
 22407  01AFB0  0EFF               	movlw	-1
 22408  01AFB2  50E3               	movf	plusw1,w,c
 22409  01AFB4  6E01               	movwf	btemp^0,c
 22410  01AFB6  6A02               	clrf	(btemp+1)^0,c
 22411                           
 22412                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22413  01AFB8  52E5               	movf	postdec1,f,c
 22414  01AFBA  52E5               	movf	postdec1,f,c
 22415  01AFBC  52E5               	movf	postdec1,f,c
 22416  01AFBE  0012               	return		;funcret
 22417  01AFC0                     __end_of_isspace:
 22418                           	opt callstack 0
 22419                           
 22420 ;; *************** function _isdigit *****************
 22421 ;; Defined at:
 22422 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22423 ;; Parameters:    Size  Location     Type
 22424 ;;  c               2  [STACK] int 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;		None
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  2  [STACK] int 
 22429 ;; Registers used:
 22430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/0
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22440 ;;Total ram usage:        0 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:   15
 22443 ;; This function calls:
 22444 ;;		Nothing
 22445 ;; This function is called by:
 22446 ;;		_vfpfcnvrt
 22447 ;;		_atoi
 22448 ;; This function uses a reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text79
 22452  01B668                     __ptext79:
 22453                           	opt callstack 0
 22454  01B668                     _isdigit:
 22455                           	opt callstack 0
 22456                           
 22457                           ;stkvar	_c @ sp[(0)+-2]
 22458                           
 22459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22460                           ;incstack = 0
 22461 ;; hardware stack exceeded
 22462  01B668  0EFE               	movlw	-2
 22463  01B66A  50E3               	movf	plusw1,w,c
 22464  01B66C  0FD0               	addlw	208
 22465  01B66E  6E0B               	movwf	(btemp+10)^0,c
 22466  01B670  0EFF               	movlw	-1
 22467  01B672  006F FF8C  F00C    	movff	plusw1,btemp+11
 22468  01B678  0EFF               	movlw	255
 22469  01B67A  220C               	addwfc	(btemp+11)^0,f,c
 22470  01B67C  500C               	movf	(btemp+11)^0,w,c
 22471  01B67E  E106               	bnz	u6190
 22472  01B680  0E0A               	movlw	10
 22473  01B682  5C0B               	subwf	(btemp+10)^0,w,c
 22474  01B684  B0D8               	btfsc	status,0,c
 22475  01B686  D002               	goto	u6190
 22476  01B688  0E01               	movlw	1
 22477  01B68A  D001               	goto	u6200
 22478  01B68C                     u6190:
 22479  01B68C  0E00               	movlw	0
 22480  01B68E                     u6200:
 22481  01B68E  6E01               	movwf	btemp^0,c
 22482  01B690  6A02               	clrf	(btemp+1)^0,c
 22483                           
 22484                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22485  01B692  52E5               	movf	postdec1,f,c
 22486  01B694  52E5               	movf	postdec1,f,c
 22487  01B696  0012               	return		;funcret
 22488  01B698                     __end_of_isdigit:
 22489                           	opt callstack 0
 22490                           
 22491 ;; *************** function _set_vterm *****************
 22492 ;; Defined at:
 22493 ;;		line 107 in file "mconfig.c"
 22494 ;; Parameters:    Size  Location     Type
 22495 ;;  vterm           1  [STACK] const unsigned char 
 22496 ;; Auto vars:     Size  Location     Type
 22497 ;;		None
 22498 ;; Return value:  Size  Location     Type
 22499 ;;                  1  [STACK] unsigned char 
 22500 ;; Registers used:
 22501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22502 ;; Tracked objects:
 22503 ;;		On entry : 0/0
 22504 ;;		On exit  : 0/0
 22505 ;;		Unchanged: 0/0
 22506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22511 ;;Total ram usage:        0 bytes
 22512 ;; Hardware stack levels used:    1
 22513 ;; Hardware stack levels required when called:   15
 22514 ;; This function calls:
 22515 ;;		Nothing
 22516 ;; This function is called by:
 22517 ;;		_main
 22518 ;;		_check_help
 22519 ;; This function uses a reentrant model
 22520 ;;
 22521                           
 22522                           	psect	text80
 22523  01BB9A                     __ptext80:
 22524                           	opt callstack 0
 22525  01BB9A                     _set_vterm:
 22526                           	opt callstack 15
 22527                           
 22528                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22529                           ;stkvar	_vterm @ sp[(0)+-1]
 22530                           
 22531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22532                           ;incstack = 0
 22533  01BB9A  0EFF               	movlw	-1
 22534  01BB9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22535  01BBA2  0E03               	movlw	3
 22536  01BBA4  160C               	andwf	(btemp+11)^0,f,c
 22537  01BBA6  EE22  F206         	lfsr	2,_D+480
 22538  01BBAA  50DF               	movf	223,w,c
 22539  01BBAC  180C               	xorwf	(btemp+11)^0,w,c
 22540  01BBAE  0BFE               	andlw	-2
 22541  01BBB0  180C               	xorwf	(btemp+11)^0,w,c
 22542  01BBB2  6EDF               	movwf	223,c
 22543                           
 22544                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22545  01BBB4  52E5               	movf	postdec1,f,c
 22546  01BBB6  0012               	return		;funcret
 22547  01BBB8                     __end_of_set_vterm:
 22548                           	opt callstack 0
 22549                           
 22550 ;; *************** function _set_temp_display_help *****************
 22551 ;; Defined at:
 22552 ;;		line 211 in file "mconfig.c"
 22553 ;; Parameters:    Size  Location     Type
 22554 ;;  new_response    1  [STACK] const enum E16509
 22555 ;; Auto vars:     Size  Location     Type
 22556 ;;		None
 22557 ;; Return value:  Size  Location     Type
 22558 ;;                  1  [STACK] enum E16509
 22559 ;; Registers used:
 22560 ;;		wreg, fsr1l, fsr1h
 22561 ;; Tracked objects:
 22562 ;;		On entry : 0/1
 22563 ;;		On exit  : 3F/1
 22564 ;;		Unchanged: 0/0
 22565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22570 ;;Total ram usage:        0 bytes
 22571 ;; Hardware stack levels used:    1
 22572 ;; Hardware stack levels required when called:   15
 22573 ;; This function calls:
 22574 ;;		Nothing
 22575 ;; This function is called by:
 22576 ;;		_check_help
 22577 ;; This function uses a reentrant model
 22578 ;;
 22579                           
 22580                           	psect	text81
 22581  01BCFE                     __ptext81:
 22582                           	opt callstack 0
 22583  01BCFE                     _set_temp_display_help:
 22584                           	opt callstack 14
 22585                           
 22586                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22587                           
 22588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22589                           ;incstack = 0
 22590  01BCFE  0101               	movlb	1	; () banked
 22591  01BD00  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 22592                           
 22593                           ; BSR set to: 1
 22594                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22595                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22596  01BD02  0EFF               	movlw	-1
 22597  01BD04  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 22598                           
 22599                           ; BSR set to: 1
 22600                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22601  01BD0A  52E5               	movf	postdec1,f,c
 22602  01BD0C  0012               	return		;funcret
 22603  01BD0E                     __end_of_set_temp_display_help:
 22604                           	opt callstack 0
 22605                           
 22606 ;; *************** function _set_display_info *****************
 22607 ;; Defined at:
 22608 ;;		line 200 in file "mconfig.c"
 22609 ;; Parameters:    Size  Location     Type
 22610 ;;  new_response    1  [STACK] const enum E16509
 22611 ;; Auto vars:     Size  Location     Type
 22612 ;;		None
 22613 ;; Return value:  Size  Location     Type
 22614 ;;                  1  [STACK] enum E16994
 22615 ;; Registers used:
 22616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22617 ;; Tracked objects:
 22618 ;;		On entry : 0/1
 22619 ;;		On exit  : 0/0
 22620 ;;		Unchanged: 0/0
 22621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;Total ram usage:        0 bytes
 22627 ;; Hardware stack levels used:    1
 22628 ;; Hardware stack levels required when called:   16
 22629 ;; This function calls:
 22630 ;;		_TimerDone
 22631 ;; This function is called by:
 22632 ;;		_main
 22633 ;;		_check_help
 22634 ;; This function uses a reentrant model
 22635 ;;
 22636                           
 22637                           	psect	text82
 22638  01BBB8                     __ptext82:
 22639                           	opt callstack 0
 22640  01BBB8                     _set_display_info:
 22641                           	opt callstack 14
 22642                           
 22643                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22644                           
 22645                           ; BSR set to: 1
 22646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22647                           ;incstack = 0
 22648  01BBB8  0E07               	movlw	7
 22649  01BBBA  6EE6               	movwf	postinc1,c
 22650  01BBBC  ECF7  F0DB         	call	_TimerDone	;wreg free
 22651  01BBC0  5001               	movf	btemp^0,w,c
 22652  01BBC2  B4D8               	btfsc	status,2,c
 22653  01BBC4  D006               	goto	l1722
 22654                           
 22655                           ;mconfig.c: 205:   old_info = V.response.info;
 22656  01BBC6  0101               	movlb	1	; () banked
 22657  01BBC8  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 22658                           
 22659                           ; BSR set to: 1
 22660                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22661                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22662  01BBCA  0EFF               	movlw	-1
 22663  01BBCC  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 22664  01BBD2                     l1722:
 22665                           
 22666                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22667  01BBD2  52E5               	movf	postdec1,f,c
 22668  01BBD4  0012               	return		;funcret
 22669  01BBD6                     __end_of_set_display_info:
 22670                           	opt callstack 0
 22671                           
 22672 ;; *************** function _mode_lamp_dim *****************
 22673 ;; Defined at:
 22674 ;;		line 13 in file "mconfig.c"
 22675 ;; Parameters:    Size  Location     Type
 22676 ;;  level           2  [STACK] const unsigned short 
 22677 ;; Auto vars:     Size  Location     Type
 22678 ;;		None
 22679 ;; Return value:  Size  Location     Type
 22680 ;;                  1  [STACK] void 
 22681 ;; Registers used:
 22682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22683 ;; Tracked objects:
 22684 ;;		On entry : 0/1
 22685 ;;		On exit  : 0/0
 22686 ;;		Unchanged: 0/0
 22687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22692 ;;Total ram usage:        0 bytes
 22693 ;; Hardware stack levels used:    1
 22694 ;; Hardware stack levels required when called:   16
 22695 ;; This function calls:
 22696 ;;		_PWM8_LoadDutyValue
 22697 ;; This function is called by:
 22698 ;;		_main
 22699 ;;		_check_help
 22700 ;; This function uses a reentrant model
 22701 ;;
 22702                           
 22703                           	psect	text83
 22704  01BC46                     __ptext83:
 22705                           	opt callstack 0
 22706  01BC46                     _mode_lamp_dim:
 22707                           	opt callstack 14
 22708                           
 22709                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22710                           ;stkvar	_level @ sp[(0)+-2]
 22711                           
 22712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22713                           ;incstack = 0
 22714  01BC46  0EFE               	movlw	-2
 22715  01BC48  006F FF8F FFE6     	movff	plusw1,postinc1
 22716  01BC4E  006F FF8F FFE6     	movff	plusw1,postinc1
 22717  01BC54  EC4D  F0D9         	call	_PWM8_LoadDutyValue	;wreg free
 22718                           
 22719                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22720  01BC58  52E5               	movf	postdec1,f,c
 22721  01BC5A  52E5               	movf	postdec1,f,c
 22722  01BC5C  0012               	return		;funcret
 22723  01BC5E                     __end_of_mode_lamp_dim:
 22724                           	opt callstack 0
 22725                           
 22726 ;; *************** function _mode_lamp_bright *****************
 22727 ;; Defined at:
 22728 ;;		line 18 in file "mconfig.c"
 22729 ;; Parameters:    Size  Location     Type
 22730 ;;		None
 22731 ;; Auto vars:     Size  Location     Type
 22732 ;;		None
 22733 ;; Return value:  Size  Location     Type
 22734 ;;                  1  [STACK] void 
 22735 ;; Registers used:
 22736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22737 ;; Tracked objects:
 22738 ;;		On entry : 0/0
 22739 ;;		On exit  : 0/0
 22740 ;;		Unchanged: 0/0
 22741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22746 ;;Total ram usage:        0 bytes
 22747 ;; Hardware stack levels used:    1
 22748 ;; Hardware stack levels required when called:   16
 22749 ;; This function calls:
 22750 ;;		_PWM8_LoadDutyValue
 22751 ;; This function is called by:
 22752 ;;		_check_help
 22753 ;; This function uses a reentrant model
 22754 ;;
 22755                           
 22756                           	psect	text84
 22757  01BD3A                     __ptext84:
 22758                           	opt callstack 0
 22759  01BD3A                     _mode_lamp_bright:
 22760                           	opt callstack 13
 22761                           
 22762                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22763                           
 22764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22765                           ;incstack = 0
 22766  01BD3A  0E2C               	movlw	44
 22767  01BD3C  6EE6               	movwf	postinc1,c
 22768  01BD3E  0E01               	movlw	1
 22769  01BD40  6EE6               	movwf	postinc1,c
 22770  01BD42  EC4D  F0D9         	call	_PWM8_LoadDutyValue	;wreg free
 22771                           
 22772                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22773  01BD46  0012               	return		;funcret
 22774  01BD48                     __end_of_mode_lamp_bright:
 22775                           	opt callstack 0
 22776                           
 22777 ;; *************** function _PWM8_LoadDutyValue *****************
 22778 ;; Defined at:
 22779 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  dutyValue       2  [STACK] unsigned short 
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;		None
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  1  [STACK] void 
 22786 ;; Registers used:
 22787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/1
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22797 ;;Total ram usage:        0 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; Hardware stack levels required when called:   15
 22800 ;; This function calls:
 22801 ;;		Nothing
 22802 ;; This function is called by:
 22803 ;;		_mode_lamp_dim
 22804 ;;		_mode_lamp_bright
 22805 ;; This function uses a reentrant model
 22806 ;;
 22807                           
 22808                           	psect	text85
 22809  01B29A                     __ptext85:
 22810                           	opt callstack 0
 22811  01B29A                     _PWM8_LoadDutyValue:
 22812                           	opt callstack 14
 22813                           
 22814                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22815                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22816                           
 22817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22818                           ;incstack = 0
 22819  01B29A  0EFE               	movlw	-2
 22820  01B29C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22821  01B2A2  0EFF               	movlw	-1
 22822  01B2A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22823  01B2AA  90D8               	bcf	status,0,c
 22824  01B2AC  320C               	rrcf	(btemp+11)^0,f,c
 22825  01B2AE  320B               	rrcf	(btemp+10)^0,f,c
 22826  01B2B0  90D8               	bcf	status,0,c
 22827  01B2B2  320C               	rrcf	(btemp+11)^0,f,c
 22828  01B2B4  320B               	rrcf	(btemp+10)^0,f,c
 22829  01B2B6  500B               	movf	(btemp+10)^0,w,c
 22830  01B2B8  6E61               	movwf	97,c	;volatile
 22831                           
 22832                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22833                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22834  01B2BA  0EFE               	movlw	-2
 22835  01B2BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22836  01B2C2  0E03               	movlw	3
 22837  01B2C4  160C               	andwf	(btemp+11)^0,f,c
 22838  01B2C6  0E06               	movlw	6
 22839  01B2C8  6E01               	movwf	btemp^0,c
 22840  01B2CA                     u9335:
 22841  01B2CA  90D8               	bcf	status,0,c
 22842  01B2CC  360C               	rlcf	(btemp+11)^0,f,c
 22843  01B2CE  2E01               	decfsz	btemp^0,f,c
 22844  01B2D0  D7FC               	goto	u9335
 22845  01B2D2  500C               	movf	(btemp+11)^0,w,c
 22846  01B2D4  6E60               	movwf	96,c	;volatile
 22847                           
 22848                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22849  01B2D6  52E5               	movf	postdec1,f,c
 22850  01B2D8  52E5               	movf	postdec1,f,c
 22851  01B2DA  0012               	return		;funcret
 22852  01B2DC                     __end_of_PWM8_LoadDutyValue:
 22853                           	opt callstack 0
 22854                           
 22855 ;; *************** function _help_button *****************
 22856 ;; Defined at:
 22857 ;;		line 26 in file "mconfig.c"
 22858 ;; Parameters:    Size  Location     Type
 22859 ;;		None
 22860 ;; Auto vars:     Size  Location     Type
 22861 ;;		None
 22862 ;; Return value:  Size  Location     Type
 22863 ;;                  1  [STACK] _Bool 
 22864 ;; Registers used:
 22865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22866 ;; Tracked objects:
 22867 ;;		On entry : 0/1
 22868 ;;		On exit  : 0/0
 22869 ;;		Unchanged: 0/0
 22870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22875 ;;Total ram usage:        0 bytes
 22876 ;; Hardware stack levels used:    1
 22877 ;; Hardware stack levels required when called:   16
 22878 ;; This function calls:
 22879 ;;		_StartTimer
 22880 ;;		_TimerDone
 22881 ;; This function is called by:
 22882 ;;		_check_help
 22883 ;; This function uses a reentrant model
 22884 ;;
 22885                           
 22886                           	psect	text86
 22887  01B494                     __ptext86:
 22888                           	opt callstack 0
 22889  01B494                     _help_button:
 22890                           	opt callstack 13
 22891                           
 22892                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22893                           
 22894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22895                           ;incstack = 0
 22896  01B494  B0CB               	btfsc	203,0,c	;volatile
 22897  01B496  D00C               	goto	l1665
 22898                           
 22899                           ;mconfig.c: 29:   V.help = 1;
 22900  01B498  0101               	movlb	1	; () banked
 22901  01B49A  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 22902                           
 22903                           ; BSR set to: 1
 22904                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22905  01B49C  0E08               	movlw	8
 22906  01B49E  6EE6               	movwf	postinc1,c
 22907  01B4A0  ECF7  F0DB         	call	_TimerDone	;wreg free
 22908  01B4A4  5001               	movf	btemp^0,w,c
 22909  01B4A6  B4D8               	btfsc	status,2,c
 22910  01B4A8  D003               	goto	l1665
 22911                           
 22912                           ;mconfig.c: 31:    return 1;
 22913  01B4AA  0E01               	movlw	1
 22914  01B4AC  6E01               	movwf	btemp^0,c
 22915  01B4AE  0012               	return	
 22916  01B4B0                     l1665:
 22917                           
 22918                           ;mconfig.c: 34:  if (!V.help)
 22919  01B4B0  0101               	movlb	1	; () banked
 22920  01B4B2  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22921  01B4B4  D008               	goto	l10359
 22922                           
 22923                           ; BSR set to: 1
 22924                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22925  01B4B6  0E2C               	movlw	44
 22926  01B4B8  6EE6               	movwf	postinc1,c
 22927  01B4BA  0E01               	movlw	1
 22928  01B4BC  6EE6               	movwf	postinc1,c
 22929  01B4BE  0E08               	movlw	8
 22930  01B4C0  6EE6               	movwf	postinc1,c
 22931  01B4C2  EC6E  F0D9         	call	_StartTimer	;wreg free
 22932  01B4C6                     l10359:
 22933                           
 22934                           ;mconfig.c: 37:  return 0;
 22935  01B4C6  0E00               	movlw	0
 22936  01B4C8  6E01               	movwf	btemp^0,c
 22937                           
 22938                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22939  01B4CA  0012               	return		;funcret
 22940  01B4CC                     __end_of_help_button:
 22941                           	opt callstack 0
 22942                           
 22943 ;; *************** function _TimerDone *****************
 22944 ;; Defined at:
 22945 ;;		line 20 in file "timers.c"
 22946 ;; Parameters:    Size  Location     Type
 22947 ;;  timer           1  [STACK] const unsigned char 
 22948 ;; Auto vars:     Size  Location     Type
 22949 ;;		None
 22950 ;; Return value:  Size  Location     Type
 22951 ;;                  1  [STACK] _Bool 
 22952 ;; Registers used:
 22953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22954 ;; Tracked objects:
 22955 ;;		On entry : 0/1
 22956 ;;		On exit  : 0/0
 22957 ;;		Unchanged: 0/0
 22958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22963 ;;Total ram usage:        0 bytes
 22964 ;; Hardware stack levels used:    1
 22965 ;; Hardware stack levels required when called:   15
 22966 ;; This function calls:
 22967 ;;		Nothing
 22968 ;; This function is called by:
 22969 ;;		_main
 22970 ;;		_WaitMs
 22971 ;;		_help_button
 22972 ;;		_check_help
 22973 ;;		_set_display_info
 22974 ;;		_update_adc_result
 22975 ;;		_esr_check
 22976 ;; This function uses a reentrant model
 22977 ;;
 22978                           
 22979                           	psect	text87
 22980  01B7EE                     __ptext87:
 22981                           	opt callstack 0
 22982  01B7EE                     _TimerDone:
 22983                           	opt callstack 14
 22984                           
 22985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22986                           ;incstack = 0
 22987  01B7EE  0004               	clrwdt		;# 
 22988                           
 22989                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22990                           ;stkvar	_timer @ sp[(0)+-1]
 22991  01B7F0  0EFF               	movlw	-1
 22992  01B7F2  50E3               	movf	plusw1,w,c
 22993  01B7F4  0D02               	mullw	2
 22994  01B7F6  0E7D               	movlw	low _tickCount
 22995  01B7F8  24F3               	addwf	243,w,c
 22996  01B7FA  6ED9               	movwf	fsr2l,c
 22997  01B7FC  0E02               	movlw	high _tickCount
 22998  01B7FE  20F4               	addwfc	prodh,w,c
 22999  01B800  6EDA               	movwf	fsr2h,c
 23000  01B802  50DE               	movf	postinc2,w,c
 23001  01B804  10DE               	iorwf	postinc2,w,c
 23002  01B806  A4D8               	btfss	status,2,c
 23003  01B808  D002               	goto	l9659
 23004                           
 23005                           ;timers.c: 24:   return 1;
 23006  01B80A  0E01               	movlw	1
 23007  01B80C  D001               	goto	L27
 23008  01B80E                     l9659:
 23009                           
 23010                           ;timers.c: 26:  return 0;
 23011  01B80E  0E00               	movlw	0
 23012  01B810                     L27:
 23013  01B810  6E01               	movwf	btemp^0,c
 23014                           
 23015                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23016  01B812  52E5               	movf	postdec1,f,c
 23017  01B814  0012               	return		;funcret
 23018  01B816                     __end_of_TimerDone:
 23019                           	opt callstack 0
 23020                           
 23021 ;; *************** function _StartTimer *****************
 23022 ;; Defined at:
 23023 ;;		line 12 in file "timers.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;  timer           1  [STACK] const unsigned char 
 23026 ;;  count           2  [STACK] const unsigned short 
 23027 ;; Auto vars:     Size  Location     Type
 23028 ;;		None
 23029 ;; Return value:  Size  Location     Type
 23030 ;;                  1  [STACK] void 
 23031 ;; Registers used:
 23032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23033 ;; Tracked objects:
 23034 ;;		On entry : 0/0
 23035 ;;		On exit  : 0/0
 23036 ;;		Unchanged: 0/0
 23037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23042 ;;Total ram usage:        0 bytes
 23043 ;; Hardware stack levels used:    1
 23044 ;; Hardware stack levels required when called:   15
 23045 ;; This function calls:
 23046 ;;		Nothing
 23047 ;; This function is called by:
 23048 ;;		_main
 23049 ;;		_WaitMs
 23050 ;;		_help_button
 23051 ;;		_check_help
 23052 ;;		_update_adc_result
 23053 ;;		_calc_bsoc
 23054 ;;		_esr_check
 23055 ;; This function uses a reentrant model
 23056 ;;
 23057                           
 23058                           	psect	text88
 23059  01B2DC                     __ptext88:
 23060                           	opt callstack 0
 23061  01B2DC                     _StartTimer:
 23062                           	opt callstack 0
 23063                           
 23064                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23065                           ;stkvar	_count @ sp[(0)+-3]
 23066                           
 23067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23068                           ;incstack = 0
 23069 ;; hardware stack exceeded
 23070  01B2DC  0EFD               	movlw	-3
 23071  01B2DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23072  01B2E4  0EFE               	movlw	-2
 23073  01B2E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23074  01B2EC  90D8               	bcf	status,0,c
 23075  01B2EE  340B               	rlcf	(btemp+10)^0,w,c
 23076  01B2F0  6E09               	movwf	(btemp+8)^0,c
 23077  01B2F2  340C               	rlcf	(btemp+11)^0,w,c
 23078  01B2F4  6E0A               	movwf	(btemp+9)^0,c
 23079                           
 23080                           ;stkvar	_timer @ sp[(0)+-1]
 23081  01B2F6  0EFF               	movlw	-1
 23082  01B2F8  50E3               	movf	plusw1,w,c
 23083  01B2FA  0D02               	mullw	2
 23084  01B2FC  0E7D               	movlw	low _tickCount
 23085  01B2FE  24F3               	addwf	243,w,c
 23086  01B300  6ED9               	movwf	fsr2l,c
 23087  01B302  0E02               	movlw	high _tickCount
 23088  01B304  20F4               	addwfc	prodh,w,c
 23089  01B306  6EDA               	movwf	fsr2h,c
 23090  01B308  0060  F027  FFDE   	movff	btemp+8,postinc2
 23091  01B30E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23092                           
 23093                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23094  01B314  52E5               	movf	postdec1,f,c
 23095  01B316  52E5               	movf	postdec1,f,c
 23096  01B318  52E5               	movf	postdec1,f,c
 23097  01B31A  0012               	return		;funcret
 23098  01B31C                     __end_of_StartTimer:
 23099                           	opt callstack 0
 23100                           
 23101 ;; *************** function _display_info *****************
 23102 ;; Defined at:
 23103 ;;		line 190 in file "mconfig.c"
 23104 ;; Parameters:    Size  Location     Type
 23105 ;;		None
 23106 ;; Auto vars:     Size  Location     Type
 23107 ;;		None
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  1  [STACK] enum E16509
 23110 ;; Registers used:
 23111 ;;		btemp
 23112 ;; Tracked objects:
 23113 ;;		On entry : 0/1
 23114 ;;		On exit  : 0/0
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;Total ram usage:        0 bytes
 23122 ;; Hardware stack levels used:    1
 23123 ;; Hardware stack levels required when called:   15
 23124 ;; This function calls:
 23125 ;;		Nothing
 23126 ;; This function is called by:
 23127 ;;		_check_help
 23128 ;; This function uses a reentrant model
 23129 ;;
 23130                           
 23131                           	psect	text89
 23132  01BDBE                     __ptext89:
 23133                           	opt callstack 0
 23134  01BDBE                     _display_info:
 23135                           	opt callstack 14
 23136                           
 23137                           ;mconfig.c: 192:  return V.response.info;
 23138                           
 23139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23140                           ;incstack = 0
 23141  01BDBE  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23142                           
 23143                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23144  01BDC4  0012               	return		;funcret
 23145  01BDC6                     __end_of_display_info:
 23146                           	opt callstack 0
 23147                           
 23148 ;; *************** function _display_help *****************
 23149 ;; Defined at:
 23150 ;;		line 195 in file "mconfig.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;		None
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;		None
 23155 ;; Return value:  Size  Location     Type
 23156 ;;                  1  [STACK] enum E16509
 23157 ;; Registers used:
 23158 ;;		btemp
 23159 ;; Tracked objects:
 23160 ;;		On entry : 3F/1
 23161 ;;		On exit  : 0/0
 23162 ;;		Unchanged: 0/0
 23163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;Total ram usage:        0 bytes
 23169 ;; Hardware stack levels used:    1
 23170 ;; Hardware stack levels required when called:   15
 23171 ;; This function calls:
 23172 ;;		Nothing
 23173 ;; This function is called by:
 23174 ;;		_check_help
 23175 ;; This function uses a reentrant model
 23176 ;;
 23177                           
 23178                           	psect	text90
 23179  01BDC6                     __ptext90:
 23180                           	opt callstack 0
 23181  01BDC6                     _display_help:
 23182                           	opt callstack 14
 23183                           
 23184                           ;mconfig.c: 197:  return V.response.help_temp;
 23185                           
 23186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23187                           ;incstack = 0
 23188  01BDC6  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23189                           
 23190                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23191  01BDCC  0012               	return		;funcret
 23192  01BDCE                     __end_of_display_help:
 23193                           	opt callstack 0
 23194                           
 23195 ;; *************** function _check_enter_button *****************
 23196 ;; Defined at:
 23197 ;;		line 42 in file "hid.c"
 23198 ;; Parameters:    Size  Location     Type
 23199 ;;  h               1  [STACK] PTR struct H_data
 23200 ;;		 -> H(7), 
 23201 ;; Auto vars:     Size  Location     Type
 23202 ;;		None
 23203 ;; Return value:  Size  Location     Type
 23204 ;;                  1  [STACK] _Bool 
 23205 ;; Registers used:
 23206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23207 ;; Tracked objects:
 23208 ;;		On entry : 0/0
 23209 ;;		On exit  : 0/0
 23210 ;;		Unchanged: 0/0
 23211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23216 ;;Total ram usage:        0 bytes
 23217 ;; Hardware stack levels used:    1
 23218 ;; Hardware stack levels required when called:   15
 23219 ;; This function calls:
 23220 ;;		Nothing
 23221 ;; This function is called by:
 23222 ;;		_main
 23223 ;; This function uses a reentrant model
 23224 ;;
 23225                           
 23226                           	psect	text91
 23227  01B31C                     __ptext91:
 23228                           	opt callstack 0
 23229  01B31C                     _check_enter_button:
 23230                           	opt callstack 15
 23231                           
 23232                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23233                           ;stkvar	_h @ sp[(0)+-1]
 23234                           
 23235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23236                           ;incstack = 0
 23237  01B31C  0EFF               	movlw	-1
 23238  01B31E  50E3               	movf	plusw1,w,c
 23239  01B320  6ED9               	movwf	fsr2l,c
 23240  01B322  6ADA               	clrf	fsr2h,c
 23241  01B324  0E04               	movlw	4
 23242  01B326  26D9               	addwf	fsr2l,f,c
 23243  01B328  50DF               	movf	indf2,w,c
 23244  01B32A  A4D8               	btfss	status,2,c
 23245  01B32C  D013               	goto	l10961
 23246                           
 23247                           ;stkvar	_h @ sp[(0)+-1]
 23248  01B32E  0EFF               	movlw	-1
 23249  01B330  50E3               	movf	plusw1,w,c
 23250  01B332  6ED9               	movwf	fsr2l,c
 23251  01B334  6ADA               	clrf	fsr2h,c
 23252  01B336  0E05               	movlw	5
 23253  01B338  26D9               	addwf	fsr2l,f,c
 23254  01B33A  50DF               	movf	indf2,w,c
 23255  01B33C  A4D8               	btfss	status,2,c
 23256  01B33E  D00A               	goto	l10961
 23257                           
 23258                           ;hid.c: 45:   h->wait_enter = 1;
 23259                           ;stkvar	_h @ sp[(0)+-1]
 23260  01B340  0EFF               	movlw	-1
 23261  01B342  50E3               	movf	plusw1,w,c
 23262  01B344  6ED9               	movwf	fsr2l,c
 23263  01B346  6ADA               	clrf	fsr2h,c
 23264  01B348  0E04               	movlw	4
 23265  01B34A  26D9               	addwf	fsr2l,f,c
 23266  01B34C  0E01               	movlw	1
 23267  01B34E  6EDF               	movwf	indf2,c
 23268                           
 23269                           ;hid.c: 46:   return 1;
 23270  01B350  0E01               	movlw	1
 23271  01B352  D001               	goto	L28
 23272  01B354                     l10961:
 23273                           
 23274                           ;hid.c: 48:  return 0;
 23275  01B354  0E00               	movlw	0
 23276  01B356                     L28:
 23277  01B356  6E01               	movwf	btemp^0,c
 23278                           
 23279                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23280  01B358  52E5               	movf	postdec1,f,c
 23281  01B35A  0012               	return		;funcret
 23282  01B35C                     __end_of_check_enter_button:
 23283                           	opt callstack 0
 23284                           
 23285 ;; *************** function _calc_ror_data *****************
 23286 ;; Defined at:
 23287 ;;		line 102 in file "mbmc.c"
 23288 ;; Parameters:    Size  Location     Type
 23289 ;;		None
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;		None
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1  [STACK] void 
 23294 ;; Registers used:
 23295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23296 ;; Tracked objects:
 23297 ;;		On entry : 0/39
 23298 ;;		On exit  : 0/0
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23305 ;;Total ram usage:        0 bytes
 23306 ;; Hardware stack levels used:    1
 23307 ;; Hardware stack levels required when called:   18
 23308 ;; This function calls:
 23309 ;;		___flge
 23310 ;;		___flsub
 23311 ;;		_conv_raw_result
 23312 ;;		_fabsf
 23313 ;; This function is called by:
 23314 ;;		_main
 23315 ;; This function uses a reentrant model
 23316 ;;
 23317                           
 23318                           	psect	text92
 23319  01888A                     __ptext92:
 23320                           	opt callstack 0
 23321  01888A                     _calc_ror_data:
 23322                           	opt callstack 12
 23323                           
 23324                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23325                           
 23326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23327                           ;incstack = 0
 23328  01888A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23329  018890  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23330  018896  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23331  01889C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23332  0188A2  0E00               	movlw	0
 23333  0188A4  6EE6               	movwf	postinc1,c
 23334  0188A6  0E00               	movlw	0
 23335  0188A8  6EE6               	movwf	postinc1,c
 23336  0188AA  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23337  0188AE  0060  F007  FFE6   	movff	btemp,postinc1
 23338  0188B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23339  0188BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23340  0188C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23341  0188C6  EC08  F0D9         	call	___flsub	;wreg free
 23342  0188CA  0060  F007  FFE6   	movff	btemp,postinc1
 23343  0188D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23344  0188D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23345  0188DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23346  0188E2  EC8B  F0D1         	call	_fabsf	;wreg free
 23347  0188E6  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23348  0188EC  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23349  0188F2  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23350  0188F8  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23351                           
 23352                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23353  0188FE  0E00               	movlw	0
 23354  018900  6EE6               	movwf	postinc1,c
 23355  018902  0E00               	movlw	0
 23356  018904  6EE6               	movwf	postinc1,c
 23357  018906  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23358  01890A  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23359  018910  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23360  018916  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23361  01891C  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23362                           
 23363                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23364  018922  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23365  018928  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23366  01892E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23367  018934  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23368  01893A  0E00               	movlw	0
 23369  01893C  6EE6               	movwf	postinc1,c
 23370  01893E  0E04               	movlw	4
 23371  018940  6EE6               	movwf	postinc1,c
 23372  018942  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23373  018946  0060  F007  FFE6   	movff	btemp,postinc1
 23374  01894C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23375  018952  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23376  018958  0060  F013  FFE6   	movff	btemp+3,postinc1
 23377  01895E  EC08  F0D9         	call	___flsub	;wreg free
 23378  018962  0060  F007  FFE6   	movff	btemp,postinc1
 23379  018968  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23380  01896E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23381  018974  0060  F013  FFE6   	movff	btemp+3,postinc1
 23382  01897A  EC8B  F0D1         	call	_fabsf	;wreg free
 23383  01897E  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23384  018984  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23385  01898A  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23386  018990  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23387                           
 23388                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23389  018996  0EE7               	movlw	231
 23390  018998  6EE6               	movwf	postinc1,c
 23391  01899A  0E1D               	movlw	29
 23392  01899C  6EE6               	movwf	postinc1,c
 23393  01899E  0EA7               	movlw	167
 23394  0189A0  6EE6               	movwf	postinc1,c
 23395  0189A2  0E3B               	movlw	59
 23396  0189A4  6EE6               	movwf	postinc1,c
 23397  0189A6  EE21  F36B         	lfsr	2,_C+108	;volatile
 23398  0189AA  006F FF7B FFE6     	movff	postinc2,postinc1
 23399  0189B0  006F FF7B FFE6     	movff	postinc2,postinc1
 23400  0189B6  006F FF7B FFE6     	movff	postinc2,postinc1
 23401  0189BC  006F FF7B FFE6     	movff	postinc2,postinc1
 23402  0189C2  EC81  F0C6         	call	___flge	;wreg free
 23403  0189C6  B001               	btfsc	btemp& (0+255),0,c
 23404  0189C8  D010               	goto	l10753
 23405                           
 23406                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23407  0189CA  0EB0               	movlw	176
 23408  0189CC  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23409  0189D2  0E03               	movlw	3
 23410  0189D4  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23411  0189DA  0E67               	movlw	103
 23412  0189DC  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23413  0189E2  0E3C               	movlw	60
 23414  0189E4  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23415  0189EA                     l10753:
 23416                           
 23417                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23418  0189EA  0E00               	movlw	0
 23419  0189EC  6EE6               	movwf	postinc1,c
 23420  0189EE  0E04               	movlw	4
 23421  0189F0  6EE6               	movwf	postinc1,c
 23422  0189F2  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23423  0189F6  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23424  0189FC  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23425  018A02  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23426  018A08  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23427                           
 23428                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23429  018A0E  0012               	return		;funcret
 23430  018A10                     __end_of_calc_ror_data:
 23431                           	opt callstack 0
 23432                           
 23433 ;; *************** function _fabsf *****************
 23434 ;; Defined at:
 23435 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23436 ;; Parameters:    Size  Location     Type
 23437 ;;  x               4  [STACK] float 
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;  u               4  [STACK] struct .
 23440 ;; Return value:  Size  Location     Type
 23441 ;;                  4  [STACK] float 
 23442 ;; Registers used:
 23443 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23444 ;; Tracked objects:
 23445 ;;		On entry : 0/0
 23446 ;;		On exit  : 0/0
 23447 ;;		Unchanged: 0/0
 23448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23453 ;;Total ram usage:        0 bytes
 23454 ;; Hardware stack levels used:    1
 23455 ;; Hardware stack levels required when called:   15
 23456 ;; This function calls:
 23457 ;;		Nothing
 23458 ;; This function is called by:
 23459 ;;		_main
 23460 ;;		_calc_ror_data
 23461 ;;		_calc_bsoc
 23462 ;;		_esr_check
 23463 ;; This function uses a reentrant model
 23464 ;;
 23465                           
 23466                           	psect	text93
 23467  01A316                     __ptext93:
 23468                           	opt callstack 0
 23469  01A316                     _fabsf:
 23470                           	opt callstack 0
 23471                           
 23472                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23473  01A316  52E6               	movf	postinc1,f,c
 23474  01A318  52E6               	movf	postinc1,f,c
 23475  01A31A  52E6               	movf	postinc1,f,c
 23476  01A31C  52E6               	movf	postinc1,f,c
 23477                           
 23478                           ;incstack = 0
 23479 ;; hardware stack exceeded
 23480  01A31E  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23481  01A324  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23482  01A32A  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23483  01A330  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23484                           
 23485                           ;stkvar	_u @ sp[(-4)+0]
 23486  01A336  0EFC               	movlw	-4
 23487  01A338  0060  F027  FFE3   	movff	btemp+8,plusw1
 23488  01A33E  0EFD               	movlw	-3
 23489  01A340  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23490  01A346  0EFE               	movlw	-2
 23491  01A348  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23492  01A34E  0EFF               	movlw	-1
 23493  01A350  0060  F033  FFE3   	movff	btemp+11,plusw1
 23494                           
 23495                           ;stkvar	_x @ sp[(-4)+-4]
 23496  01A356  0EF8               	movlw	-8
 23497  01A358  006F FF8C  F009    	movff	plusw1,btemp+8
 23498  01A35E  0EF9               	movlw	-7
 23499  01A360  006F FF8C  F00A    	movff	plusw1,btemp+9
 23500  01A366  0EFA               	movlw	-6
 23501  01A368  006F FF8C  F00B    	movff	plusw1,btemp+10
 23502  01A36E  0EFB               	movlw	-5
 23503  01A370  006F FF8C  F00C    	movff	plusw1,btemp+11
 23504                           
 23505                           ;stkvar	_u @ sp[(-4)+0]
 23506  01A376  0EFC               	movlw	-4
 23507  01A378  0060  F027  FFE3   	movff	btemp+8,plusw1
 23508  01A37E  0EFD               	movlw	-3
 23509  01A380  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23510  01A386  0EFE               	movlw	-2
 23511  01A388  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23512  01A38E  0EFF               	movlw	-1
 23513  01A390  0060  F033  FFE3   	movff	btemp+11,plusw1
 23514                           
 23515                           ;stkvar	_u @ sp[(-4)+0]
 23516  01A396  0EFF               	movlw	-1
 23517  01A398  9EE3               	bcf	plusw1,7,c
 23518                           
 23519                           ;stkvar	_u @ sp[(-4)+0]
 23520  01A39A  0EFC               	movlw	-4
 23521  01A39C  006F FF8C  F001    	movff	plusw1,btemp
 23522  01A3A2  0EFD               	movlw	-3
 23523  01A3A4  006F FF8C  F002    	movff	plusw1,btemp+1
 23524  01A3AA  0EFE               	movlw	-2
 23525  01A3AC  006F FF8C  F003    	movff	plusw1,btemp+2
 23526  01A3B2  0EFF               	movlw	-1
 23527  01A3B4  006F FF8C  F004    	movff	plusw1,btemp+3
 23528                           
 23529                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23530  01A3BA  0EF8               	movlw	248
 23531  01A3BC  26E1               	addwf	fsr1l,f,c
 23532  01A3BE  0EFF               	movlw	255
 23533  01A3C0  22E2               	addwfc	fsr1h,f,c
 23534  01A3C2  0012               	return		;funcret
 23535  01A3C4                     __end_of_fabsf:
 23536                           	opt callstack 0
 23537                           
 23538 ;; *************** function _conv_raw_result *****************
 23539 ;; Defined at:
 23540 ;;		line 98 in file "daq.c"
 23541 ;; Parameters:    Size  Location     Type
 23542 ;;  chan            1  [STACK] const enum E16582
 23543 ;;  to_what         1  [STACK] const enum E16644
 23544 ;; Auto vars:     Size  Location     Type
 23545 ;;		None
 23546 ;; Return value:  Size  Location     Type
 23547 ;;                  4  [STACK] float 
 23548 ;; Registers used:
 23549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23550 ;; Tracked objects:
 23551 ;;		On entry : 0/39
 23552 ;;		On exit  : 0/0
 23553 ;;		Unchanged: 0/0
 23554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23559 ;;Total ram usage:        0 bytes
 23560 ;; Hardware stack levels used:    1
 23561 ;; Hardware stack levels required when called:   17
 23562 ;; This function calls:
 23563 ;;		___fladd
 23564 ;;		___fldiv
 23565 ;;		___flmul
 23566 ;;		___flsub
 23567 ;;		___xxtofl
 23568 ;;		_get_raw_result
 23569 ;;		_nanf
 23570 ;; This function is called by:
 23571 ;;		_main
 23572 ;;		_convert_adc_data
 23573 ;;		_calc_ror_data
 23574 ;;		_check_day_time
 23575 ;;		_init_bsoc
 23576 ;;		_esr_check
 23577 ;; This function uses a reentrant model
 23578 ;;
 23579                           
 23580                           	psect	text94
 23581  01501C                     __ptext94:
 23582                           	opt callstack 0
 23583  01501C                     _conv_raw_result:
 23584                           	opt callstack 0
 23585                           
 23586                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 23587                           
 23588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23589                           ;incstack = 0
 23590 ;; hardware stack exceeded
 23591  01501C  D276               	goto	l9641
 23592  01501E                     l9587:
 23593                           
 23594                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 23595                           ;stkvar	_chan @ sp[(0)+-1]
 23596  01501E  0EFF               	movlw	-1
 23597  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 23598  015026  0E77               	movlw	119
 23599  015028  6E09               	movwf	(btemp+8)^0,c
 23600  01502A  0E3C               	movlw	60
 23601  01502C  6E0A               	movwf	(btemp+9)^0,c
 23602  01502E  2A0C               	incf	(btemp+11)^0,f,c
 23603  015030  D003               	goto	u9054
 23604  015032                     u9055:
 23605  015032  340A               	rlcf	(btemp+9)^0,w,c
 23606  015034  320A               	rrcf	(btemp+9)^0,f,c
 23607  015036  3209               	rrcf	(btemp+8)^0,f,c
 23608  015038                     u9054:
 23609  015038  2E0C               	decfsz	(btemp+11)^0,f,c
 23610  01503A  D7FB               	goto	u9055
 23611  01503C  B009               	btfsc	(btemp+8)^0,0,c
 23612  01503E  D007               	goto	l9593
 23613                           
 23614                           ;daq.c: 104:    return nanf("");
 23615  015040  0EB9               	movlw	low (STR_65+102)
 23616  015042  6EE6               	movwf	postinc1,c
 23617  015044  0EFC               	movlw	high (STR_65+102)
 23618  015046  6EE6               	movwf	postinc1,c
 23619  015048  ECD3  F0D6         	call	_nanf	;wreg free
 23620  01504C  D26E               	goto	l1784
 23621  01504E                     l9593:
 23622                           
 23623                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 23624                           ;stkvar	_chan @ sp[(0)+-1]
 23625  01504E  0EFF               	movlw	-1
 23626  015050  006F FF8C  F00C    	movff	plusw1,btemp+11
 23627  015056  0E03               	movlw	3
 23628  015058  6E09               	movwf	(btemp+8)^0,c
 23629  01505A  0E00               	movlw	0
 23630  01505C  6E0A               	movwf	(btemp+9)^0,c
 23631  01505E  2A0C               	incf	(btemp+11)^0,f,c
 23632  015060  D003               	goto	u9074
 23633  015062                     u9075:
 23634  015062  340A               	rlcf	(btemp+9)^0,w,c
 23635  015064  320A               	rrcf	(btemp+9)^0,f,c
 23636  015066  3209               	rrcf	(btemp+8)^0,f,c
 23637  015068                     u9074:
 23638  015068  2E0C               	decfsz	(btemp+11)^0,f,c
 23639  01506A  D7FB               	goto	u9075
 23640  01506C  A009               	btfss	(btemp+8)^0,0,c
 23641  01506E  D11F               	goto	l9607
 23642                           
 23643                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 23644                           ;stkvar	_chan @ sp[(0)+-1]
 23645  015070  0EFF               	movlw	-1
 23646  015072  006F FF8C  F00C    	movff	plusw1,btemp+11
 23647  015078  0E01               	movlw	1
 23648  01507A  6E09               	movwf	(btemp+8)^0,c
 23649  01507C  0E00               	movlw	0
 23650  01507E  6E0A               	movwf	(btemp+9)^0,c
 23651  015080  2A0C               	incf	(btemp+11)^0,f,c
 23652  015082  D003               	goto	u9094
 23653  015084                     u9095:
 23654  015084  340A               	rlcf	(btemp+9)^0,w,c
 23655  015086  320A               	rrcf	(btemp+9)^0,f,c
 23656  015088  3209               	rrcf	(btemp+8)^0,f,c
 23657  01508A                     u9094:
 23658  01508A  2E0C               	decfsz	(btemp+11)^0,f,c
 23659  01508C  D7FB               	goto	u9095
 23660  01508E  A009               	btfss	(btemp+8)^0,0,c
 23661  015090  D087               	goto	l9603
 23662                           
 23663                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 23664  015092  0060  F493  FFE6   	movff	_R+36,postinc1
 23665  015098  0060  F497  FFE6   	movff	_R+37,postinc1
 23666  01509E  0060  F49B  FFE6   	movff	_R+38,postinc1
 23667  0150A4  0060  F49F  FFE6   	movff	_R+39,postinc1
 23668  0150AA  0E7B               	movlw	123
 23669  0150AC  6EE6               	movwf	postinc1,c
 23670  0150AE  0E14               	movlw	20
 23671  0150B0  6EE6               	movwf	postinc1,c
 23672  0150B2  0EAE               	movlw	174
 23673  0150B4  6EE6               	movwf	postinc1,c
 23674  0150B6  0E3D               	movlw	61
 23675  0150B8  6EE6               	movwf	postinc1,c
 23676  0150BA  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 23677  0150C0  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 23678  0150C6  0E00               	movlw	0
 23679  0150C8  BE0A               	btfsc	(btemp+9)^0,7,c
 23680  0150CA  0EFF               	movlw	255
 23681  0150CC  6E0B               	movwf	(btemp+10)^0,c
 23682  0150CE  6E0C               	movwf	(btemp+11)^0,c
 23683  0150D0  0060  F027  FFE6   	movff	btemp+8,postinc1
 23684  0150D6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23685  0150DC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23686  0150E2  0060  F033  FFE6   	movff	btemp+11,postinc1
 23687  0150E8  0E01               	movlw	1
 23688  0150EA  6EE6               	movwf	postinc1,c
 23689  0150EC  ECCA  F0C0         	call	___xxtofl	;wreg free
 23690  0150F0  0060  F007  FFE6   	movff	btemp,postinc1
 23691  0150F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23692  0150FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23693  015102  0060  F013  FFE6   	movff	btemp+3,postinc1
 23694                           
 23695                           ;stkvar	_chan @ sp[(-12)+-1]
 23696  015108  0EF3               	movlw	-13
 23697  01510A  50E3               	movf	plusw1,w,c
 23698  01510C  6EE6               	movwf	postinc1,c
 23699  01510E  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23700  015112  0060  F004  F00B   	movff	btemp,btemp+10
 23701  015118  0060  F008  F00C   	movff	btemp+1,btemp+11
 23702  01511E  500B               	movf	(btemp+10)^0,w,c
 23703  015120  6E05               	movwf	(btemp+4)^0,c
 23704  015122  500C               	movf	(btemp+11)^0,w,c
 23705  015124  6E06               	movwf	(btemp+5)^0,c
 23706  015126  6A07               	clrf	(btemp+6)^0,c
 23707  015128  6A08               	clrf	(btemp+7)^0,c
 23708  01512A  0060  F017  FFE6   	movff	btemp+4,postinc1
 23709  015130  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23710  015136  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23711  01513C  0060  F023  FFE6   	movff	btemp+7,postinc1
 23712  015142  0E00               	movlw	0
 23713  015144  6EE6               	movwf	postinc1,c
 23714  015146  ECCA  F0C0         	call	___xxtofl	;wreg free
 23715  01514A  0060  F007  FFE6   	movff	btemp,postinc1
 23716  015150  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23717  015156  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23718  01515C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23719  015162  EC08  F0D9         	call	___flsub	;wreg free
 23720  015166  0060  F007  FFE6   	movff	btemp,postinc1
 23721  01516C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23722  015172  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23723  015178  0060  F013  FFE6   	movff	btemp+3,postinc1
 23724  01517E  ECA0  F099         	call	___flmul	;wreg free
 23725  015182  0060  F007  FFE6   	movff	btemp,postinc1
 23726  015188  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23727  01518E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23728  015194  0060  F013  FFE6   	movff	btemp+3,postinc1
 23729  01519A  ECB5  F09D         	call	___fladd	;wreg free
 23730  01519E  D1C5               	goto	l1784
 23731  0151A0                     l9603:
 23732                           
 23733                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 23734  0151A0  0060  F4A3  FFE6   	movff	_R+40,postinc1
 23735  0151A6  0060  F4A7  FFE6   	movff	_R+41,postinc1
 23736  0151AC  0060  F4AB  FFE6   	movff	_R+42,postinc1
 23737  0151B2  0060  F4AF  FFE6   	movff	_R+43,postinc1
 23738  0151B8  0E29               	movlw	41
 23739  0151BA  6EE6               	movwf	postinc1,c
 23740  0151BC  0E5C               	movlw	92
 23741  0151BE  6EE6               	movwf	postinc1,c
 23742  0151C0  0E0F               	movlw	15
 23743  0151C2  6EE6               	movwf	postinc1,c
 23744  0151C4  0E3D               	movlw	61
 23745  0151C6  6EE6               	movwf	postinc1,c
 23746  0151C8  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 23747  0151CE  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 23748  0151D4  0E00               	movlw	0
 23749  0151D6  BE0A               	btfsc	(btemp+9)^0,7,c
 23750  0151D8  0EFF               	movlw	255
 23751  0151DA  6E0B               	movwf	(btemp+10)^0,c
 23752  0151DC  6E0C               	movwf	(btemp+11)^0,c
 23753  0151DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 23754  0151E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23755  0151EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23756  0151F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 23757  0151F6  0E01               	movlw	1
 23758  0151F8  6EE6               	movwf	postinc1,c
 23759  0151FA  ECCA  F0C0         	call	___xxtofl	;wreg free
 23760  0151FE  0060  F007  FFE6   	movff	btemp,postinc1
 23761  015204  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23762  01520A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23763  015210  0060  F013  FFE6   	movff	btemp+3,postinc1
 23764                           
 23765                           ;stkvar	_chan @ sp[(-12)+-1]
 23766  015216  0EF3               	movlw	-13
 23767  015218  50E3               	movf	plusw1,w,c
 23768  01521A  6EE6               	movwf	postinc1,c
 23769  01521C  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23770  015220  0060  F004  F00B   	movff	btemp,btemp+10
 23771  015226  0060  F008  F00C   	movff	btemp+1,btemp+11
 23772  01522C  500B               	movf	(btemp+10)^0,w,c
 23773  01522E  6E05               	movwf	(btemp+4)^0,c
 23774  015230  500C               	movf	(btemp+11)^0,w,c
 23775  015232  6E06               	movwf	(btemp+5)^0,c
 23776  015234  6A07               	clrf	(btemp+6)^0,c
 23777  015236  6A08               	clrf	(btemp+7)^0,c
 23778  015238  0060  F017  FFE6   	movff	btemp+4,postinc1
 23779  01523E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23780  015244  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23781  01524A  0060  F023  FFE6   	movff	btemp+7,postinc1
 23782  015250  0E00               	movlw	0
 23783  015252  6EE6               	movwf	postinc1,c
 23784  015254  ECCA  F0C0         	call	___xxtofl	;wreg free
 23785  015258  0060  F007  FFE6   	movff	btemp,postinc1
 23786  01525E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23787  015264  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23788  01526A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23789  015270  EC08  F0D9         	call	___flsub	;wreg free
 23790  015274  0060  F007  FFE6   	movff	btemp,postinc1
 23791  01527A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23792  015280  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23793  015286  0060  F013  FFE6   	movff	btemp+3,postinc1
 23794  01528C  ECA0  F099         	call	___flmul	;wreg free
 23795  015290  0060  F007  FFE6   	movff	btemp,postinc1
 23796  015296  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23797  01529C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23798  0152A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23799  0152A8  ECB5  F09D         	call	___fladd	;wreg free
 23800  0152AC  D13E               	goto	l1784
 23801  0152AE                     l9607:
 23802                           
 23803                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 23804                           ;stkvar	_chan @ sp[(0)+-1]
 23805  0152AE  0EFF               	movlw	-1
 23806  0152B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23807  0152B6  0E00               	movlw	0
 23808  0152B8  6E09               	movwf	(btemp+8)^0,c
 23809  0152BA  0E08               	movlw	8
 23810  0152BC  6E0A               	movwf	(btemp+9)^0,c
 23811  0152BE  2A0C               	incf	(btemp+11)^0,f,c
 23812  0152C0  D003               	goto	u9114
 23813  0152C2                     u9115:
 23814  0152C2  340A               	rlcf	(btemp+9)^0,w,c
 23815  0152C4  320A               	rrcf	(btemp+9)^0,f,c
 23816  0152C6  3209               	rrcf	(btemp+8)^0,f,c
 23817  0152C8                     u9114:
 23818  0152C8  2E0C               	decfsz	(btemp+11)^0,f,c
 23819  0152CA  D7FB               	goto	u9115
 23820  0152CC  A009               	btfss	(btemp+8)^0,0,c
 23821  0152CE  D008               	goto	l9615
 23822                           
 23823                           ;daq.c: 114:     return 25.0;
 23824  0152D0  0E00               	movlw	0
 23825  0152D2  6E01               	movwf	btemp^0,c
 23826  0152D4  0E00               	movlw	0
 23827  0152D6  6E02               	movwf	(btemp+1)^0,c
 23828  0152D8  0EC8               	movlw	200
 23829  0152DA  6E03               	movwf	(btemp+2)^0,c
 23830  0152DC  0E41               	movlw	65
 23831  0152DE  D113               	goto	L29
 23832  0152E0                     l9615:
 23833                           
 23834                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23835  0152E0  0E00               	movlw	0
 23836  0152E2  6EE6               	movwf	postinc1,c
 23837  0152E4  0E00               	movlw	0
 23838  0152E6  6EE6               	movwf	postinc1,c
 23839  0152E8  0E7A               	movlw	122
 23840  0152EA  6EE6               	movwf	postinc1,c
 23841  0152EC  0E44               	movlw	68
 23842  0152EE  6EE6               	movwf	postinc1,c
 23843  0152F0  0E61               	movlw	97
 23844  0152F2  6EE6               	movwf	postinc1,c
 23845  0152F4  0E03               	movlw	3
 23846  0152F6  6EE6               	movwf	postinc1,c
 23847  0152F8  0E84               	movlw	132
 23848  0152FA  6EE6               	movwf	postinc1,c
 23849  0152FC  0E40               	movlw	64
 23850  0152FE  6EE6               	movwf	postinc1,c
 23851                           
 23852                           ;stkvar	_chan @ sp[(-8)+-1]
 23853  015300  0EF7               	movlw	-9
 23854  015302  50E3               	movf	plusw1,w,c
 23855  015304  6EE6               	movwf	postinc1,c
 23856  015306  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23857  01530A  0060  F004  F00B   	movff	btemp,btemp+10
 23858  015310  0060  F008  F00C   	movff	btemp+1,btemp+11
 23859  015316  500B               	movf	(btemp+10)^0,w,c
 23860  015318  6E05               	movwf	(btemp+4)^0,c
 23861  01531A  500C               	movf	(btemp+11)^0,w,c
 23862  01531C  6E06               	movwf	(btemp+5)^0,c
 23863  01531E  6A07               	clrf	(btemp+6)^0,c
 23864  015320  6A08               	clrf	(btemp+7)^0,c
 23865  015322  0060  F017  FFE6   	movff	btemp+4,postinc1
 23866  015328  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23867  01532E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23868  015334  0060  F023  FFE6   	movff	btemp+7,postinc1
 23869  01533A  0E00               	movlw	0
 23870  01533C  6EE6               	movwf	postinc1,c
 23871  01533E  ECCA  F0C0         	call	___xxtofl	;wreg free
 23872  015342  0060  F007  FFE6   	movff	btemp,postinc1
 23873  015348  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23874  01534E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23875  015354  0060  F013  FFE6   	movff	btemp+3,postinc1
 23876  01535A  ECA0  F099         	call	___flmul	;wreg free
 23877  01535E  0060  F007  FFE6   	movff	btemp,postinc1
 23878  015364  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23879  01536A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23880  015370  0060  F013  FFE6   	movff	btemp+3,postinc1
 23881  015376  EC51  F0A5         	call	___fldiv	;wreg free
 23882  01537A  D0D7               	goto	l1784
 23883  01537C                     l9619:
 23884                           
 23885                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23886                           ;stkvar	_chan @ sp[(0)+-1]
 23887  01537C  0EFF               	movlw	-1
 23888  01537E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23889  015384  0E03               	movlw	3
 23890  015386  6E09               	movwf	(btemp+8)^0,c
 23891  015388  0E00               	movlw	0
 23892  01538A  6E0A               	movwf	(btemp+9)^0,c
 23893  01538C  2A0C               	incf	(btemp+11)^0,f,c
 23894  01538E  D003               	goto	u9134
 23895  015390                     u9135:
 23896  015390  340A               	rlcf	(btemp+9)^0,w,c
 23897  015392  320A               	rrcf	(btemp+9)^0,f,c
 23898  015394  3209               	rrcf	(btemp+8)^0,f,c
 23899  015396                     u9134:
 23900  015396  2E0C               	decfsz	(btemp+11)^0,f,c
 23901  015398  D7FB               	goto	u9135
 23902  01539A  B009               	btfsc	(btemp+8)^0,0,c
 23903  01539C  D011               	goto	u9160
 23904                           
 23905                           ;stkvar	_chan @ sp[(0)+-1]
 23906  01539E  0EFF               	movlw	-1
 23907  0153A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23908  0153A6  0E00               	movlw	0
 23909  0153A8  6E09               	movwf	(btemp+8)^0,c
 23910  0153AA  0E08               	movlw	8
 23911  0153AC  6E0A               	movwf	(btemp+9)^0,c
 23912  0153AE  2A0C               	incf	(btemp+11)^0,f,c
 23913  0153B0  D003               	goto	u9154
 23914  0153B2                     u9155:
 23915  0153B2  340A               	rlcf	(btemp+9)^0,w,c
 23916  0153B4  320A               	rrcf	(btemp+9)^0,f,c
 23917  0153B6  3209               	rrcf	(btemp+8)^0,f,c
 23918  0153B8                     u9154:
 23919  0153B8  2E0C               	decfsz	(btemp+11)^0,f,c
 23920  0153BA  D7FB               	goto	u9155
 23921  0153BC  A009               	btfss	(btemp+8)^0,0,c
 23922  0153BE  D04E               	goto	l9627
 23923  0153C0                     u9160:
 23924                           
 23925                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23926  0153C0  0E00               	movlw	0
 23927  0153C2  6EE6               	movwf	postinc1,c
 23928  0153C4  0E00               	movlw	0
 23929  0153C6  6EE6               	movwf	postinc1,c
 23930  0153C8  0E7A               	movlw	122
 23931  0153CA  6EE6               	movwf	postinc1,c
 23932  0153CC  0E44               	movlw	68
 23933  0153CE  6EE6               	movwf	postinc1,c
 23934  0153D0  0E00               	movlw	0
 23935  0153D2  6EE6               	movwf	postinc1,c
 23936  0153D4  0E00               	movlw	0
 23937  0153D6  6EE6               	movwf	postinc1,c
 23938  0153D8  0E20               	movlw	32
 23939  0153DA  6EE6               	movwf	postinc1,c
 23940  0153DC  0E3F               	movlw	63
 23941  0153DE  6EE6               	movwf	postinc1,c
 23942                           
 23943                           ;stkvar	_chan @ sp[(-8)+-1]
 23944  0153E0  0EF7               	movlw	-9
 23945  0153E2  50E3               	movf	plusw1,w,c
 23946  0153E4  6EE6               	movwf	postinc1,c
 23947  0153E6  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23948  0153EA  0060  F004  F00B   	movff	btemp,btemp+10
 23949  0153F0  0060  F008  F00C   	movff	btemp+1,btemp+11
 23950  0153F6  500B               	movf	(btemp+10)^0,w,c
 23951  0153F8  6E05               	movwf	(btemp+4)^0,c
 23952  0153FA  500C               	movf	(btemp+11)^0,w,c
 23953  0153FC  6E06               	movwf	(btemp+5)^0,c
 23954  0153FE  6A07               	clrf	(btemp+6)^0,c
 23955  015400  6A08               	clrf	(btemp+7)^0,c
 23956  015402  0060  F017  FFE6   	movff	btemp+4,postinc1
 23957  015408  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23958  01540E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23959  015414  0060  F023  FFE6   	movff	btemp+7,postinc1
 23960  01541A  0E00               	movlw	0
 23961  01541C  6EE6               	movwf	postinc1,c
 23962  01541E  ECCA  F0C0         	call	___xxtofl	;wreg free
 23963  015422  0060  F007  FFE6   	movff	btemp,postinc1
 23964  015428  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23965  01542E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23966  015434  0060  F013  FFE6   	movff	btemp+3,postinc1
 23967  01543A  ECA0  F099         	call	___flmul	;wreg free
 23968  01543E  0060  F007  FFE6   	movff	btemp,postinc1
 23969  015444  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23970  01544A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23971  015450  0060  F013  FFE6   	movff	btemp+3,postinc1
 23972  015456  EC51  F0A5         	call	___fldiv	;wreg free
 23973  01545A  D067               	goto	l1784
 23974  01545C                     l9627:
 23975                           
 23976                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23977  01545C  0E00               	movlw	0
 23978  01545E  6EE6               	movwf	postinc1,c
 23979  015460  0E00               	movlw	0
 23980  015462  6EE6               	movwf	postinc1,c
 23981  015464  0E7A               	movlw	122
 23982  015466  6EE6               	movwf	postinc1,c
 23983  015468  0E44               	movlw	68
 23984  01546A  6EE6               	movwf	postinc1,c
 23985  01546C  0E61               	movlw	97
 23986  01546E  6EE6               	movwf	postinc1,c
 23987  015470  0E03               	movlw	3
 23988  015472  6EE6               	movwf	postinc1,c
 23989  015474  0E84               	movlw	132
 23990  015476  6EE6               	movwf	postinc1,c
 23991  015478  0E40               	movlw	64
 23992  01547A  6EE6               	movwf	postinc1,c
 23993                           
 23994                           ;stkvar	_chan @ sp[(-8)+-1]
 23995  01547C  0EF7               	movlw	-9
 23996  01547E  50E3               	movf	plusw1,w,c
 23997  015480  6EE6               	movwf	postinc1,c
 23998  015482  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23999  015486  0060  F004  F00B   	movff	btemp,btemp+10
 24000  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 24001  015492  500B               	movf	(btemp+10)^0,w,c
 24002  015494  6E05               	movwf	(btemp+4)^0,c
 24003  015496  500C               	movf	(btemp+11)^0,w,c
 24004  015498  6E06               	movwf	(btemp+5)^0,c
 24005  01549A  6A07               	clrf	(btemp+6)^0,c
 24006  01549C  6A08               	clrf	(btemp+7)^0,c
 24007  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 24008  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24009  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24010  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 24011  0154B6  0E00               	movlw	0
 24012  0154B8  6EE6               	movwf	postinc1,c
 24013  0154BA  ECCA  F0C0         	call	___xxtofl	;wreg free
 24014  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 24015  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24016  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24017  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24018  0154D6  ECA0  F099         	call	___flmul	;wreg free
 24019  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 24020  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24021  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24022  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24023  0154F2  EC51  F0A5         	call	___fldiv	;wreg free
 24024  0154F6  D019               	goto	l1784
 24025  0154F8                     l9633:
 24026                           
 24027                           ;daq.c: 127:   return 0.0;
 24028  0154F8  0E00               	movlw	0
 24029  0154FA  6E01               	movwf	btemp^0,c
 24030  0154FC  0E00               	movlw	0
 24031  0154FE  6E02               	movwf	(btemp+1)^0,c
 24032  015500  0E00               	movlw	0
 24033  015502  6E03               	movwf	(btemp+2)^0,c
 24034  015504  0E00               	movlw	0
 24035  015506                     L29:
 24036  015506  6E04               	movwf	(btemp+3)^0,c
 24037  015508  D010               	goto	l1784
 24038  01550A                     l9641:
 24039                           
 24040                           ;stkvar	_to_what @ sp[(0)+-2]
 24041  01550A  0EFE               	movlw	-2
 24042  01550C  50E3               	movf	plusw1,w,c
 24043  01550E  6E0B               	movwf	(btemp+10)^0,c
 24044  015510  6A0C               	clrf	(btemp+11)^0,c
 24045                           
 24046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24047                           ; Switch size 1, requested type "simple"
 24048                           ; Number of cases is 1, Range of values is 0 to 0
 24049                           ; switch strategies available:
 24050                           ; Name         Instructions Cycles
 24051                           ; simple_byte            4     3 (average)
 24052                           ;	Chosen strategy is simple_byte
 24053  015512  500C               	movf	(btemp+11)^0,w,c
 24054  015514  0A00               	xorlw	0	; case 0
 24055  015516  A4D8               	btfss	status,2,c
 24056  015518  D7EF               	goto	l9633
 24057                           
 24058                           ; Switch size 1, requested type "simple"
 24059                           ; Number of cases is 2, Range of values is 0 to 1
 24060                           ; switch strategies available:
 24061                           ; Name         Instructions Cycles
 24062                           ; simple_byte            7     4 (average)
 24063                           ;	Chosen strategy is simple_byte
 24064  01551A  500B               	movf	(btemp+10)^0,w,c
 24065  01551C  0A00               	xorlw	0	; case 0
 24066  01551E  B4D8               	btfsc	status,2,c
 24067  015520  D57E               	goto	l9587
 24068  015522  0A01               	xorlw	1	; case 1
 24069  015524  B4D8               	btfsc	status,2,c
 24070  015526  D72A               	goto	l9619
 24071  015528  D7E7               	goto	l9633
 24072  01552A                     l1784:
 24073                           
 24074                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24075  01552A  52E5               	movf	postdec1,f,c
 24076  01552C  52E5               	movf	postdec1,f,c
 24077  01552E  0012               	return		;funcret
 24078  015530                     __end_of_conv_raw_result:
 24079                           	opt callstack 0
 24080                           
 24081 ;; *************** function _nanf *****************
 24082 ;; Defined at:
 24083 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24084 ;; Parameters:    Size  Location     Type
 24085 ;;  s               2  [STACK] PTR const unsigned char 
 24086 ;;		 -> STR_102(1), STR_64(1), 
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;  u               4  [STACK] struct .
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  4  [STACK] float 
 24091 ;; Registers used:
 24092 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24093 ;; Tracked objects:
 24094 ;;		On entry : 0/39
 24095 ;;		On exit  : 0/0
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;Total ram usage:        0 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:   15
 24105 ;; This function calls:
 24106 ;;		Nothing
 24107 ;; This function is called by:
 24108 ;;		_conv_raw_result
 24109 ;; This function uses a reentrant model
 24110 ;;
 24111                           
 24112                           	psect	text95
 24113  01ADA6                     __ptext95:
 24114                           	opt callstack 0
 24115  01ADA6                     _nanf:
 24116                           	opt callstack 0
 24117                           
 24118                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24119  01ADA6  52E6               	movf	postinc1,f,c
 24120  01ADA8  52E6               	movf	postinc1,f,c
 24121  01ADAA  52E6               	movf	postinc1,f,c
 24122  01ADAC  52E6               	movf	postinc1,f,c
 24123                           
 24124                           ;incstack = 0
 24125 ;; hardware stack exceeded
 24126  01ADAE  0EFF               	movlw	255
 24127  01ADB0  6E09               	movwf	(btemp+8)^0,c
 24128  01ADB2  0EFF               	movlw	255
 24129  01ADB4  6E0A               	movwf	(btemp+9)^0,c
 24130  01ADB6  0EFF               	movlw	255
 24131  01ADB8  6E0B               	movwf	(btemp+10)^0,c
 24132  01ADBA  0E7F               	movlw	127
 24133  01ADBC  6E0C               	movwf	(btemp+11)^0,c
 24134                           
 24135                           ;stkvar	_u @ sp[(-4)+0]
 24136  01ADBE  0EFC               	movlw	-4
 24137  01ADC0  0060  F027  FFE3   	movff	btemp+8,plusw1
 24138  01ADC6  0EFD               	movlw	-3
 24139  01ADC8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24140  01ADCE  0EFE               	movlw	-2
 24141  01ADD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24142  01ADD6  0EFF               	movlw	-1
 24143  01ADD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 24144                           
 24145                           ;stkvar	_u @ sp[(-4)+0]
 24146  01ADDE  0EFC               	movlw	-4
 24147  01ADE0  006F FF8C  F001    	movff	plusw1,btemp
 24148  01ADE6  0EFD               	movlw	-3
 24149  01ADE8  006F FF8C  F002    	movff	plusw1,btemp+1
 24150  01ADEE  0EFE               	movlw	-2
 24151  01ADF0  006F FF8C  F003    	movff	plusw1,btemp+2
 24152  01ADF6  0EFF               	movlw	-1
 24153  01ADF8  006F FF8C  F004    	movff	plusw1,btemp+3
 24154                           
 24155                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24156  01ADFE  0EFA               	movlw	250
 24157  01AE00  26E1               	addwf	fsr1l,f,c
 24158  01AE02  0EFF               	movlw	255
 24159  01AE04  22E2               	addwfc	fsr1h,f,c
 24160  01AE06  0012               	return		;funcret
 24161  01AE08                     __end_of_nanf:
 24162                           	opt callstack 0
 24163                           
 24164 ;; *************** function _get_raw_result *****************
 24165 ;; Defined at:
 24166 ;;		line 90 in file "daq.c"
 24167 ;; Parameters:    Size  Location     Type
 24168 ;;  index           1  [STACK] const enum E16582
 24169 ;; Auto vars:     Size  Location     Type
 24170 ;;		None
 24171 ;; Return value:  Size  Location     Type
 24172 ;;                  2  [STACK] unsigned short 
 24173 ;; Registers used:
 24174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24175 ;; Tracked objects:
 24176 ;;		On entry : 0/1
 24177 ;;		On exit  : 0/0
 24178 ;;		Unchanged: 0/0
 24179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24184 ;;Total ram usage:        0 bytes
 24185 ;; Hardware stack levels used:    1
 24186 ;; Hardware stack levels required when called:   15
 24187 ;; This function calls:
 24188 ;;		Nothing
 24189 ;; This function is called by:
 24190 ;;		_main
 24191 ;;		_conv_raw_result
 24192 ;; This function uses a reentrant model
 24193 ;;
 24194                           
 24195                           	psect	text96
 24196  01BAF8                     __ptext96:
 24197                           	opt callstack 0
 24198  01BAF8                     _get_raw_result:
 24199                           	opt callstack 0
 24200                           
 24201                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24202                           ;stkvar	_index @ sp[(0)+-1]
 24203                           
 24204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24205                           ;incstack = 0
 24206 ;; hardware stack exceeded
 24207  01BAF8  0EFF               	movlw	-1
 24208  01BAFA  50E3               	movf	plusw1,w,c
 24209  01BAFC  0D02               	mullw	2
 24210  01BAFE  0E00               	movlw	low _R
 24211  01BB00  24F3               	addwf	243,w,c
 24212  01BB02  6ED9               	movwf	fsr2l,c
 24213  01BB04  0E01               	movlw	high _R
 24214  01BB06  20F4               	addwfc	prodh,w,c
 24215  01BB08  6EDA               	movwf	fsr2h,c
 24216  01BB0A  006F FF78  F001    	movff	postinc2,btemp
 24217  01BB10  006F FF74  F002    	movff	postdec2,btemp+1
 24218                           
 24219                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24220  01BB16  52E5               	movf	postdec1,f,c
 24221  01BB18  0012               	return		;funcret
 24222  01BB1A                     __end_of_get_raw_result:
 24223                           	opt callstack 0
 24224                           
 24225 ;; *************** function ___xxtofl *****************
 24226 ;; Defined at:
 24227 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24228 ;; Parameters:    Size  Location     Type
 24229 ;;  sign            1  [STACK] unsigned char 
 24230 ;;  val             4  [STACK] long 
 24231 ;; Auto vars:     Size  Location     Type
 24232 ;;  arg             4  [STACK] unsigned long 
 24233 ;;  exp             1  [STACK] unsigned char 
 24234 ;; Return value:  Size  Location     Type
 24235 ;;                  4  [STACK] unsigned char 
 24236 ;; Registers used:
 24237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24238 ;; Tracked objects:
 24239 ;;		On entry : 0/1
 24240 ;;		On exit  : 0/0
 24241 ;;		Unchanged: 0/0
 24242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24247 ;;Total ram usage:        0 bytes
 24248 ;; Hardware stack levels used:    1
 24249 ;; Hardware stack levels required when called:   15
 24250 ;; This function calls:
 24251 ;;		Nothing
 24252 ;; This function is called by:
 24253 ;;		_conv_raw_result
 24254 ;;		_init_bsoc
 24255 ;;		_Volts_to_SOC
 24256 ;; This function uses a reentrant model
 24257 ;;
 24258                           
 24259                           	psect	text97
 24260  018194                     __ptext97:
 24261                           	opt callstack 0
 24262  018194                     ___xxtofl:
 24263                           	opt callstack 0
 24264                           
 24265                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24266  018194  0E05               	movlw	5
 24267  018196  26E1               	addwf	fsr1l,f,c
 24268  018198  0E00               	movlw	0
 24269  01819A  22E2               	addwfc	fsr1h,f,c
 24270                           
 24271                           ;stkvar	_sign @ sp[(-5)+-1]
 24272                           
 24273                           ;incstack = 0
 24274 ;; hardware stack exceeded
 24275  01819C  0EFA               	movlw	-6
 24276  01819E  50E3               	movf	plusw1,w,c
 24277  0181A0  B4D8               	btfsc	status,2,c
 24278  0181A2  D01D               	goto	l9535
 24279                           
 24280                           ;stkvar	_val @ sp[(-5)+-5]
 24281  0181A4  0EF9               	movlw	-7
 24282  0181A6  AEE3               	btfss	plusw1,7,c
 24283  0181A8  D01A               	goto	l9535
 24284                           
 24285                           ;stkvar	_val @ sp[(-5)+-5]
 24286  0181AA  0EF6               	movlw	-10
 24287  0181AC  006F FF8C  F009    	movff	plusw1,btemp+8
 24288  0181B2  0EF7               	movlw	-9
 24289  0181B4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24290  0181BA  0EF8               	movlw	-8
 24291  0181BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24292  0181C2  0EF9               	movlw	-7
 24293  0181C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24294  0181CA  1E09               	comf	(btemp+8)^0,f,c
 24295  0181CC  1E0A               	comf	(btemp+9)^0,f,c
 24296  0181CE  1E0B               	comf	(btemp+10)^0,f,c
 24297  0181D0  1E0C               	comf	(btemp+11)^0,f,c
 24298  0181D2  2A09               	incf	(btemp+8)^0,f,c
 24299  0181D4  0E00               	movlw	0
 24300  0181D6  220A               	addwfc	(btemp+9)^0,f,c
 24301  0181D8  220B               	addwfc	(btemp+10)^0,f,c
 24302  0181DA  220C               	addwfc	(btemp+11)^0,f,c
 24303  0181DC  D010               	goto	L30
 24304  0181DE                     l9535:
 24305                           
 24306                           ;stkvar	_val @ sp[(-5)+-5]
 24307  0181DE  0EF6               	movlw	-10
 24308  0181E0  006F FF8C  F009    	movff	plusw1,btemp+8
 24309  0181E6  0EF7               	movlw	-9
 24310  0181E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 24311  0181EE  0EF8               	movlw	-8
 24312  0181F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24313  0181F6  0EF9               	movlw	-7
 24314  0181F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24315  0181FE                     L30:
 24316                           
 24317                           ;stkvar	_arg @ sp[(-5)+0]
 24318  0181FE  0EFB               	movlw	-5
 24319  018200  0060  F027  FFE3   	movff	btemp+8,plusw1
 24320  018206  0EFC               	movlw	-4
 24321  018208  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24322  01820E  0EFD               	movlw	-3
 24323  018210  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24324  018216  0EFE               	movlw	-2
 24325  018218  0060  F033  FFE3   	movff	btemp+11,plusw1
 24326                           
 24327                           ;stkvar	_val @ sp[(-5)+-5]
 24328  01821E  0EF6               	movlw	-10
 24329  018220  50E3               	movf	plusw1,w,c
 24330  018222  E113               	bnz	l9543
 24331  018224  0EF7               	movlw	-9
 24332  018226  50E3               	movf	plusw1,w,c
 24333  018228  E110               	bnz	l9543
 24334  01822A  0EF8               	movlw	-8
 24335  01822C  50E3               	movf	plusw1,w,c
 24336  01822E  E10D               	bnz	l9543
 24337  018230  0EF9               	movlw	-7
 24338  018232  50E3               	movf	plusw1,w,c
 24339  018234  A4D8               	btfss	status,2,c
 24340  018236  D009               	goto	l9543
 24341  018238  0E00               	movlw	0
 24342  01823A  6E01               	movwf	btemp^0,c
 24343  01823C  0E00               	movlw	0
 24344  01823E  6E02               	movwf	(btemp+1)^0,c
 24345  018240  0E00               	movlw	0
 24346  018242  6E03               	movwf	(btemp+2)^0,c
 24347  018244  0E00               	movlw	0
 24348  018246  6E04               	movwf	(btemp+3)^0,c
 24349  018248  D0A2               	goto	l3058
 24350  01824A                     l9543:
 24351  01824A  0E96               	movlw	150
 24352  01824C  6E0C               	movwf	(btemp+11)^0,c
 24353                           
 24354                           ;stkvar	_exp @ sp[(-5)+4]
 24355  01824E  0EFF               	movlw	-1
 24356  018250  0060  F033  FFE3   	movff	btemp+11,plusw1
 24357  018256  D00B               	goto	l9547
 24358  018258                     l9545:
 24359                           
 24360                           ;stkvar	_exp @ sp[(-5)+4]
 24361  018258  0EFF               	movlw	-1
 24362  01825A  2AE3               	incf	plusw1,f,c
 24363                           
 24364                           ;stkvar	_arg @ sp[(-5)+0]
 24365  01825C  90D8               	bcf	status,0,c
 24366  01825E  0EFE               	movlw	-2
 24367  018260  32E3               	rrcf	plusw1,f,c
 24368  018262  0EFD               	movlw	-3
 24369  018264  32E3               	rrcf	plusw1,f,c
 24370  018266  0EFC               	movlw	-4
 24371  018268  32E3               	rrcf	plusw1,f,c
 24372  01826A  0EFB               	movlw	-5
 24373  01826C  32E3               	rrcf	plusw1,f,c
 24374  01826E                     l9547:
 24375                           
 24376                           ;stkvar	_arg @ sp[(-5)+0]
 24377  01826E  50E1               	movf	fsr1l,w,c
 24378  018270  0FFB               	addlw	-5
 24379  018272  6ED9               	movwf	fsr2l,c
 24380  018274  50E2               	movf	fsr1h,w,c
 24381  018276  6EDA               	movwf	fsr2h,c
 24382  018278  0EFF               	movlw	255
 24383  01827A  22DA               	addwfc	fsr2h,f,c
 24384  01827C  52DE               	movf	postinc2,f,c
 24385  01827E  52DE               	movf	postinc2,f,c
 24386  018280  52DE               	movf	postinc2,f,c
 24387  018282  0EFE               	movlw	254
 24388  018284  14DD               	andwf	postdec2,w,c
 24389  018286  B4D8               	btfsc	status,2,c
 24390  018288  D018               	goto	l9555
 24391  01828A  D7E6               	goto	l9545
 24392  01828C                     l9549:
 24393                           
 24394                           ;stkvar	_exp @ sp[(-5)+4]
 24395  01828C  0EFF               	movlw	-1
 24396  01828E  2AE3               	incf	plusw1,f,c
 24397                           
 24398                           ;stkvar	_arg @ sp[(-5)+0]
 24399  018290  50E1               	movf	fsr1l,w,c
 24400  018292  0FFB               	addlw	-5
 24401  018294  6ED9               	movwf	fsr2l,c
 24402  018296  50E2               	movf	fsr1h,w,c
 24403  018298  6EDA               	movwf	fsr2h,c
 24404  01829A  0EFF               	movlw	255
 24405  01829C  22DA               	addwfc	fsr2h,f,c
 24406  01829E  2ADE               	incf	postinc2,f,c
 24407  0182A0  0E00               	movlw	0
 24408  0182A2  22DE               	addwfc	postinc2,f,c
 24409  0182A4  22DE               	addwfc	postinc2,f,c
 24410  0182A6  22DE               	addwfc	postinc2,f,c
 24411                           
 24412                           ;stkvar	_arg @ sp[(-5)+0]
 24413  0182A8  90D8               	bcf	status,0,c
 24414  0182AA  0EFE               	movlw	-2
 24415  0182AC  32E3               	rrcf	plusw1,f,c
 24416  0182AE  0EFD               	movlw	-3
 24417  0182B0  32E3               	rrcf	plusw1,f,c
 24418  0182B2  0EFC               	movlw	-4
 24419  0182B4  32E3               	rrcf	plusw1,f,c
 24420  0182B6  0EFB               	movlw	-5
 24421  0182B8  32E3               	rrcf	plusw1,f,c
 24422  0182BA                     l9555:
 24423                           
 24424                           ;stkvar	_arg @ sp[(-5)+0]
 24425  0182BA  50E1               	movf	fsr1l,w,c
 24426  0182BC  0FFB               	addlw	-5
 24427  0182BE  6ED9               	movwf	fsr2l,c
 24428  0182C0  50E2               	movf	fsr1h,w,c
 24429  0182C2  6EDA               	movwf	fsr2h,c
 24430  0182C4  0EFF               	movlw	255
 24431  0182C6  22DA               	addwfc	fsr2h,f,c
 24432  0182C8  52DE               	movf	postinc2,f,c
 24433  0182CA  52DE               	movf	postinc2,f,c
 24434  0182CC  52DE               	movf	postinc2,f,c
 24435  0182CE  0EFF               	movlw	255
 24436  0182D0  14DD               	andwf	postdec2,w,c
 24437  0182D2  B4D8               	btfsc	status,2,c
 24438  0182D4  D00C               	goto	l9559
 24439  0182D6  D7DA               	goto	l9549
 24440  0182D8                     l9557:
 24441                           
 24442                           ;stkvar	_exp @ sp[(-5)+4]
 24443  0182D8  0EFF               	movlw	-1
 24444  0182DA  06E3               	decf	plusw1,f,c
 24445                           
 24446                           ;stkvar	_arg @ sp[(-5)+0]
 24447  0182DC  90D8               	bcf	status,0,c
 24448  0182DE  0EFB               	movlw	-5
 24449  0182E0  36E3               	rlcf	plusw1,f,c
 24450  0182E2  0EFC               	movlw	-4
 24451  0182E4  36E3               	rlcf	plusw1,f,c
 24452  0182E6  0EFD               	movlw	-3
 24453  0182E8  36E3               	rlcf	plusw1,f,c
 24454  0182EA  0EFE               	movlw	-2
 24455  0182EC  36E3               	rlcf	plusw1,f,c
 24456  0182EE                     l9559:
 24457                           
 24458                           ;stkvar	_arg @ sp[(-5)+0]
 24459  0182EE  0EFD               	movlw	-3
 24460  0182F0  BEE3               	btfsc	plusw1,7,c
 24461  0182F2  D007               	goto	u9010
 24462                           
 24463                           ;stkvar	_exp @ sp[(-5)+4]
 24464  0182F4  0EFF               	movlw	-1
 24465  0182F6  006F FF8C  F001    	movff	plusw1,btemp
 24466  0182FC  0E02               	movlw	2
 24467  0182FE  6001               	cpfslt	btemp^0,c
 24468  018300  D7EB               	goto	l9557
 24469  018302                     u9010:
 24470                           
 24471                           ;stkvar	_exp @ sp[(-5)+4]
 24472  018302  0EFF               	movlw	-1
 24473  018304  B0E3               	btfsc	plusw1,0,c
 24474  018306  D002               	goto	l9567
 24475                           
 24476                           ;stkvar	_arg @ sp[(-5)+0]
 24477  018308  0EFD               	movlw	-3
 24478  01830A  9EE3               	bcf	plusw1,7,c
 24479  01830C                     l9567:
 24480                           
 24481                           ;stkvar	_exp @ sp[(-5)+4]
 24482  01830C  50E1               	movf	fsr1l,w,c
 24483  01830E  0FFF               	addlw	-1
 24484  018310  6ED9               	movwf	fsr2l,c
 24485  018312  50E2               	movf	fsr1h,w,c
 24486  018314  6EDA               	movwf	fsr2h,c
 24487  018316  0EFF               	movlw	255
 24488  018318  22DA               	addwfc	fsr2h,f,c
 24489  01831A  90D8               	bcf	status,0,c
 24490  01831C  32DF               	rrcf	indf2,f,c
 24491                           
 24492                           ;stkvar	_exp @ sp[(-5)+4]
 24493  01831E  0EFF               	movlw	-1
 24494  018320  006F FF8C  F00C    	movff	plusw1,btemp+11
 24495  018326  0060  F030  F005   	movff	btemp+11,btemp+4
 24496  01832C  6A06               	clrf	(btemp+5)^0,c
 24497  01832E  6A07               	clrf	(btemp+6)^0,c
 24498  018330  6A08               	clrf	(btemp+7)^0,c
 24499  018332  0060  F014  F008   	movff	btemp+4,btemp+7
 24500  018338  6A07               	clrf	(btemp+6)^0,c
 24501  01833A  6A06               	clrf	(btemp+5)^0,c
 24502  01833C  6A05               	clrf	(btemp+4)^0,c
 24503                           
 24504                           ;stkvar	_arg @ sp[(-5)+0]
 24505  01833E  50E1               	movf	fsr1l,w,c
 24506  018340  0FFB               	addlw	-5
 24507  018342  6ED9               	movwf	fsr2l,c
 24508  018344  50E2               	movf	fsr1h,w,c
 24509  018346  6EDA               	movwf	fsr2h,c
 24510  018348  0EFF               	movlw	255
 24511  01834A  22DA               	addwfc	fsr2h,f,c
 24512  01834C  5005               	movf	(btemp+4)^0,w,c
 24513  01834E  12DE               	iorwf	postinc2,f,c
 24514  018350  5006               	movf	(btemp+5)^0,w,c
 24515  018352  12DE               	iorwf	postinc2,f,c
 24516  018354  5007               	movf	(btemp+6)^0,w,c
 24517  018356  12DE               	iorwf	postinc2,f,c
 24518  018358  5008               	movf	(btemp+7)^0,w,c
 24519  01835A  12DE               	iorwf	postinc2,f,c
 24520                           
 24521                           ;stkvar	_sign @ sp[(-5)+-1]
 24522  01835C  0EFA               	movlw	-6
 24523  01835E  50E3               	movf	plusw1,w,c
 24524  018360  B4D8               	btfsc	status,2,c
 24525  018362  D005               	goto	l9577
 24526                           
 24527                           ;stkvar	_val @ sp[(-5)+-5]
 24528  018364  0EF9               	movlw	-7
 24529  018366  AEE3               	btfss	plusw1,7,c
 24530  018368  D002               	goto	l9577
 24531                           
 24532                           ;stkvar	_arg @ sp[(-5)+0]
 24533  01836A  0EFE               	movlw	-2
 24534  01836C  8EE3               	bsf	plusw1,7,c
 24535  01836E                     l9577:
 24536                           
 24537                           ;stkvar	_arg @ sp[(-5)+0]
 24538  01836E  0EFB               	movlw	-5
 24539  018370  006F FF8C  F001    	movff	plusw1,btemp
 24540  018376  0EFC               	movlw	-4
 24541  018378  006F FF8C  F002    	movff	plusw1,btemp+1
 24542  01837E  0EFD               	movlw	-3
 24543  018380  006F FF8C  F003    	movff	plusw1,btemp+2
 24544  018386  0EFE               	movlw	-2
 24545  018388  006F FF8C  F004    	movff	plusw1,btemp+3
 24546  01838E                     l3058:
 24547                           
 24548                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24549  01838E  0EF6               	movlw	246
 24550  018390  26E1               	addwf	fsr1l,f,c
 24551  018392  0EFF               	movlw	255
 24552  018394  22E2               	addwfc	fsr1h,f,c
 24553  018396  0012               	return		;funcret
 24554  018398                     __end_of___xxtofl:
 24555                           	opt callstack 0
 24556                           
 24557 ;; *************** function ___fldiv *****************
 24558 ;; Defined at:
 24559 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24560 ;; Parameters:    Size  Location     Type
 24561 ;;  b               4  [STACK] unsigned char 
 24562 ;;  a               4  [STACK] unsigned char 
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;  grs             4  [STACK] unsigned long 
 24565 ;;  rem             4  [STACK] unsigned long 
 24566 ;;  new_exp         2  [STACK] short 
 24567 ;;  aexp            1  [STACK] unsigned char 
 24568 ;;  bexp            1  [STACK] unsigned char 
 24569 ;;  sign            1  [STACK] unsigned char 
 24570 ;; Return value:  Size  Location     Type
 24571 ;;                  4  [STACK] unsigned char 
 24572 ;; Registers used:
 24573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24574 ;; Tracked objects:
 24575 ;;		On entry : 0/1
 24576 ;;		On exit  : 0/0
 24577 ;;		Unchanged: 0/0
 24578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;Total ram usage:        0 bytes
 24584 ;; Hardware stack levels used:    1
 24585 ;; Hardware stack levels required when called:   15
 24586 ;; This function calls:
 24587 ;;		Nothing
 24588 ;; This function is called by:
 24589 ;;		_conv_raw_result
 24590 ;;		_calc_bsoc
 24591 ;;		_init_bsoc
 24592 ;;		_esr_check
 24593 ;;		_efgtoa
 24594 ;; This function uses a reentrant model
 24595 ;;
 24596                           
 24597                           	psect	text98
 24598  014AA2                     __ptext98:
 24599                           	opt callstack 0
 24600  014AA2                     ___fldiv:
 24601                           	opt callstack 0
 24602                           
 24603                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24604  014AA2  0E0D               	movlw	13
 24605  014AA4  26E1               	addwf	fsr1l,f,c
 24606  014AA6  0E00               	movlw	0
 24607  014AA8  22E2               	addwfc	fsr1h,f,c
 24608                           
 24609                           ;stkvar	_b @ sp[(-13)+-4]
 24610                           
 24611                           ;incstack = 0
 24612 ;; hardware stack exceeded
 24613  014AAA  0EF2               	movlw	242
 24614  014AAC  24E1               	addwf	fsr1l,w,c
 24615  014AAE  6ED9               	movwf	fsr2l,c
 24616  014AB0  0EFF               	movlw	255
 24617  014AB2  20E2               	addwfc	fsr1h,w,c
 24618  014AB4  6EDA               	movwf	fsr2h,c
 24619  014AB6  50DF               	movf	indf2,w,c
 24620  014AB8  6E0C               	movwf	(btemp+11)^0,c
 24621  014ABA  0E80               	movlw	128
 24622  014ABC  160C               	andwf	(btemp+11)^0,f,c
 24623                           
 24624                           ;stkvar	_sign @ sp[(-13)+12]
 24625  014ABE  0EFF               	movlw	-1
 24626  014AC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 24627                           
 24628                           ;stkvar	_b @ sp[(-13)+-4]
 24629  014AC6  0EF2               	movlw	242
 24630  014AC8  24E1               	addwf	fsr1l,w,c
 24631  014ACA  6ED9               	movwf	fsr2l,c
 24632  014ACC  0EFF               	movlw	255
 24633  014ACE  20E2               	addwfc	fsr1h,w,c
 24634  014AD0  6EDA               	movwf	fsr2h,c
 24635  014AD2  50DF               	movf	indf2,w,c
 24636  014AD4  6E0C               	movwf	(btemp+11)^0,c
 24637  014AD6  90D8               	bcf	status,0,c
 24638  014AD8  340C               	rlcf	(btemp+11)^0,w,c
 24639  014ADA  6E0B               	movwf	(btemp+10)^0,c
 24640                           
 24641                           ;stkvar	_bexp @ sp[(-13)+11]
 24642  014ADC  0EFE               	movlw	-2
 24643  014ADE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24644                           
 24645                           ;stkvar	_b @ sp[(-13)+-4]
 24646  014AE4  0EF1               	movlw	241
 24647  014AE6  24E1               	addwf	fsr1l,w,c
 24648  014AE8  6ED9               	movwf	fsr2l,c
 24649  014AEA  0EFF               	movlw	255
 24650  014AEC  20E2               	addwfc	fsr1h,w,c
 24651  014AEE  6EDA               	movwf	fsr2h,c
 24652  014AF0  AEDF               	btfss	indf2,7,c
 24653  014AF2  D002               	goto	l8081
 24654                           
 24655                           ;stkvar	_bexp @ sp[(-13)+11]
 24656  014AF4  0EFE               	movlw	-2
 24657  014AF6  80E3               	bsf	plusw1,0,c
 24658  014AF8                     l8081:
 24659                           
 24660                           ;stkvar	_bexp @ sp[(-13)+11]
 24661  014AF8  0EFE               	movlw	-2
 24662  014AFA  50E3               	movf	plusw1,w,c
 24663  014AFC  B4D8               	btfsc	status,2,c
 24664  014AFE  D027               	goto	l8091
 24665                           
 24666                           ;stkvar	_bexp @ sp[(-13)+11]
 24667  014B00  0EFE               	movlw	-2
 24668  014B02  28E3               	incf	plusw1,w,c
 24669  014B04  A4D8               	btfss	status,2,c
 24670  014B06  D018               	goto	l8087
 24671  014B08  0E00               	movlw	0
 24672  014B0A  6E09               	movwf	(btemp+8)^0,c
 24673  014B0C  0E00               	movlw	0
 24674  014B0E  6E0A               	movwf	(btemp+9)^0,c
 24675  014B10  0E00               	movlw	0
 24676  014B12  6E0B               	movwf	(btemp+10)^0,c
 24677  014B14  0E00               	movlw	0
 24678  014B16  6E0C               	movwf	(btemp+11)^0,c
 24679                           
 24680                           ;stkvar	_b @ sp[(-13)+-4]
 24681  014B18  0EEF               	movlw	-17
 24682  014B1A  0060  F027  FFE3   	movff	btemp+8,plusw1
 24683  014B20  0EF0               	movlw	-16
 24684  014B22  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24685  014B28  0EF1               	movlw	-15
 24686  014B2A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24687  014B30  0EF2               	movlw	-14
 24688  014B32  0060  F033  FFE3   	movff	btemp+11,plusw1
 24689  014B38                     l8087:
 24690                           
 24691                           ;stkvar	_b @ sp[(-13)+-4]
 24692  014B38  0EF1               	movlw	-15
 24693  014B3A  8EE3               	bsf	plusw1,7,c
 24694                           
 24695                           ;stkvar	_b @ sp[(-13)+-4]
 24696  014B3C  0EF2               	movlw	242
 24697  014B3E  24E1               	addwf	fsr1l,w,c
 24698  014B40  6ED9               	movwf	fsr2l,c
 24699  014B42  0EFF               	movlw	255
 24700  014B44  20E2               	addwfc	fsr1h,w,c
 24701  014B46  6EDA               	movwf	fsr2h,c
 24702  014B48  0E00               	movlw	0
 24703  014B4A  6EDF               	movwf	indf2,c
 24704  014B4C  D018               	goto	l8093
 24705  014B4E                     l8091:
 24706  014B4E  0E00               	movlw	0
 24707  014B50  6E09               	movwf	(btemp+8)^0,c
 24708  014B52  0E00               	movlw	0
 24709  014B54  6E0A               	movwf	(btemp+9)^0,c
 24710  014B56  0E00               	movlw	0
 24711  014B58  6E0B               	movwf	(btemp+10)^0,c
 24712  014B5A  0E00               	movlw	0
 24713  014B5C  6E0C               	movwf	(btemp+11)^0,c
 24714                           
 24715                           ;stkvar	_b @ sp[(-13)+-4]
 24716  014B5E  0EEF               	movlw	-17
 24717  014B60  0060  F027  FFE3   	movff	btemp+8,plusw1
 24718  014B66  0EF0               	movlw	-16
 24719  014B68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24720  014B6E  0EF1               	movlw	-15
 24721  014B70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24722  014B76  0EF2               	movlw	-14
 24723  014B78  0060  F033  FFE3   	movff	btemp+11,plusw1
 24724  014B7E                     l8093:
 24725                           
 24726                           ;stkvar	_a @ sp[(-13)+-8]
 24727  014B7E  0EEE               	movlw	238
 24728  014B80  24E1               	addwf	fsr1l,w,c
 24729  014B82  6ED9               	movwf	fsr2l,c
 24730  014B84  0EFF               	movlw	255
 24731  014B86  20E2               	addwfc	fsr1h,w,c
 24732  014B88  6EDA               	movwf	fsr2h,c
 24733  014B8A  50DF               	movf	indf2,w,c
 24734  014B8C  6E0C               	movwf	(btemp+11)^0,c
 24735  014B8E  0E80               	movlw	128
 24736  014B90  160C               	andwf	(btemp+11)^0,f,c
 24737                           
 24738                           ;stkvar	_sign @ sp[(-13)+12]
 24739  014B92  50E1               	movf	fsr1l,w,c
 24740  014B94  0FFF               	addlw	-1
 24741  014B96  6ED9               	movwf	fsr2l,c
 24742  014B98  50E2               	movf	fsr1h,w,c
 24743  014B9A  6EDA               	movwf	fsr2h,c
 24744  014B9C  0EFF               	movlw	255
 24745  014B9E  22DA               	addwfc	fsr2h,f,c
 24746  014BA0  500C               	movf	(btemp+11)^0,w,c
 24747  014BA2  1ADF               	xorwf	indf2,f,c
 24748                           
 24749                           ;stkvar	_a @ sp[(-13)+-8]
 24750  014BA4  0EEE               	movlw	238
 24751  014BA6  24E1               	addwf	fsr1l,w,c
 24752  014BA8  6ED9               	movwf	fsr2l,c
 24753  014BAA  0EFF               	movlw	255
 24754  014BAC  20E2               	addwfc	fsr1h,w,c
 24755  014BAE  6EDA               	movwf	fsr2h,c
 24756  014BB0  50DF               	movf	indf2,w,c
 24757  014BB2  6E0C               	movwf	(btemp+11)^0,c
 24758  014BB4  90D8               	bcf	status,0,c
 24759  014BB6  340C               	rlcf	(btemp+11)^0,w,c
 24760  014BB8  6E0B               	movwf	(btemp+10)^0,c
 24761                           
 24762                           ;stkvar	_aexp @ sp[(-13)+10]
 24763  014BBA  0EFD               	movlw	-3
 24764  014BBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24765                           
 24766                           ;stkvar	_a @ sp[(-13)+-8]
 24767  014BC2  0EED               	movlw	237
 24768  014BC4  24E1               	addwf	fsr1l,w,c
 24769  014BC6  6ED9               	movwf	fsr2l,c
 24770  014BC8  0EFF               	movlw	255
 24771  014BCA  20E2               	addwfc	fsr1h,w,c
 24772  014BCC  6EDA               	movwf	fsr2h,c
 24773  014BCE  AEDF               	btfss	indf2,7,c
 24774  014BD0  D002               	goto	l8101
 24775                           
 24776                           ;stkvar	_aexp @ sp[(-13)+10]
 24777  014BD2  0EFD               	movlw	-3
 24778  014BD4  80E3               	bsf	plusw1,0,c
 24779  014BD6                     l8101:
 24780                           
 24781                           ;stkvar	_aexp @ sp[(-13)+10]
 24782  014BD6  0EFD               	movlw	-3
 24783  014BD8  50E3               	movf	plusw1,w,c
 24784  014BDA  B4D8               	btfsc	status,2,c
 24785  014BDC  D027               	goto	l8111
 24786                           
 24787                           ;stkvar	_aexp @ sp[(-13)+10]
 24788  014BDE  0EFD               	movlw	-3
 24789  014BE0  28E3               	incf	plusw1,w,c
 24790  014BE2  A4D8               	btfss	status,2,c
 24791  014BE4  D018               	goto	l8107
 24792  014BE6  0E00               	movlw	0
 24793  014BE8  6E09               	movwf	(btemp+8)^0,c
 24794  014BEA  0E00               	movlw	0
 24795  014BEC  6E0A               	movwf	(btemp+9)^0,c
 24796  014BEE  0E00               	movlw	0
 24797  014BF0  6E0B               	movwf	(btemp+10)^0,c
 24798  014BF2  0E00               	movlw	0
 24799  014BF4  6E0C               	movwf	(btemp+11)^0,c
 24800                           
 24801                           ;stkvar	_a @ sp[(-13)+-8]
 24802  014BF6  0EEB               	movlw	-21
 24803  014BF8  0060  F027  FFE3   	movff	btemp+8,plusw1
 24804  014BFE  0EEC               	movlw	-20
 24805  014C00  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24806  014C06  0EED               	movlw	-19
 24807  014C08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24808  014C0E  0EEE               	movlw	-18
 24809  014C10  0060  F033  FFE3   	movff	btemp+11,plusw1
 24810  014C16                     l8107:
 24811                           
 24812                           ;stkvar	_a @ sp[(-13)+-8]
 24813  014C16  0EED               	movlw	-19
 24814  014C18  8EE3               	bsf	plusw1,7,c
 24815                           
 24816                           ;stkvar	_a @ sp[(-13)+-8]
 24817  014C1A  0EEE               	movlw	238
 24818  014C1C  24E1               	addwf	fsr1l,w,c
 24819  014C1E  6ED9               	movwf	fsr2l,c
 24820  014C20  0EFF               	movlw	255
 24821  014C22  20E2               	addwfc	fsr1h,w,c
 24822  014C24  6EDA               	movwf	fsr2h,c
 24823  014C26  0E00               	movlw	0
 24824  014C28  6EDF               	movwf	indf2,c
 24825  014C2A  D018               	goto	l8113
 24826  014C2C                     l8111:
 24827  014C2C  0E00               	movlw	0
 24828  014C2E  6E09               	movwf	(btemp+8)^0,c
 24829  014C30  0E00               	movlw	0
 24830  014C32  6E0A               	movwf	(btemp+9)^0,c
 24831  014C34  0E00               	movlw	0
 24832  014C36  6E0B               	movwf	(btemp+10)^0,c
 24833  014C38  0E00               	movlw	0
 24834  014C3A  6E0C               	movwf	(btemp+11)^0,c
 24835                           
 24836                           ;stkvar	_a @ sp[(-13)+-8]
 24837  014C3C  0EEB               	movlw	-21
 24838  014C3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24839  014C44  0EEC               	movlw	-20
 24840  014C46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24841  014C4C  0EED               	movlw	-19
 24842  014C4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24843  014C54  0EEE               	movlw	-18
 24844  014C56  0060  F033  FFE3   	movff	btemp+11,plusw1
 24845  014C5C                     l8113:
 24846                           
 24847                           ;stkvar	_a @ sp[(-13)+-8]
 24848  014C5C  0EEB               	movlw	-21
 24849  014C5E  50E3               	movf	plusw1,w,c
 24850  014C60  E139               	bnz	l8125
 24851  014C62  0EEC               	movlw	-20
 24852  014C64  50E3               	movf	plusw1,w,c
 24853  014C66  E136               	bnz	l8125
 24854  014C68  0EED               	movlw	-19
 24855  014C6A  50E3               	movf	plusw1,w,c
 24856  014C6C  E133               	bnz	l8125
 24857  014C6E  0EEE               	movlw	-18
 24858  014C70  50E3               	movf	plusw1,w,c
 24859  014C72  A4D8               	btfss	status,2,c
 24860  014C74  D02F               	goto	l8125
 24861                           
 24862                           ;stkvar	_b @ sp[(-13)+-4]
 24863  014C76  0EEF               	movlw	-17
 24864  014C78  6AE3               	clrf	plusw1,c
 24865  014C7A  0EF0               	movlw	-16
 24866  014C7C  6AE3               	clrf	plusw1,c
 24867  014C7E  0EF1               	movlw	-15
 24868  014C80  6AE3               	clrf	plusw1,c
 24869  014C82  0EF2               	movlw	-14
 24870  014C84  6AE3               	clrf	plusw1,c
 24871                           
 24872                           ;stkvar	_b @ sp[(-13)+-4]
 24873  014C86  0EF1               	movlw	241
 24874  014C88  24E1               	addwf	fsr1l,w,c
 24875  014C8A  6ED9               	movwf	fsr2l,c
 24876  014C8C  0EFF               	movlw	255
 24877  014C8E  20E2               	addwfc	fsr1h,w,c
 24878  014C90  6EDA               	movwf	fsr2h,c
 24879  014C92  0E80               	movlw	128
 24880  014C94  12DE               	iorwf	postinc2,f,c
 24881  014C96  0E7F               	movlw	127
 24882  014C98  12DD               	iorwf	postdec2,f,c
 24883  014C9A                     l8119:
 24884                           
 24885                           ;stkvar	_sign @ sp[(-13)+12]
 24886  014C9A  0EFF               	movlw	-1
 24887  014C9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24888                           
 24889                           ;stkvar	_b @ sp[(-13)+-4]
 24890  014CA2  0EF2               	movlw	242
 24891  014CA4  24E1               	addwf	fsr1l,w,c
 24892  014CA6  6ED9               	movwf	fsr2l,c
 24893  014CA8  0EFF               	movlw	255
 24894  014CAA  20E2               	addwfc	fsr1h,w,c
 24895  014CAC  6EDA               	movwf	fsr2h,c
 24896  014CAE  500C               	movf	(btemp+11)^0,w,c
 24897  014CB0  12DF               	iorwf	indf2,f,c
 24898                           
 24899                           ;stkvar	_b @ sp[(-13)+-4]
 24900  014CB2  0EEF               	movlw	-17
 24901  014CB4  006F FF8C  F001    	movff	plusw1,btemp
 24902  014CBA  0EF0               	movlw	-16
 24903  014CBC  006F FF8C  F002    	movff	plusw1,btemp+1
 24904  014CC2  0EF1               	movlw	-15
 24905  014CC4  006F FF8C  F003    	movff	plusw1,btemp+2
 24906  014CCA  0EF2               	movlw	-14
 24907  014CCC  006F FF8C  F004    	movff	plusw1,btemp+3
 24908  014CD2  D19F               	goto	l2982
 24909  014CD4                     l8125:
 24910                           
 24911                           ;stkvar	_bexp @ sp[(-13)+11]
 24912  014CD4  0EFE               	movlw	-2
 24913  014CD6  50E3               	movf	plusw1,w,c
 24914  014CD8  A4D8               	btfss	status,2,c
 24915  014CDA  D009               	goto	l8133
 24916  014CDC  0E00               	movlw	0
 24917  014CDE  6E01               	movwf	btemp^0,c
 24918  014CE0  0E00               	movlw	0
 24919  014CE2  6E02               	movwf	(btemp+1)^0,c
 24920  014CE4  0E00               	movlw	0
 24921  014CE6  6E03               	movwf	(btemp+2)^0,c
 24922  014CE8  0E00               	movlw	0
 24923  014CEA  6E04               	movwf	(btemp+3)^0,c
 24924  014CEC  D192               	goto	l2982
 24925  014CEE                     l8133:
 24926                           
 24927                           ;stkvar	_bexp @ sp[(-13)+11]
 24928  014CEE  0EFE               	movlw	-2
 24929  014CF0  50E3               	movf	plusw1,w,c
 24930  014CF2  6E0B               	movwf	(btemp+10)^0,c
 24931  014CF4  6A0C               	clrf	(btemp+11)^0,c
 24932                           
 24933                           ;stkvar	_aexp @ sp[(-13)+10]
 24934  014CF6  0EFD               	movlw	-3
 24935  014CF8  50E3               	movf	plusw1,w,c
 24936  014CFA  5E0B               	subwf	(btemp+10)^0,f,c
 24937  014CFC  0E00               	movlw	0
 24938  014CFE  5A0C               	subwfb	(btemp+11)^0,f,c
 24939  014D00  0E7F               	movlw	127
 24940  014D02  260B               	addwf	(btemp+10)^0,f,c
 24941  014D04  0E00               	movlw	0
 24942  014D06  220C               	addwfc	(btemp+11)^0,f,c
 24943                           
 24944                           ;stkvar	_new_exp @ sp[(-13)+8]
 24945  014D08  0EFB               	movlw	-5
 24946  014D0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24947  014D10  0EFC               	movlw	-4
 24948  014D12  0060  F033  FFE3   	movff	btemp+11,plusw1
 24949                           
 24950                           ;stkvar	_b @ sp[(-13)+-4]
 24951  014D18  0EEF               	movlw	-17
 24952  014D1A  006F FF8C  F009    	movff	plusw1,btemp+8
 24953  014D20  0EF0               	movlw	-16
 24954  014D22  006F FF8C  F00A    	movff	plusw1,btemp+9
 24955  014D28  0EF1               	movlw	-15
 24956  014D2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24957  014D30  0EF2               	movlw	-14
 24958  014D32  006F FF8C  F00C    	movff	plusw1,btemp+11
 24959                           
 24960                           ;stkvar	_rem @ sp[(-13)+4]
 24961  014D38  0EF7               	movlw	-9
 24962  014D3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 24963  014D40  0EF8               	movlw	-8
 24964  014D42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24965  014D48  0EF9               	movlw	-7
 24966  014D4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24967  014D50  0EFA               	movlw	-6
 24968  014D52  0060  F033  FFE3   	movff	btemp+11,plusw1
 24969                           
 24970                           ;stkvar	_b @ sp[(-13)+-4]
 24971  014D58  0EEF               	movlw	-17
 24972  014D5A  6AE3               	clrf	plusw1,c
 24973  014D5C  0EF0               	movlw	-16
 24974  014D5E  6AE3               	clrf	plusw1,c
 24975  014D60  0EF1               	movlw	-15
 24976  014D62  6AE3               	clrf	plusw1,c
 24977  014D64  0EF2               	movlw	-14
 24978  014D66  6AE3               	clrf	plusw1,c
 24979                           
 24980                           ;stkvar	_grs @ sp[(-13)+0]
 24981  014D68  0EF3               	movlw	-13
 24982  014D6A  6AE3               	clrf	plusw1,c
 24983  014D6C  0EF4               	movlw	-12
 24984  014D6E  6AE3               	clrf	plusw1,c
 24985  014D70  0EF5               	movlw	-11
 24986  014D72  6AE3               	clrf	plusw1,c
 24987  014D74  0EF6               	movlw	-10
 24988  014D76  6AE3               	clrf	plusw1,c
 24989                           
 24990                           ;stkvar	_aexp @ sp[(-13)+10]
 24991  014D78  0EFD               	movlw	-3
 24992  014D7A  6AE3               	clrf	plusw1,c
 24993  014D7C  D050               	goto	l8161
 24994  014D7E                     l8143:
 24995                           
 24996                           ;stkvar	_aexp @ sp[(-13)+10]
 24997  014D7E  0EFD               	movlw	-3
 24998  014D80  50E3               	movf	plusw1,w,c
 24999  014D82  B4D8               	btfsc	status,2,c
 25000  014D84  D020               	goto	l8153
 25001                           
 25002                           ;stkvar	_rem @ sp[(-13)+4]
 25003  014D86  90D8               	bcf	status,0,c
 25004  014D88  0EF7               	movlw	-9
 25005  014D8A  36E3               	rlcf	plusw1,f,c
 25006  014D8C  0EF8               	movlw	-8
 25007  014D8E  36E3               	rlcf	plusw1,f,c
 25008  014D90  0EF9               	movlw	-7
 25009  014D92  36E3               	rlcf	plusw1,f,c
 25010  014D94  0EFA               	movlw	-6
 25011  014D96  36E3               	rlcf	plusw1,f,c
 25012                           
 25013                           ;stkvar	_b @ sp[(-13)+-4]
 25014  014D98  90D8               	bcf	status,0,c
 25015  014D9A  0EEF               	movlw	-17
 25016  014D9C  36E3               	rlcf	plusw1,f,c
 25017  014D9E  0EF0               	movlw	-16
 25018  014DA0  36E3               	rlcf	plusw1,f,c
 25019  014DA2  0EF1               	movlw	-15
 25020  014DA4  36E3               	rlcf	plusw1,f,c
 25021  014DA6  0EF2               	movlw	-14
 25022  014DA8  36E3               	rlcf	plusw1,f,c
 25023                           
 25024                           ;stkvar	_grs @ sp[(-13)+0]
 25025  014DAA  0EF6               	movlw	-10
 25026  014DAC  AEE3               	btfss	plusw1,7,c
 25027  014DAE  D002               	goto	l8151
 25028                           
 25029                           ;stkvar	_b @ sp[(-13)+-4]
 25030  014DB0  0EEF               	movlw	-17
 25031  014DB2  80E3               	bsf	plusw1,0,c
 25032  014DB4                     l8151:
 25033                           
 25034                           ;stkvar	_grs @ sp[(-13)+0]
 25035  014DB4  90D8               	bcf	status,0,c
 25036  014DB6  0EF3               	movlw	-13
 25037  014DB8  36E3               	rlcf	plusw1,f,c
 25038  014DBA  0EF4               	movlw	-12
 25039  014DBC  36E3               	rlcf	plusw1,f,c
 25040  014DBE  0EF5               	movlw	-11
 25041  014DC0  36E3               	rlcf	plusw1,f,c
 25042  014DC2  0EF6               	movlw	-10
 25043  014DC4  36E3               	rlcf	plusw1,f,c
 25044  014DC6                     l8153:
 25045                           
 25046                           ;stkvar	_a @ sp[(-13)+-8]
 25047                           ;stkvar	_rem @ sp[(-13)+4]
 25048  014DC6  50E1               	movf	fsr1l,w,c
 25049  014DC8  0FF7               	addlw	-9
 25050  014DCA  6ED9               	movwf	fsr2l,c
 25051  014DCC  50E2               	movf	fsr1h,w,c
 25052  014DCE  6EDA               	movwf	fsr2h,c
 25053  014DD0  0EFF               	movlw	255
 25054  014DD2  22DA               	addwfc	fsr2h,f,c
 25055  014DD4  0EEB               	movlw	-21
 25056  014DD6  50E3               	movf	plusw1,w,c
 25057  014DD8  5CDE               	subwf	postinc2,w,c
 25058  014DDA  0EEC               	movlw	-20
 25059  014DDC  50E3               	movf	plusw1,w,c
 25060  014DDE  58DE               	subwfb	postinc2,w,c
 25061  014DE0  0EED               	movlw	-19
 25062  014DE2  50E3               	movf	plusw1,w,c
 25063  014DE4  58DE               	subwfb	postinc2,w,c
 25064  014DE6  0EEE               	movlw	-18
 25065  014DE8  50E3               	movf	plusw1,w,c
 25066  014DEA  58DE               	subwfb	postinc2,w,c
 25067  014DEC  A0D8               	btfss	status,0,c
 25068  014DEE  D015               	goto	l8159
 25069                           
 25070                           ;stkvar	_grs @ sp[(-13)+0]
 25071  014DF0  0EF6               	movlw	-10
 25072  014DF2  8CE3               	bsf	plusw1,6,c
 25073                           
 25074                           ;stkvar	_a @ sp[(-13)+-8]
 25075                           ;stkvar	_rem @ sp[(-13)+4]
 25076  014DF4  50E1               	movf	fsr1l,w,c
 25077  014DF6  0FF7               	addlw	-9
 25078  014DF8  6ED9               	movwf	fsr2l,c
 25079  014DFA  50E2               	movf	fsr1h,w,c
 25080  014DFC  6EDA               	movwf	fsr2h,c
 25081  014DFE  0EFF               	movlw	255
 25082  014E00  22DA               	addwfc	fsr2h,f,c
 25083  014E02  0EEB               	movlw	-21
 25084  014E04  50E3               	movf	plusw1,w,c
 25085  014E06  5EDE               	subwf	postinc2,f,c
 25086  014E08  0EEC               	movlw	-20
 25087  014E0A  50E3               	movf	plusw1,w,c
 25088  014E0C  5ADE               	subwfb	postinc2,f,c
 25089  014E0E  0EED               	movlw	-19
 25090  014E10  50E3               	movf	plusw1,w,c
 25091  014E12  5ADE               	subwfb	postinc2,f,c
 25092  014E14  0EEE               	movlw	-18
 25093  014E16  50E3               	movf	plusw1,w,c
 25094  014E18  5ADE               	subwfb	postinc2,f,c
 25095  014E1A                     l8159:
 25096                           
 25097                           ;stkvar	_aexp @ sp[(-13)+10]
 25098  014E1A  0EFD               	movlw	-3
 25099  014E1C  2AE3               	incf	plusw1,f,c
 25100  014E1E                     l8161:
 25101                           
 25102                           ;stkvar	_aexp @ sp[(-13)+10]
 25103  014E1E  0EFD               	movlw	-3
 25104  014E20  006F FF8C  F001    	movff	plusw1,btemp
 25105  014E26  0E19               	movlw	25
 25106  014E28  6401               	cpfsgt	btemp^0,c
 25107  014E2A  D7A9               	goto	l8143
 25108                           
 25109                           ;stkvar	_rem @ sp[(-13)+4]
 25110  014E2C  0EF7               	movlw	-9
 25111  014E2E  50E3               	movf	plusw1,w,c
 25112  014E30  E10A               	bnz	u6560
 25113  014E32  0EF8               	movlw	-8
 25114  014E34  50E3               	movf	plusw1,w,c
 25115  014E36  E107               	bnz	u6560
 25116  014E38  0EF9               	movlw	-7
 25117  014E3A  50E3               	movf	plusw1,w,c
 25118  014E3C  E104               	bnz	u6560
 25119  014E3E  0EFA               	movlw	-6
 25120  014E40  50E3               	movf	plusw1,w,c
 25121  014E42  B4D8               	btfsc	status,2,c
 25122  014E44  D024               	goto	l8177
 25123  014E46                     u6560:
 25124                           
 25125                           ;stkvar	_grs @ sp[(-13)+0]
 25126  014E46  0EF3               	movlw	-13
 25127  014E48  80E3               	bsf	plusw1,0,c
 25128  014E4A  D021               	goto	l8177
 25129  014E4C                     l8167:
 25130                           
 25131                           ;stkvar	_b @ sp[(-13)+-4]
 25132  014E4C  90D8               	bcf	status,0,c
 25133  014E4E  0EEF               	movlw	-17
 25134  014E50  36E3               	rlcf	plusw1,f,c
 25135  014E52  0EF0               	movlw	-16
 25136  014E54  36E3               	rlcf	plusw1,f,c
 25137  014E56  0EF1               	movlw	-15
 25138  014E58  36E3               	rlcf	plusw1,f,c
 25139  014E5A  0EF2               	movlw	-14
 25140  014E5C  36E3               	rlcf	plusw1,f,c
 25141                           
 25142                           ;stkvar	_grs @ sp[(-13)+0]
 25143  014E5E  0EF6               	movlw	-10
 25144  014E60  AEE3               	btfss	plusw1,7,c
 25145  014E62  D002               	goto	l8173
 25146                           
 25147                           ;stkvar	_b @ sp[(-13)+-4]
 25148  014E64  0EEF               	movlw	-17
 25149  014E66  80E3               	bsf	plusw1,0,c
 25150  014E68                     l8173:
 25151                           
 25152                           ;stkvar	_grs @ sp[(-13)+0]
 25153  014E68  90D8               	bcf	status,0,c
 25154  014E6A  0EF3               	movlw	-13
 25155  014E6C  36E3               	rlcf	plusw1,f,c
 25156  014E6E  0EF4               	movlw	-12
 25157  014E70  36E3               	rlcf	plusw1,f,c
 25158  014E72  0EF5               	movlw	-11
 25159  014E74  36E3               	rlcf	plusw1,f,c
 25160  014E76  0EF6               	movlw	-10
 25161  014E78  36E3               	rlcf	plusw1,f,c
 25162                           
 25163                           ;stkvar	_new_exp @ sp[(-13)+8]
 25164  014E7A  50E1               	movf	fsr1l,w,c
 25165  014E7C  0FFB               	addlw	-5
 25166  014E7E  6ED9               	movwf	fsr2l,c
 25167  014E80  50E2               	movf	fsr1h,w,c
 25168  014E82  6EDA               	movwf	fsr2h,c
 25169  014E84  0EFF               	movlw	255
 25170  014E86  22DA               	addwfc	fsr2h,f,c
 25171  014E88  06DE               	decf	postinc2,f,c
 25172  014E8A  0E00               	movlw	0
 25173  014E8C  5ADD               	subwfb	postdec2,f,c
 25174  014E8E                     l8177:
 25175                           
 25176                           ;stkvar	_b @ sp[(-13)+-4]
 25177  014E8E  0EF1               	movlw	-15
 25178  014E90  AEE3               	btfss	plusw1,7,c
 25179  014E92  D7DC               	goto	l8167
 25180                           
 25181                           ;stkvar	_aexp @ sp[(-13)+10]
 25182  014E94  0EFD               	movlw	-3
 25183  014E96  6AE3               	clrf	plusw1,c
 25184                           
 25185                           ;stkvar	_grs @ sp[(-13)+0]
 25186  014E98  0EF6               	movlw	-10
 25187  014E9A  AEE3               	btfss	plusw1,7,c
 25188  014E9C  D020               	goto	l8191
 25189                           
 25190                           ;stkvar	_grs @ sp[(-13)+0]
 25191  014E9E  50E1               	movf	fsr1l,w,c
 25192  014EA0  0FF3               	addlw	-13
 25193  014EA2  6ED9               	movwf	fsr2l,c
 25194  014EA4  50E2               	movf	fsr1h,w,c
 25195  014EA6  6EDA               	movwf	fsr2h,c
 25196  014EA8  0EFF               	movlw	255
 25197  014EAA  22DA               	addwfc	fsr2h,f,c
 25198  014EAC  0EFF               	movlw	255
 25199  014EAE  14DE               	andwf	postinc2,w,c
 25200  014EB0  6E09               	movwf	(btemp+8)^0,c
 25201  014EB2  0EFF               	movlw	255
 25202  014EB4  14DE               	andwf	postinc2,w,c
 25203  014EB6  6E0A               	movwf	(btemp+9)^0,c
 25204  014EB8  0EFF               	movlw	255
 25205  014EBA  14DE               	andwf	postinc2,w,c
 25206  014EBC  6E0B               	movwf	(btemp+10)^0,c
 25207  014EBE  0E7F               	movlw	127
 25208  014EC0  14DE               	andwf	postinc2,w,c
 25209  014EC2  6E0C               	movwf	(btemp+11)^0,c
 25210  014EC4  5009               	movf	(btemp+8)^0,w,c
 25211  014EC6  100A               	iorwf	(btemp+9)^0,w,c
 25212  014EC8  100B               	iorwf	(btemp+10)^0,w,c
 25213  014ECA  100C               	iorwf	(btemp+11)^0,w,c
 25214  014ECC  B4D8               	btfsc	status,2,c
 25215  014ECE  D004               	goto	l8187
 25216  014ED0                     u6600:
 25217                           
 25218                           ;stkvar	_aexp @ sp[(-13)+10]
 25219  014ED0  0EFD               	movlw	-3
 25220  014ED2  6AE3               	clrf	plusw1,c
 25221  014ED4  2AE3               	incf	plusw1,f,c
 25222  014ED6  D003               	goto	l8191
 25223  014ED8                     l8187:
 25224                           
 25225                           ;stkvar	_b @ sp[(-13)+-4]
 25226  014ED8  0EEF               	movlw	-17
 25227  014EDA  B0E3               	btfsc	plusw1,0,c
 25228  014EDC  D7F9               	goto	u6600
 25229  014EDE                     l8191:
 25230                           
 25231                           ;stkvar	_aexp @ sp[(-13)+10]
 25232  014EDE  0EFD               	movlw	-3
 25233  014EE0  50E3               	movf	plusw1,w,c
 25234  014EE2  B4D8               	btfsc	status,2,c
 25235  014EE4  D036               	goto	l8201
 25236                           
 25237                           ;stkvar	_b @ sp[(-13)+-4]
 25238  014EE6  50E1               	movf	fsr1l,w,c
 25239  014EE8  0FEF               	addlw	-17
 25240  014EEA  6ED9               	movwf	fsr2l,c
 25241  014EEC  50E2               	movf	fsr1h,w,c
 25242  014EEE  6EDA               	movwf	fsr2h,c
 25243  014EF0  0EFF               	movlw	255
 25244  014EF2  22DA               	addwfc	fsr2h,f,c
 25245  014EF4  2ADE               	incf	postinc2,f,c
 25246  014EF6  0E00               	movlw	0
 25247  014EF8  22DE               	addwfc	postinc2,f,c
 25248  014EFA  22DE               	addwfc	postinc2,f,c
 25249  014EFC  22DE               	addwfc	postinc2,f,c
 25250                           
 25251                           ;stkvar	_b @ sp[(-13)+-4]
 25252  014EFE  0EF2               	movlw	-14
 25253  014F00  A0E3               	btfss	plusw1,0,c
 25254  014F02  D027               	goto	l8201
 25255  014F04  0E01               	movlw	1
 25256  014F06  6E0C               	movwf	(btemp+11)^0,c
 25257                           
 25258                           ;stkvar	_b @ sp[(-13)+-4]
 25259  014F08  50E1               	movf	fsr1l,w,c
 25260  014F0A  0FEF               	addlw	-17
 25261  014F0C  6ED9               	movwf	fsr2l,c
 25262  014F0E  50E2               	movf	fsr1h,w,c
 25263  014F10  6EDA               	movwf	fsr2h,c
 25264  014F12  0EFF               	movlw	255
 25265  014F14  22DA               	addwfc	fsr2h,f,c
 25266  014F16  280C               	incf	(btemp+11)^0,w,c
 25267  014F18  52DE               	movf	postinc2,f,c
 25268  014F1A  D008               	goto	u6640
 25269  014F1C                     u6645:
 25270  014F1C  52DE               	movf	postinc2,f,c
 25271  014F1E  90D8               	bcf	status,0,c
 25272  014F20  BEDC               	btfsc	preinc2,7,c
 25273  014F22  80D8               	bsf	status,0,c
 25274  014F24  32DD               	rrcf	postdec2,f,c
 25275  014F26  32DD               	rrcf	postdec2,f,c
 25276  014F28  32DD               	rrcf	postdec2,f,c
 25277  014F2A  32DE               	rrcf	postinc2,f,c
 25278  014F2C                     u6640:
 25279  014F2C  2EE8               	decfsz	wreg,f,c
 25280  014F2E  D7F6               	goto	u6645
 25281                           
 25282                           ;stkvar	_new_exp @ sp[(-13)+8]
 25283  014F30  0EFB               	movlw	-5
 25284  014F32  50E3               	movf	plusw1,w,c
 25285  014F34  0F01               	addlw	1
 25286  014F36  6E01               	movwf	btemp^0,c
 25287  014F38  0EFB               	movlw	-5
 25288  014F3A  0060  F007  FFE3   	movff	btemp,plusw1
 25289  014F40  6A01               	clrf	btemp^0,c
 25290  014F42  0EFC               	movlw	-4
 25291  014F44  50E3               	movf	plusw1,w,c
 25292  014F46  2001               	addwfc	btemp^0,w,c
 25293  014F48  6E01               	movwf	btemp^0,c
 25294  014F4A  0EFC               	movlw	-4
 25295  014F4C  0060  F007  FFE3   	movff	btemp,plusw1
 25296  014F52                     l8201:
 25297                           
 25298                           ;stkvar	_new_exp @ sp[(-13)+8]
 25299  014F52  0EFC               	movlw	-4
 25300  014F54  BEE3               	btfsc	plusw1,7,c
 25301  014F56  D01B               	goto	l8207
 25302  014F58  0EFC               	movlw	-4
 25303  014F5A  50E3               	movf	plusw1,w,c
 25304  014F5C  E104               	bnz	u6650
 25305  014F5E  0EFB               	movlw	-5
 25306  014F60  28E3               	incf	plusw1,w,c
 25307  014F62  A0D8               	btfss	status,0,c
 25308  014F64  D014               	goto	l8207
 25309  014F66                     u6650:
 25310  014F66  0EFF               	movlw	255
 25311  014F68  6E0B               	movwf	(btemp+10)^0,c
 25312  014F6A  0E00               	movlw	0
 25313  014F6C  6E0C               	movwf	(btemp+11)^0,c
 25314                           
 25315                           ;stkvar	_new_exp @ sp[(-13)+8]
 25316  014F6E  0EFB               	movlw	-5
 25317  014F70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25318  014F76  0EFC               	movlw	-4
 25319  014F78  0060  F033  FFE3   	movff	btemp+11,plusw1
 25320                           
 25321                           ;stkvar	_b @ sp[(-13)+-4]
 25322  014F7E  0EEF               	movlw	-17
 25323  014F80  6AE3               	clrf	plusw1,c
 25324  014F82  0EF0               	movlw	-16
 25325  014F84  6AE3               	clrf	plusw1,c
 25326  014F86  0EF1               	movlw	-15
 25327  014F88  6AE3               	clrf	plusw1,c
 25328  014F8A  0EF2               	movlw	-14
 25329  014F8C  6AE3               	clrf	plusw1,c
 25330  014F8E                     l8207:
 25331                           
 25332                           ;stkvar	_new_exp @ sp[(-13)+8]
 25333  014F8E  0EFC               	movlw	-4
 25334  014F90  BEE3               	btfsc	plusw1,7,c
 25335  014F92  D007               	goto	u6660
 25336  014F94  0EFC               	movlw	-4
 25337  014F96  50E3               	movf	plusw1,w,c
 25338  014F98  E112               	bnz	l8213
 25339  014F9A  0EFB               	movlw	-5
 25340  014F9C  04E3               	decf	plusw1,w,c
 25341  014F9E  B0D8               	btfsc	status,0,c
 25342  014FA0  D00E               	goto	l8213
 25343  014FA2                     u6660:
 25344                           
 25345                           ;stkvar	_new_exp @ sp[(-13)+8]
 25346  014FA2  0EFB               	movlw	-5
 25347  014FA4  6AE3               	clrf	plusw1,c
 25348  014FA6  0EFC               	movlw	-4
 25349  014FA8  6AE3               	clrf	plusw1,c
 25350                           
 25351                           ;stkvar	_b @ sp[(-13)+-4]
 25352  014FAA  0EEF               	movlw	-17
 25353  014FAC  6AE3               	clrf	plusw1,c
 25354  014FAE  0EF0               	movlw	-16
 25355  014FB0  6AE3               	clrf	plusw1,c
 25356  014FB2  0EF1               	movlw	-15
 25357  014FB4  6AE3               	clrf	plusw1,c
 25358  014FB6  0EF2               	movlw	-14
 25359  014FB8  6AE3               	clrf	plusw1,c
 25360                           
 25361                           ;stkvar	_sign @ sp[(-13)+12]
 25362  014FBA  0EFF               	movlw	-1
 25363  014FBC  6AE3               	clrf	plusw1,c
 25364  014FBE                     l8213:
 25365                           
 25366                           ;stkvar	_new_exp @ sp[(-13)+8]
 25367                           ;stkvar	_bexp @ sp[(-13)+11]
 25368  014FBE  0EFB               	movlw	-5
 25369  014FC0  006F FF8C  F001    	movff	plusw1,btemp
 25370  014FC6  0EFE               	movlw	-2
 25371  014FC8  0060  F007  FFE3   	movff	btemp,plusw1
 25372                           
 25373                           ;stkvar	_bexp @ sp[(-13)+11]
 25374  014FCE  0EFE               	movlw	-2
 25375  014FD0  A0E3               	btfss	plusw1,0,c
 25376  014FD2  D009               	goto	l8219
 25377                           
 25378                           ;stkvar	_b @ sp[(-13)+-4]
 25379  014FD4  0EF1               	movlw	241
 25380  014FD6  24E1               	addwf	fsr1l,w,c
 25381  014FD8  6ED9               	movwf	fsr2l,c
 25382  014FDA  0EFF               	movlw	255
 25383  014FDC  20E2               	addwfc	fsr1h,w,c
 25384  014FDE  6EDA               	movwf	fsr2h,c
 25385  014FE0  0E00               	movlw	0
 25386  014FE2  8EDB               	bsf	plusw2,7,c
 25387  014FE4  D008               	goto	l8221
 25388  014FE6                     l8219:
 25389                           
 25390                           ;stkvar	_b @ sp[(-13)+-4]
 25391  014FE6  0EF1               	movlw	241
 25392  014FE8  24E1               	addwf	fsr1l,w,c
 25393  014FEA  6ED9               	movwf	fsr2l,c
 25394  014FEC  0EFF               	movlw	255
 25395  014FEE  20E2               	addwfc	fsr1h,w,c
 25396  014FF0  6EDA               	movwf	fsr2h,c
 25397  014FF2  0E7F               	movlw	127
 25398  014FF4  16DF               	andwf	indf2,f,c
 25399  014FF6                     l8221:
 25400                           
 25401                           ;stkvar	_b @ sp[(-13)+-4]
 25402  014FF6  0EF2               	movlw	242
 25403  014FF8  24E1               	addwf	fsr1l,w,c
 25404  014FFA  6ED9               	movwf	fsr2l,c
 25405  014FFC  0EFF               	movlw	255
 25406  014FFE  20E2               	addwfc	fsr1h,w,c
 25407  015000  6EDA               	movwf	fsr2h,c
 25408                           
 25409                           ;stkvar	_bexp @ sp[(-13)+11]
 25410  015002  0EFE               	movlw	-2
 25411  015004  006F FF8C  F00C    	movff	plusw1,btemp+11
 25412  01500A  90D8               	bcf	status,0,c
 25413  01500C  300C               	rrcf	(btemp+11)^0,w,c
 25414  01500E  6EDF               	movwf	indf2,c
 25415  015010  D644               	goto	l8119
 25416  015012                     l2982:
 25417                           
 25418                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25419  015012  0EEB               	movlw	235
 25420  015014  26E1               	addwf	fsr1l,f,c
 25421  015016  0EFF               	movlw	255
 25422  015018  22E2               	addwfc	fsr1h,f,c
 25423  01501A  0012               	return		;funcret
 25424  01501C                     __end_of___fldiv:
 25425                           	opt callstack 0
 25426                           
 25427 ;; *************** function ___flge *****************
 25428 ;; Defined at:
 25429 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;  ff1             4  [STACK] unsigned char 
 25432 ;;  ff2             4  [STACK] unsigned char 
 25433 ;; Auto vars:     Size  Location     Type
 25434 ;;		None
 25435 ;; Return value:  Size  Location     Type
 25436 ;;		None               void
 25437 ;; Registers used:
 25438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25439 ;; Tracked objects:
 25440 ;;		On entry : 0/1
 25441 ;;		On exit  : 0/0
 25442 ;;		Unchanged: 0/0
 25443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;Total ram usage:        0 bytes
 25449 ;; Hardware stack levels used:    1
 25450 ;; Hardware stack levels required when called:   15
 25451 ;; This function calls:
 25452 ;;		Nothing
 25453 ;; This function is called by:
 25454 ;;		_main
 25455 ;;		_calc_ror_data
 25456 ;;		_check_day_time
 25457 ;;		_calc_bsoc
 25458 ;;		_efgtoa
 25459 ;; This function uses a reentrant model
 25460 ;;
 25461                           
 25462                           	psect	text99
 25463  018D02                     __ptext99:
 25464                           	opt callstack 0
 25465  018D02                     ___flge:
 25466                           	opt callstack 0
 25467                           
 25468                           ;stkvar	_ff1 @ sp[(0)+-4]
 25469                           
 25470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25471                           ;incstack = 0
 25472 ;; hardware stack exceeded
 25473  018D02  50E1               	movf	fsr1l,w,c
 25474  018D04  0FFC               	addlw	-4
 25475  018D06  6ED9               	movwf	fsr2l,c
 25476  018D08  50E2               	movf	fsr1h,w,c
 25477  018D0A  6EDA               	movwf	fsr2h,c
 25478  018D0C  0EFF               	movlw	255
 25479  018D0E  22DA               	addwfc	fsr2h,f,c
 25480  018D10  0E00               	movlw	0
 25481  018D12  14DE               	andwf	postinc2,w,c
 25482  018D14  6E09               	movwf	(btemp+8)^0,c
 25483  018D16  0E00               	movlw	0
 25484  018D18  14DE               	andwf	postinc2,w,c
 25485  018D1A  6E0A               	movwf	(btemp+9)^0,c
 25486  018D1C  0E80               	movlw	128
 25487  018D1E  14DE               	andwf	postinc2,w,c
 25488  018D20  6E0B               	movwf	(btemp+10)^0,c
 25489  018D22  0E7F               	movlw	127
 25490  018D24  14DE               	andwf	postinc2,w,c
 25491  018D26  6E0C               	movwf	(btemp+11)^0,c
 25492  018D28  5009               	movf	(btemp+8)^0,w,c
 25493  018D2A  100A               	iorwf	(btemp+9)^0,w,c
 25494  018D2C  100B               	iorwf	(btemp+10)^0,w,c
 25495  018D2E  100C               	iorwf	(btemp+11)^0,w,c
 25496  018D30  A4D8               	btfss	status,2,c
 25497  018D32  D008               	goto	l8495
 25498                           
 25499                           ;stkvar	_ff1 @ sp[(0)+-4]
 25500  018D34  0EFC               	movlw	-4
 25501  018D36  6AE3               	clrf	plusw1,c
 25502  018D38  0EFD               	movlw	-3
 25503  018D3A  6AE3               	clrf	plusw1,c
 25504  018D3C  0EFE               	movlw	-2
 25505  018D3E  6AE3               	clrf	plusw1,c
 25506  018D40  0EFF               	movlw	-1
 25507  018D42  6AE3               	clrf	plusw1,c
 25508  018D44                     l8495:
 25509                           
 25510                           ;stkvar	_ff2 @ sp[(0)+-8]
 25511  018D44  50E1               	movf	fsr1l,w,c
 25512  018D46  0FF8               	addlw	-8
 25513  018D48  6ED9               	movwf	fsr2l,c
 25514  018D4A  50E2               	movf	fsr1h,w,c
 25515  018D4C  6EDA               	movwf	fsr2h,c
 25516  018D4E  0EFF               	movlw	255
 25517  018D50  22DA               	addwfc	fsr2h,f,c
 25518  018D52  0E00               	movlw	0
 25519  018D54  14DE               	andwf	postinc2,w,c
 25520  018D56  6E09               	movwf	(btemp+8)^0,c
 25521  018D58  0E00               	movlw	0
 25522  018D5A  14DE               	andwf	postinc2,w,c
 25523  018D5C  6E0A               	movwf	(btemp+9)^0,c
 25524  018D5E  0E80               	movlw	128
 25525  018D60  14DE               	andwf	postinc2,w,c
 25526  018D62  6E0B               	movwf	(btemp+10)^0,c
 25527  018D64  0E7F               	movlw	127
 25528  018D66  14DE               	andwf	postinc2,w,c
 25529  018D68  6E0C               	movwf	(btemp+11)^0,c
 25530  018D6A  5009               	movf	(btemp+8)^0,w,c
 25531  018D6C  100A               	iorwf	(btemp+9)^0,w,c
 25532  018D6E  100B               	iorwf	(btemp+10)^0,w,c
 25533  018D70  100C               	iorwf	(btemp+11)^0,w,c
 25534  018D72  A4D8               	btfss	status,2,c
 25535  018D74  D008               	goto	l2663
 25536                           
 25537                           ;stkvar	_ff2 @ sp[(0)+-8]
 25538  018D76  0EF8               	movlw	-8
 25539  018D78  6AE3               	clrf	plusw1,c
 25540  018D7A  0EF9               	movlw	-7
 25541  018D7C  6AE3               	clrf	plusw1,c
 25542  018D7E  0EFA               	movlw	-6
 25543  018D80  6AE3               	clrf	plusw1,c
 25544  018D82  0EFB               	movlw	-5
 25545  018D84  6AE3               	clrf	plusw1,c
 25546  018D86                     l2663:
 25547                           
 25548                           ;stkvar	_ff1 @ sp[(0)+-4]
 25549  018D86  0EFF               	movlw	-1
 25550  018D88  AEE3               	btfss	plusw1,7,c
 25551  018D8A  D024               	goto	l8501
 25552                           
 25553                           ;stkvar	_ff1 @ sp[(0)+-4]
 25554  018D8C  0E00               	movlw	0
 25555  018D8E  6E09               	movwf	(btemp+8)^0,c
 25556  018D90  0E00               	movlw	0
 25557  018D92  6E0A               	movwf	(btemp+9)^0,c
 25558  018D94  0E00               	movlw	0
 25559  018D96  6E0B               	movwf	(btemp+10)^0,c
 25560  018D98  0E80               	movlw	128
 25561  018D9A  6E0C               	movwf	(btemp+11)^0,c
 25562  018D9C  0EFC               	movlw	-4
 25563  018D9E  50E3               	movf	plusw1,w,c
 25564  018DA0  5E09               	subwf	(btemp+8)^0,f,c
 25565  018DA2  0EFD               	movlw	-3
 25566  018DA4  50E3               	movf	plusw1,w,c
 25567  018DA6  5A0A               	subwfb	(btemp+9)^0,f,c
 25568  018DA8  0EFE               	movlw	-2
 25569  018DAA  50E3               	movf	plusw1,w,c
 25570  018DAC  5A0B               	subwfb	(btemp+10)^0,f,c
 25571  018DAE  0EFF               	movlw	-1
 25572  018DB0  50E3               	movf	plusw1,w,c
 25573  018DB2  5A0C               	subwfb	(btemp+11)^0,f,c
 25574                           
 25575                           ;stkvar	_ff1 @ sp[(0)+-4]
 25576  018DB4  0EFC               	movlw	-4
 25577  018DB6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25578  018DBC  0EFD               	movlw	-3
 25579  018DBE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25580  018DC4  0EFE               	movlw	-2
 25581  018DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25582  018DCC  0EFF               	movlw	-1
 25583  018DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25584  018DD4                     l8501:
 25585                           
 25586                           ;stkvar	_ff2 @ sp[(0)+-8]
 25587  018DD4  0EFB               	movlw	-5
 25588  018DD6  AEE3               	btfss	plusw1,7,c
 25589  018DD8  D024               	goto	l8505
 25590                           
 25591                           ;stkvar	_ff2 @ sp[(0)+-8]
 25592  018DDA  0E00               	movlw	0
 25593  018DDC  6E09               	movwf	(btemp+8)^0,c
 25594  018DDE  0E00               	movlw	0
 25595  018DE0  6E0A               	movwf	(btemp+9)^0,c
 25596  018DE2  0E00               	movlw	0
 25597  018DE4  6E0B               	movwf	(btemp+10)^0,c
 25598  018DE6  0E80               	movlw	128
 25599  018DE8  6E0C               	movwf	(btemp+11)^0,c
 25600  018DEA  0EF8               	movlw	-8
 25601  018DEC  50E3               	movf	plusw1,w,c
 25602  018DEE  5E09               	subwf	(btemp+8)^0,f,c
 25603  018DF0  0EF9               	movlw	-7
 25604  018DF2  50E3               	movf	plusw1,w,c
 25605  018DF4  5A0A               	subwfb	(btemp+9)^0,f,c
 25606  018DF6  0EFA               	movlw	-6
 25607  018DF8  50E3               	movf	plusw1,w,c
 25608  018DFA  5A0B               	subwfb	(btemp+10)^0,f,c
 25609  018DFC  0EFB               	movlw	-5
 25610  018DFE  50E3               	movf	plusw1,w,c
 25611  018E00  5A0C               	subwfb	(btemp+11)^0,f,c
 25612                           
 25613                           ;stkvar	_ff2 @ sp[(0)+-8]
 25614  018E02  0EF8               	movlw	-8
 25615  018E04  0060  F027  FFE3   	movff	btemp+8,plusw1
 25616  018E0A  0EF9               	movlw	-7
 25617  018E0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25618  018E12  0EFA               	movlw	-6
 25619  018E14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25620  018E1A  0EFB               	movlw	-5
 25621  018E1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25622  018E22                     l8505:
 25623                           
 25624                           ;stkvar	_ff1 @ sp[(0)+-4]
 25625  018E22  0EFF               	movlw	-1
 25626  018E24  7EE3               	btg	plusw1,7,c
 25627                           
 25628                           ;stkvar	_ff2 @ sp[(0)+-8]
 25629  018E26  0EFB               	movlw	-5
 25630  018E28  7EE3               	btg	plusw1,7,c
 25631                           
 25632                           ;stkvar	_ff2 @ sp[(0)+-8]
 25633                           ;stkvar	_ff1 @ sp[(0)+-4]
 25634  018E2A  50E1               	movf	fsr1l,w,c
 25635  018E2C  0FFC               	addlw	-4
 25636  018E2E  6ED9               	movwf	fsr2l,c
 25637  018E30  50E2               	movf	fsr1h,w,c
 25638  018E32  6EDA               	movwf	fsr2h,c
 25639  018E34  0EFF               	movlw	255
 25640  018E36  22DA               	addwfc	fsr2h,f,c
 25641  018E38  0EF8               	movlw	-8
 25642  018E3A  50E3               	movf	plusw1,w,c
 25643  018E3C  5CDE               	subwf	postinc2,w,c
 25644  018E3E  0EF9               	movlw	-7
 25645  018E40  50E3               	movf	plusw1,w,c
 25646  018E42  58DE               	subwfb	postinc2,w,c
 25647  018E44  0EFA               	movlw	-6
 25648  018E46  50E3               	movf	plusw1,w,c
 25649  018E48  58DE               	subwfb	postinc2,w,c
 25650  018E4A  0EFB               	movlw	-5
 25651  018E4C  50E3               	movf	plusw1,w,c
 25652  018E4E  58DE               	subwfb	postinc2,w,c
 25653  018E50  B0D8               	btfsc	status,0,c
 25654  018E52  D002               	goto	l8513
 25655  018E54  9001               	bcf	btemp& (0+255),0,c
 25656  018E56  D001               	goto	l2670
 25657  018E58                     l8513:
 25658  018E58  8001               	bsf	btemp& (0+255),0,c
 25659  018E5A                     l2670:
 25660                           
 25661                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25662  018E5A  0EF8               	movlw	248
 25663  018E5C  26E1               	addwf	fsr1l,f,c
 25664  018E5E  0EFF               	movlw	255
 25665  018E60  22E2               	addwfc	fsr1h,f,c
 25666  018E62  0012               	return		;funcret
 25667  018E64                     __end_of___flge:
 25668                           	opt callstack 0
 25669                           
 25670 ;; *************** function _calc_model_data *****************
 25671 ;; Defined at:
 25672 ;;		line 67 in file "mbmc.c"
 25673 ;; Parameters:    Size  Location     Type
 25674 ;;		None
 25675 ;; Auto vars:     Size  Location     Type
 25676 ;;		None
 25677 ;; Return value:  Size  Location     Type
 25678 ;;                  1  [STACK] void 
 25679 ;; Registers used:
 25680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25681 ;; Tracked objects:
 25682 ;;		On entry : 0/1
 25683 ;;		On exit  : 3F/39
 25684 ;;		Unchanged: 0/0
 25685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25690 ;;Total ram usage:        0 bytes
 25691 ;; Hardware stack levels used:    1
 25692 ;; Hardware stack levels required when called:   18
 25693 ;; This function calls:
 25694 ;;		___fladd
 25695 ;;		___flmul
 25696 ;;		___flsub
 25697 ;;		_lp_filter
 25698 ;;		_start_bsoc
 25699 ;;		_stop_bsoc
 25700 ;; This function is called by:
 25701 ;;		_main
 25702 ;; This function uses a reentrant model
 25703 ;;
 25704                           
 25705                           	psect	text100
 25706  0159B0                     __ptext100:
 25707                           	opt callstack 0
 25708  0159B0                     _calc_model_data:
 25709                           	opt callstack 12
 25710                           
 25711                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25712                           
 25713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25714                           ;incstack = 0
 25715  0159B0  ECF4  F0DE         	call	_stop_bsoc	;wreg free
 25716                           
 25717                           ; BSR set to: 57
 25718                           ;mbmc.c: 72:  if (!V.calib) {
 25719  0159B4  0101               	movlb	1	; () banked
 25720  0159B6  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 25721  0159B8  A4D8               	btfss	status,2,c
 25722  0159BA  D219               	goto	l10915
 25723                           
 25724                           ; BSR set to: 1
 25725                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25726  0159BC  EE21  F2FF         	lfsr	2,_C
 25727  0159C0  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 25728  0159C6  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 25729  0159CC  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 25730  0159D2  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 25731                           
 25732                           ; BSR set to: 1
 25733                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25734  0159D8  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25735  0159DE  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25736  0159E4  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25737  0159EA  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25738  0159F0  EE21  F343         	lfsr	2,_C+68	;volatile
 25739  0159F4  006F FF7B FFE6     	movff	postinc2,postinc1
 25740  0159FA  006F FF7B FFE6     	movff	postinc2,postinc1
 25741  015A00  006F FF7B FFE6     	movff	postinc2,postinc1
 25742  015A06  006F FF7B FFE6     	movff	postinc2,postinc1
 25743  015A0C  EC08  F0D9         	call	___flsub	;wreg free
 25744  015A10  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25745  015A16  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25746  015A1C  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25747  015A22  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25748                           
 25749                           ;mbmc.c: 75:   bcror = C.c_bat;
 25750  015A28  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25751  015A2C  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25752  015A30  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25753  015A34  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25754                           
 25755                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25756  015A38  EE21  F303         	lfsr	2,_C+4	;volatile
 25757  015A3C  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 25758  015A42  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 25759  015A48  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 25760  015A4E  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 25761                           
 25762                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25763  015A54  EE21  F30F         	lfsr	2,_C+16	;volatile
 25764  015A58  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 25765  015A5E  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 25766  015A64  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 25767  015A6A  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 25768                           
 25769                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 25770  015A70  EE21  F333         	lfsr	2,_C+52	;volatile
 25771  015A74  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 25772  015A7A  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 25773  015A80  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 25774  015A86  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 25775                           
 25776                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 25777  015A8C  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25778  015A92  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25779  015A98  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25780  015A9E  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25781  015AA4  EE21  F353         	lfsr	2,_C+84	;volatile
 25782  015AA8  006F FF7B FFE6     	movff	postinc2,postinc1
 25783  015AAE  006F FF7B FFE6     	movff	postinc2,postinc1
 25784  015AB4  006F FF7B FFE6     	movff	postinc2,postinc1
 25785  015ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 25786  015AC0  EC08  F0D9         	call	___flsub	;wreg free
 25787  015AC4  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25788  015ACA  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25789  015AD0  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25790  015AD6  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25791                           
 25792                           ;mbmc.c: 80:   bvror = C.v_bat;
 25793  015ADC  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25794  015AE0  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25795  015AE4  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25796  015AE8  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25797                           
 25798                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 25799  015AEC  EE21  F313         	lfsr	2,_C+20	;volatile
 25800  015AF0  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 25801  015AF6  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 25802  015AFC  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 25803  015B02  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 25804                           
 25805                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 25806  015B08  EE21  F307         	lfsr	2,_C+8	;volatile
 25807  015B0C  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 25808  015B12  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 25809  015B18  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 25810  015B1E  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 25811                           
 25812                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 25813  015B24  EE21  F32F         	lfsr	2,_C+48	;volatile
 25814  015B28  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 25815  015B2E  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 25816  015B34  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 25817  015B3A  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 25818                           
 25819                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25820  015B40  0E01               	movlw	1
 25821  015B42  6EE6               	movwf	postinc1,c
 25822  015B44  0E10               	movlw	16
 25823  015B46  6EE6               	movwf	postinc1,c
 25824  015B48  EE21  F2FF         	lfsr	2,_C
 25825  015B4C  006F FF7B FFE6     	movff	postinc2,postinc1
 25826  015B52  006F FF7B FFE6     	movff	postinc2,postinc1
 25827  015B58  006F FF7B FFE6     	movff	postinc2,postinc1
 25828  015B5E  006F FF7B FFE6     	movff	postinc2,postinc1
 25829  015B64  EE21  F303         	lfsr	2,_C+4	;volatile
 25830  015B68  006F FF7B FFE6     	movff	postinc2,postinc1
 25831  015B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 25832  015B74  006F FF7B FFE6     	movff	postinc2,postinc1
 25833  015B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 25834  015B80  EC08  F0D9         	call	___flsub	;wreg free
 25835  015B84  0060  F007  FFE6   	movff	btemp,postinc1
 25836  015B8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25837  015B90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25838  015B96  0060  F013  FFE6   	movff	btemp+3,postinc1
 25839  015B9C  ECCC  F0C1         	call	_lp_filter	;wreg free
 25840  015BA0  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 25841  015BA6  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 25842  015BAC  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 25843  015BB2  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 25844                           
 25845                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25846  015BB8  0E01               	movlw	1
 25847  015BBA  6EE6               	movwf	postinc1,c
 25848  015BBC  0E11               	movlw	17
 25849  015BBE  6EE6               	movwf	postinc1,c
 25850  015BC0  EE21  F353         	lfsr	2,_C+84	;volatile
 25851  015BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 25852  015BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 25853  015BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 25854  015BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 25855  015BDC  EE21  F33F         	lfsr	2,_C+64	;volatile
 25856  015BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 25857  015BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 25858  015BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 25859  015BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 25860  015BF8  ECA0  F099         	call	___flmul	;wreg free
 25861  015BFC  0060  F007  FFE6   	movff	btemp,postinc1
 25862  015C02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25863  015C08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25864  015C0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25865  015C14  ECCC  F0C1         	call	_lp_filter	;wreg free
 25866  015C18  0060  F004  F773   	movff	btemp,_C+116	;volatile
 25867  015C1E  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 25868  015C24  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 25869  015C2A  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 25870                           
 25871                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25872  015C30  0E01               	movlw	1
 25873  015C32  6EE6               	movwf	postinc1,c
 25874  015C34  0E12               	movlw	18
 25875  015C36  6EE6               	movwf	postinc1,c
 25876  015C38  EE21  F34F         	lfsr	2,_C+80	;volatile
 25877  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 25878  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 25879  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 25880  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 25881  015C54  EE21  F347         	lfsr	2,_C+72	;volatile
 25882  015C58  006F FF7B FFE6     	movff	postinc2,postinc1
 25883  015C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 25884  015C64  006F FF7B FFE6     	movff	postinc2,postinc1
 25885  015C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 25886  015C70  ECA0  F099         	call	___flmul	;wreg free
 25887  015C74  0060  F007  FFE6   	movff	btemp,postinc1
 25888  015C7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25889  015C80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25890  015C86  0060  F013  FFE6   	movff	btemp+3,postinc1
 25891  015C8C  ECCC  F0C1         	call	_lp_filter	;wreg free
 25892  015C90  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 25893  015C96  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 25894  015C9C  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 25895  015CA2  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 25896                           
 25897                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25898  015CA8  0E01               	movlw	1
 25899  015CAA  6EE6               	movwf	postinc1,c
 25900  015CAC  0E13               	movlw	19
 25901  015CAE  6EE6               	movwf	postinc1,c
 25902  015CB0  0E00               	movlw	0
 25903  015CB2  6EE6               	movwf	postinc1,c
 25904  015CB4  0E00               	movlw	0
 25905  015CB6  6EE6               	movwf	postinc1,c
 25906  015CB8  0E60               	movlw	96
 25907  015CBA  6EE6               	movwf	postinc1,c
 25908  015CBC  0EC1               	movlw	193
 25909  015CBE  6EE6               	movwf	postinc1,c
 25910  015CC0  EE21  F363         	lfsr	2,_C+100	;volatile
 25911  015CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 25912  015CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 25913  015CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 25914  015CD6  006F FF7B FFE6     	movff	postinc2,postinc1
 25915  015CDC  EE21  F33F         	lfsr	2,_C+64	;volatile
 25916  015CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 25917  015CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 25918  015CEC  006F FF7B FFE6     	movff	postinc2,postinc1
 25919  015CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 25920  015CF8  ECA0  F099         	call	___flmul	;wreg free
 25921  015CFC  0060  F007  FFE6   	movff	btemp,postinc1
 25922  015D02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25923  015D08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25924  015D0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25925  015D14  ECB5  F09D         	call	___fladd	;wreg free
 25926  015D18  0060  F007  FFE6   	movff	btemp,postinc1
 25927  015D1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25928  015D24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25929  015D2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 25930  015D30  ECCC  F0C1         	call	_lp_filter	;wreg free
 25931  015D34  0060  F004  F777   	movff	btemp,_C+120	;volatile
 25932  015D3A  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 25933  015D40  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 25934  015D46  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 25935                           
 25936                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25937  015D4C  0E01               	movlw	1
 25938  015D4E  6EE6               	movwf	postinc1,c
 25939  015D50  0E14               	movlw	20
 25940  015D52  6EE6               	movwf	postinc1,c
 25941  015D54  EE21  F353         	lfsr	2,_C+84	;volatile
 25942  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 25943  015D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 25944  015D64  006F FF7B FFE6     	movff	postinc2,postinc1
 25945  015D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 25946  015D70  EE21  F343         	lfsr	2,_C+68	;volatile
 25947  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 25948  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 25949  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 25950  015D86  006F FF7B FFE6     	movff	postinc2,postinc1
 25951  015D8C  ECA0  F099         	call	___flmul	;wreg free
 25952  015D90  0060  F007  FFE6   	movff	btemp,postinc1
 25953  015D96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25954  015D9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25955  015DA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25956  015DA8  ECCC  F0C1         	call	_lp_filter	;wreg free
 25957  015DAC  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 25958  015DB2  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 25959  015DB8  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 25960  015DBE  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 25961                           
 25962                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 25963  015DC4  EE21  F377         	lfsr	2,_C+120	;volatile
 25964  015DC8  0E03               	movlw	3
 25965  015DCA  AEDB               	btfss	plusw2,7,c
 25966  015DCC  D010               	goto	l10915
 25967                           
 25968                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 25969  015DCE  0E17               	movlw	23
 25970  015DD0  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 25971  015DD6  0EB7               	movlw	183
 25972  015DD8  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 25973  015DDE  0ED1               	movlw	209
 25974  015DE0  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 25975  015DE6  0E38               	movlw	56
 25976  015DE8  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 25977  015DEE                     l10915:
 25978                           
 25979                           ;mbmc.c: 95:  start_bsoc();
 25980  015DEE  EC8D  F0DD         	call	_start_bsoc	;wreg free
 25981                           
 25982                           ; BSR set to: 57
 25983                           ;mbmc.c: 96:  C.update = 1;
 25984  015DF2  0E01               	movlw	1
 25985  015DF4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 25986                           
 25987                           ; BSR set to: 57
 25988                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25989  015DFA  0012               	return		;funcret
 25990  015DFC                     __end_of_calc_model_data:
 25991                           	opt callstack 0
 25992                           
 25993 ;; *************** function _stop_bsoc *****************
 25994 ;; Defined at:
 25995 ;;		line 114 in file "bsoc.c"
 25996 ;; Parameters:    Size  Location     Type
 25997 ;;		None
 25998 ;; Auto vars:     Size  Location     Type
 25999 ;;		None
 26000 ;; Return value:  Size  Location     Type
 26001 ;;                  1  [STACK] void 
 26002 ;; Registers used:
 26003 ;;		None
 26004 ;; Tracked objects:
 26005 ;;		On entry : 0/1
 26006 ;;		On exit  : 3F/39
 26007 ;;		Unchanged: 0/0
 26008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26013 ;;Total ram usage:        0 bytes
 26014 ;; Hardware stack levels used:    1
 26015 ;; Hardware stack levels required when called:   15
 26016 ;; This function calls:
 26017 ;;		Nothing
 26018 ;; This function is called by:
 26019 ;;		_calc_model_data
 26020 ;; This function uses a reentrant model
 26021 ;;
 26022                           
 26023                           	psect	text101
 26024  01BDE8                     __ptext101:
 26025                           	opt callstack 0
 26026  01BDE8                     _stop_bsoc:
 26027                           	opt callstack 14
 26028                           
 26029                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 26030                           
 26031                           ; BSR set to: 57
 26032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26033                           ;incstack = 0
 26034  01BDE8  0139               	movlb	57	; () banked
 26035  01BDEA  9D96               	bcf	150,6,b	;volatile
 26036                           
 26037                           ; BSR set to: 57
 26038                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26039  01BDEC  0012               	return		;funcret
 26040  01BDEE                     __end_of_stop_bsoc:
 26041                           	opt callstack 0
 26042                           
 26043 ;; *************** function _start_bsoc *****************
 26044 ;; Defined at:
 26045 ;;		line 105 in file "bsoc.c"
 26046 ;; Parameters:    Size  Location     Type
 26047 ;;		None
 26048 ;; Auto vars:     Size  Location     Type
 26049 ;;		None
 26050 ;; Return value:  Size  Location     Type
 26051 ;;                  1  [STACK] void 
 26052 ;; Registers used:
 26053 ;;		wreg, status,2, status,0, btemp+11
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/1
 26056 ;;		On exit  : 3F/39
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26063 ;;Total ram usage:        0 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; Hardware stack levels required when called:   15
 26066 ;; This function calls:
 26067 ;;		Nothing
 26068 ;; This function is called by:
 26069 ;;		_calc_model_data
 26070 ;; This function uses a reentrant model
 26071 ;;
 26072                           
 26073                           	psect	text102
 26074  01BB1A                     __ptext102:
 26075                           	opt callstack 0
 26076  01BB1A                     _start_bsoc:
 26077                           	opt callstack 14
 26078                           
 26079                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 26080                           
 26081                           ; BSR set to: 57
 26082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26083                           ;incstack = 0
 26084  01BB1A  0139               	movlb	57	; () banked
 26085  01BB1C  8D96               	bsf	150,6,b	;volatile
 26086                           
 26087                           ; BSR set to: 57
 26088  01BB1E  A4BE               	btfss	190,2,c	;volatile
 26089  01BB20  D002               	goto	u9600
 26090  01BB22  0E01               	movlw	1
 26091  01BB24  D001               	goto	u9606
 26092  01BB26                     u9600:
 26093  01BB26  0E00               	movlw	0
 26094  01BB28                     u9606:
 26095  01BB28  0AFF               	xorlw	255
 26096  01BB2A  6E0C               	movwf	(btemp+11)^0,c
 26097  01BB2C  460C               	rlncf	(btemp+11)^0,f,c
 26098  01BB2E  460C               	rlncf	(btemp+11)^0,f,c
 26099  01BB30  50BE               	movf	190,w,c	;volatile
 26100  01BB32  180C               	xorwf	(btemp+11)^0,w,c
 26101  01BB34  0BFB               	andlw	-5
 26102  01BB36  180C               	xorwf	(btemp+11)^0,w,c
 26103  01BB38  6EBE               	movwf	190,c	;volatile
 26104                           
 26105                           ; BSR set to: 57
 26106                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26107  01BB3A  0012               	return		;funcret
 26108  01BB3C                     __end_of_start_bsoc:
 26109                           	opt callstack 0
 26110                           
 26111 ;; *************** function _lp_filter *****************
 26112 ;; Defined at:
 26113 ;;		line 29 in file "mbmc.c"
 26114 ;; Parameters:    Size  Location     Type
 26115 ;;  new             4  [STACK] const float 
 26116 ;;  bn              1  [STACK] const unsigned char 
 26117 ;;  slow            1  [STACK] const char 
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;  lp_speed        4  [STACK] float 
 26120 ;; Return value:  Size  Location     Type
 26121 ;;                  4  [STACK] float 
 26122 ;; Registers used:
 26123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/1
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;Total ram usage:        0 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; Hardware stack levels required when called:   17
 26136 ;; This function calls:
 26137 ;;		___fladd
 26138 ;;		___flmul
 26139 ;;		___flsub
 26140 ;; This function is called by:
 26141 ;;		_main
 26142 ;;		_convert_adc_data
 26143 ;;		_calc_model_data
 26144 ;; This function uses a reentrant model
 26145 ;;
 26146                           
 26147                           	psect	text103
 26148  018398                     __ptext103:
 26149                           	opt callstack 0
 26150  018398                     _lp_filter:
 26151                           	opt callstack 0
 26152                           
 26153                           ; BSR set to: 57
 26154                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26155  018398  52E6               	movf	postinc1,f,c
 26156  01839A  52E6               	movf	postinc1,f,c
 26157  01839C  52E6               	movf	postinc1,f,c
 26158  01839E  52E6               	movf	postinc1,f,c
 26159                           
 26160                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26161                           ;stkvar	_bn @ sp[(-4)+-5]
 26162                           
 26163                           ;incstack = 0
 26164  0183A0  0EF7               	movlw	-9
 26165  0183A2  006F FF8C  F001    	movff	plusw1,btemp
 26166  0183A8  0E14               	movlw	20
 26167  0183AA  6401               	cpfsgt	btemp^0,c
 26168  0183AC  D011               	goto	l10313
 26169  0183AE                     u9510:
 26170                           
 26171                           ;mbmc.c: 35:   return new;
 26172                           ;stkvar	_new @ sp[(-4)+-4]
 26173  0183AE  0EF8               	movlw	-8
 26174  0183B0  006F FF8C  F001    	movff	plusw1,btemp
 26175  0183B6  0EF9               	movlw	-7
 26176  0183B8  006F FF8C  F002    	movff	plusw1,btemp+1
 26177  0183BE  0EFA               	movlw	-6
 26178  0183C0  006F FF8C  F003    	movff	plusw1,btemp+2
 26179  0183C6  0EFB               	movlw	-5
 26180  0183C8  006F FF8C  F004    	movff	plusw1,btemp+3
 26181  0183CE  D0BD               	goto	l1835
 26182  0183D0                     l10313:
 26183                           
 26184                           ;mbmc.c: 37:  if (slow == (-1)) {
 26185                           ;stkvar	_slow @ sp[(-4)+-6]
 26186  0183D0  0EF6               	movlw	-10
 26187  0183D2  28E3               	incf	plusw1,w,c
 26188  0183D4  A4D8               	btfss	status,2,c
 26189  0183D6  D012               	goto	l10321
 26190                           
 26191                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26192                           ;stkvar	_bn @ sp[(-4)+-5]
 26193  0183D8  0EF7               	movlw	-9
 26194  0183DA  50E3               	movf	plusw1,w,c
 26195  0183DC  0D04               	mullw	4
 26196  0183DE  0E00               	movlw	low lp_filter@smooth
 26197  0183E0  24F3               	addwf	243,w,c
 26198  0183E2  6ED9               	movwf	fsr2l,c
 26199  0183E4  0E02               	movlw	high lp_filter@smooth
 26200  0183E6  20F4               	addwfc	prodh,w,c
 26201  0183E8  6EDA               	movwf	fsr2h,c
 26202  0183EA  0E00               	movlw	0
 26203  0183EC  6EDE               	movwf	postinc2,c
 26204  0183EE  0E00               	movlw	0
 26205  0183F0  6EDE               	movwf	postinc2,c
 26206  0183F2  0E00               	movlw	0
 26207  0183F4  6EDE               	movwf	postinc2,c
 26208  0183F6  0E00               	movlw	0
 26209  0183F8  6EDD               	movwf	postdec2,c
 26210  0183FA  D7D9               	goto	u9510
 26211  0183FC                     l10321:
 26212                           
 26213                           ;mbmc.c: 42:  if (slow) {
 26214                           ;stkvar	_slow @ sp[(-4)+-6]
 26215  0183FC  0EF6               	movlw	-10
 26216  0183FE  50E3               	movf	plusw1,w,c
 26217  018400  B4D8               	btfsc	status,2,c
 26218  018402  D006               	goto	l10325
 26219                           
 26220                           ;mbmc.c: 43:   lp_speed = 0.033;
 26221  018404  0E02               	movlw	2
 26222  018406  6E09               	movwf	(btemp+8)^0,c
 26223  018408  0E2B               	movlw	43
 26224  01840A  6E0A               	movwf	(btemp+9)^0,c
 26225  01840C  0E07               	movlw	7
 26226  01840E  D005               	goto	L31
 26227  018410                     l10325:
 26228                           
 26229                           ;mbmc.c: 45:   lp_speed = 0.066;
 26230  018410  0E02               	movlw	2
 26231  018412  6E09               	movwf	(btemp+8)^0,c
 26232  018414  0E2B               	movlw	43
 26233  018416  6E0A               	movwf	(btemp+9)^0,c
 26234  018418  0E87               	movlw	135
 26235  01841A                     L31:
 26236  01841A  6E0B               	movwf	(btemp+10)^0,c
 26237  01841C  0E3D               	movlw	61
 26238  01841E  6E0C               	movwf	(btemp+11)^0,c
 26239                           
 26240                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26241  018420  0EFC               	movlw	-4
 26242  018422  0060  F027  FFE3   	movff	btemp+8,plusw1
 26243  018428  0EFD               	movlw	-3
 26244  01842A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26245  018430  0EFE               	movlw	-2
 26246  018432  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26247  018438  0EFF               	movlw	-1
 26248  01843A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26249                           
 26250                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26251                           ;stkvar	_bn @ sp[(-4)+-5]
 26252  018440  0EF7               	movlw	-9
 26253  018442  50E3               	movf	plusw1,w,c
 26254  018444  0D04               	mullw	4
 26255  018446  0E00               	movlw	low lp_filter@smooth
 26256  018448  24F3               	addwf	243,w,c
 26257  01844A  6ED9               	movwf	fsr2l,c
 26258  01844C  0E02               	movlw	high lp_filter@smooth
 26259  01844E  20F4               	addwfc	prodh,w,c
 26260  018450  6EDA               	movwf	fsr2h,c
 26261  018452  006F FF7B FFE6     	movff	postinc2,postinc1
 26262  018458  006F FF7B FFE6     	movff	postinc2,postinc1
 26263  01845E  006F FF7B FFE6     	movff	postinc2,postinc1
 26264  018464  006F FF7B FFE6     	movff	postinc2,postinc1
 26265                           
 26266                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26267  01846A  0EF8               	movlw	-8
 26268  01846C  006F FF8F FFE6     	movff	plusw1,postinc1
 26269  018472  006F FF8F FFE6     	movff	plusw1,postinc1
 26270  018478  006F FF8F FFE6     	movff	plusw1,postinc1
 26271  01847E  006F FF8F FFE6     	movff	plusw1,postinc1
 26272                           
 26273                           ;stkvar	_bn @ sp[(-12)+-5]
 26274  018484  0EEF               	movlw	-17
 26275  018486  50E3               	movf	plusw1,w,c
 26276  018488  0D04               	mullw	4
 26277  01848A  0E00               	movlw	low lp_filter@smooth
 26278  01848C  24F3               	addwf	243,w,c
 26279  01848E  6ED9               	movwf	fsr2l,c
 26280  018490  0E02               	movlw	high lp_filter@smooth
 26281  018492  20F4               	addwfc	prodh,w,c
 26282  018494  6EDA               	movwf	fsr2h,c
 26283  018496  006F FF7B FFE6     	movff	postinc2,postinc1
 26284  01849C  006F FF7B FFE6     	movff	postinc2,postinc1
 26285  0184A2  006F FF7B FFE6     	movff	postinc2,postinc1
 26286  0184A8  006F FF7B FFE6     	movff	postinc2,postinc1
 26287                           
 26288                           ;stkvar	_new @ sp[(-16)+-4]
 26289  0184AE  0EEC               	movlw	-20
 26290  0184B0  006F FF8F FFE6     	movff	plusw1,postinc1
 26291  0184B6  006F FF8F FFE6     	movff	plusw1,postinc1
 26292  0184BC  006F FF8F FFE6     	movff	plusw1,postinc1
 26293  0184C2  006F FF8F FFE6     	movff	plusw1,postinc1
 26294  0184C8  EC08  F0D9         	call	___flsub	;wreg free
 26295  0184CC  0060  F007  FFE6   	movff	btemp,postinc1
 26296  0184D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26297  0184D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26298  0184DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 26299  0184E4  ECA0  F099         	call	___flmul	;wreg free
 26300  0184E8  0060  F007  FFE6   	movff	btemp,postinc1
 26301  0184EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26302  0184F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26303  0184FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 26304  018500  ECB5  F09D         	call	___fladd	;wreg free
 26305                           
 26306                           ;stkvar	_bn @ sp[(-4)+-5]
 26307  018504  0EF7               	movlw	-9
 26308  018506  50E3               	movf	plusw1,w,c
 26309  018508  0D04               	mullw	4
 26310  01850A  0E00               	movlw	low lp_filter@smooth
 26311  01850C  24F3               	addwf	243,w,c
 26312  01850E  6ED9               	movwf	fsr2l,c
 26313  018510  0E02               	movlw	high lp_filter@smooth
 26314  018512  20F4               	addwfc	prodh,w,c
 26315  018514  6EDA               	movwf	fsr2h,c
 26316  018516  0060  F007  FFDE   	movff	btemp,postinc2
 26317  01851C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26318  018522  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26319  018528  0060  F013  FFDD   	movff	btemp+3,postdec2
 26320  01852E  52DD               	movf	postdec2,f,c
 26321  018530  52DD               	movf	postdec2,f,c
 26322  018532  006F FF78  F001    	movff	postinc2,btemp
 26323  018538  006F FF78  F002    	movff	postinc2,btemp+1
 26324  01853E  006F FF78  F003    	movff	postinc2,btemp+2
 26325  018544  006F FF78  F004    	movff	postinc2,btemp+3
 26326  01854A                     l1835:
 26327                           
 26328                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26329  01854A  0EF6               	movlw	246
 26330  01854C  26E1               	addwf	fsr1l,f,c
 26331  01854E  0EFF               	movlw	255
 26332  018550  22E2               	addwfc	fsr1h,f,c
 26333  018552  0012               	return		;funcret
 26334  018554                     __end_of_lp_filter:
 26335                           	opt callstack 0
 26336                           
 26337 ;; *************** function ___flsub *****************
 26338 ;; Defined at:
 26339 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26340 ;; Parameters:    Size  Location     Type
 26341 ;;  b               4  [STACK] float 
 26342 ;;  a               4  [STACK] float 
 26343 ;; Auto vars:     Size  Location     Type
 26344 ;;		None
 26345 ;; Return value:  Size  Location     Type
 26346 ;;                  4  [STACK] float 
 26347 ;; Registers used:
 26348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26349 ;; Tracked objects:
 26350 ;;		On entry : 0/0
 26351 ;;		On exit  : 0/0
 26352 ;;		Unchanged: 0/0
 26353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26358 ;;Total ram usage:        0 bytes
 26359 ;; Hardware stack levels used:    1
 26360 ;; Hardware stack levels required when called:   16
 26361 ;; This function calls:
 26362 ;;		___fladd
 26363 ;; This function is called by:
 26364 ;;		_conv_raw_result
 26365 ;;		_lp_filter
 26366 ;;		_calc_model_data
 26367 ;;		_calc_ror_data
 26368 ;;		_esr_check
 26369 ;;		_efgtoa
 26370 ;; This function uses a reentrant model
 26371 ;;
 26372                           
 26373                           	psect	text104
 26374  01B210                     __ptext104:
 26375                           	opt callstack 0
 26376  01B210                     ___flsub:
 26377                           	opt callstack 0
 26378                           
 26379                           ;stkvar	_a @ sp[(0)+-8]
 26380                           
 26381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26382                           ;incstack = 0
 26383 ;; hardware stack exceeded
 26384  01B210  0EFB               	movlw	-5
 26385  01B212  7EE3               	btg	plusw1,7,c
 26386                           
 26387                           ;stkvar	_a @ sp[(0)+-8]
 26388  01B214  0EF8               	movlw	-8
 26389  01B216  006F FF8F FFE6     	movff	plusw1,postinc1
 26390  01B21C  006F FF8F FFE6     	movff	plusw1,postinc1
 26391  01B222  006F FF8F FFE6     	movff	plusw1,postinc1
 26392  01B228  006F FF8F FFE6     	movff	plusw1,postinc1
 26393                           
 26394                           ;stkvar	_b @ sp[(-4)+-4]
 26395  01B22E  0EF8               	movlw	-8
 26396  01B230  006F FF8F FFE6     	movff	plusw1,postinc1
 26397  01B236  006F FF8F FFE6     	movff	plusw1,postinc1
 26398  01B23C  006F FF8F FFE6     	movff	plusw1,postinc1
 26399  01B242  006F FF8F FFE6     	movff	plusw1,postinc1
 26400  01B248  ECB5  F09D         	call	___fladd	;wreg free
 26401                           
 26402                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26403  01B24C  0EF8               	movlw	248
 26404  01B24E  26E1               	addwf	fsr1l,f,c
 26405  01B250  0EFF               	movlw	255
 26406  01B252  22E2               	addwfc	fsr1h,f,c
 26407  01B254  0012               	return		;funcret
 26408  01B256                     __end_of___flsub:
 26409                           	opt callstack 0
 26410                           
 26411 ;; *************** function ___fladd *****************
 26412 ;; Defined at:
 26413 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26414 ;; Parameters:    Size  Location     Type
 26415 ;;  b               4  [STACK] float 
 26416 ;;  a               4  [STACK] float 
 26417 ;; Auto vars:     Size  Location     Type
 26418 ;;  grs             1  [STACK] unsigned char 
 26419 ;;  bexp            1  [STACK] unsigned char 
 26420 ;;  aexp            1  [STACK] unsigned char 
 26421 ;;  signs           1  [STACK] unsigned char 
 26422 ;; Return value:  Size  Location     Type
 26423 ;;                  4  [STACK] unsigned char 
 26424 ;; Registers used:
 26425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26426 ;; Tracked objects:
 26427 ;;		On entry : 0/0
 26428 ;;		On exit  : 0/0
 26429 ;;		Unchanged: 0/0
 26430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26435 ;;Total ram usage:        0 bytes
 26436 ;; Hardware stack levels used:    1
 26437 ;; Hardware stack levels required when called:   15
 26438 ;; This function calls:
 26439 ;;		Nothing
 26440 ;; This function is called by:
 26441 ;;		_main
 26442 ;;		_conv_raw_result
 26443 ;;		_lp_filter
 26444 ;;		_calc_model_data
 26445 ;;		_efgtoa
 26446 ;;		___asfladd
 26447 ;;		___flsub
 26448 ;; This function uses a reentrant model
 26449 ;;
 26450                           
 26451                           	psect	text105
 26452  013B6A                     __ptext105:
 26453                           	opt callstack 0
 26454  013B6A                     ___fladd:
 26455                           	opt callstack 0
 26456                           
 26457                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26458  013B6A  52E6               	movf	postinc1,f,c
 26459  013B6C  52E6               	movf	postinc1,f,c
 26460  013B6E  52E6               	movf	postinc1,f,c
 26461  013B70  52E6               	movf	postinc1,f,c
 26462                           
 26463                           ;stkvar	_b @ sp[(-4)+-4]
 26464                           
 26465                           ;incstack = 0
 26466 ;; hardware stack exceeded
 26467  013B72  0EFB               	movlw	251
 26468  013B74  24E1               	addwf	fsr1l,w,c
 26469  013B76  6ED9               	movwf	fsr2l,c
 26470  013B78  0EFF               	movlw	255
 26471  013B7A  20E2               	addwfc	fsr1h,w,c
 26472  013B7C  6EDA               	movwf	fsr2h,c
 26473  013B7E  50DF               	movf	indf2,w,c
 26474  013B80  6E0C               	movwf	(btemp+11)^0,c
 26475  013B82  0E80               	movlw	128
 26476  013B84  160C               	andwf	(btemp+11)^0,f,c
 26477                           
 26478                           ;stkvar	_signs @ sp[(-4)+3]
 26479  013B86  0EFF               	movlw	-1
 26480  013B88  0060  F033  FFE3   	movff	btemp+11,plusw1
 26481                           
 26482                           ;stkvar	_b @ sp[(-4)+-4]
 26483  013B8E  0EFB               	movlw	251
 26484  013B90  24E1               	addwf	fsr1l,w,c
 26485  013B92  6ED9               	movwf	fsr2l,c
 26486  013B94  0EFF               	movlw	255
 26487  013B96  20E2               	addwfc	fsr1h,w,c
 26488  013B98  6EDA               	movwf	fsr2h,c
 26489  013B9A  50DF               	movf	indf2,w,c
 26490  013B9C  6E0C               	movwf	(btemp+11)^0,c
 26491  013B9E  90D8               	bcf	status,0,c
 26492  013BA0  340C               	rlcf	(btemp+11)^0,w,c
 26493  013BA2  6E0B               	movwf	(btemp+10)^0,c
 26494                           
 26495                           ;stkvar	_bexp @ sp[(-4)+1]
 26496  013BA4  0EFD               	movlw	-3
 26497  013BA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26498                           
 26499                           ;stkvar	_b @ sp[(-4)+-4]
 26500  013BAC  0EFA               	movlw	250
 26501  013BAE  24E1               	addwf	fsr1l,w,c
 26502  013BB0  6ED9               	movwf	fsr2l,c
 26503  013BB2  0EFF               	movlw	255
 26504  013BB4  20E2               	addwfc	fsr1h,w,c
 26505  013BB6  6EDA               	movwf	fsr2h,c
 26506  013BB8  AEDF               	btfss	indf2,7,c
 26507  013BBA  D002               	goto	l7645
 26508                           
 26509                           ;stkvar	_bexp @ sp[(-4)+1]
 26510  013BBC  0EFD               	movlw	-3
 26511  013BBE  80E3               	bsf	plusw1,0,c
 26512  013BC0                     l7645:
 26513                           
 26514                           ;stkvar	_bexp @ sp[(-4)+1]
 26515  013BC0  0EFD               	movlw	-3
 26516  013BC2  50E3               	movf	plusw1,w,c
 26517  013BC4  B4D8               	btfsc	status,2,c
 26518  013BC6  D027               	goto	l7655
 26519                           
 26520                           ;stkvar	_bexp @ sp[(-4)+1]
 26521  013BC8  0EFD               	movlw	-3
 26522  013BCA  28E3               	incf	plusw1,w,c
 26523  013BCC  A4D8               	btfss	status,2,c
 26524  013BCE  D018               	goto	l7651
 26525  013BD0  0E00               	movlw	0
 26526  013BD2  6E09               	movwf	(btemp+8)^0,c
 26527  013BD4  0E00               	movlw	0
 26528  013BD6  6E0A               	movwf	(btemp+9)^0,c
 26529  013BD8  0E00               	movlw	0
 26530  013BDA  6E0B               	movwf	(btemp+10)^0,c
 26531  013BDC  0E00               	movlw	0
 26532  013BDE  6E0C               	movwf	(btemp+11)^0,c
 26533                           
 26534                           ;stkvar	_b @ sp[(-4)+-4]
 26535  013BE0  0EF8               	movlw	-8
 26536  013BE2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26537  013BE8  0EF9               	movlw	-7
 26538  013BEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26539  013BF0  0EFA               	movlw	-6
 26540  013BF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26541  013BF8  0EFB               	movlw	-5
 26542  013BFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26543  013C00                     l7651:
 26544                           
 26545                           ;stkvar	_b @ sp[(-4)+-4]
 26546  013C00  0EFA               	movlw	-6
 26547  013C02  8EE3               	bsf	plusw1,7,c
 26548                           
 26549                           ;stkvar	_b @ sp[(-4)+-4]
 26550  013C04  0EFB               	movlw	251
 26551  013C06  24E1               	addwf	fsr1l,w,c
 26552  013C08  6ED9               	movwf	fsr2l,c
 26553  013C0A  0EFF               	movlw	255
 26554  013C0C  20E2               	addwfc	fsr1h,w,c
 26555  013C0E  6EDA               	movwf	fsr2h,c
 26556  013C10  0E00               	movlw	0
 26557  013C12  6EDF               	movwf	indf2,c
 26558  013C14  D018               	goto	l7657
 26559  013C16                     l7655:
 26560  013C16  0E00               	movlw	0
 26561  013C18  6E09               	movwf	(btemp+8)^0,c
 26562  013C1A  0E00               	movlw	0
 26563  013C1C  6E0A               	movwf	(btemp+9)^0,c
 26564  013C1E  0E00               	movlw	0
 26565  013C20  6E0B               	movwf	(btemp+10)^0,c
 26566  013C22  0E00               	movlw	0
 26567  013C24  6E0C               	movwf	(btemp+11)^0,c
 26568                           
 26569                           ;stkvar	_b @ sp[(-4)+-4]
 26570  013C26  0EF8               	movlw	-8
 26571  013C28  0060  F027  FFE3   	movff	btemp+8,plusw1
 26572  013C2E  0EF9               	movlw	-7
 26573  013C30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26574  013C36  0EFA               	movlw	-6
 26575  013C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26576  013C3E  0EFB               	movlw	-5
 26577  013C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 26578  013C46                     l7657:
 26579                           
 26580                           ;stkvar	_a @ sp[(-4)+-8]
 26581  013C46  0EF7               	movlw	247
 26582  013C48  24E1               	addwf	fsr1l,w,c
 26583  013C4A  6ED9               	movwf	fsr2l,c
 26584  013C4C  0EFF               	movlw	255
 26585  013C4E  20E2               	addwfc	fsr1h,w,c
 26586  013C50  6EDA               	movwf	fsr2h,c
 26587  013C52  50DF               	movf	indf2,w,c
 26588  013C54  6E0C               	movwf	(btemp+11)^0,c
 26589  013C56  0E80               	movlw	128
 26590  013C58  160C               	andwf	(btemp+11)^0,f,c
 26591                           
 26592                           ;stkvar	_aexp @ sp[(-4)+2]
 26593  013C5A  0EFE               	movlw	-2
 26594  013C5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26595                           
 26596                           ;stkvar	_signs @ sp[(-4)+3]
 26597                           ;stkvar	_aexp @ sp[(-4)+2]
 26598  013C62  50E1               	movf	fsr1l,w,c
 26599  013C64  0FFE               	addlw	-2
 26600  013C66  6ED9               	movwf	fsr2l,c
 26601  013C68  50E2               	movf	fsr1h,w,c
 26602  013C6A  6EDA               	movwf	fsr2h,c
 26603  013C6C  0EFF               	movlw	255
 26604  013C6E  22DA               	addwfc	fsr2h,f,c
 26605  013C70  0EFF               	movlw	-1
 26606  013C72  50E3               	movf	plusw1,w,c
 26607  013C74  18DE               	xorwf	postinc2,w,c
 26608  013C76  B4D8               	btfsc	status,2,c
 26609  013C78  D002               	goto	l7663
 26610                           
 26611                           ;stkvar	_signs @ sp[(-4)+3]
 26612  013C7A  0EFF               	movlw	-1
 26613  013C7C  8CE3               	bsf	plusw1,6,c
 26614  013C7E                     l7663:
 26615                           
 26616                           ;stkvar	_a @ sp[(-4)+-8]
 26617  013C7E  0EF7               	movlw	247
 26618  013C80  24E1               	addwf	fsr1l,w,c
 26619  013C82  6ED9               	movwf	fsr2l,c
 26620  013C84  0EFF               	movlw	255
 26621  013C86  20E2               	addwfc	fsr1h,w,c
 26622  013C88  6EDA               	movwf	fsr2h,c
 26623  013C8A  50DF               	movf	indf2,w,c
 26624  013C8C  6E0C               	movwf	(btemp+11)^0,c
 26625  013C8E  90D8               	bcf	status,0,c
 26626  013C90  340C               	rlcf	(btemp+11)^0,w,c
 26627  013C92  6E0B               	movwf	(btemp+10)^0,c
 26628                           
 26629                           ;stkvar	_aexp @ sp[(-4)+2]
 26630  013C94  0EFE               	movlw	-2
 26631  013C96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26632                           
 26633                           ;stkvar	_a @ sp[(-4)+-8]
 26634  013C9C  0EF6               	movlw	246
 26635  013C9E  24E1               	addwf	fsr1l,w,c
 26636  013CA0  6ED9               	movwf	fsr2l,c
 26637  013CA2  0EFF               	movlw	255
 26638  013CA4  20E2               	addwfc	fsr1h,w,c
 26639  013CA6  6EDA               	movwf	fsr2h,c
 26640  013CA8  AEDF               	btfss	indf2,7,c
 26641  013CAA  D002               	goto	l7669
 26642                           
 26643                           ;stkvar	_aexp @ sp[(-4)+2]
 26644  013CAC  0EFE               	movlw	-2
 26645  013CAE  80E3               	bsf	plusw1,0,c
 26646  013CB0                     l7669:
 26647                           
 26648                           ;stkvar	_aexp @ sp[(-4)+2]
 26649  013CB0  0EFE               	movlw	-2
 26650  013CB2  50E3               	movf	plusw1,w,c
 26651  013CB4  B4D8               	btfsc	status,2,c
 26652  013CB6  D027               	goto	l7679
 26653                           
 26654                           ;stkvar	_aexp @ sp[(-4)+2]
 26655  013CB8  0EFE               	movlw	-2
 26656  013CBA  28E3               	incf	plusw1,w,c
 26657  013CBC  A4D8               	btfss	status,2,c
 26658  013CBE  D018               	goto	l7675
 26659  013CC0  0E00               	movlw	0
 26660  013CC2  6E09               	movwf	(btemp+8)^0,c
 26661  013CC4  0E00               	movlw	0
 26662  013CC6  6E0A               	movwf	(btemp+9)^0,c
 26663  013CC8  0E00               	movlw	0
 26664  013CCA  6E0B               	movwf	(btemp+10)^0,c
 26665  013CCC  0E00               	movlw	0
 26666  013CCE  6E0C               	movwf	(btemp+11)^0,c
 26667                           
 26668                           ;stkvar	_a @ sp[(-4)+-8]
 26669  013CD0  0EF4               	movlw	-12
 26670  013CD2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26671  013CD8  0EF5               	movlw	-11
 26672  013CDA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26673  013CE0  0EF6               	movlw	-10
 26674  013CE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26675  013CE8  0EF7               	movlw	-9
 26676  013CEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26677  013CF0                     l7675:
 26678                           
 26679                           ;stkvar	_a @ sp[(-4)+-8]
 26680  013CF0  0EF6               	movlw	-10
 26681  013CF2  8EE3               	bsf	plusw1,7,c
 26682                           
 26683                           ;stkvar	_a @ sp[(-4)+-8]
 26684  013CF4  0EF7               	movlw	247
 26685  013CF6  24E1               	addwf	fsr1l,w,c
 26686  013CF8  6ED9               	movwf	fsr2l,c
 26687  013CFA  0EFF               	movlw	255
 26688  013CFC  20E2               	addwfc	fsr1h,w,c
 26689  013CFE  6EDA               	movwf	fsr2h,c
 26690  013D00  0E00               	movlw	0
 26691  013D02  6EDF               	movwf	indf2,c
 26692  013D04  D018               	goto	l7681
 26693  013D06                     l7679:
 26694  013D06  0E00               	movlw	0
 26695  013D08  6E09               	movwf	(btemp+8)^0,c
 26696  013D0A  0E00               	movlw	0
 26697  013D0C  6E0A               	movwf	(btemp+9)^0,c
 26698  013D0E  0E00               	movlw	0
 26699  013D10  6E0B               	movwf	(btemp+10)^0,c
 26700  013D12  0E00               	movlw	0
 26701  013D14  6E0C               	movwf	(btemp+11)^0,c
 26702                           
 26703                           ;stkvar	_a @ sp[(-4)+-8]
 26704  013D16  0EF4               	movlw	-12
 26705  013D18  0060  F027  FFE3   	movff	btemp+8,plusw1
 26706  013D1E  0EF5               	movlw	-11
 26707  013D20  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26708  013D26  0EF6               	movlw	-10
 26709  013D28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26710  013D2E  0EF7               	movlw	-9
 26711  013D30  0060  F033  FFE3   	movff	btemp+11,plusw1
 26712  013D36                     l7681:
 26713                           
 26714                           ;stkvar	_bexp @ sp[(-4)+1]
 26715                           ;stkvar	_aexp @ sp[(-4)+2]
 26716  013D36  50E1               	movf	fsr1l,w,c
 26717  013D38  0FFE               	addlw	-2
 26718  013D3A  6ED9               	movwf	fsr2l,c
 26719  013D3C  50E2               	movf	fsr1h,w,c
 26720  013D3E  6EDA               	movwf	fsr2h,c
 26721  013D40  0EFF               	movlw	255
 26722  013D42  22DA               	addwfc	fsr2h,f,c
 26723  013D44  0EFD               	movlw	-3
 26724  013D46  50E3               	movf	plusw1,w,c
 26725  013D48  5CDE               	subwf	postinc2,w,c
 26726  013D4A  B0D8               	btfsc	status,0,c
 26727  013D4C  D0A4               	goto	l7717
 26728                           
 26729                           ;stkvar	_signs @ sp[(-4)+3]
 26730  013D4E  0EFF               	movlw	-1
 26731  013D50  ACE3               	btfss	plusw1,6,c
 26732  013D52  D002               	goto	l7687
 26733                           
 26734                           ;stkvar	_signs @ sp[(-4)+3]
 26735  013D54  0EFF               	movlw	-1
 26736  013D56  7EE3               	btg	plusw1,7,c
 26737  013D58                     l7687:
 26738                           
 26739                           ;stkvar	_bexp @ sp[(-4)+1]
 26740                           ;stkvar	_grs @ sp[(-4)+0]
 26741  013D58  0EFD               	movlw	-3
 26742  013D5A  006F FF8C  F001    	movff	plusw1,btemp
 26743  013D60  0EFC               	movlw	-4
 26744  013D62  0060  F007  FFE3   	movff	btemp,plusw1
 26745                           
 26746                           ;stkvar	_aexp @ sp[(-4)+2]
 26747                           ;stkvar	_bexp @ sp[(-4)+1]
 26748  013D68  0EFE               	movlw	-2
 26749  013D6A  006F FF8C  F001    	movff	plusw1,btemp
 26750  013D70  0EFD               	movlw	-3
 26751  013D72  0060  F007  FFE3   	movff	btemp,plusw1
 26752                           
 26753                           ;stkvar	_grs @ sp[(-4)+0]
 26754                           ;stkvar	_aexp @ sp[(-4)+2]
 26755  013D78  0EFC               	movlw	-4
 26756  013D7A  006F FF8C  F001    	movff	plusw1,btemp
 26757  013D80  0EFE               	movlw	-2
 26758  013D82  0060  F007  FFE3   	movff	btemp,plusw1
 26759                           
 26760                           ;stkvar	_b @ sp[(-4)+-4]
 26761                           ;stkvar	_grs @ sp[(-4)+0]
 26762  013D88  0EF8               	movlw	-8
 26763  013D8A  006F FF8C  F001    	movff	plusw1,btemp
 26764  013D90  0EFC               	movlw	-4
 26765  013D92  0060  F007  FFE3   	movff	btemp,plusw1
 26766                           
 26767                           ;stkvar	_a @ sp[(-4)+-8]
 26768                           ;stkvar	_b @ sp[(-4)+-4]
 26769  013D98  0EF4               	movlw	-12
 26770  013D9A  006F FF8C  F001    	movff	plusw1,btemp
 26771  013DA0  0EF8               	movlw	-8
 26772  013DA2  0060  F007  FFE3   	movff	btemp,plusw1
 26773                           
 26774                           ;stkvar	_grs @ sp[(-4)+0]
 26775                           ;stkvar	_a @ sp[(-4)+-8]
 26776  013DA8  0EFC               	movlw	-4
 26777  013DAA  006F FF8C  F001    	movff	plusw1,btemp
 26778  013DB0  0EF4               	movlw	-12
 26779  013DB2  0060  F007  FFE3   	movff	btemp,plusw1
 26780                           
 26781                           ;stkvar	_b @ sp[(-4)+-4]
 26782  013DB8  0EF9               	movlw	249
 26783  013DBA  24E1               	addwf	fsr1l,w,c
 26784  013DBC  6ED9               	movwf	fsr2l,c
 26785  013DBE  0EFF               	movlw	255
 26786  013DC0  20E2               	addwfc	fsr1h,w,c
 26787  013DC2  6EDA               	movwf	fsr2h,c
 26788  013DC4  50DF               	movf	indf2,w,c
 26789  013DC6  6E0C               	movwf	(btemp+11)^0,c
 26790                           
 26791                           ;stkvar	_grs @ sp[(-4)+0]
 26792  013DC8  0EFC               	movlw	-4
 26793  013DCA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26794                           
 26795                           ;stkvar	_a @ sp[(-4)+-8]
 26796  013DD0  0EF5               	movlw	245
 26797  013DD2  24E1               	addwf	fsr1l,w,c
 26798  013DD4  6ED9               	movwf	fsr2l,c
 26799  013DD6  0EFF               	movlw	255
 26800  013DD8  20E2               	addwfc	fsr1h,w,c
 26801  013DDA  6EDA               	movwf	fsr2h,c
 26802                           
 26803                           ;stkvar	_b @ sp[(-4)+-4]
 26804  013DDC  0EF9               	movlw	249
 26805  013DDE  24E1               	addwf	fsr1l,w,c
 26806  013DE0  6EE9               	movwf	fsr0l,c
 26807  013DE2  0EFF               	movlw	255
 26808  013DE4  20E2               	addwfc	fsr1h,w,c
 26809  013DE6  6EEA               	movwf	fsr0h,c
 26810  013DE8  006F FF7F FFEF     	movff	indf2,indf0
 26811                           
 26812                           ;stkvar	_grs @ sp[(-4)+0]
 26813                           ;stkvar	_a @ sp[(-4)+-8]
 26814  013DEE  0EF5               	movlw	245
 26815  013DF0  24E1               	addwf	fsr1l,w,c
 26816  013DF2  6ED9               	movwf	fsr2l,c
 26817  013DF4  0EFF               	movlw	255
 26818  013DF6  20E2               	addwfc	fsr1h,w,c
 26819  013DF8  6EDA               	movwf	fsr2h,c
 26820  013DFA  0EFC               	movlw	-4
 26821  013DFC  006F FF8F FFDF     	movff	plusw1,indf2
 26822                           
 26823                           ;stkvar	_b @ sp[(-4)+-4]
 26824  013E02  0EFA               	movlw	250
 26825  013E04  24E1               	addwf	fsr1l,w,c
 26826  013E06  6ED9               	movwf	fsr2l,c
 26827  013E08  0EFF               	movlw	255
 26828  013E0A  20E2               	addwfc	fsr1h,w,c
 26829  013E0C  6EDA               	movwf	fsr2h,c
 26830  013E0E  50DF               	movf	indf2,w,c
 26831  013E10  6E0C               	movwf	(btemp+11)^0,c
 26832                           
 26833                           ;stkvar	_grs @ sp[(-4)+0]
 26834  013E12  0EFC               	movlw	-4
 26835  013E14  0060  F033  FFE3   	movff	btemp+11,plusw1
 26836                           
 26837                           ;stkvar	_a @ sp[(-4)+-8]
 26838  013E1A  0EF6               	movlw	246
 26839  013E1C  24E1               	addwf	fsr1l,w,c
 26840  013E1E  6ED9               	movwf	fsr2l,c
 26841  013E20  0EFF               	movlw	255
 26842  013E22  20E2               	addwfc	fsr1h,w,c
 26843  013E24  6EDA               	movwf	fsr2h,c
 26844                           
 26845                           ;stkvar	_b @ sp[(-4)+-4]
 26846  013E26  0EFA               	movlw	250
 26847  013E28  24E1               	addwf	fsr1l,w,c
 26848  013E2A  6EE9               	movwf	fsr0l,c
 26849  013E2C  0EFF               	movlw	255
 26850  013E2E  20E2               	addwfc	fsr1h,w,c
 26851  013E30  6EEA               	movwf	fsr0h,c
 26852  013E32  006F FF7F FFEF     	movff	indf2,indf0
 26853                           
 26854                           ;stkvar	_grs @ sp[(-4)+0]
 26855                           ;stkvar	_a @ sp[(-4)+-8]
 26856  013E38  0EF6               	movlw	246
 26857  013E3A  24E1               	addwf	fsr1l,w,c
 26858  013E3C  6ED9               	movwf	fsr2l,c
 26859  013E3E  0EFF               	movlw	255
 26860  013E40  20E2               	addwfc	fsr1h,w,c
 26861  013E42  6EDA               	movwf	fsr2h,c
 26862  013E44  0EFC               	movlw	-4
 26863  013E46  006F FF8F FFDF     	movff	plusw1,indf2
 26864                           
 26865                           ;stkvar	_b @ sp[(-4)+-4]
 26866  013E4C  0EFB               	movlw	251
 26867  013E4E  24E1               	addwf	fsr1l,w,c
 26868  013E50  6ED9               	movwf	fsr2l,c
 26869  013E52  0EFF               	movlw	255
 26870  013E54  20E2               	addwfc	fsr1h,w,c
 26871  013E56  6EDA               	movwf	fsr2h,c
 26872  013E58  50DF               	movf	indf2,w,c
 26873  013E5A  6E0C               	movwf	(btemp+11)^0,c
 26874                           
 26875                           ;stkvar	_grs @ sp[(-4)+0]
 26876  013E5C  0EFC               	movlw	-4
 26877  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26878                           
 26879                           ;stkvar	_a @ sp[(-4)+-8]
 26880  013E64  0EF7               	movlw	247
 26881  013E66  24E1               	addwf	fsr1l,w,c
 26882  013E68  6ED9               	movwf	fsr2l,c
 26883  013E6A  0EFF               	movlw	255
 26884  013E6C  20E2               	addwfc	fsr1h,w,c
 26885  013E6E  6EDA               	movwf	fsr2h,c
 26886                           
 26887                           ;stkvar	_b @ sp[(-4)+-4]
 26888  013E70  0EFB               	movlw	251
 26889  013E72  24E1               	addwf	fsr1l,w,c
 26890  013E74  6EE9               	movwf	fsr0l,c
 26891  013E76  0EFF               	movlw	255
 26892  013E78  20E2               	addwfc	fsr1h,w,c
 26893  013E7A  6EEA               	movwf	fsr0h,c
 26894  013E7C  006F FF7F FFEF     	movff	indf2,indf0
 26895                           
 26896                           ;stkvar	_grs @ sp[(-4)+0]
 26897                           ;stkvar	_a @ sp[(-4)+-8]
 26898  013E82  0EF7               	movlw	247
 26899  013E84  24E1               	addwf	fsr1l,w,c
 26900  013E86  6ED9               	movwf	fsr2l,c
 26901  013E88  0EFF               	movlw	255
 26902  013E8A  20E2               	addwfc	fsr1h,w,c
 26903  013E8C  6EDA               	movwf	fsr2h,c
 26904  013E8E  0EFC               	movlw	-4
 26905  013E90  006F FF8F FFDF     	movff	plusw1,indf2
 26906  013E96                     l7717:
 26907                           
 26908                           ;stkvar	_grs @ sp[(-4)+0]
 26909  013E96  0EFC               	movlw	-4
 26910  013E98  6AE3               	clrf	plusw1,c
 26911                           
 26912                           ;stkvar	_aexp @ sp[(-4)+2]
 26913  013E9A  0EFE               	movlw	-2
 26914  013E9C  50E3               	movf	plusw1,w,c
 26915  013E9E  6E0B               	movwf	(btemp+10)^0,c
 26916  013EA0  6A0C               	clrf	(btemp+11)^0,c
 26917                           
 26918                           ;stkvar	_bexp @ sp[(-4)+1]
 26919  013EA2  0EFD               	movlw	-3
 26920  013EA4  50E3               	movf	plusw1,w,c
 26921  013EA6  5E0B               	subwf	(btemp+10)^0,f,c
 26922  013EA8  0E00               	movlw	0
 26923  013EAA  5A0C               	subwfb	(btemp+11)^0,f,c
 26924  013EAC  BE0C               	btfsc	(btemp+11)^0,7,c
 26925  013EAE  D062               	goto	l7741
 26926  013EB0  500C               	movf	(btemp+11)^0,w,c
 26927  013EB2  E104               	bnz	u5520
 26928  013EB4  0E1A               	movlw	26
 26929  013EB6  5C0B               	subwf	(btemp+10)^0,w,c
 26930  013EB8  A0D8               	btfss	status,0,c
 26931  013EBA  D05C               	goto	l7741
 26932  013EBC                     u5520:
 26933                           
 26934                           ;stkvar	_b @ sp[(-4)+-4]
 26935  013EBC  0EF8               	movlw	-8
 26936  013EBE  50E3               	movf	plusw1,w,c
 26937  013EC0  E10A               	bnz	u5531
 26938  013EC2  0EF9               	movlw	-7
 26939  013EC4  50E3               	movf	plusw1,w,c
 26940  013EC6  E107               	bnz	u5531
 26941  013EC8  0EFA               	movlw	-6
 26942  013ECA  50E3               	movf	plusw1,w,c
 26943  013ECC  E104               	bnz	u5531
 26944  013ECE  0EFB               	movlw	-5
 26945  013ED0  50E3               	movf	plusw1,w,c
 26946  013ED2  B4D8               	btfsc	status,2,c
 26947  013ED4  D003               	goto	u5530
 26948  013ED6                     u5531:
 26949  013ED6  6A0C               	clrf	(btemp+11)^0,c
 26950  013ED8  2A0C               	incf	(btemp+11)^0,f,c
 26951  013EDA  D001               	goto	u5548
 26952  013EDC                     u5530:
 26953  013EDC  6A0C               	clrf	(btemp+11)^0,c
 26954  013EDE                     u5548:
 26955                           
 26956                           ;stkvar	_grs @ sp[(-4)+0]
 26957  013EDE  0EFC               	movlw	-4
 26958  013EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26959                           
 26960                           ;stkvar	_b @ sp[(-4)+-4]
 26961  013EE6  0EF8               	movlw	-8
 26962  013EE8  6AE3               	clrf	plusw1,c
 26963  013EEA  0EF9               	movlw	-7
 26964  013EEC  6AE3               	clrf	plusw1,c
 26965  013EEE  0EFA               	movlw	-6
 26966  013EF0  6AE3               	clrf	plusw1,c
 26967  013EF2  0EFB               	movlw	-5
 26968  013EF4  6AE3               	clrf	plusw1,c
 26969                           
 26970                           ;stkvar	_aexp @ sp[(-4)+2]
 26971                           ;stkvar	_bexp @ sp[(-4)+1]
 26972  013EF6  0EFE               	movlw	-2
 26973  013EF8  006F FF8C  F001    	movff	plusw1,btemp
 26974  013EFE  0EFD               	movlw	-3
 26975  013F00  0060  F007  FFE3   	movff	btemp,plusw1
 26976  013F06  D042               	goto	u5580
 26977  013F08                     l7727:
 26978                           
 26979                           ;stkvar	_grs @ sp[(-4)+0]
 26980  013F08  0EFC               	movlw	-4
 26981  013F0A  A0E3               	btfss	plusw1,0,c
 26982  013F0C  D00D               	goto	l7731
 26983                           
 26984                           ;stkvar	_grs @ sp[(-4)+0]
 26985  013F0E  0EFC               	movlw	-4
 26986  013F10  006F FF8C  F00C    	movff	plusw1,btemp+11
 26987  013F16  90D8               	bcf	status,0,c
 26988  013F18  320C               	rrcf	(btemp+11)^0,f,c
 26989  013F1A  0E01               	movlw	1
 26990  013F1C  120C               	iorwf	(btemp+11)^0,f,c
 26991                           
 26992                           ;stkvar	_grs @ sp[(-4)+0]
 26993  013F1E  0EFC               	movlw	-4
 26994  013F20  0060  F033  FFE3   	movff	btemp+11,plusw1
 26995  013F26  D009               	goto	l7733
 26996  013F28                     l7731:
 26997                           
 26998                           ;stkvar	_grs @ sp[(-4)+0]
 26999  013F28  50E1               	movf	fsr1l,w,c
 27000  013F2A  0FFC               	addlw	-4
 27001  013F2C  6ED9               	movwf	fsr2l,c
 27002  013F2E  50E2               	movf	fsr1h,w,c
 27003  013F30  6EDA               	movwf	fsr2h,c
 27004  013F32  0EFF               	movlw	255
 27005  013F34  22DA               	addwfc	fsr2h,f,c
 27006  013F36  90D8               	bcf	status,0,c
 27007  013F38  32DF               	rrcf	indf2,f,c
 27008  013F3A                     l7733:
 27009                           
 27010                           ;stkvar	_b @ sp[(-4)+-4]
 27011  013F3A  0EF8               	movlw	-8
 27012  013F3C  A0E3               	btfss	plusw1,0,c
 27013  013F3E  D002               	goto	l7737
 27014                           
 27015                           ;stkvar	_grs @ sp[(-4)+0]
 27016  013F40  0EFC               	movlw	-4
 27017  013F42  8EE3               	bsf	plusw1,7,c
 27018  013F44                     l7737:
 27019  013F44  0E01               	movlw	1
 27020  013F46  6E0C               	movwf	(btemp+11)^0,c
 27021                           
 27022                           ;stkvar	_b @ sp[(-4)+-4]
 27023  013F48  50E1               	movf	fsr1l,w,c
 27024  013F4A  0FF8               	addlw	-8
 27025  013F4C  6ED9               	movwf	fsr2l,c
 27026  013F4E  50E2               	movf	fsr1h,w,c
 27027  013F50  6EDA               	movwf	fsr2h,c
 27028  013F52  0EFF               	movlw	255
 27029  013F54  22DA               	addwfc	fsr2h,f,c
 27030  013F56  280C               	incf	(btemp+11)^0,w,c
 27031  013F58  52DE               	movf	postinc2,f,c
 27032  013F5A  D008               	goto	u5570
 27033  013F5C                     u5575:
 27034  013F5C  52DE               	movf	postinc2,f,c
 27035  013F5E  90D8               	bcf	status,0,c
 27036  013F60  BEDC               	btfsc	preinc2,7,c
 27037  013F62  80D8               	bsf	status,0,c
 27038  013F64  32DD               	rrcf	postdec2,f,c
 27039  013F66  32DD               	rrcf	postdec2,f,c
 27040  013F68  32DD               	rrcf	postdec2,f,c
 27041  013F6A  32DE               	rrcf	postinc2,f,c
 27042  013F6C                     u5570:
 27043  013F6C  2EE8               	decfsz	wreg,f,c
 27044  013F6E  D7F6               	goto	u5575
 27045                           
 27046                           ;stkvar	_bexp @ sp[(-4)+1]
 27047  013F70  0EFD               	movlw	-3
 27048  013F72  2AE3               	incf	plusw1,f,c
 27049  013F74                     l7741:
 27050                           
 27051                           ;stkvar	_aexp @ sp[(-4)+2]
 27052                           ;stkvar	_bexp @ sp[(-4)+1]
 27053  013F74  50E1               	movf	fsr1l,w,c
 27054  013F76  0FFD               	addlw	-3
 27055  013F78  6ED9               	movwf	fsr2l,c
 27056  013F7A  50E2               	movf	fsr1h,w,c
 27057  013F7C  6EDA               	movwf	fsr2h,c
 27058  013F7E  0EFF               	movlw	255
 27059  013F80  22DA               	addwfc	fsr2h,f,c
 27060  013F82  0EFE               	movlw	-2
 27061  013F84  50E3               	movf	plusw1,w,c
 27062  013F86  5CDE               	subwf	postinc2,w,c
 27063  013F88  A0D8               	btfss	status,0,c
 27064  013F8A  D7BE               	goto	l7727
 27065  013F8C                     u5580:
 27066                           
 27067                           ;stkvar	_signs @ sp[(-4)+3]
 27068  013F8C  0EFF               	movlw	-1
 27069  013F8E  BCE3               	btfsc	plusw1,6,c
 27070  013F90  D066               	goto	l7769
 27071                           
 27072                           ;stkvar	_bexp @ sp[(-4)+1]
 27073  013F92  0EFD               	movlw	-3
 27074  013F94  50E3               	movf	plusw1,w,c
 27075  013F96  B4D8               	btfsc	status,2,c
 27076  013F98  D0F2               	goto	u5680
 27077                           
 27078                           ;stkvar	_a @ sp[(-4)+-8]
 27079                           ;stkvar	_b @ sp[(-4)+-4]
 27080  013F9A  0EF8               	movlw	-8
 27081  013F9C  50E3               	movf	plusw1,w,c
 27082  013F9E  6E01               	movwf	btemp^0,c
 27083  013FA0  0EF4               	movlw	-12
 27084  013FA2  50E3               	movf	plusw1,w,c
 27085  013FA4  2601               	addwf	btemp^0,f,c
 27086  013FA6  0EF8               	movlw	-8
 27087  013FA8  0060  F007  FFE3   	movff	btemp,plusw1
 27088  013FAE  0EF9               	movlw	-7
 27089  013FB0  50E3               	movf	plusw1,w,c
 27090  013FB2  6E01               	movwf	btemp^0,c
 27091  013FB4  0EF5               	movlw	-11
 27092  013FB6  50E3               	movf	plusw1,w,c
 27093  013FB8  2201               	addwfc	btemp^0,f,c
 27094  013FBA  0EF9               	movlw	-7
 27095  013FBC  0060  F007  FFE3   	movff	btemp,plusw1
 27096  013FC2  0EFA               	movlw	-6
 27097  013FC4  50E3               	movf	plusw1,w,c
 27098  013FC6  6E01               	movwf	btemp^0,c
 27099  013FC8  0EF6               	movlw	-10
 27100  013FCA  50E3               	movf	plusw1,w,c
 27101  013FCC  2201               	addwfc	btemp^0,f,c
 27102  013FCE  0EFA               	movlw	-6
 27103  013FD0  0060  F007  FFE3   	movff	btemp,plusw1
 27104  013FD6  0EFB               	movlw	-5
 27105  013FD8  50E3               	movf	plusw1,w,c
 27106  013FDA  6E01               	movwf	btemp^0,c
 27107  013FDC  0EF7               	movlw	-9
 27108  013FDE  50E3               	movf	plusw1,w,c
 27109  013FE0  2201               	addwfc	btemp^0,f,c
 27110  013FE2  0EFB               	movlw	-5
 27111  013FE4  0060  F007  FFE3   	movff	btemp,plusw1
 27112                           
 27113                           ;stkvar	_b @ sp[(-4)+-4]
 27114  013FEA  0EFB               	movlw	-5
 27115  013FEC  A0E3               	btfss	plusw1,0,c
 27116  013FEE  D101               	goto	u5720
 27117                           
 27118                           ;stkvar	_grs @ sp[(-4)+0]
 27119  013FF0  0EFC               	movlw	-4
 27120  013FF2  A0E3               	btfss	plusw1,0,c
 27121  013FF4  D00D               	goto	l7759
 27122                           
 27123                           ;stkvar	_grs @ sp[(-4)+0]
 27124  013FF6  0EFC               	movlw	-4
 27125  013FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27126  013FFE  90D8               	bcf	status,0,c
 27127  014000  320C               	rrcf	(btemp+11)^0,f,c
 27128  014002  0E01               	movlw	1
 27129  014004  120C               	iorwf	(btemp+11)^0,f,c
 27130                           
 27131                           ;stkvar	_grs @ sp[(-4)+0]
 27132  014006  0EFC               	movlw	-4
 27133  014008  0060  F033  FFE3   	movff	btemp+11,plusw1
 27134  01400E  D009               	goto	l7761
 27135  014010                     l7759:
 27136                           
 27137                           ;stkvar	_grs @ sp[(-4)+0]
 27138  014010  50E1               	movf	fsr1l,w,c
 27139  014012  0FFC               	addlw	-4
 27140  014014  6ED9               	movwf	fsr2l,c
 27141  014016  50E2               	movf	fsr1h,w,c
 27142  014018  6EDA               	movwf	fsr2h,c
 27143  01401A  0EFF               	movlw	255
 27144  01401C  22DA               	addwfc	fsr2h,f,c
 27145  01401E  90D8               	bcf	status,0,c
 27146  014020  32DF               	rrcf	indf2,f,c
 27147  014022                     l7761:
 27148                           
 27149                           ;stkvar	_b @ sp[(-4)+-4]
 27150  014022  0EF8               	movlw	-8
 27151  014024  A0E3               	btfss	plusw1,0,c
 27152  014026  D002               	goto	l7765
 27153                           
 27154                           ;stkvar	_grs @ sp[(-4)+0]
 27155  014028  0EFC               	movlw	-4
 27156  01402A  8EE3               	bsf	plusw1,7,c
 27157  01402C                     l7765:
 27158  01402C  0E01               	movlw	1
 27159  01402E  6E0C               	movwf	(btemp+11)^0,c
 27160                           
 27161                           ;stkvar	_b @ sp[(-4)+-4]
 27162  014030  50E1               	movf	fsr1l,w,c
 27163  014032  0FF8               	addlw	-8
 27164  014034  6ED9               	movwf	fsr2l,c
 27165  014036  50E2               	movf	fsr1h,w,c
 27166  014038  6EDA               	movwf	fsr2h,c
 27167  01403A  0EFF               	movlw	255
 27168  01403C  22DA               	addwfc	fsr2h,f,c
 27169  01403E  280C               	incf	(btemp+11)^0,w,c
 27170  014040  52DE               	movf	postinc2,f,c
 27171  014042  D008               	goto	u5640
 27172  014044                     u5645:
 27173  014044  52DE               	movf	postinc2,f,c
 27174  014046  90D8               	bcf	status,0,c
 27175  014048  BEDC               	btfsc	preinc2,7,c
 27176  01404A  80D8               	bsf	status,0,c
 27177  01404C  32DD               	rrcf	postdec2,f,c
 27178  01404E  32DD               	rrcf	postdec2,f,c
 27179  014050  32DD               	rrcf	postdec2,f,c
 27180  014052  32DE               	rrcf	postinc2,f,c
 27181  014054                     u5640:
 27182  014054  2EE8               	decfsz	wreg,f,c
 27183  014056  D7F6               	goto	u5645
 27184                           
 27185                           ;stkvar	_bexp @ sp[(-4)+1]
 27186  014058  0EFD               	movlw	-3
 27187  01405A  2AE3               	incf	plusw1,f,c
 27188  01405C  D0CA               	goto	u5720
 27189  01405E                     l7769:
 27190                           
 27191                           ;stkvar	_a @ sp[(-4)+-8]
 27192                           ;stkvar	_b @ sp[(-4)+-4]
 27193  01405E  50E1               	movf	fsr1l,w,c
 27194  014060  0FF8               	addlw	-8
 27195  014062  6ED9               	movwf	fsr2l,c
 27196  014064  50E2               	movf	fsr1h,w,c
 27197  014066  6EDA               	movwf	fsr2h,c
 27198  014068  0EFF               	movlw	255
 27199  01406A  22DA               	addwfc	fsr2h,f,c
 27200  01406C  0EF4               	movlw	-12
 27201  01406E  50E3               	movf	plusw1,w,c
 27202  014070  5CDE               	subwf	postinc2,w,c
 27203  014072  0EF5               	movlw	-11
 27204  014074  50E3               	movf	plusw1,w,c
 27205  014076  58DE               	subwfb	postinc2,w,c
 27206  014078  0EF6               	movlw	-10
 27207  01407A  50E3               	movf	plusw1,w,c
 27208  01407C  58DE               	subwfb	postinc2,w,c
 27209  01407E  50DE               	movf	postinc2,w,c
 27210  014080  0A80               	xorlw	128
 27211  014082  6E01               	movwf	btemp^0,c
 27212  014084  0EF7               	movlw	-9
 27213  014086  50E3               	movf	plusw1,w,c
 27214  014088  0A80               	xorlw	128
 27215  01408A  5801               	subwfb	btemp^0,w,c
 27216  01408C  B0D8               	btfsc	status,0,c
 27217  01408E  D053               	goto	l7781
 27218                           
 27219                           ;stkvar	_b @ sp[(-4)+-4]
 27220                           ;stkvar	_a @ sp[(-4)+-8]
 27221  014090  0EF4               	movlw	-12
 27222  014092  006F FF8C  F009    	movff	plusw1,btemp+8
 27223  014098  0EF5               	movlw	-11
 27224  01409A  006F FF8C  F00A    	movff	plusw1,btemp+9
 27225  0140A0  0EF6               	movlw	-10
 27226  0140A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 27227  0140A8  0EF7               	movlw	-9
 27228  0140AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27229  0140B0  0EF8               	movlw	-8
 27230  0140B2  50E3               	movf	plusw1,w,c
 27231  0140B4  5E09               	subwf	(btemp+8)^0,f,c
 27232  0140B6  0EF9               	movlw	-7
 27233  0140B8  50E3               	movf	plusw1,w,c
 27234  0140BA  5A0A               	subwfb	(btemp+9)^0,f,c
 27235  0140BC  0EFA               	movlw	-6
 27236  0140BE  50E3               	movf	plusw1,w,c
 27237  0140C0  5A0B               	subwfb	(btemp+10)^0,f,c
 27238  0140C2  0EFB               	movlw	-5
 27239  0140C4  50E3               	movf	plusw1,w,c
 27240  0140C6  5A0C               	subwfb	(btemp+11)^0,f,c
 27241  0140C8  0EFF               	movlw	255
 27242  0140CA  2409               	addwf	(btemp+8)^0,w,c
 27243  0140CC  6E05               	movwf	(btemp+4)^0,c
 27244  0140CE  0EFF               	movlw	255
 27245  0140D0  200A               	addwfc	(btemp+9)^0,w,c
 27246  0140D2  6E06               	movwf	(btemp+5)^0,c
 27247  0140D4  0EFF               	movlw	255
 27248  0140D6  200B               	addwfc	(btemp+10)^0,w,c
 27249  0140D8  6E07               	movwf	(btemp+6)^0,c
 27250  0140DA  0EFF               	movlw	255
 27251  0140DC  200C               	addwfc	(btemp+11)^0,w,c
 27252  0140DE  6E08               	movwf	(btemp+7)^0,c
 27253                           
 27254                           ;stkvar	_b @ sp[(-4)+-4]
 27255  0140E0  0EF8               	movlw	-8
 27256  0140E2  0060  F017  FFE3   	movff	btemp+4,plusw1
 27257  0140E8  0EF9               	movlw	-7
 27258  0140EA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27259  0140F0  0EFA               	movlw	-6
 27260  0140F2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27261  0140F8  0EFB               	movlw	-5
 27262  0140FA  0060  F023  FFE3   	movff	btemp+7,plusw1
 27263                           
 27264                           ;stkvar	_signs @ sp[(-4)+3]
 27265  014100  0EFF               	movlw	-1
 27266  014102  7EE3               	btg	plusw1,7,c
 27267                           
 27268                           ;stkvar	_grs @ sp[(-4)+0]
 27269  014104  0EFC               	movlw	-4
 27270  014106  50E3               	movf	plusw1,w,c
 27271  014108  0800               	sublw	0
 27272  01410A  6E0C               	movwf	(btemp+11)^0,c
 27273                           
 27274                           ;stkvar	_grs @ sp[(-4)+0]
 27275  01410C  0EFC               	movlw	-4
 27276  01410E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27277                           
 27278                           ;stkvar	_grs @ sp[(-4)+0]
 27279  014114  0EFC               	movlw	-4
 27280  014116  50E3               	movf	plusw1,w,c
 27281  014118  A4D8               	btfss	status,2,c
 27282  01411A  D020               	goto	l7783
 27283                           
 27284                           ;stkvar	_b @ sp[(-4)+-4]
 27285  01411C  50E1               	movf	fsr1l,w,c
 27286  01411E  0FF8               	addlw	-8
 27287  014120  6ED9               	movwf	fsr2l,c
 27288  014122  50E2               	movf	fsr1h,w,c
 27289  014124  6EDA               	movwf	fsr2h,c
 27290  014126  0EFF               	movlw	255
 27291  014128  22DA               	addwfc	fsr2h,f,c
 27292  01412A  2ADE               	incf	postinc2,f,c
 27293  01412C  0E00               	movlw	0
 27294  01412E  22DE               	addwfc	postinc2,f,c
 27295  014130  22DE               	addwfc	postinc2,f,c
 27296  014132  22DE               	addwfc	postinc2,f,c
 27297  014134  D013               	goto	l7783
 27298  014136                     l7781:
 27299                           
 27300                           ;stkvar	_a @ sp[(-4)+-8]
 27301                           ;stkvar	_b @ sp[(-4)+-4]
 27302  014136  50E1               	movf	fsr1l,w,c
 27303  014138  0FF8               	addlw	-8
 27304  01413A  6ED9               	movwf	fsr2l,c
 27305  01413C  50E2               	movf	fsr1h,w,c
 27306  01413E  6EDA               	movwf	fsr2h,c
 27307  014140  0EFF               	movlw	255
 27308  014142  22DA               	addwfc	fsr2h,f,c
 27309  014144  0EF4               	movlw	-12
 27310  014146  50E3               	movf	plusw1,w,c
 27311  014148  5EDE               	subwf	postinc2,f,c
 27312  01414A  0EF5               	movlw	-11
 27313  01414C  50E3               	movf	plusw1,w,c
 27314  01414E  5ADE               	subwfb	postinc2,f,c
 27315  014150  0EF6               	movlw	-10
 27316  014152  50E3               	movf	plusw1,w,c
 27317  014154  5ADE               	subwfb	postinc2,f,c
 27318  014156  0EF7               	movlw	-9
 27319  014158  50E3               	movf	plusw1,w,c
 27320  01415A  5ADE               	subwfb	postinc2,f,c
 27321  01415C                     l7783:
 27322                           
 27323                           ;stkvar	_b @ sp[(-4)+-4]
 27324  01415C  0EF8               	movlw	-8
 27325  01415E  50E3               	movf	plusw1,w,c
 27326  014160  E145               	bnz	l7805
 27327  014162  0EF9               	movlw	-7
 27328  014164  50E3               	movf	plusw1,w,c
 27329  014166  E142               	bnz	l7805
 27330  014168  0EFA               	movlw	-6
 27331  01416A  50E3               	movf	plusw1,w,c
 27332  01416C  E13F               	bnz	l7805
 27333  01416E  0EFB               	movlw	-5
 27334  014170  50E3               	movf	plusw1,w,c
 27335  014172  A4D8               	btfss	status,2,c
 27336  014174  D03B               	goto	l7805
 27337                           
 27338                           ;stkvar	_grs @ sp[(-4)+0]
 27339  014176  0EFC               	movlw	-4
 27340  014178  50E3               	movf	plusw1,w,c
 27341  01417A  A4D8               	btfss	status,2,c
 27342  01417C  D037               	goto	l7805
 27343  01417E                     u5680:
 27344  01417E  0E00               	movlw	0
 27345  014180  6E01               	movwf	btemp^0,c
 27346  014182  0E00               	movlw	0
 27347  014184  6E02               	movwf	(btemp+1)^0,c
 27348  014186  0E00               	movlw	0
 27349  014188  6E03               	movwf	(btemp+2)^0,c
 27350  01418A  0E00               	movlw	0
 27351  01418C  6E04               	movwf	(btemp+3)^0,c
 27352  01418E  D0C6               	goto	l2937
 27353  014190                     l7791:
 27354                           
 27355                           ;stkvar	_b @ sp[(-4)+-4]
 27356  014190  90D8               	bcf	status,0,c
 27357  014192  0EF8               	movlw	-8
 27358  014194  36E3               	rlcf	plusw1,f,c
 27359  014196  0EF9               	movlw	-7
 27360  014198  36E3               	rlcf	plusw1,f,c
 27361  01419A  0EFA               	movlw	-6
 27362  01419C  36E3               	rlcf	plusw1,f,c
 27363  01419E  0EFB               	movlw	-5
 27364  0141A0  36E3               	rlcf	plusw1,f,c
 27365                           
 27366                           ;stkvar	_grs @ sp[(-4)+0]
 27367  0141A2  0EFC               	movlw	-4
 27368  0141A4  AEE3               	btfss	plusw1,7,c
 27369  0141A6  D002               	goto	l2949
 27370                           
 27371                           ;stkvar	_b @ sp[(-4)+-4]
 27372  0141A8  0EF8               	movlw	-8
 27373  0141AA  80E3               	bsf	plusw1,0,c
 27374  0141AC                     l2949:
 27375                           
 27376                           ;stkvar	_grs @ sp[(-4)+0]
 27377  0141AC  0EFC               	movlw	-4
 27378  0141AE  A0E3               	btfss	plusw1,0,c
 27379  0141B0  D00E               	goto	l7799
 27380                           
 27381                           ;stkvar	_grs @ sp[(-4)+0]
 27382  0141B2  0EFC               	movlw	-4
 27383  0141B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27384  0141BA  90D8               	bcf	status,0,c
 27385  0141BC  340C               	rlcf	(btemp+11)^0,w,c
 27386  0141BE  6E0B               	movwf	(btemp+10)^0,c
 27387  0141C0  0E01               	movlw	1
 27388  0141C2  120B               	iorwf	(btemp+10)^0,f,c
 27389                           
 27390                           ;stkvar	_grs @ sp[(-4)+0]
 27391  0141C4  0EFC               	movlw	-4
 27392  0141C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27393  0141CC  D009               	goto	l7801
 27394  0141CE                     l7799:
 27395                           
 27396                           ;stkvar	_grs @ sp[(-4)+0]
 27397  0141CE  50E1               	movf	fsr1l,w,c
 27398  0141D0  0FFC               	addlw	-4
 27399  0141D2  6ED9               	movwf	fsr2l,c
 27400  0141D4  50E2               	movf	fsr1h,w,c
 27401  0141D6  6EDA               	movwf	fsr2h,c
 27402  0141D8  0EFF               	movlw	255
 27403  0141DA  22DA               	addwfc	fsr2h,f,c
 27404  0141DC  90D8               	bcf	status,0,c
 27405  0141DE  36DF               	rlcf	indf2,f,c
 27406  0141E0                     l7801:
 27407                           
 27408                           ;stkvar	_bexp @ sp[(-4)+1]
 27409  0141E0  0EFD               	movlw	-3
 27410  0141E2  50E3               	movf	plusw1,w,c
 27411  0141E4  B4D8               	btfsc	status,2,c
 27412  0141E6  D002               	goto	l7805
 27413                           
 27414                           ;stkvar	_bexp @ sp[(-4)+1]
 27415  0141E8  0EFD               	movlw	-3
 27416  0141EA  06E3               	decf	plusw1,f,c
 27417  0141EC                     l7805:
 27418                           
 27419                           ;stkvar	_b @ sp[(-4)+-4]
 27420  0141EC  0EFA               	movlw	-6
 27421  0141EE  AEE3               	btfss	plusw1,7,c
 27422  0141F0  D7CF               	goto	l7791
 27423  0141F2                     u5720:
 27424                           
 27425                           ;stkvar	_aexp @ sp[(-4)+2]
 27426  0141F2  0EFE               	movlw	-2
 27427  0141F4  6AE3               	clrf	plusw1,c
 27428                           
 27429                           ;stkvar	_grs @ sp[(-4)+0]
 27430  0141F6  0EFC               	movlw	-4
 27431  0141F8  AEE3               	btfss	plusw1,7,c
 27432  0141FA  D00F               	goto	l7819
 27433                           
 27434                           ;stkvar	_grs @ sp[(-4)+0]
 27435  0141FC  0EFC               	movlw	-4
 27436  0141FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27437  014204  0E7F               	movlw	127
 27438  014206  160C               	andwf	(btemp+11)^0,f,c
 27439  014208  B4D8               	btfsc	status,2,c
 27440  01420A  D004               	goto	l7815
 27441  01420C                     u5740:
 27442                           
 27443                           ;stkvar	_aexp @ sp[(-4)+2]
 27444  01420C  0EFE               	movlw	-2
 27445  01420E  6AE3               	clrf	plusw1,c
 27446  014210  2AE3               	incf	plusw1,f,c
 27447  014212  D003               	goto	l7819
 27448  014214                     l7815:
 27449                           
 27450                           ;stkvar	_b @ sp[(-4)+-4]
 27451  014214  0EF8               	movlw	-8
 27452  014216  B0E3               	btfsc	plusw1,0,c
 27453  014218  D7F9               	goto	u5740
 27454  01421A                     l7819:
 27455                           
 27456                           ;stkvar	_aexp @ sp[(-4)+2]
 27457  01421A  0EFE               	movlw	-2
 27458  01421C  50E3               	movf	plusw1,w,c
 27459  01421E  B4D8               	btfsc	status,2,c
 27460  014220  D02B               	goto	l7831
 27461                           
 27462                           ;stkvar	_b @ sp[(-4)+-4]
 27463  014222  50E1               	movf	fsr1l,w,c
 27464  014224  0FF8               	addlw	-8
 27465  014226  6ED9               	movwf	fsr2l,c
 27466  014228  50E2               	movf	fsr1h,w,c
 27467  01422A  6EDA               	movwf	fsr2h,c
 27468  01422C  0EFF               	movlw	255
 27469  01422E  22DA               	addwfc	fsr2h,f,c
 27470  014230  2ADE               	incf	postinc2,f,c
 27471  014232  0E00               	movlw	0
 27472  014234  22DE               	addwfc	postinc2,f,c
 27473  014236  22DE               	addwfc	postinc2,f,c
 27474  014238  22DE               	addwfc	postinc2,f,c
 27475                           
 27476                           ;stkvar	_b @ sp[(-4)+-4]
 27477  01423A  0EFB               	movlw	-5
 27478  01423C  A0E3               	btfss	plusw1,0,c
 27479  01423E  D01C               	goto	l7831
 27480  014240  0E01               	movlw	1
 27481  014242  6E0C               	movwf	(btemp+11)^0,c
 27482                           
 27483                           ;stkvar	_b @ sp[(-4)+-4]
 27484  014244  50E1               	movf	fsr1l,w,c
 27485  014246  0FF8               	addlw	-8
 27486  014248  6ED9               	movwf	fsr2l,c
 27487  01424A  50E2               	movf	fsr1h,w,c
 27488  01424C  6EDA               	movwf	fsr2h,c
 27489  01424E  0EFF               	movlw	255
 27490  014250  22DA               	addwfc	fsr2h,f,c
 27491  014252  280C               	incf	(btemp+11)^0,w,c
 27492  014254  52DE               	movf	postinc2,f,c
 27493  014256  D008               	goto	u5780
 27494  014258                     u5785:
 27495  014258  52DE               	movf	postinc2,f,c
 27496  01425A  90D8               	bcf	status,0,c
 27497  01425C  BEDC               	btfsc	preinc2,7,c
 27498  01425E  80D8               	bsf	status,0,c
 27499  014260  32DD               	rrcf	postdec2,f,c
 27500  014262  32DD               	rrcf	postdec2,f,c
 27501  014264  32DD               	rrcf	postdec2,f,c
 27502  014266  32DE               	rrcf	postinc2,f,c
 27503  014268                     u5780:
 27504  014268  2EE8               	decfsz	wreg,f,c
 27505  01426A  D7F6               	goto	u5785
 27506                           
 27507                           ;stkvar	_bexp @ sp[(-4)+1]
 27508  01426C  0EFD               	movlw	-3
 27509  01426E  28E3               	incf	plusw1,w,c
 27510  014270  B4D8               	btfsc	status,2,c
 27511  014272  D002               	goto	l7831
 27512                           
 27513                           ;stkvar	_bexp @ sp[(-4)+1]
 27514  014274  0EFD               	movlw	-3
 27515  014276  2AE3               	incf	plusw1,f,c
 27516  014278                     l7831:
 27517                           
 27518                           ;stkvar	_bexp @ sp[(-4)+1]
 27519  014278  0EFD               	movlw	-3
 27520  01427A  28E3               	incf	plusw1,w,c
 27521  01427C  B4D8               	btfsc	status,2,c
 27522  01427E  D004               	goto	u5810
 27523                           
 27524                           ;stkvar	_bexp @ sp[(-4)+1]
 27525  014280  0EFD               	movlw	-3
 27526  014282  50E3               	movf	plusw1,w,c
 27527  014284  A4D8               	btfss	status,2,c
 27528  014286  D00E               	goto	l7841
 27529  014288                     u5810:
 27530                           
 27531                           ;stkvar	_b @ sp[(-4)+-4]
 27532  014288  0EF8               	movlw	-8
 27533  01428A  6AE3               	clrf	plusw1,c
 27534  01428C  0EF9               	movlw	-7
 27535  01428E  6AE3               	clrf	plusw1,c
 27536  014290  0EFA               	movlw	-6
 27537  014292  6AE3               	clrf	plusw1,c
 27538  014294  0EFB               	movlw	-5
 27539  014296  6AE3               	clrf	plusw1,c
 27540                           
 27541                           ;stkvar	_bexp @ sp[(-4)+1]
 27542  014298  0EFD               	movlw	-3
 27543  01429A  50E3               	movf	plusw1,w,c
 27544  01429C  A4D8               	btfss	status,2,c
 27545  01429E  D002               	goto	l7841
 27546                           
 27547                           ;stkvar	_signs @ sp[(-4)+3]
 27548  0142A0  0EFF               	movlw	-1
 27549  0142A2  6AE3               	clrf	plusw1,c
 27550  0142A4                     l7841:
 27551                           
 27552                           ;stkvar	_bexp @ sp[(-4)+1]
 27553  0142A4  0EFD               	movlw	-3
 27554  0142A6  A0E3               	btfss	plusw1,0,c
 27555  0142A8  D009               	goto	l7845
 27556                           
 27557                           ;stkvar	_b @ sp[(-4)+-4]
 27558  0142AA  0EFA               	movlw	250
 27559  0142AC  24E1               	addwf	fsr1l,w,c
 27560  0142AE  6ED9               	movwf	fsr2l,c
 27561  0142B0  0EFF               	movlw	255
 27562  0142B2  20E2               	addwfc	fsr1h,w,c
 27563  0142B4  6EDA               	movwf	fsr2h,c
 27564  0142B6  0E00               	movlw	0
 27565  0142B8  8EDB               	bsf	plusw2,7,c
 27566  0142BA  D008               	goto	l7847
 27567  0142BC                     l7845:
 27568                           
 27569                           ;stkvar	_b @ sp[(-4)+-4]
 27570  0142BC  0EFA               	movlw	250
 27571  0142BE  24E1               	addwf	fsr1l,w,c
 27572  0142C0  6ED9               	movwf	fsr2l,c
 27573  0142C2  0EFF               	movlw	255
 27574  0142C4  20E2               	addwfc	fsr1h,w,c
 27575  0142C6  6EDA               	movwf	fsr2h,c
 27576  0142C8  0E7F               	movlw	127
 27577  0142CA  16DF               	andwf	indf2,f,c
 27578  0142CC                     l7847:
 27579                           
 27580                           ;stkvar	_b @ sp[(-4)+-4]
 27581  0142CC  0EFB               	movlw	251
 27582  0142CE  24E1               	addwf	fsr1l,w,c
 27583  0142D0  6ED9               	movwf	fsr2l,c
 27584  0142D2  0EFF               	movlw	255
 27585  0142D4  20E2               	addwfc	fsr1h,w,c
 27586  0142D6  6EDA               	movwf	fsr2h,c
 27587                           
 27588                           ;stkvar	_bexp @ sp[(-4)+1]
 27589  0142D8  0EFD               	movlw	-3
 27590  0142DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27591  0142E0  90D8               	bcf	status,0,c
 27592  0142E2  300C               	rrcf	(btemp+11)^0,w,c
 27593  0142E4  6EDF               	movwf	indf2,c
 27594                           
 27595                           ;stkvar	_signs @ sp[(-4)+3]
 27596  0142E6  0EFF               	movlw	-1
 27597  0142E8  AEE3               	btfss	plusw1,7,c
 27598  0142EA  D008               	goto	l7853
 27599                           
 27600                           ;stkvar	_b @ sp[(-4)+-4]
 27601  0142EC  0EFB               	movlw	251
 27602  0142EE  24E1               	addwf	fsr1l,w,c
 27603  0142F0  6ED9               	movwf	fsr2l,c
 27604  0142F2  0EFF               	movlw	255
 27605  0142F4  20E2               	addwfc	fsr1h,w,c
 27606  0142F6  6EDA               	movwf	fsr2h,c
 27607  0142F8  0E00               	movlw	0
 27608  0142FA  8EDB               	bsf	plusw2,7,c
 27609  0142FC                     l7853:
 27610                           
 27611                           ;stkvar	_b @ sp[(-4)+-4]
 27612  0142FC  0EF8               	movlw	-8
 27613  0142FE  006F FF8C  F001    	movff	plusw1,btemp
 27614  014304  0EF9               	movlw	-7
 27615  014306  006F FF8C  F002    	movff	plusw1,btemp+1
 27616  01430C  0EFA               	movlw	-6
 27617  01430E  006F FF8C  F003    	movff	plusw1,btemp+2
 27618  014314  0EFB               	movlw	-5
 27619  014316  006F FF8C  F004    	movff	plusw1,btemp+3
 27620  01431C                     l2937:
 27621                           
 27622                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27623  01431C  0EF4               	movlw	244
 27624  01431E  26E1               	addwf	fsr1l,f,c
 27625  014320  0EFF               	movlw	255
 27626  014322  22E2               	addwfc	fsr1h,f,c
 27627  014324  0012               	return		;funcret
 27628  014326                     __end_of___fladd:
 27629                           	opt callstack 0
 27630                           
 27631 ;; *************** function ___flmul *****************
 27632 ;; Defined at:
 27633 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27634 ;; Parameters:    Size  Location     Type
 27635 ;;  b               4  [STACK] unsigned char 
 27636 ;;  a               4  [STACK] unsigned char 
 27637 ;; Auto vars:     Size  Location     Type
 27638 ;;  prod            4  [STACK] struct .
 27639 ;;  grs             4  [STACK] unsigned long 
 27640 ;;  temp            2  [STACK] struct .
 27641 ;;  bexp            1  [STACK] unsigned char 
 27642 ;;  aexp            1  [STACK] unsigned char 
 27643 ;;  sign            1  [STACK] unsigned char 
 27644 ;; Return value:  Size  Location     Type
 27645 ;;                  4  [STACK] unsigned char 
 27646 ;; Registers used:
 27647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27648 ;; Tracked objects:
 27649 ;;		On entry : 0/1
 27650 ;;		On exit  : 0/0
 27651 ;;		Unchanged: 0/0
 27652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27657 ;;Total ram usage:        0 bytes
 27658 ;; Hardware stack levels used:    1
 27659 ;; Hardware stack levels required when called:   15
 27660 ;; This function calls:
 27661 ;;		Nothing
 27662 ;; This function is called by:
 27663 ;;		_conv_raw_result
 27664 ;;		_lp_filter
 27665 ;;		_calc_model_data
 27666 ;;		_calc_bsoc
 27667 ;;		_init_bsoc
 27668 ;;		_efgtoa
 27669 ;; This function uses a reentrant model
 27670 ;;
 27671                           
 27672                           	psect	text106
 27673  013340                     __ptext106:
 27674                           	opt callstack 0
 27675  013340                     ___flmul:
 27676                           	opt callstack 0
 27677                           
 27678                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27679  013340  0E0D               	movlw	13
 27680  013342  26E1               	addwf	fsr1l,f,c
 27681  013344  0E00               	movlw	0
 27682  013346  22E2               	addwfc	fsr1h,f,c
 27683                           
 27684                           ;stkvar	_b @ sp[(-13)+-4]
 27685                           
 27686                           ;incstack = 0
 27687 ;; hardware stack exceeded
 27688  013348  0EF2               	movlw	242
 27689  01334A  24E1               	addwf	fsr1l,w,c
 27690  01334C  6ED9               	movwf	fsr2l,c
 27691  01334E  0EFF               	movlw	255
 27692  013350  20E2               	addwfc	fsr1h,w,c
 27693  013352  6EDA               	movwf	fsr2h,c
 27694  013354  50DF               	movf	indf2,w,c
 27695  013356  6E0C               	movwf	(btemp+11)^0,c
 27696  013358  0E80               	movlw	128
 27697  01335A  160C               	andwf	(btemp+11)^0,f,c
 27698                           
 27699                           ;stkvar	_sign @ sp[(-13)+12]
 27700  01335C  0EFF               	movlw	-1
 27701  01335E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27702                           
 27703                           ;stkvar	_b @ sp[(-13)+-4]
 27704  013364  0EF2               	movlw	242
 27705  013366  24E1               	addwf	fsr1l,w,c
 27706  013368  6ED9               	movwf	fsr2l,c
 27707  01336A  0EFF               	movlw	255
 27708  01336C  20E2               	addwfc	fsr1h,w,c
 27709  01336E  6EDA               	movwf	fsr2h,c
 27710  013370  50DF               	movf	indf2,w,c
 27711  013372  6E0C               	movwf	(btemp+11)^0,c
 27712  013374  90D8               	bcf	status,0,c
 27713  013376  340C               	rlcf	(btemp+11)^0,w,c
 27714  013378  6E0B               	movwf	(btemp+10)^0,c
 27715                           
 27716                           ;stkvar	_bexp @ sp[(-13)+10]
 27717  01337A  0EFD               	movlw	-3
 27718  01337C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27719                           
 27720                           ;stkvar	_b @ sp[(-13)+-4]
 27721  013382  0EF1               	movlw	241
 27722  013384  24E1               	addwf	fsr1l,w,c
 27723  013386  6ED9               	movwf	fsr2l,c
 27724  013388  0EFF               	movlw	255
 27725  01338A  20E2               	addwfc	fsr1h,w,c
 27726  01338C  6EDA               	movwf	fsr2h,c
 27727  01338E  AEDF               	btfss	indf2,7,c
 27728  013390  D002               	goto	l8237
 27729                           
 27730                           ;stkvar	_bexp @ sp[(-13)+10]
 27731  013392  0EFD               	movlw	-3
 27732  013394  80E3               	bsf	plusw1,0,c
 27733  013396                     l8237:
 27734                           
 27735                           ;stkvar	_bexp @ sp[(-13)+10]
 27736  013396  0EFD               	movlw	-3
 27737  013398  50E3               	movf	plusw1,w,c
 27738  01339A  B4D8               	btfsc	status,2,c
 27739  01339C  D01F               	goto	l8245
 27740                           
 27741                           ;stkvar	_bexp @ sp[(-13)+10]
 27742  01339E  0EFD               	movlw	-3
 27743  0133A0  28E3               	incf	plusw1,w,c
 27744  0133A2  A4D8               	btfss	status,2,c
 27745  0133A4  D018               	goto	l8243
 27746  0133A6  0E00               	movlw	0
 27747  0133A8  6E09               	movwf	(btemp+8)^0,c
 27748  0133AA  0E00               	movlw	0
 27749  0133AC  6E0A               	movwf	(btemp+9)^0,c
 27750  0133AE  0E00               	movlw	0
 27751  0133B0  6E0B               	movwf	(btemp+10)^0,c
 27752  0133B2  0E00               	movlw	0
 27753  0133B4  6E0C               	movwf	(btemp+11)^0,c
 27754                           
 27755                           ;stkvar	_b @ sp[(-13)+-4]
 27756  0133B6  0EEF               	movlw	-17
 27757  0133B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27758  0133BE  0EF0               	movlw	-16
 27759  0133C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27760  0133C6  0EF1               	movlw	-15
 27761  0133C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27762  0133CE  0EF2               	movlw	-14
 27763  0133D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27764  0133D6                     l8243:
 27765                           
 27766                           ;stkvar	_b @ sp[(-13)+-4]
 27767  0133D6  0EF1               	movlw	-15
 27768  0133D8  8EE3               	bsf	plusw1,7,c
 27769  0133DA  D018               	goto	l8247
 27770  0133DC                     l8245:
 27771  0133DC  0E00               	movlw	0
 27772  0133DE  6E09               	movwf	(btemp+8)^0,c
 27773  0133E0  0E00               	movlw	0
 27774  0133E2  6E0A               	movwf	(btemp+9)^0,c
 27775  0133E4  0E00               	movlw	0
 27776  0133E6  6E0B               	movwf	(btemp+10)^0,c
 27777  0133E8  0E00               	movlw	0
 27778  0133EA  6E0C               	movwf	(btemp+11)^0,c
 27779                           
 27780                           ;stkvar	_b @ sp[(-13)+-4]
 27781  0133EC  0EEF               	movlw	-17
 27782  0133EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27783  0133F4  0EF0               	movlw	-16
 27784  0133F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27785  0133FC  0EF1               	movlw	-15
 27786  0133FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27787  013404  0EF2               	movlw	-14
 27788  013406  0060  F033  FFE3   	movff	btemp+11,plusw1
 27789  01340C                     l8247:
 27790                           
 27791                           ;stkvar	_a @ sp[(-13)+-8]
 27792  01340C  0EEE               	movlw	238
 27793  01340E  24E1               	addwf	fsr1l,w,c
 27794  013410  6ED9               	movwf	fsr2l,c
 27795  013412  0EFF               	movlw	255
 27796  013414  20E2               	addwfc	fsr1h,w,c
 27797  013416  6EDA               	movwf	fsr2h,c
 27798  013418  50DF               	movf	indf2,w,c
 27799  01341A  6E0C               	movwf	(btemp+11)^0,c
 27800  01341C  0E80               	movlw	128
 27801  01341E  160C               	andwf	(btemp+11)^0,f,c
 27802                           
 27803                           ;stkvar	_sign @ sp[(-13)+12]
 27804  013420  50E1               	movf	fsr1l,w,c
 27805  013422  0FFF               	addlw	-1
 27806  013424  6ED9               	movwf	fsr2l,c
 27807  013426  50E2               	movf	fsr1h,w,c
 27808  013428  6EDA               	movwf	fsr2h,c
 27809  01342A  0EFF               	movlw	255
 27810  01342C  22DA               	addwfc	fsr2h,f,c
 27811  01342E  500C               	movf	(btemp+11)^0,w,c
 27812  013430  1ADF               	xorwf	indf2,f,c
 27813                           
 27814                           ;stkvar	_a @ sp[(-13)+-8]
 27815  013432  0EEE               	movlw	238
 27816  013434  24E1               	addwf	fsr1l,w,c
 27817  013436  6ED9               	movwf	fsr2l,c
 27818  013438  0EFF               	movlw	255
 27819  01343A  20E2               	addwfc	fsr1h,w,c
 27820  01343C  6EDA               	movwf	fsr2h,c
 27821  01343E  50DF               	movf	indf2,w,c
 27822  013440  6E0C               	movwf	(btemp+11)^0,c
 27823  013442  90D8               	bcf	status,0,c
 27824  013444  340C               	rlcf	(btemp+11)^0,w,c
 27825  013446  6E0B               	movwf	(btemp+10)^0,c
 27826                           
 27827                           ;stkvar	_aexp @ sp[(-13)+11]
 27828  013448  0EFE               	movlw	-2
 27829  01344A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27830                           
 27831                           ;stkvar	_a @ sp[(-13)+-8]
 27832  013450  0EED               	movlw	237
 27833  013452  24E1               	addwf	fsr1l,w,c
 27834  013454  6ED9               	movwf	fsr2l,c
 27835  013456  0EFF               	movlw	255
 27836  013458  20E2               	addwfc	fsr1h,w,c
 27837  01345A  6EDA               	movwf	fsr2h,c
 27838  01345C  AEDF               	btfss	indf2,7,c
 27839  01345E  D002               	goto	l8255
 27840                           
 27841                           ;stkvar	_aexp @ sp[(-13)+11]
 27842  013460  0EFE               	movlw	-2
 27843  013462  80E3               	bsf	plusw1,0,c
 27844  013464                     l8255:
 27845                           
 27846                           ;stkvar	_aexp @ sp[(-13)+11]
 27847  013464  0EFE               	movlw	-2
 27848  013466  50E3               	movf	plusw1,w,c
 27849  013468  B4D8               	btfsc	status,2,c
 27850  01346A  D01F               	goto	l8263
 27851                           
 27852                           ;stkvar	_aexp @ sp[(-13)+11]
 27853  01346C  0EFE               	movlw	-2
 27854  01346E  28E3               	incf	plusw1,w,c
 27855  013470  A4D8               	btfss	status,2,c
 27856  013472  D018               	goto	l8261
 27857  013474  0E00               	movlw	0
 27858  013476  6E09               	movwf	(btemp+8)^0,c
 27859  013478  0E00               	movlw	0
 27860  01347A  6E0A               	movwf	(btemp+9)^0,c
 27861  01347C  0E00               	movlw	0
 27862  01347E  6E0B               	movwf	(btemp+10)^0,c
 27863  013480  0E00               	movlw	0
 27864  013482  6E0C               	movwf	(btemp+11)^0,c
 27865                           
 27866                           ;stkvar	_a @ sp[(-13)+-8]
 27867  013484  0EEB               	movlw	-21
 27868  013486  0060  F027  FFE3   	movff	btemp+8,plusw1
 27869  01348C  0EEC               	movlw	-20
 27870  01348E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27871  013494  0EED               	movlw	-19
 27872  013496  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27873  01349C  0EEE               	movlw	-18
 27874  01349E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27875  0134A4                     l8261:
 27876                           
 27877                           ;stkvar	_a @ sp[(-13)+-8]
 27878  0134A4  0EED               	movlw	-19
 27879  0134A6  8EE3               	bsf	plusw1,7,c
 27880  0134A8  D018               	goto	l8265
 27881  0134AA                     l8263:
 27882  0134AA  0E00               	movlw	0
 27883  0134AC  6E09               	movwf	(btemp+8)^0,c
 27884  0134AE  0E00               	movlw	0
 27885  0134B0  6E0A               	movwf	(btemp+9)^0,c
 27886  0134B2  0E00               	movlw	0
 27887  0134B4  6E0B               	movwf	(btemp+10)^0,c
 27888  0134B6  0E00               	movlw	0
 27889  0134B8  6E0C               	movwf	(btemp+11)^0,c
 27890                           
 27891                           ;stkvar	_a @ sp[(-13)+-8]
 27892  0134BA  0EEB               	movlw	-21
 27893  0134BC  0060  F027  FFE3   	movff	btemp+8,plusw1
 27894  0134C2  0EEC               	movlw	-20
 27895  0134C4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27896  0134CA  0EED               	movlw	-19
 27897  0134CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27898  0134D2  0EEE               	movlw	-18
 27899  0134D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27900  0134DA                     l8265:
 27901                           
 27902                           ;stkvar	_aexp @ sp[(-13)+11]
 27903  0134DA  0EFE               	movlw	-2
 27904  0134DC  50E3               	movf	plusw1,w,c
 27905  0134DE  B4D8               	btfsc	status,2,c
 27906  0134E0  D004               	goto	u6750
 27907                           
 27908                           ;stkvar	_bexp @ sp[(-13)+10]
 27909  0134E2  0EFD               	movlw	-3
 27910  0134E4  50E3               	movf	plusw1,w,c
 27911  0134E6  A4D8               	btfss	status,2,c
 27912  0134E8  D009               	goto	l8273
 27913  0134EA                     u6750:
 27914  0134EA  0E00               	movlw	0
 27915  0134EC  6E01               	movwf	btemp^0,c
 27916  0134EE  0E00               	movlw	0
 27917  0134F0  6E02               	movwf	(btemp+1)^0,c
 27918  0134F2  0E00               	movlw	0
 27919  0134F4  6E03               	movwf	(btemp+2)^0,c
 27920  0134F6  0E00               	movlw	0
 27921  0134F8  6E04               	movwf	(btemp+3)^0,c
 27922  0134FA  D332               	goto	l3018
 27923  0134FC                     l8273:
 27924                           
 27925                           ;stkvar	_b @ sp[(-13)+-4]
 27926  0134FC  0EEF               	movlw	-17
 27927  0134FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27928                           
 27929                           ;stkvar	_a @ sp[(-13)+-8]
 27930  013504  0EED               	movlw	237
 27931  013506  24E1               	addwf	fsr1l,w,c
 27932  013508  6ED9               	movwf	fsr2l,c
 27933  01350A  0EFF               	movlw	255
 27934  01350C  20E2               	addwfc	fsr1h,w,c
 27935  01350E  6EDA               	movwf	fsr2h,c
 27936  013510  50DF               	movf	indf2,w,c
 27937  013512  020C               	mulwf	(btemp+11)^0,c
 27938                           
 27939                           ;stkvar	_temp @ sp[(-13)+8]
 27940  013514  0EFB               	movlw	-5
 27941  013516  006F FFCF FFE3     	movff	prodl,plusw1
 27942  01351C  0EFC               	movlw	-4
 27943  01351E  006F FFD3 FFE3     	movff	prodh,plusw1
 27944                           
 27945                           ;stkvar	_temp @ sp[(-13)+8]
 27946  013524  0EFB               	movlw	-5
 27947  013526  006F FF8C  F00C    	movff	plusw1,btemp+11
 27948  01352C  0060  F030  F005   	movff	btemp+11,btemp+4
 27949  013532  6A06               	clrf	(btemp+5)^0,c
 27950  013534  6A07               	clrf	(btemp+6)^0,c
 27951  013536  6A08               	clrf	(btemp+7)^0,c
 27952                           
 27953                           ;stkvar	_grs @ sp[(-13)+4]
 27954  013538  0EF7               	movlw	-9
 27955  01353A  0060  F017  FFE3   	movff	btemp+4,plusw1
 27956  013540  0EF8               	movlw	-8
 27957  013542  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27958  013548  0EF9               	movlw	-7
 27959  01354A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27960  013550  0EFA               	movlw	-6
 27961  013552  0060  F023  FFE3   	movff	btemp+7,plusw1
 27962                           
 27963                           ;stkvar	_temp @ sp[(-13)+8]
 27964  013558  0EFC               	movlw	252
 27965  01355A  24E1               	addwf	fsr1l,w,c
 27966  01355C  6ED9               	movwf	fsr2l,c
 27967  01355E  0EFF               	movlw	255
 27968  013560  20E2               	addwfc	fsr1h,w,c
 27969  013562  6EDA               	movwf	fsr2h,c
 27970  013564  50DF               	movf	indf2,w,c
 27971  013566  6E0C               	movwf	(btemp+11)^0,c
 27972  013568  0060  F030  F005   	movff	btemp+11,btemp+4
 27973  01356E  6A06               	clrf	(btemp+5)^0,c
 27974  013570  6A07               	clrf	(btemp+6)^0,c
 27975  013572  6A08               	clrf	(btemp+7)^0,c
 27976                           
 27977                           ;stkvar	_prod @ sp[(-13)+0]
 27978  013574  0EF3               	movlw	-13
 27979  013576  0060  F017  FFE3   	movff	btemp+4,plusw1
 27980  01357C  0EF4               	movlw	-12
 27981  01357E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27982  013584  0EF5               	movlw	-11
 27983  013586  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27984  01358C  0EF6               	movlw	-10
 27985  01358E  0060  F023  FFE3   	movff	btemp+7,plusw1
 27986                           
 27987                           ;stkvar	_b @ sp[(-13)+-4]
 27988  013594  0EF0               	movlw	240
 27989  013596  24E1               	addwf	fsr1l,w,c
 27990  013598  6ED9               	movwf	fsr2l,c
 27991  01359A  0EFF               	movlw	255
 27992  01359C  20E2               	addwfc	fsr1h,w,c
 27993  01359E  6EDA               	movwf	fsr2h,c
 27994  0135A0  50DF               	movf	indf2,w,c
 27995  0135A2  6E0C               	movwf	(btemp+11)^0,c
 27996                           
 27997                           ;stkvar	_a @ sp[(-13)+-8]
 27998  0135A4  0EEC               	movlw	236
 27999  0135A6  24E1               	addwf	fsr1l,w,c
 28000  0135A8  6ED9               	movwf	fsr2l,c
 28001  0135AA  0EFF               	movlw	255
 28002  0135AC  20E2               	addwfc	fsr1h,w,c
 28003  0135AE  6EDA               	movwf	fsr2h,c
 28004  0135B0  50DF               	movf	indf2,w,c
 28005  0135B2  020C               	mulwf	(btemp+11)^0,c
 28006                           
 28007                           ;stkvar	_temp @ sp[(-13)+8]
 28008  0135B4  0EFB               	movlw	-5
 28009  0135B6  006F FFCF FFE3     	movff	prodl,plusw1
 28010  0135BC  0EFC               	movlw	-4
 28011  0135BE  006F FFD3 FFE3     	movff	prodh,plusw1
 28012                           
 28013                           ;stkvar	_grs @ sp[(-13)+4]
 28014  0135C4  50E1               	movf	fsr1l,w,c
 28015  0135C6  0FF7               	addlw	-9
 28016  0135C8  6ED9               	movwf	fsr2l,c
 28017  0135CA  50E2               	movf	fsr1h,w,c
 28018  0135CC  6EDA               	movwf	fsr2h,c
 28019  0135CE  0EFF               	movlw	255
 28020  0135D0  22DA               	addwfc	fsr2h,f,c
 28021                           
 28022                           ;stkvar	_temp @ sp[(-13)+8]
 28023  0135D2  0EFB               	movlw	-5
 28024  0135D4  50E3               	movf	plusw1,w,c
 28025  0135D6  26DE               	addwf	postinc2,f,c
 28026  0135D8  0E00               	movlw	0
 28027  0135DA  22DE               	addwfc	postinc2,f,c
 28028  0135DC  22DE               	addwfc	postinc2,f,c
 28029  0135DE  22DE               	addwfc	postinc2,f,c
 28030                           
 28031                           ;stkvar	_prod @ sp[(-13)+0]
 28032  0135E0  50E1               	movf	fsr1l,w,c
 28033  0135E2  0FF3               	addlw	-13
 28034  0135E4  6ED9               	movwf	fsr2l,c
 28035  0135E6  50E2               	movf	fsr1h,w,c
 28036  0135E8  6EDA               	movwf	fsr2h,c
 28037  0135EA  0EFF               	movlw	255
 28038  0135EC  22DA               	addwfc	fsr2h,f,c
 28039                           
 28040                           ;stkvar	_temp @ sp[(-13)+8]
 28041  0135EE  0EFC               	movlw	252
 28042  0135F0  24E1               	addwf	fsr1l,w,c
 28043  0135F2  6EE9               	movwf	fsr0l,c
 28044  0135F4  0EFF               	movlw	255
 28045  0135F6  20E2               	addwfc	fsr1h,w,c
 28046  0135F8  6EEA               	movwf	fsr0h,c
 28047  0135FA  50EF               	movf	indf0,w,c
 28048  0135FC  26DE               	addwf	postinc2,f,c
 28049  0135FE  0E00               	movlw	0
 28050  013600  22DE               	addwfc	postinc2,f,c
 28051  013602  22DE               	addwfc	postinc2,f,c
 28052  013604  22DE               	addwfc	postinc2,f,c
 28053                           
 28054                           ;stkvar	_b @ sp[(-13)+-4]
 28055  013606  0EF1               	movlw	241
 28056  013608  24E1               	addwf	fsr1l,w,c
 28057  01360A  6ED9               	movwf	fsr2l,c
 28058  01360C  0EFF               	movlw	255
 28059  01360E  20E2               	addwfc	fsr1h,w,c
 28060  013610  6EDA               	movwf	fsr2h,c
 28061  013612  50DF               	movf	indf2,w,c
 28062  013614  6E0C               	movwf	(btemp+11)^0,c
 28063                           
 28064                           ;stkvar	_a @ sp[(-13)+-8]
 28065  013616  0EEB               	movlw	-21
 28066  013618  50E3               	movf	plusw1,w,c
 28067  01361A  020C               	mulwf	(btemp+11)^0,c
 28068                           
 28069                           ;stkvar	_temp @ sp[(-13)+8]
 28070  01361C  0EFB               	movlw	-5
 28071  01361E  006F FFCF FFE3     	movff	prodl,plusw1
 28072  013624  0EFC               	movlw	-4
 28073  013626  006F FFD3 FFE3     	movff	prodh,plusw1
 28074                           
 28075                           ;stkvar	_grs @ sp[(-13)+4]
 28076  01362C  50E1               	movf	fsr1l,w,c
 28077  01362E  0FF7               	addlw	-9
 28078  013630  6ED9               	movwf	fsr2l,c
 28079  013632  50E2               	movf	fsr1h,w,c
 28080  013634  6EDA               	movwf	fsr2h,c
 28081  013636  0EFF               	movlw	255
 28082  013638  22DA               	addwfc	fsr2h,f,c
 28083                           
 28084                           ;stkvar	_temp @ sp[(-13)+8]
 28085  01363A  0EFB               	movlw	-5
 28086  01363C  50E3               	movf	plusw1,w,c
 28087  01363E  26DE               	addwf	postinc2,f,c
 28088  013640  0E00               	movlw	0
 28089  013642  22DE               	addwfc	postinc2,f,c
 28090  013644  22DE               	addwfc	postinc2,f,c
 28091  013646  22DE               	addwfc	postinc2,f,c
 28092                           
 28093                           ;stkvar	_prod @ sp[(-13)+0]
 28094  013648  50E1               	movf	fsr1l,w,c
 28095  01364A  0FF3               	addlw	-13
 28096  01364C  6ED9               	movwf	fsr2l,c
 28097  01364E  50E2               	movf	fsr1h,w,c
 28098  013650  6EDA               	movwf	fsr2h,c
 28099  013652  0EFF               	movlw	255
 28100  013654  22DA               	addwfc	fsr2h,f,c
 28101                           
 28102                           ;stkvar	_temp @ sp[(-13)+8]
 28103  013656  0EFC               	movlw	252
 28104  013658  24E1               	addwf	fsr1l,w,c
 28105  01365A  6EE9               	movwf	fsr0l,c
 28106  01365C  0EFF               	movlw	255
 28107  01365E  20E2               	addwfc	fsr1h,w,c
 28108  013660  6EEA               	movwf	fsr0h,c
 28109  013662  50EF               	movf	indf0,w,c
 28110  013664  26DE               	addwf	postinc2,f,c
 28111  013666  0E00               	movlw	0
 28112  013668  22DE               	addwfc	postinc2,f,c
 28113  01366A  22DE               	addwfc	postinc2,f,c
 28114  01366C  22DE               	addwfc	postinc2,f,c
 28115                           
 28116                           ;stkvar	_grs @ sp[(-13)+4]
 28117  01366E  50E1               	movf	fsr1l,w,c
 28118  013670  0FF7               	addlw	-9
 28119  013672  6ED9               	movwf	fsr2l,c
 28120  013674  50E2               	movf	fsr1h,w,c
 28121  013676  6EDA               	movwf	fsr2h,c
 28122  013678  0EFF               	movlw	255
 28123  01367A  22DA               	addwfc	fsr2h,f,c
 28124  01367C  0E08               	movlw	8
 28125  01367E                     u6765:
 28126  01367E  90D8               	bcf	status,0,c
 28127  013680  36DE               	rlcf	postinc2,f,c
 28128  013682  36DE               	rlcf	postinc2,f,c
 28129  013684  36DE               	rlcf	postinc2,f,c
 28130  013686  36DD               	rlcf	postdec2,f,c
 28131  013688  52DD               	movf	postdec2,f,c
 28132  01368A  52DD               	movf	postdec2,f,c
 28133  01368C  2EE8               	decfsz	wreg,f,c
 28134  01368E  D7F7               	goto	u6765
 28135                           
 28136                           ;stkvar	_b @ sp[(-13)+-4]
 28137  013690  0EF0               	movlw	240
 28138  013692  24E1               	addwf	fsr1l,w,c
 28139  013694  6ED9               	movwf	fsr2l,c
 28140  013696  0EFF               	movlw	255
 28141  013698  20E2               	addwfc	fsr1h,w,c
 28142  01369A  6EDA               	movwf	fsr2h,c
 28143  01369C  50DF               	movf	indf2,w,c
 28144  01369E  6E0C               	movwf	(btemp+11)^0,c
 28145                           
 28146                           ;stkvar	_a @ sp[(-13)+-8]
 28147  0136A0  0EEB               	movlw	-21
 28148  0136A2  50E3               	movf	plusw1,w,c
 28149  0136A4  020C               	mulwf	(btemp+11)^0,c
 28150                           
 28151                           ;stkvar	_temp @ sp[(-13)+8]
 28152  0136A6  0EFB               	movlw	-5
 28153  0136A8  006F FFCF FFE3     	movff	prodl,plusw1
 28154  0136AE  0EFC               	movlw	-4
 28155  0136B0  006F FFD3 FFE3     	movff	prodh,plusw1
 28156                           
 28157                           ;stkvar	_temp @ sp[(-13)+8]
 28158  0136B6  0EFB               	movlw	-5
 28159  0136B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 28160  0136BE  0EFC               	movlw	-4
 28161  0136C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 28162                           
 28163                           ;stkvar	_grs @ sp[(-13)+4]
 28164  0136C6  50E1               	movf	fsr1l,w,c
 28165  0136C8  0FF7               	addlw	-9
 28166  0136CA  6ED9               	movwf	fsr2l,c
 28167  0136CC  50E2               	movf	fsr1h,w,c
 28168  0136CE  6EDA               	movwf	fsr2h,c
 28169  0136D0  0EFF               	movlw	255
 28170  0136D2  22DA               	addwfc	fsr2h,f,c
 28171  0136D4  500B               	movf	(btemp+10)^0,w,c
 28172  0136D6  26DE               	addwf	postinc2,f,c
 28173  0136D8  500C               	movf	(btemp+11)^0,w,c
 28174  0136DA  22DE               	addwfc	postinc2,f,c
 28175  0136DC  0E00               	movlw	0
 28176  0136DE  22DE               	addwfc	postinc2,f,c
 28177  0136E0  22DE               	addwfc	postinc2,f,c
 28178                           
 28179                           ;stkvar	_b @ sp[(-13)+-4]
 28180  0136E2  0EEF               	movlw	-17
 28181  0136E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28182                           
 28183                           ;stkvar	_a @ sp[(-13)+-8]
 28184  0136EA  0EEC               	movlw	236
 28185  0136EC  24E1               	addwf	fsr1l,w,c
 28186  0136EE  6ED9               	movwf	fsr2l,c
 28187  0136F0  0EFF               	movlw	255
 28188  0136F2  20E2               	addwfc	fsr1h,w,c
 28189  0136F4  6EDA               	movwf	fsr2h,c
 28190  0136F6  50DF               	movf	indf2,w,c
 28191  0136F8  020C               	mulwf	(btemp+11)^0,c
 28192                           
 28193                           ;stkvar	_temp @ sp[(-13)+8]
 28194  0136FA  0EFB               	movlw	-5
 28195  0136FC  006F FFCF FFE3     	movff	prodl,plusw1
 28196  013702  0EFC               	movlw	-4
 28197  013704  006F FFD3 FFE3     	movff	prodh,plusw1
 28198                           
 28199                           ;stkvar	_temp @ sp[(-13)+8]
 28200  01370A  0EFB               	movlw	-5
 28201  01370C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28202  013712  0EFC               	movlw	-4
 28203  013714  006F FF8C  F00C    	movff	plusw1,btemp+11
 28204                           
 28205                           ;stkvar	_grs @ sp[(-13)+4]
 28206  01371A  50E1               	movf	fsr1l,w,c
 28207  01371C  0FF7               	addlw	-9
 28208  01371E  6ED9               	movwf	fsr2l,c
 28209  013720  50E2               	movf	fsr1h,w,c
 28210  013722  6EDA               	movwf	fsr2h,c
 28211  013724  0EFF               	movlw	255
 28212  013726  22DA               	addwfc	fsr2h,f,c
 28213  013728  500B               	movf	(btemp+10)^0,w,c
 28214  01372A  26DE               	addwf	postinc2,f,c
 28215  01372C  500C               	movf	(btemp+11)^0,w,c
 28216  01372E  22DE               	addwfc	postinc2,f,c
 28217  013730  0E00               	movlw	0
 28218  013732  22DE               	addwfc	postinc2,f,c
 28219  013734  22DE               	addwfc	postinc2,f,c
 28220                           
 28221                           ;stkvar	_grs @ sp[(-13)+4]
 28222  013736  50E1               	movf	fsr1l,w,c
 28223  013738  0FF7               	addlw	-9
 28224  01373A  6ED9               	movwf	fsr2l,c
 28225  01373C  50E2               	movf	fsr1h,w,c
 28226  01373E  6EDA               	movwf	fsr2h,c
 28227  013740  0EFF               	movlw	255
 28228  013742  22DA               	addwfc	fsr2h,f,c
 28229  013744  0E08               	movlw	8
 28230  013746                     u6775:
 28231  013746  90D8               	bcf	status,0,c
 28232  013748  36DE               	rlcf	postinc2,f,c
 28233  01374A  36DE               	rlcf	postinc2,f,c
 28234  01374C  36DE               	rlcf	postinc2,f,c
 28235  01374E  36DD               	rlcf	postdec2,f,c
 28236  013750  52DD               	movf	postdec2,f,c
 28237  013752  52DD               	movf	postdec2,f,c
 28238  013754  2EE8               	decfsz	wreg,f,c
 28239  013756  D7F7               	goto	u6775
 28240                           
 28241                           ;stkvar	_b @ sp[(-13)+-4]
 28242  013758  0EEF               	movlw	-17
 28243  01375A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28244                           
 28245                           ;stkvar	_a @ sp[(-13)+-8]
 28246  013760  0EEB               	movlw	-21
 28247  013762  50E3               	movf	plusw1,w,c
 28248  013764  020C               	mulwf	(btemp+11)^0,c
 28249                           
 28250                           ;stkvar	_temp @ sp[(-13)+8]
 28251  013766  0EFB               	movlw	-5
 28252  013768  006F FFCF FFE3     	movff	prodl,plusw1
 28253  01376E  0EFC               	movlw	-4
 28254  013770  006F FFD3 FFE3     	movff	prodh,plusw1
 28255                           
 28256                           ;stkvar	_temp @ sp[(-13)+8]
 28257  013776  0EFB               	movlw	-5
 28258  013778  006F FF8C  F00B    	movff	plusw1,btemp+10
 28259  01377E  0EFC               	movlw	-4
 28260  013780  006F FF8C  F00C    	movff	plusw1,btemp+11
 28261                           
 28262                           ;stkvar	_grs @ sp[(-13)+4]
 28263  013786  50E1               	movf	fsr1l,w,c
 28264  013788  0FF7               	addlw	-9
 28265  01378A  6ED9               	movwf	fsr2l,c
 28266  01378C  50E2               	movf	fsr1h,w,c
 28267  01378E  6EDA               	movwf	fsr2h,c
 28268  013790  0EFF               	movlw	255
 28269  013792  22DA               	addwfc	fsr2h,f,c
 28270  013794  500B               	movf	(btemp+10)^0,w,c
 28271  013796  26DE               	addwf	postinc2,f,c
 28272  013798  500C               	movf	(btemp+11)^0,w,c
 28273  01379A  22DE               	addwfc	postinc2,f,c
 28274  01379C  0E00               	movlw	0
 28275  01379E  22DE               	addwfc	postinc2,f,c
 28276  0137A0  22DE               	addwfc	postinc2,f,c
 28277                           
 28278                           ;stkvar	_b @ sp[(-13)+-4]
 28279  0137A2  0EF0               	movlw	240
 28280  0137A4  24E1               	addwf	fsr1l,w,c
 28281  0137A6  6ED9               	movwf	fsr2l,c
 28282  0137A8  0EFF               	movlw	255
 28283  0137AA  20E2               	addwfc	fsr1h,w,c
 28284  0137AC  6EDA               	movwf	fsr2h,c
 28285  0137AE  50DF               	movf	indf2,w,c
 28286  0137B0  6E0C               	movwf	(btemp+11)^0,c
 28287                           
 28288                           ;stkvar	_a @ sp[(-13)+-8]
 28289  0137B2  0EED               	movlw	237
 28290  0137B4  24E1               	addwf	fsr1l,w,c
 28291  0137B6  6ED9               	movwf	fsr2l,c
 28292  0137B8  0EFF               	movlw	255
 28293  0137BA  20E2               	addwfc	fsr1h,w,c
 28294  0137BC  6EDA               	movwf	fsr2h,c
 28295  0137BE  50DF               	movf	indf2,w,c
 28296  0137C0  020C               	mulwf	(btemp+11)^0,c
 28297                           
 28298                           ;stkvar	_temp @ sp[(-13)+8]
 28299  0137C2  0EFB               	movlw	-5
 28300  0137C4  006F FFCF FFE3     	movff	prodl,plusw1
 28301  0137CA  0EFC               	movlw	-4
 28302  0137CC  006F FFD3 FFE3     	movff	prodh,plusw1
 28303                           
 28304                           ;stkvar	_temp @ sp[(-13)+8]
 28305  0137D2  0EFB               	movlw	-5
 28306  0137D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 28307  0137DA  0EFC               	movlw	-4
 28308  0137DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28309                           
 28310                           ;stkvar	_prod @ sp[(-13)+0]
 28311  0137E2  50E1               	movf	fsr1l,w,c
 28312  0137E4  0FF3               	addlw	-13
 28313  0137E6  6ED9               	movwf	fsr2l,c
 28314  0137E8  50E2               	movf	fsr1h,w,c
 28315  0137EA  6EDA               	movwf	fsr2h,c
 28316  0137EC  0EFF               	movlw	255
 28317  0137EE  22DA               	addwfc	fsr2h,f,c
 28318  0137F0  500B               	movf	(btemp+10)^0,w,c
 28319  0137F2  26DE               	addwf	postinc2,f,c
 28320  0137F4  500C               	movf	(btemp+11)^0,w,c
 28321  0137F6  22DE               	addwfc	postinc2,f,c
 28322  0137F8  0E00               	movlw	0
 28323  0137FA  22DE               	addwfc	postinc2,f,c
 28324  0137FC  22DE               	addwfc	postinc2,f,c
 28325                           
 28326                           ;stkvar	_b @ sp[(-13)+-4]
 28327  0137FE  0EF1               	movlw	241
 28328  013800  24E1               	addwf	fsr1l,w,c
 28329  013802  6ED9               	movwf	fsr2l,c
 28330  013804  0EFF               	movlw	255
 28331  013806  20E2               	addwfc	fsr1h,w,c
 28332  013808  6EDA               	movwf	fsr2h,c
 28333  01380A  50DF               	movf	indf2,w,c
 28334  01380C  6E0C               	movwf	(btemp+11)^0,c
 28335                           
 28336                           ;stkvar	_a @ sp[(-13)+-8]
 28337  01380E  0EEC               	movlw	236
 28338  013810  24E1               	addwf	fsr1l,w,c
 28339  013812  6ED9               	movwf	fsr2l,c
 28340  013814  0EFF               	movlw	255
 28341  013816  20E2               	addwfc	fsr1h,w,c
 28342  013818  6EDA               	movwf	fsr2h,c
 28343  01381A  50DF               	movf	indf2,w,c
 28344  01381C  020C               	mulwf	(btemp+11)^0,c
 28345                           
 28346                           ;stkvar	_temp @ sp[(-13)+8]
 28347  01381E  0EFB               	movlw	-5
 28348  013820  006F FFCF FFE3     	movff	prodl,plusw1
 28349  013826  0EFC               	movlw	-4
 28350  013828  006F FFD3 FFE3     	movff	prodh,plusw1
 28351                           
 28352                           ;stkvar	_temp @ sp[(-13)+8]
 28353  01382E  0EFB               	movlw	-5
 28354  013830  006F FF8C  F00B    	movff	plusw1,btemp+10
 28355  013836  0EFC               	movlw	-4
 28356  013838  006F FF8C  F00C    	movff	plusw1,btemp+11
 28357                           
 28358                           ;stkvar	_prod @ sp[(-13)+0]
 28359  01383E  50E1               	movf	fsr1l,w,c
 28360  013840  0FF3               	addlw	-13
 28361  013842  6ED9               	movwf	fsr2l,c
 28362  013844  50E2               	movf	fsr1h,w,c
 28363  013846  6EDA               	movwf	fsr2h,c
 28364  013848  0EFF               	movlw	255
 28365  01384A  22DA               	addwfc	fsr2h,f,c
 28366  01384C  500B               	movf	(btemp+10)^0,w,c
 28367  01384E  26DE               	addwf	postinc2,f,c
 28368  013850  500C               	movf	(btemp+11)^0,w,c
 28369  013852  22DE               	addwfc	postinc2,f,c
 28370  013854  0E00               	movlw	0
 28371  013856  22DE               	addwfc	postinc2,f,c
 28372  013858  22DE               	addwfc	postinc2,f,c
 28373                           
 28374                           ;stkvar	_b @ sp[(-13)+-4]
 28375  01385A  0EF1               	movlw	241
 28376  01385C  24E1               	addwf	fsr1l,w,c
 28377  01385E  6ED9               	movwf	fsr2l,c
 28378  013860  0EFF               	movlw	255
 28379  013862  20E2               	addwfc	fsr1h,w,c
 28380  013864  6EDA               	movwf	fsr2h,c
 28381  013866  50DF               	movf	indf2,w,c
 28382  013868  6E0C               	movwf	(btemp+11)^0,c
 28383                           
 28384                           ;stkvar	_a @ sp[(-13)+-8]
 28385  01386A  0EED               	movlw	237
 28386  01386C  24E1               	addwf	fsr1l,w,c
 28387  01386E  6ED9               	movwf	fsr2l,c
 28388  013870  0EFF               	movlw	255
 28389  013872  20E2               	addwfc	fsr1h,w,c
 28390  013874  6EDA               	movwf	fsr2h,c
 28391  013876  50DF               	movf	indf2,w,c
 28392  013878  020C               	mulwf	(btemp+11)^0,c
 28393                           
 28394                           ;stkvar	_temp @ sp[(-13)+8]
 28395  01387A  0EFB               	movlw	-5
 28396  01387C  006F FFCF FFE3     	movff	prodl,plusw1
 28397  013882  0EFC               	movlw	-4
 28398  013884  006F FFD3 FFE3     	movff	prodh,plusw1
 28399                           
 28400                           ;stkvar	_temp @ sp[(-13)+8]
 28401  01388A  0EFB               	movlw	-5
 28402  01388C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28403  013892  0EFC               	movlw	-4
 28404  013894  006F FF8C  F00C    	movff	plusw1,btemp+11
 28405  01389A  500B               	movf	(btemp+10)^0,w,c
 28406  01389C  6E05               	movwf	(btemp+4)^0,c
 28407  01389E  500C               	movf	(btemp+11)^0,w,c
 28408  0138A0  6E06               	movwf	(btemp+5)^0,c
 28409  0138A2  6A07               	clrf	(btemp+6)^0,c
 28410  0138A4  6A08               	clrf	(btemp+7)^0,c
 28411  0138A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 28412  0138AC  0060  F018  F007   	movff	btemp+5,btemp+6
 28413  0138B2  0060  F014  F006   	movff	btemp+4,btemp+5
 28414  0138B8  6A05               	clrf	(btemp+4)^0,c
 28415                           
 28416                           ;stkvar	_prod @ sp[(-13)+0]
 28417  0138BA  50E1               	movf	fsr1l,w,c
 28418  0138BC  0FF3               	addlw	-13
 28419  0138BE  6ED9               	movwf	fsr2l,c
 28420  0138C0  50E2               	movf	fsr1h,w,c
 28421  0138C2  6EDA               	movwf	fsr2h,c
 28422  0138C4  0EFF               	movlw	255
 28423  0138C6  22DA               	addwfc	fsr2h,f,c
 28424  0138C8  5005               	movf	(btemp+4)^0,w,c
 28425  0138CA  26DE               	addwf	postinc2,f,c
 28426  0138CC  5006               	movf	(btemp+5)^0,w,c
 28427  0138CE  22DE               	addwfc	postinc2,f,c
 28428  0138D0  5007               	movf	(btemp+6)^0,w,c
 28429  0138D2  22DE               	addwfc	postinc2,f,c
 28430  0138D4  5008               	movf	(btemp+7)^0,w,c
 28431  0138D6  22DE               	addwfc	postinc2,f,c
 28432                           
 28433                           ;stkvar	_prod @ sp[(-13)+0]
 28434  0138D8  50E1               	movf	fsr1l,w,c
 28435  0138DA  0FF3               	addlw	-13
 28436  0138DC  6ED9               	movwf	fsr2l,c
 28437  0138DE  50E2               	movf	fsr1h,w,c
 28438  0138E0  6EDA               	movwf	fsr2h,c
 28439  0138E2  0EFF               	movlw	255
 28440  0138E4  22DA               	addwfc	fsr2h,f,c
 28441                           
 28442                           ;stkvar	_grs @ sp[(-13)+4]
 28443  0138E6  0EFA               	movlw	250
 28444  0138E8  24E1               	addwf	fsr1l,w,c
 28445  0138EA  6EE9               	movwf	fsr0l,c
 28446  0138EC  0EFF               	movlw	255
 28447  0138EE  20E2               	addwfc	fsr1h,w,c
 28448  0138F0  6EEA               	movwf	fsr0h,c
 28449  0138F2  50EF               	movf	indf0,w,c
 28450  0138F4  26DE               	addwf	postinc2,f,c
 28451  0138F6  0E00               	movlw	0
 28452  0138F8  22DE               	addwfc	postinc2,f,c
 28453  0138FA  22DE               	addwfc	postinc2,f,c
 28454  0138FC  22DE               	addwfc	postinc2,f,c
 28455                           
 28456                           ;stkvar	_grs @ sp[(-13)+4]
 28457  0138FE  50E1               	movf	fsr1l,w,c
 28458  013900  0FF7               	addlw	-9
 28459  013902  6ED9               	movwf	fsr2l,c
 28460  013904  50E2               	movf	fsr1h,w,c
 28461  013906  6EDA               	movwf	fsr2h,c
 28462  013908  0EFF               	movlw	255
 28463  01390A  22DA               	addwfc	fsr2h,f,c
 28464  01390C  0E08               	movlw	8
 28465  01390E                     u6785:
 28466  01390E  90D8               	bcf	status,0,c
 28467  013910  36DE               	rlcf	postinc2,f,c
 28468  013912  36DE               	rlcf	postinc2,f,c
 28469  013914  36DE               	rlcf	postinc2,f,c
 28470  013916  36DD               	rlcf	postdec2,f,c
 28471  013918  52DD               	movf	postdec2,f,c
 28472  01391A  52DD               	movf	postdec2,f,c
 28473  01391C  2EE8               	decfsz	wreg,f,c
 28474  01391E  D7F7               	goto	u6785
 28475  013920  0E82               	movlw	130
 28476  013922  6E0B               	movwf	(btemp+10)^0,c
 28477  013924  0EFF               	movlw	255
 28478  013926  6E0C               	movwf	(btemp+11)^0,c
 28479                           
 28480                           ;stkvar	_bexp @ sp[(-13)+10]
 28481  013928  0EFD               	movlw	-3
 28482  01392A  50E3               	movf	plusw1,w,c
 28483  01392C  6E09               	movwf	(btemp+8)^0,c
 28484  01392E  6A0A               	clrf	(btemp+9)^0,c
 28485                           
 28486                           ;stkvar	_aexp @ sp[(-13)+11]
 28487  013930  0EFE               	movlw	-2
 28488  013932  50E3               	movf	plusw1,w,c
 28489  013934  2609               	addwf	(btemp+8)^0,f,c
 28490  013936  0E00               	movlw	0
 28491  013938  220A               	addwfc	(btemp+9)^0,f,c
 28492  01393A  500B               	movf	(btemp+10)^0,w,c
 28493  01393C  2609               	addwf	(btemp+8)^0,f,c
 28494  01393E  500C               	movf	(btemp+11)^0,w,c
 28495  013940  220A               	addwfc	(btemp+9)^0,f,c
 28496                           
 28497                           ;stkvar	_temp @ sp[(-13)+8]
 28498  013942  0EFB               	movlw	-5
 28499  013944  0060  F027  FFE3   	movff	btemp+8,plusw1
 28500  01394A  0EFC               	movlw	-4
 28501  01394C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28502  013952  D021               	goto	l8335
 28503  013954                     l8325:
 28504                           
 28505                           ;stkvar	_prod @ sp[(-13)+0]
 28506  013954  90D8               	bcf	status,0,c
 28507  013956  0EF3               	movlw	-13
 28508  013958  36E3               	rlcf	plusw1,f,c
 28509  01395A  0EF4               	movlw	-12
 28510  01395C  36E3               	rlcf	plusw1,f,c
 28511  01395E  0EF5               	movlw	-11
 28512  013960  36E3               	rlcf	plusw1,f,c
 28513  013962  0EF6               	movlw	-10
 28514  013964  36E3               	rlcf	plusw1,f,c
 28515                           
 28516                           ;stkvar	_grs @ sp[(-13)+4]
 28517  013966  0EFA               	movlw	-6
 28518  013968  AEE3               	btfss	plusw1,7,c
 28519  01396A  D002               	goto	l8331
 28520                           
 28521                           ;stkvar	_prod @ sp[(-13)+0]
 28522  01396C  0EF3               	movlw	-13
 28523  01396E  80E3               	bsf	plusw1,0,c
 28524  013970                     l8331:
 28525                           
 28526                           ;stkvar	_grs @ sp[(-13)+4]
 28527  013970  90D8               	bcf	status,0,c
 28528  013972  0EF7               	movlw	-9
 28529  013974  36E3               	rlcf	plusw1,f,c
 28530  013976  0EF8               	movlw	-8
 28531  013978  36E3               	rlcf	plusw1,f,c
 28532  01397A  0EF9               	movlw	-7
 28533  01397C  36E3               	rlcf	plusw1,f,c
 28534  01397E  0EFA               	movlw	-6
 28535  013980  36E3               	rlcf	plusw1,f,c
 28536                           
 28537                           ;stkvar	_temp @ sp[(-13)+8]
 28538  013982  50E1               	movf	fsr1l,w,c
 28539  013984  0FFB               	addlw	-5
 28540  013986  6ED9               	movwf	fsr2l,c
 28541  013988  50E2               	movf	fsr1h,w,c
 28542  01398A  6EDA               	movwf	fsr2h,c
 28543  01398C  0EFF               	movlw	255
 28544  01398E  22DA               	addwfc	fsr2h,f,c
 28545  013990  06DE               	decf	postinc2,f,c
 28546  013992  0E00               	movlw	0
 28547  013994  5ADD               	subwfb	postdec2,f,c
 28548  013996                     l8335:
 28549                           
 28550                           ;stkvar	_prod @ sp[(-13)+0]
 28551  013996  0EF5               	movlw	-11
 28552  013998  AEE3               	btfss	plusw1,7,c
 28553  01399A  D7DC               	goto	l8325
 28554                           
 28555                           ;stkvar	_aexp @ sp[(-13)+11]
 28556  01399C  0EFE               	movlw	-2
 28557  01399E  6AE3               	clrf	plusw1,c
 28558                           
 28559                           ;stkvar	_grs @ sp[(-13)+4]
 28560  0139A0  0EFA               	movlw	-6
 28561  0139A2  AEE3               	btfss	plusw1,7,c
 28562  0139A4  D020               	goto	l8349
 28563                           
 28564                           ;stkvar	_grs @ sp[(-13)+4]
 28565  0139A6  50E1               	movf	fsr1l,w,c
 28566  0139A8  0FF7               	addlw	-9
 28567  0139AA  6ED9               	movwf	fsr2l,c
 28568  0139AC  50E2               	movf	fsr1h,w,c
 28569  0139AE  6EDA               	movwf	fsr2h,c
 28570  0139B0  0EFF               	movlw	255
 28571  0139B2  22DA               	addwfc	fsr2h,f,c
 28572  0139B4  0EFF               	movlw	255
 28573  0139B6  14DE               	andwf	postinc2,w,c
 28574  0139B8  6E09               	movwf	(btemp+8)^0,c
 28575  0139BA  0EFF               	movlw	255
 28576  0139BC  14DE               	andwf	postinc2,w,c
 28577  0139BE  6E0A               	movwf	(btemp+9)^0,c
 28578  0139C0  0EFF               	movlw	255
 28579  0139C2  14DE               	andwf	postinc2,w,c
 28580  0139C4  6E0B               	movwf	(btemp+10)^0,c
 28581  0139C6  0E7F               	movlw	127
 28582  0139C8  14DE               	andwf	postinc2,w,c
 28583  0139CA  6E0C               	movwf	(btemp+11)^0,c
 28584  0139CC  5009               	movf	(btemp+8)^0,w,c
 28585  0139CE  100A               	iorwf	(btemp+9)^0,w,c
 28586  0139D0  100B               	iorwf	(btemp+10)^0,w,c
 28587  0139D2  100C               	iorwf	(btemp+11)^0,w,c
 28588  0139D4  B4D8               	btfsc	status,2,c
 28589  0139D6  D004               	goto	l8345
 28590  0139D8                     u6820:
 28591                           
 28592                           ;stkvar	_aexp @ sp[(-13)+11]
 28593  0139D8  0EFE               	movlw	-2
 28594  0139DA  6AE3               	clrf	plusw1,c
 28595  0139DC  2AE3               	incf	plusw1,f,c
 28596  0139DE  D003               	goto	l8349
 28597  0139E0                     l8345:
 28598                           
 28599                           ;stkvar	_prod @ sp[(-13)+0]
 28600  0139E0  0EF3               	movlw	-13
 28601  0139E2  B0E3               	btfsc	plusw1,0,c
 28602  0139E4  D7F9               	goto	u6820
 28603  0139E6                     l8349:
 28604                           
 28605                           ;stkvar	_aexp @ sp[(-13)+11]
 28606  0139E6  0EFE               	movlw	-2
 28607  0139E8  50E3               	movf	plusw1,w,c
 28608  0139EA  B4D8               	btfsc	status,2,c
 28609  0139EC  D036               	goto	l8359
 28610                           
 28611                           ;stkvar	_prod @ sp[(-13)+0]
 28612  0139EE  50E1               	movf	fsr1l,w,c
 28613  0139F0  0FF3               	addlw	-13
 28614  0139F2  6ED9               	movwf	fsr2l,c
 28615  0139F4  50E2               	movf	fsr1h,w,c
 28616  0139F6  6EDA               	movwf	fsr2h,c
 28617  0139F8  0EFF               	movlw	255
 28618  0139FA  22DA               	addwfc	fsr2h,f,c
 28619  0139FC  2ADE               	incf	postinc2,f,c
 28620  0139FE  0E00               	movlw	0
 28621  013A00  22DE               	addwfc	postinc2,f,c
 28622  013A02  22DE               	addwfc	postinc2,f,c
 28623  013A04  22DE               	addwfc	postinc2,f,c
 28624                           
 28625                           ;stkvar	_prod @ sp[(-13)+0]
 28626  013A06  0EF6               	movlw	-10
 28627  013A08  A0E3               	btfss	plusw1,0,c
 28628  013A0A  D027               	goto	l8359
 28629  013A0C  0E01               	movlw	1
 28630  013A0E  6E0C               	movwf	(btemp+11)^0,c
 28631                           
 28632                           ;stkvar	_prod @ sp[(-13)+0]
 28633  013A10  50E1               	movf	fsr1l,w,c
 28634  013A12  0FF3               	addlw	-13
 28635  013A14  6ED9               	movwf	fsr2l,c
 28636  013A16  50E2               	movf	fsr1h,w,c
 28637  013A18  6EDA               	movwf	fsr2h,c
 28638  013A1A  0EFF               	movlw	255
 28639  013A1C  22DA               	addwfc	fsr2h,f,c
 28640  013A1E  280C               	incf	(btemp+11)^0,w,c
 28641  013A20  52DE               	movf	postinc2,f,c
 28642  013A22  D008               	goto	u6860
 28643  013A24                     u6865:
 28644  013A24  52DE               	movf	postinc2,f,c
 28645  013A26  90D8               	bcf	status,0,c
 28646  013A28  BEDC               	btfsc	preinc2,7,c
 28647  013A2A  80D8               	bsf	status,0,c
 28648  013A2C  32DD               	rrcf	postdec2,f,c
 28649  013A2E  32DD               	rrcf	postdec2,f,c
 28650  013A30  32DD               	rrcf	postdec2,f,c
 28651  013A32  32DE               	rrcf	postinc2,f,c
 28652  013A34                     u6860:
 28653  013A34  2EE8               	decfsz	wreg,f,c
 28654  013A36  D7F6               	goto	u6865
 28655                           
 28656                           ;stkvar	_temp @ sp[(-13)+8]
 28657  013A38  0EFB               	movlw	-5
 28658  013A3A  50E3               	movf	plusw1,w,c
 28659  013A3C  0F01               	addlw	1
 28660  013A3E  6E01               	movwf	btemp^0,c
 28661  013A40  0EFB               	movlw	-5
 28662  013A42  0060  F007  FFE3   	movff	btemp,plusw1
 28663  013A48  6A01               	clrf	btemp^0,c
 28664  013A4A  0EFC               	movlw	-4
 28665  013A4C  50E3               	movf	plusw1,w,c
 28666  013A4E  2001               	addwfc	btemp^0,w,c
 28667  013A50  6E01               	movwf	btemp^0,c
 28668  013A52  0EFC               	movlw	-4
 28669  013A54  0060  F007  FFE3   	movff	btemp,plusw1
 28670  013A5A                     l8359:
 28671                           
 28672                           ;stkvar	_temp @ sp[(-13)+8]
 28673  013A5A  0EFC               	movlw	-4
 28674  013A5C  BEE3               	btfsc	plusw1,7,c
 28675  013A5E  D020               	goto	l8363
 28676  013A60  0EFC               	movlw	-4
 28677  013A62  50E3               	movf	plusw1,w,c
 28678  013A64  E104               	bnz	u6870
 28679  013A66  0EFB               	movlw	-5
 28680  013A68  28E3               	incf	plusw1,w,c
 28681  013A6A  A0D8               	btfss	status,0,c
 28682  013A6C  D019               	goto	l8363
 28683  013A6E                     u6870:
 28684  013A6E  0E00               	movlw	0
 28685  013A70  6E09               	movwf	(btemp+8)^0,c
 28686  013A72  0E00               	movlw	0
 28687  013A74  6E0A               	movwf	(btemp+9)^0,c
 28688  013A76  0E80               	movlw	128
 28689  013A78  6E0B               	movwf	(btemp+10)^0,c
 28690  013A7A  0E7F               	movlw	127
 28691  013A7C  6E0C               	movwf	(btemp+11)^0,c
 28692                           
 28693                           ;stkvar	_prod @ sp[(-13)+0]
 28694  013A7E  0EF3               	movlw	-13
 28695  013A80  0060  F027  FFE3   	movff	btemp+8,plusw1
 28696  013A86  0EF4               	movlw	-12
 28697  013A88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28698  013A8E  0EF5               	movlw	-11
 28699  013A90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28700  013A96  0EF6               	movlw	-10
 28701  013A98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28702  013A9E  D044               	goto	l8379
 28703  013AA0                     l8363:
 28704                           
 28705                           ;stkvar	_temp @ sp[(-13)+8]
 28706  013AA0  0EFC               	movlw	-4
 28707  013AA2  BEE3               	btfsc	plusw1,7,c
 28708  013AA4  D007               	goto	u6880
 28709  013AA6  0EFC               	movlw	-4
 28710  013AA8  50E3               	movf	plusw1,w,c
 28711  013AAA  E10F               	bnz	l8369
 28712  013AAC  0EFB               	movlw	-5
 28713  013AAE  04E3               	decf	plusw1,w,c
 28714  013AB0  B0D8               	btfsc	status,0,c
 28715  013AB2  D00B               	goto	l8369
 28716  013AB4                     u6880:
 28717                           
 28718                           ;stkvar	_prod @ sp[(-13)+0]
 28719  013AB4  0EF3               	movlw	-13
 28720  013AB6  6AE3               	clrf	plusw1,c
 28721  013AB8  0EF4               	movlw	-12
 28722  013ABA  6AE3               	clrf	plusw1,c
 28723  013ABC  0EF5               	movlw	-11
 28724  013ABE  6AE3               	clrf	plusw1,c
 28725  013AC0  0EF6               	movlw	-10
 28726  013AC2  6AE3               	clrf	plusw1,c
 28727                           
 28728                           ;stkvar	_sign @ sp[(-13)+12]
 28729  013AC4  0EFF               	movlw	-1
 28730  013AC6  6AE3               	clrf	plusw1,c
 28731  013AC8  D02F               	goto	l8379
 28732  013ACA                     l8369:
 28733                           
 28734                           ;stkvar	_temp @ sp[(-13)+8]
 28735                           ;stkvar	_bexp @ sp[(-13)+10]
 28736  013ACA  0EFB               	movlw	-5
 28737  013ACC  006F FF8C  F001    	movff	plusw1,btemp
 28738  013AD2  0EFD               	movlw	-3
 28739  013AD4  0060  F007  FFE3   	movff	btemp,plusw1
 28740                           
 28741                           ;stkvar	_prod @ sp[(-13)+0]
 28742  013ADA  50E1               	movf	fsr1l,w,c
 28743  013ADC  0FF3               	addlw	-13
 28744  013ADE  6ED9               	movwf	fsr2l,c
 28745  013AE0  50E2               	movf	fsr1h,w,c
 28746  013AE2  6EDA               	movwf	fsr2h,c
 28747  013AE4  0EFF               	movlw	255
 28748  013AE6  22DA               	addwfc	fsr2h,f,c
 28749  013AE8  0EFF               	movlw	255
 28750  013AEA  16DE               	andwf	postinc2,f,c
 28751  013AEC  0EFF               	movlw	255
 28752  013AEE  16DE               	andwf	postinc2,f,c
 28753  013AF0  0E7F               	movlw	127
 28754  013AF2  16DE               	andwf	postinc2,f,c
 28755  013AF4  0E00               	movlw	0
 28756  013AF6  16DE               	andwf	postinc2,f,c
 28757                           
 28758                           ;stkvar	_bexp @ sp[(-13)+10]
 28759  013AF8  0EFD               	movlw	-3
 28760  013AFA  A0E3               	btfss	plusw1,0,c
 28761  013AFC  D008               	goto	l8377
 28762                           
 28763                           ;stkvar	_prod @ sp[(-13)+0]
 28764  013AFE  0EF5               	movlw	245
 28765  013B00  24E1               	addwf	fsr1l,w,c
 28766  013B02  6ED9               	movwf	fsr2l,c
 28767  013B04  0EFF               	movlw	255
 28768  013B06  20E2               	addwfc	fsr1h,w,c
 28769  013B08  6EDA               	movwf	fsr2h,c
 28770  013B0A  0E00               	movlw	0
 28771  013B0C  8EDB               	bsf	plusw2,7,c
 28772  013B0E                     l8377:
 28773                           
 28774                           ;stkvar	_prod @ sp[(-13)+0]
 28775  013B0E  0EF6               	movlw	246
 28776  013B10  24E1               	addwf	fsr1l,w,c
 28777  013B12  6ED9               	movwf	fsr2l,c
 28778  013B14  0EFF               	movlw	255
 28779  013B16  20E2               	addwfc	fsr1h,w,c
 28780  013B18  6EDA               	movwf	fsr2h,c
 28781                           
 28782                           ;stkvar	_bexp @ sp[(-13)+10]
 28783  013B1A  0EFD               	movlw	-3
 28784  013B1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28785  013B22  90D8               	bcf	status,0,c
 28786  013B24  300C               	rrcf	(btemp+11)^0,w,c
 28787  013B26  6EDF               	movwf	indf2,c
 28788  013B28                     l8379:
 28789                           
 28790                           ;stkvar	_sign @ sp[(-13)+12]
 28791  013B28  0EFF               	movlw	-1
 28792  013B2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28793                           
 28794                           ;stkvar	_prod @ sp[(-13)+0]
 28795  013B30  0EF6               	movlw	246
 28796  013B32  24E1               	addwf	fsr1l,w,c
 28797  013B34  6ED9               	movwf	fsr2l,c
 28798  013B36  0EFF               	movlw	255
 28799  013B38  20E2               	addwfc	fsr1h,w,c
 28800  013B3A  6EDA               	movwf	fsr2h,c
 28801  013B3C  500C               	movf	(btemp+11)^0,w,c
 28802  013B3E  12DF               	iorwf	indf2,f,c
 28803                           
 28804                           ;stkvar	_prod @ sp[(-13)+0]
 28805  013B40  0EF3               	movlw	-13
 28806  013B42  006F FF8C  F001    	movff	plusw1,btemp
 28807  013B48  0EF4               	movlw	-12
 28808  013B4A  006F FF8C  F002    	movff	plusw1,btemp+1
 28809  013B50  0EF5               	movlw	-11
 28810  013B52  006F FF8C  F003    	movff	plusw1,btemp+2
 28811  013B58  0EF6               	movlw	-10
 28812  013B5A  006F FF8C  F004    	movff	plusw1,btemp+3
 28813  013B60                     l3018:
 28814                           
 28815                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28816  013B60  0EEB               	movlw	235
 28817  013B62  26E1               	addwf	fsr1l,f,c
 28818  013B64  0EFF               	movlw	255
 28819  013B66  22E2               	addwfc	fsr1h,f,c
 28820  013B68  0012               	return		;funcret
 28821  013B6A                     __end_of___flmul:
 28822                           	opt callstack 0
 28823                           
 28824 ;; *************** function _SYSTEM_Initialize *****************
 28825 ;; Defined at:
 28826 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28827 ;; Parameters:    Size  Location     Type
 28828 ;;		None
 28829 ;; Auto vars:     Size  Location     Type
 28830 ;;		None
 28831 ;; Return value:  Size  Location     Type
 28832 ;;                  1  [STACK] void 
 28833 ;; Registers used:
 28834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28835 ;; Tracked objects:
 28836 ;;		On entry : 0/0
 28837 ;;		On exit  : 3F/3C
 28838 ;;		Unchanged: 0/0
 28839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28844 ;;Total ram usage:        0 bytes
 28845 ;; Hardware stack levels used:    1
 28846 ;; Hardware stack levels required when called:   17
 28847 ;; This function calls:
 28848 ;;		_ADCC_Initialize
 28849 ;;		_CLKREF_Initialize
 28850 ;;		_DMA1_Initialize
 28851 ;;		_DMA2_Initialize
 28852 ;;		_EXT_INT_Initialize
 28853 ;;		_FVR_Initialize
 28854 ;;		_INTERRUPT_Initialize
 28855 ;;		_OSCILLATOR_Initialize
 28856 ;;		_PIN_MANAGER_Initialize
 28857 ;;		_PMD_Initialize
 28858 ;;		_PWM8_Initialize
 28859 ;;		_SPI1_Initialize
 28860 ;;		_TMR2_Initialize
 28861 ;;		_TMR3_Initialize
 28862 ;;		_TMR5_Initialize
 28863 ;;		_TMR6_Initialize
 28864 ;;		_UART1_Initialize
 28865 ;;		_UART2_Initialize
 28866 ;; This function is called by:
 28867 ;;		_main
 28868 ;; This function uses a reentrant model
 28869 ;;
 28870                           
 28871                           	psect	text107
 28872  01B060                     __ptext107:
 28873                           	opt callstack 0
 28874  01B060                     _SYSTEM_Initialize:
 28875                           	opt callstack 13
 28876                           
 28877                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28878                           
 28879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28880                           ;incstack = 0
 28881  01B060  EC3D  F0D6         	call	_INTERRUPT_Initialize	;wreg free
 28882                           
 28883                           ; BSR set to: 57
 28884                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28885  01B064  EC5C  F0DE         	call	_PMD_Initialize	;wreg free
 28886                           
 28887                           ; BSR set to: 57
 28888                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28889  01B068  EC7D  F0D3         	call	_PIN_MANAGER_Initialize	;wreg free
 28890                           
 28891                           ; BSR set to: 58
 28892                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28893  01B06C  EC51  F0DE         	call	_OSCILLATOR_Initialize	;wreg free
 28894                           
 28895                           ; BSR set to: 57
 28896                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28897  01B070  ECE7  F0DE         	call	_FVR_Initialize	;wreg free
 28898                           
 28899                           ; BSR set to: 62
 28900                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28901  01B074  ECD2  F0D5         	call	_ADCC_Initialize	;wreg free
 28902                           
 28903                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28904  01B078  EC2F  F0DE         	call	_TMR2_Initialize	;wreg free
 28905                           
 28906                           ; BSR set to: 57
 28907                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28908  01B07C  EC46  F0DE         	call	_PWM8_Initialize	;wreg free
 28909                           
 28910                           ; BSR set to: 63
 28911                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28912  01B080  ECD2  F0DA         	call	_EXT_INT_Initialize	;wreg free
 28913                           
 28914                           ; BSR set to: 57
 28915                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28916  01B084  ECA6  F0DB         	call	_TMR6_Initialize	;wreg free
 28917                           
 28918                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28919  01B088  ECC1  F0D8         	call	_TMR3_Initialize	;wreg free
 28920                           
 28921                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28922  01B08C  EC9D  F0D8         	call	_TMR5_Initialize	;wreg free
 28923                           
 28924                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28925  01B090  EC79  F0D8         	call	_UART1_Initialize	;wreg free
 28926                           
 28927                           ; BSR set to: 57
 28928                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28929  01B094  EC04  F0D7         	call	_UART2_Initialize	;wreg free
 28930                           
 28931                           ; BSR set to: 57
 28932                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28933  01B098  EC3B  F0DE         	call	_SPI1_Initialize	;wreg free
 28934                           
 28935                           ; BSR set to: 61
 28936                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28937  01B09C  EC61  F0D7         	call	_DMA2_Initialize	;wreg free
 28938                           
 28939                           ; BSR set to: 59
 28940                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28941  01B0A0  EC9D  F0D5         	call	_DMA1_Initialize	;wreg free
 28942                           
 28943                           ; BSR set to: 59
 28944                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28945  01B0A4  ECBB  F0DE         	call	_CLKREF_Initialize	;wreg free
 28946                           
 28947                           ; BSR set to: 60
 28948                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28949  01B0A8  0012               	return		;funcret
 28950  01B0AA                     __end_of_SYSTEM_Initialize:
 28951                           	opt callstack 0
 28952                           
 28953 ;; *************** function _UART2_Initialize *****************
 28954 ;; Defined at:
 28955 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28956 ;; Parameters:    Size  Location     Type
 28957 ;;		None
 28958 ;; Auto vars:     Size  Location     Type
 28959 ;;		None
 28960 ;; Return value:  Size  Location     Type
 28961 ;;                  1  [STACK] void 
 28962 ;; Registers used:
 28963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28964 ;; Tracked objects:
 28965 ;;		On entry : 3F/39
 28966 ;;		On exit  : 3F/39
 28967 ;;		Unchanged: 0/0
 28968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28973 ;;Total ram usage:        0 bytes
 28974 ;; Hardware stack levels used:    1
 28975 ;; Hardware stack levels required when called:   16
 28976 ;; This function calls:
 28977 ;;		_UART2_SetRxInterruptHandler
 28978 ;;		_UART2_SetTxInterruptHandler
 28979 ;; This function is called by:
 28980 ;;		_SYSTEM_Initialize
 28981 ;; This function uses a reentrant model
 28982 ;;
 28983                           
 28984                           	psect	text108
 28985  01AE08                     __ptext108:
 28986                           	opt callstack 0
 28987  01AE08                     _UART2_Initialize:
 28988                           	opt callstack 13
 28989                           
 28990                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28991                           
 28992                           ; BSR set to: 60
 28993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28994                           ;incstack = 0
 28995  01AE08  0139               	movlb	57	; () banked
 28996  01AE0A  9596               	bcf	150,2,b	;volatile
 28997                           
 28998                           ; BSR set to: 57
 28999                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29000  01AE0C  0E5C               	movlw	low _UART2_Receive_ISR
 29001  01AE0E  6EE6               	movwf	postinc1,c
 29002  01AE10  0EBB               	movlw	high _UART2_Receive_ISR
 29003  01AE12  6EE6               	movwf	postinc1,c
 29004  01AE14  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29005  01AE16  6EE6               	movwf	postinc1,c
 29006  01AE18  EC1F  F0DC         	call	_UART2_SetRxInterruptHandler	;wreg free
 29007                           
 29008                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29009  01AE1C  0139               	movlb	57	; () banked
 29010  01AE1E  9796               	bcf	150,3,b	;volatile
 29011                           
 29012                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29013  01AE20  0E20               	movlw	low _UART2_Transmit_ISR
 29014  01AE22  6EE6               	movwf	postinc1,c
 29015  01AE24  0EB7               	movlw	high _UART2_Transmit_ISR
 29016  01AE26  6EE6               	movwf	postinc1,c
 29017  01AE28  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29018  01AE2A  6EE6               	movwf	postinc1,c
 29019  01AE2C  EC0B  F0DC         	call	_UART2_SetTxInterruptHandler	;wreg free
 29020                           
 29021                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29022  01AE30  013D               	movlb	61	; () banked
 29023  01AE32  6BD4               	clrf	212,b	;volatile
 29024                           
 29025                           ; BSR set to: 61
 29026                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29027  01AE34  6BD6               	clrf	214,b	;volatile
 29028                           
 29029                           ; BSR set to: 61
 29030                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29031  01AE36  6BD8               	clrf	216,b	;volatile
 29032                           
 29033                           ; BSR set to: 61
 29034                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29035  01AE38  0EB0               	movlw	176
 29036  01AE3A  6FDA               	movwf	218,b	;volatile
 29037                           
 29038                           ; BSR set to: 61
 29039                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29040  01AE3C  0E80               	movlw	128
 29041  01AE3E  6FDB               	movwf	219,b	;volatile
 29042                           
 29043                           ; BSR set to: 61
 29044                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29045  01AE40  6BDC               	clrf	220,b	;volatile
 29046                           
 29047                           ; BSR set to: 61
 29048                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29049  01AE42  0E82               	movlw	130
 29050  01AE44  6FDD               	movwf	221,b	;volatile
 29051                           
 29052                           ; BSR set to: 61
 29053                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29054  01AE46  0E06               	movlw	6
 29055  01AE48  6FDE               	movwf	222,b	;volatile
 29056                           
 29057                           ; BSR set to: 61
 29058                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29059  01AE4A  6BDF               	clrf	223,b	;volatile
 29060                           
 29061                           ; BSR set to: 61
 29062                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29063  01AE4C  6BE0               	clrf	224,b	;volatile
 29064                           
 29065                           ; BSR set to: 61
 29066                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29067  01AE4E  6BE1               	clrf	225,b	;volatile
 29068                           
 29069                           ; BSR set to: 61
 29070                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29071  01AE50  6BE2               	clrf	226,b	;volatile
 29072                           
 29073                           ; BSR set to: 61
 29074                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29075  01AE52  0100               	movlb	0	; () banked
 29076  01AE54  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29077                           
 29078                           ; BSR set to: 0
 29079                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29080  01AE56  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29081                           
 29082                           ; BSR set to: 0
 29083                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29084  01AE58  0E40               	movlw	64
 29085  01AE5A  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29086                           
 29087                           ; BSR set to: 0
 29088                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29089  01AE5C  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29090                           
 29091                           ; BSR set to: 0
 29092                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29093  01AE5E  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29094                           
 29095                           ; BSR set to: 0
 29096                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29097  01AE60  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29098                           
 29099                           ; BSR set to: 0
 29100                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29101  01AE62  0139               	movlb	57	; () banked
 29102  01AE64  8596               	bsf	150,2,b	;volatile
 29103                           
 29104                           ; BSR set to: 57
 29105                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29106  01AE66  0012               	return		;funcret
 29107  01AE68                     __end_of_UART2_Initialize:
 29108                           	opt callstack 0
 29109                           
 29110 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29111 ;; Defined at:
 29112 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29113 ;; Parameters:    Size  Location     Type
 29114 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29115 ;;		 -> UART2_Transmit_ISR(1), 
 29116 ;; Auto vars:     Size  Location     Type
 29117 ;;		None
 29118 ;; Return value:  Size  Location     Type
 29119 ;;                  1  [STACK] void 
 29120 ;; Registers used:
 29121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29122 ;; Tracked objects:
 29123 ;;		On entry : 3F/39
 29124 ;;		On exit  : 0/0
 29125 ;;		Unchanged: 0/0
 29126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29131 ;;Total ram usage:        0 bytes
 29132 ;; Hardware stack levels used:    1
 29133 ;; Hardware stack levels required when called:   15
 29134 ;; This function calls:
 29135 ;;		Nothing
 29136 ;; This function is called by:
 29137 ;;		_UART2_Initialize
 29138 ;; This function uses a reentrant model
 29139 ;;
 29140                           
 29141                           	psect	text109
 29142  01B816                     __ptext109:
 29143                           	opt callstack 0
 29144  01B816                     _UART2_SetTxInterruptHandler:
 29145                           	opt callstack 13
 29146                           
 29147                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29148                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29149                           
 29150                           ; BSR set to: 57
 29151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29152                           ;incstack = 0
 29153  01B816  50E1               	movf	fsr1l,w,c
 29154  01B818  0FFD               	addlw	-3
 29155  01B81A  6ED9               	movwf	fsr2l,c
 29156  01B81C  50E2               	movf	fsr1h,w,c
 29157  01B81E  6EDA               	movwf	fsr2h,c
 29158  01B820  0EFF               	movlw	255
 29159  01B822  22DA               	addwfc	fsr2h,f,c
 29160  01B824  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29161  01B82A  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29162  01B830  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29163                           
 29164                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29165  01B836  52E5               	movf	postdec1,f,c
 29166  01B838  52E5               	movf	postdec1,f,c
 29167  01B83A  52E5               	movf	postdec1,f,c
 29168  01B83C  0012               	return		;funcret
 29169  01B83E                     __end_of_UART2_SetTxInterruptHandler:
 29170                           	opt callstack 0
 29171                           
 29172 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29173 ;; Defined at:
 29174 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29175 ;; Parameters:    Size  Location     Type
 29176 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29177 ;;		 -> UART2_Receive_ISR(1), 
 29178 ;; Auto vars:     Size  Location     Type
 29179 ;;		None
 29180 ;; Return value:  Size  Location     Type
 29181 ;;                  1  [STACK] void 
 29182 ;; Registers used:
 29183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29184 ;; Tracked objects:
 29185 ;;		On entry : 3F/39
 29186 ;;		On exit  : 0/0
 29187 ;;		Unchanged: 0/0
 29188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29193 ;;Total ram usage:        0 bytes
 29194 ;; Hardware stack levels used:    1
 29195 ;; Hardware stack levels required when called:   15
 29196 ;; This function calls:
 29197 ;;		Nothing
 29198 ;; This function is called by:
 29199 ;;		_UART2_Initialize
 29200 ;; This function uses a reentrant model
 29201 ;;
 29202                           
 29203                           	psect	text110
 29204  01B83E                     __ptext110:
 29205                           	opt callstack 0
 29206  01B83E                     _UART2_SetRxInterruptHandler:
 29207                           	opt callstack 13
 29208                           
 29209                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29210                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29211                           
 29212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29213                           ;incstack = 0
 29214  01B83E  50E1               	movf	fsr1l,w,c
 29215  01B840  0FFD               	addlw	-3
 29216  01B842  6ED9               	movwf	fsr2l,c
 29217  01B844  50E2               	movf	fsr1h,w,c
 29218  01B846  6EDA               	movwf	fsr2h,c
 29219  01B848  0EFF               	movlw	255
 29220  01B84A  22DA               	addwfc	fsr2h,f,c
 29221  01B84C  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29222  01B852  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29223  01B858  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29224                           
 29225                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29226  01B85E  52E5               	movf	postdec1,f,c
 29227  01B860  52E5               	movf	postdec1,f,c
 29228  01B862  52E5               	movf	postdec1,f,c
 29229  01B864  0012               	return		;funcret
 29230  01B866                     __end_of_UART2_SetRxInterruptHandler:
 29231                           	opt callstack 0
 29232                           
 29233 ;; *************** function _UART1_Initialize *****************
 29234 ;; Defined at:
 29235 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29236 ;; Parameters:    Size  Location     Type
 29237 ;;		None
 29238 ;; Auto vars:     Size  Location     Type
 29239 ;;		None
 29240 ;; Return value:  Size  Location     Type
 29241 ;;                  1  [STACK] void 
 29242 ;; Registers used:
 29243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29244 ;; Tracked objects:
 29245 ;;		On entry : 0/39
 29246 ;;		On exit  : 3F/39
 29247 ;;		Unchanged: 0/0
 29248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29253 ;;Total ram usage:        0 bytes
 29254 ;; Hardware stack levels used:    1
 29255 ;; Hardware stack levels required when called:   16
 29256 ;; This function calls:
 29257 ;;		_UART1_SetRxInterruptHandler
 29258 ;; This function is called by:
 29259 ;;		_SYSTEM_Initialize
 29260 ;; This function uses a reentrant model
 29261 ;;
 29262                           
 29263                           	psect	text111
 29264  01B0F2                     __ptext111:
 29265                           	opt callstack 0
 29266  01B0F2                     _UART1_Initialize:
 29267                           	opt callstack 13
 29268                           
 29269                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29270                           
 29271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29272                           ;incstack = 0
 29273  01B0F2  0139               	movlb	57	; () banked
 29274  01B0F4  9793               	bcf	147,3,b	;volatile
 29275                           
 29276                           ; BSR set to: 57
 29277                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29278  01B0F6  0ED6               	movlw	low _UART1_Receive_ISR
 29279  01B0F8  6EE6               	movwf	postinc1,c
 29280  01B0FA  0EBB               	movlw	high _UART1_Receive_ISR
 29281  01B0FC  6EE6               	movwf	postinc1,c
 29282  01B0FE  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29283  01B100  6EE6               	movwf	postinc1,c
 29284  01B102  EC33  F0DC         	call	_UART1_SetRxInterruptHandler	;wreg free
 29285                           
 29286                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29287  01B106  013D               	movlb	61	; () banked
 29288  01B108  6BEC               	clrf	236,b	;volatile
 29289                           
 29290                           ; BSR set to: 61
 29291                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29292  01B10A  6BED               	clrf	237,b	;volatile
 29293                           
 29294                           ; BSR set to: 61
 29295                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29296  01B10C  6BEE               	clrf	238,b	;volatile
 29297                           
 29298                           ; BSR set to: 61
 29299                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29300  01B10E  6BEF               	clrf	239,b	;volatile
 29301                           
 29302                           ; BSR set to: 61
 29303                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29304  01B110  6BF0               	clrf	240,b	;volatile
 29305                           
 29306                           ; BSR set to: 61
 29307                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29308  01B112  6BF1               	clrf	241,b	;volatile
 29309                           
 29310                           ; BSR set to: 61
 29311                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29312  01B114  0EB0               	movlw	176
 29313  01B116  6FF2               	movwf	242,b	;volatile
 29314                           
 29315                           ; BSR set to: 61
 29316                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29317  01B118  0E80               	movlw	128
 29318  01B11A  6FF3               	movwf	243,b	;volatile
 29319                           
 29320                           ; BSR set to: 61
 29321                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29322  01B11C  6BF4               	clrf	244,b	;volatile
 29323                           
 29324                           ; BSR set to: 61
 29325                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29326  01B11E  0E8A               	movlw	138
 29327  01B120  6FF5               	movwf	245,b	;volatile
 29328                           
 29329                           ; BSR set to: 61
 29330                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29331  01B122  6BF6               	clrf	246,b	;volatile
 29332                           
 29333                           ; BSR set to: 61
 29334                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29335  01B124  6BF7               	clrf	247,b	;volatile
 29336                           
 29337                           ; BSR set to: 61
 29338                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29339  01B126  6BF8               	clrf	248,b	;volatile
 29340                           
 29341                           ; BSR set to: 61
 29342                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29343  01B128  6BF9               	clrf	249,b	;volatile
 29344                           
 29345                           ; BSR set to: 61
 29346                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29347  01B12A  6BFA               	clrf	250,b	;volatile
 29348                           
 29349                           ; BSR set to: 61
 29350                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29351  01B12C  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29352                           
 29353                           ; BSR set to: 61
 29354                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29355  01B12E  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29356                           
 29357                           ; BSR set to: 61
 29358                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29359  01B130  0100               	movlb	0	; () banked
 29360  01B132  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29361                           
 29362                           ; BSR set to: 0
 29363                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29364  01B134  0139               	movlb	57	; () banked
 29365  01B136  8793               	bsf	147,3,b	;volatile
 29366                           
 29367                           ; BSR set to: 57
 29368                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29369  01B138  0012               	return		;funcret
 29370  01B13A                     __end_of_UART1_Initialize:
 29371                           	opt callstack 0
 29372                           
 29373 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29374 ;; Defined at:
 29375 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29376 ;; Parameters:    Size  Location     Type
 29377 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29378 ;;		 -> UART1_Receive_ISR(1), 
 29379 ;; Auto vars:     Size  Location     Type
 29380 ;;		None
 29381 ;; Return value:  Size  Location     Type
 29382 ;;                  1  [STACK] void 
 29383 ;; Registers used:
 29384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29385 ;; Tracked objects:
 29386 ;;		On entry : 3F/39
 29387 ;;		On exit  : 0/0
 29388 ;;		Unchanged: 0/0
 29389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29394 ;;Total ram usage:        0 bytes
 29395 ;; Hardware stack levels used:    1
 29396 ;; Hardware stack levels required when called:   15
 29397 ;; This function calls:
 29398 ;;		Nothing
 29399 ;; This function is called by:
 29400 ;;		_UART1_Initialize
 29401 ;; This function uses a reentrant model
 29402 ;;
 29403                           
 29404                           	psect	text112
 29405  01B866                     __ptext112:
 29406                           	opt callstack 0
 29407  01B866                     _UART1_SetRxInterruptHandler:
 29408                           	opt callstack 13
 29409                           
 29410                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29411                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29412                           
 29413                           ; BSR set to: 57
 29414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29415                           ;incstack = 0
 29416  01B866  50E1               	movf	fsr1l,w,c
 29417  01B868  0FFD               	addlw	-3
 29418  01B86A  6ED9               	movwf	fsr2l,c
 29419  01B86C  50E2               	movf	fsr1h,w,c
 29420  01B86E  6EDA               	movwf	fsr2h,c
 29421  01B870  0EFF               	movlw	255
 29422  01B872  22DA               	addwfc	fsr2h,f,c
 29423  01B874  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29424  01B87A  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29425  01B880  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29426                           
 29427                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29428  01B886  52E5               	movf	postdec1,f,c
 29429  01B888  52E5               	movf	postdec1,f,c
 29430  01B88A  52E5               	movf	postdec1,f,c
 29431  01B88C  0012               	return		;funcret
 29432  01B88E                     __end_of_UART1_SetRxInterruptHandler:
 29433                           	opt callstack 0
 29434                           
 29435 ;; *************** function _TMR6_Initialize *****************
 29436 ;; Defined at:
 29437 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29438 ;; Parameters:    Size  Location     Type
 29439 ;;		None
 29440 ;; Auto vars:     Size  Location     Type
 29441 ;;		None
 29442 ;; Return value:  Size  Location     Type
 29443 ;;                  1  [STACK] void 
 29444 ;; Registers used:
 29445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29446 ;; Tracked objects:
 29447 ;;		On entry : 3F/39
 29448 ;;		On exit  : 0/0
 29449 ;;		Unchanged: 0/0
 29450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29455 ;;Total ram usage:        0 bytes
 29456 ;; Hardware stack levels used:    1
 29457 ;; Hardware stack levels required when called:   16
 29458 ;; This function calls:
 29459 ;;		_TMR6_SetInterruptHandler
 29460 ;; This function is called by:
 29461 ;;		_SYSTEM_Initialize
 29462 ;; This function uses a reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text113
 29466  01B74C                     __ptext113:
 29467                           	opt callstack 0
 29468  01B74C                     _TMR6_Initialize:
 29469                           	opt callstack 13
 29470                           
 29471                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29472                           
 29473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29474                           ;incstack = 0
 29475  01B74C  0E01               	movlw	1
 29476  01B74E  6E96               	movwf	150,c	;volatile
 29477                           
 29478                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29479  01B750  6A95               	clrf	149,c	;volatile
 29480                           
 29481                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29482  01B752  6A97               	clrf	151,c	;volatile
 29483                           
 29484                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29485  01B754  0E7C               	movlw	124
 29486  01B756  6E93               	movwf	147,c	;volatile
 29487                           
 29488                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29489  01B758  6A92               	clrf	146,c	;volatile
 29490                           
 29491                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29492  01B75A  0139               	movlb	57	; () banked
 29493  01B75C  91A9               	bcf	169,0,b	;volatile
 29494                           
 29495                           ; BSR set to: 57
 29496                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29497  01B75E  8199               	bsf	153,0,b	;volatile
 29498                           
 29499                           ; BSR set to: 57
 29500                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29501  01B760  0E12               	movlw	low _TMR6_DefaultInterruptHandler
 29502  01B762  6EE6               	movwf	postinc1,c
 29503  01B764  0EB0               	movlw	high _TMR6_DefaultInterruptHandler
 29504  01B766  6EE6               	movwf	postinc1,c
 29505  01B768  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29506  01B76A  6EE6               	movwf	postinc1,c
 29507  01B76C  EC47  F0DC         	call	_TMR6_SetInterruptHandler	;wreg free
 29508                           
 29509                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29510  01B770  0EE0               	movlw	224
 29511  01B772  6E94               	movwf	148,c	;volatile
 29512                           
 29513                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29514  01B774  0012               	return		;funcret
 29515  01B776                     __end_of_TMR6_Initialize:
 29516                           	opt callstack 0
 29517                           
 29518 ;; *************** function _TMR6_SetInterruptHandler *****************
 29519 ;; Defined at:
 29520 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29521 ;; Parameters:    Size  Location     Type
 29522 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29523 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29524 ;; Auto vars:     Size  Location     Type
 29525 ;;		None
 29526 ;; Return value:  Size  Location     Type
 29527 ;;                  1  [STACK] void 
 29528 ;; Registers used:
 29529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29530 ;; Tracked objects:
 29531 ;;		On entry : 3F/39
 29532 ;;		On exit  : 0/0
 29533 ;;		Unchanged: 0/0
 29534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29539 ;;Total ram usage:        0 bytes
 29540 ;; Hardware stack levels used:    1
 29541 ;; Hardware stack levels required when called:   15
 29542 ;; This function calls:
 29543 ;;		Nothing
 29544 ;; This function is called by:
 29545 ;;		_TMR6_Initialize
 29546 ;; This function uses a reentrant model
 29547 ;;
 29548                           
 29549                           	psect	text114
 29550  01B88E                     __ptext114:
 29551                           	opt callstack 0
 29552  01B88E                     _TMR6_SetInterruptHandler:
 29553                           	opt callstack 13
 29554                           
 29555                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29556                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29557                           
 29558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29559                           ;incstack = 0
 29560  01B88E  50E1               	movf	fsr1l,w,c
 29561  01B890  0FFD               	addlw	-3
 29562  01B892  6ED9               	movwf	fsr2l,c
 29563  01B894  50E2               	movf	fsr1h,w,c
 29564  01B896  6EDA               	movwf	fsr2h,c
 29565  01B898  0EFF               	movlw	255
 29566  01B89A  22DA               	addwfc	fsr2h,f,c
 29567  01B89C  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29568  01B8A2  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29569  01B8A8  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29570                           
 29571                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29572  01B8AE  52E5               	movf	postdec1,f,c
 29573  01B8B0  52E5               	movf	postdec1,f,c
 29574  01B8B2  52E5               	movf	postdec1,f,c
 29575  01B8B4  0012               	return		;funcret
 29576  01B8B6                     __end_of_TMR6_SetInterruptHandler:
 29577                           	opt callstack 0
 29578                           
 29579 ;; *************** function _TMR5_Initialize *****************
 29580 ;; Defined at:
 29581 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29582 ;; Parameters:    Size  Location     Type
 29583 ;;		None
 29584 ;; Auto vars:     Size  Location     Type
 29585 ;;		None
 29586 ;; Return value:  Size  Location     Type
 29587 ;;                  1  [STACK] void 
 29588 ;; Registers used:
 29589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29590 ;; Tracked objects:
 29591 ;;		On entry : 0/39
 29592 ;;		On exit  : 0/0
 29593 ;;		Unchanged: 0/0
 29594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29599 ;;Total ram usage:        0 bytes
 29600 ;; Hardware stack levels used:    1
 29601 ;; Hardware stack levels required when called:   16
 29602 ;; This function calls:
 29603 ;;		_TMR5_SetInterruptHandler
 29604 ;; This function is called by:
 29605 ;;		_SYSTEM_Initialize
 29606 ;; This function uses a reentrant model
 29607 ;;
 29608                           
 29609                           	psect	text115
 29610  01B13A                     __ptext115:
 29611                           	opt callstack 0
 29612  01B13A                     _TMR5_Initialize:
 29613                           	opt callstack 13
 29614                           
 29615                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29616                           
 29617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29618                           ;incstack = 0
 29619  01B13A  6A9B               	clrf	155,c	;volatile
 29620                           
 29621                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29622  01B13C  6A9C               	clrf	156,c	;volatile
 29623                           
 29624                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29625  01B13E  0E01               	movlw	1
 29626  01B140  6E9D               	movwf	157,c	;volatile
 29627                           
 29628                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29629  01B142  0E63               	movlw	99
 29630  01B144  6E99               	movwf	153,c	;volatile
 29631                           
 29632                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29633  01B146  0EC0               	movlw	192
 29634  01B148  6E98               	movwf	152,c	;volatile
 29635                           
 29636                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29637  01B14A  5098               	movf	152,w,c	;volatile
 29638  01B14C  006F FE64  F001    	movff	16281,btemp	;volatile
 29639  01B152  6A02               	clrf	(btemp+1)^0,c
 29640  01B154  0060  F004  F002   	movff	btemp,btemp+1
 29641  01B15A  6A01               	clrf	btemp^0,c
 29642  01B15C  1001               	iorwf	btemp^0,w,c
 29643  01B15E  0100               	movlb	0	; () banked
 29644  01B160  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29645  01B162  5002               	movf	(btemp+1)^0,w,c
 29646  01B164  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29647                           
 29648                           ; BSR set to: 0
 29649                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29650  01B166  0139               	movlb	57	; () banked
 29651  01B168  9DA8               	bcf	168,6,b	;volatile
 29652                           
 29653                           ; BSR set to: 57
 29654                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29655  01B16A  8D98               	bsf	152,6,b	;volatile
 29656                           
 29657                           ; BSR set to: 57
 29658                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29659  01B16C  0ECC               	movlw	low _TMR5_DefaultInterruptHandler
 29660  01B16E  6EE6               	movwf	postinc1,c
 29661  01B170  0EB4               	movlw	high _TMR5_DefaultInterruptHandler
 29662  01B172  6EE6               	movwf	postinc1,c
 29663  01B174  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29664  01B176  6EE6               	movwf	postinc1,c
 29665  01B178  EC5B  F0DC         	call	_TMR5_SetInterruptHandler	;wreg free
 29666                           
 29667                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29668  01B17C  0E31               	movlw	49
 29669  01B17E  6E9A               	movwf	154,c	;volatile
 29670                           
 29671                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29672  01B180  0012               	return		;funcret
 29673  01B182                     __end_of_TMR5_Initialize:
 29674                           	opt callstack 0
 29675                           
 29676 ;; *************** function _TMR5_SetInterruptHandler *****************
 29677 ;; Defined at:
 29678 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29679 ;; Parameters:    Size  Location     Type
 29680 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29681 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29682 ;; Auto vars:     Size  Location     Type
 29683 ;;		None
 29684 ;; Return value:  Size  Location     Type
 29685 ;;                  1  [STACK] void 
 29686 ;; Registers used:
 29687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29688 ;; Tracked objects:
 29689 ;;		On entry : 3F/39
 29690 ;;		On exit  : 0/0
 29691 ;;		Unchanged: 0/0
 29692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29697 ;;Total ram usage:        0 bytes
 29698 ;; Hardware stack levels used:    1
 29699 ;; Hardware stack levels required when called:   15
 29700 ;; This function calls:
 29701 ;;		Nothing
 29702 ;; This function is called by:
 29703 ;;		_TMR5_Initialize
 29704 ;; This function uses a reentrant model
 29705 ;;
 29706                           
 29707                           	psect	text116
 29708  01B8B6                     __ptext116:
 29709                           	opt callstack 0
 29710  01B8B6                     _TMR5_SetInterruptHandler:
 29711                           	opt callstack 13
 29712                           
 29713                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29714                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29715                           
 29716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29717                           ;incstack = 0
 29718  01B8B6  50E1               	movf	fsr1l,w,c
 29719  01B8B8  0FFD               	addlw	-3
 29720  01B8BA  6ED9               	movwf	fsr2l,c
 29721  01B8BC  50E2               	movf	fsr1h,w,c
 29722  01B8BE  6EDA               	movwf	fsr2h,c
 29723  01B8C0  0EFF               	movlw	255
 29724  01B8C2  22DA               	addwfc	fsr2h,f,c
 29725  01B8C4  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29726  01B8CA  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29727  01B8D0  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29728                           
 29729                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29730  01B8D6  52E5               	movf	postdec1,f,c
 29731  01B8D8  52E5               	movf	postdec1,f,c
 29732  01B8DA  52E5               	movf	postdec1,f,c
 29733  01B8DC  0012               	return		;funcret
 29734  01B8DE                     __end_of_TMR5_SetInterruptHandler:
 29735                           	opt callstack 0
 29736                           
 29737 ;; *************** function _TMR3_Initialize *****************
 29738 ;; Defined at:
 29739 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29740 ;; Parameters:    Size  Location     Type
 29741 ;;		None
 29742 ;; Auto vars:     Size  Location     Type
 29743 ;;		None
 29744 ;; Return value:  Size  Location     Type
 29745 ;;                  1  [STACK] void 
 29746 ;; Registers used:
 29747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29748 ;; Tracked objects:
 29749 ;;		On entry : 0/39
 29750 ;;		On exit  : 0/0
 29751 ;;		Unchanged: 0/0
 29752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29757 ;;Total ram usage:        0 bytes
 29758 ;; Hardware stack levels used:    1
 29759 ;; Hardware stack levels required when called:   16
 29760 ;; This function calls:
 29761 ;;		_TMR3_SetInterruptHandler
 29762 ;; This function is called by:
 29763 ;;		_SYSTEM_Initialize
 29764 ;; This function uses a reentrant model
 29765 ;;
 29766                           
 29767                           	psect	text117
 29768  01B182                     __ptext117:
 29769                           	opt callstack 0
 29770  01B182                     _TMR3_Initialize:
 29771                           	opt callstack 13
 29772                           
 29773                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29774                           
 29775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29776                           ;incstack = 0
 29777  01B182  6AA7               	clrf	167,c	;volatile
 29778                           
 29779                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29780  01B184  6AA8               	clrf	168,c	;volatile
 29781                           
 29782                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29783  01B186  0E01               	movlw	1
 29784  01B188  6EA9               	movwf	169,c	;volatile
 29785                           
 29786                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29787  01B18A  0E3C               	movlw	60
 29788  01B18C  6EA5               	movwf	165,c	;volatile
 29789                           
 29790                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29791  01B18E  0EB0               	movlw	176
 29792  01B190  6EA4               	movwf	164,c	;volatile
 29793                           
 29794                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29795  01B192  50A4               	movf	164,w,c	;volatile
 29796  01B194  006F FE94  F001    	movff	16293,btemp	;volatile
 29797  01B19A  6A02               	clrf	(btemp+1)^0,c
 29798  01B19C  0060  F004  F002   	movff	btemp,btemp+1
 29799  01B1A2  6A01               	clrf	btemp^0,c
 29800  01B1A4  1001               	iorwf	btemp^0,w,c
 29801  01B1A6  0100               	movlb	0	; () banked
 29802  01B1A8  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 29803  01B1AA  5002               	movf	(btemp+1)^0,w,c
 29804  01B1AC  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 29805                           
 29806                           ; BSR set to: 0
 29807                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29808  01B1AE  0139               	movlb	57	; () banked
 29809  01B1B0  9DA6               	bcf	166,6,b	;volatile
 29810                           
 29811                           ; BSR set to: 57
 29812                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29813  01B1B2  8D96               	bsf	150,6,b	;volatile
 29814                           
 29815                           ; BSR set to: 57
 29816                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29817  01B1B4  0EF8               	movlw	low _TMR3_DefaultInterruptHandler
 29818  01B1B6  6EE6               	movwf	postinc1,c
 29819  01B1B8  0EBD               	movlw	high _TMR3_DefaultInterruptHandler
 29820  01B1BA  6EE6               	movwf	postinc1,c
 29821  01B1BC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29822  01B1BE  6EE6               	movwf	postinc1,c
 29823  01B1C0  EC6F  F0DC         	call	_TMR3_SetInterruptHandler	;wreg free
 29824                           
 29825                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29826  01B1C4  0E31               	movlw	49
 29827  01B1C6  6EA6               	movwf	166,c	;volatile
 29828                           
 29829                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29830  01B1C8  0012               	return		;funcret
 29831  01B1CA                     __end_of_TMR3_Initialize:
 29832                           	opt callstack 0
 29833                           
 29834 ;; *************** function _TMR3_SetInterruptHandler *****************
 29835 ;; Defined at:
 29836 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29837 ;; Parameters:    Size  Location     Type
 29838 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29839 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29840 ;; Auto vars:     Size  Location     Type
 29841 ;;		None
 29842 ;; Return value:  Size  Location     Type
 29843 ;;                  1  [STACK] void 
 29844 ;; Registers used:
 29845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29846 ;; Tracked objects:
 29847 ;;		On entry : 0/1
 29848 ;;		On exit  : 0/0
 29849 ;;		Unchanged: 0/0
 29850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29855 ;;Total ram usage:        0 bytes
 29856 ;; Hardware stack levels used:    1
 29857 ;; Hardware stack levels required when called:   15
 29858 ;; This function calls:
 29859 ;;		Nothing
 29860 ;; This function is called by:
 29861 ;;		_TMR3_Initialize
 29862 ;;		_init_bsoc
 29863 ;; This function uses a reentrant model
 29864 ;;
 29865                           
 29866                           	psect	text118
 29867  01B8DE                     __ptext118:
 29868                           	opt callstack 0
 29869  01B8DE                     _TMR3_SetInterruptHandler:
 29870                           	opt callstack 14
 29871                           
 29872                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29873                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29874                           
 29875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29876                           ;incstack = 0
 29877  01B8DE  50E1               	movf	fsr1l,w,c
 29878  01B8E0  0FFD               	addlw	-3
 29879  01B8E2  6ED9               	movwf	fsr2l,c
 29880  01B8E4  50E2               	movf	fsr1h,w,c
 29881  01B8E6  6EDA               	movwf	fsr2h,c
 29882  01B8E8  0EFF               	movlw	255
 29883  01B8EA  22DA               	addwfc	fsr2h,f,c
 29884  01B8EC  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29885  01B8F2  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29886  01B8F8  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29887                           
 29888                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29889  01B8FE  52E5               	movf	postdec1,f,c
 29890  01B900  52E5               	movf	postdec1,f,c
 29891  01B902  52E5               	movf	postdec1,f,c
 29892  01B904  0012               	return		;funcret
 29893  01B906                     __end_of_TMR3_SetInterruptHandler:
 29894                           	opt callstack 0
 29895                           
 29896 ;; *************** function _TMR2_Initialize *****************
 29897 ;; Defined at:
 29898 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29899 ;; Parameters:    Size  Location     Type
 29900 ;;		None
 29901 ;; Auto vars:     Size  Location     Type
 29902 ;;		None
 29903 ;; Return value:  Size  Location     Type
 29904 ;;                  1  [STACK] void 
 29905 ;; Registers used:
 29906 ;;		wreg, status,2
 29907 ;; Tracked objects:
 29908 ;;		On entry : 0/3E
 29909 ;;		On exit  : 3F/39
 29910 ;;		Unchanged: 0/0
 29911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29916 ;;Total ram usage:        0 bytes
 29917 ;; Hardware stack levels used:    1
 29918 ;; Hardware stack levels required when called:   15
 29919 ;; This function calls:
 29920 ;;		Nothing
 29921 ;; This function is called by:
 29922 ;;		_SYSTEM_Initialize
 29923 ;; This function uses a reentrant model
 29924 ;;
 29925                           
 29926                           	psect	text119
 29927  01BC5E                     __ptext119:
 29928                           	opt callstack 0
 29929  01BC5E                     _TMR2_Initialize:
 29930                           	opt callstack 14
 29931                           
 29932                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29933                           
 29934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29935                           ;incstack = 0
 29936  01BC5E  0E01               	movlw	1
 29937  01BC60  6EAE               	movwf	174,c	;volatile
 29938                           
 29939                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29940  01BC62  6AAD               	clrf	173,c	;volatile
 29941                           
 29942                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29943  01BC64  6AAF               	clrf	175,c	;volatile
 29944                           
 29945                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29946  01BC66  0E63               	movlw	99
 29947  01BC68  6EAB               	movwf	171,c	;volatile
 29948                           
 29949                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29950  01BC6A  6AAA               	clrf	170,c	;volatile
 29951                           
 29952                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29953  01BC6C  0139               	movlb	57	; () banked
 29954  01BC6E  95A4               	bcf	164,2,b	;volatile
 29955                           
 29956                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29957  01BC70  0EC0               	movlw	192
 29958  01BC72  6EAC               	movwf	172,c	;volatile
 29959                           
 29960                           ; BSR set to: 57
 29961                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29962  01BC74  0012               	return		;funcret
 29963  01BC76                     __end_of_TMR2_Initialize:
 29964                           	opt callstack 0
 29965                           
 29966 ;; *************** function _SPI1_Initialize *****************
 29967 ;; Defined at:
 29968 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29969 ;; Parameters:    Size  Location     Type
 29970 ;;		None
 29971 ;; Auto vars:     Size  Location     Type
 29972 ;;		None
 29973 ;; Return value:  Size  Location     Type
 29974 ;;                  1  [STACK] void 
 29975 ;; Registers used:
 29976 ;;		wreg, status,2
 29977 ;; Tracked objects:
 29978 ;;		On entry : 3F/39
 29979 ;;		On exit  : 3F/3D
 29980 ;;		Unchanged: 0/0
 29981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29986 ;;Total ram usage:        0 bytes
 29987 ;; Hardware stack levels used:    1
 29988 ;; Hardware stack levels required when called:   15
 29989 ;; This function calls:
 29990 ;;		Nothing
 29991 ;; This function is called by:
 29992 ;;		_SYSTEM_Initialize
 29993 ;; This function uses a reentrant model
 29994 ;;
 29995                           
 29996                           	psect	text120
 29997  01BC76                     __ptext120:
 29998                           	opt callstack 0
 29999  01BC76                     _SPI1_Initialize:
 30000                           	opt callstack 14
 30001                           
 30002                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30003                           
 30004                           ; BSR set to: 57
 30005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30006                           ;incstack = 0
 30007  01BC76  0E40               	movlw	64
 30008  01BC78  013D               	movlb	61	; () banked
 30009  01BC7A  6F15               	movwf	21,b	;volatile
 30010                           
 30011                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30012  01BC7C  0E03               	movlw	3
 30013  01BC7E  6F16               	movwf	22,b	;volatile
 30014                           
 30015                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30016  01BC80  0E4F               	movlw	79
 30017  01BC82  6F19               	movwf	25,b	;volatile
 30018                           
 30019                           ; BSR set to: 61
 30020                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30021  01BC84  6B1C               	clrf	28,b	;volatile
 30022                           
 30023                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30024  01BC86  0E83               	movlw	131
 30025  01BC88  6F14               	movwf	20,b	;volatile
 30026                           
 30027                           ; BSR set to: 61
 30028                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30029  01BC8A  0012               	return		;funcret
 30030  01BC8C                     __end_of_SPI1_Initialize:
 30031                           	opt callstack 0
 30032                           
 30033 ;; *************** function _PWM8_Initialize *****************
 30034 ;; Defined at:
 30035 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30036 ;; Parameters:    Size  Location     Type
 30037 ;;		None
 30038 ;; Auto vars:     Size  Location     Type
 30039 ;;		None
 30040 ;; Return value:  Size  Location     Type
 30041 ;;                  1  [STACK] void 
 30042 ;; Registers used:
 30043 ;;		wreg, status,2
 30044 ;; Tracked objects:
 30045 ;;		On entry : 3F/39
 30046 ;;		On exit  : 3F/3F
 30047 ;;		Unchanged: 0/0
 30048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30053 ;;Total ram usage:        0 bytes
 30054 ;; Hardware stack levels used:    1
 30055 ;; Hardware stack levels required when called:   15
 30056 ;; This function calls:
 30057 ;;		Nothing
 30058 ;; This function is called by:
 30059 ;;		_SYSTEM_Initialize
 30060 ;; This function uses a reentrant model
 30061 ;;
 30062                           
 30063                           	psect	text121
 30064  01BC8C                     __ptext121:
 30065                           	opt callstack 0
 30066  01BC8C                     _PWM8_Initialize:
 30067                           	opt callstack 14
 30068                           
 30069                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30070                           
 30071                           ; BSR set to: 61
 30072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30073                           ;incstack = 0
 30074  01BC8C  0E80               	movlw	128
 30075  01BC8E  6E62               	movwf	98,c	;volatile
 30076                           
 30077                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30078  01BC90  6A61               	clrf	97,c	;volatile
 30079                           
 30080                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30081  01BC92  0E40               	movlw	64
 30082  01BC94  6E60               	movwf	96,c	;volatile
 30083                           
 30084                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30085  01BC96  013F               	movlb	63	; () banked
 30086  01BC98  515F               	movf	95,w,b	;volatile
 30087  01BC9A  0B3F               	andlw	-193
 30088  01BC9C  0940               	iorlw	64
 30089  01BC9E  6F5F               	movwf	95,b	;volatile
 30090                           
 30091                           ; BSR set to: 63
 30092                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30093  01BCA0  0012               	return		;funcret
 30094  01BCA2                     __end_of_PWM8_Initialize:
 30095                           	opt callstack 0
 30096                           
 30097 ;; *************** function _PMD_Initialize *****************
 30098 ;; Defined at:
 30099 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30100 ;; Parameters:    Size  Location     Type
 30101 ;;		None
 30102 ;; Auto vars:     Size  Location     Type
 30103 ;;		None
 30104 ;; Return value:  Size  Location     Type
 30105 ;;                  1  [STACK] void 
 30106 ;; Registers used:
 30107 ;;		None
 30108 ;; Tracked objects:
 30109 ;;		On entry : 3F/39
 30110 ;;		On exit  : 3F/39
 30111 ;;		Unchanged: 0/0
 30112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30117 ;;Total ram usage:        0 bytes
 30118 ;; Hardware stack levels used:    1
 30119 ;; Hardware stack levels required when called:   15
 30120 ;; This function calls:
 30121 ;;		Nothing
 30122 ;; This function is called by:
 30123 ;;		_SYSTEM_Initialize
 30124 ;; This function uses a reentrant model
 30125 ;;
 30126                           
 30127                           	psect	text122
 30128  01BCB8                     __ptext122:
 30129                           	opt callstack 0
 30130  01BCB8                     _PMD_Initialize:
 30131                           	opt callstack 14
 30132                           
 30133                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30134                           
 30135                           ; BSR set to: 63
 30136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30137                           ;incstack = 0
 30138  01BCB8  0139               	movlb	57	; () banked
 30139  01BCBA  6BC0               	clrf	192,b	;volatile
 30140                           
 30141                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30142  01BCBC  6BC1               	clrf	193,b	;volatile
 30143                           
 30144                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30145  01BCBE  6BC2               	clrf	194,b	;volatile
 30146                           
 30147                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30148  01BCC0  6BC3               	clrf	195,b	;volatile
 30149                           
 30150                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30151  01BCC2  6BC4               	clrf	196,b	;volatile
 30152                           
 30153                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30154  01BCC4  6BC5               	clrf	197,b	;volatile
 30155                           
 30156                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30157  01BCC6  6BC6               	clrf	198,b	;volatile
 30158                           
 30159                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30160  01BCC8  6BC7               	clrf	199,b	;volatile
 30161                           
 30162                           ; BSR set to: 57
 30163                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30164  01BCCA  0012               	return		;funcret
 30165  01BCCC                     __end_of_PMD_Initialize:
 30166                           	opt callstack 0
 30167                           
 30168 ;; *************** function _PIN_MANAGER_Initialize *****************
 30169 ;; Defined at:
 30170 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30171 ;; Parameters:    Size  Location     Type
 30172 ;;		None
 30173 ;; Auto vars:     Size  Location     Type
 30174 ;;		None
 30175 ;; Return value:  Size  Location     Type
 30176 ;;                  1  [STACK] void 
 30177 ;; Registers used:
 30178 ;;		wreg, status,2
 30179 ;; Tracked objects:
 30180 ;;		On entry : 3F/39
 30181 ;;		On exit  : 3F/3A
 30182 ;;		Unchanged: 0/0
 30183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30188 ;;Total ram usage:        0 bytes
 30189 ;; Hardware stack levels used:    1
 30190 ;; Hardware stack levels required when called:   15
 30191 ;; This function calls:
 30192 ;;		Nothing
 30193 ;; This function is called by:
 30194 ;;		_SYSTEM_Initialize
 30195 ;; This function uses a reentrant model
 30196 ;;
 30197                           
 30198                           	psect	text123
 30199  01A6FA                     __ptext123:
 30200                           	opt callstack 0
 30201  01A6FA                     _PIN_MANAGER_Initialize:
 30202                           	opt callstack 14
 30203                           
 30204                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30205                           
 30206                           ; BSR set to: 57
 30207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30208                           ;incstack = 0
 30209  01A6FA  0E07               	movlw	7
 30210  01A6FC  6EBE               	movwf	190,c	;volatile
 30211                           
 30212                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30213  01A6FE  0E80               	movlw	128
 30214  01A700  6EBD               	movwf	189,c	;volatile
 30215                           
 30216                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30217  01A702  6ABA               	clrf	186,c	;volatile
 30218                           
 30219                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30220  01A704  0E20               	movlw	32
 30221  01A706  6EBF               	movwf	191,c	;volatile
 30222                           
 30223                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30224  01A708  6ABB               	clrf	187,c	;volatile
 30225                           
 30226                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30227  01A70A  0E07               	movlw	7
 30228  01A70C  6EBC               	movwf	188,c	;volatile
 30229                           
 30230                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30231  01A70E  6AC6               	clrf	198,c	;volatile
 30232                           
 30233                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30234  01A710  0E0F               	movlw	15
 30235  01A712  6EC7               	movwf	199,c	;volatile
 30236                           
 30237                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30238  01A714  68C2               	setf	194,c	;volatile
 30239                           
 30240                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30241  01A716  0EBF               	movlw	191
 30242  01A718  6EC3               	movwf	195,c	;volatile
 30243                           
 30244                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30245  01A71A  0E90               	movlw	144
 30246  01A71C  6EC4               	movwf	196,c	;volatile
 30247                           
 30248                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30249  01A71E  0E0C               	movlw	12
 30250  01A720  6EC5               	movwf	197,c	;volatile
 30251                           
 30252                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30253  01A722  013A               	movlb	58	; () banked
 30254  01A724  6B70               	clrf	112,b	;volatile
 30255                           
 30256                           ; BSR set to: 58
 30257                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30258  01A726  6B60               	clrf	96,b	;volatile
 30259                           
 30260                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30261  01A728  0E3C               	movlw	60
 30262  01A72A  6F50               	movwf	80,b	;volatile
 30263                           
 30264                           ; BSR set to: 58
 30265                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30266  01A72C  6B80               	clrf	128,b	;volatile
 30267                           
 30268                           ; BSR set to: 58
 30269                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30270  01A72E  6B90               	clrf	144,b	;volatile
 30271                           
 30272                           ; BSR set to: 58
 30273                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30274  01A730  6940               	setf	64,b	;volatile
 30275                           
 30276                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30277  01A732  0E0C               	movlw	12
 30278  01A734  6F71               	movwf	113,b	;volatile
 30279                           
 30280                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30281  01A736  0E0F               	movlw	15
 30282  01A738  6F91               	movwf	145,b	;volatile
 30283                           
 30284                           ; BSR set to: 58
 30285                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30286  01A73A  6B81               	clrf	129,b	;volatile
 30287                           
 30288                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30289  01A73C  0E83               	movlw	131
 30290  01A73E  6F51               	movwf	81,b	;volatile
 30291                           
 30292                           ; BSR set to: 58
 30293                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30294  01A740  6B41               	clrf	65,b	;volatile
 30295                           
 30296                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30297  01A742  0E97               	movlw	151
 30298  01A744  6F61               	movwf	97,b	;volatile
 30299                           
 30300                           ; BSR set to: 58
 30301                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30302  01A746  6B82               	clrf	130,b	;volatile
 30303                           
 30304                           ; BSR set to: 58
 30305                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30306  01A748  6B92               	clrf	146,b	;volatile
 30307                           
 30308                           ; BSR set to: 58
 30309                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30310  01A74A  6B42               	clrf	66,b	;volatile
 30311                           
 30312                           ; BSR set to: 58
 30313                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30314  01A74C  6B52               	clrf	82,b	;volatile
 30315                           
 30316                           ; BSR set to: 58
 30317                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30318  01A74E  6B62               	clrf	98,b	;volatile
 30319                           
 30320                           ; BSR set to: 58
 30321                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30322  01A750  6B72               	clrf	114,b	;volatile
 30323                           
 30324                           ; BSR set to: 58
 30325                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30326  01A752  6943               	setf	67,b	;volatile
 30327                           
 30328                           ; BSR set to: 58
 30329                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30330  01A754  6953               	setf	83,b	;volatile
 30331                           
 30332                           ; BSR set to: 58
 30333                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30334  01A756  6963               	setf	99,b	;volatile
 30335                           
 30336                           ; BSR set to: 58
 30337                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30338  01A758  6973               	setf	115,b	;volatile
 30339                           
 30340                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30341  01A75A  0E07               	movlw	7
 30342  01A75C  6F83               	movwf	131,b	;volatile
 30343                           
 30344                           ; BSR set to: 58
 30345                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30346  01A75E  6993               	setf	147,b	;volatile
 30347                           
 30348                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30349  01A760  0E0F               	movlw	15
 30350  01A762  6FE8               	movwf	232,b	;volatile
 30351                           
 30352                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30353  01A764  0E13               	movlw	19
 30354  01A766  6FDE               	movwf	222,b	;volatile
 30355                           
 30356                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30357  01A768  0E16               	movlw	22
 30358  01A76A  6F0E               	movwf	14,b	;volatile
 30359                           
 30360                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30361  01A76C  0E1E               	movlw	30
 30362  01A76E  6F13               	movwf	19,b	;volatile
 30363                           
 30364                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30365  01A770  0E08               	movlw	8
 30366  01A772  6FC0               	movwf	192,b	;volatile
 30367                           
 30368                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30369  01A774  0E10               	movlw	16
 30370  01A776  6F19               	movwf	25,b	;volatile
 30371                           
 30372                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30373  01A778  0E09               	movlw	9
 30374  01A77A  6FC1               	movwf	193,b	;volatile
 30375                           
 30376                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30377  01A77C  0E1F               	movlw	31
 30378  01A77E  6F15               	movwf	21,b	;volatile
 30379                           
 30380                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30381  01A780  0E13               	movlw	19
 30382  01A782  6F16               	movwf	22,b	;volatile
 30383                           
 30384                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30385  01A784  0E17               	movlw	23
 30386  01A786  6FE5               	movwf	229,b	;volatile
 30387                           
 30388                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30389  01A788  0E14               	movlw	20
 30390  01A78A  6FDF               	movwf	223,b	;volatile
 30391                           
 30392                           ; BSR set to: 58
 30393                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30394  01A78C  0012               	return		;funcret
 30395  01A78E                     __end_of_PIN_MANAGER_Initialize:
 30396                           	opt callstack 0
 30397                           
 30398 ;; *************** function _OSCILLATOR_Initialize *****************
 30399 ;; Defined at:
 30400 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30401 ;; Parameters:    Size  Location     Type
 30402 ;;		None
 30403 ;; Auto vars:     Size  Location     Type
 30404 ;;		None
 30405 ;; Return value:  Size  Location     Type
 30406 ;;                  1  [STACK] void 
 30407 ;; Registers used:
 30408 ;;		wreg, status,2
 30409 ;; Tracked objects:
 30410 ;;		On entry : 3F/3A
 30411 ;;		On exit  : 3F/39
 30412 ;;		Unchanged: 0/0
 30413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30418 ;;Total ram usage:        0 bytes
 30419 ;; Hardware stack levels used:    1
 30420 ;; Hardware stack levels required when called:   15
 30421 ;; This function calls:
 30422 ;;		Nothing
 30423 ;; This function is called by:
 30424 ;;		_SYSTEM_Initialize
 30425 ;; This function uses a reentrant model
 30426 ;;
 30427                           
 30428                           	psect	text124
 30429  01BCA2                     __ptext124:
 30430                           	opt callstack 0
 30431  01BCA2                     _OSCILLATOR_Initialize:
 30432                           	opt callstack 14
 30433                           
 30434                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30435                           
 30436                           ; BSR set to: 58
 30437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30438                           ;incstack = 0
 30439  01BCA2  0E20               	movlw	32
 30440  01BCA4  0139               	movlb	57	; () banked
 30441  01BCA6  6FD9               	movwf	217,b	;volatile
 30442                           
 30443                           ; BSR set to: 57
 30444                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30445  01BCA8  6BDB               	clrf	219,b	;volatile
 30446                           
 30447                           ; BSR set to: 57
 30448                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30449  01BCAA  6BDD               	clrf	221,b	;volatile
 30450                           
 30451                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30452  01BCAC  0E02               	movlw	2
 30453  01BCAE  6FDF               	movwf	223,b	;volatile
 30454                           
 30455                           ; BSR set to: 57
 30456                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30457  01BCB0  6BDE               	clrf	222,b	;volatile
 30458  01BCB2                     l169:
 30459                           
 30460                           ; BSR set to: 57
 30461                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30462  01BCB2  B1DC               	btfsc	220,0,b	;volatile
 30463  01BCB4  0012               	return	
 30464  01BCB6  D7FD               	goto	l169
 30465  01BCB8                     __end_of_OSCILLATOR_Initialize:
 30466                           	opt callstack 0
 30467                           
 30468 ;; *************** function _INTERRUPT_Initialize *****************
 30469 ;; Defined at:
 30470 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30471 ;; Parameters:    Size  Location     Type
 30472 ;;		None
 30473 ;; Auto vars:     Size  Location     Type
 30474 ;;  state           1  [STACK] _Bool 
 30475 ;; Return value:  Size  Location     Type
 30476 ;;                  1  [STACK] void 
 30477 ;; Registers used:
 30478 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30479 ;; Tracked objects:
 30480 ;;		On entry : 0/0
 30481 ;;		On exit  : 3F/39
 30482 ;;		Unchanged: 0/0
 30483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30488 ;;Total ram usage:        0 bytes
 30489 ;; Hardware stack levels used:    1
 30490 ;; Hardware stack levels required when called:   15
 30491 ;; This function calls:
 30492 ;;		Nothing
 30493 ;; This function is called by:
 30494 ;;		_SYSTEM_Initialize
 30495 ;; This function uses a reentrant model
 30496 ;;
 30497                           
 30498                           	psect	text125
 30499  01AC7A                     __ptext125:
 30500                           	opt callstack 0
 30501  01AC7A                     _INTERRUPT_Initialize:
 30502                           	opt callstack 0
 30503                           
 30504                           ; BSR set to: 57
 30505                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30506  01AC7A  52E6               	movf	postinc1,f,c
 30507                           
 30508                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30509                           
 30510                           ;incstack = 0
 30511  01AC7C  8AD2               	bsf	210,5,c	;volatile
 30512                           
 30513                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30514  01AC7E  AED2               	btfss	16338,7,c	;volatile
 30515  01AC80  D003               	goto	u9390
 30516  01AC82  6A0C               	clrf	(btemp+11)^0,c
 30517  01AC84  2A0C               	incf	(btemp+11)^0,f,c
 30518  01AC86  D001               	goto	u9408
 30519  01AC88                     u9390:
 30520  01AC88  6A0C               	clrf	(btemp+11)^0,c
 30521  01AC8A                     u9408:
 30522                           
 30523                           ;stkvar	_state @ sp[(-1)+0]
 30524  01AC8A  0EFF               	movlw	-1
 30525  01AC8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30526                           
 30527                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30528  01AC92  9ED2               	bcf	16338,7,c	;volatile
 30529                           
 30530                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30531  01AC94  0E55               	movlw	85
 30532  01AC96  6ED4               	movwf	212,c	;volatile
 30533                           
 30534                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30535  01AC98  0EAA               	movlw	170
 30536  01AC9A  6ED4               	movwf	212,c	;volatile
 30537                           
 30538                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30539  01AC9C  90D4               	bcf	212,0,c	;volatile
 30540                           
 30541                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30542  01AC9E  0138               	movlb	56	; () banked
 30543  01ACA0  6B9F               	clrf	159,b	;volatile
 30544                           
 30545                           ; BSR set to: 56
 30546                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30547  01ACA2  6B9E               	clrf	158,b	;volatile
 30548                           
 30549                           ; BSR set to: 56
 30550                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30551  01ACA4  0E08               	movlw	8
 30552  01ACA6  6F9D               	movwf	157,b	;volatile
 30553                           
 30554                           ; BSR set to: 56
 30555                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30556  01ACA8  0E55               	movlw	85
 30557  01ACAA  6ED4               	movwf	212,c	;volatile
 30558                           
 30559                           ; BSR set to: 56
 30560                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30561  01ACAC  0EAA               	movlw	170
 30562  01ACAE  6ED4               	movwf	212,c	;volatile
 30563                           
 30564                           ; BSR set to: 56
 30565                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30566  01ACB0  80D4               	bsf	212,0,c	;volatile
 30567                           
 30568                           ; BSR set to: 56
 30569                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30570                           ;stkvar	_state @ sp[(-1)+0]
 30571  01ACB2  0EFF               	movlw	-1
 30572  01ACB4  B0E3               	btfsc	plusw1,0,c
 30573  01ACB6  D002               	bra	u9415
 30574  01ACB8  9ED2               	bcf	16338,7,c	;volatile
 30575  01ACBA  D001               	bra	u9416
 30576  01ACBC                     u9415:
 30577  01ACBC  8ED2               	bsf	16338,7,c	;volatile
 30578  01ACBE                     u9416:
 30579                           
 30580                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30581  01ACBE  0139               	movlb	57	; () banked
 30582  01ACC0  8782               	bsf	130,3,b	;volatile
 30583                           
 30584                           ; BSR set to: 57
 30585                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30586  01ACC2  8382               	bsf	130,1,b	;volatile
 30587                           
 30588                           ; BSR set to: 57
 30589                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30590  01ACC4  8182               	bsf	130,0,b	;volatile
 30591                           
 30592                           ; BSR set to: 57
 30593                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30594  01ACC6  8582               	bsf	130,2,b	;volatile
 30595                           
 30596                           ; BSR set to: 57
 30597                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30598  01ACC8  8786               	bsf	134,3,b	;volatile
 30599                           
 30600                           ; BSR set to: 57
 30601                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30602  01ACCA  8586               	bsf	134,2,b	;volatile
 30603                           
 30604                           ; BSR set to: 57
 30605                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30606  01ACCC  8783               	bsf	131,3,b	;volatile
 30607                           
 30608                           ; BSR set to: 57
 30609                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30610  01ACCE  8181               	bsf	129,0,b	;volatile
 30611                           
 30612                           ; BSR set to: 57
 30613                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30614  01ACD0  9185               	bcf	133,0,b	;volatile
 30615                           
 30616                           ; BSR set to: 57
 30617                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30618  01ACD2  8189               	bsf	137,0,b	;volatile
 30619                           
 30620                           ; BSR set to: 57
 30621                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30622  01ACD4  9D88               	bcf	136,6,b	;volatile
 30623                           
 30624                           ; BSR set to: 57
 30625                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30626  01ACD6  8581               	bsf	129,2,b	;volatile
 30627                           
 30628                           ; BSR set to: 57
 30629                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30630  01ACD8  8781               	bsf	129,3,b	;volatile
 30631                           
 30632                           ; BSR set to: 57
 30633                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30634  01ACDA  9D86               	bcf	134,6,b	;volatile
 30635                           
 30636                           ; BSR set to: 57
 30637                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30638  01ACDC  52E5               	movf	postdec1,f,c
 30639  01ACDE  0012               	return		;funcret
 30640  01ACE0                     __end_of_INTERRUPT_Initialize:
 30641                           	opt callstack 0
 30642                           
 30643 ;; *************** function _FVR_Initialize *****************
 30644 ;; Defined at:
 30645 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30646 ;; Parameters:    Size  Location     Type
 30647 ;;		None
 30648 ;; Auto vars:     Size  Location     Type
 30649 ;;		None
 30650 ;; Return value:  Size  Location     Type
 30651 ;;                  1  [STACK] void 
 30652 ;; Registers used:
 30653 ;;		wreg, status,2
 30654 ;; Tracked objects:
 30655 ;;		On entry : 3F/39
 30656 ;;		On exit  : 3F/3E
 30657 ;;		Unchanged: 0/0
 30658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30663 ;;Total ram usage:        0 bytes
 30664 ;; Hardware stack levels used:    1
 30665 ;; Hardware stack levels required when called:   15
 30666 ;; This function calls:
 30667 ;;		Nothing
 30668 ;; This function is called by:
 30669 ;;		_SYSTEM_Initialize
 30670 ;; This function uses a reentrant model
 30671 ;;
 30672                           
 30673                           	psect	text126
 30674  01BDCE                     __ptext126:
 30675                           	opt callstack 0
 30676  01BDCE                     _FVR_Initialize:
 30677                           	opt callstack 14
 30678                           
 30679                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30680                           
 30681                           ; BSR set to: 57
 30682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30683                           ;incstack = 0
 30684  01BDCE  0EAF               	movlw	175
 30685  01BDD0  013E               	movlb	62	; () banked
 30686  01BDD2  6FC1               	movwf	193,b	;volatile
 30687                           
 30688                           ; BSR set to: 62
 30689                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30690  01BDD4  0012               	return		;funcret
 30691  01BDD6                     __end_of_FVR_Initialize:
 30692                           	opt callstack 0
 30693                           
 30694 ;; *************** function _EXT_INT_Initialize *****************
 30695 ;; Defined at:
 30696 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30697 ;; Parameters:    Size  Location     Type
 30698 ;;		None
 30699 ;; Auto vars:     Size  Location     Type
 30700 ;;		None
 30701 ;; Return value:  Size  Location     Type
 30702 ;;                  1  [STACK] void 
 30703 ;; Registers used:
 30704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30705 ;; Tracked objects:
 30706 ;;		On entry : 3F/3F
 30707 ;;		On exit  : 3F/39
 30708 ;;		Unchanged: 0/0
 30709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30714 ;;Total ram usage:        0 bytes
 30715 ;; Hardware stack levels used:    1
 30716 ;; Hardware stack levels required when called:   16
 30717 ;; This function calls:
 30718 ;;		_INT0_SetInterruptHandler
 30719 ;;		_INT1_SetInterruptHandler
 30720 ;; This function is called by:
 30721 ;;		_SYSTEM_Initialize
 30722 ;; This function uses a reentrant model
 30723 ;;
 30724                           
 30725                           	psect	text127
 30726  01B5A4                     __ptext127:
 30727                           	opt callstack 0
 30728  01B5A4                     _EXT_INT_Initialize:
 30729                           	opt callstack 13
 30730                           
 30731                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30732                           
 30733                           ; BSR set to: 62
 30734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30735                           ;incstack = 0
 30736  01B5A4  0139               	movlb	57	; () banked
 30737  01B5A6  91A1               	bcf	161,0,b	;volatile
 30738                           
 30739                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30740  01B5A8  90D2               	bcf	210,0,c	;volatile
 30741                           
 30742                           ; BSR set to: 57
 30743                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30744  01B5AA  0EFA               	movlw	low _INT0_DefaultInterruptHandler
 30745  01B5AC  6EE6               	movwf	postinc1,c
 30746  01B5AE  0EBD               	movlw	high _INT0_DefaultInterruptHandler
 30747  01B5B0  6EE6               	movwf	postinc1,c
 30748  01B5B2  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30749  01B5B4  6EE6               	movwf	postinc1,c
 30750  01B5B6  EC97  F0DC         	call	_INT0_SetInterruptHandler	;wreg free
 30751                           
 30752                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30753  01B5BA  0139               	movlb	57	; () banked
 30754  01B5BC  8191               	bsf	145,0,b	;volatile
 30755                           
 30756                           ; BSR set to: 57
 30757                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30758  01B5BE  91A5               	bcf	165,0,b	;volatile
 30759                           
 30760                           ; BSR set to: 57
 30761                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30762  01B5C0  92D2               	bcf	210,1,c	;volatile
 30763                           
 30764                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30765  01B5C2  0EF6               	movlw	low _INT1_DefaultInterruptHandler
 30766  01B5C4  6EE6               	movwf	postinc1,c
 30767  01B5C6  0EBD               	movlw	high _INT1_DefaultInterruptHandler
 30768  01B5C8  6EE6               	movwf	postinc1,c
 30769  01B5CA  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30770  01B5CC  6EE6               	movwf	postinc1,c
 30771  01B5CE  EC83  F0DC         	call	_INT1_SetInterruptHandler	;wreg free
 30772                           
 30773                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30774  01B5D2  0139               	movlb	57	; () banked
 30775  01B5D4  8195               	bsf	149,0,b	;volatile
 30776                           
 30777                           ; BSR set to: 57
 30778                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30779  01B5D6  0012               	return		;funcret
 30780  01B5D8                     __end_of_EXT_INT_Initialize:
 30781                           	opt callstack 0
 30782                           
 30783 ;; *************** function _INT1_SetInterruptHandler *****************
 30784 ;; Defined at:
 30785 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30786 ;; Parameters:    Size  Location     Type
 30787 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30788 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30789 ;; Auto vars:     Size  Location     Type
 30790 ;;		None
 30791 ;; Return value:  Size  Location     Type
 30792 ;;                  1  [STACK] void 
 30793 ;; Registers used:
 30794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30795 ;; Tracked objects:
 30796 ;;		On entry : 3F/39
 30797 ;;		On exit  : 0/0
 30798 ;;		Unchanged: 0/0
 30799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30804 ;;Total ram usage:        0 bytes
 30805 ;; Hardware stack levels used:    1
 30806 ;; Hardware stack levels required when called:   15
 30807 ;; This function calls:
 30808 ;;		Nothing
 30809 ;; This function is called by:
 30810 ;;		_EXT_INT_Initialize
 30811 ;;		_start_switch_handler
 30812 ;; This function uses a reentrant model
 30813 ;;
 30814                           
 30815                           	psect	text128
 30816  01B906                     __ptext128:
 30817                           	opt callstack 0
 30818  01B906                     _INT1_SetInterruptHandler:
 30819                           	opt callstack 14
 30820                           
 30821                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30822                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30823                           
 30824                           ; BSR set to: 57
 30825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30826                           ;incstack = 0
 30827  01B906  50E1               	movf	fsr1l,w,c
 30828  01B908  0FFD               	addlw	-3
 30829  01B90A  6ED9               	movwf	fsr2l,c
 30830  01B90C  50E2               	movf	fsr1h,w,c
 30831  01B90E  6EDA               	movwf	fsr2h,c
 30832  01B910  0EFF               	movlw	255
 30833  01B912  22DA               	addwfc	fsr2h,f,c
 30834  01B914  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30835  01B91A  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30836  01B920  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30837                           
 30838                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30839  01B926  52E5               	movf	postdec1,f,c
 30840  01B928  52E5               	movf	postdec1,f,c
 30841  01B92A  52E5               	movf	postdec1,f,c
 30842  01B92C  0012               	return		;funcret
 30843  01B92E                     __end_of_INT1_SetInterruptHandler:
 30844                           	opt callstack 0
 30845                           
 30846 ;; *************** function _INT0_SetInterruptHandler *****************
 30847 ;; Defined at:
 30848 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30849 ;; Parameters:    Size  Location     Type
 30850 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30851 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30852 ;; Auto vars:     Size  Location     Type
 30853 ;;		None
 30854 ;; Return value:  Size  Location     Type
 30855 ;;                  1  [STACK] void 
 30856 ;; Registers used:
 30857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30858 ;; Tracked objects:
 30859 ;;		On entry : 3F/39
 30860 ;;		On exit  : 0/0
 30861 ;;		Unchanged: 0/0
 30862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30867 ;;Total ram usage:        0 bytes
 30868 ;; Hardware stack levels used:    1
 30869 ;; Hardware stack levels required when called:   15
 30870 ;; This function calls:
 30871 ;;		Nothing
 30872 ;; This function is called by:
 30873 ;;		_EXT_INT_Initialize
 30874 ;; This function uses a reentrant model
 30875 ;;
 30876                           
 30877                           	psect	text129
 30878  01B92E                     __ptext129:
 30879                           	opt callstack 0
 30880  01B92E                     _INT0_SetInterruptHandler:
 30881                           	opt callstack 13
 30882                           
 30883                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30884                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30885                           
 30886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30887                           ;incstack = 0
 30888  01B92E  50E1               	movf	fsr1l,w,c
 30889  01B930  0FFD               	addlw	-3
 30890  01B932  6ED9               	movwf	fsr2l,c
 30891  01B934  50E2               	movf	fsr1h,w,c
 30892  01B936  6EDA               	movwf	fsr2h,c
 30893  01B938  0EFF               	movlw	255
 30894  01B93A  22DA               	addwfc	fsr2h,f,c
 30895  01B93C  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30896  01B942  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30897  01B948  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30898                           
 30899                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30900  01B94E  52E5               	movf	postdec1,f,c
 30901  01B950  52E5               	movf	postdec1,f,c
 30902  01B952  52E5               	movf	postdec1,f,c
 30903  01B954  0012               	return		;funcret
 30904  01B956                     __end_of_INT0_SetInterruptHandler:
 30905                           	opt callstack 0
 30906                           
 30907 ;; *************** function _DMA2_Initialize *****************
 30908 ;; Defined at:
 30909 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30910 ;; Parameters:    Size  Location     Type
 30911 ;;		None
 30912 ;; Auto vars:     Size  Location     Type
 30913 ;;		None
 30914 ;; Return value:  Size  Location     Type
 30915 ;;                  1  [STACK] void 
 30916 ;; Registers used:
 30917 ;;		wreg, status,2
 30918 ;; Tracked objects:
 30919 ;;		On entry : 3F/3D
 30920 ;;		On exit  : 3F/3B
 30921 ;;		Unchanged: 0/0
 30922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30927 ;;Total ram usage:        0 bytes
 30928 ;; Hardware stack levels used:    1
 30929 ;; Hardware stack levels required when called:   15
 30930 ;; This function calls:
 30931 ;;		Nothing
 30932 ;; This function is called by:
 30933 ;;		_SYSTEM_Initialize
 30934 ;; This function uses a reentrant model
 30935 ;;
 30936                           
 30937                           	psect	text130
 30938  01AEC2                     __ptext130:
 30939                           	opt callstack 0
 30940  01AEC2                     _DMA2_Initialize:
 30941                           	opt callstack 14
 30942                           
 30943                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30944                           
 30945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30946                           ;incstack = 0
 30947  01AEC2  0E00               	movlw	0
 30948  01AEC4  013B               	movlb	59	; () banked
 30949  01AEC6  6FD9               	movwf	217,b	;volatile
 30950  01AEC8  0E10               	movlw	16
 30951  01AECA  6FDA               	movwf	218,b	;volatile
 30952  01AECC  0E00               	movlw	0
 30953  01AECE  6FDB               	movwf	219,b	;volatile
 30954                           
 30955                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30956  01AED0  0E3F               	movlw	63
 30957  01AED2  6FD1               	movwf	209,b	;volatile
 30958  01AED4  0EBB               	movlw	187
 30959  01AED6  6FD0               	movwf	208,b	;volatile
 30960                           
 30961                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30962  01AED8  0E03               	movlw	3
 30963  01AEDA  6FDD               	movwf	221,b	;volatile
 30964                           
 30965                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30966  01AEDC  0E00               	movlw	0
 30967  01AEDE  6FD8               	movwf	216,b	;volatile
 30968  01AEE0  0E01               	movlw	1
 30969  01AEE2  6FD7               	movwf	215,b	;volatile
 30970                           
 30971                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30972  01AEE4  0E00               	movlw	0
 30973  01AEE6  6FCF               	movwf	207,b	;volatile
 30974  01AEE8  0E01               	movlw	1
 30975  01AEEA  6FCE               	movwf	206,b	;volatile
 30976                           
 30977                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30978  01AEEC  0E1C               	movlw	28
 30979  01AEEE  6FDF               	movwf	223,b	;volatile
 30980                           
 30981                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30982  01AEF0  0E3D               	movlw	61
 30983  01AEF2  6FDE               	movwf	222,b	;volatile
 30984                           
 30985                           ; BSR set to: 59
 30986                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30987  01AEF4  0139               	movlb	57	; () banked
 30988  01AEF6  97A5               	bcf	165,3,b	;volatile
 30989                           
 30990                           ; BSR set to: 57
 30991                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30992  01AEF8  95A5               	bcf	165,2,b	;volatile
 30993                           
 30994                           ; BSR set to: 57
 30995                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30996  01AEFA  9BA5               	bcf	165,5,b	;volatile
 30997                           
 30998                           ; BSR set to: 57
 30999                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31000  01AEFC  99A5               	bcf	165,4,b	;volatile
 31001                           
 31002                           ; BSR set to: 57
 31003                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31004  01AEFE  9795               	bcf	149,3,b	;volatile
 31005                           
 31006                           ; BSR set to: 57
 31007                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31008  01AF00  9595               	bcf	149,2,b	;volatile
 31009                           
 31010                           ; BSR set to: 57
 31011                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31012  01AF02  9B95               	bcf	149,5,b	;volatile
 31013                           
 31014                           ; BSR set to: 57
 31015                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31016  01AF04  9995               	bcf	149,4,b	;volatile
 31017  01AF06  9ED2               	bcf	16338,7,c	;# 
 31018  01AF08  0139               	banksel	14831	;# 
 31019  01AF0A  0E55               	movlw	85	;# 
 31020  01AF0C  6FEF               	movwf	14831,b	;# 
 31021  01AF0E  0EAA               	movlw	170	;# 
 31022  01AF10  6FEF               	movwf	14831,b	;# 
 31023  01AF12  81EF               	bsf	14831,0,b	;# 
 31024  01AF14  8ED2               	bsf	16338,7,c	;# 
 31025                           
 31026                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31027  01AF16  013B               	movlb	59	; () banked
 31028  01AF18  6BDC               	clrf	220,b	;volatile
 31029                           
 31030                           ; BSR set to: 59
 31031                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31032  01AF1A  0012               	return		;funcret
 31033  01AF1C                     __end_of_DMA2_Initialize:
 31034                           	opt callstack 0
 31035                           
 31036 ;; *************** function _DMA1_Initialize *****************
 31037 ;; Defined at:
 31038 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31039 ;; Parameters:    Size  Location     Type
 31040 ;;		None
 31041 ;; Auto vars:     Size  Location     Type
 31042 ;;		None
 31043 ;; Return value:  Size  Location     Type
 31044 ;;                  1  [STACK] void 
 31045 ;; Registers used:
 31046 ;;		wreg, status,2
 31047 ;; Tracked objects:
 31048 ;;		On entry : 3F/3B
 31049 ;;		On exit  : 3F/3B
 31050 ;;		Unchanged: 0/0
 31051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31056 ;;Total ram usage:        0 bytes
 31057 ;; Hardware stack levels used:    1
 31058 ;; Hardware stack levels required when called:   15
 31059 ;; This function calls:
 31060 ;;		Nothing
 31061 ;; This function is called by:
 31062 ;;		_SYSTEM_Initialize
 31063 ;; This function uses a reentrant model
 31064 ;;
 31065                           
 31066                           	psect	text131
 31067  01AB3A                     __ptext131:
 31068                           	opt callstack 0
 31069  01AB3A                     _DMA1_Initialize:
 31070                           	opt callstack 14
 31071                           
 31072                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31073                           
 31074                           ; BSR set to: 59
 31075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31076                           ;incstack = 0
 31077  01AB3A  0E00               	movlw	0
 31078  01AB3C  013B               	movlb	59	; () banked
 31079  01AB3E  6FF9               	movwf	249,b	;volatile
 31080  01AB40  0E10               	movlw	16
 31081  01AB42  6FFA               	movwf	250,b	;volatile
 31082  01AB44  0E00               	movlw	0
 31083  01AB46  6FFB               	movwf	251,b	;volatile
 31084                           
 31085                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31086  01AB48  0E3D               	movlw	61
 31087  01AB4A  6FF1               	movwf	241,b	;volatile
 31088  01AB4C  0E11               	movlw	17
 31089  01AB4E  6FF0               	movwf	240,b	;volatile
 31090                           
 31091                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31092  01AB50  0E03               	movlw	3
 31093  01AB52  6FFD               	movwf	253,b	;volatile
 31094                           
 31095                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31096  01AB54  0E00               	movlw	0
 31097  01AB56  6FF8               	movwf	248,b	;volatile
 31098  01AB58  0E01               	movlw	1
 31099  01AB5A  6FF7               	movwf	247,b	;volatile
 31100                           
 31101                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31102  01AB5C  0E00               	movlw	0
 31103  01AB5E  6FEF               	movwf	239,b	;volatile
 31104  01AB60  0E01               	movlw	1
 31105  01AB62  6FEE               	movwf	238,b	;volatile
 31106                           
 31107                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31108  01AB64  0E15               	movlw	21
 31109  01AB66  6FFF               	movwf	255,b	;volatile
 31110                           
 31111                           ; BSR set to: 59
 31112                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31113  01AB68  6BFE               	clrf	254,b	;volatile
 31114                           
 31115                           ; BSR set to: 59
 31116                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31117  01AB6A  0139               	movlb	57	; () banked
 31118  01AB6C  93A2               	bcf	162,1,b	;volatile
 31119                           
 31120                           ; BSR set to: 57
 31121                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31122  01AB6E  91A2               	bcf	162,0,b	;volatile
 31123                           
 31124                           ; BSR set to: 57
 31125                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31126  01AB70  97A2               	bcf	162,3,b	;volatile
 31127                           
 31128                           ; BSR set to: 57
 31129                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31130  01AB72  95A2               	bcf	162,2,b	;volatile
 31131                           
 31132                           ; BSR set to: 57
 31133                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31134  01AB74  8392               	bsf	146,1,b	;volatile
 31135                           
 31136                           ; BSR set to: 57
 31137                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31138  01AB76  8192               	bsf	146,0,b	;volatile
 31139                           
 31140                           ; BSR set to: 57
 31141                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31142  01AB78  8792               	bsf	146,3,b	;volatile
 31143                           
 31144                           ; BSR set to: 57
 31145                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31146  01AB7A  8592               	bsf	146,2,b	;volatile
 31147                           
 31148                           ; BSR set to: 57
 31149                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31150  01AB7C  6BF1               	clrf	241,b	;volatile
 31151                           
 31152                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31153  01AB7E  0E01               	movlw	1
 31154  01AB80  6FF2               	movwf	242,b	;volatile
 31155                           
 31156                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31157  01AB82  0E04               	movlw	4
 31158  01AB84  6FF3               	movwf	243,b	;volatile
 31159                           
 31160                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31161  01AB86  0E02               	movlw	2
 31162  01AB88  6FF4               	movwf	244,b	;volatile
 31163                           
 31164                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31165  01AB8A  0E03               	movlw	3
 31166  01AB8C  6FF7               	movwf	247,b	;volatile
 31167  01AB8E  9ED2               	bcf	16338,7,c	;# 
 31168  01AB90  0139               	banksel	14831	;# 
 31169  01AB92  0E55               	movlw	85	;# 
 31170  01AB94  6FEF               	movwf	14831,b	;# 
 31171  01AB96  0EAA               	movlw	170	;# 
 31172  01AB98  6FEF               	movwf	14831,b	;# 
 31173  01AB9A  81EF               	bsf	14831,0,b	;# 
 31174  01AB9C  8ED2               	bsf	16338,7,c	;# 
 31175                           
 31176                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31177  01AB9E  013B               	movlb	59	; () banked
 31178  01ABA0  6BFC               	clrf	252,b	;volatile
 31179                           
 31180                           ; BSR set to: 59
 31181                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31182  01ABA2  0012               	return		;funcret
 31183  01ABA4                     __end_of_DMA1_Initialize:
 31184                           	opt callstack 0
 31185                           
 31186 ;; *************** function _CLKREF_Initialize *****************
 31187 ;; Defined at:
 31188 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31189 ;; Parameters:    Size  Location     Type
 31190 ;;		None
 31191 ;; Auto vars:     Size  Location     Type
 31192 ;;		None
 31193 ;; Return value:  Size  Location     Type
 31194 ;;                  1  [STACK] void 
 31195 ;; Registers used:
 31196 ;;		wreg, status,2
 31197 ;; Tracked objects:
 31198 ;;		On entry : 3F/3B
 31199 ;;		On exit  : 3F/3C
 31200 ;;		Unchanged: 0/0
 31201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31206 ;;Total ram usage:        0 bytes
 31207 ;; Hardware stack levels used:    1
 31208 ;; Hardware stack levels required when called:   15
 31209 ;; This function calls:
 31210 ;;		Nothing
 31211 ;; This function is called by:
 31212 ;;		_SYSTEM_Initialize
 31213 ;; This function uses a reentrant model
 31214 ;;
 31215                           
 31216                           	psect	text132
 31217  01BD76                     __ptext132:
 31218                           	opt callstack 0
 31219  01BD76                     _CLKREF_Initialize:
 31220                           	opt callstack 14
 31221                           
 31222                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31223                           
 31224                           ; BSR set to: 59
 31225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31226                           ;incstack = 0
 31227  01BD76  013C               	movlb	60	; () banked
 31228  01BD78  6BE6               	clrf	230,b	;volatile
 31229                           
 31230                           ; BSR set to: 60
 31231                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31232  01BD7A  0E94               	movlw	148
 31233  01BD7C  6FE5               	movwf	229,b	;volatile
 31234                           
 31235                           ; BSR set to: 60
 31236                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31237  01BD7E  0012               	return		;funcret
 31238  01BD80                     __end_of_CLKREF_Initialize:
 31239                           	opt callstack 0
 31240                           
 31241 ;; *************** function _ADCC_Initialize *****************
 31242 ;; Defined at:
 31243 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31244 ;; Parameters:    Size  Location     Type
 31245 ;;		None
 31246 ;; Auto vars:     Size  Location     Type
 31247 ;;		None
 31248 ;; Return value:  Size  Location     Type
 31249 ;;                  1  [STACK] void 
 31250 ;; Registers used:
 31251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31252 ;; Tracked objects:
 31253 ;;		On entry : 3F/3E
 31254 ;;		On exit  : 0/0
 31255 ;;		Unchanged: 0/0
 31256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31261 ;;Total ram usage:        0 bytes
 31262 ;; Hardware stack levels used:    1
 31263 ;; Hardware stack levels required when called:   16
 31264 ;; This function calls:
 31265 ;;		_ADCC_SetADIInterruptHandler
 31266 ;;		_ADCC_SetADTIInterruptHandler
 31267 ;; This function is called by:
 31268 ;;		_SYSTEM_Initialize
 31269 ;; This function uses a reentrant model
 31270 ;;
 31271                           
 31272                           	psect	text133
 31273  01ABA4                     __ptext133:
 31274                           	opt callstack 0
 31275  01ABA4                     _ADCC_Initialize:
 31276                           	opt callstack 13
 31277                           
 31278                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31279                           
 31280                           ; BSR set to: 60
 31281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31282                           ;incstack = 0
 31283  01ABA4  013E               	movlb	62	; () banked
 31284  01ABA6  6BDE               	clrf	222,b	;volatile
 31285                           
 31286                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31287  01ABA8  6BDF               	clrf	223,b	;volatile
 31288                           
 31289                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31290  01ABAA  6BE0               	clrf	224,b	;volatile
 31291                           
 31292                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31293  01ABAC  6BE1               	clrf	225,b	;volatile
 31294                           
 31295                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31296  01ABAE  6BE4               	clrf	228,b	;volatile
 31297                           
 31298                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31299  01ABB0  6BE5               	clrf	229,b	;volatile
 31300                           
 31301                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31302  01ABB2  6BEA               	clrf	234,b	;volatile
 31303                           
 31304                           ; BSR set to: 62
 31305                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31306  01ABB4  0E40               	movlw	64
 31307  01ABB6  6FEC               	movwf	236,b	;volatile
 31308                           
 31309                           ; BSR set to: 62
 31310                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31311  01ABB8  6BF1               	clrf	241,b	;volatile
 31312                           
 31313                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31314  01ABBA  0E20               	movlw	32
 31315  01ABBC  6FF3               	movwf	243,b	;volatile
 31316                           
 31317                           ; BSR set to: 62
 31318                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31319  01ABBE  6BF4               	clrf	244,b	;volatile
 31320                           
 31321                           ; BSR set to: 62
 31322                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31323  01ABC0  6BF5               	clrf	245,b	;volatile
 31324                           
 31325                           ; BSR set to: 62
 31326                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31327  01ABC2  6BF6               	clrf	246,b	;volatile
 31328                           
 31329                           ; BSR set to: 62
 31330                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31331  01ABC4  6BF7               	clrf	247,b	;volatile
 31332                           
 31333                           ; BSR set to: 62
 31334                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31335  01ABC6  6BF9               	clrf	249,b	;volatile
 31336                           
 31337                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31338  01ABC8  0E5B               	movlw	91
 31339  01ABCA  6FFA               	movwf	250,b	;volatile
 31340                           
 31341                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31342  01ABCC  0E27               	movlw	39
 31343  01ABCE  6FFB               	movwf	251,b	;volatile
 31344                           
 31345                           ; BSR set to: 62
 31346                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31347  01ABD0  6BFC               	clrf	252,b	;volatile
 31348                           
 31349                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31350  01ABD2  0E02               	movlw	2
 31351  01ABD4  6FFD               	movwf	253,b	;volatile
 31352                           
 31353                           ; BSR set to: 62
 31354                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31355  01ABD6  6BFE               	clrf	254,b	;volatile
 31356                           
 31357                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31358  01ABD8  0E07               	movlw	7
 31359  01ABDA  6FFF               	movwf	255,b	;volatile
 31360                           
 31361                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31362  01ABDC  0E84               	movlw	132
 31363  01ABDE  6FF8               	movwf	248,b	;volatile
 31364                           
 31365                           ; BSR set to: 62
 31366                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31367  01ABE0  0139               	movlb	57	; () banked
 31368  01ABE2  95A1               	bcf	161,2,b	;volatile
 31369                           
 31370                           ; BSR set to: 57
 31371                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31372  01ABE4  8591               	bsf	145,2,b	;volatile
 31373                           
 31374                           ; BSR set to: 57
 31375                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31376  01ABE6  0EFC               	movlw	low _ADCC_DefaultInterruptHandler
 31377  01ABE8  6EE6               	movwf	postinc1,c
 31378  01ABEA  0EBD               	movlw	high _ADCC_DefaultInterruptHandler
 31379  01ABEC  6EE6               	movwf	postinc1,c
 31380  01ABEE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31381  01ABF0  6EE6               	movwf	postinc1,c
 31382  01ABF2  ECBF  F0DC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31383                           
 31384                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31385  01ABF6  0139               	movlb	57	; () banked
 31386  01ABF8  97A1               	bcf	161,3,b	;volatile
 31387                           
 31388                           ; BSR set to: 57
 31389                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31390  01ABFA  8791               	bsf	145,3,b	;volatile
 31391                           
 31392                           ; BSR set to: 57
 31393                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31394  01ABFC  0EFC               	movlw	low _ADCC_DefaultInterruptHandler
 31395  01ABFE  6EE6               	movwf	postinc1,c
 31396  01AC00  0EBD               	movlw	high _ADCC_DefaultInterruptHandler
 31397  01AC02  6EE6               	movwf	postinc1,c
 31398  01AC04  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31399  01AC06  6EE6               	movwf	postinc1,c
 31400  01AC08  ECAB  F0DC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31401                           
 31402                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31403  01AC0C  0012               	return		;funcret
 31404  01AC0E                     __end_of_ADCC_Initialize:
 31405                           	opt callstack 0
 31406                           
 31407 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31408 ;; Defined at:
 31409 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31410 ;; Parameters:    Size  Location     Type
 31411 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31412 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31413 ;; Auto vars:     Size  Location     Type
 31414 ;;		None
 31415 ;; Return value:  Size  Location     Type
 31416 ;;                  1  [STACK] void 
 31417 ;; Registers used:
 31418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31419 ;; Tracked objects:
 31420 ;;		On entry : 0/1
 31421 ;;		On exit  : 0/0
 31422 ;;		Unchanged: 0/0
 31423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31428 ;;Total ram usage:        0 bytes
 31429 ;; Hardware stack levels used:    1
 31430 ;; Hardware stack levels required when called:   15
 31431 ;; This function calls:
 31432 ;;		Nothing
 31433 ;; This function is called by:
 31434 ;;		_ADCC_Initialize
 31435 ;;		_start_adc_scan
 31436 ;; This function uses a reentrant model
 31437 ;;
 31438                           
 31439                           	psect	text134
 31440  01B956                     __ptext134:
 31441                           	opt callstack 0
 31442  01B956                     _ADCC_SetADTIInterruptHandler:
 31443                           	opt callstack 14
 31444                           
 31445                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31446                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31447                           
 31448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31449                           ;incstack = 0
 31450  01B956  50E1               	movf	fsr1l,w,c
 31451  01B958  0FFD               	addlw	-3
 31452  01B95A  6ED9               	movwf	fsr2l,c
 31453  01B95C  50E2               	movf	fsr1h,w,c
 31454  01B95E  6EDA               	movwf	fsr2h,c
 31455  01B960  0EFF               	movlw	255
 31456  01B962  22DA               	addwfc	fsr2h,f,c
 31457  01B964  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31458  01B96A  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31459  01B970  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31460                           
 31461                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31462  01B976  52E5               	movf	postdec1,f,c
 31463  01B978  52E5               	movf	postdec1,f,c
 31464  01B97A  52E5               	movf	postdec1,f,c
 31465  01B97C  0012               	return		;funcret
 31466  01B97E                     __end_of_ADCC_SetADTIInterruptHandler:
 31467                           	opt callstack 0
 31468                           
 31469 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31470 ;; Defined at:
 31471 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31472 ;; Parameters:    Size  Location     Type
 31473 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31474 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31475 ;; Auto vars:     Size  Location     Type
 31476 ;;		None
 31477 ;; Return value:  Size  Location     Type
 31478 ;;                  1  [STACK] void 
 31479 ;; Registers used:
 31480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31481 ;; Tracked objects:
 31482 ;;		On entry : 7/1
 31483 ;;		On exit  : 0/0
 31484 ;;		Unchanged: 0/0
 31485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31490 ;;Total ram usage:        0 bytes
 31491 ;; Hardware stack levels used:    1
 31492 ;; Hardware stack levels required when called:   15
 31493 ;; This function calls:
 31494 ;;		Nothing
 31495 ;; This function is called by:
 31496 ;;		_ADCC_Initialize
 31497 ;;		_start_adc_scan
 31498 ;; This function uses a reentrant model
 31499 ;;
 31500                           
 31501                           	psect	text135
 31502  01B97E                     __ptext135:
 31503                           	opt callstack 0
 31504  01B97E                     _ADCC_SetADIInterruptHandler:
 31505                           	opt callstack 14
 31506                           
 31507                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31508                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31509                           
 31510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31511                           ;incstack = 0
 31512  01B97E  50E1               	movf	fsr1l,w,c
 31513  01B980  0FFD               	addlw	-3
 31514  01B982  6ED9               	movwf	fsr2l,c
 31515  01B984  50E2               	movf	fsr1h,w,c
 31516  01B986  6EDA               	movwf	fsr2h,c
 31517  01B988  0EFF               	movlw	255
 31518  01B98A  22DA               	addwfc	fsr2h,f,c
 31519  01B98C  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31520  01B992  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31521  01B998  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31522                           
 31523                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31524  01B99E  52E5               	movf	postdec1,f,c
 31525  01B9A0  52E5               	movf	postdec1,f,c
 31526  01B9A2  52E5               	movf	postdec1,f,c
 31527  01B9A4  0012               	return		;funcret
 31528  01B9A6                     __end_of_ADCC_SetADIInterruptHandler:
 31529                           	opt callstack 0
 31530                           
 31531 ;; *************** function _INT1_ISR *****************
 31532 ;; Defined at:
 31533 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31534 ;; Parameters:    Size  Location     Type
 31535 ;;		None
 31536 ;; Auto vars:     Size  Location     Type
 31537 ;;		None
 31538 ;; Return value:  Size  Location     Type
 31539 ;;                  1    wreg      void 
 31540 ;; Registers used:
 31541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31542 ;; Tracked objects:
 31543 ;;		On entry : 0/0
 31544 ;;		On exit  : 0/0
 31545 ;;		Unchanged: 0/0
 31546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31549 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31551 ;;Total ram usage:        4 bytes
 31552 ;; Hardware stack levels used:    1
 31553 ;; Hardware stack levels required when called:    5
 31554 ;; This function calls:
 31555 ;;		_INT1_CallBack
 31556 ;; This function is called by:
 31557 ;;		Interrupt level 1
 31558 ;; This function uses a non-reentrant model
 31559 ;;
 31560                           
 31561                           	psect	text136
 31562  01B41C                     __ptext136:
 31563                           	opt callstack 0
 31564  01B41C                     _INT1_ISR:
 31565                           	opt callstack 12
 31566                           
 31567                           ;incstack = 0
 31568  01B41C  006F FF60  F027    	movff	status,??_INT1_ISR
 31569  01B422  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31570  01B428  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31571  01B42E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31572  01B434  EE16  F0AE         	lfsr	1,___intlo_sp
 31573                           
 31574                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31575  01B438  0139               	movlb	57	; () banked
 31576  01B43A  91A5               	bcf	165,0,b	;volatile
 31577                           
 31578                           ; BSR set to: 57
 31579                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31580  01B43C  EC22  F0DD         	call	_INT1_CallBack	;wreg free
 31581  01B440  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31582  01B446  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31583  01B44C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31584  01B452  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31585  01B458  0011               	retfie		f
 31586  01B45A                     __end_of_INT1_ISR:
 31587                           	opt callstack 0
 31588                           
 31589 ;; *************** function _INT1_CallBack *****************
 31590 ;; Defined at:
 31591 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31592 ;; Parameters:    Size  Location     Type
 31593 ;;		None
 31594 ;; Auto vars:     Size  Location     Type
 31595 ;;		None
 31596 ;; Return value:  Size  Location     Type
 31597 ;;                  1  [STACK] void 
 31598 ;; Registers used:
 31599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31600 ;; Tracked objects:
 31601 ;;		On entry : 3F/39
 31602 ;;		On exit  : 0/0
 31603 ;;		Unchanged: 0/0
 31604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;Total ram usage:        0 bytes
 31610 ;; Hardware stack levels used:    1
 31611 ;; Hardware stack levels required when called:    4
 31612 ;; This function calls:
 31613 ;;		Absolute function
 31614 ;;		_INT1_DefaultInterruptHandler
 31615 ;;		_switch_handler
 31616 ;; This function is called by:
 31617 ;;		_INT1_ISR
 31618 ;; This function uses a reentrant model
 31619 ;;
 31620                           
 31621                           	psect	text137
 31622  01BA44                     __ptext137:
 31623                           	opt callstack 0
 31624  01BA44                     _INT1_CallBack:
 31625                           	opt callstack 12
 31626                           
 31627                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31628                           
 31629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31630                           ;incstack = 0
 31631  01BA44  0100               	movlb	0	; () banked
 31632  01BA46  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31633  01BA48  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31634  01BA4A  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31635  01BA4C  B4D8               	btfsc	status,2,c
 31636  01BA4E  0012               	return	
 31637                           
 31638                           ; BSR set to: 0
 31639                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31640  01BA50  D801               	call	u991_28
 31641  01BA52  0012               	return	
 31642  01BA54                     u991_28:
 31643  01BA54  0005               	push	
 31644  01BA56  6EFA               	movwf	pclath,c
 31645  01BA58  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31646  01BA5A  6EFD               	movwf	tosl,c
 31647  01BA5C  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31648  01BA5E  6EFE               	movwf	tosh,c
 31649  01BA60  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31650  01BA62  6EFF               	movwf	tosu,c
 31651  01BA64  50FA               	movf	pclath,w,c
 31652  01BA66  0012               	return		;indir
 31653  01BA68                     __end_of_INT1_CallBack:
 31654                           	opt callstack 0
 31655                           
 31656 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31657 ;; Defined at:
 31658 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31659 ;; Parameters:    Size  Location     Type
 31660 ;;		None
 31661 ;; Auto vars:     Size  Location     Type
 31662 ;;		None
 31663 ;; Return value:  Size  Location     Type
 31664 ;;                  1  [STACK] void 
 31665 ;; Registers used:
 31666 ;;		None
 31667 ;; Tracked objects:
 31668 ;;		On entry : 3F/0
 31669 ;;		On exit  : 0/0
 31670 ;;		Unchanged: 0/0
 31671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31676 ;;Total ram usage:        0 bytes
 31677 ;; Hardware stack levels used:    1
 31678 ;; Hardware stack levels required when called:    3
 31679 ;; This function calls:
 31680 ;;		Nothing
 31681 ;; This function is called by:
 31682 ;;		_EXT_INT_Initialize
 31683 ;;		_INT1_CallBack
 31684 ;; This function uses a reentrant model
 31685 ;;
 31686                           
 31687                           	psect	text138
 31688  01BDF6                     __ptext138:
 31689                           	opt callstack 0
 31690  01BDF6                     _INT1_DefaultInterruptHandler:
 31691                           	opt callstack 12
 31692                           
 31693                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31694                           
 31695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31696                           ;incstack = 0
 31697  01BDF6  0012               	return		;funcret
 31698  01BDF8                     __end_of_INT1_DefaultInterruptHandler:
 31699                           	opt callstack 0
 31700                           
 31701 ;; *************** function _switch_handler *****************
 31702 ;; Defined at:
 31703 ;;		line 58 in file "dio.c"
 31704 ;; Parameters:    Size  Location     Type
 31705 ;;		None
 31706 ;; Auto vars:     Size  Location     Type
 31707 ;;  i               1  [STACK] unsigned char 
 31708 ;;  sw_value        1  [STACK] unsigned char 
 31709 ;; Return value:  Size  Location     Type
 31710 ;;                  1  [STACK] void 
 31711 ;; Registers used:
 31712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31713 ;; Tracked objects:
 31714 ;;		On entry : 3F/0
 31715 ;;		On exit  : 0/0
 31716 ;;		Unchanged: 0/0
 31717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31722 ;;Total ram usage:        0 bytes
 31723 ;; Hardware stack levels used:    1
 31724 ;; Hardware stack levels required when called:    3
 31725 ;; This function calls:
 31726 ;;		Nothing
 31727 ;; This function is called by:
 31728 ;;		_start_switch_handler
 31729 ;;		_INT1_CallBack
 31730 ;; This function uses a reentrant model
 31731 ;;
 31732                           
 31733                           	psect	text139
 31734  019114                     __ptext139:
 31735                           	opt callstack 0
 31736  019114                     _switch_handler:
 31737                           	opt callstack 0
 31738                           
 31739                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31740  019114  52E6               	movf	postinc1,f,c
 31741  019116  52E6               	movf	postinc1,f,c
 31742                           
 31743                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31744                           ;stkvar	_i @ sp[(-2)+0]
 31745                           
 31746                           ;incstack = 0
 31747  019118  0EFE               	movlw	-2
 31748  01911A  6AE3               	clrf	plusw1,c
 31749  01911C  9EBD               	bcf	189,7,c	;volatile
 31750  01911E  9ABF               	bcf	191,5,c	;volatile
 31751                           
 31752                           ;dio.c: 73:  __nop();
 31753  019120  F000               	nop	
 31754                           
 31755                           ;dio.c: 74:  __nop();
 31756  019122  F000               	nop	
 31757                           
 31758                           ;dio.c: 75:  __nop();
 31759  019124  F000               	nop	
 31760                           
 31761                           ;dio.c: 76:  __nop();
 31762  019126  F000               	nop	
 31763                           
 31764                           ;dio.c: 77:  __nop();
 31765  019128  F000               	nop	
 31766                           
 31767                           ;dio.c: 78:  __nop();
 31768  01912A  F000               	nop	
 31769  01912C  D019               	goto	l10443
 31770  01912E                     l10431:
 31771                           
 31772                           ;dio.c: 83:    sw_value = PORTFbits.RF3;
 31773  01912E  A6CF               	btfss	207,3,c	;volatile
 31774  019130  D011               	goto	u964_20
 31775  019132  D00D               	goto	u964_21
 31776  019134                     u961_28:
 31777                           
 31778                           ;stkvar	_sw_value @ sp[(-2)+1]
 31779  019134  0EFF               	movlw	-1
 31780  019136  0060  F033  FFE3   	movff	btemp+11,plusw1
 31781                           
 31782                           ;dio.c: 84:    break;
 31783  01913C  D027               	goto	l10445
 31784  01913E                     l10433:
 31785                           
 31786                           ;dio.c: 86:    sw_value = PORTFbits.RF2;
 31787  01913E  A4CF               	btfss	207,2,c	;volatile
 31788  019140  D009               	goto	u964_20
 31789  019142  D005               	goto	u964_21
 31790  019144                     l10435:
 31791                           
 31792                           ;dio.c: 89:    sw_value = PORTFbits.RF1;
 31793  019144  A2CF               	btfss	207,1,c	;volatile
 31794  019146  D006               	goto	u964_20
 31795  019148  D002               	goto	u964_21
 31796  01914A                     l10437:
 31797                           
 31798                           ;dio.c: 92:    sw_value = PORTFbits.RF0;
 31799  01914A  A0CF               	btfss	207,0,c	;volatile
 31800  01914C  D003               	goto	u964_20
 31801  01914E                     u964_21:
 31802  01914E  6A0C               	clrf	(btemp+11)^0,c
 31803  019150  2A0C               	incf	(btemp+11)^0,f,c
 31804  019152  D7F0               	goto	u961_28
 31805  019154                     u964_20:
 31806  019154  6A0C               	clrf	(btemp+11)^0,c
 31807  019156  D7EE               	goto	u961_28
 31808  019158                     l10439:
 31809                           
 31810                           ;dio.c: 95:    sw_value = 1;
 31811                           ;stkvar	_sw_value @ sp[(-2)+1]
 31812  019158  0EFF               	movlw	-1
 31813  01915A  6AE3               	clrf	plusw1,c
 31814  01915C  2AE3               	incf	plusw1,f,c
 31815                           
 31816                           ;dio.c: 96:    break;
 31817  01915E  D016               	goto	l10445
 31818  019160                     l10443:
 31819                           
 31820                           ;stkvar	_i @ sp[(-2)+0]
 31821  019160  0EFE               	movlw	-2
 31822  019162  50E3               	movf	plusw1,w,c
 31823  019164  6E0B               	movwf	(btemp+10)^0,c
 31824  019166  6A0C               	clrf	(btemp+11)^0,c
 31825                           
 31826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31827                           ; Switch size 1, requested type "simple"
 31828                           ; Number of cases is 1, Range of values is 0 to 0
 31829                           ; switch strategies available:
 31830                           ; Name         Instructions Cycles
 31831                           ; simple_byte            4     3 (average)
 31832                           ;	Chosen strategy is simple_byte
 31833  019168  500C               	movf	(btemp+11)^0,w,c
 31834  01916A  0A00               	xorlw	0	; case 0
 31835  01916C  A4D8               	btfss	status,2,c
 31836  01916E  D7F4               	goto	l10439
 31837                           
 31838                           ; Switch size 1, requested type "simple"
 31839                           ; Number of cases is 4, Range of values is 0 to 3
 31840                           ; switch strategies available:
 31841                           ; Name         Instructions Cycles
 31842                           ; simple_byte           13     7 (average)
 31843                           ;	Chosen strategy is simple_byte
 31844  019170  500B               	movf	(btemp+10)^0,w,c
 31845  019172  0A00               	xorlw	0	; case 0
 31846  019174  B4D8               	btfsc	status,2,c
 31847  019176  D7E9               	goto	l10437
 31848  019178  0A01               	xorlw	1	; case 1
 31849  01917A  B4D8               	btfsc	status,2,c
 31850  01917C  D7E3               	goto	l10435
 31851  01917E  0A03               	xorlw	3	; case 2
 31852  019180  B4D8               	btfsc	status,2,c
 31853  019182  D7DD               	goto	l10433
 31854  019184  0A01               	xorlw	1	; case 3
 31855  019186  B4D8               	btfsc	status,2,c
 31856  019188  D7D2               	goto	l10431
 31857  01918A  D7E6               	goto	l10439
 31858  01918C                     l10445:
 31859                           
 31860                           ;dio.c: 100:   if (sw_value) {
 31861                           ;stkvar	_sw_value @ sp[(-2)+1]
 31862  01918C  0EFF               	movlw	-1
 31863  01918E  50E3               	movf	plusw1,w,c
 31864  019190  B4D8               	btfsc	status,2,c
 31865  019192  D018               	goto	l10451
 31866                           
 31867                           ;dio.c: 101:    if (S.button[i].sw == SW_ON) {
 31868                           ;stkvar	_i @ sp[(-2)+0]
 31869  019194  0EFE               	movlw	-2
 31870  019196  50E3               	movf	plusw1,w,c
 31871  019198  0D05               	mullw	5
 31872  01919A  0E54               	movlw	low _S
 31873  01919C  24F3               	addwf	243,w,c
 31874  01919E  6ED9               	movwf	fsr2l,c
 31875  0191A0  0E02               	movlw	high _S
 31876  0191A2  20F4               	addwfc	prodh,w,c
 31877  0191A4  6EDA               	movwf	fsr2h,c
 31878  0191A6  04DE               	decf	postinc2,w,c
 31879  0191A8  A4D8               	btfss	status,2,c
 31880  0191AA  D049               	goto	l10459
 31881                           
 31882                           ;dio.c: 102:     S.button[i].sw = SW_OFF;
 31883                           ;stkvar	_i @ sp[(-2)+0]
 31884  0191AC  0EFE               	movlw	-2
 31885  0191AE  50E3               	movf	plusw1,w,c
 31886  0191B0  0D05               	mullw	5
 31887  0191B2  0E54               	movlw	low _S
 31888  0191B4  24F3               	addwf	243,w,c
 31889  0191B6  6ED9               	movwf	fsr2l,c
 31890  0191B8  0E02               	movlw	high _S
 31891  0191BA  20F4               	addwfc	prodh,w,c
 31892  0191BC  6EDA               	movwf	fsr2h,c
 31893  0191BE  0E00               	movlw	0
 31894  0191C0  6EDF               	movwf	indf2,c
 31895  0191C2  D03D               	goto	l10459
 31896  0191C4                     l10451:
 31897                           
 31898                           ;dio.c: 105:    if (S.button[i].sw == SW_OFF) {
 31899                           ;stkvar	_i @ sp[(-2)+0]
 31900  0191C4  0EFE               	movlw	-2
 31901  0191C6  50E3               	movf	plusw1,w,c
 31902  0191C8  0D05               	mullw	5
 31903  0191CA  0E54               	movlw	low _S
 31904  0191CC  24F3               	addwf	243,w,c
 31905  0191CE  6ED9               	movwf	fsr2l,c
 31906  0191D0  0E02               	movlw	high _S
 31907  0191D2  20F4               	addwfc	prodh,w,c
 31908  0191D4  6EDA               	movwf	fsr2h,c
 31909  0191D6  50DF               	movf	indf2,w,c
 31910  0191D8  A4D8               	btfss	status,2,c
 31911  0191DA  D031               	goto	l10459
 31912                           
 31913                           ;dio.c: 106:     S.button[i].sw = SW_ON;
 31914                           ;stkvar	_i @ sp[(-2)+0]
 31915  0191DC  0EFE               	movlw	-2
 31916  0191DE  50E3               	movf	plusw1,w,c
 31917  0191E0  0D05               	mullw	5
 31918  0191E2  0E54               	movlw	low _S
 31919  0191E4  24F3               	addwf	243,w,c
 31920  0191E6  6ED9               	movwf	fsr2l,c
 31921  0191E8  0E02               	movlw	high _S
 31922  0191EA  20F4               	addwfc	prodh,w,c
 31923  0191EC  6EDA               	movwf	fsr2h,c
 31924  0191EE  0E01               	movlw	1
 31925  0191F0  6EDF               	movwf	indf2,c
 31926                           
 31927                           ;dio.c: 107:     S.button[i].count = V.timerint_count;
 31928  0191F2  EE20  F1EB         	lfsr	2,_V+187	;volatile
 31929                           
 31930                           ;stkvar	_i @ sp[(-2)+0]
 31931  0191F6  0EFE               	movlw	-2
 31932  0191F8  50E3               	movf	plusw1,w,c
 31933  0191FA  0D05               	mullw	5
 31934  0191FC  0E55               	movlw	low (_S+1)
 31935  0191FE  24F3               	addwf	243,w,c
 31936  019200  6EE9               	movwf	fsr0l,c
 31937  019202  0E02               	movlw	high (_S+1)
 31938  019204  20F4               	addwfc	prodh,w,c
 31939  019206  6EEA               	movwf	fsr0h,c
 31940  019208  006F FF7B FFEE     	movff	postinc2,postinc0
 31941  01920E  006F FF7B FFEE     	movff	postinc2,postinc0
 31942  019214  006F FF7B FFEE     	movff	postinc2,postinc0
 31943  01921A  006F FF7B FFEE     	movff	postinc2,postinc0
 31944                           
 31945                           ;dio.c: 108:     S.sw_bitmap |= 1 << i;
 31946                           ;stkvar	_i @ sp[(-2)+0]
 31947  019220  0EFE               	movlw	-2
 31948  019222  006F FF8C  F00C    	movff	plusw1,btemp+11
 31949  019228  0E01               	movlw	1
 31950  01922A  6E0B               	movwf	(btemp+10)^0,c
 31951  01922C  2A0C               	incf	(btemp+11)^0,f,c
 31952  01922E  D002               	goto	u968_24
 31953  019230                     u968_25:
 31954  019230  90D8               	bcf	status,0,c
 31955  019232  360B               	rlcf	(btemp+10)^0,f,c
 31956  019234                     u968_24:
 31957  019234  2E0C               	decfsz	(btemp+11)^0,f,c
 31958  019236  D7FC               	goto	u968_25
 31959  019238  500B               	movf	(btemp+10)^0,w,c
 31960  01923A  0102               	movlb	2	; () banked
 31961  01923C  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31962  01923E                     l10459:
 31963                           
 31964                           ;dio.c: 111:  } while (++i < 4);
 31965                           ;stkvar	_i @ sp[(-2)+0]
 31966  01923E  0EFE               	movlw	-2
 31967  019240  2AE3               	incf	plusw1,f,c
 31968  019242  0EFE               	movlw	-2
 31969  019244  006F FF8C  F001    	movff	plusw1,btemp
 31970  01924A  0E03               	movlw	3
 31971  01924C  6401               	cpfsgt	btemp^0,c
 31972  01924E  D788               	goto	l10443
 31973                           
 31974                           ;dio.c: 120:  do { LATDbits.LATD7 = 1; } while(0);
 31975  019250  8EBD               	bsf	189,7,c	;volatile
 31976                           
 31977                           ;dio.c: 121:  do { LATFbits.LATF5 = 1; } while(0);
 31978  019252  8ABF               	bsf	191,5,c	;volatile
 31979                           
 31980                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31981  019254  52E5               	movf	postdec1,f,c
 31982  019256  52E5               	movf	postdec1,f,c
 31983  019258  0012               	return		;funcret
 31984  01925A                     __end_of_switch_handler:
 31985                           	opt callstack 0
 31986                           
 31987 ;; *************** function _TMR5_ISR *****************
 31988 ;; Defined at:
 31989 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 31990 ;; Parameters:    Size  Location     Type
 31991 ;;		None
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;		None
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      void 
 31996 ;; Registers used:
 31997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31998 ;; Tracked objects:
 31999 ;;		On entry : 0/0
 32000 ;;		On exit  : 3F/0
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32005 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32006 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32007 ;;Total ram usage:       15 bytes
 32008 ;; Hardware stack levels used:    1
 32009 ;; Hardware stack levels required when called:    9
 32010 ;; This function calls:
 32011 ;;		_TMR5_CallBack
 32012 ;;		_TMR5_WriteTimer
 32013 ;; This function is called by:
 32014 ;;		Interrupt level 1
 32015 ;; This function uses a non-reentrant model
 32016 ;;
 32017                           
 32018                           	psect	text140
 32019  019F10                     __ptext140:
 32020                           	opt callstack 0
 32021  019F10                     _TMR5_ISR:
 32022                           	opt callstack 8
 32023                           
 32024                           ;incstack = 0
 32025  019F10  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32026  019F16  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32027  019F1C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32028  019F22  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32029  019F28  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32030  019F2E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32031  019F34  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32032  019F3A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32033  019F40  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32034  019F46  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32035  019F4C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32036  019F52  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32037  019F58  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32038  019F5E  EE16  F0AE         	lfsr	1,___intlo_sp
 32039                           
 32040                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32041  019F62  0139               	movlb	57	; () banked
 32042  019F64  9DA8               	bcf	168,6,b	;volatile
 32043                           
 32044                           ; BSR set to: 57
 32045                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32046  019F66  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32047  019F6C  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32048  019F72  ECAE  F0D9         	call	_TMR5_WriteTimer	;wreg free
 32049                           
 32050                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32051  019F76  0101               	movlb	1	; () banked
 32052  019F78  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32053  019F7A  6E2B               	movwf	??_TMR5_ISR^0,c
 32054  019F7C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32055  019F7E  0E05               	movlw	5
 32056  019F80  262B               	addwf	??_TMR5_ISR^0,f,c
 32057  019F82  0E00               	movlw	0
 32058  019F84  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32059  019F86  0100               	movlb	0	; () banked
 32060  019F88  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32061  019F8A  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32062  019F8C  502B               	movf	??_TMR5_ISR^0,w,c
 32063  019F8E  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32064  019F90  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32065  019F92  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32066  019F94  A0D8               	btfss	status,0,c
 32067  019F96  D005               	goto	i1l1019
 32068                           
 32069                           ; BSR set to: 0
 32070                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32071  019F98  EC34  F0DD         	call	_TMR5_CallBack	;wreg free
 32072                           
 32073                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32074  019F9C  0100               	movlb	0	; () banked
 32075  019F9E  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32076  019FA0  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32077  019FA2                     i1l1019:
 32078                           
 32079                           ; BSR set to: 0
 32080  019FA2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32081  019FA8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32082  019FAE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32083  019FB4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32084  019FBA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32085  019FC0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32086  019FC6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32087  019FCC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32088  019FD2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32089  019FD8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32090  019FDE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32091  019FE4  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32092  019FEA  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32093  019FF0  0011               	retfie		f
 32094  019FF2                     __end_of_TMR5_ISR:
 32095                           	opt callstack 0
 32096                           
 32097 ;; *************** function _TMR5_WriteTimer *****************
 32098 ;; Defined at:
 32099 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32100 ;; Parameters:    Size  Location     Type
 32101 ;;  timerVal        2  [STACK] unsigned short 
 32102 ;; Auto vars:     Size  Location     Type
 32103 ;;		None
 32104 ;; Return value:  Size  Location     Type
 32105 ;;                  1  [STACK] void 
 32106 ;; Registers used:
 32107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32108 ;; Tracked objects:
 32109 ;;		On entry : 3F/39
 32110 ;;		On exit  : 0/0
 32111 ;;		Unchanged: 0/0
 32112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;Total ram usage:        0 bytes
 32118 ;; Hardware stack levels used:    1
 32119 ;; Hardware stack levels required when called:    3
 32120 ;; This function calls:
 32121 ;;		Nothing
 32122 ;; This function is called by:
 32123 ;;		_TMR5_ISR
 32124 ;; This function uses a reentrant model
 32125 ;;
 32126                           
 32127                           	psect	text141
 32128  01B35C                     __ptext141:
 32129                           	opt callstack 0
 32130  01B35C                     _TMR5_WriteTimer:
 32131                           	opt callstack 13
 32132                           
 32133                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32134                           
 32135                           ; BSR set to: 0
 32136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32137                           ;incstack = 0
 32138  01B35C  A49A               	btfss	154,2,c	;volatile
 32139  01B35E  D00F               	goto	l10639
 32140                           
 32141                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32142  01B360  909A               	bcf	154,0,c	;volatile
 32143                           
 32144                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32145                           ;stkvar	_timerVal @ sp[(0)+-2]
 32146  01B362  0EFF               	movlw	255
 32147  01B364  24E1               	addwf	fsr1l,w,c
 32148  01B366  6ED9               	movwf	fsr2l,c
 32149  01B368  0EFF               	movlw	255
 32150  01B36A  20E2               	addwfc	fsr1h,w,c
 32151  01B36C  6EDA               	movwf	fsr2h,c
 32152  01B36E  50DF               	movf	indf2,w,c
 32153  01B370  6E99               	movwf	153,c	;volatile
 32154                           
 32155                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32156                           ;stkvar	_timerVal @ sp[(0)+-2]
 32157  01B372  0EFE               	movlw	-2
 32158  01B374  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32159                           
 32160                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32161  01B37A  809A               	bsf	154,0,c	;volatile
 32162                           
 32163                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32164  01B37C  D00C               	goto	l1002
 32165  01B37E                     l10639:
 32166                           
 32167                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32168                           ;stkvar	_timerVal @ sp[(0)+-2]
 32169  01B37E  0EFF               	movlw	255
 32170  01B380  24E1               	addwf	fsr1l,w,c
 32171  01B382  6ED9               	movwf	fsr2l,c
 32172  01B384  0EFF               	movlw	255
 32173  01B386  20E2               	addwfc	fsr1h,w,c
 32174  01B388  6EDA               	movwf	fsr2h,c
 32175  01B38A  50DF               	movf	indf2,w,c
 32176  01B38C  6E99               	movwf	153,c	;volatile
 32177                           
 32178                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32179                           ;stkvar	_timerVal @ sp[(0)+-2]
 32180  01B38E  0EFE               	movlw	-2
 32181  01B390  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32182  01B396                     l1002:
 32183                           
 32184                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32185  01B396  52E5               	movf	postdec1,f,c
 32186  01B398  52E5               	movf	postdec1,f,c
 32187  01B39A  0012               	return		;funcret
 32188  01B39C                     __end_of_TMR5_WriteTimer:
 32189                           	opt callstack 0
 32190                           
 32191 ;; *************** function _TMR5_CallBack *****************
 32192 ;; Defined at:
 32193 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32194 ;; Parameters:    Size  Location     Type
 32195 ;;		None
 32196 ;; Auto vars:     Size  Location     Type
 32197 ;;		None
 32198 ;; Return value:  Size  Location     Type
 32199 ;;                  1  [STACK] void 
 32200 ;; Registers used:
 32201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32202 ;; Tracked objects:
 32203 ;;		On entry : 3F/0
 32204 ;;		On exit  : 0/0
 32205 ;;		Unchanged: 0/0
 32206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32211 ;;Total ram usage:        0 bytes
 32212 ;; Hardware stack levels used:    1
 32213 ;; Hardware stack levels required when called:    8
 32214 ;; This function calls:
 32215 ;;		Absolute function
 32216 ;;		_TMR5_DefaultInterruptHandler
 32217 ;; This function is called by:
 32218 ;;		_TMR5_ISR
 32219 ;; This function uses a reentrant model
 32220 ;;
 32221                           
 32222                           	psect	text142
 32223  01BA68                     __ptext142:
 32224                           	opt callstack 0
 32225  01BA68                     _TMR5_CallBack:
 32226                           	opt callstack 8
 32227                           
 32228                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32229                           
 32230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32231                           ;incstack = 0
 32232  01BA68  0100               	movlb	0	; () banked
 32233  01BA6A  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32234  01BA6C  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32235  01BA6E  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32236  01BA70  B4D8               	btfsc	status,2,c
 32237  01BA72  0012               	return	
 32238                           
 32239                           ; BSR set to: 0
 32240                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32241  01BA74  D801               	call	u1000_28
 32242  01BA76  0012               	return	
 32243  01BA78                     u1000_28:
 32244  01BA78  0005               	push	
 32245  01BA7A  6EFA               	movwf	pclath,c
 32246  01BA7C  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32247  01BA7E  6EFD               	movwf	tosl,c
 32248  01BA80  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32249  01BA82  6EFE               	movwf	tosh,c
 32250  01BA84  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32251  01BA86  6EFF               	movwf	tosu,c
 32252  01BA88  50FA               	movf	pclath,w,c
 32253  01BA8A  0012               	return		;indir
 32254  01BA8C                     __end_of_TMR5_CallBack:
 32255                           	opt callstack 0
 32256                           
 32257 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32258 ;; Defined at:
 32259 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32260 ;; Parameters:    Size  Location     Type
 32261 ;;		None
 32262 ;; Auto vars:     Size  Location     Type
 32263 ;;		None
 32264 ;; Return value:  Size  Location     Type
 32265 ;;                  1  [STACK] void 
 32266 ;; Registers used:
 32267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32268 ;; Tracked objects:
 32269 ;;		On entry : 3F/0
 32270 ;;		On exit  : 0/0
 32271 ;;		Unchanged: 0/0
 32272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32277 ;;Total ram usage:        0 bytes
 32278 ;; Hardware stack levels used:    1
 32279 ;; Hardware stack levels required when called:    7
 32280 ;; This function calls:
 32281 ;;		_check_day_time
 32282 ;; This function is called by:
 32283 ;;		_TMR5_Initialize
 32284 ;;		_TMR5_CallBack
 32285 ;; This function uses a reentrant model
 32286 ;;
 32287                           
 32288                           	psect	text143
 32289  01B4CC                     __ptext143:
 32290                           	opt callstack 0
 32291  01B4CC                     _TMR5_DefaultInterruptHandler:
 32292                           	opt callstack 8
 32293                           
 32294                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32295                           
 32296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32297                           ;incstack = 0
 32298  01B4CC  A0BE               	btfss	190,0,c	;volatile
 32299  01B4CE  D002               	goto	u945_20
 32300  01B4D0  0E01               	movlw	1
 32301  01B4D2  D001               	goto	u945_26
 32302  01B4D4                     u945_20:
 32303  01B4D4  0E00               	movlw	0
 32304  01B4D6                     u945_26:
 32305  01B4D6  0AFF               	xorlw	255
 32306  01B4D8  6E0C               	movwf	(btemp+11)^0,c
 32307  01B4DA  50BE               	movf	190,w,c	;volatile
 32308  01B4DC  180C               	xorwf	(btemp+11)^0,w,c
 32309  01B4DE  0BFE               	andlw	-2
 32310  01B4E0  180C               	xorwf	(btemp+11)^0,w,c
 32311  01B4E2  6EBE               	movwf	190,c	;volatile
 32312                           
 32313                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32314  01B4E4  0E01               	movlw	1
 32315  01B4E6  0101               	movlb	1	; () banked
 32316  01B4E8  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32317  01B4EA  0E00               	movlw	0
 32318  01B4EC  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32319  01B4EE  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32320  01B4F0  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32321                           
 32322                           ; BSR set to: 1
 32323                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32324  01B4F2  0E01               	movlw	1
 32325  01B4F4  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32326  01B4F6  0E00               	movlw	0
 32327  01B4F8  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32328  01B4FA  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32329  01B4FC  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32330                           
 32331                           ; BSR set to: 1
 32332                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32333  01B4FE  ECAA  F0C2         	call	_check_day_time	;wreg free
 32334                           
 32335                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32336  01B502  0012               	return		;funcret
 32337  01B504                     __end_of_TMR5_DefaultInterruptHandler:
 32338                           	opt callstack 0
 32339                           
 32340 ;; *************** function _check_day_time *****************
 32341 ;; Defined at:
 32342 ;;		line 164 in file "mbmc.c"
 32343 ;; Parameters:    Size  Location     Type
 32344 ;;		None
 32345 ;; Auto vars:     Size  Location     Type
 32346 ;;  light           4  [STACK] float 
 32347 ;; Return value:  Size  Location     Type
 32348 ;;                  1  [STACK] _Bool 
 32349 ;; Registers used:
 32350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32351 ;; Tracked objects:
 32352 ;;		On entry : 3F/1
 32353 ;;		On exit  : 0/0
 32354 ;;		Unchanged: 0/0
 32355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32360 ;;Total ram usage:        0 bytes
 32361 ;; Hardware stack levels used:    1
 32362 ;; Hardware stack levels required when called:    6
 32363 ;; This function calls:
 32364 ;;		___flge
 32365 ;;		_conv_raw_result
 32366 ;;		_get_ac_charger_relay
 32367 ;;		_set_ac_charger_relay
 32368 ;; This function is called by:
 32369 ;;		_TMR5_DefaultInterruptHandler
 32370 ;; This function uses a reentrant model
 32371 ;;
 32372                           
 32373                           	psect	text144
 32374  018554                     __ptext144:
 32375                           	opt callstack 0
 32376  018554                     _check_day_time:
 32377                           	opt callstack 0
 32378                           
 32379                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32380  018554  52E6               	movf	postinc1,f,c
 32381  018556  52E6               	movf	postinc1,f,c
 32382  018558  52E6               	movf	postinc1,f,c
 32383  01855A  52E6               	movf	postinc1,f,c
 32384                           
 32385                           ;mbmc.c: 166:  static uint8_t day_delay = 0;;mbmc.c: 167:  float light;;mbmc.c: 169:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32386                           
 32387                           ;incstack = 0
 32388  01855C  0E00               	movlw	0
 32389  01855E  6EE6               	movwf	postinc1,c
 32390  018560  0E0D               	movlw	13
 32391  018562  6EE6               	movwf	postinc1,c
 32392  018564  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 32393                           
 32394                           ;stkvar	_light @ sp[(-4)+0]
 32395  018568  0EFC               	movlw	-4
 32396  01856A  0060  F007  FFE3   	movff	btemp,plusw1
 32397  018570  0EFD               	movlw	-3
 32398  018572  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32399  018578  0EFE               	movlw	-2
 32400  01857A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32401  018580  0EFF               	movlw	-1
 32402  018582  0060  F013  FFE3   	movff	btemp+3,plusw1
 32403                           
 32404                           ;mbmc.c: 171:  if (!day_delay++ && V.system_stable) {
 32405  018588  2A42               	incf	check_day_time@day_delay^0,f,c
 32406  01858A  0442               	decf	check_day_time@day_delay^0,w,c
 32407  01858C  A4D8               	btfss	status,2,c
 32408  01858E  D0A9               	goto	l1899
 32409  018590  0101               	movlb	1	; () banked
 32410  018592  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32411  018594  B4D8               	btfsc	status,2,c
 32412  018596  D0A5               	goto	l1899
 32413                           
 32414                           ; BSR set to: 1
 32415                           ;mbmc.c: 172:   if (C.soc > 15) {
 32416  018598  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32417  01859C  0E01               	movlw	1
 32418  01859E  50DB               	movf	plusw2,w,c
 32419  0185A0  E104               	bnz	u924_20
 32420  0185A2  0E10               	movlw	16
 32421  0185A4  5CDE               	subwf	postinc2,w,c
 32422  0185A6  A0D8               	btfss	status,0,c
 32423  0185A8  D073               	goto	l9775
 32424  0185AA                     u924_20:
 32425                           
 32426                           ; BSR set to: 1
 32427                           ;mbmc.c: 173:    if (!C.day) {
 32428  0185AA  EE22  F01D         	lfsr	2,_C+286	;volatile
 32429  0185AE  50DF               	movf	indf2,w,c
 32430  0185B0  A4D8               	btfss	status,2,c
 32431  0185B2  D035               	goto	l9763
 32432                           
 32433                           ; BSR set to: 1
 32434                           ;mbmc.c: 174:     if (light > 22.0) {
 32435                           ;stkvar	_light @ sp[(-4)+0]
 32436  0185B4  0EFC               	movlw	-4
 32437  0185B6  006F FF8F FFE6     	movff	plusw1,postinc1
 32438  0185BC  006F FF8F FFE6     	movff	plusw1,postinc1
 32439  0185C2  006F FF8F FFE6     	movff	plusw1,postinc1
 32440  0185C8  006F FF8F FFE6     	movff	plusw1,postinc1
 32441  0185CE  0E00               	movlw	0
 32442  0185D0  6EE6               	movwf	postinc1,c
 32443  0185D2  0E00               	movlw	0
 32444  0185D4  6EE6               	movwf	postinc1,c
 32445  0185D6  0EB0               	movlw	176
 32446  0185D8  6EE6               	movwf	postinc1,c
 32447  0185DA  0E41               	movlw	65
 32448  0185DC  6EE6               	movwf	postinc1,c
 32449  0185DE  EC81  F0C6         	call	___flge	;wreg free
 32450  0185E2  B001               	btfsc	btemp& (0+255),0,c
 32451  0185E4  D07E               	goto	l1899
 32452                           
 32453                           ;mbmc.c: 175:      C.day = 1;
 32454  0185E6  0E01               	movlw	1
 32455  0185E8  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32456                           
 32457                           ;mbmc.c: 176:      C.day_start = V.ticks;
 32458  0185EE  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32459  0185F2  006F FF78  F81E    	movff	postinc2,_C+287	;volatile
 32460  0185F8  006F FF78  F81F    	movff	postinc2,_C+288	;volatile
 32461  0185FE  006F FF78  F820    	movff	postinc2,_C+289	;volatile
 32462  018604  006F FF74  F821    	movff	postdec2,_C+290	;volatile
 32463                           
 32464                           ;mbmc.c: 177:      if (get_ac_charger_relay()) {
 32465  01860A  ECA4  F0DE         	call	_get_ac_charger_relay	;wreg free
 32466  01860E  5001               	movf	btemp^0,w,c
 32467  018610  B4D8               	btfsc	status,2,c
 32468  018612  D06B               	goto	l1895
 32469                           
 32470                           ;mbmc.c: 178:       set_ac_charger_relay(0);
 32471  018614  0E00               	movlw	0
 32472  018616  6EE6               	movwf	postinc1,c
 32473  018618  EC87  F0DE         	call	_set_ac_charger_relay	;wreg free
 32474  01861C  D066               	goto	l1895
 32475  01861E                     l9763:
 32476                           
 32477                           ; BSR set to: 1
 32478                           ;mbmc.c: 183:     if (light < 12.0) {
 32479  01861E  0E00               	movlw	0
 32480  018620  6EE6               	movwf	postinc1,c
 32481  018622  0E00               	movlw	0
 32482  018624  6EE6               	movwf	postinc1,c
 32483  018626  0E40               	movlw	64
 32484  018628  6EE6               	movwf	postinc1,c
 32485  01862A  0E41               	movlw	65
 32486  01862C  6EE6               	movwf	postinc1,c
 32487                           
 32488                           ;stkvar	_light @ sp[(-8)+0]
 32489  01862E  0EF8               	movlw	-8
 32490  018630  006F FF8F FFE6     	movff	plusw1,postinc1
 32491  018636  006F FF8F FFE6     	movff	plusw1,postinc1
 32492  01863C  006F FF8F FFE6     	movff	plusw1,postinc1
 32493  018642  006F FF8F FFE6     	movff	plusw1,postinc1
 32494  018648  EC81  F0C6         	call	___flge	;wreg free
 32495  01864C  B001               	btfsc	btemp& (0+255),0,c
 32496  01864E  D049               	goto	l1899
 32497                           
 32498                           ;mbmc.c: 184:      C.day = 0;
 32499  018650  0E00               	movlw	0
 32500  018652  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32501                           
 32502                           ;mbmc.c: 185:      C.day_end = V.ticks;
 32503  018658  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32504  01865C  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32505  018662  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32506  018668  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32507  01866E  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32508                           
 32509                           ;mbmc.c: 189:      if ((C.soc < 40)) {
 32510  018674  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32511  018678  0E01               	movlw	1
 32512  01867A  50DB               	movf	plusw2,w,c
 32513  01867C  E136               	bnz	l1895
 32514  01867E  0E28               	movlw	40
 32515  018680  5CDE               	subwf	postinc2,w,c
 32516  018682  B0D8               	btfsc	status,0,c
 32517  018684  D032               	goto	l1895
 32518                           
 32519                           ;mbmc.c: 190:       set_ac_charger_relay(1);
 32520  018686  0E01               	movlw	1
 32521  018688  6EE6               	movwf	postinc1,c
 32522  01868A  EC87  F0DE         	call	_set_ac_charger_relay	;wreg free
 32523  01868E  D02D               	goto	l1895
 32524  018690                     l9775:
 32525                           
 32526                           ; BSR set to: 1
 32527                           ;mbmc.c: 196:    if (C.p_pv < C.p_inverter) {
 32528  018690  EE21  F377         	lfsr	2,_C+120	;volatile
 32529  018694  006F FF7B FFE6     	movff	postinc2,postinc1
 32530  01869A  006F FF7B FFE6     	movff	postinc2,postinc1
 32531  0186A0  006F FF7B FFE6     	movff	postinc2,postinc1
 32532  0186A6  006F FF7B FFE6     	movff	postinc2,postinc1
 32533  0186AC  EE21  F37B         	lfsr	2,_C+124	;volatile
 32534  0186B0  006F FF7B FFE6     	movff	postinc2,postinc1
 32535  0186B6  006F FF7B FFE6     	movff	postinc2,postinc1
 32536  0186BC  006F FF7B FFE6     	movff	postinc2,postinc1
 32537  0186C2  006F FF7B FFE6     	movff	postinc2,postinc1
 32538  0186C8  EC81  F0C6         	call	___flge	;wreg free
 32539  0186CC  B001               	btfsc	btemp& (0+255),0,c
 32540  0186CE  D009               	goto	l1899
 32541                           
 32542                           ;mbmc.c: 197:     if (!get_ac_charger_relay()) {
 32543  0186D0  ECA4  F0DE         	call	_get_ac_charger_relay	;wreg free
 32544  0186D4  5001               	movf	btemp^0,w,c
 32545  0186D6  A4D8               	btfss	status,2,c
 32546  0186D8  D004               	goto	l1899
 32547                           
 32548                           ;mbmc.c: 198:      set_ac_charger_relay(1);
 32549  0186DA  0E01               	movlw	1
 32550  0186DC  6EE6               	movwf	postinc1,c
 32551  0186DE  EC87  F0DE         	call	_set_ac_charger_relay	;wreg free
 32552  0186E2                     l1899:
 32553                           
 32554                           ;mbmc.c: 203:  if (day_delay >= 240)
 32555  0186E2  0EEF               	movlw	239
 32556  0186E4  6442               	cpfsgt	check_day_time@day_delay^0,c
 32557  0186E6  D001               	goto	l1895
 32558                           
 32559                           ;mbmc.c: 204:   day_delay = 0;
 32560  0186E8  6A42               	clrf	check_day_time@day_delay^0,c
 32561  0186EA                     l1895:
 32562                           
 32563                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32564  0186EA  52E5               	movf	postdec1,f,c
 32565  0186EC  52E5               	movf	postdec1,f,c
 32566  0186EE  52E5               	movf	postdec1,f,c
 32567  0186F0  52E5               	movf	postdec1,f,c
 32568  0186F2  0012               	return		;funcret
 32569  0186F4                     __end_of_check_day_time:
 32570                           	opt callstack 0
 32571                           
 32572 ;; *************** function _set_ac_charger_relay *****************
 32573 ;; Defined at:
 32574 ;;		line 134 in file "mbmc.c"
 32575 ;; Parameters:    Size  Location     Type
 32576 ;;  mode            1  [STACK] _Bool 
 32577 ;; Auto vars:     Size  Location     Type
 32578 ;;		None
 32579 ;; Return value:  Size  Location     Type
 32580 ;;                  1  [STACK] void 
 32581 ;; Registers used:
 32582 ;;		wreg, fsr1l, fsr1h
 32583 ;; Tracked objects:
 32584 ;;		On entry : 0/1
 32585 ;;		On exit  : 0/0
 32586 ;;		Unchanged: 0/0
 32587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32592 ;;Total ram usage:        0 bytes
 32593 ;; Hardware stack levels used:    1
 32594 ;; Hardware stack levels required when called:    3
 32595 ;; This function calls:
 32596 ;;		Nothing
 32597 ;; This function is called by:
 32598 ;;		_check_day_time
 32599 ;; This function uses a reentrant model
 32600 ;;
 32601                           
 32602                           	psect	text145
 32603  01BD0E                     __ptext145:
 32604                           	opt callstack 0
 32605  01BD0E                     _set_ac_charger_relay:
 32606                           	opt callstack 10
 32607                           
 32608                           ;mbmc.c: 134: void set_ac_charger_relay(_Bool mode);mbmc.c: 135: {;mbmc.c: 136:  LATDbit
      +                          s.LATD6 = mode;
 32609                           ;stkvar	_mode @ sp[(0)+-1]
 32610                           
 32611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32612                           ;incstack = 0
 32613  01BD0E  0EFF               	movlw	-1
 32614  01BD10  B0E3               	btfsc	plusw1,0,c
 32615  01BD12  D002               	bra	u919_25
 32616  01BD14  9CBD               	bcf	189,6,c	;volatile
 32617  01BD16  D001               	bra	u919_26
 32618  01BD18                     u919_25:
 32619  01BD18  8CBD               	bsf	189,6,c	;volatile
 32620  01BD1A                     u919_26:
 32621                           
 32622                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32623  01BD1A  52E5               	movf	postdec1,f,c
 32624  01BD1C  0012               	return		;funcret
 32625  01BD1E                     __end_of_set_ac_charger_relay:
 32626                           	opt callstack 0
 32627                           
 32628 ;; *************** function _get_ac_charger_relay *****************
 32629 ;; Defined at:
 32630 ;;		line 139 in file "mbmc.c"
 32631 ;; Parameters:    Size  Location     Type
 32632 ;;		None
 32633 ;; Auto vars:     Size  Location     Type
 32634 ;;		None
 32635 ;; Return value:  Size  Location     Type
 32636 ;;                  1  [STACK] _Bool 
 32637 ;; Registers used:
 32638 ;;		btemp
 32639 ;; Tracked objects:
 32640 ;;		On entry : 0/1
 32641 ;;		On exit  : 0/0
 32642 ;;		Unchanged: 0/0
 32643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32648 ;;Total ram usage:        0 bytes
 32649 ;; Hardware stack levels used:    1
 32650 ;; Hardware stack levels required when called:    3
 32651 ;; This function calls:
 32652 ;;		Nothing
 32653 ;; This function is called by:
 32654 ;;		_check_day_time
 32655 ;;		_calc_bsoc
 32656 ;; This function uses a reentrant model
 32657 ;;
 32658                           
 32659                           	psect	text146
 32660  01BD48                     __ptext146:
 32661                           	opt callstack 0
 32662  01BD48                     _get_ac_charger_relay:
 32663                           	opt callstack 11
 32664                           
 32665                           ;mbmc.c: 141:  return LATDbits.LATD6;
 32666                           
 32667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32668                           ;incstack = 0
 32669  01BD48  ACBD               	btfss	189,6,c	;volatile
 32670  01BD4A  D003               	goto	u938_20
 32671  01BD4C  6A01               	clrf	btemp^0,c
 32672  01BD4E  2A01               	incf	btemp^0,f,c
 32673  01BD50  0012               	return	
 32674  01BD52                     u938_20:
 32675  01BD52  6A01               	clrf	btemp^0,c
 32676                           
 32677                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32678  01BD54  0012               	return		;funcret
 32679  01BD56                     __end_of_get_ac_charger_relay:
 32680                           	opt callstack 0
 32681                           
 32682 ;; *************** function _TMR3_ISR *****************
 32683 ;; Defined at:
 32684 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32685 ;; Parameters:    Size  Location     Type
 32686 ;;		None
 32687 ;; Auto vars:     Size  Location     Type
 32688 ;;		None
 32689 ;; Return value:  Size  Location     Type
 32690 ;;                  1    wreg      void 
 32691 ;; Registers used:
 32692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32693 ;; Tracked objects:
 32694 ;;		On entry : 0/0
 32695 ;;		On exit  : 3F/0
 32696 ;;		Unchanged: 0/0
 32697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32700 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32701 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32702 ;;Total ram usage:       25 bytes
 32703 ;; Hardware stack levels used:    1
 32704 ;; Hardware stack levels required when called:   14
 32705 ;; This function calls:
 32706 ;;		_TMR3_CallBack
 32707 ;;		_TMR3_WriteTimer
 32708 ;; This function is called by:
 32709 ;;		Interrupt level 1
 32710 ;; This function uses a non-reentrant model
 32711 ;;
 32712                           
 32713                           	psect	text147
 32714  018E64                     __ptext147:
 32715                           	opt callstack 0
 32716  018E64                     _TMR3_ISR:
 32717                           	opt callstack 3
 32718                           
 32719                           ;incstack = 0
 32720  018E64  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 32721  018E6A  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 32722  018E70  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 32723  018E76  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 32724  018E7C  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 32725  018E82  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 32726  018E88  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 32727  018E8E  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 32728  018E94  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 32729  018E9A  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 32730  018EA0  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 32731  018EA6  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 32732  018EAC  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 32733  018EB2  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 32734  018EB8  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 32735  018EBE  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 32736  018EC4  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 32737  018ECA  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 32738  018ED0  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 32739  018ED6  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 32740  018EDC  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 32741  018EE2  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 32742  018EE8  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 32743  018EEE  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 32744  018EF4  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 32745  018EFA  EE16  F0AE         	lfsr	1,___intlo_sp
 32746                           
 32747                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32748  018EFE  0139               	movlb	57	; () banked
 32749  018F00  9DA6               	bcf	166,6,b	;volatile
 32750                           
 32751                           ; BSR set to: 57
 32752                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32753  018F02  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 32754  018F08  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32755  018F0E  ECCE  F0D9         	call	_TMR3_WriteTimer	;wreg free
 32756                           
 32757                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32758  018F12  0100               	movlb	0	; () banked
 32759  018F14  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32760  018F16  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32761  018F18  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32762  018F1A  E104               	bnz	i1u1244_20
 32763  018F1C  0E28               	movlw	40
 32764  018F1E  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32765  018F20  A0D8               	btfss	status,0,c
 32766  018F22  D005               	goto	i1l1207
 32767  018F24                     i1u1244_20:
 32768                           
 32769                           ; BSR set to: 0
 32770                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32771  018F24  EC46  F0DD         	call	_TMR3_CallBack	;wreg free
 32772                           
 32773                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32774  018F28  0100               	movlb	0	; () banked
 32775  018F2A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32776  018F2C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32777  018F2E                     i1l1207:
 32778                           
 32779                           ; BSR set to: 0
 32780  018F2E  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 32781  018F34  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 32782  018F3A  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 32783  018F40  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 32784  018F46  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 32785  018F4C  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 32786  018F52  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 32787  018F58  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 32788  018F5E  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32789  018F64  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32790  018F6A  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32791  018F70  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 32792  018F76  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 32793  018F7C  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 32794  018F82  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 32795  018F88  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 32796  018F8E  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 32797  018F94  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 32798  018F9A  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 32799  018FA0  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 32800  018FA6  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32801  018FAC  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32802  018FB2  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32803  018FB8  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32804  018FBE  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 32805  018FC4  0011               	retfie		f
 32806  018FC6                     __end_of_TMR3_ISR:
 32807                           	opt callstack 0
 32808                           
 32809 ;; *************** function _TMR3_WriteTimer *****************
 32810 ;; Defined at:
 32811 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32812 ;; Parameters:    Size  Location     Type
 32813 ;;  timerVal        2  [STACK] unsigned short 
 32814 ;; Auto vars:     Size  Location     Type
 32815 ;;		None
 32816 ;; Return value:  Size  Location     Type
 32817 ;;                  1  [STACK] void 
 32818 ;; Registers used:
 32819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32820 ;; Tracked objects:
 32821 ;;		On entry : 3F/39
 32822 ;;		On exit  : 0/0
 32823 ;;		Unchanged: 0/0
 32824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32829 ;;Total ram usage:        0 bytes
 32830 ;; Hardware stack levels used:    1
 32831 ;; Hardware stack levels required when called:    3
 32832 ;; This function calls:
 32833 ;;		Nothing
 32834 ;; This function is called by:
 32835 ;;		_TMR3_ISR
 32836 ;; This function uses a reentrant model
 32837 ;;
 32838                           
 32839                           	psect	text148
 32840  01B39C                     __ptext148:
 32841                           	opt callstack 0
 32842  01B39C                     _TMR3_WriteTimer:
 32843                           	opt callstack 13
 32844                           
 32845                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32846                           
 32847                           ; BSR set to: 0
 32848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32849                           ;incstack = 0
 32850  01B39C  A4A6               	btfss	166,2,c	;volatile
 32851  01B39E  D00F               	goto	l10657
 32852                           
 32853                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32854  01B3A0  90A6               	bcf	166,0,c	;volatile
 32855                           
 32856                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32857                           ;stkvar	_timerVal @ sp[(0)+-2]
 32858  01B3A2  0EFF               	movlw	255
 32859  01B3A4  24E1               	addwf	fsr1l,w,c
 32860  01B3A6  6ED9               	movwf	fsr2l,c
 32861  01B3A8  0EFF               	movlw	255
 32862  01B3AA  20E2               	addwfc	fsr1h,w,c
 32863  01B3AC  6EDA               	movwf	fsr2h,c
 32864  01B3AE  50DF               	movf	indf2,w,c
 32865  01B3B0  6EA5               	movwf	165,c	;volatile
 32866                           
 32867                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32868                           ;stkvar	_timerVal @ sp[(0)+-2]
 32869  01B3B2  0EFE               	movlw	-2
 32870  01B3B4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32871                           
 32872                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32873  01B3BA  80A6               	bsf	166,0,c	;volatile
 32874                           
 32875                           ;mcc_generated_files/tmr3.c: 141:     }
 32876  01B3BC  D00C               	goto	l1190
 32877  01B3BE                     l10657:
 32878                           
 32879                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32880                           ;stkvar	_timerVal @ sp[(0)+-2]
 32881  01B3BE  0EFF               	movlw	255
 32882  01B3C0  24E1               	addwf	fsr1l,w,c
 32883  01B3C2  6ED9               	movwf	fsr2l,c
 32884  01B3C4  0EFF               	movlw	255
 32885  01B3C6  20E2               	addwfc	fsr1h,w,c
 32886  01B3C8  6EDA               	movwf	fsr2h,c
 32887  01B3CA  50DF               	movf	indf2,w,c
 32888  01B3CC  6EA5               	movwf	165,c	;volatile
 32889                           
 32890                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32891                           ;stkvar	_timerVal @ sp[(0)+-2]
 32892  01B3CE  0EFE               	movlw	-2
 32893  01B3D0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32894  01B3D6                     l1190:
 32895                           
 32896                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32897  01B3D6  52E5               	movf	postdec1,f,c
 32898  01B3D8  52E5               	movf	postdec1,f,c
 32899  01B3DA  0012               	return		;funcret
 32900  01B3DC                     __end_of_TMR3_WriteTimer:
 32901                           	opt callstack 0
 32902                           
 32903 ;; *************** function _TMR3_CallBack *****************
 32904 ;; Defined at:
 32905 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32906 ;; Parameters:    Size  Location     Type
 32907 ;;		None
 32908 ;; Auto vars:     Size  Location     Type
 32909 ;;		None
 32910 ;; Return value:  Size  Location     Type
 32911 ;;                  1  [STACK] void 
 32912 ;; Registers used:
 32913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32914 ;; Tracked objects:
 32915 ;;		On entry : 3F/0
 32916 ;;		On exit  : 0/0
 32917 ;;		Unchanged: 0/0
 32918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32923 ;;Total ram usage:        0 bytes
 32924 ;; Hardware stack levels used:    1
 32925 ;; Hardware stack levels required when called:   13
 32926 ;; This function calls:
 32927 ;;		Absolute function
 32928 ;;		_TMR3_DefaultInterruptHandler
 32929 ;;		_calc_bsoc
 32930 ;; This function is called by:
 32931 ;;		_TMR3_ISR
 32932 ;; This function uses a reentrant model
 32933 ;;
 32934                           
 32935                           	psect	text149
 32936  01BA8C                     __ptext149:
 32937                           	opt callstack 0
 32938  01BA8C                     _TMR3_CallBack:
 32939                           	opt callstack 3
 32940                           
 32941                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32942                           
 32943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32944                           ;incstack = 0
 32945  01BA8C  0100               	movlb	0	; () banked
 32946  01BA8E  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32947  01BA90  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32948  01BA92  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32949  01BA94  B4D8               	btfsc	status,2,c
 32950  01BA96  0012               	return	
 32951                           
 32952                           ; BSR set to: 0
 32953                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32954  01BA98  D801               	call	u1235_28
 32955  01BA9A  0012               	return	
 32956  01BA9C                     u1235_28:
 32957  01BA9C  0005               	push	
 32958  01BA9E  6EFA               	movwf	pclath,c
 32959  01BAA0  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32960  01BAA2  6EFD               	movwf	tosl,c
 32961  01BAA4  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32962  01BAA6  6EFE               	movwf	tosh,c
 32963  01BAA8  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32964  01BAAA  6EFF               	movwf	tosu,c
 32965  01BAAC  50FA               	movf	pclath,w,c
 32966  01BAAE  0012               	return		;indir
 32967  01BAB0                     __end_of_TMR3_CallBack:
 32968                           	opt callstack 0
 32969                           
 32970 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32971 ;; Defined at:
 32972 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32973 ;; Parameters:    Size  Location     Type
 32974 ;;		None
 32975 ;; Auto vars:     Size  Location     Type
 32976 ;;		None
 32977 ;; Return value:  Size  Location     Type
 32978 ;;                  1  [STACK] void 
 32979 ;; Registers used:
 32980 ;;		None
 32981 ;; Tracked objects:
 32982 ;;		On entry : 3F/0
 32983 ;;		On exit  : 0/0
 32984 ;;		Unchanged: 0/0
 32985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32990 ;;Total ram usage:        0 bytes
 32991 ;; Hardware stack levels used:    1
 32992 ;; Hardware stack levels required when called:    3
 32993 ;; This function calls:
 32994 ;;		Nothing
 32995 ;; This function is called by:
 32996 ;;		_TMR3_Initialize
 32997 ;;		_TMR3_CallBack
 32998 ;; This function uses a reentrant model
 32999 ;;
 33000                           
 33001                           	psect	text150
 33002  01BDF8                     __ptext150:
 33003                           	opt callstack 0
 33004  01BDF8                     _TMR3_DefaultInterruptHandler:
 33005                           	opt callstack 12
 33006                           
 33007                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33008                           
 33009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33010                           ;incstack = 0
 33011  01BDF8  0012               	return		;funcret
 33012  01BDFA                     __end_of_TMR3_DefaultInterruptHandler:
 33013                           	opt callstack 0
 33014                           
 33015 ;; *************** function _calc_bsoc *****************
 33016 ;; Defined at:
 33017 ;;		line 39 in file "bsoc.c"
 33018 ;; Parameters:    Size  Location     Type
 33019 ;;		None
 33020 ;; Auto vars:     Size  Location     Type
 33021 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33022 ;;		 -> port_data(512), 
 33023 ;; Return value:  Size  Location     Type
 33024 ;;                  1  [STACK] void 
 33025 ;; Registers used:
 33026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33027 ;; Tracked objects:
 33028 ;;		On entry : 3F/0
 33029 ;;		On exit  : 5/1
 33030 ;;		Unchanged: 0/0
 33031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;Total ram usage:        0 bytes
 33037 ;; Hardware stack levels used:    1
 33038 ;; Hardware stack levels required when called:   12
 33039 ;; This function calls:
 33040 ;;		_StartTimer
 33041 ;;		___asfladd
 33042 ;;		___fldiv
 33043 ;;		___flge
 33044 ;;		___flmul
 33045 ;;		___flneg
 33046 ;;		___fltol
 33047 ;;		_fabsf
 33048 ;;		_get_ac_charger_relay
 33049 ;;		_port_data_dma_ptr
 33050 ;;		_send_port_data_dma
 33051 ;;		_sprintf
 33052 ;;		_strlen
 33053 ;; This function is called by:
 33054 ;;		_init_bsoc
 33055 ;;		_TMR3_CallBack
 33056 ;; This function uses a reentrant model
 33057 ;;
 33058                           
 33059                           	psect	text151
 33060  014326                     __ptext151:
 33061                           	opt callstack 0
 33062  014326                     _calc_bsoc:
 33063                           	opt callstack 0
 33064                           
 33065                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33066  014326  52E6               	movf	postinc1,f,c
 33067  014328  52E6               	movf	postinc1,f,c
 33068                           
 33069                           ;incstack = 0
 33070                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 33071  01432A  82BE               	bsf	190,1,c	;volatile
 33072                           
 33073                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 33074  01432C  0E00               	movlw	0
 33075  01432E  6EE6               	movwf	postinc1,c
 33076  014330  0E00               	movlw	0
 33077  014332  6EE6               	movwf	postinc1,c
 33078  014334  0E61               	movlw	97
 33079  014336  6EE6               	movwf	postinc1,c
 33080  014338  0E45               	movlw	69
 33081  01433A  6EE6               	movwf	postinc1,c
 33082  01433C  EE21  F343         	lfsr	2,_C+68	;volatile
 33083  014340  006F FF7B FFE6     	movff	postinc2,postinc1
 33084  014346  006F FF7B FFE6     	movff	postinc2,postinc1
 33085  01434C  006F FF7B FFE6     	movff	postinc2,postinc1
 33086  014352  006F FF7B FFE6     	movff	postinc2,postinc1
 33087  014358  EC51  F0A5         	call	___fldiv	;wreg free
 33088  01435C  0060  F007  FFE6   	movff	btemp,postinc1
 33089  014362  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33090  014368  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33091  01436E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33092  014374  0E8F               	movlw	low (_C+144)
 33093  014376  6EE6               	movwf	postinc1,c
 33094  014378  0E07               	movlw	high (_C+144)
 33095  01437A  6EE6               	movwf	postinc1,c
 33096  01437C  EC61  F0D5         	call	___asfladd	;wreg free
 33097                           
 33098                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 33099  014380  EE21  F38F         	lfsr	2,_C+144	;volatile
 33100  014384  006F FF7B FFE6     	movff	postinc2,postinc1
 33101  01438A  006F FF7B FFE6     	movff	postinc2,postinc1
 33102  014390  006F FF7B FFE6     	movff	postinc2,postinc1
 33103  014396  006F FF7B FFE6     	movff	postinc2,postinc1
 33104  01439C  EE21  F38B         	lfsr	2,_C+140	;volatile
 33105  0143A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33106  0143A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33107  0143AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33108  0143B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33109  0143B8  EC81  F0C6         	call	___flge	;wreg free
 33110  0143BC  B001               	btfsc	btemp& (0+255),0,c
 33111  0143BE  D00E               	goto	l12617
 33112                           
 33113                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 33114  0143C0  EE21  F38B         	lfsr	2,_C+140	;volatile
 33115  0143C4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33116  0143CA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33117  0143D0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33118  0143D6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33119  0143DC                     l12617:
 33120                           
 33121                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 33122  0143DC  0ECD               	movlw	205
 33123  0143DE  6EE6               	movwf	postinc1,c
 33124  0143E0  0ECC               	movlw	204
 33125  0143E2  6EE6               	movwf	postinc1,c
 33126  0143E4  0ECC               	movlw	204
 33127  0143E6  6EE6               	movwf	postinc1,c
 33128  0143E8  0E3D               	movlw	61
 33129  0143EA  6EE6               	movwf	postinc1,c
 33130  0143EC  EE21  F38F         	lfsr	2,_C+144	;volatile
 33131  0143F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33132  0143F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33133  0143FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33134  014402  006F FF7B FFE6     	movff	postinc2,postinc1
 33135  014408  EC81  F0C6         	call	___flge	;wreg free
 33136  01440C  B001               	btfsc	btemp& (0+255),0,c
 33137  01440E  D010               	goto	l12621
 33138                           
 33139                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 33140  014410  0ECD               	movlw	205
 33141  014412  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33142  014418  0ECC               	movlw	204
 33143  01441A  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33144  014420  0ECC               	movlw	204
 33145  014422  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33146  014428  0E3D               	movlw	61
 33147  01442A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33148  014430                     l12621:
 33149                           
 33150                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 33151  014430  0E00               	movlw	0
 33152  014432  6EE6               	movwf	postinc1,c
 33153  014434  0E00               	movlw	0
 33154  014436  6EE6               	movwf	postinc1,c
 33155  014438  0E61               	movlw	97
 33156  01443A  6EE6               	movwf	postinc1,c
 33157  01443C  0E45               	movlw	69
 33158  01443E  6EE6               	movwf	postinc1,c
 33159  014440  EE21  F347         	lfsr	2,_C+72	;volatile
 33160  014444  006F FF7B FFE6     	movff	postinc2,postinc1
 33161  01444A  006F FF7B FFE6     	movff	postinc2,postinc1
 33162  014450  006F FF7B FFE6     	movff	postinc2,postinc1
 33163  014456  006F FF7B FFE6     	movff	postinc2,postinc1
 33164  01445C  EC51  F0A5         	call	___fldiv	;wreg free
 33165  014460  0060  F007  FFE6   	movff	btemp,postinc1
 33166  014466  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33167  01446C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33168  014472  0060  F013  FFE6   	movff	btemp+3,postinc1
 33169  014478  0E93               	movlw	low (_C+148)
 33170  01447A  6EE6               	movwf	postinc1,c
 33171  01447C  0E07               	movlw	high (_C+148)
 33172  01447E  6EE6               	movwf	postinc1,c
 33173  014480  EC61  F0D5         	call	___asfladd	;wreg free
 33174                           
 33175                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 33176  014484  0E00               	movlw	0
 33177  014486  6EE6               	movwf	postinc1,c
 33178  014488  0E00               	movlw	0
 33179  01448A  6EE6               	movwf	postinc1,c
 33180  01448C  0E61               	movlw	97
 33181  01448E  6EE6               	movwf	postinc1,c
 33182  014490  0E45               	movlw	69
 33183  014492  6EE6               	movwf	postinc1,c
 33184  014494  EE21  F37B         	lfsr	2,_C+124	;volatile
 33185  014498  006F FF7B FFE6     	movff	postinc2,postinc1
 33186  01449E  006F FF7B FFE6     	movff	postinc2,postinc1
 33187  0144A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33188  0144AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33189  0144B0  EC51  F0A5         	call	___fldiv	;wreg free
 33190  0144B4  0060  F007  FFE6   	movff	btemp,postinc1
 33191  0144BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33192  0144C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33193  0144C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33194  0144CC  0EA3               	movlw	low (_C+164)
 33195  0144CE  6EE6               	movwf	postinc1,c
 33196  0144D0  0E07               	movlw	high (_C+164)
 33197  0144D2  6EE6               	movwf	postinc1,c
 33198  0144D4  EC61  F0D5         	call	___asfladd	;wreg free
 33199                           
 33200                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 33201  0144D8  0E00               	movlw	0
 33202  0144DA  6EE6               	movwf	postinc1,c
 33203  0144DC  0E00               	movlw	0
 33204  0144DE  6EE6               	movwf	postinc1,c
 33205  0144E0  0E61               	movlw	97
 33206  0144E2  6EE6               	movwf	postinc1,c
 33207  0144E4  0E45               	movlw	69
 33208  0144E6  6EE6               	movwf	postinc1,c
 33209  0144E8  EE21  F377         	lfsr	2,_C+120	;volatile
 33210  0144EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33211  0144F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33212  0144F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33213  0144FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33214  014504  EC51  F0A5         	call	___fldiv	;wreg free
 33215  014508  0060  F007  FFE6   	movff	btemp,postinc1
 33216  01450E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33217  014514  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33218  01451A  0060  F013  FFE6   	movff	btemp+3,postinc1
 33219  014520  0EA7               	movlw	low (_C+168)
 33220  014522  6EE6               	movwf	postinc1,c
 33221  014524  0E07               	movlw	high (_C+168)
 33222  014526  6EE6               	movwf	postinc1,c
 33223  014528  EC61  F0D5         	call	___asfladd	;wreg free
 33224                           
 33225                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 33226  01452C  0E00               	movlw	0
 33227  01452E  6EE6               	movwf	postinc1,c
 33228  014530  0E00               	movlw	0
 33229  014532  6EE6               	movwf	postinc1,c
 33230  014534  0E61               	movlw	97
 33231  014536  6EE6               	movwf	postinc1,c
 33232  014538  0E45               	movlw	69
 33233  01453A  6EE6               	movwf	postinc1,c
 33234  01453C  EE21  F373         	lfsr	2,_C+116	;volatile
 33235  014540  006F FF7B FFE6     	movff	postinc2,postinc1
 33236  014546  006F FF7B FFE6     	movff	postinc2,postinc1
 33237  01454C  006F FF7B FFE6     	movff	postinc2,postinc1
 33238  014552  006F FF7B FFE6     	movff	postinc2,postinc1
 33239  014558  EC51  F0A5         	call	___fldiv	;wreg free
 33240  01455C  0060  F007  FFE6   	movff	btemp,postinc1
 33241  014562  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33242  014568  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33243  01456E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33244  014574  0EAB               	movlw	low (_C+172)
 33245  014576  6EE6               	movwf	postinc1,c
 33246  014578  0E07               	movlw	high (_C+172)
 33247  01457A  6EE6               	movwf	postinc1,c
 33248  01457C  EC61  F0D5         	call	___asfladd	;wreg free
 33249                           
 33250                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 33251  014580  EE21  F37F         	lfsr	2,_C+128	;volatile
 33252  014584  006F FF7B FFE6     	movff	postinc2,postinc1
 33253  01458A  006F FF7B FFE6     	movff	postinc2,postinc1
 33254  014590  006F FF7B FFE6     	movff	postinc2,postinc1
 33255  014596  006F FF7B FFE6     	movff	postinc2,postinc1
 33256  01459C  0E00               	movlw	0
 33257  01459E  6EE6               	movwf	postinc1,c
 33258  0145A0  0E00               	movlw	0
 33259  0145A2  6EE6               	movwf	postinc1,c
 33260  0145A4  0E00               	movlw	0
 33261  0145A6  6EE6               	movwf	postinc1,c
 33262  0145A8  0E00               	movlw	0
 33263  0145AA  6EE6               	movwf	postinc1,c
 33264  0145AC  EC81  F0C6         	call	___flge	;wreg free
 33265  0145B0  B001               	btfsc	btemp& (0+255),0,c
 33266  0145B2  D02A               	goto	l12627
 33267                           
 33268                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 33269  0145B4  0E00               	movlw	0
 33270  0145B6  6EE6               	movwf	postinc1,c
 33271  0145B8  0E00               	movlw	0
 33272  0145BA  6EE6               	movwf	postinc1,c
 33273  0145BC  0E61               	movlw	97
 33274  0145BE  6EE6               	movwf	postinc1,c
 33275  0145C0  0E45               	movlw	69
 33276  0145C2  6EE6               	movwf	postinc1,c
 33277  0145C4  EE21  F37F         	lfsr	2,_C+128	;volatile
 33278  0145C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33279  0145CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33280  0145D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33281  0145DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33282  0145E0  EC51  F0A5         	call	___fldiv	;wreg free
 33283  0145E4  0060  F007  FFE6   	movff	btemp,postinc1
 33284  0145EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33285  0145F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33286  0145F6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33287  0145FC  0E9B               	movlw	low (_C+156)
 33288  0145FE  6EE6               	movwf	postinc1,c
 33289  014600  0E07               	movlw	high (_C+156)
 33290  014602  6EE6               	movwf	postinc1,c
 33291  014604  EC61  F0D5         	call	___asfladd	;wreg free
 33292  014608                     l12627:
 33293                           
 33294                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 33295  014608  EE21  F37F         	lfsr	2,_C+128	;volatile
 33296  01460C  0E03               	movlw	3
 33297  01460E  AEDB               	btfss	plusw2,7,c
 33298  014610  D038               	goto	l12631
 33299                           
 33300                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33301  014612  0E00               	movlw	0
 33302  014614  6EE6               	movwf	postinc1,c
 33303  014616  0E00               	movlw	0
 33304  014618  6EE6               	movwf	postinc1,c
 33305  01461A  0E61               	movlw	97
 33306  01461C  6EE6               	movwf	postinc1,c
 33307  01461E  0E45               	movlw	69
 33308  014620  6EE6               	movwf	postinc1,c
 33309  014622  EE21  F37F         	lfsr	2,_C+128	;volatile
 33310  014626  006F FF7B FFE6     	movff	postinc2,postinc1
 33311  01462C  006F FF7B FFE6     	movff	postinc2,postinc1
 33312  014632  006F FF7B FFE6     	movff	postinc2,postinc1
 33313  014638  006F FF7B FFE6     	movff	postinc2,postinc1
 33314  01463E  EC51  F0A5         	call	___fldiv	;wreg free
 33315  014642  0060  F007  FFE6   	movff	btemp,postinc1
 33316  014648  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33317  01464E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33318  014654  0060  F013  FFE6   	movff	btemp+3,postinc1
 33319  01465A  EC8B  F0D1         	call	_fabsf	;wreg free
 33320  01465E  0060  F007  FFE6   	movff	btemp,postinc1
 33321  014664  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33322  01466A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33323  014670  0060  F013  FFE6   	movff	btemp+3,postinc1
 33324  014676  0E9F               	movlw	low (_C+160)
 33325  014678  6EE6               	movwf	postinc1,c
 33326  01467A  0E07               	movlw	high (_C+160)
 33327  01467C  6EE6               	movwf	postinc1,c
 33328  01467E  EC61  F0D5         	call	___asfladd	;wreg free
 33329  014682                     l12631:
 33330                           
 33331                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 33332  014682  0E00               	movlw	0
 33333  014684  6EE6               	movwf	postinc1,c
 33334  014686  0E00               	movlw	0
 33335  014688  6EE6               	movwf	postinc1,c
 33336  01468A  0EC8               	movlw	200
 33337  01468C  6EE6               	movwf	postinc1,c
 33338  01468E  0E42               	movlw	66
 33339  014690  6EE6               	movwf	postinc1,c
 33340  014692  EE21  F38B         	lfsr	2,_C+140	;volatile
 33341  014696  006F FF7B FFE6     	movff	postinc2,postinc1
 33342  01469C  006F FF7B FFE6     	movff	postinc2,postinc1
 33343  0146A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33344  0146A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33345  0146AE  EE21  F38F         	lfsr	2,_C+144	;volatile
 33346  0146B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33347  0146B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33348  0146BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33349  0146C4  006F FF7B FFE6     	movff	postinc2,postinc1
 33350  0146CA  EC51  F0A5         	call	___fldiv	;wreg free
 33351  0146CE  0060  F007  FFE6   	movff	btemp,postinc1
 33352  0146D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33353  0146DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33354  0146E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33355  0146E6  ECA0  F099         	call	___flmul	;wreg free
 33356  0146EA  0060  F007  FFE6   	movff	btemp,postinc1
 33357  0146F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33358  0146F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33359  0146FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33360  014702  ECC8  F0C5         	call	___fltol	;wreg free
 33361  014706  0060  F004  F00B   	movff	btemp,btemp+10
 33362  01470C  0060  F008  F00C   	movff	btemp+1,btemp+11
 33363  014712  0E01               	movlw	1
 33364  014714  260B               	addwf	(btemp+10)^0,f,c
 33365  014716  0E00               	movlw	0
 33366  014718  220C               	addwfc	(btemp+11)^0,f,c
 33367  01471A  0060  F02C  F7B1   	movff	btemp+10,_C+178	;volatile
 33368  014720  0060  F030  F7B2   	movff	btemp+11,_C+179	;volatile
 33369                           
 33370                           ;bsoc.c: 62:  if (C.soc > 100)
 33371  014726  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33372  01472A  0E01               	movlw	1
 33373  01472C  50DB               	movf	plusw2,w,c
 33374  01472E  E104               	bnz	u1228_20
 33375  014730  0E65               	movlw	101
 33376  014732  5CDE               	subwf	postinc2,w,c
 33377  014734  A0D8               	btfss	status,0,c
 33378  014736  D008               	goto	l12637
 33379  014738                     u1228_20:
 33380                           
 33381                           ;bsoc.c: 63:   C.soc = 100;
 33382  014738  0E64               	movlw	100
 33383  01473A  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
 33384  014740  0E00               	movlw	0
 33385  014742  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
 33386  014748                     l12637:
 33387                           
 33388                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 33389  014748  EE21  F343         	lfsr	2,_C+68	;volatile
 33390  01474C  0E03               	movlw	3
 33391  01474E  AEDB               	btfss	plusw2,7,c
 33392  014750  D047               	goto	l2038
 33393                           
 33394                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 33395  014752  EE21  F343         	lfsr	2,_C+68	;volatile
 33396  014756  006F FF7B FFE6     	movff	postinc2,postinc1
 33397  01475C  006F FF7B FFE6     	movff	postinc2,postinc1
 33398  014762  006F FF7B FFE6     	movff	postinc2,postinc1
 33399  014768  006F FF7B FFE6     	movff	postinc2,postinc1
 33400  01476E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33401  014772  006F FF7B FFE6     	movff	postinc2,postinc1
 33402  014778  006F FF7B FFE6     	movff	postinc2,postinc1
 33403  01477E  006F FF7B FFE6     	movff	postinc2,postinc1
 33404  014784  006F FF7B FFE6     	movff	postinc2,postinc1
 33405  01478A  EC51  F0A5         	call	___fldiv	;wreg free
 33406  01478E  0060  F007  FFE6   	movff	btemp,postinc1
 33407  014794  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33408  01479A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33409  0147A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33410  0147A6  EC55  F0D8         	call	___flneg	;wreg free
 33411  0147AA  0060  F007  FFE6   	movff	btemp,postinc1
 33412  0147B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33413  0147B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33414  0147BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33415  0147C2  ECC8  F0C5         	call	___fltol	;wreg free
 33416  0147C6  0060  F004  F00B   	movff	btemp,btemp+10
 33417  0147CC  0060  F008  F00C   	movff	btemp+1,btemp+11
 33418  0147D2  0060  F02C  F7AF   	movff	btemp+10,_C+176	;volatile
 33419  0147D8  0060  F030  F7B0   	movff	btemp+11,_C+177	;volatile
 33420                           
 33421                           ;bsoc.c: 67:  } else {
 33422  0147DE  D008               	goto	l12641
 33423  0147E0                     l2038:
 33424                           
 33425                           ;bsoc.c: 68:   C.runtime = 120;
 33426  0147E0  0E78               	movlw	120
 33427  0147E2  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33428  0147E8  0E00               	movlw	0
 33429  0147EA  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33430  0147F0                     l12641:
 33431                           
 33432                           ;bsoc.c: 70:  if (C.runtime > 120)
 33433  0147F0  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33434  0147F4  0E01               	movlw	1
 33435  0147F6  50DB               	movf	plusw2,w,c
 33436  0147F8  E104               	bnz	u1230_20
 33437  0147FA  0E79               	movlw	121
 33438  0147FC  5CDE               	subwf	postinc2,w,c
 33439  0147FE  A0D8               	btfss	status,0,c
 33440  014800  D008               	goto	l12645
 33441  014802                     u1230_20:
 33442                           
 33443                           ;bsoc.c: 71:   C.runtime = 120;
 33444  014802  0E78               	movlw	120
 33445  014804  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33446  01480A  0E00               	movlw	0
 33447  01480C  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33448  014812                     l12645:
 33449                           
 33450                           ;bsoc.c: 73:  V.lowint_count++;
 33451  014812  0E01               	movlw	1
 33452  014814  0101               	movlb	1	; () banked
 33453  014816  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 33454  014818  0E00               	movlw	0
 33455  01481A  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33456  01481C  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33457  01481E  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33458                           
 33459                           ;bsoc.c: 75:  if (!log_update_wait++ && V.system_stable) {
 33460  014820  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 33461  014822  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 33462  014824  A4D8               	btfss	status,2,c
 33463  014826  D131               	goto	l12657
 33464                           
 33465                           ; BSR set to: 1
 33466  014828  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 33467  01482A  B4D8               	btfsc	status,2,c
 33468  01482C  D12E               	goto	l12657
 33469                           
 33470                           ; BSR set to: 1
 33471                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33472  01482E  ECC0  F0DE         	call	_port_data_dma_ptr	;wreg free
 33473                           
 33474                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33475  014832  0EFF               	movlw	-1
 33476  014834  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33477  01483A  0EFE               	movlw	-2
 33478  01483C  0060  F007  FFE3   	movff	btemp,plusw1
 33479                           
 33480                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu\r\n",
 33481  014842  EE22  F022         	lfsr	2,_C+291	;volatile
 33482  014846  006F FF7B FFE6     	movff	postinc2,postinc1
 33483  01484C  006F FF7B FFE6     	movff	postinc2,postinc1
 33484  014852  006F FF7B FFE6     	movff	postinc2,postinc1
 33485  014858  006F FF7B FFE6     	movff	postinc2,postinc1
 33486  01485E  EE22  F01E         	lfsr	2,_C+287	;volatile
 33487  014862  006F FF7B FFE6     	movff	postinc2,postinc1
 33488  014868  006F FF7B FFE6     	movff	postinc2,postinc1
 33489  01486E  006F FF7B FFE6     	movff	postinc2,postinc1
 33490  014874  006F FF7B FFE6     	movff	postinc2,postinc1
 33491  01487A  EE22  F01D         	lfsr	2,_C+286	;volatile
 33492  01487E  50DF               	movf	indf2,w,c
 33493  014880  6EE6               	movwf	postinc1,c
 33494  014882  0E00               	movlw	0
 33495  014884  6EE6               	movwf	postinc1,c
 33496  014886  ECA4  F0DE         	call	_get_ac_charger_relay	;wreg free
 33497  01488A  5001               	movf	btemp^0,w,c
 33498  01488C  6EE6               	movwf	postinc1,c
 33499  01488E  0E00               	movlw	0
 33500  014890  6EE6               	movwf	postinc1,c
 33501  014892  EE21  F367         	lfsr	2,_C+104	;volatile
 33502  014896  006F FF7B FFE6     	movff	postinc2,postinc1
 33503  01489C  006F FF7B FFE6     	movff	postinc2,postinc1
 33504  0148A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33505  0148A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33506  0148AE  EE21  F387         	lfsr	2,_C+136	;volatile
 33507  0148B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33508  0148B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33509  0148BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33510  0148C4  006F FF7B FFE6     	movff	postinc2,postinc1
 33511  0148CA  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33512  0148CE  006F FF78  F00B    	movff	postinc2,btemp+10
 33513  0148D4  006F FF74  F00C    	movff	postdec2,btemp+11
 33514  0148DA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33515  0148E0  0060  F033  FFE6   	movff	btemp+11,postinc1
 33516  0148E6  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33517  0148EA  006F FF78  F00B    	movff	postinc2,btemp+10
 33518  0148F0  006F FF74  F00C    	movff	postdec2,btemp+11
 33519  0148F6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33520  0148FC  0060  F033  FFE6   	movff	btemp+11,postinc1
 33521  014902  EE21  F393         	lfsr	2,_C+148	;volatile
 33522  014906  006F FF7B FFE6     	movff	postinc2,postinc1
 33523  01490C  006F FF7B FFE6     	movff	postinc2,postinc1
 33524  014912  006F FF7B FFE6     	movff	postinc2,postinc1
 33525  014918  006F FF7B FFE6     	movff	postinc2,postinc1
 33526  01491E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33527  014922  006F FF7B FFE6     	movff	postinc2,postinc1
 33528  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 33529  01492E  006F FF7B FFE6     	movff	postinc2,postinc1
 33530  014934  006F FF7B FFE6     	movff	postinc2,postinc1
 33531  01493A  EE21  F377         	lfsr	2,_C+120	;volatile
 33532  01493E  006F FF7B FFE6     	movff	postinc2,postinc1
 33533  014944  006F FF7B FFE6     	movff	postinc2,postinc1
 33534  01494A  006F FF7B FFE6     	movff	postinc2,postinc1
 33535  014950  006F FF7B FFE6     	movff	postinc2,postinc1
 33536  014956  EE21  F373         	lfsr	2,_C+116	;volatile
 33537  01495A  006F FF7B FFE6     	movff	postinc2,postinc1
 33538  014960  006F FF7B FFE6     	movff	postinc2,postinc1
 33539  014966  006F FF7B FFE6     	movff	postinc2,postinc1
 33540  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 33541  014972  EE21  F37B         	lfsr	2,_C+124	;volatile
 33542  014976  006F FF7B FFE6     	movff	postinc2,postinc1
 33543  01497C  006F FF7B FFE6     	movff	postinc2,postinc1
 33544  014982  006F FF7B FFE6     	movff	postinc2,postinc1
 33545  014988  006F FF7B FFE6     	movff	postinc2,postinc1
 33546  01498E  EE21  F37F         	lfsr	2,_C+128	;volatile
 33547  014992  006F FF7B FFE6     	movff	postinc2,postinc1
 33548  014998  006F FF7B FFE6     	movff	postinc2,postinc1
 33549  01499E  006F FF7B FFE6     	movff	postinc2,postinc1
 33550  0149A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33551  0149AA  EE21  F363         	lfsr	2,_C+100	;volatile
 33552  0149AE  006F FF7B FFE6     	movff	postinc2,postinc1
 33553  0149B4  006F FF7B FFE6     	movff	postinc2,postinc1
 33554  0149BA  006F FF7B FFE6     	movff	postinc2,postinc1
 33555  0149C0  006F FF7B FFE6     	movff	postinc2,postinc1
 33556  0149C6  EE21  F34B         	lfsr	2,_C+76	;volatile
 33557  0149CA  006F FF7B FFE6     	movff	postinc2,postinc1
 33558  0149D0  006F FF7B FFE6     	movff	postinc2,postinc1
 33559  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 33560  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 33561  0149E2  EE21  F34F         	lfsr	2,_C+80	;volatile
 33562  0149E6  006F FF7B FFE6     	movff	postinc2,postinc1
 33563  0149EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33564  0149F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33565  0149F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33566  0149FE  EE21  F353         	lfsr	2,_C+84	;volatile
 33567  014A02  006F FF7B FFE6     	movff	postinc2,postinc1
 33568  014A08  006F FF7B FFE6     	movff	postinc2,postinc1
 33569  014A0E  006F FF7B FFE6     	movff	postinc2,postinc1
 33570  014A14  006F FF7B FFE6     	movff	postinc2,postinc1
 33571  014A1A  0060  F6C7  FFE6   	movff	_V+129,postinc1
 33572  014A20  0060  F6CB  FFE6   	movff	_V+130,postinc1
 33573  014A26  0060  F6CF  FFE6   	movff	_V+131,postinc1
 33574  014A2C  0060  F6D3  FFE6   	movff	_V+132,postinc1
 33575  014A32  0E31               	movlw	49
 33576  014A34  6EE6               	movwf	postinc1,c
 33577  014A36  0E00               	movlw	0
 33578  014A38  6EE6               	movwf	postinc1,c
 33579  014A3A  0E53               	movlw	low STR_65
 33580  014A3C  6EE6               	movwf	postinc1,c
 33581  014A3E  0EFC               	movlw	high STR_65
 33582  014A40  6EE6               	movwf	postinc1,c
 33583                           
 33584                           ;stkvar	_log_ptr @ sp[(-74)+0]
 33585  014A42  0EB6               	movlw	-74
 33586  014A44  006F FF8F FFE6     	movff	plusw1,postinc1
 33587  014A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 33588  014A50  0E4A               	movlw	74
 33589  014A52  6EE6               	movwf	postinc1,c
 33590  014A54  EC21  F0CD         	call	_sprintf	;wreg free
 33591                           
 33592                           ; BSR set to: 0
 33593                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33594  014A58  0E7D               	movlw	125
 33595  014A5A  6EE6               	movwf	postinc1,c
 33596  014A5C  0E00               	movlw	0
 33597  014A5E  6EE6               	movwf	postinc1,c
 33598  014A60  0E0A               	movlw	10
 33599  014A62  6EE6               	movwf	postinc1,c
 33600  014A64  EC6E  F0D9         	call	_StartTimer	;wreg free
 33601                           
 33602                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33603                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33604  014A68  0EFE               	movlw	-2
 33605  014A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 33606  014A70  006F FF8F FFE6     	movff	plusw1,postinc1
 33607  014A76  ECE0  F0D2         	call	_strlen	;wreg free
 33608  014A7A  0060  F007  FFE6   	movff	btemp,postinc1
 33609  014A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33610  014A86  ECE0  F0D7         	call	_send_port_data_dma	;wreg free
 33611  014A8A                     l12657:
 33612                           
 33613                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33614  014A8A  0E09               	movlw	9
 33615  014A8C  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33616  014A8E  D001               	goto	l2042
 33617                           
 33618                           ;bsoc.c: 87:   log_update_wait = 0;
 33619  014A90  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 33620  014A92                     l2042:
 33621                           
 33622                           ;bsoc.c: 89:  C.update = 0;
 33623  014A92  0E00               	movlw	0
 33624  014A94  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33625                           
 33626                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33627  014A9A  92BE               	bcf	190,1,c	;volatile
 33628                           
 33629                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33630  014A9C  52E5               	movf	postdec1,f,c
 33631  014A9E  52E5               	movf	postdec1,f,c
 33632  014AA0  0012               	return		;funcret
 33633  014AA2                     __end_of_calc_bsoc:
 33634                           	opt callstack 0
 33635                           
 33636 ;; *************** function _send_port_data_dma *****************
 33637 ;; Defined at:
 33638 ;;		line 258 in file "eadog.c"
 33639 ;; Parameters:    Size  Location     Type
 33640 ;;  dsize           2  [STACK] unsigned short 
 33641 ;; Auto vars:     Size  Location     Type
 33642 ;;		None
 33643 ;; Return value:  Size  Location     Type
 33644 ;;                  1  [STACK] void 
 33645 ;; Registers used:
 33646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33647 ;; Tracked objects:
 33648 ;;		On entry : 0/0
 33649 ;;		On exit  : 3F/3B
 33650 ;;		Unchanged: 0/0
 33651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33656 ;;Total ram usage:        0 bytes
 33657 ;; Hardware stack levels used:    1
 33658 ;; Hardware stack levels required when called:    3
 33659 ;; This function calls:
 33660 ;;		Nothing
 33661 ;; This function is called by:
 33662 ;;		_calc_bsoc
 33663 ;; This function uses a reentrant model
 33664 ;;
 33665                           
 33666                           	psect	text152
 33667  01AFC0                     __ptext152:
 33668                           	opt callstack 0
 33669  01AFC0                     _send_port_data_dma:
 33670                           	opt callstack 11
 33671                           
 33672                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33673                           ;stkvar	_dsize @ sp[(0)+-2]
 33674                           
 33675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33676                           ;incstack = 0
 33677  01AFC0  0EFE               	movlw	-2
 33678  01AFC2  04E3               	decf	plusw1,w,c
 33679  01AFC4  0EFF               	movlw	-1
 33680  01AFC6  006F FF8C  F001    	movff	plusw1,btemp
 33681  01AFCC  0E02               	movlw	2
 33682  01AFCE  5A01               	subwfb	btemp^0,f,c
 33683  01AFD0  A0D8               	btfss	status,0,c
 33684  01AFD2  D00C               	goto	l9859
 33685                           
 33686                           ;eadog.c: 261:   dsize = 512;
 33687  01AFD4  0E00               	movlw	0
 33688  01AFD6  6E0B               	movwf	(btemp+10)^0,c
 33689  01AFD8  0E02               	movlw	2
 33690  01AFDA  6E0C               	movwf	(btemp+11)^0,c
 33691                           
 33692                           ;stkvar	_dsize @ sp[(0)+-2]
 33693  01AFDC  0EFE               	movlw	-2
 33694  01AFDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33695  01AFE4  0EFF               	movlw	-1
 33696  01AFE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 33697  01AFEC                     l9859:
 33698                           
 33699                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33700  01AFEC  013B               	movlb	59	; () banked
 33701  01AFEE  9FDC               	bcf	220,7,b	;volatile
 33702                           
 33703                           ; BSR set to: 59
 33704                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33705                           ;stkvar	_dsize @ sp[(0)+-2]
 33706  01AFF0  0EFE               	movlw	-2
 33707  01AFF2  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33708  01AFF8  0EFF               	movlw	-1
 33709  01AFFA  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33710                           
 33711                           ; BSR set to: 59
 33712                           ;eadog.c: 265:  DMA2DSZ = 1;
 33713  01B000  0E00               	movlw	0
 33714  01B002  6FCF               	movwf	207,b	;volatile
 33715  01B004  0E01               	movlw	1
 33716  01B006  6FCE               	movwf	206,b	;volatile
 33717                           
 33718                           ; BSR set to: 59
 33719                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33720  01B008  8FDC               	bsf	220,7,b	;volatile
 33721                           
 33722                           ; BSR set to: 59
 33723                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33724  01B00A  8DDC               	bsf	220,6,b	;volatile
 33725                           
 33726                           ; BSR set to: 59
 33727                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33728  01B00C  52E5               	movf	postdec1,f,c
 33729  01B00E  52E5               	movf	postdec1,f,c
 33730  01B010  0012               	return		;funcret
 33731  01B012                     __end_of_send_port_data_dma:
 33732                           	opt callstack 0
 33733                           
 33734 ;; *************** function _port_data_dma_ptr *****************
 33735 ;; Defined at:
 33736 ;;		line 273 in file "eadog.c"
 33737 ;; Parameters:    Size  Location     Type
 33738 ;;		None
 33739 ;; Auto vars:     Size  Location     Type
 33740 ;;		None
 33741 ;; Return value:  Size  Location     Type
 33742 ;;                  2  [STACK] PTR unsigned char 
 33743 ;; Registers used:
 33744 ;;		wreg, status,2, status,0, btemp, btemp+1
 33745 ;; Tracked objects:
 33746 ;;		On entry : 3F/1
 33747 ;;		On exit  : 0/0
 33748 ;;		Unchanged: 0/0
 33749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33754 ;;Total ram usage:        0 bytes
 33755 ;; Hardware stack levels used:    1
 33756 ;; Hardware stack levels required when called:    3
 33757 ;; This function calls:
 33758 ;;		Nothing
 33759 ;; This function is called by:
 33760 ;;		_calc_bsoc
 33761 ;; This function uses a reentrant model
 33762 ;;
 33763                           
 33764                           	psect	text153
 33765  01BD80                     __ptext153:
 33766                           	opt callstack 0
 33767  01BD80                     _port_data_dma_ptr:
 33768                           	opt callstack 11
 33769                           
 33770                           ;eadog.c: 275:  return port_data;
 33771                           
 33772                           ; BSR set to: 59
 33773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33774                           ;incstack = 0
 33775  01BD80  0EFF               	movlw	low _port_data
 33776  01BD82  6E01               	movwf	btemp^0,c
 33777  01BD84  0E04               	movlw	high _port_data
 33778  01BD86  6E02               	movwf	(btemp+1)^0,c
 33779                           
 33780                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33781  01BD88  0012               	return		;funcret
 33782  01BD8A                     __end_of_port_data_dma_ptr:
 33783                           	opt callstack 0
 33784                           
 33785 ;; *************** function ___asfladd *****************
 33786 ;; Defined at:
 33787 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 33788 ;; Parameters:    Size  Location     Type
 33789 ;;  f1p             2  [STACK] PTR 
 33790 ;;		 -> C(295), 
 33791 ;;  f2              4  [STACK] PTR 
 33792 ;; Auto vars:     Size  Location     Type
 33793 ;;		None
 33794 ;; Return value:  Size  Location     Type
 33795 ;;                  4  [STACK] PTR 
 33796 ;; Registers used:
 33797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33798 ;; Tracked objects:
 33799 ;;		On entry : 0/0
 33800 ;;		On exit  : 0/0
 33801 ;;		Unchanged: 0/0
 33802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33807 ;;Total ram usage:        0 bytes
 33808 ;; Hardware stack levels used:    1
 33809 ;; Hardware stack levels required when called:    4
 33810 ;; This function calls:
 33811 ;;		___fladd
 33812 ;; This function is called by:
 33813 ;;		_calc_bsoc
 33814 ;; This function uses a reentrant model
 33815 ;;
 33816                           
 33817                           	psect	text154
 33818  01AAC2                     __ptext154:
 33819                           	opt callstack 0
 33820  01AAC2                     ___asfladd:
 33821                           	opt callstack 10
 33822                           
 33823                           ;	Return value of ___asfladd is never used
 33824                           ;stkvar	_f2 @ sp[(0)+-6]
 33825                           
 33826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33827                           ;incstack = 0
 33828  01AAC2  0EFA               	movlw	-6
 33829  01AAC4  006F FF8F FFE6     	movff	plusw1,postinc1
 33830  01AACA  006F FF8F FFE6     	movff	plusw1,postinc1
 33831  01AAD0  006F FF8F FFE6     	movff	plusw1,postinc1
 33832  01AAD6  006F FF8F FFE6     	movff	plusw1,postinc1
 33833                           
 33834                           ;stkvar	_f1p @ sp[(-4)+-2]
 33835  01AADC  0EFA               	movlw	-6
 33836  01AADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 33837  01AAE4  0EFB               	movlw	-5
 33838  01AAE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 33839  01AAEC  006F FF7B FFE6     	movff	postinc2,postinc1
 33840  01AAF2  006F FF7B FFE6     	movff	postinc2,postinc1
 33841  01AAF8  006F FF7B FFE6     	movff	postinc2,postinc1
 33842  01AAFE  006F FF7B FFE6     	movff	postinc2,postinc1
 33843  01AB04  ECB5  F09D         	call	___fladd	;wreg free
 33844                           
 33845                           ;stkvar	_f1p @ sp[(0)+-2]
 33846  01AB08  0EFE               	movlw	-2
 33847  01AB0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 33848  01AB10  0EFF               	movlw	-1
 33849  01AB12  006F FF8F FFDA     	movff	plusw1,fsr2h
 33850  01AB18  0060  F007  FFDE   	movff	btemp,postinc2
 33851  01AB1E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 33852  01AB24  0060  F00F  FFDE   	movff	btemp+2,postinc2
 33853  01AB2A  0060  F013  FFDE   	movff	btemp+3,postinc2
 33854                           
 33855                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 33856  01AB30  0EFA               	movlw	250
 33857  01AB32  26E1               	addwf	fsr1l,f,c
 33858  01AB34  0EFF               	movlw	255
 33859  01AB36  22E2               	addwfc	fsr1h,f,c
 33860  01AB38  0012               	return		;funcret
 33861  01AB3A                     __end_of___asfladd:
 33862                           	opt callstack 0
 33863                           
 33864 ;; *************** function _INT0_ISR *****************
 33865 ;; Defined at:
 33866 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33867 ;; Parameters:    Size  Location     Type
 33868 ;;		None
 33869 ;; Auto vars:     Size  Location     Type
 33870 ;;		None
 33871 ;; Return value:  Size  Location     Type
 33872 ;;                  1    wreg      void 
 33873 ;; Registers used:
 33874 ;;		wreg, status,2, status,0, pclath, tosl
 33875 ;; Tracked objects:
 33876 ;;		On entry : 0/0
 33877 ;;		On exit  : 0/0
 33878 ;;		Unchanged: 0/0
 33879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33884 ;;Total ram usage:        0 bytes
 33885 ;; Hardware stack levels used:    1
 33886 ;; Hardware stack levels required when called:    2
 33887 ;; This function calls:
 33888 ;;		_INT0_CallBack
 33889 ;; This function is called by:
 33890 ;;		Interrupt level 2
 33891 ;; This function uses a non-reentrant model
 33892 ;;
 33893                           
 33894                           	psect	text155
 33895  01BD58                     __ptext155:
 33896                           	opt callstack 0
 33897  01BD58                     _INT0_ISR:
 33898                           	opt callstack 3
 33899                           
 33900                           ;incstack = 0
 33901  01BD58  EE14  F15C         	lfsr	1,___inthi_sp
 33902                           
 33903                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33904  01BD5C  0139               	movlb	57	; () banked
 33905  01BD5E  91A1               	bcf	161,0,b	;volatile
 33906                           
 33907                           ; BSR set to: 57
 33908                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33909  01BD60  EC58  F0DD         	call	_INT0_CallBack	;wreg free
 33910  01BD64  0011               	retfie		f
 33911  01BD66                     __end_of_INT0_ISR:
 33912                           	opt callstack 0
 33913                           
 33914 ;; *************** function _INT0_CallBack *****************
 33915 ;; Defined at:
 33916 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33917 ;; Parameters:    Size  Location     Type
 33918 ;;		None
 33919 ;; Auto vars:     Size  Location     Type
 33920 ;;		None
 33921 ;; Return value:  Size  Location     Type
 33922 ;;                  1  [STACK] void 
 33923 ;; Registers used:
 33924 ;;		wreg, status,2, status,0, pclath, tosl
 33925 ;; Tracked objects:
 33926 ;;		On entry : 3F/39
 33927 ;;		On exit  : 0/0
 33928 ;;		Unchanged: 0/0
 33929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33934 ;;Total ram usage:        0 bytes
 33935 ;; Hardware stack levels used:    1
 33936 ;; Hardware stack levels required when called:    1
 33937 ;; This function calls:
 33938 ;;		Absolute function
 33939 ;;		_INT0_DefaultInterruptHandler
 33940 ;; This function is called by:
 33941 ;;		_INT0_ISR
 33942 ;; This function uses a reentrant model
 33943 ;;
 33944                           
 33945                           	psect	text156
 33946  01BAB0                     __ptext156:
 33947                           	opt callstack 0
 33948  01BAB0                     _INT0_CallBack:
 33949                           	opt callstack 3
 33950                           
 33951                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33952                           
 33953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33954                           ;incstack = 0
 33955  01BAB0  0100               	movlb	0	; () banked
 33956  01BAB2  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33957  01BAB4  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33958  01BAB6  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33959  01BAB8  B4D8               	btfsc	status,2,c
 33960  01BABA  0012               	return	
 33961                           
 33962                           ; BSR set to: 0
 33963                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33964  01BABC  D801               	call	u989_48
 33965  01BABE  0012               	return	
 33966  01BAC0                     u989_48:
 33967  01BAC0  0005               	push	
 33968  01BAC2  6EFA               	movwf	pclath,c
 33969  01BAC4  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33970  01BAC6  6EFD               	movwf	tosl,c
 33971  01BAC8  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33972  01BACA  6EFE               	movwf	tosh,c
 33973  01BACC  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33974  01BACE  6EFF               	movwf	tosu,c
 33975  01BAD0  50FA               	movf	pclath,w,c
 33976  01BAD2  0012               	return		;indir
 33977  01BAD4                     __end_of_INT0_CallBack:
 33978                           	opt callstack 0
 33979                           
 33980 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33981 ;; Defined at:
 33982 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33983 ;; Parameters:    Size  Location     Type
 33984 ;;		None
 33985 ;; Auto vars:     Size  Location     Type
 33986 ;;		None
 33987 ;; Return value:  Size  Location     Type
 33988 ;;                  1  [STACK] void 
 33989 ;; Registers used:
 33990 ;;		None
 33991 ;; Tracked objects:
 33992 ;;		On entry : 3F/0
 33993 ;;		On exit  : 0/0
 33994 ;;		Unchanged: 0/0
 33995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34000 ;;Total ram usage:        0 bytes
 34001 ;; Hardware stack levels used:    1
 34002 ;; This function calls:
 34003 ;;		Nothing
 34004 ;; This function is called by:
 34005 ;;		_EXT_INT_Initialize
 34006 ;;		_INT0_CallBack
 34007 ;; This function uses a reentrant model
 34008 ;;
 34009                           
 34010                           	psect	text157
 34011  01BDFA                     __ptext157:
 34012                           	opt callstack 0
 34013  01BDFA                     _INT0_DefaultInterruptHandler:
 34014                           	opt callstack 3
 34015                           
 34016                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34017                           
 34018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34019                           ;incstack = 0
 34020  01BDFA  0012               	return		;funcret
 34021  01BDFC                     __end_of_INT0_DefaultInterruptHandler:
 34022                           	opt callstack 0
 34023                           
 34024 ;; *************** function _Default_ISR *****************
 34025 ;; Defined at:
 34026 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34027 ;; Parameters:    Size  Location     Type
 34028 ;;		None
 34029 ;; Auto vars:     Size  Location     Type
 34030 ;;		None
 34031 ;; Return value:  Size  Location     Type
 34032 ;;                  1    wreg      void 
 34033 ;; Registers used:
 34034 ;;		None
 34035 ;; Tracked objects:
 34036 ;;		On entry : 0/0
 34037 ;;		On exit  : 0/0
 34038 ;;		Unchanged: 0/0
 34039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;Total ram usage:        0 bytes
 34045 ;; Hardware stack levels used:    1
 34046 ;; This function calls:
 34047 ;;		Nothing
 34048 ;; This function is called by:
 34049 ;;		Interrupt level 2
 34050 ;; This function uses a non-reentrant model
 34051 ;;
 34052                           
 34053                           	psect	text158
 34054  01BDF0                     __ptext158:
 34055                           	opt callstack 0
 34056  01BDF0                     _Default_ISR:
 34057                           	opt callstack 5
 34058                           
 34059                           ;incstack = 0
 34060  01BDF0  EE14  F15C         	lfsr	1,___inthi_sp
 34061  01BDF4  0011               	retfie		f
 34062  01BDF6                     __end_of_Default_ISR:
 34063                           	opt callstack 0
 34064                           
 34065 ;; *************** function _ADCC_ISR *****************
 34066 ;; Defined at:
 34067 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34068 ;; Parameters:    Size  Location     Type
 34069 ;;		None
 34070 ;; Auto vars:     Size  Location     Type
 34071 ;;		None
 34072 ;; Return value:  Size  Location     Type
 34073 ;;                  1    wreg      void 
 34074 ;; Registers used:
 34075 ;;		wreg, status,2, status,0, pclath, tosl
 34076 ;; Tracked objects:
 34077 ;;		On entry : 0/0
 34078 ;;		On exit  : 0/0
 34079 ;;		Unchanged: 0/0
 34080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34085 ;;Total ram usage:        0 bytes
 34086 ;; Hardware stack levels used:    1
 34087 ;; Hardware stack levels required when called:    1
 34088 ;; This function calls:
 34089 ;;		Absolute function
 34090 ;;		_ADCC_DefaultInterruptHandler
 34091 ;;		_adc_int_handler
 34092 ;; This function is called by:
 34093 ;;		Interrupt level 2
 34094 ;; This function uses a non-reentrant model
 34095 ;;
 34096                           
 34097                           	psect	text159
 34098  01B6F4                     __ptext159:
 34099                           	opt callstack 0
 34100  01B6F4                     _ADCC_ISR:
 34101                           	opt callstack 4
 34102                           
 34103                           ;incstack = 0
 34104  01B6F4  EE14  F15C         	lfsr	1,___inthi_sp
 34105                           
 34106                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34107  01B6F8  0139               	movlb	57	; () banked
 34108  01B6FA  95A1               	bcf	161,2,b	;volatile
 34109                           
 34110                           ; BSR set to: 57
 34111                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34112  01B6FC  0100               	movlb	0	; () banked
 34113  01B6FE  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34114  01B700  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34115  01B702  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34116  01B704  B4D8               	btfsc	status,2,c
 34117  01B706  0011               	retfie		f
 34118                           
 34119                           ; BSR set to: 0
 34120                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34121  01B708  D801               	call	i2u1032_48
 34122  01B70A  0011               	retfie		f
 34123  01B70C                     i2u1032_48:
 34124  01B70C  0005               	push	
 34125  01B70E  6EFA               	movwf	pclath,c
 34126  01B710  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34127  01B712  6EFD               	movwf	tosl,c
 34128  01B714  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34129  01B716  6EFE               	movwf	tosh,c
 34130  01B718  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34131  01B71A  6EFF               	movwf	tosu,c
 34132  01B71C  50FA               	movf	pclath,w,c
 34133  01B71E  0012               	return		;indir
 34134  01B720                     __end_of_ADCC_ISR:
 34135                           	opt callstack 0
 34136                           
 34137 ;; *************** function _adc_int_t_handler *****************
 34138 ;; Defined at:
 34139 ;;		line 146 in file "daq.c"
 34140 ;; Parameters:    Size  Location     Type
 34141 ;;		None
 34142 ;; Auto vars:     Size  Location     Type
 34143 ;;		None
 34144 ;; Return value:  Size  Location     Type
 34145 ;;                  1  [STACK] void 
 34146 ;; Registers used:
 34147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34148 ;; Tracked objects:
 34149 ;;		On entry : 3F/0
 34150 ;;		On exit  : 0/0
 34151 ;;		Unchanged: 0/0
 34152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34157 ;;Total ram usage:        0 bytes
 34158 ;; Hardware stack levels used:    1
 34159 ;; Hardware stack levels required when called:    1
 34160 ;; This function calls:
 34161 ;;		_ADCC_DischargeSampleCapacitor
 34162 ;;		_ADCC_StartConversion
 34163 ;; This function is called by:
 34164 ;;		_start_adc_scan
 34165 ;;		_ADCC_ThresholdISR
 34166 ;; This function uses a reentrant model
 34167 ;;
 34168                           
 34169                           	psect	text160
 34170  01AA40                     __ptext160:
 34171                           	opt callstack 0
 34172  01AA40                     _adc_int_t_handler:
 34173                           	opt callstack 3
 34174                           
 34175                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34176                           
 34177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34178                           ;incstack = 0
 34179  01AA40  013E               	movlb	62	; () banked
 34180  01AA42  51E6               	movf	230,w,b	;volatile
 34181  01AA44  006F FB9C  F001    	movff	16103,btemp	;volatile
 34182  01AA4A  6A02               	clrf	(btemp+1)^0,c
 34183  01AA4C  0060  F004  F002   	movff	btemp,btemp+1
 34184  01AA52  6A01               	clrf	btemp^0,c
 34185  01AA54  2601               	addwf	btemp^0,f,c
 34186  01AA56  0E00               	movlw	0
 34187  01AA58  2202               	addwfc	(btemp+1)^0,f,c
 34188  01AA5A  0101               	movlb	1	; () banked
 34189  01AA5C  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34190  01AA5E  0D02               	mullw	2
 34191  01AA60  0E00               	movlw	low _R
 34192  01AA62  24F3               	addwf	243,w,c
 34193  01AA64  6ED9               	movwf	fsr2l,c
 34194  01AA66  0E01               	movlw	high _R
 34195  01AA68  20F4               	addwfc	prodh,w,c
 34196  01AA6A  6EDA               	movwf	fsr2h,c
 34197  01AA6C  0060  F007  FFDE   	movff	btemp,postinc2
 34198  01AA72  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34199  01AA78                     l11021:
 34200                           
 34201                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34202  01AA78  0101               	movlb	1	; () banked
 34203  01AA7A  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34204  01AA7C  0E0D               	movlw	13
 34205  01AA7E  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34206  01AA80  D003               	goto	l11027
 34207                           
 34208                           ; BSR set to: 1
 34209                           ;daq.c: 154:    R.done = 1;
 34210  01AA82  0E01               	movlw	1
 34211  01AA84  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34212  01AA86  0012               	return	
 34213  01AA88                     l11027:
 34214                           
 34215                           ; BSR set to: 1
 34216                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34217  01AA88  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34218  01AA8E  EE20  F12D         	lfsr	2,_R+45	;volatile
 34219  01AA92  006F FF78  F009    	movff	postinc2,btemp+8
 34220  01AA98  006F FF74  F00A    	movff	postdec2,btemp+9
 34221  01AA9E  2A0C               	incf	(btemp+11)^0,f,c
 34222  01AAA0  D003               	goto	u1029_44
 34223  01AAA2                     u1029_45:
 34224  01AAA2  90D8               	bcf	status,0,c
 34225  01AAA4  320A               	rrcf	(btemp+9)^0,f,c
 34226  01AAA6  3209               	rrcf	(btemp+8)^0,f,c
 34227  01AAA8                     u1029_44:
 34228  01AAA8  2E0C               	decfsz	(btemp+11)^0,f,c
 34229  01AAAA  D7FB               	goto	u1029_45
 34230  01AAAC  A009               	btfss	(btemp+8)^0,0,c
 34231  01AAAE  D7E4               	goto	l11021
 34232                           
 34233                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34234  01AAB0  ECD7  F0DE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34235                           
 34236                           ; BSR set to: 62
 34237                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34238  01AAB4  0101               	movlb	1	; () banked
 34239  01AAB6  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34240  01AAB8  0B0F               	andlw	15
 34241  01AABA  6EE6               	movwf	postinc1,c
 34242  01AABC  EC66  F0DE         	call	_ADCC_StartConversion	;wreg free
 34243                           
 34244                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34245  01AAC0  0012               	return		;funcret
 34246  01AAC2                     __end_of_adc_int_t_handler:
 34247                           	opt callstack 0
 34248                           
 34249 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34250 ;; Defined at:
 34251 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34252 ;; Parameters:    Size  Location     Type
 34253 ;;		None
 34254 ;; Auto vars:     Size  Location     Type
 34255 ;;		None
 34256 ;; Return value:  Size  Location     Type
 34257 ;;                  1  [STACK] void 
 34258 ;; Registers used:
 34259 ;;		None
 34260 ;; Tracked objects:
 34261 ;;		On entry : 3F/0
 34262 ;;		On exit  : 0/0
 34263 ;;		Unchanged: 0/0
 34264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;Total ram usage:        0 bytes
 34270 ;; Hardware stack levels used:    1
 34271 ;; This function calls:
 34272 ;;		Nothing
 34273 ;; This function is called by:
 34274 ;;		_ADCC_Initialize
 34275 ;;		_ADCC_ISR
 34276 ;;		_ADCC_ThresholdISR
 34277 ;; This function uses a reentrant model
 34278 ;;
 34279                           
 34280                           	psect	text161
 34281  01BDFC                     __ptext161:
 34282                           	opt callstack 0
 34283  01BDFC                     _ADCC_DefaultInterruptHandler:
 34284                           	opt callstack 4
 34285                           
 34286                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34287                           
 34288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34289                           ;incstack = 0
 34290  01BDFC  0012               	return		;funcret
 34291  01BDFE                     __end_of_ADCC_DefaultInterruptHandler:
 34292                           	opt callstack 0
 34293                           
 34294 ;; *************** function _adc_int_handler *****************
 34295 ;; Defined at:
 34296 ;;		line 136 in file "daq.c"
 34297 ;; Parameters:    Size  Location     Type
 34298 ;;		None
 34299 ;; Auto vars:     Size  Location     Type
 34300 ;;		None
 34301 ;; Return value:  Size  Location     Type
 34302 ;;                  1  [STACK] void 
 34303 ;; Registers used:
 34304 ;;		None
 34305 ;; Tracked objects:
 34306 ;;		On entry : 3F/0
 34307 ;;		On exit  : 0/0
 34308 ;;		Unchanged: 0/0
 34309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34314 ;;Total ram usage:        0 bytes
 34315 ;; Hardware stack levels used:    1
 34316 ;; This function calls:
 34317 ;;		Nothing
 34318 ;; This function is called by:
 34319 ;;		_start_adc_scan
 34320 ;;		_ADCC_ISR
 34321 ;; This function uses a reentrant model
 34322 ;;
 34323                           
 34324                           	psect	text162
 34325  01BDFE                     __ptext162:
 34326                           	opt callstack 0
 34327  01BDFE                     _adc_int_handler:
 34328                           	opt callstack 4
 34329                           
 34330                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34331                           
 34332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34333                           ;incstack = 0
 34334  01BDFE  0012               	return		;funcret
 34335  01BE00                     __end_of_adc_int_handler:
 34336                           	opt callstack 0
 34337                           
 34338 ;; *************** function _ADCC_ThresholdISR *****************
 34339 ;; Defined at:
 34340 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34341 ;; Parameters:    Size  Location     Type
 34342 ;;		None
 34343 ;; Auto vars:     Size  Location     Type
 34344 ;;		None
 34345 ;; Return value:  Size  Location     Type
 34346 ;;                  1    wreg      void 
 34347 ;; Registers used:
 34348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34349 ;; Tracked objects:
 34350 ;;		On entry : 0/0
 34351 ;;		On exit  : 0/0
 34352 ;;		Unchanged: 0/0
 34353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34356 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34358 ;;Total ram usage:        5 bytes
 34359 ;; Hardware stack levels used:    1
 34360 ;; Hardware stack levels required when called:    2
 34361 ;; This function calls:
 34362 ;;		Absolute function
 34363 ;;		_ADCC_DefaultInterruptHandler
 34364 ;;		_adc_int_t_handler
 34365 ;; This function is called by:
 34366 ;;		Interrupt level 2
 34367 ;; This function uses a non-reentrant model
 34368 ;;
 34369                           
 34370                           	psect	text163
 34371  01AC10                     __ptext163:
 34372                           	opt callstack 0
 34373  01AC10                     _ADCC_ThresholdISR:
 34374                           	opt callstack 3
 34375                           
 34376                           ;incstack = 0
 34377  01AC10  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34378  01AC16  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34379  01AC1C  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34380  01AC22  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34381  01AC28  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34382  01AC2E  EE14  F15C         	lfsr	1,___inthi_sp
 34383                           
 34384                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34385  01AC32  0139               	movlb	57	; () banked
 34386  01AC34  97A1               	bcf	161,3,b	;volatile
 34387                           
 34388                           ; BSR set to: 57
 34389                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34390  01AC36  0100               	movlb	0	; () banked
 34391  01AC38  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34392  01AC3A  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34393  01AC3C  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34394  01AC3E  B4D8               	btfsc	status,2,c
 34395  01AC40  D00C               	goto	i2u1034_49
 34396                           
 34397                           ; BSR set to: 0
 34398                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34399  01AC42  D801               	call	i2u1034_48
 34400  01AC44  D00A               	goto	i2u1034_49
 34401  01AC46                     i2u1034_48:
 34402  01AC46  0005               	push	
 34403  01AC48  6EFA               	movwf	pclath,c
 34404  01AC4A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34405  01AC4C  6EFD               	movwf	tosl,c
 34406  01AC4E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34407  01AC50  6EFE               	movwf	tosh,c
 34408  01AC52  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34409  01AC54  6EFF               	movwf	tosu,c
 34410  01AC56  50FA               	movf	pclath,w,c
 34411  01AC58  0012               	return		;indir
 34412  01AC5A                     i2u1034_49:
 34413  01AC5A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34414  01AC60  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34415  01AC66  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34416  01AC6C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34417  01AC72  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34418  01AC78  0011               	retfie		f
 34419  01AC7A                     __end_of_ADCC_ThresholdISR:
 34420                           	opt callstack 0
 34421                           
 34422 ;; *************** function _UART1_rx_vect_isr *****************
 34423 ;; Defined at:
 34424 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34425 ;; Parameters:    Size  Location     Type
 34426 ;;		None
 34427 ;; Auto vars:     Size  Location     Type
 34428 ;;		None
 34429 ;; Return value:  Size  Location     Type
 34430 ;;                  1    wreg      void 
 34431 ;; Registers used:
 34432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34433 ;; Tracked objects:
 34434 ;;		On entry : 0/0
 34435 ;;		On exit  : 0/0
 34436 ;;		Unchanged: 0/0
 34437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34442 ;;Total ram usage:        0 bytes
 34443 ;; Hardware stack levels used:    1
 34444 ;; Hardware stack levels required when called:    1
 34445 ;; This function calls:
 34446 ;;		Absolute function
 34447 ;;		_UART1_Receive_ISR
 34448 ;; This function is called by:
 34449 ;;		Interrupt level 2
 34450 ;; This function uses a non-reentrant model
 34451 ;;
 34452                           
 34453                           	psect	text164
 34454  01B9A8                     __ptext164:
 34455                           	opt callstack 0
 34456  01B9A8                     _UART1_rx_vect_isr:
 34457                           	opt callstack 4
 34458                           
 34459                           ;incstack = 0
 34460  01B9A8  EE14  F15C         	lfsr	1,___inthi_sp
 34461                           
 34462                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34463  01B9AC  0100               	movlb	0	; () banked
 34464  01B9AE  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34465  01B9B0  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34466  01B9B2  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34467  01B9B4  B4D8               	btfsc	status,2,c
 34468  01B9B6  0011               	retfie		f
 34469                           
 34470                           ; BSR set to: 0
 34471                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34472  01B9B8  D801               	call	i2u1036_48
 34473  01B9BA  0011               	retfie		f
 34474  01B9BC                     i2u1036_48:
 34475  01B9BC  0005               	push	
 34476  01B9BE  6EFA               	movwf	pclath,c
 34477  01B9C0  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34478  01B9C2  6EFD               	movwf	tosl,c
 34479  01B9C4  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34480  01B9C6  6EFE               	movwf	tosh,c
 34481  01B9C8  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34482  01B9CA  6EFF               	movwf	tosu,c
 34483  01B9CC  50FA               	movf	pclath,w,c
 34484  01B9CE  0012               	return		;indir
 34485  01B9D0                     __end_of_UART1_rx_vect_isr:
 34486                           	opt callstack 0
 34487                           
 34488 ;; *************** function _UART1_Receive_ISR *****************
 34489 ;; Defined at:
 34490 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34491 ;; Parameters:    Size  Location     Type
 34492 ;;		None
 34493 ;; Auto vars:     Size  Location     Type
 34494 ;;		None
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  1  [STACK] void 
 34497 ;; Registers used:
 34498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34499 ;; Tracked objects:
 34500 ;;		On entry : 3F/0
 34501 ;;		On exit  : 3F/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34508 ;;Total ram usage:        0 bytes
 34509 ;; Hardware stack levels used:    1
 34510 ;; This function calls:
 34511 ;;		Nothing
 34512 ;; This function is called by:
 34513 ;;		_UART1_Initialize
 34514 ;;		_UART1_rx_vect_isr
 34515 ;; This function uses a reentrant model
 34516 ;;
 34517                           
 34518                           	psect	text165
 34519  01BBD6                     __ptext165:
 34520                           	opt callstack 0
 34521  01BBD6                     _UART1_Receive_ISR:
 34522                           	opt callstack 4
 34523                           
 34524                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34525                           
 34526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34527                           ;incstack = 0
 34528  01BBD6  5047               	movf	_uart1RxHead^0,w,c
 34529  01BBD8  0F6C               	addlw	low _uart1RxBuffer
 34530  01BBDA  6ED9               	movwf	fsr2l,c
 34531  01BBDC  6ADA               	clrf	fsr2h,c
 34532  01BBDE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34533  01BBE4  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 34534                           
 34535                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34536  01BBE6  0E07               	movlw	7
 34537  01BBE8  6447               	cpfsgt	_uart1RxHead^0,c
 34538  01BBEA  D001               	goto	l10601
 34539                           
 34540                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34541  01BBEC  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34542  01BBEE                     l10601:
 34543                           
 34544                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34545  01BBEE  0100               	movlb	0	; () banked
 34546  01BBF0  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 34547                           
 34548                           ; BSR set to: 0
 34549                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34550  01BBF2  0012               	return		;funcret
 34551  01BBF4                     __end_of_UART1_Receive_ISR:
 34552                           	opt callstack 0
 34553                           
 34554 ;; *************** function _UART2_tx_vect_isr *****************
 34555 ;; Defined at:
 34556 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34557 ;; Parameters:    Size  Location     Type
 34558 ;;		None
 34559 ;; Auto vars:     Size  Location     Type
 34560 ;;		None
 34561 ;; Return value:  Size  Location     Type
 34562 ;;                  1    wreg      void 
 34563 ;; Registers used:
 34564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34565 ;; Tracked objects:
 34566 ;;		On entry : 0/0
 34567 ;;		On exit  : 0/0
 34568 ;;		Unchanged: 0/0
 34569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34574 ;;Total ram usage:        0 bytes
 34575 ;; Hardware stack levels used:    1
 34576 ;; Hardware stack levels required when called:    1
 34577 ;; This function calls:
 34578 ;;		Absolute function
 34579 ;;		_UART2_Transmit_ISR
 34580 ;; This function is called by:
 34581 ;;		Interrupt level 2
 34582 ;; This function uses a non-reentrant model
 34583 ;;
 34584                           
 34585                           	psect	text166
 34586  01B9D0                     __ptext166:
 34587                           	opt callstack 0
 34588  01B9D0                     _UART2_tx_vect_isr:
 34589                           	opt callstack 4
 34590                           
 34591                           ; BSR set to: 0
 34592                           ;incstack = 0
 34593  01B9D0  EE14  F15C         	lfsr	1,___inthi_sp
 34594                           
 34595                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34596  01B9D4  0100               	movlb	0	; () banked
 34597  01B9D6  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34598  01B9D8  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34599  01B9DA  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34600  01B9DC  B4D8               	btfsc	status,2,c
 34601  01B9DE  0011               	retfie		f
 34602                           
 34603                           ; BSR set to: 0
 34604                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34605  01B9E0  D801               	call	i2u1038_48
 34606  01B9E2  0011               	retfie		f
 34607  01B9E4                     i2u1038_48:
 34608  01B9E4  0005               	push	
 34609  01B9E6  6EFA               	movwf	pclath,c
 34610  01B9E8  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34611  01B9EA  6EFD               	movwf	tosl,c
 34612  01B9EC  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34613  01B9EE  6EFE               	movwf	tosh,c
 34614  01B9F0  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34615  01B9F2  6EFF               	movwf	tosu,c
 34616  01B9F4  50FA               	movf	pclath,w,c
 34617  01B9F6  0012               	return		;indir
 34618  01B9F8                     __end_of_UART2_tx_vect_isr:
 34619                           	opt callstack 0
 34620                           
 34621 ;; *************** function _UART2_Transmit_ISR *****************
 34622 ;; Defined at:
 34623 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34624 ;; Parameters:    Size  Location     Type
 34625 ;;		None
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;		None
 34628 ;; Return value:  Size  Location     Type
 34629 ;;                  1  [STACK] void 
 34630 ;; Registers used:
 34631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34632 ;; Tracked objects:
 34633 ;;		On entry : 3F/0
 34634 ;;		On exit  : 3B/39
 34635 ;;		Unchanged: 0/0
 34636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34641 ;;Total ram usage:        0 bytes
 34642 ;; Hardware stack levels used:    1
 34643 ;; This function calls:
 34644 ;;		Nothing
 34645 ;; This function is called by:
 34646 ;;		_UART2_Initialize
 34647 ;;		_UART2_tx_vect_isr
 34648 ;; This function uses a reentrant model
 34649 ;;
 34650                           
 34651                           	psect	text167
 34652  01B720                     __ptext167:
 34653                           	opt callstack 0
 34654  01B720                     _UART2_Transmit_ISR:
 34655                           	opt callstack 4
 34656                           
 34657                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34658                           
 34659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34660                           ;incstack = 0
 34661  01B720  0E40               	movlw	64
 34662  01B722  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 34663  01B724  D010               	goto	l673
 34664                           
 34665                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34666  01B726  0E00               	movlw	low _uart2TxBuffer
 34667  01B728  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 34668  01B72A  6ED9               	movwf	fsr2l,c
 34669  01B72C  6ADA               	clrf	fsr2h,c
 34670  01B72E  0E03               	movlw	high _uart2TxBuffer
 34671  01B730  22DA               	addwfc	fsr2h,f,c
 34672  01B732  50DF               	movf	indf2,w,c
 34673  01B734  013D               	movlb	61	; () banked
 34674  01B736  6FD2               	movwf	210,b	;volatile
 34675                           
 34676                           ; BSR set to: 61
 34677  01B738  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 34678                           
 34679                           ; BSR set to: 61
 34680                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34681  01B73A  0E3F               	movlw	63
 34682  01B73C  6445               	cpfsgt	_uart2TxTail^0,c
 34683  01B73E  D001               	goto	l10613
 34684                           
 34685                           ; BSR set to: 61
 34686                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34687  01B740  6A45               	clrf	_uart2TxTail^0,c	;volatile
 34688  01B742                     l10613:
 34689                           
 34690                           ; BSR set to: 61
 34691                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34692  01B742  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34693                           
 34694                           ;mcc_generated_files/uart2.c: 224:     }
 34695  01B744  0012               	return	
 34696  01B746                     l673:
 34697                           
 34698                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34699  01B746  0139               	movlb	57	; () banked
 34700  01B748  9796               	bcf	150,3,b	;volatile
 34701                           
 34702                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34703  01B74A  0012               	return		;funcret
 34704  01B74C                     __end_of_UART2_Transmit_ISR:
 34705                           	opt callstack 0
 34706                           
 34707 ;; *************** function _UART2_rx_vect_isr *****************
 34708 ;; Defined at:
 34709 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34710 ;; Parameters:    Size  Location     Type
 34711 ;;		None
 34712 ;; Auto vars:     Size  Location     Type
 34713 ;;		None
 34714 ;; Return value:  Size  Location     Type
 34715 ;;                  1    wreg      void 
 34716 ;; Registers used:
 34717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34718 ;; Tracked objects:
 34719 ;;		On entry : 0/0
 34720 ;;		On exit  : 0/0
 34721 ;;		Unchanged: 0/0
 34722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34727 ;;Total ram usage:        0 bytes
 34728 ;; Hardware stack levels used:    1
 34729 ;; Hardware stack levels required when called:    1
 34730 ;; This function calls:
 34731 ;;		Absolute function
 34732 ;;		_UART2_Receive_ISR
 34733 ;; This function is called by:
 34734 ;;		Interrupt level 2
 34735 ;; This function uses a non-reentrant model
 34736 ;;
 34737                           
 34738                           	psect	text168
 34739  01B9F8                     __ptext168:
 34740                           	opt callstack 0
 34741  01B9F8                     _UART2_rx_vect_isr:
 34742                           	opt callstack 4
 34743                           
 34744                           ;incstack = 0
 34745  01B9F8  EE14  F15C         	lfsr	1,___inthi_sp
 34746                           
 34747                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34748  01B9FC  0100               	movlb	0	; () banked
 34749  01B9FE  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34750  01BA00  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34751  01BA02  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34752  01BA04  B4D8               	btfsc	status,2,c
 34753  01BA06  0011               	retfie		f
 34754                           
 34755                           ; BSR set to: 0
 34756                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34757  01BA08  D801               	call	i2u1040_48
 34758  01BA0A  0011               	retfie		f
 34759  01BA0C                     i2u1040_48:
 34760  01BA0C  0005               	push	
 34761  01BA0E  6EFA               	movwf	pclath,c
 34762  01BA10  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34763  01BA12  6EFD               	movwf	tosl,c
 34764  01BA14  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34765  01BA16  6EFE               	movwf	tosh,c
 34766  01BA18  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34767  01BA1A  6EFF               	movwf	tosu,c
 34768  01BA1C  50FA               	movf	pclath,w,c
 34769  01BA1E  0012               	return		;indir
 34770  01BA20                     __end_of_UART2_rx_vect_isr:
 34771                           	opt callstack 0
 34772                           
 34773 ;; *************** function _UART2_Receive_ISR *****************
 34774 ;; Defined at:
 34775 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34776 ;; Parameters:    Size  Location     Type
 34777 ;;		None
 34778 ;; Auto vars:     Size  Location     Type
 34779 ;;		None
 34780 ;; Return value:  Size  Location     Type
 34781 ;;                  1  [STACK] void 
 34782 ;; Registers used:
 34783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34784 ;; Tracked objects:
 34785 ;;		On entry : 3F/0
 34786 ;;		On exit  : 3F/0
 34787 ;;		Unchanged: 0/0
 34788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34793 ;;Total ram usage:        0 bytes
 34794 ;; Hardware stack levels used:    1
 34795 ;; This function calls:
 34796 ;;		Nothing
 34797 ;; This function is called by:
 34798 ;;		_UART2_Initialize
 34799 ;;		_UART2_rx_vect_isr
 34800 ;; This function uses a reentrant model
 34801 ;;
 34802                           
 34803                           	psect	text169
 34804  01BB5C                     __ptext169:
 34805                           	opt callstack 0
 34806  01BB5C                     _UART2_Receive_ISR:
 34807                           	opt callstack 4
 34808                           
 34809                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34810                           
 34811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34812                           ;incstack = 0
 34813  01BB5C  0E00               	movlw	low _uart2RxBuffer
 34814  01BB5E  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 34815  01BB60  6ED9               	movwf	fsr2l,c
 34816  01BB62  6ADA               	clrf	fsr2h,c
 34817  01BB64  0E04               	movlw	high _uart2RxBuffer
 34818  01BB66  22DA               	addwfc	fsr2h,f,c
 34819  01BB68  006F F743 FFDF     	movff	15824,indf2	;volatile
 34820  01BB6E  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 34821                           
 34822                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34823  01BB70  2843               	incf	_uart2RxHead^0,w,c
 34824  01BB72  B4D8               	btfsc	status,2,c
 34825                           
 34826                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34827  01BB74  6A43               	clrf	_uart2RxHead^0,c	;volatile
 34828                           
 34829                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34830  01BB76  0100               	movlb	0	; () banked
 34831  01BB78  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 34832                           
 34833                           ; BSR set to: 0
 34834                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34835  01BB7A  0012               	return		;funcret
 34836  01BB7C                     __end_of_UART2_Receive_ISR:
 34837                           	opt callstack 0
 34838                           
 34839 ;; *************** function _TMR6_ISR *****************
 34840 ;; Defined at:
 34841 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34842 ;; Parameters:    Size  Location     Type
 34843 ;;		None
 34844 ;; Auto vars:     Size  Location     Type
 34845 ;;		None
 34846 ;; Return value:  Size  Location     Type
 34847 ;;                  1    wreg      void 
 34848 ;; Registers used:
 34849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34850 ;; Tracked objects:
 34851 ;;		On entry : 0/0
 34852 ;;		On exit  : 0/0
 34853 ;;		Unchanged: 0/0
 34854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34859 ;;Total ram usage:        1 bytes
 34860 ;; Hardware stack levels used:    1
 34861 ;; Hardware stack levels required when called:    2
 34862 ;; This function calls:
 34863 ;;		_TMR6_CallBack
 34864 ;; This function is called by:
 34865 ;;		Interrupt level 2
 34866 ;; This function uses a non-reentrant model
 34867 ;;
 34868                           
 34869                           	psect	text170
 34870  01BC2C                     __ptext170:
 34871                           	opt callstack 0
 34872  01BC2C                     _TMR6_ISR:
 34873                           	opt callstack 3
 34874                           
 34875                           ; BSR set to: 0
 34876                           ;incstack = 0
 34877  01BC2C  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 34878  01BC32  EE14  F15C         	lfsr	1,___inthi_sp
 34879                           
 34880                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34881  01BC36  0139               	movlb	57	; () banked
 34882  01BC38  91A9               	bcf	169,0,b	;volatile
 34883                           
 34884                           ; BSR set to: 57
 34885                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34886  01BC3A  EC6A  F0DD         	call	_TMR6_CallBack	;wreg free
 34887  01BC3E  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 34888  01BC44  0011               	retfie		f
 34889  01BC46                     __end_of_TMR6_ISR:
 34890                           	opt callstack 0
 34891                           
 34892 ;; *************** function _TMR6_CallBack *****************
 34893 ;; Defined at:
 34894 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34895 ;; Parameters:    Size  Location     Type
 34896 ;;		None
 34897 ;; Auto vars:     Size  Location     Type
 34898 ;;		None
 34899 ;; Return value:  Size  Location     Type
 34900 ;;                  1  [STACK] void 
 34901 ;; Registers used:
 34902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34903 ;; Tracked objects:
 34904 ;;		On entry : 3F/39
 34905 ;;		On exit  : 0/0
 34906 ;;		Unchanged: 0/0
 34907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34912 ;;Total ram usage:        0 bytes
 34913 ;; Hardware stack levels used:    1
 34914 ;; Hardware stack levels required when called:    1
 34915 ;; This function calls:
 34916 ;;		Absolute function
 34917 ;;		_TMR6_DefaultInterruptHandler
 34918 ;; This function is called by:
 34919 ;;		_TMR6_ISR
 34920 ;; This function uses a reentrant model
 34921 ;;
 34922                           
 34923                           	psect	text171
 34924  01BAD4                     __ptext171:
 34925                           	opt callstack 0
 34926  01BAD4                     _TMR6_CallBack:
 34927                           	opt callstack 3
 34928                           
 34929                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34930                           
 34931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34932                           ;incstack = 0
 34933  01BAD4  0100               	movlb	0	; () banked
 34934  01BAD6  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34935  01BAD8  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34936  01BADA  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34937  01BADC  B4D8               	btfsc	status,2,c
 34938  01BADE  0012               	return	
 34939                           
 34940                           ; BSR set to: 0
 34941                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34942  01BAE0  D801               	call	u997_48
 34943  01BAE2  0012               	return	
 34944  01BAE4                     u997_48:
 34945  01BAE4  0005               	push	
 34946  01BAE6  6EFA               	movwf	pclath,c
 34947  01BAE8  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34948  01BAEA  6EFD               	movwf	tosl,c
 34949  01BAEC  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34950  01BAEE  6EFE               	movwf	tosh,c
 34951  01BAF0  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34952  01BAF2  6EFF               	movwf	tosu,c
 34953  01BAF4  50FA               	movf	pclath,w,c
 34954  01BAF6  0012               	return		;indir
 34955  01BAF8                     __end_of_TMR6_CallBack:
 34956                           	opt callstack 0
 34957                           
 34958 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34959 ;; Defined at:
 34960 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34961 ;; Parameters:    Size  Location     Type
 34962 ;;		None
 34963 ;; Auto vars:     Size  Location     Type
 34964 ;;  i               1  [STACK] unsigned char 
 34965 ;; Return value:  Size  Location     Type
 34966 ;;                  1  [STACK] void 
 34967 ;; Registers used:
 34968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34969 ;; Tracked objects:
 34970 ;;		On entry : 3F/0
 34971 ;;		On exit  : 0/0
 34972 ;;		Unchanged: 0/0
 34973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34978 ;;Total ram usage:        0 bytes
 34979 ;; Hardware stack levels used:    1
 34980 ;; This function calls:
 34981 ;;		Nothing
 34982 ;; This function is called by:
 34983 ;;		_TMR6_Initialize
 34984 ;;		_TMR6_CallBack
 34985 ;; This function uses a reentrant model
 34986 ;;
 34987                           
 34988                           	psect	text172
 34989  01B012                     __ptext172:
 34990                           	opt callstack 0
 34991  01B012                     _TMR6_DefaultInterruptHandler:
 34992                           	opt callstack 0
 34993                           
 34994                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34995  01B012  52E6               	movf	postinc1,f,c
 34996                           
 34997                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34998                           ;stkvar	_i @ sp[(-1)+0]
 34999                           
 35000                           ;incstack = 0
 35001  01B014  0EFF               	movlw	-1
 35002  01B016  6AE3               	clrf	plusw1,c
 35003  01B018                     l10249:
 35004                           
 35005                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35006                           ;stkvar	_i @ sp[(-1)+0]
 35007  01B018  0EFF               	movlw	-1
 35008  01B01A  50E3               	movf	plusw1,w,c
 35009  01B01C  0D02               	mullw	2
 35010  01B01E  0E7D               	movlw	low _tickCount
 35011  01B020  24F3               	addwf	243,w,c
 35012  01B022  6ED9               	movwf	fsr2l,c
 35013  01B024  0E02               	movlw	high _tickCount
 35014  01B026  20F4               	addwfc	prodh,w,c
 35015  01B028  6EDA               	movwf	fsr2h,c
 35016  01B02A  50DE               	movf	postinc2,w,c
 35017  01B02C  10DE               	iorwf	postinc2,w,c
 35018  01B02E  B4D8               	btfsc	status,2,c
 35019  01B030  D00C               	goto	l10253
 35020                           
 35021                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35022                           ;stkvar	_i @ sp[(-1)+0]
 35023  01B032  0EFF               	movlw	-1
 35024  01B034  50E3               	movf	plusw1,w,c
 35025  01B036  0D02               	mullw	2
 35026  01B038  0E7D               	movlw	low _tickCount
 35027  01B03A  24F3               	addwf	243,w,c
 35028  01B03C  6ED9               	movwf	fsr2l,c
 35029  01B03E  0E02               	movlw	high _tickCount
 35030  01B040  20F4               	addwfc	prodh,w,c
 35031  01B042  6EDA               	movwf	fsr2h,c
 35032  01B044  06DE               	decf	postinc2,f,c
 35033  01B046  0E00               	movlw	0
 35034  01B048  5ADD               	subwfb	postdec2,f,c
 35035  01B04A                     l10253:
 35036                           
 35037                           ;mcc_generated_files/tmr6.c: 207:  }
 35038                           ;stkvar	_i @ sp[(-1)+0]
 35039  01B04A  0EFF               	movlw	-1
 35040  01B04C  2AE3               	incf	plusw1,f,c
 35041                           
 35042                           ;stkvar	_i @ sp[(-1)+0]
 35043  01B04E  0EFF               	movlw	-1
 35044  01B050  006F FF8C  F001    	movff	plusw1,btemp
 35045  01B056  0E0C               	movlw	12
 35046  01B058  6401               	cpfsgt	btemp^0,c
 35047  01B05A  D7DE               	goto	l10249
 35048                           
 35049                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35050  01B05C  52E5               	movf	postdec1,f,c
 35051  01B05E  0012               	return		;funcret
 35052  01B060                     __end_of_TMR6_DefaultInterruptHandler:
 35053                           	opt callstack 0
 35054                           
 35055 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35056 ;; Defined at:
 35057 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35058 ;; Parameters:    Size  Location     Type
 35059 ;;		None
 35060 ;; Auto vars:     Size  Location     Type
 35061 ;;		None
 35062 ;; Return value:  Size  Location     Type
 35063 ;;                  1    wreg      void 
 35064 ;; Registers used:
 35065 ;;		None
 35066 ;; Tracked objects:
 35067 ;;		On entry : 0/0
 35068 ;;		On exit  : 3F/0
 35069 ;;		Unchanged: 0/0
 35070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35075 ;;Total ram usage:        0 bytes
 35076 ;; Hardware stack levels used:    1
 35077 ;; This function calls:
 35078 ;;		Nothing
 35079 ;; This function is called by:
 35080 ;;		Interrupt level 2
 35081 ;; This function uses a non-reentrant model
 35082 ;;
 35083                           
 35084                           	psect	text173
 35085  01BD68                     __ptext173:
 35086                           	opt callstack 0
 35087  01BD68                     _DMA1_DMASCNT_ISR:
 35088                           	opt callstack 5
 35089                           
 35090                           ;incstack = 0
 35091  01BD68  EE14  F15C         	lfsr	1,___inthi_sp
 35092                           
 35093                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35094  01BD6C  0139               	movlb	57	; () banked
 35095  01BD6E  91A2               	bcf	162,0,b	;volatile
 35096                           
 35097                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35098  01BD70  0100               	movlb	0	; () banked
 35099  01BD72  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35100                           
 35101                           ; BSR set to: 0
 35102  01BD74  0011               	retfie		f
 35103  01BD76                     __end_of_DMA1_DMASCNT_ISR:
 35104                           	opt callstack 0
 35105                           
 35106 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35107 ;; Defined at:
 35108 ;;		line 134 in file "mcc_generated_files/dma1.c"
 35109 ;; Parameters:    Size  Location     Type
 35110 ;;		None
 35111 ;; Auto vars:     Size  Location     Type
 35112 ;;		None
 35113 ;; Return value:  Size  Location     Type
 35114 ;;                  1    wreg      void 
 35115 ;; Registers used:
 35116 ;;		None
 35117 ;; Tracked objects:
 35118 ;;		On entry : 0/0
 35119 ;;		On exit  : 3F/39
 35120 ;;		Unchanged: 0/0
 35121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35126 ;;Total ram usage:        0 bytes
 35127 ;; Hardware stack levels used:    1
 35128 ;; This function calls:
 35129 ;;		Nothing
 35130 ;; This function is called by:
 35131 ;;		Interrupt level 2
 35132 ;; This function uses a non-reentrant model
 35133 ;;
 35134                           
 35135                           	psect	text174
 35136  01BD8C                     __ptext174:
 35137                           	opt callstack 0
 35138  01BD8C                     _DMA1_DMADCNT_ISR:
 35139                           	opt callstack 5
 35140                           
 35141                           ; BSR set to: 0
 35142                           ;incstack = 0
 35143  01BD8C  EE14  F15C         	lfsr	1,___inthi_sp
 35144                           
 35145                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 35146  01BD90  0139               	movlb	57	; () banked
 35147  01BD92  93A2               	bcf	162,1,b	;volatile
 35148                           
 35149                           ; BSR set to: 57
 35150  01BD94  0011               	retfie		f
 35151  01BD96                     __end_of_DMA1_DMADCNT_ISR:
 35152                           	opt callstack 0
 35153                           
 35154 ;; *************** function _DMA1_DMAA_ISR *****************
 35155 ;; Defined at:
 35156 ;;		line 144 in file "mcc_generated_files/dma1.c"
 35157 ;; Parameters:    Size  Location     Type
 35158 ;;		None
 35159 ;; Auto vars:     Size  Location     Type
 35160 ;;		None
 35161 ;; Return value:  Size  Location     Type
 35162 ;;                  1    wreg      void 
 35163 ;; Registers used:
 35164 ;;		None
 35165 ;; Tracked objects:
 35166 ;;		On entry : 0/0
 35167 ;;		On exit  : 3F/39
 35168 ;;		Unchanged: 0/0
 35169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35174 ;;Total ram usage:        0 bytes
 35175 ;; Hardware stack levels used:    1
 35176 ;; This function calls:
 35177 ;;		Nothing
 35178 ;; This function is called by:
 35179 ;;		Interrupt level 2
 35180 ;; This function uses a non-reentrant model
 35181 ;;
 35182                           
 35183                           	psect	text175
 35184  01BD98                     __ptext175:
 35185                           	opt callstack 0
 35186  01BD98                     _DMA1_DMAA_ISR:
 35187                           	opt callstack 5
 35188                           
 35189                           ; BSR set to: 57
 35190                           ;incstack = 0
 35191  01BD98  EE14  F15C         	lfsr	1,___inthi_sp
 35192                           
 35193                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 35194  01BD9C  0139               	movlb	57	; () banked
 35195  01BD9E  97A2               	bcf	162,3,b	;volatile
 35196                           
 35197                           ; BSR set to: 57
 35198  01BDA0  0011               	retfie		f
 35199  01BDA2                     __end_of_DMA1_DMAA_ISR:
 35200                           	opt callstack 0
 35201                           
 35202 ;; *************** function _DMA1_DMAOR_ISR *****************
 35203 ;; Defined at:
 35204 ;;		line 155 in file "mcc_generated_files/dma1.c"
 35205 ;; Parameters:    Size  Location     Type
 35206 ;;		None
 35207 ;; Auto vars:     Size  Location     Type
 35208 ;;		None
 35209 ;; Return value:  Size  Location     Type
 35210 ;;                  1    wreg      void 
 35211 ;; Registers used:
 35212 ;;		None
 35213 ;; Tracked objects:
 35214 ;;		On entry : 0/0
 35215 ;;		On exit  : 3F/39
 35216 ;;		Unchanged: 0/0
 35217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35222 ;;Total ram usage:        0 bytes
 35223 ;; Hardware stack levels used:    1
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		Interrupt level 2
 35228 ;; This function uses a non-reentrant model
 35229 ;;
 35230                           
 35231                           	psect	text176
 35232  01BDA4                     __ptext176:
 35233                           	opt callstack 0
 35234  01BDA4                     _DMA1_DMAOR_ISR:
 35235                           	opt callstack 5
 35236                           
 35237                           ; BSR set to: 57
 35238                           ;incstack = 0
 35239  01BDA4  EE14  F15C         	lfsr	1,___inthi_sp
 35240                           
 35241                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 35242  01BDA8  0139               	movlb	57	; () banked
 35243  01BDAA  95A2               	bcf	162,2,b	;volatile
 35244                           
 35245                           ; BSR set to: 57
 35246  01BDAC  0011               	retfie		f
 35247  01BDAE                     __end_of_DMA1_DMAOR_ISR:
 35248                           	opt callstack 0
 35249                           
 35250                           ;
 35251                           ; Interrupt Vector Table @ 0x8
 35252                           ;
 35253                           
 35254                           	psect	ivt0x8
 35255  000008                     __pivt0x8:
 35256                           	opt callstack 0
 35257  000008                     ivt0x8_base:
 35258                           	opt callstack 0
 35259                           
 35260                           ; Vector 0 : SWINT
 35261  000008  6F7C               	dw	_Default_ISR shr (0+2)
 35262                           
 35263                           ; Vector 1 : HLVD
 35264  00000A  6F7C               	dw	_Default_ISR shr (0+2)
 35265                           
 35266                           ; Vector 2 : OSF
 35267  00000C  6F7C               	dw	_Default_ISR shr (0+2)
 35268                           
 35269                           ; Vector 3 : CSW
 35270  00000E  6F7C               	dw	_Default_ISR shr (0+2)
 35271                           
 35272                           ; Vector 4 : NVM
 35273  000010  6F7C               	dw	_Default_ISR shr (0+2)
 35274                           
 35275                           ; Vector 5 : SCAN
 35276  000012  6F7C               	dw	_Default_ISR shr (0+2)
 35277                           
 35278                           ; Vector 6 : CRC
 35279  000014  6F7C               	dw	_Default_ISR shr (0+2)
 35280                           
 35281                           ; Vector 7 : IOC
 35282  000016  6F7C               	dw	_Default_ISR shr (0+2)
 35283                           
 35284                           ; Vector 8 : INT0
 35285  000018  6F56               	dw	_INT0_ISR shr (0+2)
 35286                           
 35287                           ; Vector 9 : ZCD
 35288  00001A  6F7C               	dw	_Default_ISR shr (0+2)
 35289                           
 35290                           ; Vector 10 : AD
 35291  00001C  6DBD               	dw	_ADCC_ISR shr (0+2)
 35292                           
 35293                           ; Vector 11 : ADT
 35294  00001E  6B04               	dw	_ADCC_ThresholdISR shr (0+2)
 35295                           
 35296                           ; Vector 12 : CMP1
 35297  000020  6F7C               	dw	_Default_ISR shr (0+2)
 35298                           
 35299                           ; Vector 13 : SMT1
 35300  000022  6F7C               	dw	_Default_ISR shr (0+2)
 35301                           
 35302                           ; Vector 14 : SMT1PRA
 35303  000024  6F7C               	dw	_Default_ISR shr (0+2)
 35304                           
 35305                           ; Vector 15 : SMT1PRW
 35306  000026  6F7C               	dw	_Default_ISR shr (0+2)
 35307                           
 35308                           ; Vector 16 : DMA1SCNT
 35309  000028  6F5A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35310                           
 35311                           ; Vector 17 : DMA1DCNT
 35312  00002A  6F63               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35313                           
 35314                           ; Vector 18 : DMA1OR
 35315  00002C  6F69               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35316                           
 35317                           ; Vector 19 : DMA1A
 35318  00002E  6F66               	dw	_DMA1_DMAA_ISR shr (0+2)
 35319                           
 35320                           ; Vector 20 : SPI1RX
 35321  000030  6F7C               	dw	_Default_ISR shr (0+2)
 35322                           
 35323                           ; Vector 21 : SPI1TX
 35324  000032  6F7C               	dw	_Default_ISR shr (0+2)
 35325                           
 35326                           ; Vector 22 : SPI1
 35327  000034  6F7C               	dw	_Default_ISR shr (0+2)
 35328                           
 35329                           ; Vector 23 : I2C1RX
 35330  000036  6F7C               	dw	_Default_ISR shr (0+2)
 35331                           
 35332                           ; Vector 24 : I2C1TX
 35333  000038  6F7C               	dw	_Default_ISR shr (0+2)
 35334                           
 35335                           ; Vector 25 : I2C1
 35336  00003A  6F7C               	dw	_Default_ISR shr (0+2)
 35337                           
 35338                           ; Vector 26 : I2C1E
 35339  00003C  6F7C               	dw	_Default_ISR shr (0+2)
 35340                           
 35341                           ; Vector 27 : U1RX
 35342  00003E  6E6A               	dw	_UART1_rx_vect_isr shr (0+2)
 35343                           
 35344                           ; Vector 28 : U1TX
 35345  000040  6F7C               	dw	_Default_ISR shr (0+2)
 35346                           
 35347                           ; Vector 29 : U1E
 35348  000042  6F7C               	dw	_Default_ISR shr (0+2)
 35349                           
 35350                           ; Vector 30 : U1
 35351  000044  6F7C               	dw	_Default_ISR shr (0+2)
 35352                           
 35353                           ; Vector 31 : TMR0
 35354  000046  6F7C               	dw	_Default_ISR shr (0+2)
 35355                           
 35356                           ; Vector 32 : TMR1
 35357  000048  6F7C               	dw	_Default_ISR shr (0+2)
 35358                           
 35359                           ; Vector 33 : TMR1G
 35360  00004A  6F7C               	dw	_Default_ISR shr (0+2)
 35361                           
 35362                           ; Vector 34 : TMR2
 35363  00004C  6F7C               	dw	_Default_ISR shr (0+2)
 35364                           
 35365                           ; Vector 35 : CCP1
 35366  00004E  6F7C               	dw	_Default_ISR shr (0+2)
 35367                           
 35368                           ; Vector 36 : Undefined
 35369  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35370                           
 35371                           ; Vector 37 : NCO1
 35372  000052  6F7C               	dw	_Default_ISR shr (0+2)
 35373                           
 35374                           ; Vector 38 : CWG1
 35375  000054  6F7C               	dw	_Default_ISR shr (0+2)
 35376                           
 35377                           ; Vector 39 : CLC1
 35378  000056  6F7C               	dw	_Default_ISR shr (0+2)
 35379                           
 35380                           ; Vector 40 : INT1
 35381  000058  6D07               	dw	_INT1_ISR shr (0+2)
 35382                           
 35383                           ; Vector 41 : CMP2
 35384  00005A  6F7C               	dw	_Default_ISR shr (0+2)
 35385                           
 35386                           ; Vector 42 : DMA2SCNT
 35387  00005C  6F7C               	dw	_Default_ISR shr (0+2)
 35388                           
 35389                           ; Vector 43 : DMA2DCNT
 35390  00005E  6F7C               	dw	_Default_ISR shr (0+2)
 35391                           
 35392                           ; Vector 44 : DMA2OR
 35393  000060  6F7C               	dw	_Default_ISR shr (0+2)
 35394                           
 35395                           ; Vector 45 : DMA2A
 35396  000062  6F7C               	dw	_Default_ISR shr (0+2)
 35397                           
 35398                           ; Vector 46 : I2C2RX
 35399  000064  6F7C               	dw	_Default_ISR shr (0+2)
 35400                           
 35401                           ; Vector 47 : I2C2TX
 35402  000066  6F7C               	dw	_Default_ISR shr (0+2)
 35403                           
 35404                           ; Vector 48 : I2C2
 35405  000068  6F7C               	dw	_Default_ISR shr (0+2)
 35406                           
 35407                           ; Vector 49 : I2C2E
 35408  00006A  6F7C               	dw	_Default_ISR shr (0+2)
 35409                           
 35410                           ; Vector 50 : U2RX
 35411  00006C  6E7E               	dw	_UART2_rx_vect_isr shr (0+2)
 35412                           
 35413                           ; Vector 51 : U2TX
 35414  00006E  6E74               	dw	_UART2_tx_vect_isr shr (0+2)
 35415                           
 35416                           ; Vector 52 : U2E
 35417  000070  6F7C               	dw	_Default_ISR shr (0+2)
 35418                           
 35419                           ; Vector 53 : U2
 35420  000072  6F7C               	dw	_Default_ISR shr (0+2)
 35421                           
 35422                           ; Vector 54 : TMR3
 35423  000074  6399               	dw	_TMR3_ISR shr (0+2)
 35424                           
 35425                           ; Vector 55 : TMR3G
 35426  000076  6F7C               	dw	_Default_ISR shr (0+2)
 35427                           
 35428                           ; Vector 56 : TMR4
 35429  000078  6F7C               	dw	_Default_ISR shr (0+2)
 35430                           
 35431                           ; Vector 57 : CCP2
 35432  00007A  6F7C               	dw	_Default_ISR shr (0+2)
 35433                           
 35434                           ; Vector 58 : Undefined
 35435  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35436                           
 35437                           ; Vector 59 : CWG2
 35438  00007E  6F7C               	dw	_Default_ISR shr (0+2)
 35439                           
 35440                           ; Vector 60 : CLC2
 35441  000080  6F7C               	dw	_Default_ISR shr (0+2)
 35442                           
 35443                           ; Vector 61 : INT2
 35444  000082  6F7C               	dw	_Default_ISR shr (0+2)
 35445                           
 35446                           ; Vector 62 : Undefined
 35447  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35448                           
 35449                           ; Vector 63 : Undefined
 35450  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35451                           
 35452                           ; Vector 64 : Undefined
 35453  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35454                           
 35455                           ; Vector 65 : Undefined
 35456  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35457                           
 35458                           ; Vector 66 : Undefined
 35459  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35460                           
 35461                           ; Vector 67 : Undefined
 35462  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35463                           
 35464                           ; Vector 68 : Undefined
 35465  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35466                           
 35467                           ; Vector 69 : Undefined
 35468  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35469                           
 35470                           ; Vector 70 : TMR5
 35471  000094  67C4               	dw	_TMR5_ISR shr (0+2)
 35472                           
 35473                           ; Vector 71 : TMR5G
 35474  000096  6F7C               	dw	_Default_ISR shr (0+2)
 35475                           
 35476                           ; Vector 72 : TMR6
 35477  000098  6F0B               	dw	_TMR6_ISR shr (0+2)
 35478                           
 35479                           ; Vector 73 : CCP3
 35480  00009A  6F7C               	dw	_Default_ISR shr (0+2)
 35481                           
 35482                           ; Vector 74 : CWG3
 35483  00009C  6F7C               	dw	_Default_ISR shr (0+2)
 35484                           
 35485                           ; Vector 75 : CLC3
 35486  00009E  6F7C               	dw	_Default_ISR shr (0+2)
 35487                           
 35488                           ; Vector 76 : Undefined
 35489  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35490                           
 35491                           ; Vector 77 : Undefined
 35492  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35493                           
 35494                           ; Vector 78 : Undefined
 35495  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35496                           
 35497                           ; Vector 79 : Undefined
 35498  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35499                           
 35500                           ; Vector 80 : CCP4
 35501  0000A8  6F7C               	dw	_Default_ISR shr (0+2)
 35502                           
 35503                           ; Vector 81 : CLC4
 35504  0000AA  6F7C               	dw	_Default_ISR shr (0+2)
 35505  0000AC                     ivt0x8_undefint:
 35506                           	opt callstack 0
 35507  0000AC  00FF               	reset	
 35508                           
 35509                           	psect	text177
 35510  000000                     __ptext177:
 35511                           	opt callstack 0
 35512                           
 35513                           	psect	rparam
 35514  0000                     
 35515                           	psect	temp
 35516  000001                     btemp:
 35517                           	opt callstack 0
 35518  000001                     	ds	32
 35519  0000                     wtemp0	set	btemp
 35520  0000                     wtemp1	set	btemp+2
 35521  0000                     wtemp2	set	btemp+4
 35522  0000                     wtemp3	set	btemp+6
 35523  0000                     wtemp4	set	btemp+8
 35524  0000                     wtemp5	set	btemp+10
 35525  0000                     wtemp8	set	btemp+1
 35526  0000                     ttemp0	set	btemp
 35527  0000                     ttemp1	set	btemp+3
 35528  0000                     ttemp2	set	btemp+6
 35529  0000                     ttemp3	set	btemp+9
 35530  0000                     ttemp5	set	btemp+1
 35531  0000                     ttemp6	set	btemp+4
 35532  0000                     ttemp7	set	btemp+8
 35533  0000                     ltemp0	set	btemp
 35534  0000                     ltemp1	set	btemp+4
 35535  0000                     ltemp2	set	btemp+8
 35536  0000                     lltemp0	set	btemp
 35537  0000                     lltemp1	set	btemp+8
 35538  0000                     lltemp2	set	btemp+16
 35539  0000                     lltemp3	set	btemp+24
 35540                           tosu	equ	0x3FFF
 35541                           tosh	equ	0x3FFE
 35542                           tosl	equ	0x3FFD
 35543                           stkptr	equ	0x3FFC
 35544                           pclatu	equ	0x3FFB
 35545                           pclath	equ	0x3FFA
 35546                           pcl	equ	0x3FF9
 35547                           tblptru	equ	0x3FF8
 35548                           tblptrh	equ	0x3FF7
 35549                           tblptrl	equ	0x3FF6
 35550                           tablat	equ	0x3FF5
 35551                           prodh	equ	0x3FF4
 35552                           prodl	equ	0x3FF3
 35553                           indf0	equ	0x3FEF
 35554                           postinc0	equ	0x3FEE
 35555                           postdec0	equ	0x3FED
 35556                           preinc0	equ	0x3FEC
 35557                           plusw0	equ	0x3FEB
 35558                           fsr0h	equ	0x3FEA
 35559                           fsr0l	equ	0x3FE9
 35560                           wreg	equ	0x3FE8
 35561                           indf1	equ	0x3FE7
 35562                           postinc1	equ	0x3FE6
 35563                           postdec1	equ	0x3FE5
 35564                           preinc1	equ	0x3FE4
 35565                           plusw1	equ	0x3FE3
 35566                           fsr1h	equ	0x3FE2
 35567                           fsr1l	equ	0x3FE1
 35568                           bsr	equ	0x3FE0
 35569                           indf2	equ	0x3FDF
 35570                           postinc2	equ	0x3FDE
 35571                           postdec2	equ	0x3FDD
 35572                           preinc2	equ	0x3FDC
 35573                           plusw2	equ	0x3FDB
 35574                           fsr2h	equ	0x3FDA
 35575                           fsr2l	equ	0x3FD9
 35576                           status	equ	0x3FD8


Data Sizes:
    Strings     939
    Constant    492
    Data        1060
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6132_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    f1p	PTR  size(2) Largest target is 295
		 -> C(BIGRAM[295]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4550tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  384403
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35546
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35456
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35456
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     509      69       15.7%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     969       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 27 20:17:42 2019

                     _SPI1_Exchange8bit BB7C                __end_of_set_display_info BBD6  
                                     _C 06FF                                       _D 0826  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FB37                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler B8DE            __end_of_start_switch_handler BB5C  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC3F                  __end_of_FVR_Initialize BDD6  
                        _check_day_time 8554                             __CFG_LVP$ON 000000  
                                   l169 BCB2                                     l807 BB8A  
                                   l673 B746                                     _GIE 01FE97  
                                   _abs B1CA                                     _pad 981E  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BC5E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BAB0  
                     _update_adc_result B45A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BA44  
                          __CFG_ZCD$OFF 000000                                    l1002 B396  
                                  l2042 4A92                                    l1340 190A  
                                  l1324 12A2                                    l2038 47E0  
                                  l1190 B3D6                                    l2302 6566  
                                  l1350 19AC                                    l1342 1910  
                                  l2143 987A                                    l3120 78EE  
                                  l1360 1BB2                                    l1361 1DDC  
                                  l3018 3B60                                    l2163 560E  
                                  l2243 0B1A                         _timer3ReloadVal 00C4  
                                  l2228 066A                                    l2084 7142  
                                  l2317 5E40                                    l1606 B51C  
                                  l1366 2354                                    l1447 AE72  
                                  l3081 8880                                    l2281 7230  
                                  l3058 838E                                    l1722 BBD2  
                                  l2199 123A                                    l2367 3336  
                                  l1591 A818                                    l1665 B4B0  
                                  l3089 B20A                                    l1682 9A3E  
                                  l1674 8034                                    l1835 854A  
                                  l1587 A512                                    l1675 8190  
                                  l3189 95E2                                    l2670 8E5A  
                  _ADCC_StartConversion BCCC                                    l2663 8D86  
                                  l3471 AA36                                    l1784 552A  
                                  l3456 7F78                                    l1882 9E3C  
                                  l2659 A254                                    l3484 A9B2  
                                  l1895 86EA                                    l1967 A8AC  
                                  l1976 9C4A                                    l2937 431C  
                                  l8001 7466                                    l2697 8CF8  
                                  l1899 86E2                                    l2949 41AC  
                                  l8101 4BD6                                    l8013 7500  
                                  l2982 5012                                    l8111 4C2C  
                                  l8007 74BA                                    l8201 4F52  
                                  l8113 4C5C                                    l8025 75D2  
                                  l8107 4C16                                    l8221 4FF6  
                                  l8213 4FBE                                    l8133 4CEE  
                                  l8125 4CD4                                    l8061 7A8A  
                                  l8053 79DE                                    l8045 7956  
                                  l8207 4F8E                                    l8151 4DB4  
                                  l8143 4D7E                                    l8119 4C9A  
                                  l8153 4DC6                                    l8161 4E1E  
                                  l8081 4AF8                                    l8331 3970  
                                  l8243 33D6                                    l8219 4FE6  
                                  l8091 4B4E                                    l8411 9020  
                                  l8325 3954                                    l8261 34A4  
                                  l8245 33DC                                    l8237 3396  
                                  l8501 8DD4                                    l8173 4E68  
                                  l8093 4B7E                                    l8405 9000  
                                  l8335 3996                                    l8263 34AA  
                                  l8255 3464                                    l8247 340C  
                                  l8191 4EDE                                    l8167 4E4C  
                                  l8159 4E1A                                    l8087 4B38  
                                  l8345 39E0                                    l8273 34FC  
                                  l8265 34DA                                    l7801 41E0  
                                  l8513 8E58                                    l8505 8E22  
                                  l8177 4E8E                                    l9241 7760  
                                  l9225 769E                                    l7617 A5E6  
                                  l8433 90FA                                    l8425 90C6  
                                  l8521 B0C8                                    l8363 3AA0  
                                  l7731 3F28                                    l7651 3C00  
                                  l8187 4ED8                                    l9251 7842  
                                  l9243 7778                                    l9235 7734  
                                  l9227 76C0                                    l7619 A608  
                                  l8531 8BE2                                    l8603 9340  
                                  l8349 39E6                                    l7805 41EC  
                                  l7733 3F3A                                    l7741 3F74  
                                  l7717 3E96                                    l7645 3BC0  
                                  l9261 78DE                                    l9245 779C  
                                  l8453 9750                                    l8445 9726  
                                  l7901 881E                                    l8359 3A5A  
                                  l7831 4278                                    l7815 4214  
                                  l7727 3F08                                    l7663 3C7E  
                                  l7655 3C16                                    l9247 77DA  
                                  l8471 9804                                    l8463 97D0  
                                  l7911 8878                                    l8377 3B0E  
                                  l8369 3ACA                                    l7841 42A4  
                                  l7761 4022                                    l7737 3F44  
                                  l7681 3D36                                    l7657 3C46  
                                  l8449 9738                                    l7905 8822  
                                  l8379 3B28                                    l7819 421A  
                                  l7675 3CF0                                    l9603 51A0  
                                  l8619 AFB0                                    l8483 A21E  
                                  l8555 8C90                                    l8547 8C64  
                                  l8571 8A5E                                    l7853 42FC  
                                  l7845 42BC                                    l7781 4136  
                                  l7765 402C                                    l7669 3CB0  
                                  l8557 8CA6                                    l8549 8C80  
                                  l9277 7DEA                                    l7847 42CC  
                                  l7791 4190                                    l7783 415C  
                                  l7759 4010                                    l7687 3D58  
                                  l7679 3D06                                    l8495 8D44  
                                  l9543 824A                                    l9535 81DE  
                                  l9615 52E0                                    l9607 52AE  
                                  l8399 8FEA                                    l8487 A252  
                                  l8479 A1DC                                    l7943 62D4  
                                  l9279 7E56                                    l8583 8B30  
                                  l7769 405E                                    l9545 8258  
                                  l9633 54F8                                    l9641 550A  
                                  l7929 AA26                                    l9555 82BA  
                                  l9547 826E                                    l9627 545C  
                                  l9619 537C                                    l7963 648A  
                                  l8595 9294                                    l9557 82D8  
                                  l9549 828C                                    l7957 63F2  
                                  l7799 41CE                                    l9567 830C  
                                  l9559 82EE                                    l7887 B1FA  
                                  l7967 64F8                                    l7959 6442  
                                  l9577 836E                                    l9593 504E  
                                  l7985 A9A2                                    l9763 861E  
                                  l9587 501E                                    l9659 B80E  
                                  l9851 B6D8                                    l9775 8690  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  l9793 B526                                    STR_3 FFD0  
                                  STR_4 FF1D                                    l9859 AFEC  
                                  STR_5 FE16                                    STR_6 FE16  
                                  STR_7 FE16                                    STR_8 FF0B  
                                  STR_9 FD06                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 A9E4                                    u6020 A9E6  
                                  u6110 6470                                    u6200 B68E  
                                  u7000 977C                                    u6040 626C  
                                  u6050 62B8                                    u5410 B65C  
                                  _T6PR 003F93                                    u6115 6466  
                                  u6220 7460                                    u7020 97F0  
                                  u5420 B65E                                    u6140 B28E  
                                  _PMD0 0039C0                                    u6045 6262  
                                  _PMD1 0039C1                                    u6310 765C  
                                  u6150 B290                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 3EBC  
                                  u6240 74B6                                    u6400 7AC2  
                                  u7120 B0C4                                    u7200 8CAE  
                                  u6160 A960                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u5530 3EDC  
                                  u7130 8BC2                                    u6090 6398  
                                  u6170 A962                                    _PMD6 0039C6  
                                  u5531 3ED6                                    u6251 74C0  
                                  u6075 62F2                                    _PMD7 0039C7  
                                  u5380 A636                                    u6260 74FA  
                                  u6420 7B14                                    u6340 7950  
                                  u7060 A24E                                    u7220 8CD8  
                                  u7140 8BD6                                    u6076 62F8  
                                  u7300 92C0                                    u6077 6306  
                                  u6190 B68C                                    u6270 752C  
                                  u7150 8C10                                    u7135 8BB8  
                                  u6095 638E                                    u7231 8A1E  
                                  u5720 41F2                                    u5640 4054  
                                  u6600 4ED0                                    u6360 79A6  
                                  u7240 8A58                                    u7320 9378  
                                  u5810 4288                                    u5570 3F6C  
                                  u9010 8302                                    u6290 760A  
                                  u6370 79D8                                    u7250 8A8A  
                                  u5387 A628                                    u7155 8C06  
                                  u5740 420C                                    u5580 3F8C  
                                  u5548 3EDE                                    u7340 AF8C  
                                  u6380 7A0A                                    u5645 4044  
                                  u7350 AFAC                                    u5910 B1DE  
                                  u7270 8B68                                    u5575 3F5C  
                                  u5680 417E                                    u6640 4F2C  
                                  u6560 4E46                                    u5920 87A2  
                                  u6650 4F66                                    u9114 52C8  
                                  u7290 928E                                    u5850 B62C  
                                  u9115 52C2                                    u6820 39D8  
                                  u5780 4268                                    u6660 4FA2  
                                  u5860 B62E                                    u6645 4F1C  
                                  u5925 8798                                    u6750 34EA  
                                  u9134 5396                                    u9054 5038  
                                  u8510 7888                                    u9135 5390  
                                  u9055 5032                                    u9160 53C0  
                                  u8520 788A                                    u8600 7F1E  
                                  u5785 4258                                    u9154 53B8  
                                  u9074 5068                                    u6930 904C  
                                  u5970 8870                                    u8610 7F4C  
                                  u9155 53B2                                    u9075 5062  
                                  u6860 3A34                                    u5980 8872  
                                  u6765 367E                                    u5965 8852  
                                  u8605 7F18                                    u6870 3A6E  
                                  u9510 83AE                                    u9094 508A  
                                  u6950 90E6                                    u9415 ACBC  
                                  u6775 3746                                    u9095 5084  
                                  u9335 B2CA                                    u8607 7F0A  
                                  u9416 ACBE                                    u9408 AC8A  
                                  u6880 3AB4                                    u9600 BB26  
                                  u8560 7E84                                    u6865 3A24  
                                  u6785 390E                                    u8617 7F3E  
                                  u8490 7730                                    u9390 AC88  
                                  u9606 BB28                                    u9710 A852  
                                  u8567 7E76                                    u9465 BCF8  
                                  u9466 BCFA                                    _PLLR 01CEE0  
                                  u9475 BCE8                                    u9476 BCEA  
                                  u9740 A898                                    u9728 A854  
                                  u9758 A89A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B720  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FC4F                                    _cp_l FC4B  
                                  _atoi 7684                                    _ctoa A8B0  
                                  _main 1244                                    _dtoa 5530  
                                  _nanf ADA6                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FBC7                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7146                                    btemp 0001  
                                  _utoa 6522                                    _xtoa 5DFC  
                __end_of_check_adc_scan BDBE                           ___fpclassifyf 86F4  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BB9A               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B182             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B9A8                            ___param_bank 000000  
                __end_of_check_day_time 86F4                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR BD66                        __end_of_INT1_ISR B45A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A51A  
         __end_of_OSCILLATOR_Initialize BCB8                                   l11021 AA78  
                                 l10321 83FC                                   l10313 83D0  
                                 l10401 B47A                                   l11027 AA88  
                                 l12003 0C32                                   l10253 B04A  
                                 l10325 8410                                   l10431 912E  
                                 l12103 119A                                   l12015 0CBA  
                                 l12023 0D24                                   l12031 0D90  
                                 l10249 B018                                   l10601 BBEE  
                                 l10433 913E                                   l10451 91C4  
                                 l10435 9144                                   l10443 9160  
                                 l12051 0F3A                                   l12123 71B2  
                                 l13003 2060                                   l10613 B742  
                                 l10437 914A                                   l10445 918C  
                                 l12221 5E6A                                   l10541 96CC  
                                 l13013 21DC                                   l10439 9158  
                                 l10359 B4C6                                   l12039 0EA2  
                                 l12143 72A2                                   l12215 5E30  
                                 l12311 24B0                                   l10471 A866  
                                 l13015 2208                                   l12065 0FD6  
                                 l12161 73C4                                   l12153 735C  
                                 l12313 24C6                                   l10801 6EE0  
                                 l10537 9628                                   l13033 227E  
                                 l10459 923E                                   l12067 0FF0  
                                 l12147 72D2                                   l12139 7266  
                                 l12251 5FFC                                   l12235 5F06  
                                 l12227 5EA6                                   l12331 25F8  
                                 l13051 22E6                                   l13043 22BC  
                                 l12077 1092                                   l12157 7388  
                                 l12333 2632                                   l12309 2476  
                                 l10813 6F32                                   l13061 232A  
                                 l13029 225A                                   l10639 B37E  
                                 l12087 10E2                                   l12183 65B2  
                                 l12175 6556                                   l12351 27AC  
                                 l12335 2648                                   l11703 6C22  
                                 l10807 6F0A                                   l13071 2380  
                                 l10657 B3BE                                   l10753 89EA  
                                 l12193 67A8                                   l12417 2D2A  
                                 l12361 2844                                   l10833 6FB2  
                                 l10825 6F8C                                   l10817 6F3E  
                                 l10921 9B58                                   l10761 9E58  
                                 l13057 2304                                   l13049 22CE  
                                 l10915 5DEE                                   l11803 592A  
                                 l12275 616C                                   l12259 6082  
                                 l12427 2DD8                                   l11723 6DF8  
                                 l11715 6D4A                                   l12531 A572  
                                 l12621 4430                                   l11645 94F8  
                                 l11661 A6B0                                   l11821 00AC  
                                 l12461 312C                                   l12437 2EFA  
                                 l12373 2984                                   l11709 6CE0  
                                 l10933 9BB4                                   PRLOCK 0039EF  
                                 l12631 4682                                   l11671 9872  
                                 l11735 A8CE                                   l11807 5966  
                                 l11911 057C                                   l12447 2FB0  
                                 l10871 A2A2                                   l10791 6EA4  
                                 l10855 710A                                   l10943 9C24  
                                 l10767 9EFE                                   l12641 47F0  
                                 l12617 43DC                                   l10961 B354  
                                 l11657 A672                                   l11681 990A  
                                 l11673 9884                                   l11737 A8FA  
                                 l11761 55FE                                   l11913 058E  
                                 l11833 00F0                                   l11841 0146  
                                 l12481 32BE                                   l12393 2B96  
                                 l12385 2ADE                                   l12369 2930  
                                 l12545 A3F0                                   l10857 7132  
                                 l12627 4608                                   l11667 984A  
                                 l11907 0554                                   l11851 01EA  
                                 l12475 3264                                   l12491 32E2  
                                 l12547 A432                                   l10867 A264  
                                 l10787 6E90                                   l12645 4812  
                                 l12637 4748                                   l11677 98C0  
                                 l11773 5666                                   l11853 0216  
                                 l12485 32C2                                   l12397 2BCA  
                                 l10797 6ED4                                   l10789 6EA0  
                                 l12821 12AA                                   l11783 5878  
                                 l11687 A10E                                   l11927 05F6  
                                 l11919 0594                                   l11855 022C  
                                 l12823 12BC                                   l12815 1284  
                                 l12657 4A8A                                   l11769 5648  
                                 l11945 06B8                                   l11929 0602  
                                 l12577 9956                                   l12753 8004  
                                 l12921 16E2                                   l12817 128C  
                                 l11955 077A                                   l11891 0470  
                                 l11859 0258                                   l11965 0926  
                                 l11949 06F0                                   l11885 0396  
                                 l11869 02FC                                   l11877 032A  
                                 l12933 17BC                                   l11895 04D2  
                                 l12767 812C                                   l12943 1914  
                                 l11889 0406                                   l12945 1942  
                                 l12873 146E                                   l11987 0B12  
                                 l11979 0A48                                   l11989 0B34  
                                 l12965 199C                                   l12957 1976  
                                 l12975 19BE                                   l12987 1ABE  
                                 l12999 1FFE                         __end_of___aodiv 7684  
                          _Volts_to_SOC 95EC                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4326  
                                 _ADCLK 003EFF                         __end_of___aomod 7B38  
                                 _ADPCH 003EF1                         __end_of___fldiv 501C  
                                 _ADREF 003EFD                         __end_of___awdiv 9114  
                       __end_of___flneg B0F2                                   STR_10 FD33  
                                 STR_11 FD49                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FDEC                                   STR_23 FEBF  
                                 STR_31 FE4D                                   STR_15 FD5F  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE60                                   STR_16 FD1D  
                                 STR_41 FF83                                   STR_33 FE73  
                                 STR_25 FD9C                                   STR_17 FCBA  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE99  
                                 STR_34 FDB0                                   STR_18 FCD4  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE86  
                                 STR_35 FE00                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD88                         __end_of___awmod 981E  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD74                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDC4                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDD8  
                                 STR_55 FCEE                                   STR_64 FCB9  
                                 STR_80 FFEF                                   STR_48 FE27  
                                 _ADRPT 003EEC                                   STR_49 FE27  
                                 STR_57 FE3A                                   STR_65 FC53  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FE14  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3B6A                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub B256  
                       __end_of___fltol 8D02                                   u11100 02A8  
                                 u11020 00DA                                   u11200 05C6  
                                 u11050 0194                                   u11140 050E  
                                 u11060 0196                                   u12100 2C86  
                                 u11310 0A18                                   u11240 0648  
                                 u12040 2898                                   u12200 A552  
                                 u11410 0EE4                                   u11170 0562  
                                 u11090 02A6                         __end_of___lodiv 8B90  
                                 u11500 1170                                   u12060 2A0C  
                                 u12160 3004                                   u11610 73EA  
                                 u12090 2C84                                   u10810 6E6C  
                                 _U1P1H 003DED                                   u12180 31B4  
                                 u12420 817C                                   u12500 17EA  
                                 _U1P2H 003DEF                                   u10670 94EC  
                                 u10910 5634                                   u10750 A188  
                                 u11470 10B8                                   u11630 653C  
                                 u11710 5E16                                   u12430 817E  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10920 588C  
                                 u10840 5560                                   u12600 224A  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10690 9568                                   u10850 5562  
                                 u11490 116E                                   u11570 72C8  
                                 u11810 607E                                   u12610 2264  
                                 _U1P3L 003DF0                                   u10931 58BC  
                                 u10940 58D2                                   u11580 730E  
                                 u11820 609E                                   u11740 5EFE  
                                 u12620 2276                                   u10941 58D0  
                                 u10757 A17A                                   u11661 67EA  
                                 u10950 58E6                                   u10870 55D2  
                                 u11670 6800                                   u11750 5F52  
                                 u12606 224C                                   _U2P1L 003DD4  
                                 u11671 67FE                                   u11831 60CE  
                                 u11815 6060                                   u10960 58EA  
                                 u11680 6814                                   u11840 60E4  
                                 u11760 5F54                                   u11920 250E  
                                 u12616 2266                                   u12480 1594  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11841 60E2                                   u10890 55E4  
                                 u11690 6818                                   u11850 60F8  
                                 u11930 2510                                   u12626 2278  
                                 _U2P3L 003DD8                                   u11587 7300  
                                 u10980 5900                                   u11860 60FC  
                                 u11780 5FB2                                   u11940 2536  
                                 u11790 5FB4                                   _T5CLK 003F9D  
                       __end_of___lomod 939A                                   u11970 2690  
                                 u11980 2692                                   _T2HLT 003FAD  
                                 u11990 26B8                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result B494                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR BDF0  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 8FC6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9FF2  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR BC46  
                          _DMA1CON1bits 003BFD                                   _fabsf A316  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay BD56                                   _fputc 94C8  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha B29A  
                                 _fputs A662                         __end_of_isdigit B698  
                       __end_of_ivln2_h FC4B                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B570                                   _width 003A  
                                 _putch BC10            __end_of_set_ac_charger_relay BD1E  
                       __end_of_islower B638                         __end_of_isspace AFC0  
              _INT1_SetInterruptHandler B906                         __end_of_isupper B668  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B88E             _UART1_SetRxInterruptHandler B866  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9B4C  
                       __end_of_tolower AA40                         __end_of_strncmp 7F82  
                       __end_of_toupper A9BC               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B9D0                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B13A                   __end_of_ringBufS_init B7EE  
                       __initialization 9FF2                       _UART2_rx_vect_isr B9F8  
                          __end_of_cp_h FC53                            __end_of_cp_l FC4F  
                          __end_of_atoi 78F8                            __end_of_ctoa A938  
                          __end_of_main 2394                            __end_of_dtoa 59B0  
                          __end_of_nanf AE08                            __end_of_spin FC3F  
                          __end_of_stoa 7404                            __end_of_utoa 6862  
                          __end_of_xtoa 61B6                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize BC76  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B35C  
              _TMR5_SetInterruptHandler B8B6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr BD80                      esr_check@esr_state 0040  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B74C                         _PWM8_Initialize BC8C  
                      _UART1_Initialize B0F2                       _UART2_tx_vect_isr B9D0  
                    _UART2_Transmit_ISR B720                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan ACE0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue B29A                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 9FA2  
                                _RB6PPS 003A0E                                  i1l1207 8F2E  
                  _start_switch_handler BB3C                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize B1CA  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright BD3A                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u924_20 85AA  
                                u919_25 BD18                                  u919_26 BD1A  
                                u945_20 B4D4                                  u945_26 B4D6  
                                u938_20 BD52                                  u961_28 9134  
                                u964_20 9154                                  u964_21 914E  
                  __size_of_hid_display 0102                                  u991_28 BA54  
                                u968_24 9234                                  u968_25 9230  
                                u997_48 BAE4                                  u989_48 BAC0  
                      __end_of___xxtofl 8398   __end_of_ADCC_DischargeSampleCapacitor BDB6  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor BDAE  
              __end_of_send_lcd_cmd_dma AF6E                         _TMR3_WriteTimer B39C  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BA20  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize BD76  
                      _UART2_Initialize AE08                                  _WaitMs B504  
                       _conv_raw_result 501C                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8D02  
                                ___fleq A19A                       _ADCC_ThresholdISR AC10  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush A78E  
                                _efgtoa 0000                                  _floorf 61B6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6B8A  
                  __size_of_help_button 0038                                  clear_0 A064  
                                clear_1 A078                                  clear_2 A08A  
                                clear_3 A096                                  clear_4 A0A2  
                                clear_5 A0AE               __end_of_port_data_dma_ptr BD8A  
                                _printf AD44                      _eaDogM_WriteString A51A  
                                _strcpy A0C6                               ?_ADCC_ISR 0021  
                                _strlen A5C0                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize ABA4  
                        _PMD_Initialize BCB8              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B9F8                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan AD44                            __mediumconst FA66  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay AEC2  
                      __end_of_spinners 9F0E                        __end_of_vfprintf A470  
                            _StartTimer B2DC                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B182  
                     _SYSTEM_Initialize B060                              __accesstop 0060  
               __end_of__initialization A0C0                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help BDCE  
                  __end_of_display_info BDC6               __end_of_CLKREF_Initialize BD80  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B35C                   _set_temp_display_help BCFE  
                      _clear_hid_pflags BA20                   __end_of_TMR3_CallBack BAB0  
             __end_of_ADCC_ThresholdISR AC7A                      __size_of_calc_bsoc 077C  
                __end_of_ringBufS_flush A820                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115C                              ___intlo_sp 18AE  
                          __pidataBANK0 BD1E                            __pidataBANK1 9C4E  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A3C4  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 95EC                           __end_of_fputs A6FA  
                  _get_ac_charger_relay BD48                           __end_of_srand B5A4  
                 __end_of_TMR5_CallBack BA8C                           __end_of_putch BC2A  
                  _set_ac_charger_relay BD0E                 __end_of_PWM8_Initialize BCA2  
               __end_of_TMR6_Initialize B776                       _adc_int_t_handler AA40  
                __end_of_PMD_Initialize BCCC                              __end_of_bp FC47  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BAF8  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR BD98  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan BDD6  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize B0AA  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B3DC                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 7F82  
               __end_of_conv_raw_result 5530                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone B816  
                      _DMA1_DMADCNT_ISR BD8C                      __size_of_init_bsoc 022A  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B5D8  
                 __end_of_wait_lcd_done BC10        __end_of_TMR3_SetInterruptHandler B906  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B8B6  
                            ??_TMR3_ISR 00D7                 __end_of_ADCC_Initialize AC0E  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler AAC2  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AB3A  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler B97E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler B956                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BBD6                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan BDDC  
                               u1000_28 BA78                                 u1029_44 AAA8  
                               u1230_20 4802                                 u1029_45 AAA2  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR BD68  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1228_20 4738  
                               u1235_28 BA9C                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4AA2                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch B6C6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer B39C                 __size_of_switch_handler 0146  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one BCFE  
            __end_of_set_load_relay_two BCEE       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 888A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim BC46  
                               __Lparam 0000                __end_of_UART1_Initialize B13A  
                     __end_of_hid_input A8B0                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7404                                 ___fladd 3B6A  
                               ___aomod 78F8                                 ___fldiv 4AA2  
                               ___awdiv 8FC6                                 ___flneg B0AA  
                               ___awmod 9706                                 ___flmul 3340  
                               ___flsub B210                                 ___fltol 8B90  
                               ___lodiv 8A10                                 ___lomod 925A  
             __end_of_UART1_Receive_ISR BBF4                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 9E28  
                               __pcinit 9FF2                __end_of_mode_lamp_bright BD48  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand BD2C                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B3DC  
                               __ptext2 BB3C                                 __ptext3 B570  
                               __ptext4 9E28                                 __ptext5 B5D8  
                               __ptext6 9D3E                                 __ptext7 B776  
                               __ptext8 B79E                                 __ptext9 BB7C  
                     __end_of_esr_check 7146                       _UART2_Receive_ISR BB5C  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize BCA2                            __size_of_abs 0046  
                               us632999 766E                                 us643999 7B26  
                          __size_of_pad 0114                                 us733999 938A  
                     __end_of_init_bsoc 7D62                                 _isalpha B256  
                               _isdigit B668                                 us728999 8B7A  
                               _ivln2_h FC47                               _T3CONbits 003FA6  
                               _mode_sw 00CA                       __end_of_lp_filter 8554  
                               _islower B608                                 _isspace AF6E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize AE68                                 _isupper B638  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9A42  
                               _tolower A9BC                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 7D62                                 _toupper A938  
                  end_of_initialization A0C0               __size_of_convert_adc_data 00B8  
                    _check_enter_button B31C                               i1u1244_20 8F24  
   __end_of_UART2_SetRxInterruptHandler B866             _UART2_SetRxInterruptHandler B83E  
                             i2u1040_48 BA0C                               i2u1032_48 B70C  
                             i2u1034_48 AC46                               i2u1034_49 AC5A  
                             i2u1036_48 B9BC                               i2u1038_48 B9E4  
               check_day_time@day_delay 0042                       __end_of_set_vterm BBB8  
                     __end_of_vfpfcnvrt 3340                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 0082                     __size_of_StartTimer 0040  
                     __end_of_start_lcd BDE8               __end_of_UART2_Receive_ISR BB7C  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc BDEE  
              _TMR3_SetInterruptHandler B8DE                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B88E                            _display_help BDC6  
                 _TMR5_InterruptHandler 00A5                            _display_info BDBE  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags BA44  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B9A6  
           _ADCC_SetADIInterruptHandler B97E                              _update_lcd 9932  
                       _calc_model_data 59B0                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B3DC  
                       _DMA1_Initialize AB3A                              _start_bsoc BB1A  
                       _SPI1_Initialize BC76                   __end_of_get_vterm_ptr B6C6  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B53A            __end_of_INTERRUPT_Initialize ACE0  
                            _vterm_dump 939A                          __end_of___flge 8E64  
                        __end_of___fleq A25E    __end_of_INT0_DefaultInterruptHandler BDFC  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler BDFA  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize AEC2  
                         __pidataBIGRAM 6862                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6522             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 6E76  
                        __end_of_printf ADA6                __end_of_DMA1_DMADCNT_ISR BD96  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BAD4  
                        __end_of_strcpy A19A                          __end_of_strlen A662  
                   start_initialization 9FF2    __end_of_TMR5_DefaultInterruptHandler B504  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B4CC  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs B210  
                 __end_of_INT1_CallBack BA68               __size_of_set_display_info 001E  
                           __end_of_pad 9932                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B7C6                          _switch_handler 9114  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 888A  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR BD76  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR BDA4  
                   __end_of_hid_display 9C4E              __end_of_send_port_data_dma B012  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B7EE  
                         _ringBufS_init B7C6                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B5D8  
               __end_of_calc_model_data 5DFC                     __end_of_help_button B4CC  
       __end_of_eaDogM_WriteStringAtPos B570                     __end_of_BVSOC_TABLE FB37  
                             ___asfladd AAC2                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 0826                 __end_of_DMA1_Initialize ABA4  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler B956                           __pcstackBANK0 00D7  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 925A                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize BC8C                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FBC7  
                      _convert_adc_data A25E                               _calc_bsoc 4326  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9D3E  
                __end_of_DMA1_DMAOR_ISR BDAE                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize AF1C  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize A6FA  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set BDE2  
                         __pmediumconst FA66                               __ptext100 59B0  
                             __ptext101 BDE8                               __ptext110 B83E  
                             __ptext102 BB1A                               __ptext111 B0F2  
                             __ptext103 8398                               __ptext120 BC76  
                             __ptext112 B866                               __ptext104 B210  
                             __ptext121 BC8C                               __ptext113 B74C  
                             __ptext105 3B6A                               __ptext130 AEC2  
                             __ptext122 BCB8                               __ptext114 B88E  
                             __ptext106 3340                               __ptext131 AB3A  
                             __ptext123 A6FA                               __ptext115 B13A  
                             __ptext107 B060                               __ptext140 9F10  
                             __ptext132 BD76                               __ptext124 BCA2  
                             __ptext116 B8B6                               __ptext108 AE08  
                             __ptext141 B35C                               __ptext133 ABA4  
                             __ptext125 AC7A                               __ptext117 B182  
                             __ptext109 B816                               __ptext150 BDF8  
                             __ptext142 BA68                               __ptext134 B956  
                             __ptext126 BDCE                               __ptext118 B8DE  
                             __ptext151 4326                               __ptext143 B4CC  
                             __ptext135 B97E                               __ptext127 B5A4  
                             __ptext119 BC5E                               __ptext160 AA40  
                             __ptext152 AFC0                               __ptext144 8554  
                             __ptext136 B41C                               __ptext128 B906  
                             __ptext161 BDFC                               __ptext153 BD80  
                             __ptext145 BD0E                               __ptext137 BA44  
                             __ptext129 B92E                               __ptext170 BC2C  
                             __ptext162 BDFE                               __ptext154 AAC2  
                             __ptext146 BD48                               __ptext138 BDF6  
                             __ptext171 BAD4                               __ptext163 AC10  
                             __ptext155 BD58                               __ptext147 8E64  
                             __ptext139 9114                               __ptext172 B012  
                             __ptext164 B9A8                               __ptext156 BAB0  
                             __ptext148 B39C                               __ptext173 BD68  
                             __ptext165 BBD6                               __ptext157 BDFA  
                             __ptext149 BA8C                               __ptext174 BD8C  
                             __ptext166 B9D0                               __ptext158 BDF0  
                             __ptext175 BD98                               __ptext167 B720  
                             __ptext159 B6F4                               __ptext176 BDA4  
                             __ptext168 B9F8                               __ptext177 0000  
                             __ptext169 BB5C                               _hid_input A820  
                    __end_of_StartTimer B31C                      _set_load_relay_one BCEE  
                    _set_load_relay_two BCDE                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B6F4                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6E76  
               __size_of_get_raw_result 0022                          __size_of_fabsf 00AE  
                             _init_bsoc 7B38                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8398  
                           _hid_display 9B4C                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize AC7A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR BD58  
                              _INT1_ISR B41C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BA8C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BB9A  
                   __size_of_update_lcd 0110                             _help_button B494  
                              _TMR3_ISR 8E64                             _BVSOC_TABLE FA67  
                              _TMR5_ISR 9F10                                _TMR6_ISR BC2C  
                             _port_data 04FF                     __size_of_static_soc 003E  
                             _vfpfcnvrt 2394                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BA68  
                            _ADCON0bits 003EF8                      __end_of_check_help 8194  
                             _start_lcd BDE2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack BAD4  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc BDE8                        _set_display_info BBB8  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A006  
                             copy_data1 A02C                               copy_data2 A04E  
              _INT0_SetInterruptHandler B92E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler B83E             _UART2_SetTxInterruptHandler B816  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BBF4                            _send_lcd_cmd B79E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler BDFE                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch B6F2  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR BDA2  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8194  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand BD3A  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 B7C6                                __ptext11 7B38  
                              __ptext20 BDAE                                __ptext12 95EC  
                              __ptext21 BDD6                                __ptext13 9B4C  
                              __ptext30 9A42                                __ptext22 BDB6  
                              __ptext14 A820                                __ptext31 B698  
                              __ptext23 BCDE                                __ptext15 B6C6  
                              __ptext40 BDE2                                __ptext32 B504  
                              __ptext24 BCEE                                __ptext16 6E76  
                              __ptext41 A78E                                __ptext33 9932  
                              __ptext25 BD2C                                __ptext17 B45A  
                              __ptext50 6522                                __ptext42 6B8A  
                              __ptext34 B53A                                __ptext26 A25E  
                              __ptext18 ACE0                                __ptext51 925A  
                              __ptext43 AD44                                __ptext35 AF1C  
                              __ptext27 BA20                                __ptext19 BCCC  
                              __ptext60 86F4                                __ptext52 8A10  
                              __ptext44 A3C4                                __ptext36 BBF4  
                              __ptext28 7F82                                __ptext61 8B90  
                              __ptext53 7D62                                __ptext45 2394  
                              __ptext37 AE68                                __ptext29 939A  
                              __ptext70 A8B0                                __ptext62 B0AA  
                              __ptext54 7146                                __ptext46 5DFC  
                              __ptext38 A51A                                __ptext71 981E  
                              __ptext63 A19A                                __ptext55 0000  
                              __ptext47 A938                                __ptext39 BDDC  
                              __ptext80 BB9A                                __ptext72 A5C0  
                              __ptext64 9706                                __ptext56 A9BC  
                              __ptext48 B608                                __ptext81 BCFE  
                              __ptext73 A662                                __ptext65 8FC6  
                              __ptext57 B638                                __ptext49 B256  
                              __ptext90 BDC6                                __ptext82 BBB8  
                              __ptext74 94C8                                __ptext66 5530  
                              __ptext58 A0C6                                __ptext91 B31C  
                              __ptext83 BC46                                __ptext75 BC10  
                              __ptext67 B1CA                                __ptext59 61B6  
                              __ptext92 888A                                __ptext84 BD3A  
                              __ptext76 A470                                __ptext68 78F8  
                              __ptext93 A316                                __ptext85 B29A  
                              __ptext77 7684                                __ptext69 7404  
                              __ptext94 501C                                __ptext86 B494  
                              __ptext78 AF6E                                __ptext95 ADA6  
                              __ptext87 B7EE                                __ptext79 B668  
                              __ptext96 BAF8                                __ptext88 B2DC  
                              __ptext97 8194                                __ptext89 BDBE  
                              __ptext98 4AA2                                __ptext99 8D02  
                      __size_of_isupper 0030                                us1152999 7158  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1083999 554A                                us1164999 6588  
                              us1173999 5E7C                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A470  
                  __end_of_Volts_to_SOC 9706                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1150  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B608                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion BCDE                                _spi_link 0060  
                              _wdtdelay AE68              __end_of_UART2_Transmit_ISR B74C  
                              _spinners 9E28                                _vfprintf A3C4  
              __end_of_convert_adc_data A316              __end_of_PWM8_LoadDutyValue B2DC  
  __end_of_TMR3_DefaultInterruptHandler BDFA   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler BDF8    __end_of_INT1_DefaultInterruptHandler BDF8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler BDF6  
                    _send_port_data_dma AFC0                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BAF8                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set BDDC  
                    _EXT_INT_Initialize B5A4    __end_of_TMR6_DefaultInterruptHandler B060  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B012  
  __end_of_ADCC_DefaultInterruptHandler BDFE   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler BDFC                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B776  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help BD0E  
                 __end_of_calc_ror_data 8A10                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString A5C0                   __end_of_mode_lamp_dim BC5E  
               __end_of_adc_int_handler BE00                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 9A42  
                _uart2TxBufferRemaining 0044                      __end_of_static_soc B41A  
                    __end_of_start_bsoc BB3C                          _FVR_Initialize BDCE  
                __end_of_get_raw_result BB1A                        _send_lcd_cmd_dma AF1C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00C6  
      __end_of_INT1_SetInterruptHandler B92E               __size_of_UART1_Initialize 0048  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B79E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR BDF6  
        __end_of_PIN_MANAGER_Initialize A78E               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 94C8                 _eaDogM_WriteStringAtPos B53A  
                         _get_vterm_ptr B698                          _check_adc_scan BDB6  
             __size_of_UART2_Initialize 0060  
